{
"links": [{"source": "mbostock_1256572", "target": "sivartravis_84553799f7a1a17548e1", "value": 562}, {"source": "mbostock_1256572", "target": "sivartravis_4279eb6fff6a7d47ca74", "value": 562}, {"source": "domhorvath_5413cfc6b6cd59eb0e1544a990ba3f74", "target": "sivartravis_84553799f7a1a17548e1", "value": 562}, {"source": "domhorvath_5413cfc6b6cd59eb0e1544a990ba3f74", "target": "sivartravis_4279eb6fff6a7d47ca74", "value": 562}, {"source": "domhorvath_5413cfc6b6cd59eb0e1544a990ba3f74", "target": "mbostock_1256572", "value": 562}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "renecnielsen_777884b900d913917ec3", "value": 354}, {"source": "emeeks_a0b5a95c999628547494", "target": "renecnielsen_d44783b9a0a12f3ccc3a", "value": 88}, {"source": "emeeks_068ef3e4106e155467a3", "target": "wcjohnson11_7a0309cc11757a3e5b3e", "value": 209}, {"source": "renecnielsen_6ec52e5a9b88f7ca86ca", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 153}, {"source": "CBasis_bc51bd85d8045fe0bc470250daf8d0cd", "target": "jalapic_af63041b6b5edf373fa3", "value": 198}, {"source": "CBasis_9bae6529ccab4b902a50", "target": "jalapic_af63041b6b5edf373fa3", "value": 198}, {"source": "ImSraone_216ee9834f42bdfaffae", "target": "msqr_3202712", "value": 196}, {"source": "eesur_be2abfb3155a38be4de4", "target": "renecnielsen_46c782526409787e0d44", "value": 205}, {"source": "eesur_ee8d0ab88229d0e07f7f", "target": "renecnielsen_99ee17e86c184a616c7c", "value": 160}, {"source": "nivas8292_222939d7c74c5de09387", "target": "ptvans_461585105bdbc14b4e85", "value": 137}, {"source": "WillTurman_4631136", "target": "dukevis_84ed35ed91f857ec3d79", "value": 152}, {"source": "renecnielsen_02dde03ccff6748520e1", "target": "syntagmatic_4092944", "value": 167}, {"source": "malcolm-decuire_95314ea75aed1c988f7c", "target": "wcjohnson11_7ebb3f3a28e403745856", "value": 128}, {"source": "d3noob_8375092", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 124}, {"source": "emeeks_c8ef9d67acc044b368ef", "target": "wcjohnson11_7ebb3f3a28e403745856", "value": 127}, {"source": "emeeks_c8ef9d67acc044b368ef", "target": "malcolm-decuire_95314ea75aed1c988f7c", "value": 127}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "d3noob_e1aa61856118edfa624d", "value": 142}, {"source": "Jay-Oh-eN_9337d41b59b2bcee149004e811d5b266", "target": "balajikvijayan_f7b24a7a56e5caa479d2", "value": 98}, {"source": "git-ashish_8959381", "target": "xaranke_9ada4c74a87b57ae7308", "value": 101}, {"source": "emeeks_02d6acaed240ba0a504e", "target": "renecnielsen_b377db6afcc346d63929", "value": 82}, {"source": "gka_17ee676dc59aa752b4e6", "target": "nstrayer_5f8248aa0a3a11e9da54", "value": 58}, {"source": "enjalot_8be32e6f1f32920ba841", "target": "malcolm-decuire_9f8e98a2481f61287ca3", "value": 69}, {"source": "malcolm-decuire_9f8e98a2481f61287ca3", "target": "micahstubbs_77e765beffccb6fe1648", "value": 64}, {"source": "enjalot_8be32e6f1f32920ba841", "target": "micahstubbs_77e765beffccb6fe1648", "value": 64}, {"source": "emeeks_905bb4f399e0855e08fe", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 103}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "nguyenbq_a350280a02c8105529d0", "value": 69}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 69}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "nguyenbq_a350280a02c8105529d0", "value": 69}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 69}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "nguyenbq_a350280a02c8105529d0", "value": 69}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 69}, {"source": "enjalot_1fd196cd99f8d58a56d3", "target": "malcolm-decuire_9f8e98a2481f61287ca3", "value": 64}, {"source": "dukevis_6768900", "target": "ufenegga_d5dd49363a42fb2d5a07", "value": 139}, {"source": "enjalot_1fd196cd99f8d58a56d3", "target": "micahstubbs_77e765beffccb6fe1648", "value": 63}, {"source": "boeric_3b57a788a4b96e1af211", "target": "seemantk_3112c37d079d6fdce4be", "value": 86}, {"source": "emeeks_abcc82cc61c52fc47b19", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 95}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "nguyenbq_a350280a02c8105529d0", "value": 66}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 66}, {"source": "boeric_e16ad218bc241dfd2d6e", "target": "devssunil_5485fa28d3fdd422930b53ab330f96e3", "value": 83}, {"source": "eesur_a4679ee453aa9357977c", "target": "espinielli_347a69f480fcd1e40db43d782439e623", "value": 69}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 76}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 76}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "mansfimx_27edd1f7c316218285e5", "value": 76}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 76}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "mansfimx_27edd1f7c316218285e5", "value": 76}, {"source": "jasondavies_0051a06829e72b423ba9", "target": "wboykinm_4716561", "value": 57}, {"source": "nguyenbq_a350280a02c8105529d0", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 62}, {"source": "nguyenbq_85a4c204a61fa6407aed", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 62}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 61}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "nguyenbq_a350280a02c8105529d0", "value": 62}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 62}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 61}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "nguyenbq_a350280a02c8105529d0", "value": 62}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 62}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "hungvietdo_28d434d3818db4fbe369", "value": 61}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 62}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "hungvietdo_28d434d3818db4fbe369", "value": 62}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 62}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "hungvietdo_28d434d3818db4fbe369", "value": 62}, {"source": "d3noob_4414436", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 61}, {"source": "d3noob_4414436", "target": "nguyenbq_a350280a02c8105529d0", "value": 62}, {"source": "d3noob_4414436", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 62}, {"source": "d3noob_4414436", "target": "hungvietdo_28d434d3818db4fbe369", "value": 61}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 62}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "hungvietdo_28d434d3818db4fbe369", "value": 62}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 61}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "nguyenbq_a350280a02c8105529d0", "value": 62}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 62}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "hungvietdo_28d434d3818db4fbe369", "value": 61}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "d3noob_b3ff6ae1c120eea654b5", "value": 61}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "d3noob_8dc93bce7e7200ab487d", "value": 62}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "d3noob_464c92429ac05c6a19a1", "value": 62}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "d3noob_4414436", "value": 61}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "d3noob_38744a17f9c0141bcd04", "value": 62}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 62}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "hungvietdo_28d434d3818db4fbe369", "value": 62}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "d3noob_a22c42db65eb00d4e369", "value": 62}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 68}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "mansfimx_27edd1f7c316218285e5", "value": 68}, {"source": "jasondavies_0051a06829e72b423ba9", "target": "wboykinm_7388233", "value": 63}, {"source": "benjchristensen_2657838", "target": "phoebebright_4124200", "value": 66}, {"source": "explunit_e9efb830439247eea1be", "target": "jshanley_86e3bc1b231e9772b16d", "value": 65}, {"source": "explunit_ab8cf15534f7fec5ac6d", "target": "jshanley_86e3bc1b231e9772b16d", "value": 65}, {"source": "boeric_e16ad218bc241dfd2d6e", "target": "devssunil_ce488bb628eb9e4468521b001f027a55", "value": 66}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 55}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "hungvietdo_28d434d3818db4fbe369", "value": 55}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "d3noob_ccdcb7673cdb3a796e13", "value": 55}, {"source": "eesur_5fbda7f410d31da35e42", "target": "renecnielsen_00ece1121142dddee837", "value": 57}, {"source": "devssunil_ce488bb628eb9e4468521b001f027a55", "target": "nguyenbq_7988fb7f4cabdf119637e9cf7b186499", "value": 53}, {"source": "jwarburg_357d91975a97e9f68208", "target": "tmcw_3426132", "value": 55}, {"source": "larskotthoff_3a49a64c7a1810d8ff02", "target": "mbostock_3888852", "value": 71}, {"source": "malcolm-decuire_95314ea75aed1c988f7c", "target": "wcjohnson11_7a0309cc11757a3e5b3e", "value": 60}, {"source": "jasondavies_0051a06829e72b423ba9", "target": "tmcw_5147590", "value": 59}, {"source": "iblind_5a51e5ac4ee2cf024e34", "target": "mbostock_1305111", "value": 35}, {"source": "espinielli_17f6644f79685c42eae5", "target": "rveciana_2986e55a01c7008d4b5b", "value": 60}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "nguyenbq_a350280a02c8105529d0", "value": 51}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 51}, {"source": "emeeks_2090bc8489a662c2e84d", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 61}, {"source": "d3noob_8952219", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 58}, {"source": "emeeks_e1e661f4696af856e017", "target": "renecnielsen_682ab33dbf139214df59", "value": 88}, {"source": "emeeks_790788687df9e560e288", "target": "mpmckenna8_23751a2094c7db90575a", "value": 59}, {"source": "emeeks_a950399780ca90589f59", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 91}, {"source": "enjalot_ce9a88c24e5e11563e06", "target": "malcolm-decuire_9f8e98a2481f61287ca3", "value": 49}, {"source": "emeeks_c8ef9d67acc044b368ef", "target": "wcjohnson11_7a0309cc11757a3e5b3e", "value": 59}, {"source": "emeeks_068ef3e4106e155467a3", "target": "wcjohnson11_7ebb3f3a28e403745856", "value": 59}, {"source": "emeeks_068ef3e4106e155467a3", "target": "malcolm-decuire_95314ea75aed1c988f7c", "value": 59}, {"source": "enjalot_ce9a88c24e5e11563e06", "target": "micahstubbs_77e765beffccb6fe1648", "value": 48}, {"source": "bewest_4260548", "target": "tmcw_5147590", "value": 50}, {"source": "d3noob_fa0f16e271cb191ae85f", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 43}, {"source": "d3noob_8323795", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 43}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 53}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "mansfimx_27edd1f7c316218285e5", "value": 53}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "jdarling_06019d16cb5fd6795edf", "value": 53}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "jdarling_06019d16cb5fd6795edf", "value": 53}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "jdarling_06019d16cb5fd6795edf", "value": 53}, {"source": "emeeks_e1e661f4696af856e017", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 79}, {"source": "espinielli_4d17fa15a7a5084e217992f985fba484", "target": "rveciana_5181105", "value": 60}, {"source": "emeeks_433a9b04f82a1c78af4b", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 64}, {"source": "pnavarrc_4142064", "target": "tmcw_3426132", "value": 42}, {"source": "jwarburg_357d91975a97e9f68208", "target": "pnavarrc_4142064", "value": 42}, {"source": "emeeks_37c28b6ff0e01f69b4cd", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 70}, {"source": "emeeks_a950399780ca90589f59", "target": "renecnielsen_682ab33dbf139214df59", "value": 81}, {"source": "tmcw_5147590", "target": "wboykinm_4716561", "value": 32}, {"source": "d3noob_5886992", "target": "git-ashish_e7182a82862071b405b5", "value": 45}, {"source": "git-ashish_8959381", "target": "timelyportfolio_79350d7475a5709b051e", "value": 36}, {"source": "d3noob_8952219", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 45}, {"source": "d3noob_8952219", "target": "mansfimx_27edd1f7c316218285e5", "value": 45}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "d3noob_8952219", "value": 45}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "d3noob_8952219", "value": 45}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "d3noob_8952219", "value": 45}, {"source": "bewest_4260548", "target": "jasondavies_0051a06829e72b423ba9", "value": 38}, {"source": "sivartravis_84553799f7a1a17548e1", "target": "timelyportfolio_3106445", "value": 49}, {"source": "sivartravis_4279eb6fff6a7d47ca74", "target": "timelyportfolio_3106445", "value": 49}, {"source": "mbostock_1256572", "target": "timelyportfolio_3106445", "value": 49}, {"source": "domhorvath_5413cfc6b6cd59eb0e1544a990ba3f74", "target": "timelyportfolio_3106445", "value": 49}, {"source": "d3noob_e1aa61856118edfa624d", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 44}, {"source": "d3noob_e1aa61856118edfa624d", "target": "hungvietdo_28d434d3818db4fbe369", "value": 44}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 44}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "hungvietdo_28d434d3818db4fbe369", "value": 44}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "d3noob_b3ff6ae1c120eea654b5", "value": 44}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "d3noob_4414436", "value": 44}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "d3noob_e1aa61856118edfa624d", "value": 44}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "MattDionis_e612bc8d7c7857f2c5ca", "value": 44}, {"source": "d3noob_8326869", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 40}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 42}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 42}, {"source": "d3noob_8952219", "target": "jdarling_06019d16cb5fd6795edf", "value": 43}, {"source": "dmijalkovic_52fb07194d4b2988cafb", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 43}, {"source": "dmijalkovic_52fb07194d4b2988cafb", "target": "nguyenbq_a350280a02c8105529d0", "value": 43}, {"source": "dmijalkovic_52fb07194d4b2988cafb", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 43}, {"source": "dmijalkovic_52fb07194d4b2988cafb", "target": "hungvietdo_28d434d3818db4fbe369", "value": 43}, {"source": "dmijalkovic_3385b8e7269b5b345558", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 43}, {"source": "dmijalkovic_3385b8e7269b5b345558", "target": "nguyenbq_a350280a02c8105529d0", "value": 43}, {"source": "dmijalkovic_3385b8e7269b5b345558", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 43}, {"source": "dmijalkovic_3385b8e7269b5b345558", "target": "hungvietdo_28d434d3818db4fbe369", "value": 43}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 43}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 43}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 43}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 43}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 43}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 43}, {"source": "d3noob_4414436", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 42}, {"source": "d3noob_4414436", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 42}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 43}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 43}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 43}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 43}, {"source": "d3noob_e1aa61856118edfa624d", "target": "nguyenbq_a350280a02c8105529d0", "value": 42}, {"source": "d3noob_e1aa61856118edfa624d", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 42}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "nguyenbq_a350280a02c8105529d0", "value": 42}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 42}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "d3noob_a22c42db65eb00d4e369", "value": 42}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "d3noob_8dc93bce7e7200ab487d", "value": 42}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "d3noob_464c92429ac05c6a19a1", "value": 42}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "d3noob_38744a17f9c0141bcd04", "value": 42}, {"source": "CBasis_6a76935b609b0b2a38596c46fb690bba", "target": "fdaudens_22905918f5aec406f773", "value": 56}, {"source": "d3noob_e1aa61856118edfa624d", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 47}, {"source": "d3noob_e1aa61856118edfa624d", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 47}, {"source": "andrewxhill_4602320", "target": "mbostock_3888852", "value": 56}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 47}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 47}, {"source": "espinielli_4d17fa15a7a5084e217992f985fba484", "target": "rveciana_5181095", "value": 53}, {"source": "emeeks_a1e48992be56681e3f93", "target": "georgemurphy_2ab077a1a795efeab2c8", "value": 45}, {"source": "andrewxhill_4602320", "target": "larskotthoff_3a49a64c7a1810d8ff02", "value": 56}, {"source": "mbostock_1346395", "target": "scresawn_e8b21fc35bbc9189d031b9fdfb2b9b4c", "value": 49}, {"source": "tmcw_5147590", "target": "wboykinm_7388233", "value": 46}, {"source": "devssunil_5485fa28d3fdd422930b53ab330f96e3", "target": "nguyenbq_7988fb7f4cabdf119637e9cf7b186499", "value": 42}, {"source": "emeeks_0d69f4a8c717d5548977", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 53}, {"source": "renecnielsen_b9a0c2eafb1e655e0680", "target": "syntagmatic_5123745", "value": 49}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 36}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 36}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 36}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 36}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 36}, {"source": "espinielli_17f6644f79685c42eae5", "target": "rveciana_9433ecc1ec82317dcd76", "value": 40}, {"source": "bewest_4260548", "target": "wboykinm_4716561", "value": 31}, {"source": "mbostock_3887235", "target": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "value": 48}, {"source": "mbostock_3887235", "target": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "value": 48}, {"source": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "target": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "value": 48}, {"source": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "target": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "value": 48}, {"source": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "target": "mbostock_3887235", "value": 48}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "value": 48}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "value": 48}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "mbostock_3887235", "value": 48}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "value": 48}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 34}, {"source": "emeeks_2792df20a4b490c3e3ff", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 56}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "xaranke_b956ee7215b7b50bc78a", "value": 43}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "value": 49}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "value": 49}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "mbostock_3887235", "value": 49}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "value": 49}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "value": 49}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "value": 49}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "mbostock_3887235", "value": 49}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "value": 49}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "value": 49}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "value": 49}, {"source": "emeeks_37dd76398240ab29abd8", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 49}, {"source": "timelyportfolio_79350d7475a5709b051e", "target": "xaranke_9ada4c74a87b57ae7308", "value": 50}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "d3noob_ccdcb7673cdb3a796e13", "value": 31}, {"source": "mbostock_3887193", "target": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "value": 44}, {"source": "mbostock_3887193", "target": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "value": 44}, {"source": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "target": "mbostock_3887193", "value": 44}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "mbostock_3887193", "value": 44}, {"source": "andrewxhill_4611969", "target": "mbostock_3888852", "value": 46}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "mbostock_3887193", "value": 45}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "mbostock_3887193", "value": 45}, {"source": "renecnielsen_02dde03ccff6748520e1", "target": "syntagmatic_4076122", "value": 26}, {"source": "andrewxhill_4611969", "target": "larskotthoff_3a49a64c7a1810d8ff02", "value": 45}, {"source": "emeeks_433a9b04f82a1c78af4b", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 49}, {"source": "bewest_4260548", "target": "wboykinm_7388233", "value": 32}, {"source": "JaapSuter_7251163", "target": "mapearlson_116aa7e159d22d53f6d0", "value": 43}, {"source": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "target": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "value": 45}, {"source": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "target": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "value": 45}, {"source": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "target": "mbostock_3887235", "value": 45}, {"source": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "target": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "value": 45}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "value": 45}, {"source": "YasufumiSaito_35b59c0b074cac700798", "target": "micahstubbs_77e765beffccb6fe1648", "value": 32}, {"source": "YasufumiSaito_35b59c0b074cac700798", "target": "malcolm-decuire_9f8e98a2481f61287ca3", "value": 32}, {"source": "YasufumiSaito_35b59c0b074cac700798", "target": "enjalot_8be32e6f1f32920ba841", "value": 32}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 29}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 29}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "value": 43}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "value": 43}, {"source": "mapearlson_116aa7e159d22d53f6d0", "target": "steveharoz_0638d230c133da1de385", "value": 41}, {"source": "emeeks_433a9b04f82a1c78af4b", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 48}, {"source": "emeeks_37c28b6ff0e01f69b4cd", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 43}, {"source": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "target": "mbostock_3887193", "value": 41}, {"source": "emeeks_c970c9ee3e242e90004b", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 42}, {"source": "ZJONSSON_3918369", "target": "jdarling_06019d16cb5fd6795edf", "value": 36}, {"source": "Jay-Oh-eN_522d3842f27e2581f0d9", "target": "margeigh_9d0251925a6bf6409533", "value": 44}, {"source": "Jay-Oh-eN_522d3842f27e2581f0d9", "target": "margeigh_5cc8033ab729fbd9a4c9", "value": 45}, {"source": "Jay-Oh-eN_522d3842f27e2581f0d9", "target": "margeigh_201b1e8e5a25dfcf76d4", "value": 44}, {"source": "JaapSuter_7251163", "target": "steveharoz_0638d230c133da1de385", "value": 37}, {"source": "mapearlson_116aa7e159d22d53f6d0", "target": "mbostock_3887193", "value": 37}, {"source": "ecerulm_f0a36710e3ccbf0cfc01", "target": "larskotthoff_085bb57f710aa417af41", "value": 30}, {"source": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "target": "mapearlson_116aa7e159d22d53f6d0", "value": 39}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 30}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "mansfimx_27edd1f7c316218285e5", "value": 30}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "jdarling_06019d16cb5fd6795edf", "value": 30}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 30}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 30}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 30}, {"source": "JaapSuter_7251163", "target": "mbostock_3887193", "value": 37}, {"source": "JaapSuter_7251163", "target": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "value": 39}, {"source": "mapearlson_116aa7e159d22d53f6d0", "target": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "value": 37}, {"source": "mapearlson_116aa7e159d22d53f6d0", "target": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "value": 37}, {"source": "mapearlson_116aa7e159d22d53f6d0", "target": "mbostock_3887235", "value": 37}, {"source": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "target": "mapearlson_116aa7e159d22d53f6d0", "value": 37}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "mapearlson_116aa7e159d22d53f6d0", "value": 37}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "mapearlson_116aa7e159d22d53f6d0", "value": 37}, {"source": "JaapSuter_7251163", "target": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "value": 37}, {"source": "JaapSuter_7251163", "target": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "value": 37}, {"source": "JaapSuter_7251163", "target": "mbostock_3887235", "value": 37}, {"source": "JaapSuter_7251163", "target": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "value": 37}, {"source": "JaapSuter_7251163", "target": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "value": 37}, {"source": "JaapSuter_7251163", "target": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "value": 37}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "mapearlson_116aa7e159d22d53f6d0", "value": 37}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "JaapSuter_7251163", "value": 37}, {"source": "ZJONSSON_3918369", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 36}, {"source": "ZJONSSON_3918369", "target": "mansfimx_27edd1f7c316218285e5", "value": 36}, {"source": "ZJONSSON_3918369", "target": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "value": 36}, {"source": "ZJONSSON_3918369", "target": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "value": 36}, {"source": "mbostock_32bd93b1cc0fbccc9bf9", "target": "peterssonjonas_920d9352f2b9fde14e1c", "value": 40}, {"source": "ZJONSSON_3918369", "target": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "value": 36}, {"source": "leeannoneal_cce53e0f261a99e51cf3", "target": "mbostock_31ec1817b2be2660c453", "value": 39}, {"source": "espinielli_715229536cdba1fdac9a", "target": "rveciana_4bcc5750c776c22ffda6", "value": 56}, {"source": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "target": "steveharoz_0638d230c133da1de385", "value": 37}, {"source": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "target": "steveharoz_0638d230c133da1de385", "value": 36}, {"source": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "target": "steveharoz_0638d230c133da1de385", "value": 36}, {"source": "mbostock_3887235", "target": "steveharoz_0638d230c133da1de385", "value": 36}, {"source": "mbostock_3887193", "target": "steveharoz_0638d230c133da1de385", "value": 36}, {"source": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "target": "steveharoz_0638d230c133da1de385", "value": 36}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 24}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "mansfimx_27edd1f7c316218285e5", "value": 24}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "value": 24}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "value": 24}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "value": 24}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "steveharoz_0638d230c133da1de385", "value": 36}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "steveharoz_0638d230c133da1de385", "value": 36}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "steveharoz_0638d230c133da1de385", "value": 36}, {"source": "david4096_5819181", "target": "rveciana_170a76b8dc1f9cfd8b2d", "value": 32}, {"source": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "target": "mbostock_3887193", "value": 37}, {"source": "emeeks_c970c9ee3e242e90004b", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 38}, {"source": "emeeks_37c28b6ff0e01f69b4cd", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 42}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "jdarling_06019d16cb5fd6795edf", "value": 23}, {"source": "emeeks_905bb4f399e0855e08fe", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 42}, {"source": "boeric_e16ad218bc241dfd2d6e", "target": "nguyenbq_7988fb7f4cabdf119637e9cf7b186499", "value": 31}, {"source": "LeeMendelowitz_11383724", "target": "biovisualize_40ce9f6886ee5011e536", "value": 15}, {"source": "GerHobbelt_1965462", "target": "lgrammel_1963983", "value": 40}, {"source": "mapearlson_116aa7e159d22d53f6d0", "target": "tmcw_4179511", "value": 32}, {"source": "Jamestiberiuseanes_e1af6e917aab755c628f", "target": "dunlapea_5391d815c7b36039adafde7b93750b0a", "value": 35}, {"source": "emeeks_86da8f19e58ccb668750", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 40}, {"source": "hsuttong_c293659a897a3f0f5092", "target": "lifeofmle_862ce2e7ef47e1e1a310", "value": 19}, {"source": "emeeks_790788687df9e560e288", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 40}, {"source": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "target": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "value": 33}, {"source": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "target": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "value": 33}, {"source": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "target": "mbostock_3887235", "value": 33}, {"source": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "target": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "value": 33}, {"source": "anatolyg_25fa3e51da9a1ac22e02", "target": "lifeofmle_862ce2e7ef47e1e1a310", "value": 19}, {"source": "anatolyg_25fa3e51da9a1ac22e02", "target": "hsuttong_c293659a897a3f0f5092", "value": 19}, {"source": "JaapSuter_7251163", "target": "tmcw_4179511", "value": 31}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "value": 33}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 23}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "vjpgo_4689130", "value": 22}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "vjpgo_4689085", "value": 22}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "vjpgo_4687681", "value": 22}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "vjpgo_4687662", "value": 22}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "vjpgo_4687652", "value": 22}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "vjpgo_4687640", "value": 22}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "vjpgo_4687407", "value": 22}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "wrobstory_7630654", "value": 28}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "wrobstory_7630406", "value": 28}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "wrobstory_7630011", "value": 28}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "wrobstory_7629900", "value": 28}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "wrobstory_7612013", "value": 28}, {"source": "d3noob_8952219", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 25}, {"source": "clhenrick_dd664d262a4c3fbe02b9", "target": "wboykinm_6a14e910b5738c89e239", "value": 26}, {"source": "clhenrick_20fd8f959b965d647f83", "target": "wboykinm_6a14e910b5738c89e239", "value": 26}, {"source": "ZJONSSON_3918369", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 28}, {"source": "steveharoz_0638d230c133da1de385", "target": "tmcw_4179511", "value": 31}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "michalskop_6cdd572b5f618a11e966", "value": 27}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "value": 32}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "value": 32}, {"source": "ZJONSSON_3918369", "target": "d3noob_e1aa61856118edfa624d", "value": 24}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "ZJONSSON_3918369", "value": 24}, {"source": "mbostock_3887193", "target": "tmcw_4179511", "value": 30}, {"source": "emeeks_e6f72fbca42e77be0eb3", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 33}, {"source": "emeeks_aea3c7fc1acc0eca4d44", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 33}, {"source": "emeeks_abcc82cc61c52fc47b19", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 36}, {"source": "emeeks_066e20c1ce5008f884eb", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 38}, {"source": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "target": "tmcw_4179511", "value": 30}, {"source": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "target": "tmcw_4179511", "value": 30}, {"source": "mbostock_3887235", "target": "tmcw_4179511", "value": 30}, {"source": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "target": "tmcw_4179511", "value": 30}, {"source": "emeeks_37c28b6ff0e01f69b4cd", "target": "mpmckenna8_23751a2094c7db90575a", "value": 35}, {"source": "dustinlarimer_5701438", "target": "weiglemc_bdc0474429e6567bc320", "value": 26}, {"source": "dustinlarimer_5701438", "target": "weiglemc_6185069", "value": 26}, {"source": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "target": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "value": 34}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "tmcw_4179511", "value": 30}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "tmcw_4179511", "value": 30}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "tmcw_4179511", "value": 30}, {"source": "emeeks_37dd76398240ab29abd8", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 40}, {"source": "emeeks_433a9b04f82a1c78af4b", "target": "renecnielsen_682ab33dbf139214df59", "value": 42}, {"source": "ZJONSSON_3918369", "target": "renecnielsen_777884b900d913917ec3", "value": 29}, {"source": "ZJONSSON_3918369", "target": "d3noob_8952219", "value": 28}, {"source": "StewartNoyce_8699346", "target": "larskotthoff_085bb57f710aa417af41", "value": 24}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "ZJONSSON_3918369", "value": 29}, {"source": "ZJONSSON_3918369", "target": "wrobstory_7630654", "value": 27}, {"source": "ZJONSSON_3918369", "target": "wrobstory_7630406", "value": 27}, {"source": "ZJONSSON_3918369", "target": "wrobstory_7630011", "value": 27}, {"source": "ZJONSSON_3918369", "target": "wrobstory_7629900", "value": 27}, {"source": "ZJONSSON_3918369", "target": "wrobstory_7612013", "value": 27}, {"source": "emeeks_becd7b34d93b2d80d828", "target": "micahstubbs_ce9602e5b308f3bd53f5", "value": 32}, {"source": "emeeks_5ada6a7d00115f0e2f1e", "target": "micahstubbs_ce9602e5b308f3bd53f5", "value": 32}, {"source": "camio_5087116", "target": "ufenegga_366344909b1d79e327b9", "value": 47}, {"source": "emeeks_8855733967174fe4b1b4", "target": "hugolpz_09c837f43dc4b3962be9", "value": 18}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "hunzy_11110940", "value": 22}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 21}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "d3noob_8952219", "value": 21}, {"source": "emeeks_7d5925cb7d9721c60360", "target": "mpmckenna8_23751a2094c7db90575a", "value": 32}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "wrobstory_7630654", "value": 26}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "wrobstory_7630406", "value": 26}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "wrobstory_7630011", "value": 26}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "wrobstory_7629900", "value": 26}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "wrobstory_7612013", "value": 26}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 26}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "wrobstory_7630654", "value": 26}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "wrobstory_7630406", "value": 26}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "wrobstory_7630011", "value": 26}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "wrobstory_7629900", "value": 26}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "wrobstory_7612013", "value": 26}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "michalskop_6cdd572b5f618a11e966", "value": 26}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "wrobstory_7630654", "value": 26}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "wrobstory_7630406", "value": 26}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "wrobstory_7630011", "value": 26}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "wrobstory_7629900", "value": 26}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "wrobstory_7612013", "value": 26}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "michalskop_6cdd572b5f618a11e966", "value": 26}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "wrobstory_7630654", "value": 26}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "wrobstory_7630406", "value": 26}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "wrobstory_7630011", "value": 26}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "wrobstory_7629900", "value": 26}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "wrobstory_7612013", "value": 26}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "michalskop_6cdd572b5f618a11e966", "value": 26}, {"source": "StewartNoyce_8699346", "target": "ecerulm_f0a36710e3ccbf0cfc01", "value": 25}, {"source": "emeeks_066e20c1ce5008f884eb", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 35}, {"source": "d3noob_e1aa61856118edfa624d", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 22}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "wrobstory_7630654", "value": 26}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "wrobstory_7630406", "value": 26}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "wrobstory_7630011", "value": 26}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "wrobstory_7629900", "value": 26}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "wrobstory_7612013", "value": 26}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "michalskop_6cdd572b5f618a11e966", "value": 26}, {"source": "YasufumiSaito_35b59c0b074cac700798", "target": "enjalot_1fd196cd99f8d58a56d3", "value": 29}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 22}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "d3noob_8952219", "value": 22}, {"source": "emeeks_86da8f19e58ccb668750", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 35}, {"source": "emeeks_790788687df9e560e288", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 34}, {"source": "emeeks_7d5925cb7d9721c60360", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 29}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 35}, {"source": "emeeks_ffb10b231ec605c1dde8", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 30}, {"source": "emeeks_f8c0220c54ec8347ea95", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 30}, {"source": "emeeks_abcc82cc61c52fc47b19", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 31}, {"source": "emeeks_abcc82cc61c52fc47b19", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 35}, {"source": "emeeks_905bb4f399e0855e08fe", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 31}, {"source": "emeeks_86da8f19e58ccb668750", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 32}, {"source": "emeeks_86da8f19e58ccb668750", "target": "mpmckenna8_23751a2094c7db90575a", "value": 30}, {"source": "emeeks_790788687df9e560e288", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 31}, {"source": "emeeks_28fcb6803748a31718d9", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 30}, {"source": "emeeks_2792df20a4b490c3e3ff", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 33}, {"source": "emeeks_066e20c1ce5008f884eb", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 32}, {"source": "emeeks_066e20c1ce5008f884eb", "target": "mpmckenna8_23751a2094c7db90575a", "value": 30}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 19}, {"source": "ZJONSSON_3918369", "target": "hunzy_11110940", "value": 26}, {"source": "mpmckenna8_23751a2094c7db90575a", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 33}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "wrobstory_7630654", "value": 23}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "wrobstory_7630406", "value": 23}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "wrobstory_7630011", "value": 23}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "wrobstory_7629900", "value": 23}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "wrobstory_7612013", "value": 23}, {"source": "mbostock_3306147", "target": "vjpgo_4689130", "value": 20}, {"source": "mbostock_3306147", "target": "vjpgo_4689085", "value": 20}, {"source": "mbostock_3306147", "target": "vjpgo_4687681", "value": 20}, {"source": "mbostock_3306147", "target": "vjpgo_4687662", "value": 20}, {"source": "mbostock_3306147", "target": "vjpgo_4687652", "value": 20}, {"source": "mbostock_3306147", "target": "vjpgo_4687640", "value": 20}, {"source": "mbostock_3306147", "target": "vjpgo_4687407", "value": 20}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "mbostock_3306147", "value": 20}, {"source": "renecnielsen_777884b900d913917ec3", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 23}, {"source": "mpmckenna8_23751a2094c7db90575a", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 33}, {"source": "emeeks_905bb4f399e0855e08fe", "target": "mpmckenna8_23751a2094c7db90575a", "value": 33}, {"source": "emeeks_433a9b04f82a1c78af4b", "target": "mpmckenna8_23751a2094c7db90575a", "value": 33}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "mbostock_3305937", "value": 17}, {"source": "ashtonburg_4384949715de645a77ef", "target": "vjpgo_4689130", "value": 19}, {"source": "ashtonburg_4384949715de645a77ef", "target": "vjpgo_4689085", "value": 19}, {"source": "ashtonburg_4384949715de645a77ef", "target": "vjpgo_4687681", "value": 19}, {"source": "ashtonburg_4384949715de645a77ef", "target": "vjpgo_4687662", "value": 19}, {"source": "ashtonburg_4384949715de645a77ef", "target": "vjpgo_4687652", "value": 19}, {"source": "ashtonburg_4384949715de645a77ef", "target": "vjpgo_4687640", "value": 19}, {"source": "ashtonburg_4384949715de645a77ef", "target": "vjpgo_4687407", "value": 19}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "vjpgo_4689130", "value": 20}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "vjpgo_4689085", "value": 20}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "vjpgo_4687681", "value": 20}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "vjpgo_4687662", "value": 20}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "vjpgo_4687652", "value": 20}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "vjpgo_4687640", "value": 20}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "vjpgo_4687407", "value": 20}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 23}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 23}, {"source": "ZJONSSON_3918369", "target": "timelyportfolio_5149102", "value": 31}, {"source": "mbostock_3305937", "target": "nguyenbq_a350280a02c8105529d0", "value": 17}, {"source": "mbostock_3305937", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 17}, {"source": "emeeks_7d5925cb7d9721c60360", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 32}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "michalskop_6cdd572b5f618a11e966", "value": 18}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "dustinlarimer_5701438", "value": 19}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "dustinlarimer_5701438", "value": 17}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "mbostock_3305937", "value": 17}, {"source": "ZJONSSON_3918369", "target": "dustinlarimer_5701438", "value": 20}, {"source": "mapearlson_116aa7e159d22d53f6d0", "target": "mccannf_3994129", "value": 27}, {"source": "emeeks_37c28b6ff0e01f69b4cd", "target": "renecnielsen_682ab33dbf139214df59", "value": 37}, {"source": "espinielli_715229536cdba1fdac9a", "target": "rveciana_aec08199d43759e98afe", "value": 45}, {"source": "espinielli_715229536cdba1fdac9a", "target": "rveciana_72987a139a9886ed6a87", "value": 45}, {"source": "espinielli_715229536cdba1fdac9a", "target": "rveciana_02eb5b83848e0b06fa8e", "value": 45}, {"source": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "target": "tmcw_4179511", "value": 29}, {"source": "emeeks_066e20c1ce5008f884eb", "target": "renecnielsen_682ab33dbf139214df59", "value": 35}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 17}, {"source": "nguyenbq_a350280a02c8105529d0", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 17}, {"source": "nguyenbq_85a4c204a61fa6407aed", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 17}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 17}, {"source": "emeeks_ffb10b231ec605c1dde8", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 32}, {"source": "emeeks_a950399780ca90589f59", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 41}, {"source": "emeeks_86da8f19e58ccb668750", "target": "renecnielsen_682ab33dbf139214df59", "value": 35}, {"source": "emeeks_7d5925cb7d9721c60360", "target": "renecnielsen_682ab33dbf139214df59", "value": 32}, {"source": "emeeks_790788687df9e560e288", "target": "renecnielsen_682ab33dbf139214df59", "value": 34}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 17}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 17}, {"source": "d3noob_8952219", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 17}, {"source": "d3noob_8952219", "target": "nguyenbq_a350280a02c8105529d0", "value": 17}, {"source": "d3noob_8952219", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 17}, {"source": "d3noob_8952219", "target": "hungvietdo_28d434d3818db4fbe369", "value": 17}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 17}, {"source": "d3noob_4414436", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 17}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 17}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 17}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "d3noob_8952219", "value": 17}, {"source": "renecnielsen_777884b900d913917ec3", "target": "timelyportfolio_5149102", "value": 29}, {"source": "emeeks_ffb10b231ec605c1dde8", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 29}, {"source": "emeeks_e484f2b1b5ba6c4742f6", "target": "renecnielsen_682ab33dbf139214df59", "value": 28}, {"source": "emeeks_37dd76398240ab29abd8", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 29}, {"source": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "target": "mapearlson_116aa7e159d22d53f6d0", "value": 31}, {"source": "JaapSuter_7251163", "target": "mccannf_3994129", "value": 27}, {"source": "JaapSuter_7251163", "target": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "value": 31}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "timelyportfolio_5149102", "value": 29}, {"source": "mccannf_3994129", "target": "steveharoz_0638d230c133da1de385", "value": 24}, {"source": "emeeks_c970c9ee3e242e90004b", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 29}, {"source": "emeeks_ffb10b231ec605c1dde8", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 30}, {"source": "emeeks_c970c9ee3e242e90004b", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 30}, {"source": "ZJONSSON_3918369", "target": "michalskop_6cdd572b5f618a11e966", "value": 22}, {"source": "emeeks_e1e661f4696af856e017", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 37}, {"source": "emeeks_e1e661f4696af856e017", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 32}, {"source": "emeeks_abcc82cc61c52fc47b19", "target": "renecnielsen_682ab33dbf139214df59", "value": 32}, {"source": "emeeks_905bb4f399e0855e08fe", "target": "renecnielsen_682ab33dbf139214df59", "value": 37}, {"source": "d3noob_e1aa61856118edfa624d", "target": "timelyportfolio_5149102", "value": 21}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "wrobstory_7630654", "value": 20}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "wrobstory_7630406", "value": 20}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "wrobstory_7630011", "value": 20}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "wrobstory_7629900", "value": 20}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "wrobstory_7612013", "value": 20}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "timelyportfolio_5149102", "value": 21}, {"source": "emeeks_7d5925cb7d9721c60360", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 27}, {"source": "emeeks_2792df20a4b490c3e3ff", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 29}, {"source": "emeeks_0d69f4a8c717d5548977", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 26}, {"source": "emeeks_0d69f4a8c717d5548977", "target": "mpmckenna8_23751a2094c7db90575a", "value": 28}, {"source": "dustinlarimer_5701438", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 20}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "weiglemc_bdc0474429e6567bc320", "value": 29}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "weiglemc_6185069", "value": 29}, {"source": "d3noob_8952219", "target": "dustinlarimer_5701438", "value": 20}, {"source": "faniepotgieter_2ebcb3004abe34c380cc", "target": "wrobstory_7612013", "value": 15}, {"source": "emeeks_f2fea17ba3ec3cd66f60", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 24}, {"source": "d3noob_e1aa61856118edfa624d", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 21}, {"source": "d3noob_e1aa61856118edfa624d", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 21}, {"source": "ZJONSSON_3918369", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 21}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 21}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 21}, {"source": "emeeks_f8c0220c54ec8347ea95", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 25}, {"source": "emeeks_c5c36485442d1779581d", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 18}, {"source": "emeeks_80dc1e4c11586c47a266", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 18}, {"source": "emeeks_7bce3b67dffd0fe85ec2", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 18}, {"source": "emeeks_28fcb6803748a31718d9", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 25}, {"source": "emeeks_0fa283f6844b6d768f99", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 18}, {"source": "d3noob_8952219", "target": "michalskop_6cdd572b5f618a11e966", "value": 23}, {"source": "ShuanWu_7b3d998fceae211d8ea7bf77ac243c26", "target": "mbostock_f098d146315be4d1db52", "value": 26}, {"source": "git-ashish_8959381", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 16}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "jdarling_06019d16cb5fd6795edf", "value": 22}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 17}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "nguyenbq_a350280a02c8105529d0", "value": 17}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 17}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "hungvietdo_28d434d3818db4fbe369", "value": 17}, {"source": "d3noob_e1aa61856118edfa624d", "target": "jdarling_06019d16cb5fd6795edf", "value": 19}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "weiglemc_bdc0474429e6567bc320", "value": 26}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "weiglemc_6185069", "value": 26}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 17}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 17}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 17}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 17}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 17}, {"source": "d3noob_4414436", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 16}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 17}, {"source": "ashtonburg_4384949715de645a77ef", "target": "mbostock_3306147", "value": 19}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "mbostock_3306147", "value": 20}, {"source": "Wanagram_25b5c971f841abdd8ab9e7af2ea653e3", "target": "nguyenbq_5dbada613a19ead4c19d585b3599f507", "value": 16}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "michalskop_6cdd572b5f618a11e966", "value": 19}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "jdarling_06019d16cb5fd6795edf", "value": 19}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 17}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "wrobstory_7630654", "value": 20}, {"source": "d3noob_e1aa61856118edfa624d", "target": "wrobstory_7630406", "value": 20}, {"source": "ashtonburg_4384949715de645a77ef", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 19}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 20}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "wrobstory_7630654", "value": 20}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "wrobstory_7630406", "value": 20}, {"source": "mccannf_3994129", "target": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "value": 23}, {"source": "mccannf_3994129", "target": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "value": 23}, {"source": "mbostock_3887235", "target": "mccannf_3994129", "value": 23}, {"source": "mbostock_3887193", "target": "mccannf_3994129", "value": 23}, {"source": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "target": "mccannf_3994129", "value": 23}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "mccannf_3994129", "value": 23}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "mccannf_3994129", "value": 23}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "mccannf_3994129", "value": 23}, {"source": "emeeks_e6f72fbca42e77be0eb3", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 29}, {"source": "emeeks_aea3c7fc1acc0eca4d44", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 29}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "tommct_8191276", "value": 20}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "tommct_5671250", "value": 20}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "xaranke_9ada4c74a87b57ae7308", "value": 20}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "tommct_8191276", "value": 20}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "tommct_5671250", "value": 20}, {"source": "hunzy_11110940", "target": "tommct_8191276", "value": 20}, {"source": "hunzy_11110940", "target": "tommct_5671250", "value": 20}, {"source": "hunzy_11110940", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 20}, {"source": "hunzy_11110940", "target": "mansfimx_27edd1f7c316218285e5", "value": 20}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 22}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 22}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "mansfimx_27edd1f7c316218285e5", "value": 22}, {"source": "d3noob_e1aa61856118edfa624d", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 19}, {"source": "d3noob_e1aa61856118edfa624d", "target": "mansfimx_27edd1f7c316218285e5", "value": 19}, {"source": "d3noob_8952219", "target": "fabid_0c4cf357ab5ed3e90382", "value": 22}, {"source": "d3noob_8375092", "target": "git-ashish_8959381", "value": 14}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "tommct_8191276", "value": 20}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "tommct_5671250", "value": 20}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "hunzy_11110940", "value": 20}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "fabid_0c4cf357ab5ed3e90382", "value": 22}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "d3noob_e1aa61856118edfa624d", "value": 19}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "tommct_8191276", "value": 20}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "tommct_5671250", "value": 20}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "hunzy_11110940", "value": 20}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "fabid_0c4cf357ab5ed3e90382", "value": 22}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "d3noob_e1aa61856118edfa624d", "value": 19}, {"source": "ZJONSSON_3918369", "target": "tommct_8191276", "value": 21}, {"source": "ZJONSSON_3918369", "target": "tommct_5671250", "value": 21}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 19}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "mansfimx_27edd1f7c316218285e5", "value": 19}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "value": 19}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "value": 19}, {"source": "GitNoise_1768f929ffafb7a2238f7438a866dc37", "target": "rphv_0d6c8f05b3afe882e166", "value": 20}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 20}, {"source": "renecnielsen_6ec52e5a9b88f7ca86ca", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 20}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "weiglemc_bdc0474429e6567bc320", "value": 24}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "weiglemc_6185069", "value": 24}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 20}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 20}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "tommct_8191276", "value": 20}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "tommct_5671250", "value": 20}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 20}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 20}, {"source": "hunzy_11110940", "target": "jdarling_06019d16cb5fd6795edf", "value": 20}, {"source": "emeeks_a950399780ca90589f59", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 34}, {"source": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "target": "mccannf_3994129", "value": 24}, {"source": "d3noob_e1aa61856118edfa624d", "target": "hunzy_11110940", "value": 18}, {"source": "d3noob_8952219", "target": "weiglemc_bdc0474429e6567bc320", "value": 24}, {"source": "d3noob_8952219", "target": "weiglemc_6185069", "value": 24}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 20}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 20}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "tommct_8191276", "value": 20}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "tommct_5671250", "value": 20}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 20}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 20}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "hunzy_11110940", "value": 20}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "fabid_0c4cf357ab5ed3e90382", "value": 22}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "d3noob_e1aa61856118edfa624d", "value": 19}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 20}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 20}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "hunzy_11110940", "value": 18}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "value": 19}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "timelyportfolio_5149102", "value": 26}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "timelyportfolio_5149102", "value": 26}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "timelyportfolio_5149102", "value": 26}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "renecnielsen_777884b900d913917ec3", "value": 22}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "timelyportfolio_5149102", "value": 26}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "timelyportfolio_5149102", "value": 26}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "timelyportfolio_5149102", "value": 26}, {"source": "Jay-Oh-eN_9337d41b59b2bcee149004e811d5b266", "target": "weiglemc_6185069", "value": 27}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 22}, {"source": "wrobstory_7630654", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 16}, {"source": "wrobstory_7630406", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 16}, {"source": "nguyenbq_a350280a02c8105529d0", "target": "wrobstory_7630654", "value": 16}, {"source": "nguyenbq_a350280a02c8105529d0", "target": "wrobstory_7630406", "value": 16}, {"source": "nguyenbq_85a4c204a61fa6407aed", "target": "wrobstory_7630654", "value": 16}, {"source": "nguyenbq_85a4c204a61fa6407aed", "target": "wrobstory_7630406", "value": 16}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "wrobstory_7630654", "value": 16}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "wrobstory_7630406", "value": 16}, {"source": "dustinlarimer_5701438", "target": "mbostock_3305937", "value": 15}, {"source": "dunlapea_5391d815c7b36039adafde7b93750b0a", "target": "thejenbo_5d0b8c55f9eec9287776a8fdb38c51b2", "value": 25}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "wrobstory_7630654", "value": 16}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "wrobstory_7630406", "value": 16}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "wrobstory_7630654", "value": 16}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "wrobstory_7630406", "value": 16}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "wrobstory_7630654", "value": 16}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "wrobstory_7630406", "value": 16}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "wrobstory_7630654", "value": 16}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "wrobstory_7630406", "value": 16}, {"source": "d3noob_4414436", "target": "wrobstory_7630654", "value": 16}, {"source": "d3noob_4414436", "target": "wrobstory_7630406", "value": 16}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "wrobstory_7630654", "value": 16}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "wrobstory_7630406", "value": 16}, {"source": "ShuanWu_7b3d998fceae211d8ea7bf77ac243c26", "target": "mbostock_c501f6cae402ab5e90c9", "value": 24}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "michalskop_6cdd572b5f618a11e966", "value": 19}, {"source": "Jamestiberiuseanes_e1af6e917aab755c628f", "target": "thejenbo_5d0b8c55f9eec9287776a8fdb38c51b2", "value": 25}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "wrobstory_7630654", "value": 16}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "wrobstory_7630406", "value": 16}, {"source": "tommct_8191276", "target": "wrobstory_7630654", "value": 18}, {"source": "tommct_8191276", "target": "wrobstory_7630406", "value": 18}, {"source": "tommct_8191276", "target": "wrobstory_7630011", "value": 18}, {"source": "tommct_8191276", "target": "wrobstory_7629900", "value": 18}, {"source": "tommct_8191276", "target": "wrobstory_7612013", "value": 18}, {"source": "tommct_5671250", "target": "wrobstory_7630654", "value": 18}, {"source": "tommct_5671250", "target": "wrobstory_7630406", "value": 18}, {"source": "tommct_5671250", "target": "wrobstory_7630011", "value": 18}, {"source": "tommct_5671250", "target": "wrobstory_7629900", "value": 18}, {"source": "tommct_5671250", "target": "wrobstory_7612013", "value": 18}, {"source": "mpmckenna8_23751a2094c7db90575a", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 23}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 19}, {"source": "emeeks_ffb10b231ec605c1dde8", "target": "mpmckenna8_23751a2094c7db90575a", "value": 23}, {"source": "emeeks_f3105fda25ff785dc5ed", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 21}, {"source": "emeeks_f3105fda25ff785dc5ed", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 28}, {"source": "emeeks_f3105fda25ff785dc5ed", "target": "mpmckenna8_23751a2094c7db90575a", "value": 23}, {"source": "emeeks_e6f72fbca42e77be0eb3", "target": "mpmckenna8_23751a2094c7db90575a", "value": 23}, {"source": "emeeks_c970c9ee3e242e90004b", "target": "mpmckenna8_23751a2094c7db90575a", "value": 23}, {"source": "emeeks_aea3c7fc1acc0eca4d44", "target": "mpmckenna8_23751a2094c7db90575a", "value": 23}, {"source": "emeeks_abcc82cc61c52fc47b19", "target": "mpmckenna8_23751a2094c7db90575a", "value": 23}, {"source": "emeeks_86da8f19e58ccb668750", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 28}, {"source": "emeeks_7d5925cb7d9721c60360", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 28}, {"source": "emeeks_790788687df9e560e288", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 28}, {"source": "emeeks_37dd76398240ab29abd8", "target": "mpmckenna8_23751a2094c7db90575a", "value": 23}, {"source": "emeeks_37c28b6ff0e01f69b4cd", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 28}, {"source": "emeeks_2792df20a4b490c3e3ff", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 28}, {"source": "emeeks_2792df20a4b490c3e3ff", "target": "mpmckenna8_23751a2094c7db90575a", "value": 23}, {"source": "emeeks_1a75ec54489368b514f8", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 26}, {"source": "emeeks_1a75ec54489368b514f8", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 28}, {"source": "emeeks_1a75ec54489368b514f8", "target": "mpmckenna8_23751a2094c7db90575a", "value": 26}, {"source": "emeeks_066e20c1ce5008f884eb", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 28}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "tommct_8191276", "value": 18}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "tommct_5671250", "value": 18}, {"source": "d3noob_fa0f16e271cb191ae85f", "target": "xaranke_9ada4c74a87b57ae7308", "value": 19}, {"source": "d3noob_fa0f16e271cb191ae85f", "target": "tommct_8191276", "value": 17}, {"source": "d3noob_fa0f16e271cb191ae85f", "target": "git-ashish_8959381", "value": 14}, {"source": "d3noob_8375092", "target": "xaranke_9ada4c74a87b57ae7308", "value": 19}, {"source": "d3noob_8326869", "target": "xaranke_9ada4c74a87b57ae7308", "value": 19}, {"source": "d3noob_8326869", "target": "tommct_8191276", "value": 17}, {"source": "d3noob_8326869", "target": "git-ashish_8959381", "value": 14}, {"source": "d3noob_8323795", "target": "xaranke_9ada4c74a87b57ae7308", "value": 19}, {"source": "d3noob_8323795", "target": "tommct_8191276", "value": 17}, {"source": "d3noob_8323795", "target": "git-ashish_8959381", "value": 14}, {"source": "cpietsch_dc76fc25863458a6a83e", "target": "mpmckenna8_434839f120c552ad0048", "value": 29}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "ZJONSSON_3918369", "value": 17}, {"source": "emeeks_a726210cbc439b969f02", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 19}, {"source": "emeeks_66a38345f12cbe3452ec", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 18}, {"source": "emeeks_66a38345f12cbe3452ec", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 19}, {"source": "emeeks_66a38345f12cbe3452ec", "target": "mpmckenna8_23751a2094c7db90575a", "value": 18}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "wrobstory_7630654", "value": 19}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "wrobstory_7630406", "value": 19}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "wrobstory_7630011", "value": 19}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "wrobstory_7629900", "value": 19}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "wrobstory_7612013", "value": 19}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "mbostock_3305937", "value": 16}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "wrobstory_7630654", "value": 21}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "wrobstory_7630406", "value": 21}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "wrobstory_7630011", "value": 21}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "wrobstory_7629900", "value": 21}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "wrobstory_7612013", "value": 21}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "mbostock_3305937", "value": 16}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 16}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "nguyenbq_a350280a02c8105529d0", "value": 16}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 16}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "hungvietdo_28d434d3818db4fbe369", "value": 16}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "d3noob_ccdcb7673cdb3a796e13", "value": 16}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "d3noob_b3ff6ae1c120eea654b5", "value": 16}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "d3noob_a22c42db65eb00d4e369", "value": 16}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "d3noob_8dc93bce7e7200ab487d", "value": 16}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "d3noob_464c92429ac05c6a19a1", "value": 16}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "d3noob_4414436", "value": 15}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "d3noob_38744a17f9c0141bcd04", "value": 16}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "RandomEtc_cff3610e7dd47bef2d01", "value": 16}, {"source": "hunzy_11110940", "target": "michalskop_6cdd572b5f618a11e966", "value": 17}, {"source": "dustinlarimer_5701438", "target": "wrobstory_7630011", "value": 17}, {"source": "dustinlarimer_5701438", "target": "wrobstory_7629900", "value": 17}, {"source": "dustinlarimer_5701438", "target": "wrobstory_7612013", "value": 17}, {"source": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "target": "steveharoz_0638d230c133da1de385", "value": 27}, {"source": "vjpgo_4689130", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 17}, {"source": "vjpgo_4689085", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 17}, {"source": "vjpgo_4687681", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 17}, {"source": "vjpgo_4687662", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 17}, {"source": "vjpgo_4687652", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 17}, {"source": "vjpgo_4687640", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 17}, {"source": "vjpgo_4687407", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 17}, {"source": "nguyenbq_a350280a02c8105529d0", "target": "timelyportfolio_5149102", "value": 16}, {"source": "nguyenbq_85a4c204a61fa6407aed", "target": "timelyportfolio_5149102", "value": 16}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "vjpgo_4689130", "value": 17}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "vjpgo_4689085", "value": 17}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "vjpgo_4687681", "value": 17}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "vjpgo_4687662", "value": 17}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "vjpgo_4687652", "value": 17}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "vjpgo_4687640", "value": 17}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "vjpgo_4687407", "value": 17}, {"source": "mccannf_3994129", "target": "tmcw_4179511", "value": 20}, {"source": "mbostock_3306147", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 17}, {"source": "mbostock_3306147", "target": "michalskop_6cdd572b5f618a11e966", "value": 17}, {"source": "espinielli_9ea56e041f6847dbe944", "target": "mpmckenna8_8874545", "value": 29}, {"source": "emeeks_f8c0220c54ec8347ea95", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 22}, {"source": "emeeks_28fcb6803748a31718d9", "target": "mpmckenna8_23751a2094c7db90575a", "value": 18}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "timelyportfolio_5149102", "value": 16}, {"source": "d3noob_8952219", "target": "timelyportfolio_5149102", "value": 20}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "timelyportfolio_5149102", "value": 16}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "timelyportfolio_5149102", "value": 16}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 17}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "michalskop_6cdd572b5f618a11e966", "value": 17}, {"source": "ashtonburg_4384949715de645a77ef", "target": "michalskop_6cdd572b5f618a11e966", "value": 17}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "michalskop_6cdd572b5f618a11e966", "value": 17}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 13}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "nguyenbq_a350280a02c8105529d0", "value": 13}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 13}, {"source": "mbostock_3305937", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 13}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "michalskop_6cdd572b5f618a11e966", "value": 13}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "mbostock_3305937", "value": 13}, {"source": "dustinlarimer_5701438", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 13}, {"source": "dustinlarimer_5701438", "target": "nguyenbq_a350280a02c8105529d0", "value": 13}, {"source": "dustinlarimer_5701438", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 13}, {"source": "dustinlarimer_5701438", "target": "hungvietdo_28d434d3818db4fbe369", "value": 13}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "wrobstory_7630654", "value": 16}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "wrobstory_7630406", "value": 16}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "wrobstory_7630011", "value": 16}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "wrobstory_7629900", "value": 16}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "wrobstory_7612013", "value": 16}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "michalskop_6cdd572b5f618a11e966", "value": 13}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "mbostock_3305937", "value": 13}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "michalskop_6cdd572b5f618a11e966", "value": 13}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "mbostock_3305937", "value": 13}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "dustinlarimer_5701438", "value": 13}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "michalskop_6cdd572b5f618a11e966", "value": 13}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "mbostock_3305937", "value": 13}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "michalskop_6cdd572b5f618a11e966", "value": 13}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "dustinlarimer_5701438", "value": 13}, {"source": "d3noob_8952219", "target": "wrobstory_7630011", "value": 18}, {"source": "d3noob_8952219", "target": "wrobstory_7629900", "value": 18}, {"source": "d3noob_8952219", "target": "wrobstory_7612013", "value": 18}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "michalskop_6cdd572b5f618a11e966", "value": 13}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "mbostock_3305937", "value": 13}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "dustinlarimer_5701438", "value": 13}, {"source": "d3noob_4414436", "target": "michalskop_6cdd572b5f618a11e966", "value": 12}, {"source": "d3noob_4414436", "target": "mbostock_3305937", "value": 13}, {"source": "d3noob_4414436", "target": "dustinlarimer_5701438", "value": 13}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "michalskop_6cdd572b5f618a11e966", "value": 13}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "dustinlarimer_5701438", "value": 13}, {"source": "cheneymb_1938bab155ab57919bd792ad706dc6dd", "target": "dunlapea_5391d815c7b36039adafde7b93750b0a", "value": 22}, {"source": "ZJONSSON_3918369", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 13}, {"source": "ZJONSSON_3918369", "target": "nguyenbq_a350280a02c8105529d0", "value": 13}, {"source": "ZJONSSON_3918369", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 13}, {"source": "ZJONSSON_3918369", "target": "hungvietdo_28d434d3818db4fbe369", "value": 13}, {"source": "ZJONSSON_3918369", "target": "d3noob_ccdcb7673cdb3a796e13", "value": 13}, {"source": "ZJONSSON_3918369", "target": "d3noob_b3ff6ae1c120eea654b5", "value": 13}, {"source": "ZJONSSON_3918369", "target": "d3noob_a22c42db65eb00d4e369", "value": 13}, {"source": "ZJONSSON_3918369", "target": "d3noob_8dc93bce7e7200ab487d", "value": 13}, {"source": "ZJONSSON_3918369", "target": "d3noob_464c92429ac05c6a19a1", "value": 13}, {"source": "ZJONSSON_3918369", "target": "d3noob_4414436", "value": 13}, {"source": "ZJONSSON_3918369", "target": "d3noob_38744a17f9c0141bcd04", "value": 13}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 17}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "michalskop_6cdd572b5f618a11e966", "value": 17}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 17}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 13}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "d3noob_e1aa61856118edfa624d", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "RandomEtc_cff3610e7dd47bef2d01", "value": 14}, {"source": "Jamestiberiuseanes_e1af6e917aab755c628f", "target": "cheneymb_1938bab155ab57919bd792ad706dc6dd", "value": 19}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "michalskop_6cdd572b5f618a11e966", "value": 13}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "mbostock_3305937", "value": 13}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "dustinlarimer_5701438", "value": 13}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "ZJONSSON_3918369", "value": 13}, {"source": "mbostock_3305937", "target": "xaranke_b956ee7215b7b50bc78a", "value": 20}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "mbostock_3305937", "value": 20}, {"source": "emeeks_f8c0220c54ec8347ea95", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 22}, {"source": "emeeks_c970c9ee3e242e90004b", "target": "renecnielsen_682ab33dbf139214df59", "value": 27}, {"source": "emeeks_28fcb6803748a31718d9", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 23}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "dustinlarimer_5701438", "value": 14}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "dustinlarimer_5701438", "value": 14}, {"source": "xaranke_b956ee7215b7b50bc78a", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 20}, {"source": "vjpgo_4689130", "target": "xaranke_b956ee7215b7b50bc78a", "value": 20}, {"source": "vjpgo_4689085", "target": "xaranke_b956ee7215b7b50bc78a", "value": 20}, {"source": "vjpgo_4687681", "target": "xaranke_b956ee7215b7b50bc78a", "value": 20}, {"source": "vjpgo_4687662", "target": "xaranke_b956ee7215b7b50bc78a", "value": 20}, {"source": "vjpgo_4687652", "target": "xaranke_b956ee7215b7b50bc78a", "value": 20}, {"source": "vjpgo_4687640", "target": "xaranke_b956ee7215b7b50bc78a", "value": 20}, {"source": "vjpgo_4687407", "target": "xaranke_b956ee7215b7b50bc78a", "value": 20}, {"source": "saraquigley_c88725be1238b6b80e37", "target": "vicapow_9554848", "value": 14}, {"source": "saraquigley_c88725be1238b6b80e37", "target": "vicapow_9536234", "value": 14}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "xaranke_b956ee7215b7b50bc78a", "value": 20}, {"source": "mbostock_3306147", "target": "xaranke_b956ee7215b7b50bc78a", "value": 20}, {"source": "emeeks_e484f2b1b5ba6c4742f6", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 24}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "xaranke_b956ee7215b7b50bc78a", "value": 20}, {"source": "ashtonburg_4384949715de645a77ef", "target": "xaranke_b956ee7215b7b50bc78a", "value": 20}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "xaranke_b956ee7215b7b50bc78a", "value": 20}, {"source": "wrobstory_7630654", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 15}, {"source": "wrobstory_7630406", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 15}, {"source": "wrobstory_7630011", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 15}, {"source": "wrobstory_7629900", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 15}, {"source": "wrobstory_7612013", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 15}, {"source": "vjpgo_4689130", "target": "wrobstory_7630654", "value": 15}, {"source": "vjpgo_4689130", "target": "wrobstory_7630406", "value": 15}, {"source": "vjpgo_4689130", "target": "wrobstory_7630011", "value": 15}, {"source": "vjpgo_4689130", "target": "wrobstory_7629900", "value": 15}, {"source": "vjpgo_4689130", "target": "wrobstory_7612013", "value": 15}, {"source": "vjpgo_4689085", "target": "wrobstory_7630654", "value": 15}, {"source": "vjpgo_4689085", "target": "wrobstory_7630406", "value": 15}, {"source": "vjpgo_4689085", "target": "wrobstory_7630011", "value": 15}, {"source": "vjpgo_4689085", "target": "wrobstory_7629900", "value": 15}, {"source": "vjpgo_4689085", "target": "wrobstory_7612013", "value": 15}, {"source": "vjpgo_4687681", "target": "wrobstory_7630654", "value": 15}, {"source": "vjpgo_4687681", "target": "wrobstory_7630406", "value": 15}, {"source": "vjpgo_4687681", "target": "wrobstory_7630011", "value": 15}, {"source": "vjpgo_4687681", "target": "wrobstory_7629900", "value": 15}, {"source": "vjpgo_4687681", "target": "wrobstory_7612013", "value": 15}, {"source": "vjpgo_4687662", "target": "wrobstory_7630654", "value": 15}, {"source": "vjpgo_4687662", "target": "wrobstory_7630406", "value": 15}, {"source": "vjpgo_4687662", "target": "wrobstory_7630011", "value": 15}, {"source": "vjpgo_4687662", "target": "wrobstory_7629900", "value": 15}, {"source": "vjpgo_4687662", "target": "wrobstory_7612013", "value": 15}, {"source": "vjpgo_4687652", "target": "wrobstory_7630654", "value": 15}, {"source": "vjpgo_4687652", "target": "wrobstory_7630406", "value": 15}, {"source": "vjpgo_4687652", "target": "wrobstory_7630011", "value": 15}, {"source": "vjpgo_4687652", "target": "wrobstory_7629900", "value": 15}, {"source": "vjpgo_4687652", "target": "wrobstory_7612013", "value": 15}, {"source": "vjpgo_4687640", "target": "wrobstory_7630654", "value": 15}, {"source": "vjpgo_4687640", "target": "wrobstory_7630406", "value": 15}, {"source": "vjpgo_4687640", "target": "wrobstory_7630011", "value": 15}, {"source": "vjpgo_4687640", "target": "wrobstory_7629900", "value": 15}, {"source": "vjpgo_4687640", "target": "wrobstory_7612013", "value": 15}, {"source": "vjpgo_4687407", "target": "wrobstory_7630654", "value": 15}, {"source": "vjpgo_4687407", "target": "wrobstory_7630406", "value": 15}, {"source": "vjpgo_4687407", "target": "wrobstory_7630011", "value": 15}, {"source": "vjpgo_4687407", "target": "wrobstory_7629900", "value": 15}, {"source": "vjpgo_4687407", "target": "wrobstory_7612013", "value": 15}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "wrobstory_7630011", "value": 16}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "wrobstory_7629900", "value": 16}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "wrobstory_7612013", "value": 16}, {"source": "mpmckenna8_23751a2094c7db90575a", "target": "renecnielsen_682ab33dbf139214df59", "value": 28}, {"source": "mbostock_3306147", "target": "wrobstory_7630654", "value": 15}, {"source": "mbostock_3306147", "target": "wrobstory_7630406", "value": 15}, {"source": "mbostock_3306147", "target": "wrobstory_7630011", "value": 15}, {"source": "mbostock_3306147", "target": "wrobstory_7629900", "value": 15}, {"source": "mbostock_3306147", "target": "wrobstory_7612013", "value": 15}, {"source": "emeeks_e1e661f4696af856e017", "target": "mpmckenna8_23751a2094c7db90575a", "value": 28}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "wrobstory_7630654", "value": 15}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "wrobstory_7630406", "value": 15}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "wrobstory_7630011", "value": 15}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "wrobstory_7629900", "value": 15}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "wrobstory_7612013", "value": 15}, {"source": "ashtonburg_4384949715de645a77ef", "target": "wrobstory_7630654", "value": 15}, {"source": "ashtonburg_4384949715de645a77ef", "target": "wrobstory_7630406", "value": 15}, {"source": "ashtonburg_4384949715de645a77ef", "target": "wrobstory_7630011", "value": 15}, {"source": "ashtonburg_4384949715de645a77ef", "target": "wrobstory_7629900", "value": 15}, {"source": "ashtonburg_4384949715de645a77ef", "target": "wrobstory_7612013", "value": 15}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "wrobstory_7630654", "value": 15}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "wrobstory_7630406", "value": 15}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "wrobstory_7630011", "value": 15}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "wrobstory_7629900", "value": 15}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "wrobstory_7612013", "value": 15}, {"source": "ahmohamed_82ac20ccc949470e3206", "target": "git-ashish_65d72d26368bd3bf75bf", "value": 32}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "vjpgo_4689130", "value": 15}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "vjpgo_4689085", "value": 15}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "vjpgo_4687681", "value": 15}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "vjpgo_4687662", "value": 15}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "vjpgo_4687652", "value": 15}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "vjpgo_4687640", "value": 15}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "vjpgo_4687407", "value": 15}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "mbostock_3306147", "value": 15}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "ashtonburg_60e84ea5cdffa49356e4", "value": 15}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "ashtonburg_4384949715de645a77ef", "value": 15}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "ashtonburg_40448d691c1cc22dd00b", "value": 15}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "vjpgo_4689130", "value": 15}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "vjpgo_4689085", "value": 15}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "vjpgo_4687681", "value": 15}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "vjpgo_4687662", "value": 15}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "vjpgo_4687652", "value": 15}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "vjpgo_4687640", "value": 15}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "vjpgo_4687407", "value": 15}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "mbostock_3306147", "value": 15}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "ashtonburg_60e84ea5cdffa49356e4", "value": 15}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "ashtonburg_4384949715de645a77ef", "value": 15}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "ashtonburg_40448d691c1cc22dd00b", "value": 15}, {"source": "enjalot_1829187", "target": "enoex_1829124", "value": 31}, {"source": "emeeks_f3105fda25ff785dc5ed", "target": "renecnielsen_682ab33dbf139214df59", "value": 26}, {"source": "benkimball_8570073", "target": "tommct_8191276", "value": 17}, {"source": "renecnielsen_777884b900d913917ec3", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 18}, {"source": "mbostock_bc4e32ec71636b498c46", "target": "wcjohnson11_7fb5012dc2a9643541ac", "value": 32}, {"source": "mbostock_3305937", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 15}, {"source": "mbostock_3305937", "target": "vjpgo_4689130", "value": 15}, {"source": "mbostock_3305937", "target": "vjpgo_4689085", "value": 15}, {"source": "mbostock_3305937", "target": "vjpgo_4687681", "value": 15}, {"source": "mbostock_3305937", "target": "vjpgo_4687662", "value": 15}, {"source": "mbostock_3305937", "target": "vjpgo_4687652", "value": 15}, {"source": "mbostock_3305937", "target": "vjpgo_4687640", "value": 15}, {"source": "mbostock_3305937", "target": "vjpgo_4687407", "value": 15}, {"source": "mbostock_3305937", "target": "michalskop_6cdd572b5f618a11e966", "value": 15}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "renecnielsen_777884b900d913917ec3", "value": 18}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "renecnielsen_777884b900d913917ec3", "value": 18}, {"source": "emeeks_f3105fda25ff785dc5ed", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 21}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "fabid_0c4cf357ab5ed3e90382", "value": 18}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "mbostock_3305937", "value": 15}, {"source": "ashtonburg_4384949715de645a77ef", "target": "mbostock_3305937", "value": 15}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "mbostock_3305937", "value": 15}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "renecnielsen_777884b900d913917ec3", "value": 18}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "renecnielsen_777884b900d913917ec3", "value": 18}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "renecnielsen_777884b900d913917ec3", "value": 18}, {"source": "SpaceActuary_4b358651fe079e5bfa02", "target": "cool-Blue_7664b7e95a5ce73b3ef9", "value": 21}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 18}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "mansfimx_27edd1f7c316218285e5", "value": 18}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "jdarling_06019d16cb5fd6795edf", "value": 18}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "value": 18}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "value": 18}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "value": 18}, {"source": "wrobstory_7630654", "target": "xaranke_b956ee7215b7b50bc78a", "value": 19}, {"source": "wrobstory_7630406", "target": "xaranke_b956ee7215b7b50bc78a", "value": 19}, {"source": "wrobstory_7630011", "target": "xaranke_b956ee7215b7b50bc78a", "value": 19}, {"source": "wrobstory_7629900", "target": "xaranke_b956ee7215b7b50bc78a", "value": 19}, {"source": "wrobstory_7612013", "target": "xaranke_b956ee7215b7b50bc78a", "value": 19}, {"source": "mbostock_3305937", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 15}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 19}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "vjpgo_4689130", "value": 19}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "vjpgo_4689085", "value": 19}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "vjpgo_4687681", "value": 19}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "vjpgo_4687662", "value": 19}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "vjpgo_4687652", "value": 19}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "vjpgo_4687640", "value": 19}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "vjpgo_4687407", "value": 19}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "michalskop_6cdd572b5f618a11e966", "value": 19}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "mbostock_3306147", "value": 19}, {"source": "emeeks_e484f2b1b5ba6c4742f6", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 23}, {"source": "emeeks_2792df20a4b490c3e3ff", "target": "renecnielsen_682ab33dbf139214df59", "value": 25}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "fabid_0c4cf357ab5ed3e90382", "value": 19}, {"source": "ashtonburg_4384949715de645a77ef", "target": "fabid_0c4cf357ab5ed3e90382", "value": 19}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "fabid_0c4cf357ab5ed3e90382", "value": 19}, {"source": "ZJONSSON_3918369", "target": "mbostock_3305937", "value": 15}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "xaranke_b956ee7215b7b50bc78a", "value": 19}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "xaranke_b956ee7215b7b50bc78a", "value": 19}, {"source": "hunzy_11110940", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 16}, {"source": "hunzy_11110940", "target": "xaranke_b956ee7215b7b50bc78a", "value": 20}, {"source": "hunzy_11110940", "target": "vjpgo_4689130", "value": 16}, {"source": "hunzy_11110940", "target": "vjpgo_4689085", "value": 16}, {"source": "hunzy_11110940", "target": "vjpgo_4687681", "value": 16}, {"source": "hunzy_11110940", "target": "vjpgo_4687662", "value": 16}, {"source": "hunzy_11110940", "target": "vjpgo_4687652", "value": 16}, {"source": "hunzy_11110940", "target": "vjpgo_4687640", "value": 16}, {"source": "hunzy_11110940", "target": "vjpgo_4687407", "value": 16}, {"source": "hunzy_11110940", "target": "mbostock_3306147", "value": 16}, {"source": "emeeks_ffb10b231ec605c1dde8", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 25}, {"source": "emeeks_a950399780ca90589f59", "target": "mpmckenna8_23751a2094c7db90575a", "value": 30}, {"source": "emeeks_7d5925cb7d9721c60360", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 26}, {"source": "emeeks_37dd76398240ab29abd8", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 26}, {"source": "dustinlarimer_5716840", "target": "timelyportfolio_3106445", "value": 14}, {"source": "cpietsch_dc76fc25863458a6a83e", "target": "mpmckenna8_8874545", "value": 24}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "hunzy_11110940", "value": 16}, {"source": "ashtonburg_4384949715de645a77ef", "target": "hunzy_11110940", "value": 16}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "hunzy_11110940", "value": 16}, {"source": "timelyportfolio_3106445", "target": "xaranke_9ada4c74a87b57ae7308", "value": 19}, {"source": "git-ashish_8959381", "target": "timelyportfolio_3106445", "value": 14}, {"source": "emeeks_ffb10b231ec605c1dde8", "target": "renecnielsen_682ab33dbf139214df59", "value": 25}, {"source": "ZJONSSON_3918369", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 15}, {"source": "ZJONSSON_3918369", "target": "xaranke_b956ee7215b7b50bc78a", "value": 18}, {"source": "ZJONSSON_3918369", "target": "vjpgo_4689130", "value": 15}, {"source": "ZJONSSON_3918369", "target": "vjpgo_4689085", "value": 15}, {"source": "ZJONSSON_3918369", "target": "vjpgo_4687681", "value": 15}, {"source": "ZJONSSON_3918369", "target": "vjpgo_4687662", "value": 15}, {"source": "ZJONSSON_3918369", "target": "vjpgo_4687652", "value": 15}, {"source": "ZJONSSON_3918369", "target": "vjpgo_4687640", "value": 15}, {"source": "ZJONSSON_3918369", "target": "vjpgo_4687407", "value": 15}, {"source": "ZJONSSON_3918369", "target": "mbostock_3306147", "value": 15}, {"source": "ZJONSSON_3918369", "target": "fabid_0c4cf357ab5ed3e90382", "value": 18}, {"source": "ZJONSSON_3918369", "target": "ashtonburg_60e84ea5cdffa49356e4", "value": 15}, {"source": "ZJONSSON_3918369", "target": "ashtonburg_4384949715de645a77ef", "value": 15}, {"source": "ZJONSSON_3918369", "target": "ashtonburg_40448d691c1cc22dd00b", "value": 15}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 15}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 15}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 26}, {"source": "mbostock_3305937", "target": "wrobstory_7630654", "value": 13}, {"source": "mbostock_3305937", "target": "wrobstory_7630406", "value": 13}, {"source": "mbostock_3305937", "target": "wrobstory_7630011", "value": 13}, {"source": "mbostock_3305937", "target": "wrobstory_7629900", "value": 13}, {"source": "mbostock_3305937", "target": "wrobstory_7612013", "value": 13}, {"source": "hunzy_11110940", "target": "wrobstory_7630654", "value": 14}, {"source": "hunzy_11110940", "target": "wrobstory_7630406", "value": 14}, {"source": "hunzy_11110940", "target": "wrobstory_7630011", "value": 14}, {"source": "hunzy_11110940", "target": "wrobstory_7629900", "value": 14}, {"source": "hunzy_11110940", "target": "wrobstory_7612013", "value": 14}, {"source": "emeeks_f3105fda25ff785dc5ed", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 19}, {"source": "emeeks_e6f72fbca42e77be0eb3", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 19}, {"source": "emeeks_aea3c7fc1acc0eca4d44", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 19}, {"source": "emeeks_1a75ec54489368b514f8", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 24}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 19}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "mansfimx_27edd1f7c316218285e5", "value": 19}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "jdarling_06019d16cb5fd6795edf", "value": 19}, {"source": "dmijalkovic_52fb07194d4b2988cafb", "target": "dukevis_84ed35ed91f857ec3d79", "value": 14}, {"source": "dmijalkovic_3385b8e7269b5b345558", "target": "dukevis_84ed35ed91f857ec3d79", "value": 14}, {"source": "cpietsch_dc76fc25863458a6a83e", "target": "mortenjohs_4739921", "value": 22}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "dukevis_84ed35ed91f857ec3d79", "value": 19}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "dukevis_84ed35ed91f857ec3d79", "value": 19}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "dukevis_84ed35ed91f857ec3d79", "value": 19}, {"source": "WillTurman_4631136", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 19}, {"source": "WillTurman_4631136", "target": "mansfimx_27edd1f7c316218285e5", "value": 19}, {"source": "WillTurman_4631136", "target": "jdarling_06019d16cb5fd6795edf", "value": 19}, {"source": "WillTurman_4631136", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 14}, {"source": "WillTurman_4631136", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 14}, {"source": "WillTurman_4631136", "target": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "value": 19}, {"source": "WillTurman_4631136", "target": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "value": 19}, {"source": "WillTurman_4631136", "target": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "value": 19}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 26}, {"source": "mortenjohs_4739921", "target": "mpmckenna8_434839f120c552ad0048", "value": 22}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 13}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "vjpgo_4689130", "value": 13}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "vjpgo_4689085", "value": 13}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "vjpgo_4687681", "value": 13}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "vjpgo_4687662", "value": 13}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "vjpgo_4687652", "value": 13}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "vjpgo_4687640", "value": 13}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "vjpgo_4687407", "value": 13}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "mbostock_3306147", "value": 13}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "mbostock_3305937", "value": 13}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "wrobstory_7630654", "value": 18}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "wrobstory_7630406", "value": 18}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "wrobstory_7630011", "value": 18}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "wrobstory_7629900", "value": 18}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "wrobstory_7612013", "value": 18}, {"source": "emeeks_f2fea17ba3ec3cd66f60", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 20}, {"source": "emeeks_f2fea17ba3ec3cd66f60", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 20}, {"source": "emeeks_f2fea17ba3ec3cd66f60", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 26}, {"source": "emeeks_f2fea17ba3ec3cd66f60", "target": "mpmckenna8_23751a2094c7db90575a", "value": 21}, {"source": "emeeks_e6f72fbca42e77be0eb3", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 19}, {"source": "emeeks_e484f2b1b5ba6c4742f6", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 19}, {"source": "emeeks_aea3c7fc1acc0eca4d44", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 19}, {"source": "emeeks_a726210cbc439b969f02", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 15}, {"source": "emeeks_a726210cbc439b969f02", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 16}, {"source": "emeeks_a726210cbc439b969f02", "target": "mpmckenna8_23751a2094c7db90575a", "value": 15}, {"source": "emeeks_905bb4f399e0855e08fe", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 26}, {"source": "emeeks_66a38345f12cbe3452ec", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 16}, {"source": "emeeks_433a9b04f82a1c78af4b", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 26}, {"source": "emeeks_37dd76398240ab29abd8", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 19}, {"source": "emeeks_37dd76398240ab29abd8", "target": "renecnielsen_682ab33dbf139214df59", "value": 24}, {"source": "emeeks_1a75ec54489368b514f8", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 24}, {"source": "emeeks_0d69f4a8c717d5548977", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 19}, {"source": "emeeks_0d69f4a8c717d5548977", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 26}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "jdarling_06019d16cb5fd6795edf", "value": 13}, {"source": "ashtonburg_4384949715de645a77ef", "target": "jdarling_06019d16cb5fd6795edf", "value": 13}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "jdarling_06019d16cb5fd6795edf", "value": 13}, {"source": "ZJONSSON_3918369", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 18}, {"source": "ZJONSSON_3918369", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 18}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "fabid_0c4cf357ab5ed3e90382", "value": 18}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "fabid_0c4cf357ab5ed3e90382", "value": 18}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "hunzy_11110940", "value": 19}, {"source": "emeeks_e484f2b1b5ba6c4742f6", "target": "mpmckenna8_23751a2094c7db90575a", "value": 18}, {"source": "emeeks_c970c9ee3e242e90004b", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 24}, {"source": "emeeks_c5c36485442d1779581d", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 15}, {"source": "emeeks_c5c36485442d1779581d", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 15}, {"source": "emeeks_c5c36485442d1779581d", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 17}, {"source": "emeeks_c5c36485442d1779581d", "target": "mpmckenna8_23751a2094c7db90575a", "value": 15}, {"source": "emeeks_80dc1e4c11586c47a266", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 15}, {"source": "emeeks_80dc1e4c11586c47a266", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 15}, {"source": "emeeks_80dc1e4c11586c47a266", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 17}, {"source": "emeeks_80dc1e4c11586c47a266", "target": "mpmckenna8_23751a2094c7db90575a", "value": 15}, {"source": "emeeks_7bce3b67dffd0fe85ec2", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 15}, {"source": "emeeks_7bce3b67dffd0fe85ec2", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 15}, {"source": "emeeks_7bce3b67dffd0fe85ec2", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 17}, {"source": "emeeks_7bce3b67dffd0fe85ec2", "target": "mpmckenna8_23751a2094c7db90575a", "value": 15}, {"source": "emeeks_66a38345f12cbe3452ec", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 16}, {"source": "emeeks_0fa283f6844b6d768f99", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 15}, {"source": "emeeks_0fa283f6844b6d768f99", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 15}, {"source": "emeeks_0fa283f6844b6d768f99", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 17}, {"source": "emeeks_0fa283f6844b6d768f99", "target": "mpmckenna8_23751a2094c7db90575a", "value": 15}, {"source": "ZJONSSON_3918369", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 15}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "hunzy_11110940", "value": 14}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "hunzy_11110940", "value": 14}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "tommct_8191276", "value": 14}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "tommct_5671250", "value": 14}, {"source": "mbostock_5681974", "target": "scresawn_e8b21fc35bbc9189d031b9fdfb2b9b4c", "value": 21}, {"source": "enjalot_31168147b88a1748bc8b", "target": "mpmckenna8_f43a842a8953e87f5b3c", "value": 19}, {"source": "emeeks_f8c0220c54ec8347ea95", "target": "mpmckenna8_23751a2094c7db90575a", "value": 16}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 17}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 17}, {"source": "d3noob_e1aa61856118edfa624d", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "d3noob_e1aa61856118edfa624d", "target": "vjpgo_4689130", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "vjpgo_4689085", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "vjpgo_4687681", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "vjpgo_4687662", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "vjpgo_4687652", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "vjpgo_4687640", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "vjpgo_4687407", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "timelyportfolio_3106445", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "michalskop_6cdd572b5f618a11e966", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "mbostock_3306147", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "mbostock_3305937", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "fabid_0c4cf357ab5ed3e90382", "value": 16}, {"source": "d3noob_e1aa61856118edfa624d", "target": "dustinlarimer_5716840", "value": 14}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "d3noob_e1aa61856118edfa624d", "value": 14}, {"source": "ashtonburg_4384949715de645a77ef", "target": "d3noob_e1aa61856118edfa624d", "value": 14}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "d3noob_e1aa61856118edfa624d", "value": 14}, {"source": "ZJONSSON_3918369", "target": "timelyportfolio_3106445", "value": 12}, {"source": "ZJONSSON_3918369", "target": "dustinlarimer_5716840", "value": 13}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "ZJONSSON_3918369", "value": 12}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "ZJONSSON_3918369", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "vjpgo_4689130", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "vjpgo_4689085", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "vjpgo_4687681", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "vjpgo_4687662", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "vjpgo_4687652", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "vjpgo_4687640", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "vjpgo_4687407", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "timelyportfolio_3106445", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "michalskop_6cdd572b5f618a11e966", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "mbostock_3306147", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "mbostock_3305937", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "fabid_0c4cf357ab5ed3e90382", "value": 16}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "dustinlarimer_5716840", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "ashtonburg_60e84ea5cdffa49356e4", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "ashtonburg_4384949715de645a77ef", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "ashtonburg_40448d691c1cc22dd00b", "value": 14}, {"source": "weiglemc_bdc0474429e6567bc320", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 20}, {"source": "weiglemc_6185069", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 20}, {"source": "timelyportfolio_5c136de85de1c2abb6fc", "target": "wrobstory_7630654", "value": 17}, {"source": "timelyportfolio_5c136de85de1c2abb6fc", "target": "wrobstory_7612013", "value": 17}, {"source": "timelyportfolio_3106445", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 11}, {"source": "timelyportfolio_3106445", "target": "wrobstory_7630654", "value": 11}, {"source": "timelyportfolio_3106445", "target": "wrobstory_7630406", "value": 11}, {"source": "timelyportfolio_3106445", "target": "wrobstory_7630011", "value": 11}, {"source": "timelyportfolio_3106445", "target": "wrobstory_7629900", "value": 11}, {"source": "timelyportfolio_3106445", "target": "wrobstory_7612013", "value": 11}, {"source": "timelyportfolio_3106445", "target": "vjpgo_4689130", "value": 11}, {"source": "timelyportfolio_3106445", "target": "vjpgo_4689085", "value": 11}, {"source": "timelyportfolio_3106445", "target": "vjpgo_4687681", "value": 11}, {"source": "timelyportfolio_3106445", "target": "vjpgo_4687662", "value": 11}, {"source": "timelyportfolio_3106445", "target": "vjpgo_4687652", "value": 11}, {"source": "timelyportfolio_3106445", "target": "vjpgo_4687640", "value": 11}, {"source": "timelyportfolio_3106445", "target": "vjpgo_4687407", "value": 11}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 14}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "xaranke_b956ee7215b7b50bc78a", "value": 18}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "vjpgo_4689130", "value": 14}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "vjpgo_4689085", "value": 14}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "vjpgo_4687681", "value": 14}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "vjpgo_4687662", "value": 14}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "vjpgo_4687652", "value": 14}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "vjpgo_4687640", "value": 14}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "vjpgo_4687407", "value": 14}, {"source": "renecnielsen_6ec52e5a9b88f7ca86ca", "target": "wrobstory_7630654", "value": 17}, {"source": "renecnielsen_6ec52e5a9b88f7ca86ca", "target": "wrobstory_7612013", "value": 17}, {"source": "nguyenbq_a350280a02c8105529d0", "target": "weiglemc_bdc0474429e6567bc320", "value": 20}, {"source": "nguyenbq_a350280a02c8105529d0", "target": "weiglemc_6185069", "value": 20}, {"source": "nguyenbq_85a4c204a61fa6407aed", "target": "weiglemc_bdc0474429e6567bc320", "value": 20}, {"source": "nguyenbq_85a4c204a61fa6407aed", "target": "weiglemc_6185069", "value": 20}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "timelyportfolio_3106445", "value": 11}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 14}, {"source": "mgold_e21dbf08e838796dcf60", "target": "michalskop_6cdd572b5f618a11e966", "value": 14}, {"source": "mbostock_3306147", "target": "timelyportfolio_3106445", "value": 11}, {"source": "mbostock_3306147", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 14}, {"source": "mbostock_3305937", "target": "timelyportfolio_3106445", "value": 11}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "timelyportfolio_3106445", "value": 11}, {"source": "hunzy_9134534", "target": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "value": 20}, {"source": "hunzy_9134534", "target": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "value": 20}, {"source": "hunzy_9134534", "target": "mccannf_3994129", "value": 24}, {"source": "hunzy_9134534", "target": "mbostock_3887235", "value": 20}, {"source": "hunzy_9134534", "target": "mbostock_3887193", "value": 20}, {"source": "hunzy_11110940", "target": "xaranke_9ada4c74a87b57ae7308", "value": 18}, {"source": "hunzy_11110940", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 17}, {"source": "hunzy_11110940", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 14}, {"source": "hunzy_11110940", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 17}, {"source": "hunzy_11110940", "target": "mbostock_3305937", "value": 14}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "weiglemc_bdc0474429e6567bc320", "value": 20}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "weiglemc_6185069", "value": 20}, {"source": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "target": "hunzy_9134534", "value": 20}, {"source": "git-ashish_8959381", "target": "hunzy_11110940", "value": 14}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 18}, {"source": "dustinlarimer_5701438", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 12}, {"source": "dustinlarimer_5701438", "target": "wrobstory_7630654", "value": 12}, {"source": "dustinlarimer_5701438", "target": "wrobstory_7630406", "value": 12}, {"source": "dustinlarimer_5701438", "target": "vjpgo_4689130", "value": 12}, {"source": "dustinlarimer_5701438", "target": "vjpgo_4689085", "value": 12}, {"source": "dustinlarimer_5701438", "target": "vjpgo_4687681", "value": 12}, {"source": "dustinlarimer_5701438", "target": "vjpgo_4687662", "value": 12}, {"source": "dustinlarimer_5701438", "target": "vjpgo_4687652", "value": 12}, {"source": "dustinlarimer_5701438", "target": "vjpgo_4687640", "value": 12}, {"source": "dustinlarimer_5701438", "target": "vjpgo_4687407", "value": 12}, {"source": "dustinlarimer_5701438", "target": "timelyportfolio_3106445", "value": 12}, {"source": "dustinlarimer_5701438", "target": "michalskop_6cdd572b5f618a11e966", "value": 12}, {"source": "dustinlarimer_5701438", "target": "mbostock_3306147", "value": 12}, {"source": "dustinlarimer_5701438", "target": "jdarling_06019d16cb5fd6795edf", "value": 12}, {"source": "d3noob_e1aa61856118edfa624d", "target": "xaranke_9ada4c74a87b57ae7308", "value": 18}, {"source": "d3noob_e1aa61856118edfa624d", "target": "git-ashish_8959381", "value": 16}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "weiglemc_bdc0474429e6567bc320", "value": 20}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "weiglemc_6185069", "value": 20}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "weiglemc_bdc0474429e6567bc320", "value": 20}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "weiglemc_6185069", "value": 20}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "weiglemc_bdc0474429e6567bc320", "value": 20}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "weiglemc_6185069", "value": 20}, {"source": "d3noob_4414436", "target": "weiglemc_bdc0474429e6567bc320", "value": 20}, {"source": "d3noob_4414436", "target": "weiglemc_6185069", "value": 20}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "weiglemc_bdc0474429e6567bc320", "value": 20}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "weiglemc_6185069", "value": 20}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "timelyportfolio_3106445", "value": 11}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 14}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "dustinlarimer_5701438", "value": 12}, {"source": "ashtonburg_4384949715de645a77ef", "target": "timelyportfolio_3106445", "value": 11}, {"source": "ashtonburg_4384949715de645a77ef", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 14}, {"source": "ashtonburg_4384949715de645a77ef", "target": "dustinlarimer_5701438", "value": 12}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "timelyportfolio_3106445", "value": 11}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 14}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "dustinlarimer_5701438", "value": 12}, {"source": "ZJONSSON_3918369", "target": "xaranke_9ada4c74a87b57ae7308", "value": 18}, {"source": "ZJONSSON_3918369", "target": "git-ashish_8959381", "value": 15}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "timelyportfolio_3106445", "value": 11}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "jdarling_06019d16cb5fd6795edf", "value": 11}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "timelyportfolio_3106445", "value": 11}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "jdarling_06019d16cb5fd6795edf", "value": 11}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "hunzy_11110940", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "xaranke_9ada4c74a87b57ae7308", "value": 18}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "git-ashish_8959381", "value": 16}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "hunzy_9134534", "value": 20}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "hunzy_9134534", "value": 20}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "weiglemc_bdc0474429e6567bc320", "value": 20}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "weiglemc_6185069", "value": 20}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "hunzy_9134534", "value": 20}, {"source": "espinielli_347a69f480fcd1e40db43d782439e623", "target": "renecnielsen_99ee17e86c184a616c7c", "value": 13}, {"source": "eesur_ee8d0ab88229d0e07f7f", "target": "espinielli_347a69f480fcd1e40db43d782439e623", "value": 13}, {"source": "eesur_a4679ee453aa9357977c", "target": "renecnielsen_99ee17e86c184a616c7c", "value": 13}, {"source": "dustinlarimer_5716840", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 12}, {"source": "dustinlarimer_5716840", "target": "xaranke_9ada4c74a87b57ae7308", "value": 17}, {"source": "dustinlarimer_5716840", "target": "wrobstory_7630654", "value": 12}, {"source": "dustinlarimer_5716840", "target": "wrobstory_7630406", "value": 12}, {"source": "dustinlarimer_5716840", "target": "wrobstory_7630011", "value": 12}, {"source": "dustinlarimer_5716840", "target": "wrobstory_7629900", "value": 12}, {"source": "dustinlarimer_5716840", "target": "wrobstory_7612013", "value": 12}, {"source": "dustinlarimer_5716840", "target": "vjpgo_4689130", "value": 12}, {"source": "dustinlarimer_5716840", "target": "vjpgo_4689085", "value": 12}, {"source": "dustinlarimer_5716840", "target": "vjpgo_4687681", "value": 12}, {"source": "dustinlarimer_5716840", "target": "vjpgo_4687662", "value": 12}, {"source": "dustinlarimer_5716840", "target": "vjpgo_4687652", "value": 12}, {"source": "dustinlarimer_5716840", "target": "vjpgo_4687640", "value": 12}, {"source": "dustinlarimer_5716840", "target": "vjpgo_4687407", "value": 12}, {"source": "dustinlarimer_5716840", "target": "michalskop_6cdd572b5f618a11e966", "value": 12}, {"source": "dustinlarimer_5716840", "target": "mbostock_3306147", "value": 12}, {"source": "dustinlarimer_5716840", "target": "mbostock_3305937", "value": 12}, {"source": "dustinlarimer_5716840", "target": "jdarling_06019d16cb5fd6795edf", "value": 12}, {"source": "dustinlarimer_5716840", "target": "git-ashish_8959381", "value": 13}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "dustinlarimer_5716840", "value": 12}, {"source": "ashtonburg_4384949715de645a77ef", "target": "dustinlarimer_5716840", "value": 12}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "dustinlarimer_5716840", "value": 12}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "dustinlarimer_5716840", "value": 12}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "dustinlarimer_5716840", "value": 12}, {"source": "timelyportfolio_5c136de85de1c2abb6fc", "target": "tommct_8191276", "value": 16}, {"source": "timelyportfolio_5c136de85de1c2abb6fc", "target": "tommct_5671250", "value": 16}, {"source": "renecnielsen_6ec52e5a9b88f7ca86ca", "target": "tommct_8191276", "value": 16}, {"source": "renecnielsen_6ec52e5a9b88f7ca86ca", "target": "tommct_5671250", "value": 16}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 13}, {"source": "mbostock_3305937", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 13}, {"source": "leeannoneal_cce53e0f261a99e51cf3", "target": "mbostock_b7671cb38efdfa5da3af", "value": 19}, {"source": "dmijalkovic_52fb07194d4b2988cafb", "target": "yassineAlouini_fdbca6ea6f4416e6b328", "value": 13}, {"source": "dmijalkovic_3385b8e7269b5b345558", "target": "yassineAlouini_fdbca6ea6f4416e6b328", "value": 13}, {"source": "d3noob_8952219", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 13}, {"source": "d3noob_8952219", "target": "mbostock_3305937", "value": 13}, {"source": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "target": "tmcw_4179511", "value": 21}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "xaranke_b956ee7215b7b50bc78a", "value": 17}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "vjpgo_4689130", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "vjpgo_4689085", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "vjpgo_4687681", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "vjpgo_4687662", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "vjpgo_4687652", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "vjpgo_4687640", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "vjpgo_4687407", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "mbostock_3306147", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "ashtonburg_60e84ea5cdffa49356e4", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "ashtonburg_4384949715de645a77ef", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "ashtonburg_40448d691c1cc22dd00b", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "Rico3734_fa14dff4959ccb0886a9", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "Rico3734_2d06a6aadbb4af3398ba", "value": 12}, {"source": "timelyportfolio_3106445", "target": "xaranke_b956ee7215b7b50bc78a", "value": 15}, {"source": "renecnielsen_777884b900d913917ec3", "target": "tommct_8191276", "value": 16}, {"source": "renecnielsen_777884b900d913917ec3", "target": "tommct_5671250", "value": 16}, {"source": "hunzy_9134534", "target": "mapearlson_116aa7e159d22d53f6d0", "value": 22}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "timelyportfolio_3106445", "value": 15}, {"source": "emeeks_f2fea17ba3ec3cd66f60", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 25}, {"source": "emeeks_3a54620a4751a7d68c1e", "target": "micahstubbs_948378950dd7b3e31e8cda3b33ebbcc8", "value": 14}, {"source": "dustinlarimer_5716840", "target": "xaranke_b956ee7215b7b50bc78a", "value": 15}, {"source": "dustinlarimer_5716840", "target": "fabid_0c4cf357ab5ed3e90382", "value": 15}, {"source": "dustinlarimer_5701438", "target": "xaranke_b956ee7215b7b50bc78a", "value": 15}, {"source": "dustinlarimer_5701438", "target": "fabid_0c4cf357ab5ed3e90382", "value": 15}, {"source": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "target": "hunzy_9134534", "value": 20}, {"source": "d3noob_e1aa61856118edfa624d", "target": "wrobstory_7630011", "value": 12}, {"source": "d3noob_e1aa61856118edfa624d", "target": "wrobstory_7629900", "value": 12}, {"source": "d3noob_e1aa61856118edfa624d", "target": "wrobstory_7612013", "value": 12}, {"source": "d3noob_e1aa61856118edfa624d", "target": "dustinlarimer_5701438", "value": 12}, {"source": "d3noob_8375092", "target": "tommct_8191276", "value": 12}, {"source": "d3noob_8375092", "target": "tommct_5671250", "value": 12}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "d3noob_e1aa61856118edfa624d", "value": 12}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "d3noob_e1aa61856118edfa624d", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "wrobstory_7630011", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "wrobstory_7629900", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "wrobstory_7612013", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "dustinlarimer_5701438", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "Rico3734_fa14dff4959ccb0886a9", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "Rico3734_2d06a6aadbb4af3398ba", "value": 12}, {"source": "JaapSuter_7251163", "target": "hunzy_9134534", "value": 22}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "tommct_8191276", "value": 16}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "tommct_5671250", "value": 16}, {"source": "xaranke_9ada4c74a87b57ae7308", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 16}, {"source": "vjpgo_4689130", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "vjpgo_4689085", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "vjpgo_4687681", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "vjpgo_4687662", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "vjpgo_4687652", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "vjpgo_4687640", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "vjpgo_4687407", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "tommct_8191276", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 12}, {"source": "tommct_8191276", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "tommct_8191276", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "tommct_8191276", "target": "vjpgo_4689130", "value": 12}, {"source": "tommct_8191276", "target": "vjpgo_4689085", "value": 12}, {"source": "tommct_8191276", "target": "vjpgo_4687681", "value": 12}, {"source": "tommct_8191276", "target": "vjpgo_4687662", "value": 12}, {"source": "tommct_8191276", "target": "vjpgo_4687652", "value": 12}, {"source": "tommct_8191276", "target": "vjpgo_4687640", "value": 12}, {"source": "tommct_8191276", "target": "vjpgo_4687407", "value": 12}, {"source": "tommct_5671250", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 12}, {"source": "tommct_5671250", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "tommct_5671250", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "tommct_5671250", "target": "vjpgo_4689130", "value": 12}, {"source": "tommct_5671250", "target": "vjpgo_4689085", "value": 12}, {"source": "tommct_5671250", "target": "vjpgo_4687681", "value": 12}, {"source": "tommct_5671250", "target": "vjpgo_4687662", "value": 12}, {"source": "tommct_5671250", "target": "vjpgo_4687652", "value": 12}, {"source": "tommct_5671250", "target": "vjpgo_4687640", "value": 12}, {"source": "tommct_5671250", "target": "vjpgo_4687407", "value": 12}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 12}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "vjpgo_4689130", "value": 12}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "vjpgo_4689085", "value": 12}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "vjpgo_4687681", "value": 12}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "vjpgo_4687662", "value": 12}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "vjpgo_4687652", "value": 12}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "vjpgo_4687640", "value": 12}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "vjpgo_4687407", "value": 12}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "wrobstory_7630654", "value": 12}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "wrobstory_7630406", "value": 12}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "wrobstory_7630011", "value": 12}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "wrobstory_7629900", "value": 12}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "wrobstory_7612013", "value": 12}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 12}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 13}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "vjpgo_4689130", "value": 13}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "vjpgo_4689085", "value": 13}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "vjpgo_4687681", "value": 13}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "vjpgo_4687662", "value": 13}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "vjpgo_4687652", "value": 13}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "vjpgo_4687640", "value": 13}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "vjpgo_4687407", "value": 13}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "tommct_8191276", "value": 12}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "tommct_5671250", "value": 12}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 13}, {"source": "mbostock_3306147", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "mbostock_3306147", "target": "tommct_8191276", "value": 12}, {"source": "mbostock_3306147", "target": "tommct_5671250", "value": 12}, {"source": "mbostock_3306147", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 12}, {"source": "mbostock_3306147", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 13}, {"source": "mbostock_3305937", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "mbostock_3305937", "target": "tommct_8191276", "value": 12}, {"source": "mbostock_3305937", "target": "tommct_5671250", "value": 12}, {"source": "mbostock_3305937", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 12}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 12}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "vjpgo_4689130", "value": 12}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "vjpgo_4689085", "value": 12}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "vjpgo_4687681", "value": 12}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "vjpgo_4687662", "value": 12}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "vjpgo_4687652", "value": 12}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "vjpgo_4687640", "value": 12}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "vjpgo_4687407", "value": 12}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 12}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "mbostock_3306147", "value": 12}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "mbostock_3305937", "value": 12}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 12}, {"source": "hunzy_11110940", "target": "timelyportfolio_3106445", "value": 12}, {"source": "hunzy_11110940", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 13}, {"source": "git-ashish_8959381", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 12}, {"source": "git-ashish_8959381", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "git-ashish_8959381", "target": "vjpgo_4689130", "value": 12}, {"source": "git-ashish_8959381", "target": "vjpgo_4689085", "value": 12}, {"source": "git-ashish_8959381", "target": "vjpgo_4687681", "value": 12}, {"source": "git-ashish_8959381", "target": "vjpgo_4687662", "value": 12}, {"source": "git-ashish_8959381", "target": "vjpgo_4687652", "value": 12}, {"source": "git-ashish_8959381", "target": "vjpgo_4687640", "value": 12}, {"source": "git-ashish_8959381", "target": "vjpgo_4687407", "value": 12}, {"source": "git-ashish_8959381", "target": "tommct_8191276", "value": 12}, {"source": "git-ashish_8959381", "target": "tommct_5671250", "value": 12}, {"source": "git-ashish_8959381", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 12}, {"source": "git-ashish_8959381", "target": "michalskop_6cdd572b5f618a11e966", "value": 12}, {"source": "git-ashish_8959381", "target": "mbostock_3306147", "value": 12}, {"source": "git-ashish_8959381", "target": "mbostock_3305937", "value": 12}, {"source": "git-ashish_8959381", "target": "mansfimx_27edd1f7c316218285e5", "value": 12}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "tommct_8191276", "value": 16}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "tommct_5671250", "value": 16}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "git-ashish_8959381", "value": 16}, {"source": "espinielli_17f6644f79685c42eae5", "target": "rveciana_04ce0887026bd3e6185c", "value": 21}, {"source": "emeeks_e1e661f4696af856e017", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 23}, {"source": "emeeks_2090bc8489a662c2e84d", "target": "renecnielsen_682ab33dbf139214df59", "value": 23}, {"source": "emeeks_2090bc8489a662c2e84d", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 23}, {"source": "dustinlarimer_5716840", "target": "hunzy_11110940", "value": 13}, {"source": "d3noob_e1aa61856118edfa624d", "target": "tommct_8191276", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "tommct_5671250", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 14}, {"source": "d3noob_8952219", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 13}, {"source": "d3noob_8952219", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "d3noob_8952219", "target": "vjpgo_4689130", "value": 13}, {"source": "d3noob_8952219", "target": "vjpgo_4689085", "value": 13}, {"source": "d3noob_8952219", "target": "vjpgo_4687681", "value": 13}, {"source": "d3noob_8952219", "target": "vjpgo_4687662", "value": 13}, {"source": "d3noob_8952219", "target": "vjpgo_4687652", "value": 13}, {"source": "d3noob_8952219", "target": "vjpgo_4687640", "value": 13}, {"source": "d3noob_8952219", "target": "vjpgo_4687407", "value": 13}, {"source": "d3noob_8952219", "target": "mbostock_3306147", "value": 13}, {"source": "d3noob_8952219", "target": "hunzy_11110940", "value": 13}, {"source": "benkimball_8570073", "target": "dustinlarimer_5701438", "value": 14}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "tommct_8191276", "value": 12}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "tommct_5671250", "value": 12}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 12}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 13}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "mansfimx_27edd1f7c316218285e5", "value": 12}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "git-ashish_8959381", "value": 12}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "d3noob_8952219", "value": 13}, {"source": "ashtonburg_4384949715de645a77ef", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "ashtonburg_4384949715de645a77ef", "target": "tommct_8191276", "value": 12}, {"source": "ashtonburg_4384949715de645a77ef", "target": "tommct_5671250", "value": 12}, {"source": "ashtonburg_4384949715de645a77ef", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 12}, {"source": "ashtonburg_4384949715de645a77ef", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 13}, {"source": "ashtonburg_4384949715de645a77ef", "target": "mansfimx_27edd1f7c316218285e5", "value": 12}, {"source": "ashtonburg_4384949715de645a77ef", "target": "git-ashish_8959381", "value": 12}, {"source": "ashtonburg_4384949715de645a77ef", "target": "d3noob_8952219", "value": 13}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "tommct_8191276", "value": 12}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "tommct_5671250", "value": 12}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 12}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 13}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "mansfimx_27edd1f7c316218285e5", "value": 12}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "git-ashish_8959381", "value": 12}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "d3noob_8952219", "value": 13}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "vjpgo_4689130", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "vjpgo_4689085", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "vjpgo_4687681", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "vjpgo_4687662", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "vjpgo_4687652", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "vjpgo_4687640", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "vjpgo_4687407", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "mbostock_3306147", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "mbostock_3305937", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "git-ashish_8959381", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "ashtonburg_60e84ea5cdffa49356e4", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "ashtonburg_4384949715de645a77ef", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "ashtonburg_40448d691c1cc22dd00b", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "vjpgo_4689130", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "vjpgo_4689085", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "vjpgo_4687681", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "vjpgo_4687662", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "vjpgo_4687652", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "vjpgo_4687640", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "vjpgo_4687407", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "mbostock_3306147", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "mbostock_3305937", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "git-ashish_8959381", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "ashtonburg_60e84ea5cdffa49356e4", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "ashtonburg_4384949715de645a77ef", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "ashtonburg_40448d691c1cc22dd00b", "value": 12}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 12}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "tommct_8191276", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "tommct_5671250", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 14}, {"source": "michalskop_6cdd572b5f618a11e966", "target": "timelyportfolio_5149102", "value": 19}, {"source": "mgold_3cb71efd1287f5c03c80", "target": "timelyportfolio_5149102", "value": 18}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "git-ashish_8959381", "target": "jdarling_06019d16cb5fd6795edf", "value": 12}, {"source": "emeeks_0d69f4a8c717d5548977", "target": "renecnielsen_682ab33dbf139214df59", "value": 22}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "weiglemc_bdc0474429e6567bc320", "value": 11}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "weiglemc_6185069", "value": 11}, {"source": "d3noob_e1aa61856118edfa624d", "target": "mgold_3cb71efd1287f5c03c80", "value": 12}, {"source": "benkimball_8570073", "target": "dustinlarimer_5716840", "value": 14}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "vjpgo_4689130", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "vjpgo_4689085", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "vjpgo_4687681", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "vjpgo_4687662", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "vjpgo_4687652", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "vjpgo_4687640", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "vjpgo_4687407", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "mbostock_3306147", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "mbostock_3305937", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "git-ashish_8959381", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "ashtonburg_60e84ea5cdffa49356e4", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "ashtonburg_4384949715de645a77ef", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "ashtonburg_40448d691c1cc22dd00b", "value": 12}, {"source": "ZJONSSON_3918369", "target": "mgold_3cb71efd1287f5c03c80", "value": 18}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "mgold_3cb71efd1287f5c03c80", "value": 12}, {"source": "mgold_e21dbf08e838796dcf60", "target": "timelyportfolio_5149102", "value": 19}, {"source": "emeeks_e484f2b1b5ba6c4742f6", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 18}, {"source": "emeeks_86da8f19e58ccb668750", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 25}, {"source": "emeeks_790788687df9e560e288", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 24}, {"source": "emeeks_2792df20a4b490c3e3ff", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 23}, {"source": "emeeks_066e20c1ce5008f884eb", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 25}, {"source": "d3noob_fa0f16e271cb191ae85f", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 13}, {"source": "d3noob_fa0f16e271cb191ae85f", "target": "nguyenbq_a350280a02c8105529d0", "value": 13}, {"source": "d3noob_fa0f16e271cb191ae85f", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 13}, {"source": "d3noob_fa0f16e271cb191ae85f", "target": "hungvietdo_28d434d3818db4fbe369", "value": 13}, {"source": "benkimball_8570073", "target": "git-ashish_e7182a82862071b405b5", "value": 12}, {"source": "benkimball_8570073", "target": "d3noob_5886992", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "fabid_0c4cf357ab5ed3e90382", "value": 16}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "d3noob_fa0f16e271cb191ae85f", "value": 13}, {"source": "timelyportfolio_5c136de85de1c2abb6fc", "target": "wrobstory_7630406", "value": 14}, {"source": "timelyportfolio_5c136de85de1c2abb6fc", "target": "wrobstory_7630011", "value": 14}, {"source": "timelyportfolio_5c136de85de1c2abb6fc", "target": "wrobstory_7629900", "value": 14}, {"source": "renecnielsen_777884b900d913917ec3", "target": "wrobstory_7630654", "value": 14}, {"source": "renecnielsen_777884b900d913917ec3", "target": "wrobstory_7630406", "value": 14}, {"source": "renecnielsen_777884b900d913917ec3", "target": "wrobstory_7630011", "value": 14}, {"source": "renecnielsen_777884b900d913917ec3", "target": "wrobstory_7629900", "value": 14}, {"source": "renecnielsen_777884b900d913917ec3", "target": "wrobstory_7612013", "value": 14}, {"source": "renecnielsen_6ec52e5a9b88f7ca86ca", "target": "wrobstory_7630406", "value": 14}, {"source": "renecnielsen_6ec52e5a9b88f7ca86ca", "target": "wrobstory_7630011", "value": 14}, {"source": "renecnielsen_6ec52e5a9b88f7ca86ca", "target": "wrobstory_7629900", "value": 14}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 11}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 11}, {"source": "mortenjohs_4739921", "target": "mpmckenna8_8874545", "value": 19}, {"source": "hunzy_11110940", "target": "renecnielsen_777884b900d913917ec3", "value": 14}, {"source": "git-ashish_e7182a82862071b405b5", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 13}, {"source": "git-ashish_e7182a82862071b405b5", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "git-ashish_e7182a82862071b405b5", "target": "vjpgo_4689130", "value": 13}, {"source": "git-ashish_e7182a82862071b405b5", "target": "vjpgo_4689085", "value": 13}, {"source": "git-ashish_e7182a82862071b405b5", "target": "vjpgo_4687681", "value": 13}, {"source": "git-ashish_e7182a82862071b405b5", "target": "vjpgo_4687662", "value": 13}, {"source": "git-ashish_e7182a82862071b405b5", "target": "vjpgo_4687652", "value": 13}, {"source": "git-ashish_e7182a82862071b405b5", "target": "vjpgo_4687640", "value": 13}, {"source": "git-ashish_e7182a82862071b405b5", "target": "vjpgo_4687407", "value": 13}, {"source": "git-ashish_e7182a82862071b405b5", "target": "michalskop_6cdd572b5f618a11e966", "value": 13}, {"source": "git-ashish_e7182a82862071b405b5", "target": "mbostock_3306147", "value": 13}, {"source": "git-ashish_e7182a82862071b405b5", "target": "mbostock_3305937", "value": 13}, {"source": "faniepotgieter_2ebcb3004abe34c380cc", "target": "wrobstory_7630654", "value": 13}, {"source": "faniepotgieter_2ebcb3004abe34c380cc", "target": "wrobstory_7630406", "value": 13}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "git-ashish_e7182a82862071b405b5", "value": 16}, {"source": "dmijalkovic_52fb07194d4b2988cafb", "target": "jhellier_26fdb3c8ebd5dcb9a143", "value": 12}, {"source": "dmijalkovic_3385b8e7269b5b345558", "target": "jhellier_26fdb3c8ebd5dcb9a143", "value": 12}, {"source": "d3noob_e1aa61856118edfa624d", "target": "git-ashish_e7182a82862071b405b5", "value": 13}, {"source": "d3noob_8952219", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 11}, {"source": "d3noob_8952219", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 11}, {"source": "d3noob_5886992", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 13}, {"source": "d3noob_5886992", "target": "xaranke_b956ee7215b7b50bc78a", "value": 16}, {"source": "d3noob_5886992", "target": "vjpgo_4689130", "value": 13}, {"source": "d3noob_5886992", "target": "vjpgo_4689085", "value": 13}, {"source": "d3noob_5886992", "target": "vjpgo_4687681", "value": 13}, {"source": "d3noob_5886992", "target": "vjpgo_4687662", "value": 13}, {"source": "d3noob_5886992", "target": "vjpgo_4687652", "value": 13}, {"source": "d3noob_5886992", "target": "vjpgo_4687640", "value": 13}, {"source": "d3noob_5886992", "target": "vjpgo_4687407", "value": 13}, {"source": "d3noob_5886992", "target": "michalskop_6cdd572b5f618a11e966", "value": 13}, {"source": "d3noob_5886992", "target": "mbostock_3306147", "value": 13}, {"source": "d3noob_5886992", "target": "mbostock_3305937", "value": 13}, {"source": "d3noob_5886992", "target": "fabid_0c4cf357ab5ed3e90382", "value": 16}, {"source": "benkimball_8570073", "target": "wrobstory_7630654", "value": 12}, {"source": "benkimball_8570073", "target": "wrobstory_7630406", "value": 12}, {"source": "benkimball_8570073", "target": "wrobstory_7630011", "value": 12}, {"source": "benkimball_8570073", "target": "wrobstory_7629900", "value": 12}, {"source": "benkimball_8570073", "target": "wrobstory_7612013", "value": 12}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "git-ashish_e7182a82862071b405b5", "value": 13}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "d3noob_5886992", "value": 13}, {"source": "ashtonburg_4384949715de645a77ef", "target": "git-ashish_e7182a82862071b405b5", "value": 13}, {"source": "ashtonburg_4384949715de645a77ef", "target": "d3noob_5886992", "value": 13}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "git-ashish_e7182a82862071b405b5", "value": 13}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "d3noob_5886992", "value": 13}, {"source": "ZJONSSON_3918369", "target": "git-ashish_e7182a82862071b405b5", "value": 13}, {"source": "ZJONSSON_3918369", "target": "d3noob_5886992", "value": 13}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "benkimball_8570073", "value": 12}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "benkimball_8570073", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "git-ashish_e7182a82862071b405b5", "value": 13}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "d3noob_5886992", "value": 13}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "wrobstory_7630654", "value": 14}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "wrobstory_7630406", "value": 14}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "wrobstory_7630011", "value": 14}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "wrobstory_7629900", "value": 14}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "wrobstory_7612013", "value": 14}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "hunzy_11110940", "value": 14}, {"source": "wrobstory_7630654", "target": "xaranke_9ada4c74a87b57ae7308", "value": 15}, {"source": "wrobstory_7630406", "target": "xaranke_9ada4c74a87b57ae7308", "value": 15}, {"source": "wrobstory_7630011", "target": "xaranke_9ada4c74a87b57ae7308", "value": 15}, {"source": "wrobstory_7629900", "target": "xaranke_9ada4c74a87b57ae7308", "value": 15}, {"source": "wrobstory_7612013", "target": "xaranke_9ada4c74a87b57ae7308", "value": 15}, {"source": "weiglemc_bdc0474429e6567bc320", "target": "xaranke_b956ee7215b7b50bc78a", "value": 14}, {"source": "weiglemc_bdc0474429e6567bc320", "target": "xaranke_9ada4c74a87b57ae7308", "value": 14}, {"source": "weiglemc_6185069", "target": "xaranke_b956ee7215b7b50bc78a", "value": 14}, {"source": "weiglemc_6185069", "target": "xaranke_9ada4c74a87b57ae7308", "value": 14}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "xaranke_9ada4c74a87b57ae7308", "value": 14}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "wrobstory_7630654", "value": 11}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "wrobstory_7630406", "value": 11}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "tommct_8191276", "value": 11}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "tommct_5671250", "value": 11}, {"source": "hunzy_9134534", "target": "steveharoz_0638d230c133da1de385", "value": 20}, {"source": "git-ashish_e7182a82862071b405b5", "target": "jdarling_06019d16cb5fd6795edf", "value": 13}, {"source": "git-ashish_8959381", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 11}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "weiglemc_bdc0474429e6567bc320", "value": 14}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "weiglemc_6185069", "value": 14}, {"source": "dustinlarimer_5716840", "target": "tommct_8191276", "value": 11}, {"source": "dustinlarimer_5716840", "target": "tommct_5671250", "value": 11}, {"source": "dustinlarimer_5716840", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 11}, {"source": "dustinlarimer_5716840", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 11}, {"source": "dustinlarimer_5716840", "target": "mansfimx_27edd1f7c316218285e5", "value": 11}, {"source": "dustinlarimer_5701438", "target": "xaranke_9ada4c74a87b57ae7308", "value": 15}, {"source": "dustinlarimer_5701438", "target": "tommct_8191276", "value": 11}, {"source": "dustinlarimer_5701438", "target": "tommct_5671250", "value": 11}, {"source": "dustinlarimer_5701438", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 11}, {"source": "dustinlarimer_5701438", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 11}, {"source": "dustinlarimer_5701438", "target": "mansfimx_27edd1f7c316218285e5", "value": 11}, {"source": "dustinlarimer_5701438", "target": "hunzy_11110940", "value": 11}, {"source": "dustinlarimer_5701438", "target": "git-ashish_8959381", "value": 11}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "renecnielsen_777884b900d913917ec3", "value": 19}, {"source": "d3noob_fa0f16e271cb191ae85f", "target": "xaranke_b956ee7215b7b50bc78a", "value": 15}, {"source": "d3noob_fa0f16e271cb191ae85f", "target": "fabid_0c4cf357ab5ed3e90382", "value": 15}, {"source": "d3noob_fa0f16e271cb191ae85f", "target": "dustinlarimer_5716840", "value": 11}, {"source": "d3noob_fa0f16e271cb191ae85f", "target": "dustinlarimer_5701438", "value": 11}, {"source": "d3noob_e1aa61856118edfa624d", "target": "weiglemc_bdc0474429e6567bc320", "value": 12}, {"source": "d3noob_e1aa61856118edfa624d", "target": "weiglemc_6185069", "value": 12}, {"source": "d3noob_8952219", "target": "xaranke_9ada4c74a87b57ae7308", "value": 14}, {"source": "d3noob_8952219", "target": "wrobstory_7630654", "value": 11}, {"source": "d3noob_8952219", "target": "wrobstory_7630406", "value": 11}, {"source": "d3noob_8952219", "target": "tommct_8191276", "value": 11}, {"source": "d3noob_8952219", "target": "tommct_5671250", "value": 11}, {"source": "d3noob_8952219", "target": "git-ashish_8959381", "value": 11}, {"source": "d3noob_8375092", "target": "xaranke_b956ee7215b7b50bc78a", "value": 15}, {"source": "d3noob_8375092", "target": "fabid_0c4cf357ab5ed3e90382", "value": 15}, {"source": "d3noob_8375092", "target": "dustinlarimer_5716840", "value": 11}, {"source": "d3noob_8375092", "target": "dustinlarimer_5701438", "value": 11}, {"source": "d3noob_8326869", "target": "xaranke_b956ee7215b7b50bc78a", "value": 15}, {"source": "d3noob_8326869", "target": "fabid_0c4cf357ab5ed3e90382", "value": 15}, {"source": "d3noob_8326869", "target": "dustinlarimer_5716840", "value": 11}, {"source": "d3noob_8326869", "target": "dustinlarimer_5701438", "value": 11}, {"source": "d3noob_8323795", "target": "xaranke_b956ee7215b7b50bc78a", "value": 15}, {"source": "d3noob_8323795", "target": "fabid_0c4cf357ab5ed3e90382", "value": 15}, {"source": "d3noob_8323795", "target": "dustinlarimer_5716840", "value": 11}, {"source": "d3noob_8323795", "target": "dustinlarimer_5701438", "value": 11}, {"source": "d3noob_5886992", "target": "jdarling_06019d16cb5fd6795edf", "value": 13}, {"source": "benkimball_8570073", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 12}, {"source": "benkimball_8570073", "target": "vjpgo_4689130", "value": 12}, {"source": "benkimball_8570073", "target": "vjpgo_4689085", "value": 12}, {"source": "benkimball_8570073", "target": "vjpgo_4687681", "value": 12}, {"source": "benkimball_8570073", "target": "vjpgo_4687662", "value": 12}, {"source": "benkimball_8570073", "target": "vjpgo_4687652", "value": 12}, {"source": "benkimball_8570073", "target": "vjpgo_4687640", "value": 12}, {"source": "benkimball_8570073", "target": "vjpgo_4687407", "value": 12}, {"source": "benkimball_8570073", "target": "timelyportfolio_3106445", "value": 12}, {"source": "benkimball_8570073", "target": "michalskop_6cdd572b5f618a11e966", "value": 12}, {"source": "benkimball_8570073", "target": "mbostock_3306147", "value": 12}, {"source": "benkimball_8570073", "target": "mbostock_3305937", "value": 12}, {"source": "benkimball_8570073", "target": "jdarling_06019d16cb5fd6795edf", "value": 12}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "benkimball_8570073", "value": 12}, {"source": "ashtonburg_4384949715de645a77ef", "target": "benkimball_8570073", "value": 12}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "benkimball_8570073", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "dustinlarimer_5716840", "value": 11}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "dustinlarimer_5701438", "value": 11}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "dustinlarimer_5716840", "value": 11}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "dustinlarimer_5701438", "value": 11}, {"source": "ZJONSSON_3918369", "target": "weiglemc_bdc0474429e6567bc320", "value": 11}, {"source": "ZJONSSON_3918369", "target": "weiglemc_6185069", "value": 11}, {"source": "YasufumiSaito_35b59c0b074cac700798", "target": "enjalot_ce9a88c24e5e11563e06", "value": 21}, {"source": "WillTurman_4631136", "target": "renecnielsen_777884b900d913917ec3", "value": 19}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "xaranke_9ada4c74a87b57ae7308", "value": 15}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 11}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "d3noob_8952219", "value": 11}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "xaranke_9ada4c74a87b57ae7308", "value": 15}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 11}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "d3noob_8952219", "value": 11}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "weiglemc_bdc0474429e6567bc320", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "weiglemc_6185069", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "d3noob_fa0f16e271cb191ae85f", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "d3noob_8375092", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "d3noob_8326869", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "d3noob_8323795", "value": 12}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "dukevis_84ed35ed91f857ec3d79", "value": 19}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "WillTurman_4631136", "value": 19}, {"source": "renecnielsen_6ec52e5a9b88f7ca86ca", "target": "timelyportfolio_5149102", "value": 19}, {"source": "emeeks_b60d4c31f5802a120456", "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "value": 19}, {"source": "emeeks_b60d4c31f5802a120456", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 19}, {"source": "emeeks_b60d4c31f5802a120456", "target": "mpmckenna8_23751a2094c7db90575a", "value": 19}, {"source": "emeeks_abcc82cc61c52fc47b19", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 21}, {"source": "emeeks_2090bc8489a662c2e84d", "target": "renecnielsen_c072f8145713cb3f0bde", "value": 21}, {"source": "cheneymb_1938bab155ab57919bd792ad706dc6dd", "target": "thejenbo_5d0b8c55f9eec9287776a8fdb38c51b2", "value": 17}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "dustinlarimer_5716840", "value": 11}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "dustinlarimer_5701438", "value": 11}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "weiglemc_bdc0474429e6567bc320", "value": 17}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "weiglemc_6185069", "value": 17}, {"source": "fabid_8b6a0277075d770f088a", "target": "xaranke_b956ee7215b7b50bc78a", "value": 21}, {"source": "emeeks_a726210cbc439b969f02", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 13}, {"source": "emeeks_37c28b6ff0e01f69b4cd", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 24}, {"source": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "target": "hunzy_9134534", "value": 18}, {"source": "Jay-Oh-eN_9337d41b59b2bcee149004e811d5b266", "target": "weiglemc_bdc0474429e6567bc320", "value": 21}, {"source": "timelyportfolio_5149102", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 12}, {"source": "ptvans_461585105bdbc14b4e85", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 14}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "target": "timelyportfolio_5149102", "value": 13}, {"source": "nivas8292_222939d7c74c5de09387", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 14}, {"source": "nguyenbq_a350280a02c8105529d0", "target": "ptvans_461585105bdbc14b4e85", "value": 14}, {"source": "nguyenbq_a350280a02c8105529d0", "target": "nivas8292_222939d7c74c5de09387", "value": 14}, {"source": "nguyenbq_85a4c204a61fa6407aed", "target": "ptvans_461585105bdbc14b4e85", "value": 14}, {"source": "nguyenbq_85a4c204a61fa6407aed", "target": "nivas8292_222939d7c74c5de09387", "value": 14}, {"source": "maptastik_4a69f2f4c697e097ee74", "target": "rgdonohue_4793dab7f993a81cc670", "value": 21}, {"source": "jczaplew_6453048", "target": "mpmckenna8_8874545", "value": 24}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "timelyportfolio_5149102", "value": 12}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "ptvans_461585105bdbc14b4e85", "value": 14}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "nivas8292_222939d7c74c5de09387", "value": 14}, {"source": "git-ashish_e7182a82862071b405b5", "target": "wrobstory_7630654", "value": 11}, {"source": "git-ashish_e7182a82862071b405b5", "target": "wrobstory_7630406", "value": 11}, {"source": "git-ashish_e7182a82862071b405b5", "target": "wrobstory_7630011", "value": 11}, {"source": "git-ashish_e7182a82862071b405b5", "target": "wrobstory_7629900", "value": 11}, {"source": "git-ashish_e7182a82862071b405b5", "target": "wrobstory_7612013", "value": 11}, {"source": "git-ashish_e7182a82862071b405b5", "target": "timelyportfolio_3106445", "value": 11}, {"source": "espinielli_4d17fa15a7a5084e217992f985fba484", "target": "rveciana_5181026", "value": 21}, {"source": "dustinlarimer_5716840", "target": "git-ashish_e7182a82862071b405b5", "value": 11}, {"source": "dustinlarimer_5701438", "target": "git-ashish_e7182a82862071b405b5", "value": 11}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "timelyportfolio_5149102", "value": 12}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "ptvans_461585105bdbc14b4e85", "value": 14}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "nivas8292_222939d7c74c5de09387", "value": 14}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "timelyportfolio_5149102", "value": 12}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "ptvans_461585105bdbc14b4e85", "value": 14}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "nivas8292_222939d7c74c5de09387", "value": 14}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "timelyportfolio_5149102", "value": 12}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "ptvans_461585105bdbc14b4e85", "value": 14}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "nivas8292_222939d7c74c5de09387", "value": 14}, {"source": "d3noob_5886992", "target": "wrobstory_7630654", "value": 11}, {"source": "d3noob_5886992", "target": "wrobstory_7630406", "value": 11}, {"source": "d3noob_5886992", "target": "wrobstory_7630011", "value": 11}, {"source": "d3noob_5886992", "target": "wrobstory_7629900", "value": 11}, {"source": "d3noob_5886992", "target": "wrobstory_7612013", "value": 11}, {"source": "d3noob_5886992", "target": "timelyportfolio_3106445", "value": 11}, {"source": "d3noob_5886992", "target": "dustinlarimer_5716840", "value": 11}, {"source": "d3noob_5886992", "target": "dustinlarimer_5701438", "value": 11}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "ptvans_461585105bdbc14b4e85", "value": 14}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "nivas8292_222939d7c74c5de09387", "value": 14}, {"source": "d3noob_4414436", "target": "timelyportfolio_5149102", "value": 12}, {"source": "d3noob_4414436", "target": "ptvans_461585105bdbc14b4e85", "value": 14}, {"source": "d3noob_4414436", "target": "nivas8292_222939d7c74c5de09387", "value": 14}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "ptvans_461585105bdbc14b4e85", "value": 14}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "nivas8292_222939d7c74c5de09387", "value": 14}, {"source": "benkimball_8570073", "target": "xaranke_b956ee7215b7b50bc78a", "value": 15}, {"source": "benkimball_8570073", "target": "fabid_0c4cf357ab5ed3e90382", "value": 15}, {"source": "benkimball_8570073", "target": "d3noob_e1aa61856118edfa624d", "value": 11}, {"source": "ZJONSSON_3918369", "target": "tommct_8049508", "value": 14}, {"source": "ZJONSSON_3918369", "target": "tommct_8047063", "value": 14}, {"source": "ZJONSSON_3918369", "target": "benkimball_8570073", "value": 11}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "git-ashish_e7182a82862071b405b5", "value": 11}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "d3noob_5886992", "value": 11}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "git-ashish_e7182a82862071b405b5", "value": 11}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "d3noob_5886992", "value": 11}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "benkimball_8570073", "value": 11}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "timelyportfolio_5149102", "value": 12}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "ptvans_461585105bdbc14b4e85", "value": 14}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "nivas8292_222939d7c74c5de09387", "value": 14}, {"source": "xaranke_b956ee7215b7b50bc78a", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 13}, {"source": "xaranke_9ada4c74a87b57ae7308", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 13}, {"source": "nguyenbq_a350280a02c8105529d0", "target": "xaranke_b956ee7215b7b50bc78a", "value": 13}, {"source": "nguyenbq_a350280a02c8105529d0", "target": "xaranke_9ada4c74a87b57ae7308", "value": 13}, {"source": "nguyenbq_85a4c204a61fa6407aed", "target": "xaranke_b956ee7215b7b50bc78a", "value": 13}, {"source": "nguyenbq_85a4c204a61fa6407aed", "target": "xaranke_9ada4c74a87b57ae7308", "value": 13}, {"source": "leeannoneal_cce53e0f261a99e51cf3", "target": "mbostock_f8f88029f3a5fde00407", "value": 17}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "xaranke_b956ee7215b7b50bc78a", "value": 13}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "xaranke_9ada4c74a87b57ae7308", "value": 13}, {"source": "git-ashish_e7182a82862071b405b5", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "git-ashish_e7182a82862071b405b5", "target": "tommct_8191276", "value": 12}, {"source": "git-ashish_e7182a82862071b405b5", "target": "tommct_5671250", "value": 12}, {"source": "git-ashish_e7182a82862071b405b5", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 12}, {"source": "git-ashish_e7182a82862071b405b5", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 12}, {"source": "git-ashish_e7182a82862071b405b5", "target": "mansfimx_27edd1f7c316218285e5", "value": 12}, {"source": "git-ashish_e7182a82862071b405b5", "target": "hunzy_11110940", "value": 12}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 13}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "nguyenbq_a350280a02c8105529d0", "value": 13}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "nguyenbq_85a4c204a61fa6407aed", "value": 13}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "hungvietdo_28d434d3818db4fbe369", "value": 13}, {"source": "enjalot_ce9a88c24e5e11563e06", "target": "rvross_b3a10c9d95945216a0a889249ec421b0", "value": 16}, {"source": "enjalot_ce9a88c24e5e11563e06", "target": "rvross_ac78fbba1282c7b228253b97b0090e6b", "value": 16}, {"source": "emeeks_f8c0220c54ec8347ea95", "target": "renecnielsen_682ab33dbf139214df59", "value": 18}, {"source": "emeeks_28fcb6803748a31718d9", "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "value": 14}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "xaranke_b956ee7215b7b50bc78a", "value": 13}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "xaranke_9ada4c74a87b57ae7308", "value": 13}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "fabid_0c4cf357ab5ed3e90382", "value": 13}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "xaranke_b956ee7215b7b50bc78a", "value": 13}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "xaranke_9ada4c74a87b57ae7308", "value": 13}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "fabid_0c4cf357ab5ed3e90382", "value": 13}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "xaranke_b956ee7215b7b50bc78a", "value": 13}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "xaranke_9ada4c74a87b57ae7308", "value": 13}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "fabid_0c4cf357ab5ed3e90382", "value": 13}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "xaranke_b956ee7215b7b50bc78a", "value": 13}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "xaranke_9ada4c74a87b57ae7308", "value": 13}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "fabid_0c4cf357ab5ed3e90382", "value": 13}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "xaranke_b956ee7215b7b50bc78a", "value": 13}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "xaranke_9ada4c74a87b57ae7308", "value": 13}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "fabid_0c4cf357ab5ed3e90382", "value": 13}, {"source": "d3noob_5886992", "target": "xaranke_9ada4c74a87b57ae7308", "value": 16}, {"source": "d3noob_5886992", "target": "tommct_8191276", "value": 12}, {"source": "d3noob_5886992", "target": "tommct_5671250", "value": 12}, {"source": "d3noob_5886992", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 12}, {"source": "d3noob_5886992", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 12}, {"source": "d3noob_5886992", "target": "mansfimx_27edd1f7c316218285e5", "value": 12}, {"source": "d3noob_5886992", "target": "hunzy_11110940", "value": 12}, {"source": "d3noob_5886992", "target": "git-ashish_8959381", "value": 12}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "xaranke_b956ee7215b7b50bc78a", "value": 13}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "xaranke_9ada4c74a87b57ae7308", "value": 13}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "fabid_0c4cf357ab5ed3e90382", "value": 13}, {"source": "d3noob_4414436", "target": "xaranke_b956ee7215b7b50bc78a", "value": 13}, {"source": "d3noob_4414436", "target": "xaranke_9ada4c74a87b57ae7308", "value": 13}, {"source": "d3noob_4414436", "target": "fabid_0c4cf357ab5ed3e90382", "value": 13}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "xaranke_b956ee7215b7b50bc78a", "value": 13}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "xaranke_9ada4c74a87b57ae7308", "value": 13}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "fabid_0c4cf357ab5ed3e90382", "value": 13}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "git-ashish_e7182a82862071b405b5", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "d3noob_5886992", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "git-ashish_e7182a82862071b405b5", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "d3noob_5886992", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "xaranke_9ada4c74a87b57ae7308", "value": 13}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "xaranke_b956ee7215b7b50bc78a", "value": 13}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "xaranke_9ada4c74a87b57ae7308", "value": 13}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "fabid_0c4cf357ab5ed3e90382", "value": 13}, {"source": "timelyportfolio_5149102", "target": "wrobstory_7630654", "value": 18}, {"source": "timelyportfolio_5149102", "target": "wrobstory_7630406", "value": 18}, {"source": "timelyportfolio_5149102", "target": "wrobstory_7630011", "value": 18}, {"source": "timelyportfolio_5149102", "target": "wrobstory_7629900", "value": 18}, {"source": "timelyportfolio_5149102", "target": "wrobstory_7612013", "value": 18}, {"source": "mgold_e21dbf08e838796dcf60", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 16}, {"source": "mgold_e21dbf08e838796dcf60", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 17}, {"source": "mgold_e21dbf08e838796dcf60", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 16}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "mgold_e21dbf08e838796dcf60", "value": 17}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "mgold_e21dbf08e838796dcf60", "value": 17}, {"source": "hunzy_11110940", "target": "timelyportfolio_5149102", "value": 16}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "timelyportfolio_5149102", "value": 19}, {"source": "emeeks_a950399780ca90589f59", "target": "renecnielsen_87e6126d58f86d216a3b", "value": 25}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "mgold_e21dbf08e838796dcf60", "value": 14}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "mgold_e21dbf08e838796dcf60", "value": 17}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "mgold_e21dbf08e838796dcf60", "value": 17}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "git-ashish_e7182a82862071b405b5", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "d3noob_5886992", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "mgold_e21dbf08e838796dcf60", "value": 17}, {"source": "ZJONSSON_3918369", "target": "mgold_e21dbf08e838796dcf60", "value": 17}, {"source": "leeannoneal_cce53e0f261a99e51cf3", "target": "mbostock_32bd93b1cc0fbccc9bf9", "value": 19}, {"source": "emeeks_b60d4c31f5802a120456", "target": "renecnielsen_682ab33dbf139214df59", "value": 18}, {"source": "dwtkns_c6945b98afe6cc2fc410", "target": "rveciana_170a76b8dc1f9cfd8b2d", "value": 24}, {"source": "david4096_5819181", "target": "dwtkns_c6945b98afe6cc2fc410", "value": 24}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "timelyportfolio_5149102", "value": 18}, {"source": "hunzy_11110940", "target": "mgold_e21dbf08e838796dcf60", "value": 15}, {"source": "hunzy_11110940", "target": "mgold_3cb71efd1287f5c03c80", "value": 15}, {"source": "cpietsch_dc76fc25863458a6a83e", "target": "rveciana_170a76b8dc1f9cfd8b2d", "value": 16}, {"source": "cpietsch_dc76fc25863458a6a83e", "target": "david4096_5819181", "value": 16}, {"source": "mpmckenna8_8874545", "target": "rveciana_170a76b8dc1f9cfd8b2d", "value": 16}, {"source": "git-ashish_e7182a82862071b405b5", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 11}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "tommct_8049508", "value": 13}, {"source": "dustinlarimer_5701438", "target": "faniepotgieter_2ebcb3004abe34c380cc", "value": 11}, {"source": "dmijalkovic_52fb07194d4b2988cafb", "target": "wrobstory_7630654", "value": 13}, {"source": "dmijalkovic_52fb07194d4b2988cafb", "target": "wrobstory_7630406", "value": 13}, {"source": "dmijalkovic_3385b8e7269b5b345558", "target": "wrobstory_7630654", "value": 13}, {"source": "dmijalkovic_3385b8e7269b5b345558", "target": "wrobstory_7630406", "value": 13}, {"source": "d3noob_8952219", "target": "git-ashish_e7182a82862071b405b5", "value": 11}, {"source": "d3noob_5886992", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 11}, {"source": "benkimball_8570073", "target": "xaranke_9ada4c74a87b57ae7308", "value": 15}, {"source": "benkimball_8570073", "target": "tommct_5671250", "value": 11}, {"source": "benkimball_8570073", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 11}, {"source": "benkimball_8570073", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 11}, {"source": "benkimball_8570073", "target": "mansfimx_27edd1f7c316218285e5", "value": 11}, {"source": "benkimball_8570073", "target": "hunzy_11110940", "value": 11}, {"source": "benkimball_8570073", "target": "git-ashish_8959381", "value": 11}, {"source": "benkimball_8570073", "target": "d3noob_fa0f16e271cb191ae85f", "value": 11}, {"source": "benkimball_8570073", "target": "d3noob_8375092", "value": 11}, {"source": "benkimball_8570073", "target": "d3noob_8326869", "value": 11}, {"source": "benkimball_8570073", "target": "d3noob_8323795", "value": 11}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "benkimball_8570073", "value": 11}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "benkimball_8570073", "value": 11}, {"source": "fabid_024452c42b94723b401d", "target": "ptvans_461585105bdbc14b4e85", "value": 17}, {"source": "fabid_024452c42b94723b401d", "target": "nivas8292_222939d7c74c5de09387", "value": 17}, {"source": "dustinlarimer_5716840", "target": "faniepotgieter_2ebcb3004abe34c380cc", "value": 11}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "tommct_8191276", "value": 16}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "tommct_5671250", "value": 16}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "hunzy_11110940", "value": 15}, {"source": "daluu_d43ec5e610dd5dedbbe1", "target": "dukevis_84ed35ed91f857ec3d79", "value": 16}, {"source": "d3noob_e1aa61856118edfa624d", "target": "dukevis_84ed35ed91f857ec3d79", "value": 11}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "benkimball_8570073", "value": 11}, {"source": "ZJONSSON_3918369", "target": "dukevis_84ed35ed91f857ec3d79", "value": 15}, {"source": "WillTurman_4631136", "target": "tommct_8191276", "value": 16}, {"source": "WillTurman_4631136", "target": "tommct_5671250", "value": 16}, {"source": "WillTurman_4631136", "target": "hunzy_11110940", "value": 15}, {"source": "WillTurman_4631136", "target": "fabid_0c4cf357ab5ed3e90382", "value": 11}, {"source": "WillTurman_4631136", "target": "daluu_d43ec5e610dd5dedbbe1", "value": 16}, {"source": "WillTurman_4631136", "target": "d3noob_e1aa61856118edfa624d", "value": 11}, {"source": "WillTurman_4631136", "target": "ZJONSSON_3918369", "value": 15}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "dukevis_84ed35ed91f857ec3d79", "value": 11}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "WillTurman_4631136", "value": 11}, {"source": "ZJONSSON_3918369", "target": "mgold_0f1d3667b74ea5616d9f", "value": 15}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "zaccagbj_dd67a952700b2f2dcf89", "value": 14}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "xaranke_b956ee7215b7b50bc78a", "value": 17}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "vjpgo_4689130", "value": 14}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "vjpgo_4689085", "value": 14}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "vjpgo_4687681", "value": 14}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "vjpgo_4687662", "value": 14}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "vjpgo_4687652", "value": 14}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "vjpgo_4687640", "value": 14}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "vjpgo_4687407", "value": 14}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "michalskop_6cdd572b5f618a11e966", "value": 14}, {"source": "mbostock_3306147", "target": "mgold_0f1d3667b74ea5616d9f", "value": 14}, {"source": "faniepotgieter_2ebcb3004abe34c380cc", "target": "xaranke_b956ee7215b7b50bc78a", "value": 14}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "mgold_0f1d3667b74ea5616d9f", "value": 17}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "faniepotgieter_2ebcb3004abe34c380cc", "value": 14}, {"source": "david4096_5819181", "target": "mpmckenna8_8874545", "value": 14}, {"source": "d3noob_e1aa61856118edfa624d", "target": "ptvans_461585105bdbc14b4e85", "value": 16}, {"source": "d3noob_e1aa61856118edfa624d", "target": "nivas8292_222939d7c74c5de09387", "value": 16}, {"source": "ashtonburg_60e84ea5cdffa49356e4", "target": "mgold_0f1d3667b74ea5616d9f", "value": 14}, {"source": "ashtonburg_4384949715de645a77ef", "target": "mgold_0f1d3667b74ea5616d9f", "value": 14}, {"source": "ashtonburg_40448d691c1cc22dd00b", "target": "mgold_0f1d3667b74ea5616d9f", "value": 14}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "ptvans_461585105bdbc14b4e85", "value": 16}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "nivas8292_222939d7c74c5de09387", "value": 16}, {"source": "dmijalkovic_52fb07194d4b2988cafb", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 15}, {"source": "dmijalkovic_52fb07194d4b2988cafb", "target": "mansfimx_27edd1f7c316218285e5", "value": 15}, {"source": "dmijalkovic_52fb07194d4b2988cafb", "target": "jdarling_06019d16cb5fd6795edf", "value": 15}, {"source": "dmijalkovic_3385b8e7269b5b345558", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 15}, {"source": "dmijalkovic_3385b8e7269b5b345558", "target": "mansfimx_27edd1f7c316218285e5", "value": 15}, {"source": "dmijalkovic_3385b8e7269b5b345558", "target": "jdarling_06019d16cb5fd6795edf", "value": 15}, {"source": "d3noob_8952219", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 15}, {"source": "d3noob_8952219", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 15}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 15}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 15}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 15}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 15}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "dmijalkovic_52fb07194d4b2988cafb", "value": 15}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "dmijalkovic_3385b8e7269b5b345558", "value": 15}, {"source": "tommct_8049508", "target": "wrobstory_7630654", "value": 12}, {"source": "tommct_8049508", "target": "wrobstory_7630406", "value": 12}, {"source": "tommct_8049508", "target": "wrobstory_7630011", "value": 12}, {"source": "tommct_8049508", "target": "wrobstory_7629900", "value": 12}, {"source": "tommct_8049508", "target": "wrobstory_7612013", "value": 12}, {"source": "tommct_8047063", "target": "wrobstory_7630654", "value": 12}, {"source": "tommct_8047063", "target": "wrobstory_7630406", "value": 12}, {"source": "tommct_8047063", "target": "wrobstory_7630011", "value": 12}, {"source": "tommct_8047063", "target": "wrobstory_7629900", "value": 12}, {"source": "tommct_8047063", "target": "wrobstory_7612013", "value": 12}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "tommct_8049508", "value": 12}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "target": "tommct_8047063", "value": 12}, {"source": "mbostock_3305937", "target": "mgold_0f1d3667b74ea5616d9f", "value": 14}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "tommct_8049508", "value": 12}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "tommct_8047063", "value": 12}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "tommct_8049508", "value": 12}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "tommct_8047063", "value": 12}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "xaranke_b956ee7215b7b50bc78a", "value": 12}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "wrobstory_7630654", "value": 13}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "wrobstory_7630406", "value": 13}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "wrobstory_7630011", "value": 13}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "wrobstory_7629900", "value": 13}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "wrobstory_7612013", "value": 13}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 12}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "mbostock_3305937", "value": 12}, {"source": "dukevis_84ed35ed91f857ec3d79", "target": "dustinlarimer_5701438", "value": 12}, {"source": "d3noob_8952219", "target": "dukevis_84ed35ed91f857ec3d79", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "tommct_8049508", "value": 12}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "tommct_8047063", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "tommct_8049508", "value": 12}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "tommct_8047063", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "tommct_8049508", "value": 12}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "tommct_8047063", "value": 12}, {"source": "WillTurman_4631136", "target": "wrobstory_7630654", "value": 13}, {"source": "WillTurman_4631136", "target": "wrobstory_7630406", "value": 13}, {"source": "WillTurman_4631136", "target": "wrobstory_7630011", "value": 13}, {"source": "WillTurman_4631136", "target": "wrobstory_7629900", "value": 13}, {"source": "WillTurman_4631136", "target": "wrobstory_7612013", "value": 13}, {"source": "WillTurman_4631136", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 12}, {"source": "WillTurman_4631136", "target": "d3noob_8952219", "value": 12}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "dukevis_84ed35ed91f857ec3d79", "value": 12}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "dukevis_84ed35ed91f857ec3d79", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "tommct_8049508", "value": 12}, {"source": "RandomEtc_cff3610e7dd47bef2d01", "target": "tommct_8047063", "value": 12}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "target": "renecnielsen_682ab33dbf139214df59", "value": 22}, {"source": "mgold_20691b86ad226e14bb70", "target": "michalskop_6cdd572b5f618a11e966", "value": 14}, {"source": "mbostock_31ec1817b2be2660c453", "target": "peterssonjonas_920d9352f2b9fde14e1c", "value": 17}, {"source": "leeannoneal_cce53e0f261a99e51cf3", "target": "peterssonjonas_920d9352f2b9fde14e1c", "value": 17}, {"source": "emeeks_e6f72fbca42e77be0eb3", "target": "renecnielsen_682ab33dbf139214df59", "value": 15}, {"source": "emeeks_e1e661f4696af856e017", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 22}, {"source": "emeeks_aea3c7fc1acc0eca4d44", "target": "renecnielsen_682ab33dbf139214df59", "value": 15}, {"source": "emeeks_1a75ec54489368b514f8", "target": "renecnielsen_682ab33dbf139214df59", "value": 20}, {"source": "d3noob_e1aa61856118edfa624d", "target": "mgold_0f1d3667b74ea5616d9f", "value": 12}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "mgold_0f1d3667b74ea5616d9f", "value": 12}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "wrobstory_7630654", "value": 12}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "wrobstory_7630406", "value": 12}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "wrobstory_7630011", "value": 12}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "wrobstory_7629900", "value": 12}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "wrobstory_7612013", "value": 12}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "mgold_20691b86ad226e14bb70", "value": 15}, {"source": "hunzy_11110940", "target": "rcrocker13_60203151a99eb3f7f000", "value": 15}, {"source": "emeeks_e484f2b1b5ba6c4742f6", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 13}, {"source": "emeeks_66a38345f12cbe3452ec", "target": "renecnielsen_682ab33dbf139214df59", "value": 12}, {"source": "dmijalkovic_52fb07194d4b2988cafb", "target": "ptvans_461585105bdbc14b4e85", "value": 11}, {"source": "dmijalkovic_52fb07194d4b2988cafb", "target": "nivas8292_222939d7c74c5de09387", "value": 11}, {"source": "dmijalkovic_3385b8e7269b5b345558", "target": "ptvans_461585105bdbc14b4e85", "value": 11}, {"source": "dmijalkovic_3385b8e7269b5b345558", "target": "nivas8292_222939d7c74c5de09387", "value": 11}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "ptvans_461585105bdbc14b4e85", "value": 11}, {"source": "d3noob_a22c42db65eb00d4e369", "target": "nivas8292_222939d7c74c5de09387", "value": 11}, {"source": "benkimball_8570073", "target": "faniepotgieter_2ebcb3004abe34c380cc", "value": 11}, {"source": "Rico3734_fa14dff4959ccb0886a9", "target": "mgold_0f1d3667b74ea5616d9f", "value": 12}, {"source": "Rico3734_2d06a6aadbb4af3398ba", "target": "mgold_0f1d3667b74ea5616d9f", "value": 12}, {"source": "hunzy_11110940", "target": "mgold_0f1d3667b74ea5616d9f", "value": 13}, {"source": "faniepotgieter_2ebcb3004abe34c380cc", "target": "xaranke_9ada4c74a87b57ae7308", "value": 14}, {"source": "rveciana_20f120d7ab0580f9a8c5", "target": "steveharoz_0638d230c133da1de385", "value": 15}, {"source": "mgold_3cb71efd1287f5c03c80", "target": "michalskop_6cdd572b5f618a11e966", "value": 11}, {"source": "mapearlson_116aa7e159d22d53f6d0", "target": "rveciana_20f120d7ab0580f9a8c5", "value": 15}, {"source": "git-ashish_e7182a82862071b405b5", "target": "mgold_0f1d3667b74ea5616d9f", "value": 11}, {"source": "diepvf_66dab938296ceb5b46383fa3b2feef6c", "target": "rveciana_20f120d7ab0580f9a8c5", "value": 15}, {"source": "d3noob_5886992", "target": "mgold_0f1d3667b74ea5616d9f", "value": 11}, {"source": "ZJONSSON_3918369", "target": "mgold_20691b86ad226e14bb70", "value": 15}, {"source": "JaapSuter_7251163", "target": "rveciana_20f120d7ab0580f9a8c5", "value": 15}, {"source": "mgold_20691b86ad226e14bb70", "target": "wrobstory_7630654", "value": 13}, {"source": "mgold_20691b86ad226e14bb70", "target": "wrobstory_7630406", "value": 13}, {"source": "mgold_20691b86ad226e14bb70", "target": "wrobstory_7630011", "value": 13}, {"source": "mgold_20691b86ad226e14bb70", "target": "wrobstory_7629900", "value": 13}, {"source": "mgold_20691b86ad226e14bb70", "target": "wrobstory_7612013", "value": 13}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 13}, {"source": "jdarling_06019d16cb5fd6795edf", "target": "mgold_0f1d3667b74ea5616d9f", "value": 11}, {"source": "espinielli_715229536cdba1fdac9a", "target": "rveciana_472b7749352554ca4b68", "value": 20}, {"source": "diskmanti_bc208f5266e4ffd5484a", "target": "serouvivek_6dd7b5b74b81badaebe3397dddf74260", "value": 11}, {"source": "Rico3734_3a387f8041e1dc31d718", "target": "serouvivek_6dd7b5b74b81badaebe3397dddf74260", "value": 11}, {"source": "Rico3734_3a387f8041e1dc31d718", "target": "diskmanti_bc208f5266e4ffd5484a", "value": 11}, {"source": "nguyenbq_7988fb7f4cabdf119637e9cf7b186499", "target": "zanarmstrong_248c97c602bb8f883f99", "value": 12}, {"source": "devssunil_ce488bb628eb9e4468521b001f027a55", "target": "zanarmstrong_248c97c602bb8f883f99", "value": 12}, {"source": "boeric_e16ad218bc241dfd2d6e", "target": "zanarmstrong_248c97c602bb8f883f99", "value": 13}, {"source": "aaizemberg_381f050ef4296db37737", "target": "mbostock_5681974", "value": 14}, {"source": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "target": "rveciana_20f120d7ab0580f9a8c5", "value": 15}, {"source": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "target": "rveciana_20f120d7ab0580f9a8c5", "value": 15}, {"source": "mbostock_3887235", "target": "rveciana_20f120d7ab0580f9a8c5", "value": 15}, {"source": "mbostock_3887193", "target": "rveciana_20f120d7ab0580f9a8c5", "value": 15}, {"source": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "target": "rveciana_20f120d7ab0580f9a8c5", "value": 15}, {"source": "dustinlarimer_5701438", "target": "timelyportfolio_5149102", "value": 11}, {"source": "bjtucker_fd3aa6e64d565962f1c1", "target": "eesur_9910343", "value": 18}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "rveciana_20f120d7ab0580f9a8c5", "value": 15}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "rveciana_20f120d7ab0580f9a8c5", "value": 15}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "rveciana_20f120d7ab0580f9a8c5", "value": 15}, {"source": "hunzy_9134534", "target": "thejenbo_23fa4ac201737159924df484bf9b7d29", "value": 16}, {"source": "mgold_20691b86ad226e14bb70", "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 14}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "xaranke_9ada4c74a87b57ae7308", "value": 14}, {"source": "mgold_0f1d3667b74ea5616d9f", "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 11}, {"source": "mansfimx_27edd1f7c316218285e5", "target": "mgold_20691b86ad226e14bb70", "value": 14}, {"source": "hunzy_9134534", "target": "rveciana_20f120d7ab0580f9a8c5", "value": 14}, {"source": "emeeks_f2fea17ba3ec3cd66f60", "target": "renecnielsen_682ab33dbf139214df59", "value": 16}, {"source": "d3noob_e1aa61856118edfa624d", "target": "mgold_e21dbf08e838796dcf60", "value": 12}, {"source": "d3noob_8952219", "target": "mgold_0f1d3667b74ea5616d9f", "value": 11}, {"source": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "target": "rveciana_20f120d7ab0580f9a8c5", "value": 15}, {"source": "aax951_d7a90cc03d3e1bddffa5569cae11490d", "target": "mgold_20691b86ad226e14bb70", "value": 14}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "target": "mgold_20691b86ad226e14bb70", "value": 14}, {"source": "ZJONSSON_3535835", "target": "rveciana_4affa5bdb5e8c87ea5e5", "value": 17}, {"source": "ZJONSSON_3526579", "target": "rveciana_4affa5bdb5e8c87ea5e5", "value": 17}, {"source": "MattDionis_e612bc8d7c7857f2c5ca", "target": "mgold_e21dbf08e838796dcf60", "value": 12}, {"source": "yassineAlouini_fdbca6ea6f4416e6b328", "target": "yesoreyeram_c1b07998add14ffc9d03", "value": 13}, {"source": "nguyenbq_a350280a02c8105529d0", "target": "yassineAlouini_fdbca6ea6f4416e6b328", "value": 13}, {"source": "nguyenbq_85a4c204a61fa6407aed", "target": "yassineAlouini_fdbca6ea6f4416e6b328", "value": 13}, {"source": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "target": "scresawn_e8b21fc35bbc9189d031b9fdfb2b9b4c", "value": 14}, {"source": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "target": "scresawn_e8b21fc35bbc9189d031b9fdfb2b9b4c", "value": 14}, {"source": "mccannf_3994129", "target": "rveciana_20f120d7ab0580f9a8c5", "value": 13}, {"source": "mbostock_5681974", "target": "tmcw_4179511", "value": 15}, {"source": "mbostock_3887235", "target": "scresawn_e8b21fc35bbc9189d031b9fdfb2b9b4c", "value": 14}, {"source": "mbostock_3887193", "target": "scresawn_e8b21fc35bbc9189d031b9fdfb2b9b4c", "value": 14}, {"source": "mbostock_3305937", "target": "timelyportfolio_5149102", "value": 11}, {"source": "mbostock_1346395", "target": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87", "value": 14}, {"source": "mbostock_1346395", "target": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810", "value": 14}, {"source": "hungvietdo_28d434d3818db4fbe369", "target": "yassineAlouini_fdbca6ea6f4416e6b328", "value": 13}, {"source": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "target": "scresawn_e8b21fc35bbc9189d031b9fdfb2b9b4c", "value": 14}, {"source": "grybnicky_02990843f01cc2db3bda7fa99b8d5450", "target": "mbostock_1346395", "value": 14}, {"source": "emeeks_a950399780ca90589f59", "target": "mpmckenna8_f6245adc7a3cd3930a11", "value": 23}, {"source": "d3noob_ccdcb7673cdb3a796e13", "target": "yassineAlouini_fdbca6ea6f4416e6b328", "value": 13}, {"source": "d3noob_b3ff6ae1c120eea654b5", "target": "yassineAlouini_fdbca6ea6f4416e6b328", "value": 13}, {"source": "d3noob_8dc93bce7e7200ab487d", "target": "yassineAlouini_fdbca6ea6f4416e6b328", "value": 13}, {"source": "d3noob_464c92429ac05c6a19a1", "target": "yassineAlouini_fdbca6ea6f4416e6b328", "value": 13}, {"source": "d3noob_4414436", "target": "yassineAlouini_fdbca6ea6f4416e6b328", "value": 12}, {"source": "d3noob_38744a17f9c0141bcd04", "target": "yassineAlouini_fdbca6ea6f4416e6b328", "value": 13}, {"source": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "target": "scresawn_e8b21fc35bbc9189d031b9fdfb2b9b4c", "value": 14}, {"source": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45", "target": "mbostock_1346395", "value": 14}, {"source": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6", "target": "mgold_20691b86ad226e14bb70", "value": 14}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "scresawn_e8b21fc35bbc9189d031b9fdfb2b9b4c", "value": 14}, {"source": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985", "target": "mbostock_1346395", "value": 14}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "scresawn_e8b21fc35bbc9189d031b9fdfb2b9b4c", "value": 14}, {"source": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956", "target": "mbostock_1346395", "value": 14}, {"source": "CBasis_89ebe7ca1e76681f7abcfd244249575c", "target": "yassineAlouini_fdbca6ea6f4416e6b328", "value": 13}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "scresawn_e8b21fc35bbc9189d031b9fdfb2b9b4c", "value": 14}, {"source": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d", "target": "mbostock_1346395", "value": 14}, {"source": "timelyportfolio_5c136de85de1c2abb6fc", "target": "xaranke_b956ee7215b7b50bc78a", "value": 11}, {"source": "timelyportfolio_5c136de85de1c2abb6fc", "target": "xaranke_9ada4c74a87b57ae7308", "value": 11}, {"source": "renecnielsen_777884b900d913917ec3", "target": "xaranke_b956ee7215b7b50bc78a", "value": 11}, {"source": "renecnielsen_777884b900d913917ec3", "target": "xaranke_9ada4c74a87b57ae7308", "value": 11}, {"source": "renecnielsen_6ec52e5a9b88f7ca86ca", "target": "xaranke_b956ee7215b7b50bc78a", "value": 11}, {"source": "renecnielsen_6ec52e5a9b88f7ca86ca", "target": "xaranke_9ada4c74a87b57ae7308", "value": 11}, {"source": "hunzy_9134534", "target": "tmcw_4179511", "value": 14}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "timelyportfolio_5c136de85de1c2abb6fc", "value": 11}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "renecnielsen_777884b900d913917ec3", "value": 11}, {"source": "fabid_0c4cf357ab5ed3e90382", "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "value": 11}, {"source": "espinielli_4d17fa15a7a5084e217992f985fba484", "target": "rveciana_5233218", "value": 18}, {"source": "emeeks_aa5c8f08ad0900669917", "target": "syntagmatic_4076122", "value": 11}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "xaranke_b956ee7215b7b50bc78a", "value": 11}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "xaranke_9ada4c74a87b57ae7308", "value": 11}, {"source": "DStruths_9c042e3a6b66048b5bd4", "target": "fabid_0c4cf357ab5ed3e90382", "value": 11}, {"source": "eesur_be2abfb3155a38be4de4", "target": "renecnielsen_f11624fe14195cf8a1c5", "value": 12}]
 ,
"nodes": [{"code": "<html>\n<head>\n  <title>D3 in Action Chapter 5 - Example 3</title>\n  <meta charset=\"utf-8\" />\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n</head>\n<style>\n  svg {\n    height: 500px;\n    width: 500px;\n    border: 1px solid gray;\n  }\n  \n</style>\n<body>\n\n<div id=\"viz\">\n  <svg>\n  </svg>\n</div>\n</body>\n  <footer>\n    \n<script>\n    d3.json(\"tweets.json\",function(error,data) {dataViz(data.tweets)});\n    \n    function dataViz(incData) {\n      nestedTweets = d3.nest()\n      .key(function (el) {return el.user})\n      .entries(incData);\n\n    var colorScale = d3.scale.category10([0,1,2,3]);\n\n      nestedTweets.forEach(function (el) {\n        el.numTweets = el.values.length\n        el.numFavorites = d3.sum(el.values, function (d) {return d.favorites.length});\n        el.numRetweets = d3.sum(el.values, function (d) {return d.retweets.length});\n      })\n      \n      pieChart = d3.layout.pie().sort(null);\n      pieChart.value(function(d) {return d.numTweets});\n      newArc = d3.svg.arc();\n      newArc.outerRadius(100).innerRadius(20);\n\n      d3.select(\"svg\")\n      .append(\"g\")\n      .attr(\"transform\",\"translate(250,250)\")\n      .selectAll(\"path\")\n      .data(pieChart(nestedTweets), function(d) {return d.data.key})\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", newArc)\n      .style(\"fill\", function(d, i) {return colorScale(i)})\n      .style(\"opacity\", .5)\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", \"2px\")\n      .each(function(d) { this._current = d; });\n      \n      function arcTween(a) {\n        var i = d3.interpolate(this._current, a);\n        this._current = i(0);\n      return function(t) {\n      return newArc(i(t));\n      };\n    }\n    \n    }\n\n</script>\n  </footer>\n\n</html>\n", "description": "Ch. 5, Fig. 6 - D3.js in Action", "created_at": "2014-11-17T06:12:43Z", "updated_at": "2016-03-18T03:34:50Z", "api": ["d3.json", "d3.nest", "d3.scale.category10", "d3.sum", "d3.layout.pie", "d3.svg.arc", "d3.select", "d3.interpolate"], "readme": "This is the code for Chapter 5 from [D3.js in Action](http://manning.com/meeks/) demonstrating how to make a donut chart using **d3.layout.pie()** and how to transition it using **attrTween** to calculate the transition arcs.", "uid": "emeeks_5ada6a7d00115f0e2f1e"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar data = [1, 1, 2, 3, 5, 8, 13, 21];\n\nvar width = 960,\n    height = 500,\n    radius = height / 2 - 10;\n\nvar arc = d3.svg.arc()\n    .innerRadius(radius - 40)\n    .outerRadius(radius);\n\nvar pie = d3.layout.pie()\n    .padAngle(.02);\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nsvg.selectAll(\"path\")\n    .data(pie(data))\n  .enter().append(\"path\")\n    .style(\"fill\", function(d, i) { return color(i); })\n    .attr(\"d\", arc);\n\n</script>\n", "description": "Pie Padding", "created_at": "2014-11-16T06:59:14Z", "updated_at": "2016-02-09T01:52:26Z", "api": ["d3.svg.arc", "d3.layout.pie", "d3.scale.category10", "d3.select"], "readme": "[D3 3.5](https://github.com/mbostock/d3/releases/tag/v3.5.0)\u2019s d3.layout.pie supports optional padding between arcs. The sides of adjacent arcs are parallel, and the relative area (and angle) of arcs are approximately preserved.\n", "uid": "mbostock_f098d146315be4d1db52"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.arc text {\n  font: 10px sans-serif;\n  text-anchor: middle;\n}\n\n.arc path {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(radius - 70);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.population; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  var g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.data.age); });\n\n  g.append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.data.age; });\n});\n\nfunction type(d) {\n  d.population = +d.population;\n  return d;\n}\n\n</script>\n", "description": "Donut Chart", "created_at": "2012-10-14T03:46:39Z", "updated_at": "2016-05-19T17:36:02Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.csv"], "readme": "This donut chart is constructed from a CSV file storing the populations of various age groups. The chart employs a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - color encoding\n* [d3.svg.arc](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-arc) - display arcs\n* [d3.layout.pie](https://github.com/mbostock/d3/wiki/Pie-Layout) - compute arc angles from data\n", "uid": "mbostock_3887193"}, {"code": "<html>\n<head>\n  <title>D3 in Action Chapter 5 - Example 3</title>\n  <meta charset=\"utf-8\" />\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    height: 500px;\n    width: 500px;\n    border: 1px solid gray;\n  }\n  \n</style>\n<body>\n\n<div id=\"viz\">\n  <svg>\n  </svg>\n</div>\n</body>\n  <footer>\n    \n<script>\n    d3.json(\"tweets.json\",function(error,data) {dataViz(data.tweets)});\n    \n    function dataViz(incData) {\n      nestedTweets = d3.nest()\n      .key(function (el) {return el.user})\n      .entries(incData);\n\n    var colorScale = d3.scale.category10([0,1,2,3]);\n\n      nestedTweets.forEach(function (el) {\n        el.numTweets = el.values.length\n        el.numFavorites = d3.sum(el.values, function (d) {return d.favorites.length});\n        el.numRetweets = d3.sum(el.values, function (d) {return d.retweets.length});\n      })\n      \n      pieChart = d3.layout.pie().sort(null);\n      pieChart.value(function(d) {return d.numRetweets});\n      newArc = d3.svg.arc();\n      newArc.outerRadius(100).innerRadius(20);\n\n      d3.select(\"svg\")\n      .append(\"g\")\n      .attr(\"transform\",\"translate(250,250)\")\n      .selectAll(\"path\")\n      .data(pieChart(nestedTweets), function(d) {return d.data.key})\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", newArc)\n      .style(\"fill\", function(d, i) {return colorScale(i)})\n      .style(\"opacity\", .5)\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", \"2px\")\n      .each(function(d) { this._current = d; });\n      \n      pieChartFavs = d3.layout.pie().sort(null);\n      pieChartFavs.value(function(d) {return d.numFavorites});\n      \n      d3.selectAll(\"path\")\n      .data(pieChartFavs(nestedTweets), function(d) {return d.data.key})\n      .transition()\n      .duration(2000)\n      .attrTween(\"d\", arcTween)\n      \n      function arcTween(a) {\n        var i = d3.interpolate(this._current, a);\n        this._current = i(0);\n      return function(t) {\n      return newArc(i(t));\n      };\n    }\n    \n    }\n\n</script>\n  </footer>\n\n</html>\n", "description": "Pie Transition Ch. 5 - D3.js in Action", "created_at": "2016-02-17T23:50:03Z", "updated_at": "2016-03-08T01:39:13Z", "api": ["d3.json", "d3.nest", "d3.scale.category10", "d3.sum", "d3.layout.pie", "d3.svg.arc", "d3.select", "d3.selectAll", "d3.interpolate"], "readme": "This is the code for Chapter 5, Figure 6 from [D3.js in Action](http://manning.com/meeks/) demonstrating how to make a donut chart using **d3.layout.pie()**.\n\nforked from <a href='http://bl.ocks.org/emeeks/'>emeeks</a>'s block: <a href='http://bl.ocks.org/emeeks/5ada6a7d00115f0e2f1e'>Ch. 5, Fig. 6 - D3.js in Action</a>", "uid": "emeeks_becd7b34d93b2d80d828"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar data = [1, 1, 2, 3, 5, 8, 13, 21];\n\nvar width = 960,\n    height = 500,\n    radius = height / 2 - 10;\n\nvar arc = d3.svg.arc()\n    .innerRadius(radius - 40)\n    .outerRadius(radius);\n\nvar pie = d3.layout.pie();\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nsvg.selectAll(\"path\")\n    .data(pie(data))\n  .enter().append(\"path\")\n    .style(\"fill\", function(d, i) { return color(i); })\n    .attr(\"d\", arc);\n\n</script>\n", "description": "Pie Padding", "created_at": "2016-05-14T09:00:02Z", "updated_at": "2016-05-14T09:00:02Z", "api": ["d3.svg.arc", "d3.layout.pie", "d3.scale.category10", "d3.select"], "readme": "[D3 3.5](https://github.com/mbostock/d3/releases/tag/v3.5.0)\u2019s d3.layout.pie supports optional padding between arcs. The sides of adjacent arcs are parallel, and the relative area (and angle) of arcs are approximately preserved.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/f098d146315be4d1db52'>Pie Padding</a>", "uid": "ShuanWu_7b3d998fceae211d8ea7bf77ac243c26"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.arc text {\n  font: 10px sans-serif;\n  text-anchor: middle;\n}\n\n.arc path {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(0);\n\nvar labelArc = d3.svg.arc()\n    .outerRadius(radius - 40)\n    .innerRadius(radius - 40);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.population; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  var g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.data.age); });\n\n  g.append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + labelArc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.data.age; });\n});\n\nfunction type(d) {\n  d.population = +d.population;\n  return d;\n}\n\n</script>\n", "description": "Pie Chart", "created_at": "2012-10-14T03:57:04Z", "updated_at": "2016-02-09T01:41:04Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.csv"], "readme": "This pie chart is constructed from a CSV file storing the populations of various age groups. The chart employs a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - color encoding\n* [d3.svg.arc](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-arc) - display arcs\n* [d3.layout.pie](https://github.com/mbostock/d3/wiki/Pie-Layout) - compute arc angles from data\n", "uid": "mbostock_3887235"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\npath {\n  fill: #ccc;\n  stroke: #000;\n  stroke-width: 1.5px;\n  stroke-linejoin: round;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar data = [1, 1, 2, 3, 5, 8, 13];\n\nvar width = 960,\n    height = 500;\n\nvar outerRadius = height / 2 - 30,\n    innerRadius = outerRadius / 3,\n    cornerRadius = 10;\n\nvar pie = d3.layout.pie();\n\nvar arc = d3.svg.arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nvar path = svg.selectAll(\"path\")\n    .data(data)\n  .enter().append(\"path\");\n\nvar ease = d3.ease(\"cubic-in-out\"),\n    duration = 7500;\n\nd3.timer(function(elapsed) {\n  var t = ease(1 - Math.abs((elapsed % duration) / duration - .5) * 2);\n\n  path\n      .data(pie.padAngle(t * 2 * Math.PI / data.length)(data))\n      .attr(\"d\", arc);\n});\n\n</script>\n", "description": "Pie Padding II", "created_at": "2014-11-19T04:14:11Z", "updated_at": "2016-02-09T01:52:17Z", "api": ["d3.layout.pie", "d3.svg.arc", "d3.select", "d3.ease", "d3.timer"], "readme": "[D3 3.5](https://github.com/mbostock/d3/releases/tag/v3.5.0)\u2019s d3.layout.pie and d3.svg.arc support angular padding to separate adjacent arcs. Increasing the padAngle increases the separation between arcs, but preserves their relative area, which is necessary for accurate perception.\n\nThe sides of adjacent arcs are normally parallel. When the specified padding angle is large (relative to the angular width of each arc), the arcs are truncated into wedges. This may be avoided by increasing the inner radius.\n", "uid": "mbostock_31ec1817b2be2660c453"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\npath {\n  fill: #ccc;\n  stroke: #000;\n  stroke-width: 1.5px;\n  stroke-linejoin: round;\n}\n\n</style>\n<body>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n<script>\n\nvar data = [1, 1, 2, 3, 5, 8, 13];\n\nvar width = 960,\n    height = 500;\n\nvar outerRadius = height / 2 - 30,\n    innerRadius = outerRadius / 3,\n    cornerRadius = 10;\n\nvar pie = d3.layout.pie();\n\nvar arc = d3.svg.arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nvar path = svg.selectAll(\"path\")\n    .data(data)\n  .enter().append(\"path\");\n\nvar ease = d3.ease(\"cubic-in-out\"),\n    duration = 7500;\n\nd3.timer(function(elapsed) {\n  var t = ease(1 - Math.abs((elapsed % duration) / duration - .5) * 2);\n\n  path\n      .data(pie.padAngle(t * 2 * Math.PI / data.length)(data))\n      .attr(\"d\", arc);\n});\n\n</script>\n", "description": "Pie Padding II", "created_at": "2015-07-31T20:10:16Z", "updated_at": "2015-08-29T14:26:24Z", "api": ["d3.layout.pie", "d3.svg.arc", "d3.select", "d3.ease", "d3.timer"], "readme": "[D3 3.5](https://github.com/mbostock/d3/releases/tag/v3.5.0)\u2019s d3.layout.pie and d3.svg.arc support angular padding to separate adjacent arcs. Increasing the padAngle increases the separation between arcs, but preserves their relative area, which is necessary for accurate perception.\n\nThe sides of adjacent arcs are normally parallel. When the specified padding angle is large (relative to the angular width of each arc), the arcs are truncated into wedges. This may be avoided by increasing the inner radius.\n", "uid": "leeannoneal_cce53e0f261a99e51cf3"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.arc text {\n  font: 10px sans-serif;\n  text-anchor: middle;\n}\n\n.arc path {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(0);\n\nvar labelArc = d3.svg.arc()\n    .outerRadius(radius - 40)\n    .innerRadius(radius - 40);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.population; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  var g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.data.age); });\n\n  g.append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + labelArc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.data.age; });\n});\n\nfunction type(d) {\n  d.population = +d.population;\n  return d;\n}\n\n</script>\n", "description": "Pie Chart", "created_at": "2016-05-05T13:50:13Z", "updated_at": "2016-05-05T13:50:13Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.csv"], "readme": "This pie chart is constructed from a CSV file storing the populations of various age groups. The chart employs a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - color encoding\n* [d3.svg.arc](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-arc) - display arcs\n* [d3.layout.pie](https://github.com/mbostock/d3/wiki/Pie-Layout) - compute arc angles from data\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887235'>Pie Chart</a>", "uid": "mcgovemc_a2d6df52c755fb9f5d47d87fded2e810"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.arc text {\n  font: 10px sans-serif;\n  text-anchor: middle;\n}\n\n.arc path {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(0);\n\nvar labelArc = d3.svg.arc()\n    .outerRadius(radius - 40)\n    .innerRadius(radius - 40);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.population; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  var g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.data.age); });\n\n  g.append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + labelArc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.data.age; });\n});\n\nfunction type(d) {\n  d.population = +d.population;\n  return d;\n}\n\n</script>\n", "description": "final exam question 2", "created_at": "2016-05-05T14:11:20Z", "updated_at": "2016-05-05T14:11:35Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.csv"], "readme": "This pie chart is constructed from a CSV file storing the populations of various age groups. The chart employs a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - color encoding\n* [d3.svg.arc](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-arc) - display arcs\n* [d3.layout.pie](https://github.com/mbostock/d3/wiki/Pie-Layout) - compute arc angles from data\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887235'>final exam 2</a>", "uid": "mcgovemc_d9c62bfc758e5158aad58c9d83a4ad87"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\nsvg {\n  padding: 10px 0 0 10px;\n}\n\n.arc {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar radius = 74,\n    padding = 10;\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius)\n    .innerRadius(radius - 30);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.population; });\n\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"State\"; }));\n\n  data.forEach(function(d) {\n    d.ages = color.domain().map(function(name) {\n      return {name: name, population: +d[name]};\n    });\n  });\n\n  var legend = d3.select(\"body\").append(\"svg\")\n      .attr(\"class\", \"legend\")\n      .attr(\"width\", radius * 2)\n      .attr(\"height\", radius * 2)\n    .selectAll(\"g\")\n      .data(color.domain().slice().reverse())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d; });\n\n  var svg = d3.select(\"body\").selectAll(\".pie\")\n      .data(data)\n    .enter().append(\"svg\")\n      .attr(\"class\", \"pie\")\n      .attr(\"width\", radius * 2)\n      .attr(\"height\", radius * 2)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");\n\n  svg.selectAll(\".arc\")\n      .data(function(d) { return pie(d.ages); })\n    .enter().append(\"path\")\n      .attr(\"class\", \"arc\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.data.name); });\n\n  svg.append(\"text\")\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.State; });\n\n});\n\n</script>\n", "description": "Donut Multiples", "created_at": "2012-10-14T15:05:18Z", "updated_at": "2016-02-09T01:41:09Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.csv", "d3.keys", "d3.select"], "readme": "These donut charts are constructed from a CSV file storing the populations of various age groups in different states. (As a practical note, a [normalized stacked area chart](../3886394) facilitates easier comparison of values.) The chart employs a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - color encoding\n* d3.keys - compute column names\n* [d3.svg.arc](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-arc) - display arcs\n* [d3.layout.pie](https://github.com/mbostock/d3/wiki/Pie-Layout) - compute arc angles from data", "uid": "mbostock_3888852"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\nsvg {\n  padding: 10px 0 0 10px;\n}\n\n.arc {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n<script>\n\nvar radius = 74,\n    padding = 10;\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius)\n    .innerRadius(radius - 30);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.population; });\n\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"State\"; }));\n\n  data.forEach(function(d) {\n    d.ages = color.domain().map(function(name) {\n      return {name: name, population: +d[name]};\n    });\n  });\n\n  var legend = d3.select(\"body\").append(\"svg\")\n      .attr(\"class\", \"legend\")\n      .attr(\"width\", radius * 2)\n      .attr(\"height\", radius * 2)\n    .selectAll(\"g\")\n      .data(color.domain().slice().reverse())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d; });\n\n  var svg = d3.select(\"body\").selectAll(\".pie\")\n      .data(data)\n    .enter().append(\"svg\")\n      .attr(\"class\", \"pie\")\n      .attr(\"width\", radius * 2)\n      .attr(\"height\", radius * 2)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");\n\n  svg.selectAll(\".arc\")\n      .data(function(d) { return pie(d.ages); })\n    .enter().append(\"path\")\n      .attr(\"class\", \"arc\")\n      .attr(\"d\", function(d, i) { return arc.innerRadius(radius - 30 * Math.random())(d, i); })\n      .style(\"fill\", function(d) { return color(d.data.name); });\n\n  svg.append(\"text\")\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.State; });\n\n});\n\n</script>\n", "description": "", "created_at": "2015-07-09T00:21:19Z", "updated_at": "2015-08-29T14:24:31Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.csv", "d3.keys", "d3.select"], "readme": "These donut charts are constructed from a CSV file storing the populations of various age groups in different states. (As a practical note, a [normalized stacked area chart](../3886394) facilitates easier comparison of values.) The chart employs a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - color encoding\n* d3.keys - compute column names\n* [d3.svg.arc](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-arc) - display arcs\n* [d3.layout.pie](https://github.com/mbostock/d3/wiki/Pie-Layout) - compute arc angles from data", "uid": "larskotthoff_3a49a64c7a1810d8ff02"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.arc text {\n  font: 10px sans-serif;\n  text-anchor: middle;\n}\n\n.arc path {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(0);\n\nvar labelArc = d3.svg.arc()\n    .outerRadius(radius - 40)\n    .innerRadius(radius - 40);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.population; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  var g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.data.age); });\n\n  g.append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + labelArc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.data.age; });\n});\n\nfunction type(d) {\n  d.population = +d.population;\n  return d;\n}\n\n</script>\n", "description": "Pie Chart", "created_at": "2016-05-06T14:58:09Z", "updated_at": "2016-05-06T14:58:09Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.csv"], "readme": "This pie chart is constructed from a CSV file storing the populations of various age groups. The chart employs a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - color encoding\n* [d3.svg.arc](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-arc) - display arcs\n* [d3.layout.pie](https://github.com/mbostock/d3/wiki/Pie-Layout) - compute arc angles from data\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887235'>Pie Chart</a>", "uid": "grybnicky_02990843f01cc2db3bda7fa99b8d5450"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.arc text {\n  font: 14px sans-serif;\n  text-anchor: middle;\n}\n\n.arc path {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 40)\n    .innerRadius(205);\n\nvar labelArc = d3.svg.arc()\n    .outerRadius(radius - 40)\n    .innerRadius(radius - 60);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.count; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.csv(\"airbnb_neigh_total.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  console.log(pie(data));\n  \n  var g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.data.neighbourhood_cleansed); });\n\n  g.append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + labelArc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.data.neighbourhood_cleansed; });\n});\n\n\n  \n   function type(d) {\n  d.count = +d.count;\n  return d;\n}\n  \n</script>\n  \n  \n  \n  \n  \n  \n  \n  \n", "description": "SF AirBnB Listings: Ring Chart with Text Annotation", "created_at": "2016-04-30T16:44:45Z", "updated_at": "2016-04-30T16:48:15Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.csv"], "readme": "This pie chart is constructed from a CSV file storing the populations of various age groups. The chart employs a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - color encoding\n* [d3.svg.arc](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-arc) - display arcs\n* [d3.layout.pie](https://github.com/mbostock/d3/wiki/Pie-Layout) - compute arc angles from data\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887235'>Pie Chart</a>\n\nforked from <a href='http://bl.ocks.org/Jay-Oh-eN/'>Jay-Oh-eN</a>'s block: <a href='http://bl.ocks.org/Jay-Oh-eN/5da8fc981efc46180000cc749b99465d'>SF AirBnB Listings: Pie Chart</a>\n\nforked from <a href='http://bl.ocks.org/Jay-Oh-eN/'>Jay-Oh-eN</a>'s block: <a href='http://bl.ocks.org/Jay-Oh-eN/8232e0e796a6dbddc33caffe4929d985'>SF AirBnB Listings: Pie Chart with Text Annotation</a>", "uid": "Jay-Oh-eN_5b45cdf7412ff959694806b05aa23956"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.arc text {\n  font: 12px sans-serif;\n  text-anchor: middle;\n}\n\n.arc path {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(0);\n\nvar labelArc = d3.svg.arc()\n    .outerRadius(radius - 40)\n    .innerRadius(radius - 60);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.count; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.csv(\"airbnb_neigh_total.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  console.log(pie(data));\n  \n  var g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.data.neighbourhood_cleansed); });\n\n  g.append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + labelArc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.data.neighbourhood_cleansed; });\n});\n\n\n  \n   function type(d) {\n  d.count = +d.count;\n  return d;\n}\n  \n</script>\n  \n  \n  \n  \n  \n  \n  \n  \n", "description": "SF AirBnB Listings: Pie Chart with Text Annotation", "created_at": "2016-04-30T16:39:02Z", "updated_at": "2016-04-30T16:43:40Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.csv"], "readme": "This pie chart is constructed from a CSV file storing the populations of various age groups. The chart employs a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - color encoding\n* [d3.svg.arc](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-arc) - display arcs\n* [d3.layout.pie](https://github.com/mbostock/d3/wiki/Pie-Layout) - compute arc angles from data\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887235'>Pie Chart</a>\n\nforked from <a href='http://bl.ocks.org/Jay-Oh-eN/'>Jay-Oh-eN</a>'s block: <a href='http://bl.ocks.org/Jay-Oh-eN/5da8fc981efc46180000cc749b99465d'>SF AirBnB Listings: Pie Chart</a>", "uid": "Jay-Oh-eN_8232e0e796a6dbddc33caffe4929d985"}, {"code": "<html>\n<head>\n  <title>ring chart clockwise transition</title>\n  <meta charset=\"utf-8\" />\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    height: 500px;\n    width: 960px;\n    border: 0px solid gray;\n  }\n  \n</style>\n<body>\n\n<div id=\"viz\">\n  <svg>\n  </svg>\n</div>\n</body>\n  <footer>\n    \n<script>\n    d3.json(\"tweets.json\",function(error,data) {dataViz(data.tweets)});\n    \n    function dataViz(incData) {\n      \n      var background = d3.select('svg')\n      \t.append('rect')\n      \t.classed('background', true)\n      \t.attr({\n        \t'x': 0,\n        \t'y': 0,\n        \t'height': 500,\n        \t'width': 960\n      \t})\n      \t.style('fill', 'white');\n      \n      nestedTweets = d3.nest()\n      .key(function (el) {return el.user})\n      .entries(incData);\n\t\t\n    \tvar sunlight14 = [\n\t\t\t\t'#193556',\n\t\t\t\t'#42A5B3',  \n\t\t\t\t'#E3BA22',\n\t\t\t\t'#F2DA57',\n\t\t\t\t'#BD8F22',\n\t\t\t\t'#E6842A',\n\t\t\t\t'#F6B656',\n\t\t\t\t'#BA5F06',\n\t\t\t\t'#137B80',\n\t\t\t\t'#42A5B3',\n\t\t\t\t'#005D6E',\n\t\t\t\t'#8E6C8A',\n\t\t\t\t'#B396AD',\n\t\t\t\t'#684664'\n\t\t\t]\n    \tvar colorScale = d3.scale.ordinal()\n    \t\t.range(sunlight14);\n\n      nestedTweets.forEach(function (el) {\n        el.numTweets = el.values.length\n        el.numFavorites = d3.sum(el.values, function (d) {return d.favorites.length});\n        el.numRetweets = d3.sum(el.values, function (d) {return d.retweets.length});\n      })\n      \n     \tvar pieChart = d3.layout.pie().sort(null);\n     \tpieChart.value(function(d) {return d.numRetweets});\n     \tnewArc = d3.svg.arc();\n     \tnewArc.outerRadius(200).innerRadius(170);\n\n     pieChartFavs = d3.layout.pie().sort(null);\n     pieChartFavs.value(function(d) {return d.numFavorites});\n      console.log('pieChartFavs', pieChartFavs);\n      \n      d3.select(\"svg\")\n      .append(\"g\")\n      .attr(\"transform\",\"translate(480,250)\")\n      .selectAll(\"path\")\n      .data(pieChartFavs(nestedTweets), function(d) {return d.data.key})\n      .enter()\n      .append(\"path\")\n      \t.attr(\"d\", newArc)\n      \t\t.style(\"fill\", function(d, i) {return colorScale(i)})\n      \t\t.style(\"opacity\", 0)\n      \t\t.style(\"stroke\", \"none\")\n      \t\t.style(\"stroke-width\", \"2px\")\n      \t\t.each(function(d) { this._current = d; });\n      \n\n \t\t\tfunction animate() {\n        d3.selectAll(\"path\")\n\t\t\t\t\t.transition()\n          .delay(function(d, i) { return i * 500; })\n          .duration(500)\n          \t.attrTween('d', function(d) {\n   \t\t\t\t\t\tvar i = d3.interpolate(d.startAngle+0.1, d.endAngle);\n   \t\t\t\t\t\treturn function(t) {\n       \t\t\t\td.endAngle = i(t);\n     \t\t\t\t\treturn newArc(d);\n   \t\t\t\t\t}\n\t\t\t\t\t})\n      \t\t.style('opacity', 1)\n      }\n\n\t\t\tanimate();\n      \n      d3.select('rect.background').on('click', click);\n      \n      function click() {\n        d3.selectAll('path')\n          .transition()\n          .duration(0)\n          .style('opacity', 0)\n        .call(null, animate())  \n      }\n      \n      function arcTween(a) {\n        var i = d3.interpolate(this._current, a);\n        this._current = i(0);\n      return function(t) {\n      return newArc(i(t));\n      };\n       \n    }\n    \n    }\n\n</script>\n  </footer>\n\n</html>\n\n", "description": "ring chart clockwise transition", "created_at": "2016-03-25T18:27:16Z", "updated_at": "2016-03-25T19:35:25Z", "api": ["d3.json", "d3.select", "d3.nest", "d3.scale.ordinal", "d3.sum", "d3.layout.pie", "d3.svg.arc", "d3.selectAll", "d3.interpolate"], "readme": "a ring chart (or a donut chart if you are hungry) that animates into existence.\n\nthis answer [http://stackoverflow.com/questions/20501067/animating-d3-donut-chart-on-load](http://stackoverflow.com/questions/20501067/animating-d3-donut-chart-on-load) had just the `tween` and `transition` code examples needed to animate each slice in sequence.\n\n---\n\nOriginal `README.md`:\n\nThis is the code for Chapter 5, Figure 6 from [D3.js in Action](http://manning.com/meeks/) demonstrating how to make a donut chart using **d3.layout.pie()**.\n\nforked from <a href='http://bl.ocks.org/emeeks/'>emeeks</a>'s block: <a href='http://bl.ocks.org/emeeks/5ada6a7d00115f0e2f1e'>Ch. 5, Fig. 6 - D3.js in Action</a>\n\nforked from <a href='http://bl.ocks.org/emeeks/'>emeeks</a>'s block: <a href='http://bl.ocks.org/emeeks/becd7b34d93b2d80d828'>Pie Transition Ch. 5 - D3.js in Action</a>", "uid": "micahstubbs_ce9602e5b308f3bd53f5"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width:100%; height: 100% }\n  </style>\n</head>\n\n<body>\n  <script>\n    // Feel free to change or delete any of the code you see!\n    var svg = d3.select(\"body\").append(\"svg\")\n    svg.append(\"rect\")\n      .attr({x: 100, y: 10, width: 700, height: 480})\n      .style({ fill: \"#a72d1a\"})\n      .transition().duration(3000).ease(\"bounce\")\n      .style({ fill: \"#5db9e3\"})\n\n    console.log(\"you are now rocking with d3\", d3);\n  </script>\n</body>\n", "description": "d3", "created_at": "2016-04-15T09:19:07Z", "updated_at": "2016-04-15T09:19:07Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/0bff3139b4ff3fa3eb3f96dfb126ac4e'>d3</a>", "uid": "serouvivek_6dd7b5b74b81badaebe3397dddf74260"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - d3.carto.layer.alias</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    tileLayer = d3.carto.layer.tile();\n    tileLayer\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\")\n    .on(\"load\", recenter);\n\n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoBorders\")\n    .cssClass(\"countryborders\")\n    .renderMode(\"canvas\")\n    .on(\"load\", createFeatureLayer);\n    \n    topojsonLayer = d3.carto.layer.topojson();\n    topojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n    .label(\"TopoRoutes\")\n    .cssClass(\"roads\")\n    .renderMode(\"svg\")\n    .on(\"load\", function() {console.log(\"load topojson\")});\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .type(\"csv\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(3)\n    .x(\"x\")\n    .y(\"y\")\n    .on(\"load\", changeMarkers);\n\n    map.addCartoLayer(tileLayer);\n    map.addCartoLayer(topojsonLayer);\n    map.addCartoLayer(geojsonLayer);\n    map.addCartoLayer(csvLayer);\n\n    function recenter() {\n      map.centerOn([-0.1275,51.507],\"latlong\",5000);\n    }\n\n    function changeMarkers() {\n          csvLayer.g().selectAll(\"circle\").remove();\n\n          csvLayer.g().selectAll(\"g.marker\")\n            .append(\"rect\")\n            .attr(\"class\", \"bluesquare\")\n            .attr(\"height\", 5)\n            .attr(\"width\",5)\n            .attr(\"x\",-2.5)\n            .attr(\"y\",-2.5);\n    }\n    \n    function createFeatureLayer() {\n      var featuresArray = [];\n      var mapLayers = map.layers();\n      mapLayers.forEach(function (layer) {\n        if (layer.label() == \"GeoBorders\") {\n          featuresArray = layer.features();\n        }\n      })\n     shortNameCountries = featuresArray.filter(function(d) {return d.properties.name.length < 7})\n\n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(shortNameCountries)\n    .label(\"Feature Array\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\")\n    .on(\"load\", function(){console.log(\"load featurearray\")}); \n    \n    map.addCartoLayer(featureLayer);\n\n    }\n\n  }\n\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "d3.carto.layer.alias - d3.carto.map", "created_at": "2014-07-15T23:13:03Z", "updated_at": "2015-08-29T14:04:00Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.carto.layer.featureArray"], "readme": "Using d3.carto.layer with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nEach d3.carto.layer is defined and then added to the map using map.addCartoLayer. You can access the added layers using map.layers(). Each layer fires a \"load\" event once successfully added to the map.\n\nThis example uses d3.carto.layer.layerType() aliases like d3.carto.layer.tile() and d3.carto.layer.topojson().", "uid": "emeeks_37c28b6ff0e01f69b4cd"}, {"code": "<html>\n<head>\n    <meta charset=\"utf-8\">\n\t<meta name=\"viewport\" content=\"width=320\" />\n\t<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n\t<title>Gauge</title>\n\t<script type=\"text/javascript\" src=\"http://d3js.org/d3.v2.min.js\"></script>\n\t<style>\n\tbody {\n\t\tfont-family:  Helvetica, Arial, sans-serif;\n\t\tmargin: 32px;\n\t}\n\t#power-gauge g.arc {\n\t\tfill: steelblue;\n\t}\n\t#power-gauge g.pointer {\n\t\tfill: #e85116;\n\t\tstroke: #b64011;\n\t}\n\t\n\t#power-gauge g.label text {\n\t\ttext-anchor: middle;\n\t\tfont-size: 14px;\n\t\tfont-weight: bold;\n\t\tfill: #666;\n\t}\n\t</style>\n</head>\n<body>\n<div id=\"power-gauge\"></div>\n\t\n<script>\nvar gauge = function(container, configuration) {\n\tvar that = {};\n\tvar config = {\n\t\tsize\t\t\t\t\t\t: 200,\n\t\tclipWidth\t\t\t\t\t: 200,\n\t\tclipHeight\t\t\t\t\t: 110,\n\t\tringInset\t\t\t\t\t: 20,\n\t\tringWidth\t\t\t\t\t: 20,\n\t\t\n\t\tpointerWidth\t\t\t\t: 10,\n\t\tpointerTailLength\t\t\t: 5,\n\t\tpointerHeadLengthPercent\t: 0.9,\n\t\t\n\t\tminValue\t\t\t\t\t: 0,\n\t\tmaxValue\t\t\t\t\t: 10,\n\t\t\n\t\tminAngle\t\t\t\t\t: -90,\n\t\tmaxAngle\t\t\t\t\t: 90,\n\t\t\n\t\ttransitionMs\t\t\t\t: 750,\n\t\t\n\t\tmajorTicks\t\t\t\t\t: 5,\n\t\tlabelFormat\t\t\t\t\t: d3.format(',g'),\n\t\tlabelInset\t\t\t\t\t: 10,\n\t\t\n\t\tarcColorFn\t\t\t\t\t: d3.interpolateHsl(d3.rgb('#e8e2ca'), d3.rgb('#3e6c0a'))\n\t};\n\tvar range = undefined;\n\tvar r = undefined;\n\tvar pointerHeadLength = undefined;\n\tvar value = 0;\n\t\n\tvar svg = undefined;\n\tvar arc = undefined;\n\tvar scale = undefined;\n\tvar ticks = undefined;\n\tvar tickData = undefined;\n\tvar pointer = undefined;\n\tvar donut = d3.layout.pie();\n\t\n\tfunction deg2rad(deg) {\n\t\treturn deg * Math.PI / 180;\n\t}\n\t\n\tfunction newAngle(d) {\n\t\tvar ratio = scale(d);\n\t\tvar newAngle = config.minAngle + (ratio * range);\n\t\treturn newAngle;\n\t}\n\t\n\tfunction configure(configuration) {\n\t\tvar prop = undefined;\n\t\tfor ( prop in configuration ) {\n\t\t\tconfig[prop] = configuration[prop];\n\t\t}\n\t\t\n\t\trange = config.maxAngle - config.minAngle;\n\t\tr = config.size / 2;\n\t\tpointerHeadLength = Math.round(r * config.pointerHeadLengthPercent);\n\t\t// a linear scale that maps domain values to a percent from 0..1\n\t\tscale = d3.scale.linear()\n\t\t\t.range([0,1])\n\t\t\t.domain([config.minValue, config.maxValue]);\n\t\t\t\n\t\tticks = scale.ticks(config.majorTicks);\n\t\ttickData = d3.range(config.majorTicks).map(function() {return 1/config.majorTicks;});\n\t\t\n\t\tarc = d3.svg.arc()\n\t\t\t.innerRadius(r - config.ringWidth - config.ringInset)\n\t\t\t.outerRadius(r - config.ringInset)\n\t\t\t.startAngle(function(d, i) {\n\t\t\t\tvar ratio = d * i;\n\t\t\t\treturn deg2rad(config.minAngle + (ratio * range));\n\t\t\t})\n\t\t\t.endAngle(function(d, i) {\n\t\t\t\tvar ratio = d * (i+1);\n\t\t\t\treturn deg2rad(config.minAngle + (ratio * range));\n\t\t\t});\n\t}\n\tthat.configure = configure;\n\t\n\tfunction centerTranslation() {\n\t\treturn 'translate('+r +','+ r +')';\n\t}\n\t\n\tfunction isRendered() {\n\t\treturn (svg !== undefined);\n\t}\n\tthat.isRendered = isRendered;\n\t\n\tfunction render(newValue) {\n\t\tsvg = d3.select(container)\n\t\t\t.append('svg:svg')\n\t\t\t\t.attr('class', 'gauge')\n\t\t\t\t.attr('width', config.clipWidth)\n\t\t\t\t.attr('height', config.clipHeight);\n\t\t\n\t\tvar centerTx = centerTranslation();\n\t\t\n\t\tvar arcs = svg.append('g')\n\t\t\t\t.attr('class', 'arc')\n\t\t\t\t.attr('transform', centerTx);\n\t\t\n\t\tarcs.selectAll('path')\n\t\t\t\t.data(tickData)\n\t\t\t.enter().append('path')\n\t\t\t\t.attr('fill', function(d, i) {\n\t\t\t\t\treturn config.arcColorFn(d * i);\n\t\t\t\t})\n\t\t\t\t.attr('d', arc);\n\t\t\n\t\tvar lg = svg.append('g')\n\t\t\t\t.attr('class', 'label')\n\t\t\t\t.attr('transform', centerTx);\n\t\tlg.selectAll('text')\n\t\t\t\t.data(ticks)\n\t\t\t.enter().append('text')\n\t\t\t\t.attr('transform', function(d) {\n\t\t\t\t\tvar ratio = scale(d);\n\t\t\t\t\tvar newAngle = config.minAngle + (ratio * range);\n\t\t\t\t\treturn 'rotate(' +newAngle +') translate(0,' +(config.labelInset - r) +')';\n\t\t\t\t})\n\t\t\t\t.text(config.labelFormat);\n\t\tvar lineData = [ [config.pointerWidth / 2, 0], \n\t\t\t\t\t\t[0, -pointerHeadLength],\n\t\t\t\t\t\t[-(config.pointerWidth / 2), 0],\n\t\t\t\t\t\t[0, config.pointerTailLength],\n\t\t\t\t\t\t[config.pointerWidth / 2, 0] ];\n\t\tvar pointerLine = d3.svg.line().interpolate('monotone');\n\t\tvar pg = svg.append('g').data([lineData])\n\t\t\t\t.attr('class', 'pointer')\n\t\t\t\t.attr('transform', centerTx);\n\t\t\t\t\n\t\tpointer = pg.append('path')\n\t\t\t.attr('d', pointerLine/*function(d) { return pointerLine(d) +'Z';}*/ )\n\t\t\t.attr('transform', 'rotate(' +config.minAngle +')');\n\t\t\t\n\t\tupdate(newValue === undefined ? 0 : newValue);\n\t}\n\tthat.render = render;\n\t\n\tfunction update(newValue, newConfiguration) {\n\t\tif ( newConfiguration  !== undefined) {\n\t\t\tconfigure(newConfiguration);\n\t\t}\n\t\tvar ratio = scale(newValue);\n\t\tvar newAngle = config.minAngle + (ratio * range);\n\t\tpointer.transition()\n\t\t\t.duration(config.transitionMs)\n\t\t\t.ease('elastic')\n\t\t\t.attr('transform', 'rotate(' +newAngle +')');\n\t}\n\tthat.update = update;\n\tconfigure(configuration);\n\t\n\treturn that;\n};\n</script>\n\n<script>\nfunction onDocumentReady() {\n\tvar powerGauge = gauge('#power-gauge', {\n\t\tsize: 300,\n\t\tclipWidth: 300,\n\t\tclipHeight: 300,\n\t\tringWidth: 60,\n\t\tmaxValue: 10,\n\t\ttransitionMs: 4000,\n\t});\n\tpowerGauge.render();\n\t\n\tfunction updateReadings() {\n\t\t// just pump in random data here...\n\t\tpowerGauge.update(Math.random() * 10);\n\t}\n\t\n\t// every few seconds update reading values\n\tupdateReadings();\n\tsetInterval(function() {\n\t\tupdateReadings();\n\t}, 5 * 1000);\n}\nif ( !window.isLoaded ) {\n\twindow.addEventListener(\"load\", function() {\n\t\tonDocumentReady();\n\t}, false);\n} else {\n\tonDocumentReady();\n}\n</script>\n</body>\n</html>", "description": "d3 gauge", "created_at": "2016-03-04T05:05:37Z", "updated_at": "2016-03-04T05:05:37Z", "api": ["d3.format", "d3.interpolateHsl", "d3.rgb", "d3.layout.pie", "d3.scale.linear", "d3.range", "d3.svg.arc", "d3.select", "d3.svg.line"], "readme": "d3 gauge\n\nforked from <a href='http://bl.ocks.org/ImSraone/'>ImSraone</a>'s block: <a href='http://bl.ocks.org/ImSraone/a6f4f74a628d844e6afb'>d3 gauge</a>", "uid": "ImSraone_216ee9834f42bdfaffae"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n\n  <body>\n    <script>\n      // Set the dimensions of the canvas / graph\n    var margin = {top: 30, right: 30, bottom: 40, left: 50};\n    var width = 800 - margin.left - margin.right;\n    var height = 300 - margin.top - margin.bottom;\n\n    // Set the ranges\n    var x = d3.time.scale().range([0, width]);\n    var y = d3.scale.linear().range([height, 0]);\n\n    // Define the axes\n    var xAxis = d3.svg.axis().scale(x)\n        .orient(\"bottom\").ticks(5);\n\n    var yAxis = d3.svg.axis().scale(y)\n        .orient(\"left\").ticks(5);\n\n    // Adds the svg canvas\n    var svgContainer = d3.select(\"body\")\n        .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n            .attr(\"transform\", \n                  \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var data = [\n                {\"date\":\"1-Apr-15\", \"close\":140.61},\n                {\"date\":\"15-Apr-15\", \"close\":20.23},\n                {\"date\":\"13-May-15\", \"close\":99.00},\n                {\"date\":\"21-May-15\", \"close\":188.13},\n                {\"date\":\"18-Jun-15\", \"close\":59.13},\n                {\"date\":\"28-Jul-15\", \"close\":75.13},\n                {\"date\":\"8-Aug-15\", \"close\":109.13},\n                {\"date\":\"12-Aug-15\", \"close\":96.13}];\n\n    // Parse the date / time\n    var parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n    // Get the data\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the X Axis\n    svgContainer.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svgContainer.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n    // Draw vertical grid lines\n    svgContainer.append(\"g\")     \n        .attr(\"class\", \"grid\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis\n            .tickSize(-height, 0, 0)\n            .tickFormat(\"\")\n            )\n\n    // Draw horizontal grid lines\n    svgContainer.append(\"g\")     \n        .attr(\"class\", \"grid\")\n        .call(yAxis\n            .tickSize(-width, 0, 0)\n            .tickFormat(\"\")\n            )\n\n    svgContainer.selectAll(\"bar\")\n        .data(data)\n        .enter().append(\"rect\")\n        .style(\"fill\", \"#aec6a8\")\n        .attr(\"x\", function(d) { return x(d.date)-5; })\n        .attr(\"width\", 10)\n        .attr(\"y\", function(d) { return y(d.close); })\n        .attr(\"height\", function(d) { return height - y(d.close); });\n      \n    // Define the line (interpolate to smooth the line)\n    var valueline = d3.svg.line()\n        .interpolate(\"cardinal\")\n        .x(function(d) { return x(d.date); })\n        .y(function(d) { return y(d.close); });\n\n    svgContainer.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n   </script>\n</body>\n", "description": "D3 graphs", "created_at": "2015-10-23T23:48:33Z", "updated_at": "2015-10-24T07:33:28Z", "api": ["d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.time.format", "d3.extent", "d3.max", "d3.svg.line"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nSimple D3 graph.", "uid": "dmijalkovic_52fb07194d4b2988cafb"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <script src='http://api.tiles.mapbox.com/mapbox.js/v0.6.4/mapbox.js'></script>\n  <script src='http://d3js.org/d3.v2.min.js?2.9.3'></script>\n  <link\n      href='http://api.tiles.mapbox.com/mapbox.js/v0.6.4/mapbox.css'\n      rel='stylesheet' />\n  <style>\n    body { margin:0; padding:0; }\n    #map { position:absolute; top:0; bottom:0; width:100%; }\n    .d3-vec { position:absolute; }\n    path {\n      fill: #000;\n      fill-opacity: .2;\n      stroke: #fff;\n      stroke-width: 1.5px;\n    }\n\n    path:hover {\n      fill: brown;\n      fill-opacity: .7;\n    }\n  </style>\n</head>\n<body>\n<div id='map'></div>\n<script>\n  function folly() {\n      var f = {}, bounds, feature;\n      var div = d3.select(document.body)\n          .append(\"div\")\n          .attr('class', 'd3-vec'),\n      svg = div.append('svg'),\n      g = svg.append(\"g\");\n\n      f.parent = div.node();\n\n      // Use Leaflet to implement a D3 geographic projection.\n      f.project = function(x) {\n        var point = f.map.locationPoint({ lat: x[1], lon: x[0] });\n        return [point.x, point.y];\n      }\n\n      // Reposition the SVG to cover the features.\n      f.draw = function() {\n        var bounds = f.map.extent(),\n            bl = bounds.southWest(),\n            tr = bounds.northEast();\n        var bottomLeft = f.project([bl.lon, bl.lat]),\n            topRight = f.project([tr.lon, tr.lat]);\n\n        svg.attr(\"width\", topRight[0] - bottomLeft[0])\n            .attr(\"height\", bottomLeft[1] - topRight[1])\n            .style(\"margin-left\", bottomLeft[0] + \"px\")\n            .style(\"margin-top\", topRight[1] + \"px\");\n\n        g.attr(\"transform\", \"translate(\" + -bottomLeft[0] + \",\" + -topRight[1] + \")\");\n\n        path = d3.geo.path().projection(f.project);\n\n        feature.attr(\"d\", path);\n      }\n\n      f.data = function(collection) {\n          bounds = d3.geo.bounds(collection);\n          feature = g.selectAll(\"path\")\n              .data(collection.features)\n              .enter().append(\"path\");\n          return f;\n      };\n\n      return f;\n  }\n  mapbox.auto('map', 'examples.map-vyofok3q', function(map) {\n      d3.json(\"us-states.json\", function(collection) {\n          var l = folly().data(collection);\n          map.addLayer(l);\n          map.zoom(4).center({ lat: 37, lon: -90 });\n      });\n  });\n</script>\n</body>\n</html>\n", "description": "MapBox + d3", "created_at": "2016-03-23T05:06:30Z", "updated_at": "2016-03-23T05:06:32Z", "api": ["d3.select", "d3.geo.path", "d3.geo.bounds", "d3.json"], "readme": "\n\nforked from <a href='http://bl.ocks.org/tmcw/'>tmcw</a>'s block: <a href='http://bl.ocks.org/tmcw/3426132'>MapBox + d3</a>", "uid": "jwarburg_357d91975a97e9f68208"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <script src='http://api.tiles.mapbox.com/mapbox.js/v0.6.4/mapbox.js'></script>\n  <script src='http://d3js.org/d3.v2.js?2.9.3'></script>\n  <link\n      href='http://api.tiles.mapbox.com/mapbox.js/v0.6.4/mapbox.css'\n      rel='stylesheet' />\n  <style>\n    body { margin:0; padding:0; }\n    #map { position:absolute; top:0; bottom:0; width:100%; }\n    .d3-vec { position:absolute; }\n    path {\n      fill: #000;\n      fill-opacity: .2;\n      stroke: #fff;\n      stroke-width: 1.5px;\n    }\n\n    path:hover {\n      fill: brown;\n      fill-opacity: .7;\n    }\n  </style>\n</head>\n<body>\n<div id='map'></div>\n<script>\n  function folly() {\n      var f = {}, bounds, feature;\n      var div = d3.select(document.body)\n          .append(\"div\")\n          .attr('class', 'd3-vec'),\n      svg = div.append('svg'),\n      g = svg.append(\"g\");\n\n      f.parent = div.node();\n\n      // Use Leaflet to implement a D3 geographic projection.\n      f.project = function(x) {\n        var point = f.map.locationPoint({ lat: x[1], lon: x[0] });\n        return [point.x, point.y];\n      }\n\n      // Reposition the SVG to cover the features.\n      f.draw = function() {\n        var bounds = f.map.extent(),\n            bl = bounds.southWest(),\n            tr = bounds.northEast();\n        var bottomLeft = f.project([bl.lon, bl.lat]),\n            topRight = f.project([tr.lon, tr.lat]);\n\n        svg.attr(\"width\", topRight[0] - bottomLeft[0])\n            .attr(\"height\", bottomLeft[1] - topRight[1])\n            .style(\"margin-left\", bottomLeft[0] + \"px\")\n            .style(\"margin-top\", topRight[1] + \"px\");\n\n        g.attr(\"transform\", \"translate(\" + -bottomLeft[0] + \",\" + -topRight[1] + \")\");\n\n        path = d3.geo.path().projection(f.project);\n\n        feature.attr(\"d\", path);\n      }\n\n      f.data = function(collection) {\n          bounds = d3.geo.bounds(collection);\n          feature = g.selectAll(\"path\")\n              .data(collection)\n              .enter().append(\"path\");\n          return f;\n      };\n\n      return f;\n  }\n  var mapbox_tilejson = 'http://api.tiles.mapbox.com/v3/mapbox.mapbox-light.jsonp';\n  mapbox.load(mapbox_tilejson, function(o) {\n    var m = mapbox.map('map');\n    m.addLayer(o.layer);\n    m.ui.zoomer.add();\n    var mapbounds = new MM.Extent(\n      32.15603702811953,\n      34.8453784951352,\n      32.02354637361072,\n      34.733455277361784);\n    m.setExtent(mapbounds);\n    m.setPanLimits(mapbounds);\n    m.setZoomRange(13,17);\n    d3.json(\"tlv.json\", function(collection) {\n        var l = folly().data([collection]);\n        m.addLayer(l);\n    });\n  });\n</script>\n</body>\n</html>\n", "description": "MapBox + d3", "created_at": "2012-11-25T01:48:18Z", "updated_at": "2015-10-13T04:48:05Z", "api": ["d3.select", "d3.geo.path", "d3.geo.bounds", "d3.json"], "readme": "", "uid": "pnavarrc_4142064"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<html>\n<head>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"d3.geo.zoom.js\"></script>\n<style>\n.land {\n  fill: green;\n\n}\n.graticule {\n  fill-opacity: 0;\n  stroke: gray;\n  stroke-opacity: 0.5;\n}\n.point {\n  stroke: red;\n  fill-opacity: 0.2;\n  fill: white;\n}\n</style>\n</head>\n\n<body>\n<svg class=\"myworld\"></svg>\n\n<script>\n\nd3.json(\"world110.json\", function(err, world) {\n  var countries = topojson.feature(world, world.objects.land);\n\n  var width = 420\n  var height = 400\n  var projection = d3.geo.orthographic()\n  //var projection = d3.geo.albers()\n  //var projection = d3.geo.mercator()\n    .scale(170)\n    .rotate([100,0,0])\n    .translate([width/2, height/2])\n    .clipAngle(90);\n\n  var path = d3.geo.path()\n  .projection(projection);\n\n  var svg = d3.select(\".myworld\");\n\n  var graticule = d3.geo.graticule()\n  svg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\n  svg.append(\"path\")\n    .datum(countries)\n    .attr(\"d\", path)\n    .classed(\"land\", true);\n\n\n  var zoom = d3.geo.zoom()\n    .projection(projection)\n    //.scaleExtent([projection.scale() * .7, projection.scale() * 10])\n    .on(\"zoom.redraw\", function() {\n      d3.event.sourceEvent.preventDefault();\n      svg.selectAll(\"path\").attr(\"d\", path);\n      svg.selectAll(\"circle\")\n      .attr({\n        cx: function(d) { return projection(d)[0] },\n        cy: function(d) { return projection(d)[1] },\n      })\n\n    })\n  d3.selectAll(\"path\").call(zoom);\n\n  var lonlat = [-109, 37.7833];\n\n  var xy = projection(lonlat)\n  svg.append(\"circle\")\n  .datum(lonlat)\n  .classed(\"point\", true)\n  .attr({\n    cx: function(d) { return projection(d)[0] },\n    cy: function(d) { return projection(d)[1] },\n    r: 10\n  })\n\n  navigator.geolocation.getCurrentPosition(function(pos){\n    console.log(pos);\n    var coords = [pos.coords.longitude, pos.coords.latitude]\n    svg.append(\"circle\")\n    .datum(coords)\n    .attr({\n      cx: function(d) { return projection(d)[0] },\n      cy: function(d) { return projection(d)[1] },\n      r: 15,\n    })\n    .classed(\"point\", true)\n    .style(\"stroke\", \"blue\");\n  })\n\n})\n\n</script>\n</body>\n</html>", "description": "d3.geo with d3.geo.zoom", "created_at": "2014-07-16T06:09:32Z", "updated_at": "2016-05-06T04:27:41Z", "api": ["d3.dispatch", "d3.behavior.zoom", "d3.mouse", "d3.rebind", "d3.json", "d3.geo.orthographic", "d3.geo.albers", "d3.geo.mercator", "d3.geo.path", "d3.select", "d3.geo.graticule", "d3.geo.zoom", "d3.event.sourceEvent.preventDefault", "d3.selectAll"], "readme": "", "uid": "enjalot_31168147b88a1748bc8b"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - d3.carto.minimap</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  #minimap {\n        height: 25%;\n        width: 25%;\n        bottom: 5%;\n        left: 5%;\n        position: absolute;\n        background: red;\n        border:yellow 1px solid;\n        z-index: 1;\n      }\n\n</style>\n<script>\n    function makeSomeMaps() {\n\n        var map = d3.carto.map();\n        d3.select(\"#map\").call(map);\n        \n        var minimap = d3.carto.minimap();\n        d3.select(\"#minimap\").call(minimap);\n\n        //Link the minimap to the full-sized map\n        minimap.tandem(map);\n\n        //Change the default scale of the minimap by accessing the d3.carto.map that it creates with d3.carto.minimap.map()\n        minimap.map().setScale(1);\n\n        var tileLayer = d3.carto.layer()\n          .type(\"tile\")\n          .path(\"examples.map-zgrqqx0w\")\n          .label(\"Base\")\n          .on(\"load\", recenter);\n\n        var geojsonLayer = d3.carto.layer()\n          .type(\"geojson\")\n          .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n          .label(\"GeoBorders\")\n          .cssClass(\"countryborders\")\n          .renderMode(\"canvas\")\n          .on(\"load\", createFeatureLayer);\n\n        var topojsonLayer = d3.carto.layer()\n          .type(\"topojson\")\n          .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n          .label(\"TopoRoutes\")\n          .cssClass(\"roads\")\n          .renderMode(\"canvas\");\n\n        var csvLayer = d3.carto.layer()\n          .type(\"csv\")\n          .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n          .label(\"CSV Points\")\n          .cssClass(\"pinkcircle\")\n          .renderMode(\"svg\")\n          .markerSize(2)\n          .x(\"x\")\n          .y(\"y\")\n          .on(\"load\", changeMarkers);\n\n        var xyLayer = d3.carto.layer()\n          .type(\"xyarray\")\n          .features([{x: 5, y: 40},{x: 5, y: 50}])\n          .label(\"XY Array\")\n          .cssClass(\"greencircle\")\n          .renderMode(\"svg\")\n          .markerSize(4)\n          .x(\"x\")\n          .y(\"y\");\n\n        map.addCartoLayer(tileLayer);\n        map.addCartoLayer(topojsonLayer);\n        map.addCartoLayer(geojsonLayer);\n        map.addCartoLayer(csvLayer);\n        map.addCartoLayer(xyLayer);\n\n        function recenter() {\n          map.setScale(6)\n          map.centerOn([6,45.507],\"latlong\");\n        }\n\n        function changeMarkers() {\n          csvLayer.g().selectAll(\"circle\").remove();\n\n          csvLayer.g().selectAll(\"g.marker\")\n            .append(\"rect\")\n            .attr(\"class\", \"bluesquare\")\n            .attr(\"height\", 5)\n            .attr(\"width\",5)\n            .attr(\"x\",-2.5)\n            .attr(\"y\",-2.5);\n\n        }\n\n\n        function createFeatureLayer() {\n          var featuresArray = [];\n          var mapLayers = map.layers();\n          mapLayers.forEach(function (layer) {\n            if (layer.label() == \"GeoBorders\") {\n              featuresArray = layer.features();\n            }\n          })\n\n          var shortNameCountries = featuresArray.filter(function(d) {\n            return d.properties.name.length < 7;\n          });\n\n          var featureLayer = d3.carto.layer()\n            .type(\"featurearray\")\n            .features(shortNameCountries)\n            .label(\"Feature Array\")\n            .cssClass(\"halffilledcountries\")\n            .renderMode(\"svg\");\n\n          map.addCartoLayer(featureLayer);\n\n        }\n\n      }\n\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<div id=\"minimap\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "d3.carto.minimap - d3.carto.map", "created_at": "2014-07-17T01:42:49Z", "updated_at": "2015-08-29T14:04:05Z", "api": ["d3.carto.map", "d3.select", "d3.carto.minimap", "d3.carto.minimap.map", "d3.carto.layer"], "readme": "Using d3.carto.minimap with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nDrag the main map around and zoom in and zoom out to see the bounds change in the minimap.\n\nThe minimap creates its own d3.carto.map and, with minimap.tandem() will take the layers from the main map and recreate them in the minimap.", "uid": "emeeks_a726210cbc439b969f02"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - d3.carto.layer</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\")\n    .on(\"load\", recenter);\n\n    geojsonLayer = d3.carto.layer();\n    \n    geojsonLayer\n    .type(\"geojson\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoBorders\")\n    .cssClass(\"countryborders\")\n    .renderMode(\"canvas\")\n    .on(\"load\", createFeatureLayer);\n    \n    topojsonLayer = d3.carto.layer();\n    topojsonLayer\n    .type(\"topojson\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n    .label(\"TopoRoutes\")\n    .cssClass(\"roads\")\n    .renderMode(\"canvas\")\n    .on(\"load\", function() {console.log(\"load topojson\")});\n\n    csvLayer = d3.carto.layer();\n    csvLayer\n    .type(\"csv\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(3)\n    .x(\"x\")\n    .y(\"y\")\n    .on(\"load\", changeMarkers);\n\n    xyLayer = d3.carto.layer();\n    xyLayer\n    .type(\"xyarray\")\n    .features([{x: 5, y: 40},{x: 5, y: 50}])\n    .label(\"XY Array\")\n    .cssClass(\"greencircle\")\n    .renderMode(\"svg\")\n    .markerSize(30)\n    .x(\"x\")\n    .y(\"y\")\n    .on(\"load\", function(){console.log(\"load xyarray\")});\n\n    map.addCartoLayer(tileLayer);\n    map.addCartoLayer(topojsonLayer);\n    map.addCartoLayer(geojsonLayer);\n    map.addCartoLayer(csvLayer);\n    map.addCartoLayer(xyLayer);\n\n    function recenter() {\n      map.centerOn([-0.1275,51.507],\"latlong\",5000);\n    }\n\n    function changeMarkers() {\n          csvLayer.g().selectAll(\"circle\").remove();\n\n          csvLayer.g().selectAll(\"g.marker\")\n            .append(\"rect\")\n            .attr(\"class\", \"bluesquare\")\n            .attr(\"height\", 5)\n            .attr(\"width\",5)\n            .attr(\"x\",-2.5)\n            .attr(\"y\",-2.5);\n    }\n    \n    function createFeatureLayer() {\n      var featuresArray = [];\n      var mapLayers = map.layers();\n      mapLayers.forEach(function (layer) {\n        if (layer.label() == \"GeoBorders\") {\n          featuresArray = layer.features();\n        }\n      })\n     shortNameCountries = featuresArray.filter(function(d) {return d.properties.name.length < 7})\n\n    featureLayer = d3.carto.layer();\n    featureLayer\n    .type(\"featurearray\")\n    .features(shortNameCountries)\n    .label(\"Feature Array\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\")\n    .on(\"load\", function(){console.log(\"load featurearray\")}); \n    \n    map.addCartoLayer(featureLayer);\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "d3.carto.layer - d3.carto.map", "created_at": "2014-07-14T04:42:59Z", "updated_at": "2015-08-29T14:03:57Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer"], "readme": "Using d3.carto.layer with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nEach d3.carto.layer is defined and then added to the map using map.addCartoLayer. You can access the added layers using map.layers(). Each layer fires a \"load\" event once successfully added to the map.\n", "uid": "emeeks_0d69f4a8c717d5548977"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.point {\n  fill: steelblue;\n  stroke: #000;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  // Coerce the data to numbers.\n  data.forEach(function(d) {\n    d.x = +d.x;\n    d.y = +d.y;\n  });\n\n  // Compute the scales\u2019 domains.\n  x.domain(d3.extent(data, function(d) { return d.x; })).nice();\n  y.domain(d3.extent(data, function(d) { return d.y; })).nice();\n\n  // Add the x-axis.\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n  // Add the y-axis.\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(d3.svg.axis().scale(y).orient(\"left\"));\n\n  // Add the points!\n  svg.selectAll(\".point\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"point\")\n      .attr(\"r\", 4.5)\n      .attr(\"cx\", function(d) { return x(d.x); })\n      .attr(\"cy\", function(d) { return y(d.y); });\n});\n\n</script>\n", "description": "d3.tsv", "created_at": "2012-08-09T17:06:48Z", "updated_at": "2016-03-29T01:11:27Z", "api": ["d3.scale.linear", "d3.select", "d3.tsv", "d3.extent", "d3.svg.axis"], "readme": "D3 2.10 adds support for [tab-separated values](http://en.wikipedia.org/wiki/Tab-separated_values) via d3.tsv. Similar to the previous d3.csv method, this makes it easy to load and parse TSV files.\n\n```javascript\nd3.tsv(\"data.tsv\", function(data) {\n  console.log(data[0].x);\n});\n```\n", "uid": "mbostock_3305937"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <script src='http://api.tiles.mapbox.com/mapbox.js/v0.6.4/mapbox.js'></script>\n  <script src='http://d3js.org/d3.v2.min.js?2.9.3'></script>\n  <link\n      href='http://api.tiles.mapbox.com/mapbox.js/v0.6.4/mapbox.css'\n      rel='stylesheet' />\n  <style>\n    body { margin:0; padding:0; }\n    #map { position:absolute; top:0; bottom:0; width:100%; }\n    .d3-vec { position:absolute; }\n    path {\n      fill: #000;\n      fill-opacity: .2;\n      stroke: #fff;\n      stroke-width: 1.5px;\n    }\n\n    path:hover {\n      fill: brown;\n      fill-opacity: .7;\n    }\n  </style>\n</head>\n<body>\n<div id='map'></div>\n<script>\n  function folly() {\n      var f = {}, bounds, feature;\n      var div = d3.select(document.body)\n          .append(\"div\")\n          .attr('class', 'd3-vec'),\n      svg = div.append('svg'),\n      g = svg.append(\"g\");\n\n      f.parent = div.node();\n\n      // Use Leaflet to implement a D3 geographic projection.\n      f.project = function(x) {\n        var point = f.map.locationPoint({ lat: x[1], lon: x[0] });\n        return [point.x, point.y];\n      }\n\n      // Reposition the SVG to cover the features.\n      f.draw = function() {\n        var bounds = f.map.extent(),\n            bl = bounds.southWest(),\n            tr = bounds.northEast();\n        var bottomLeft = f.project([bl.lon, bl.lat]),\n            topRight = f.project([tr.lon, tr.lat]);\n\n        svg.attr(\"width\", topRight[0] - bottomLeft[0])\n            .attr(\"height\", bottomLeft[1] - topRight[1])\n            .style(\"margin-left\", bottomLeft[0] + \"px\")\n            .style(\"margin-top\", topRight[1] + \"px\");\n\n        g.attr(\"transform\", \"translate(\" + -bottomLeft[0] + \",\" + -topRight[1] + \")\");\n\n        path = d3.geo.path().projection(f.project);\n\n        feature.attr(\"d\", path);\n      }\n\n      f.data = function(collection) {\n          bounds = d3.geo.bounds(collection);\n          feature = g.selectAll(\"path\")\n              .data(collection.features)\n              .enter().append(\"path\");\n          return f;\n      };\n\n      return f;\n  }\n  mapbox.auto('map', 'examples.map-vyofok3q', function(map) {\n      d3.json(\"us-states.json\", function(collection) {\n          var l = folly().data(collection);\n          map.addLayer(l);\n          map.zoom(4).center({ lat: 37, lon: -90 });\n      });\n  });\n</script>\n</body>\n</html>\n", "description": "MapBox + d3", "created_at": "2012-08-22T14:31:03Z", "updated_at": "2016-01-05T17:12:07Z", "api": ["d3.select", "d3.geo.path", "d3.geo.bounds", "d3.json"], "readme": "", "uid": "tmcw_3426132"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.8/d3.min.js\"></script>\n  <style>\n    circle {\n      opacity: 0.2;\n    }\n    body {\n        font-family: futura;\n    }\n    h2.title {\n      color: black;\n      text-align: center;\n    }\n    .axis {\n      font-family: arial;\n      font-size: 0.7em;\n    }\n    text {\n      fill: black;\n    }\n    .label {\n      font-size: 2em;\n    }\n    path {\n      fill: none;\n      stroke: black;\n      stroke-width: 1px;\n    }\n    .tick {\n      fill: none;\n      stroke: black;\n    }\n    .line {\n      fill: none;\n      stroke: #4eb0bb;\n      stroke-width: 1px;\n    }\n  </style>\n  <script>\n    function draw(data) {\n    \"use strict\";\n\n    /*\n        D3.js setup code\n    */\n\n    // set margins according to Mike Bostock's margin conventions\n    // http://bl.ocks.org/mbostock/3019563\n    var margin = {top: 25, right: 40, bottom: 150, left: 75};\n    \n    // set height and width of chart\n    var width = 700 - margin.left - margin.right,\n        height = 800 - margin.top - margin.bottom;\n    \n    // specify the radius of our circles and the\n    // column we want to plot\n    var radius = 3,\n        field = 'San Francisco',\n        x_field = \"number_of_reviews\",\n        y_field = \"availability_365\";\n  \n    // Append the title for the graph\n    d3.select(\"body\")\n        .append(\"h2\")\n        .text(field + \" Listings\")\n        .attr('class', 'title');\n    \n    // append the SVG tag with height and width to accommodate for margins\n    var svg = d3.select(\"body\")\n                .append(\"svg\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                .append('g')\n                    .attr('class','chart')\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    // remove missing values\n    data = data.filter(function(d) {\n      return d[y_field];\n    });\n\n    // bind our data to svg circles for the scatter plot\n    svg.selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n      \n      // maximum price\n      var max_y = d3.max(data, function(d) {\n          return +d[y_field];\n//         \treturn 10000;\n      });\n\n      // get min/max review count\n      var review_extent = d3.extent(data, function(d){\n          return +d[x_field];\n      });\n\n      // Create x-axis scale mapping dates -> pixels\n      var review_scale = d3.scale.linear()\n          .range([0, width])\n          .domain(review_extent);\n\n      // Create y-axis scale mapping price -> pixels\n      var measure_scale = d3.scale.linear()\n          .range([height, 0])\n          .domain([0, max_y]);\n//       \t\t.domain([0, 10000]);\n\n      // Create D3 axis object from time_scale for the x-axis\n      var x_axis = d3.svg.axis()\n          .scale(review_scale);\n\n      // Create D3 axis object from measure_scale for the y-axis\n      var measure_axis = d3.svg.axis()\n          .scale(measure_scale)\n          .orient(\"left\");\n\n      // Append SVG to page corresponding to the D3 x-axis\n      svg.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', \"translate(0,\" + height + \")\")\n          .call(x_axis);\n\n      // Append SVG to page corresponding to the D3 y-axis\n      svg.append('g')\n          .attr('class', 'y axis')\n          .call(measure_axis);\n\n      // add label to y-axis\n      d3.select(\".y.axis\")\n          .append(\"text\")\n          .attr('class', 'label')\n          .text(\"Price (dollar/sq-ft)\")\n          .attr(\"transform\", \"rotate(-90, -50, 0) translate(-450)\");\n\n      // based on the data bound to each svg circle,\n      // change its center-x (cx) and center-y (cy)\n      // coordinates\n      d3.selectAll('circle')\n          .attr('cx', function(d) {\n              return review_scale(+d[x_field]);\n          })\n          .attr('cy', function(d) {\n              return measure_scale(+d[y_field]);\n          })\n          .attr('r', function(d) {\n            return 2;\n          })\n          .style('fill', function(d) {\n            switch (d['room_type']) {\n              case 'Entire home/apt':\n                return 'red';\n              case 'Private room':\n                return 'green'\n              case 'Shared room':\n                return 'blue';\n              default:\n                return 'gray';\n            }\n          });\n    }\n  </script>\n</head>\n  <body>\n    <script>\n      /*\n      Use D3 to load the CSV file and pass\n      the contents of it to the draw function.\n      */\n      d3.csv(\"http://jay-oh-en.github.io/interactive-data-viz/data/airbnb/listings.csv\", draw);\n    </script>\n  </body>\n</html>", "description": "AirBnB D3", "created_at": "2015-12-11T01:33:50Z", "updated_at": "2015-12-11T01:33:50Z", "api": ["d3.select", "d3.max", "d3.extent", "d3.scale.linear", "d3.svg.axis", "d3.selectAll", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "balajikvijayan_f7b24a7a56e5caa479d2"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://cdn.rawgit.com/fabid/d3-heatmap/master/heatmap.js\"></script>\n  <script src=\"https://cdn.rawgit.com/fabid/d3-returntimemap/master/returntimemap.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.11.2/moment.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width:50%; height: 100% }\n    line {stroke-width: 1px; stroke: black;}\n    path {stroke-width: 1px;}\n  </style>\n</head>\n\n<body>\n  <script>\n\n    d3.csv('tweets.csv', function(error, data){\n      var margin = {\n        top: 20,\n        right: 20,\n        bottom: 80,\n        left: 80\n      };\n      var dim = 480;\n      var width = dim - margin.left - margin.right;\n      var height = dim - margin.top - margin.bottom;\n      var format = d3.time.format(\"%Y-%m-%d %H:%M:%S\");\n      var dateAccessor = function (d) {return format.parse(d.date)};\n\n      var timemap = d3.returntimemap()\n      \t\t\t\t\t\t\t\t.values(dateAccessor);\n      \n      var timemapData = timemap(data);\n \n      var svg = d3.select('body')\n        .append('svg')\n        .attr('width', dim)\n        .attr('height', dim);\n      \n      var scatter = svg.append('g');\n\n  \t\tvar xScale = d3.scale.log();\n  \t\tvar yScale = d3.scale.log();\n  \n      timemapData.map\n  \t\tvar delta = 1000;\n  \t\txScale.domain(d3.extent(timemapData, function(d) { return d.x; }))\n        \t\t.range([margin.left, width + margin.left]);\n      \n  \t\tyScale.domain(d3.extent(timemapData, function(d) { return d.y; }))\n        \t\t.range([height, margin.top]);\n      \n      \n      var day = 1000 * 3600 * 24;\n      var minute = 1000 * 60;\n      var xAxis = d3.svg.axis()\n    \t\t.scale(xScale)\n    \t\t.orient(\"bottom\")\n      \t.innerTickSize([10])\n        .outerTickSize([1])\n      \t.tickValues([4 * minute, 60 * 8 * minute, 14 * day])\n      \t.tickFormat(function(d){return moment.duration(d).humanize()});\n      var yAxis = d3.svg.axis()\n    \t\t.scale(yScale)\n    \t\t.orient(\"left\")\n      \t.innerTickSize([10])\n        .outerTickSize([1])\n      \t.tickValues([4 * minute, 60 * 8 * minute, 14 * day])\n      \t.tickFormat(function(d){return moment.duration(d).humanize()});\n      svg.append(\"g\")\n    \t\t.attr(\"class\", \"x axis\")\n    \t\t.attr(\"transform\", \"translate(0,\" + (height) + \")\")\n    \t\t.call(xAxis);\n      svg.append(\"g\")\n      \t.attr(\"class\", \"y axis\")\n      \t.attr(\"transform\", \"translate(\" + margin.left + \",0)\")\n      \t.call(yAxis);\n      scatter.selectAll('circle').data(timemapData).enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('fill', 'black')\n        .style('fill-opacity', 0.6)\n        .attr('cx', function(d) {return xScale(d.x)})\n        .attr('cy', function(d) {return yScale(d.y)});\n\n\t\t\tsvg.append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"transform\", \"translate(\"+ (margin.left/5) +\",\"+(3*height/4)+\")rotate(-90)\")\n      \t\t\t.style('font-family', 'sans-serif')\n            .text(\"Time after event\");\n      svg.append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"transform\", \"translate(\"+ (width/2) +\",\"+(height + margin.top + margin.bottom/2)+\")\")\n      \t\t\t.style('font-family', 'sans-serif')\n            .text(\"Time before event\"); \n           \n      var size = 5;\n      var heatmap = d3.heatmap()\n        .std(2)\n      \t.x(function(d) { return xScale(d.x); })\n        .y(function(d) { return yScale(d.y); })\n        .dx(size)\n        .dy(size);\n      \n      // the result of the heatmap layout\n      var heatmapData = heatmap(timemapData);\n\n      var color = d3.scale.linear()\n        .domain([0, d3.max(heatmapData, function(d) {\n          return d.v;\n        })])\n        .range([\"white\", \"steelblue\"])\n        .interpolate(d3.interpolateLab);\n      \n      var svg2 = d3.select('body')\n        .append('svg')\n        .attr('width', size)\n        .attr('height', size);\n\t\t\tsvg2.append(\"g\")\n    \t\t.attr(\"class\", \"x axis\")\n    \t\t.attr(\"transform\", \"translate(0,\" + (height) + \")\")\n    \t\t.call(xAxis);\n      svg2.append(\"g\")\n      \t.attr(\"class\", \"y axis\")\n      \t.attr(\"transform\", \"translate(\" + margin.left + \",0)\")\n      \t.call(yAxis);\n      svg2.append(\"g\")\n        .selectAll(\".square\")\n        .data(heatmapData)\n        .enter().append(\"rect\")\n         .attr(\"class\", \"square\")\n        .attr(\"x\", function(d) { return d.x; })\n        .attr(\"y\", function(d) { return d.y - size; })    \n        .attr(\"width\", size)\n        .attr(\"height\", size)\n        .style(\"fill\", function(d) {\n          return color(d.v)\n        })\n        .style(\"stroke\", \"none\");\n\n      \n      \n    })\n  </script>\n</body>\n", "description": "d3-returntimemap", "created_at": "2016-03-01T18:28:35Z", "updated_at": "2016-03-02T15:09:41Z", "api": ["d3.csv", "d3.time.format", "d3.returntimemap", "d3.select", "d3.scale.log", "d3.extent", "d3.svg.axis", "d3.heatmap", "d3.scale.linear", "d3.max"], "readme": "Timemaps of my latest tweets with [d3-returntimemap](https://github.com/fabid/d3-returntimemap). Plain version and heatmap version with [d3-heatmap](https://github.com/fabid/d3-heatmap).\n\nThe peak around the 8 hour mark is due to my use of Buffer.\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\n\nforked from <a href='http://bl.ocks.org/fabid/'>fabid</a>'s block: <a href='http://bl.ocks.org/fabid/0c4cf357ab5ed3e90382'>d3-heatmap</a>", "uid": "fabid_024452c42b94723b401d"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  margin: 0;\n}\n\n.map {\n  position: relative;\n  overflow: hidden;\n}\n\n.layer {\n  position: absolute;\n}\n\n.tile {\n  position: absolute;\n  width: 256px;\n  height: 256px;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"https://raw.github.com/d3/d3-plugins/master/geo/tile/tile.js\"></script>\n<script>\n\nvar width = window.innerWidth,\n    height = window.innerHeight,\n    prefix = prefixMatch([\"webkit\", \"ms\", \"Moz\", \"O\"]);\n\nvar tile = d3.geo.tile()\n    .size([width, height]);\n\nvar zoom = d3.behavior.zoom()\n    .scale(2 << 11)\n    .scaleExtent([2 << 8, 2 << 22])\n    .translate([width / 2, height / 2])\n    .on(\"zoom\", zoomed);\n\nvar map = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"map\")\n    .style(\"width\", width + \"px\")\n    .style(\"height\", height + \"px\")\n    .call(zoom);\n\nvar layer = map.append(\"div\")\n    .attr(\"class\", \"layer\");\n\nzoomed();\n\nfunction zoomed() {\n  var tiles = tile\n      .scale(zoom.scale())\n      .translate(zoom.translate())\n      ();\n\n  var image = layer\n      .style(prefix + \"transform\", matrix3d(tiles.scale, tiles.translate))\n    .selectAll(\".tile\")\n      .data(tiles, function(d) { return d; });\n\n  image.exit()\n      .remove();\n\n  image.enter( ).append('div')\n      .attr(\"class\", \"tile\")\n      .style(\"left\", function(d) { return (d[0] << 8) + \"px\"; })\n      .style(\"top\", function(d) { return (d[1] << 8) + \"px\"; })\n      .text( function (d) {\n        return \"x:\"  + d[0]\n             + \" y:\" + d[1]\n             + \" z:\" + d[2];\n      })\n      ;\n  /*\n  image.enter().append(\"img\")\n      .attr(\"class\", \"tile\")\n      .attr(\"src\", function(d) { return \"http://\" + [\"a\", \"b\", \"c\", \"d\"][Math.random() * 4 | 0] + \".tiles.mapbox.com/v3/mapbox.mapbox-streets/\" + d[2] + \"/\" + d[0] + \"/\" + d[1] + \".png\"; })\n      .style(\"left\", function(d) { return (d[0] << 8) + \"px\"; })\n      .style(\"top\", function(d) { return (d[1] << 8) + \"px\"; });\n  */\n}\n\nfunction matrix3d(scale, translate) {\n  var k = scale / 256, r = scale % 1 ? Number : Math.round;\n  return \"matrix3d(\" + [k, 0, 0, 0, 0, k, 0, 0, 0, 0, k, 0, r(translate[0] * scale), r(translate[1] * scale), 0, 1 ] + \")\";\n}\n\nfunction prefixMatch(p) {\n  var i = -1, n = p.length, s = document.body.style;\n  while (++i < n) if (p[i] + \"Transform\" in s) return \"-\" + p[i].toLowerCase() + \"-\";\n  return \"\";\n}\n\n</script>\n", "description": "d3.geo.tile", "created_at": "2012-12-11T17:42:15Z", "updated_at": "2015-10-13T21:48:11Z", "api": ["d3.geo.tile", "d3.behavior.zoom", "d3.select"], "readme": "# d3 tile plugin demo\n\n[demo](http://bl.ocks.org/4260548)\n[src](https://gist.github.com/4260548)\n\nModified from the\n[original d3 tile demo](http://bl.ocks.org/4132797)\nA demo of the\n[d3.geo.tile](https://github.com/d3/d3-plugins/tree/master/geo/tile)\nplugin, which determines which 256x256 tiles are visible in the viewport based\non a scale and translate. This demo combines the tile plugin with\nd3.behavior.zoom for panning and zooming, resulting in a a simple slippy map.\nBased partly on [an example](http://bl.ocks.org/3943330) by\n[Tom MacWright](http://macwright.org/).\n", "uid": "bewest_4260548"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://cdn.rawgit.com/fabid/d3-heatmap/master/heatmap.js\"></script>\n  <script src=\"https://cdn.rawgit.com/fabid/d3-returntimemap/master/returntimemap.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.11.2/moment.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width:50%; height: 100% }\n    line {stroke-width:1px; stroke: black;}\n    path {stroke-width:1px;}\n  </style>\n</head>\n\n<body>\n  <script>\n\n    d3.csv('tweets.csv', function(error, data){\n \n      var margin = {\n        top: 20,\n        right: 20,\n        bottom: 90,\n        left: 90\n      },\n      width = 480 - margin.left - margin.right,\n      height = 480 - margin.top - margin.bottom;\n      \n      var dateAccessor = function (d) {return Date.parse(d.date)};\n\n      var timemap = d3.returntimemap()\n      \t\t\t\t\t\t\t\t.values(dateAccessor);\n      \n      var timemapData = timemap(data);\n \n      var svg = d3.select('body')\n        .append('svg')\n        .attr('width', width)\n        .attr('height', height);\n      \n      var scatter = svg.append('g');\n\n  \t\tvar xScale = d3.scale.log();\n  \t\tvar yScale = d3.scale.log();\n  \n      timemapData.map\n  \t\tvar delta = 1000;\n  \t\txScale.domain(d3.extent(timemapData, function(d) { return d.x; }))\n        \t\t.range([margin.left, width + margin.left]);\n  \t\tyScale.domain(d3.extent(timemapData, function(d) { return d.y; }))\n        \t\t.range([height + margin.top, margin.top]);\n      var day = 1000 * 3600 * 24;\n      var minute = 1000 * 60;\n      var xAxis = d3.svg.axis()\n    \t\t.scale(xScale)\n    \t\t.orient(\"bottom\")\n      \t.innerTickSize([10])\n        .outerTickSize([1])\n      \t.tickValues([4 * minute, 60 * 8 * minute, 14 * day])\n      \t.tickFormat(function(d){return moment.duration(d).humanize()});\n      var yAxis = d3.svg.axis()\n    \t\t.scale(yScale)\n    \t\t.orient(\"left\")\n      \t.innerTickSize([10])\n        .outerTickSize([1])\n      \t.tickValues([4 * minute, 60 * 8 * minute, 14 * day])\n      \t.tickFormat(function(d){return moment.duration(d).humanize()});\n      svg.append(\"g\")\n    \t\t.attr(\"class\", \"x axis\")\n    \t\t.attr(\"transform\", \"translate(0,\" + (height + margin.top) + \")\")\n    \t\t.call(xAxis);\n      svg.append(\"g\")\n      \t.attr(\"class\", \"y axis\")\n      \t.attr(\"transform\", \"translate(\" + margin.left + \",0)\")\n      \t.call(yAxis);\n      scatter.selectAll('circle').data(timemapData).enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('fill', 'black')\n        .style('fill-opacity', 0.6)\n        .attr('cx', function(d) {return xScale(d.x)})\n        .attr('cy', function(d) {return yScale(d.y)});\n\n      \n           \n      var size = 10;\n      var heatmap = d3.heatmap()\n        .std(2)\n      \t.x(function(d) { return xScale(d.x); })\n        .y(function(d) { return yScale(d.y); })\n        .dx(size)\n        .dy(size);\n      \n      // the result of the heatmap layout\n      var heatmapData = heatmap(timemapData);\n\n      var color = d3.scale.linear()\n        .domain([0, d3.max(heatmapData, function(d) {\n          return d.v;\n        })])\n        .range([\"white\", \"steelblue\"])\n        .interpolate(d3.interpolateLab);\n      \n      var svg2 = d3.select('body')\n        .append('svg')\n        .attr('width', width)\n        .attr('height', height);\n\n      svg2.append(\"g\")\n        .selectAll(\".square\")\n        .data(heatmapData)\n        .enter().append(\"rect\")\n         .attr(\"class\", \"square\")\n        .attr(\"x\", function(d) { return d.x; })\n        .attr(\"y\", function(d) { return d.y - size; })    \n        .attr(\"width\", size)\n        .attr(\"height\", size)\n        .style(\"fill\", function(d) {\n          return color(d.v)\n        })\n        .style(\"stroke\", \"none\");\n\n      \n      \n    })\n  </script>\n</body>\n", "description": "d3-returntimemap", "created_at": "2016-03-02T14:33:55Z", "updated_at": "2016-03-02T14:33:55Z", "api": ["d3.csv", "d3.returntimemap", "d3.select", "d3.scale.log", "d3.extent", "d3.svg.axis", "d3.heatmap", "d3.scale.linear", "d3.max"], "readme": "Rectangular binning with [d3-heatmap](https://github.com/fabid/d3-heatmap/blob/master/heatmap.js)\nbased on [d3-hexbin demo](http://bl.ocks.org/xaranke/b956ee7215b7b50bc78a)\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/320859ff9f2e2576cebf'>Rectangular binning - 2d histogram</a>\n\nforked from <a href='http://bl.ocks.org/fabid/'>fabid</a>'s block: <a href='http://bl.ocks.org/fabid/a1a7d04bdd34c2096eaf'>Rectangular binning - 2d histogram</a>\n\nforked from <a href='http://bl.ocks.org/fabid/'>fabid</a>'s block: <a href='http://bl.ocks.org/fabid/0c4cf357ab5ed3e90382'>d3-heatmap</a>\n\nforked from <a href='http://bl.ocks.org/fabid/'>fabid</a>'s block: <a href='http://bl.ocks.org/fabid/024452c42b94723b401d'>d3-returntimemap</a>", "uid": "fabid_8b6a0277075d770f088a"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width:100%; height: 100% }\n  </style>\n</head>\n\n<body>\n  <script>\n    // Feel free to change or delete any of the code you see!\n    var svg = d3.select(\"body\").append(\"svg\")\n    svg.append(\"rect\")\n      .attr({x: 100, y: 10, width: 700, height: 480})\n      .style({ fill: \"#a72d1a\"})\n      .transition().duration(3000).ease(\"bounce\")\n      .style({ fill: \"#5db9e3\"})\n\n    console.log(\"you are now rocking with d3\", d3);\n  </script>\n</body>\n", "description": "D3 ruler", "created_at": "2016-02-18T16:39:17Z", "updated_at": "2016-02-18T16:39:17Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "Rico3734_3a387f8041e1dc31d718"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width:100%; height: 100% }\n  </style>\n</head>\n\n<body>\n  <script>\n    // Feel free to change or delete any of the code you see!\n    var svg = d3.select(\"body\").append(\"svg\")\n    svg.append(\"rect\")\n      .attr({x: 100, y: 10, width: 700, height: 480})\n      .style({ fill: \"#a72d1a\"})\n      .transition().duration(3000).ease(\"bounce\")\n      .style({ fill: \"#5db9e3\"})\n\n    console.log(\"you are now rocking with d3\", d3);\n  </script>\n</body>\n", "description": "D3 - AmaTest", "created_at": "2016-03-03T13:52:52Z", "updated_at": "2016-03-03T13:52:52Z", "api": ["d3.range", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "diskmanti_bc208f5266e4ffd5484a"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n  </style>\n</head>\n\n<body>\n  <script>\n    var margin = {top: 20, right: 10, bottom: 20, left: 10};\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // Feel free to change or delete any of the code you see!\n    svg.append(\"rect\")\n      .attr({x: 100, y: 100, width: width-200, height: height-200})\n      .style({ fill: \"#a72d1a\"})\n      .transition().duration(3000).ease(\"bounce\")\n      .style({ fill: \"#5db9e3\"})\n    \n    console.log(\"you are now rocking with d3\", d3);\n  </script>\n</body>\n", "description": "d3 mapping", "created_at": "2015-10-26T22:53:55Z", "updated_at": "2015-10-26T22:53:55Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "anatolyg_25fa3e51da9a1ac22e02"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n  </style>\n</head>\n\n<body>\n  <script>\n    var gaussianDataGenerator = d3.random.normal();\n    var margin = {top: 20, right: 10, bottom: 20, left: 10};\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    \n    // Create the svg container\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    \t.append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\t// Create some rectangles inside the svg container\n    var rectangles = svg.selectAll(\"rect\")\n    \t\t\t\t\t\t\t\t\t\t.data([1,2,3,4,5])\n       \t\t\t\t\t\t\t\t\t.enter()\n    \t\t\t\t\t\t\t\t\t\t.append(\"rect\")\n       \t\t\t\t\t\t\t\t\t.attr('x', function(d){\n                          return d + 1\n                        }) \n       \t\t\t\t\t\t\t\t\t.attr('y', function(d){\n                        \treturn d + 2\n                        })\n    \t \t\t\t\t\t\t\t\t\t.attr(\"width\", width)\n    \t \t\t\t\t\t\t\t\t\t.attr(\"height\", height)\n       \t\t\t\t\t\t\t\t\t.style({ fill: \"#196496\"})\n  </script>\n</body>\n", "description": "d3-introduction", "created_at": "2015-11-17T11:21:04Z", "updated_at": "2015-11-17T20:43:15Z", "api": ["d3.random.normal", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "yassineAlouini_fdbca6ea6f4416e6b328"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://cdn.rawgit.com/fabid/d3-heatmap/master/heatmap.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width:100%; height: 100% }\n  </style>\n</head>\n\n<body>\n  <script>\n   var margin = {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      },\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n    var randomX = d3.random.normal(width / 2, 80),\n      randomY = d3.random.normal(height / 2, 80),\n      points = d3.range(1000).map(function() {\n        return [randomX(), randomY()];\n      });\n    console.log(points);\n\t\tvar size = 4;\n    var heatmap = d3.heatmap()\n\t\t\t.std(5)\n    \t.dx(size)\n      .dy(size);\n\n    // the result of the heatmap layout\n    var heatmapData = heatmap(points);\n\n    var color = d3.scale.linear()\n      .domain([0, d3.max(heatmapData, function(d) {\n        return d.v;\n      })])\n      .range([\"white\", \"steelblue\"])\n      .interpolate(d3.interpolateLab);\n\n    var x = d3.scale.identity()\n      .domain([0, width]);\n\n    var y = d3.scale.linear()\n      .domain([0, height])\n      .range([height, 0]);\n    var yinv = d3.scale.linear()\n      .domain([height, 0])\n      .range([height, 0]);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    svg.append(\"g\")\n      .selectAll(\".square\")\n      .data(heatmapData)\n      .enter().append(\"rect\")\n       .attr(\"class\", \"square\")\n      .attr(\"x\", function(d) { return x(d.x); })\n      .attr(\"y\", function(d) { return y(d.y) - yinv(size); })    \n      .attr(\"width\", x(size))\n      .attr(\"height\", yinv(size))\n      .style(\"fill\", function(d) {\n        return color(d.v)\n      })\n      .style(\"stroke\", \"none\");\n  </script>\n</body>\n", "description": "d3-heatmap", "created_at": "2016-03-01T16:18:25Z", "updated_at": "2016-03-02T14:50:07Z", "api": ["d3.random.normal", "d3.range", "d3.heatmap", "d3.scale.linear", "d3.max", "d3.scale.identity", "d3.select"], "readme": "Rectangular binning with [d3-heatmap](https://github.com/fabid/d3-heatmap/blob/master/heatmap.js)\nbased on [d3-hexbin demo](http://bl.ocks.org/xaranke/b956ee7215b7b50bc78a)\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n", "uid": "fabid_0c4cf357ab5ed3e90382"}, {"code": "<!doctype html>\n<html lang=\"ja\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>\u5186\u30b0\u30e9\u30d5</title>\n\t<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n</head>\n<body>\n\t<script>\n\t\tvar dataset = [\n\t\t\t{legend:\"apple\", value:10, color:\"red\"},\n\t\t\t{legend:\"orange\", value:45, color:\"orangered\"},\n\t\t\t{legend:\"banana\", value:25, color:\"yellow\"},\n\t\t\t{legend:\"peach\", value:70, color:\"pink\"},\n\t\t\t{legend:\"grape\", value:20, color:\"purple\"}\n\t\t\t];\n\n\t\tvar width = 960;\n\t\tvar height = 500;\n\t\tvar radius = 200;\n\n\t\tvar svg = d3.select(\"body\").append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n\t\tvar arc = d3.svg.arc()\n\t\t\t\t.outerRadius(radius)\n\t\t\t\t.innerRadius(30);\n\n\t\tvar pie = d3.layout.pie()\n\t\t\t\t.sort(null)\n\t\t\t\t.value(function(d){ return d.value; });\n\n\t\tvar g = svg.selectAll(\".fan\")\n\t\t\t\t.data(pie(dataset))\n\t\t\t\t.enter()\n\t\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"class\", \"fan\")\n\n\t\tg.append(\"path\")\n\t\t\t.attr(\"d\", arc)\n\t\t\t.attr(\"fill\", function(d){ return d.data.color; })\n\t\t\n\t\tg.append(\"text\")\n\t\t\t.attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; })\n\t\t\t.style(\"text-anchor\", \"middle\")\n\t\t\t.text(function(d) { return d.data.legend; });\n\t</script>\n</body>\n</html>", "description": "[D3.js] Pie chart", "created_at": "2014-02-21T13:49:16Z", "updated_at": "2015-08-29T13:56:35Z", "api": ["d3.select", "d3.svg.arc", "d3.layout.pie"], "readme": "", "uid": "hunzy_9134534"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.axis text {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n    \nvar seq = \"CCTGGGTGGGGGACCCGCTGCGGGAGCGCCGAGCTCCCTCTGAGTTCTTACTTCGAAGGCTGTGCTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTCCTGGGTGGGGGACCCGCTGCGGGAGCGCCGAGCTCCCTCTGAGTTCTTACTTCGAAGGCTGTGCTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT\";\n\nvar seqlength = seq.length;\nconsole.log(seqlength);\n\n\nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 860 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.identity()\n    .domain([0, seqlength]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .ticks(seqlength%100)\n    .orient(\"bottom\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(xAxis);\n\nvar myString=\"gene.txt\"  \nvar length=\"myString.length\"  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n</script>", "description": "D3 ruler", "created_at": "2016-02-18T17:06:35Z", "updated_at": "2016-02-18T17:06:36Z", "api": ["d3.scale.identity", "d3.svg.axis", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/Rico3734/'>Rico3734</a>'s block: <a href='http://bl.ocks.org/Rico3734/3a387f8041e1dc31d718'>D3 ruler</a>", "uid": "Rico3734_fa14dff4959ccb0886a9"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n\t<meta name=\"viewport\" content=\"width=320\" />\n\t<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n\t<title>Gauge</title>\n\t<script type=\"text/javascript\" src=\"http://d3js.org/d3.v2.min.js\"></script>\n\t<style>\n\tbody {\n\t\tfont-family:  Helvetica, Arial, sans-serif;\n\t\tmargin: 32px;\n\t}\n\n\t#power-gauge g.arc {\n\t\tfill: steelblue;\n\t}\n\n\t#power-gauge g.pointer {\n\t\tfill: #e85116;\n\t\tstroke: #b64011;\n\t}\n\t\n\t#power-gauge g.label text {\n\t\ttext-anchor: middle;\n\t\tfont-size: 14px;\n\t\tfont-weight: bold;\n\t\tfill: #666;\n\t}\n\t</style>\n</head>\n<body>\n<div id=\"power-gauge\"></div>\n\t\n<script>\nvar gauge = function(container, configuration) {\n\tvar that = {};\n\tvar config = {\n\t\tsize\t\t\t\t\t\t: 200,\n\t\tclipWidth\t\t\t\t\t: 200,\n\t\tclipHeight\t\t\t\t\t: 110,\n\t\tringInset\t\t\t\t\t: 20,\n\t\tringWidth\t\t\t\t\t: 20,\n\t\t\n\t\tpointerWidth\t\t\t\t: 10,\n\t\tpointerTailLength\t\t\t: 5,\n\t\tpointerHeadLengthPercent\t: 0.9,\n\t\t\n\t\tminValue\t\t\t\t\t: 0,\n\t\tmaxValue\t\t\t\t\t: 10,\n\t\t\n\t\tminAngle\t\t\t\t\t: -90,\n\t\tmaxAngle\t\t\t\t\t: 90,\n\t\t\n\t\ttransitionMs\t\t\t\t: 750,\n\t\t\n\t\tmajorTicks\t\t\t\t\t: 5,\n\t\tlabelFormat\t\t\t\t\t: d3.format(',g'),\n\t\tlabelInset\t\t\t\t\t: 10,\n\t\t\n\t\tarcColorFn\t\t\t\t\t: d3.interpolateHsl(d3.rgb('#e8e2ca'), d3.rgb('#3e6c0a'))\n\t};\n\tvar range = undefined;\n\tvar r = undefined;\n\tvar pointerHeadLength = undefined;\n\tvar value = 0;\n\t\n\tvar svg = undefined;\n\tvar arc = undefined;\n\tvar scale = undefined;\n\tvar ticks = undefined;\n\tvar tickData = undefined;\n\tvar pointer = undefined;\n\n\tvar donut = d3.layout.pie();\n\t\n\tfunction deg2rad(deg) {\n\t\treturn deg * Math.PI / 180;\n\t}\n\t\n\tfunction newAngle(d) {\n\t\tvar ratio = scale(d);\n\t\tvar newAngle = config.minAngle + (ratio * range);\n\t\treturn newAngle;\n\t}\n\t\n\tfunction configure(configuration) {\n\t\tvar prop = undefined;\n\t\tfor ( prop in configuration ) {\n\t\t\tconfig[prop] = configuration[prop];\n\t\t}\n\t\t\n\t\trange = config.maxAngle - config.minAngle;\n\t\tr = config.size / 2;\n\t\tpointerHeadLength = Math.round(r * config.pointerHeadLengthPercent);\n\n\t\t// a linear scale that maps domain values to a percent from 0..1\n\t\tscale = d3.scale.linear()\n\t\t\t.range([0,1])\n\t\t\t.domain([config.minValue, config.maxValue]);\n\t\t\t\n\t\tticks = scale.ticks(config.majorTicks);\n\t\ttickData = d3.range(config.majorTicks).map(function() {return 1/config.majorTicks;});\n\t\t\n\t\tarc = d3.svg.arc()\n\t\t\t.innerRadius(r - config.ringWidth - config.ringInset)\n\t\t\t.outerRadius(r - config.ringInset)\n\t\t\t.startAngle(function(d, i) {\n\t\t\t\tvar ratio = d * i;\n\t\t\t\treturn deg2rad(config.minAngle + (ratio * range));\n\t\t\t})\n\t\t\t.endAngle(function(d, i) {\n\t\t\t\tvar ratio = d * (i+1);\n\t\t\t\treturn deg2rad(config.minAngle + (ratio * range));\n\t\t\t});\n\t}\n\tthat.configure = configure;\n\t\n\tfunction centerTranslation() {\n\t\treturn 'translate('+r +','+ r +')';\n\t}\n\t\n\tfunction isRendered() {\n\t\treturn (svg !== undefined);\n\t}\n\tthat.isRendered = isRendered;\n\t\n\tfunction render(newValue) {\n\t\tsvg = d3.select(container)\n\t\t\t.append('svg:svg')\n\t\t\t\t.attr('class', 'gauge')\n\t\t\t\t.attr('width', config.clipWidth)\n\t\t\t\t.attr('height', config.clipHeight);\n\t\t\n\t\tvar centerTx = centerTranslation();\n\t\t\n\t\tvar arcs = svg.append('g')\n\t\t\t\t.attr('class', 'arc')\n\t\t\t\t.attr('transform', centerTx);\n\t\t\n\t\tarcs.selectAll('path')\n\t\t\t\t.data(tickData)\n\t\t\t.enter().append('path')\n\t\t\t\t.attr('fill', function(d, i) {\n\t\t\t\t\treturn config.arcColorFn(d * i);\n\t\t\t\t})\n\t\t\t\t.attr('d', arc);\n\t\t\n\t\tvar lg = svg.append('g')\n\t\t\t\t.attr('class', 'label')\n\t\t\t\t.attr('transform', centerTx);\n\t\tlg.selectAll('text')\n\t\t\t\t.data(ticks)\n\t\t\t.enter().append('text')\n\t\t\t\t.attr('transform', function(d) {\n\t\t\t\t\tvar ratio = scale(d);\n\t\t\t\t\tvar newAngle = config.minAngle + (ratio * range);\n\t\t\t\t\treturn 'rotate(' +newAngle +') translate(0,' +(config.labelInset - r) +')';\n\t\t\t\t})\n\t\t\t\t.text(config.labelFormat);\n\n\t\tvar lineData = [ [config.pointerWidth / 2, 0], \n\t\t\t\t\t\t[0, -pointerHeadLength],\n\t\t\t\t\t\t[-(config.pointerWidth / 2), 0],\n\t\t\t\t\t\t[0, config.pointerTailLength],\n\t\t\t\t\t\t[config.pointerWidth / 2, 0] ];\n\t\tvar pointerLine = d3.svg.line().interpolate('monotone');\n\t\tvar pg = svg.append('g').data([lineData])\n\t\t\t\t.attr('class', 'pointer')\n\t\t\t\t.attr('transform', centerTx);\n\t\t\t\t\n\t\tpointer = pg.append('path')\n\t\t\t.attr('d', pointerLine/*function(d) { return pointerLine(d) +'Z';}*/ )\n\t\t\t.attr('transform', 'rotate(' +config.minAngle +')');\n\t\t\t\n\t\tupdate(newValue === undefined ? 0 : newValue);\n\t}\n\tthat.render = render;\n\t\n\tfunction update(newValue, newConfiguration) {\n\t\tif ( newConfiguration  !== undefined) {\n\t\t\tconfigure(newConfiguration);\n\t\t}\n\t\tvar ratio = scale(newValue);\n\t\tvar newAngle = config.minAngle + (ratio * range);\n\t\tpointer.transition()\n\t\t\t.duration(config.transitionMs)\n\t\t\t.ease('elastic')\n\t\t\t.attr('transform', 'rotate(' +newAngle +')');\n\t}\n\tthat.update = update;\n\n\tconfigure(configuration);\n\t\n\treturn that;\n};\n</script>\n\n<script>\nfunction onDocumentReady() {\n\tvar powerGauge = gauge('#power-gauge', {\n\t\tsize: 300,\n\t\tclipWidth: 300,\n\t\tclipHeight: 300,\n\t\tringWidth: 60,\n\t\tmaxValue: 10,\n\t\ttransitionMs: 4000,\n\t});\n\tpowerGauge.render();\n\t\n\tfunction updateReadings() {\n\t\t// just pump in random data here...\n\t\tpowerGauge.update(Math.random() * 10);\n\t}\n\t\n\t// every few seconds update reading values\n\tupdateReadings();\n\tsetInterval(function() {\n\t\tupdateReadings();\n\t}, 5 * 1000);\n}\n\nif ( !window.isLoaded ) {\n\twindow.addEventListener(\"load\", function() {\n\t\tonDocumentReady();\n\t}, false);\n} else {\n\tonDocumentReady();\n}\n</script>\n</body>\n</html>\n", "description": "d3 gauge", "created_at": "2012-07-30T00:03:05Z", "updated_at": "2016-05-02T11:23:14Z", "api": ["d3.format", "d3.interpolateHsl", "d3.rgb", "d3.layout.pie", "d3.scale.linear", "d3.range", "d3.svg.arc", "d3.select", "d3.svg.line"], "readme": "", "uid": "msqr_3202712"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>D3 Visualizing Rotation</title>\n  <meta charset=\"utf-8\" />\n</head>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"legend.js\"></script>\n<style>\n  body, html {\n    width:100%;\n    height:100%;\n  }\n  #vizcontainer {\n    width:100%;\n    height:100%;\n  }\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n<body onload=\"legendDemo()\">\n\n<div id=\"vizcontainer\">\n<svg></svg>\n</div>\n  <footer>\n<script>\n  function legendDemo() {\n\n  sampleNumerical = [1,2.5,5,10,20];\n  sampleThreshold=d3.scale.threshold().domain(sampleNumerical).range(colorbrewer.Reds[5]);\n  horizontalLegend = d3.svg.legend().units(\"Miles\").cellWidth(80).cellHeight(25).inputScale(sampleThreshold).cellStepping(100);\n\n  d3.select(\"svg\").append(\"g\").attr(\"transform\", \"translate(50,70)\").attr(\"class\", \"legend\").call(horizontalLegend);\n\n  sampleCategoricalData = [\"Something\",\"Something Else\", \"Another\", \"This\", \"That\", \"Etc\"]\n  sampleOrdinal = d3.scale.category20().domain(sampleCategoricalData);\n\n  verticalLegend = d3.svg.legend().labelFormat(\"none\").cellPadding(5).orientation(\"vertical\").units(\"Things in a List\").cellWidth(25).cellHeight(18).inputScale(sampleOrdinal).cellStepping(10);\n\n  d3.select(\"svg\").append(\"g\").attr(\"transform\", \"translate(50,140)\").attr(\"class\", \"legend\").call(verticalLegend);\n\n  }\n</script>\n  </footer>\n</body>\n</html>", "description": "D3-svg-legend (test)", "created_at": "2014-08-26T20:30:42Z", "updated_at": "2015-08-29T14:05:45Z", "api": ["d3.scale.threshold", "d3.svg.legend", "d3.select", "d3.scale.category20", "d3.format"], "readme": "[d3.svg.legend](https://github.com/emeeks/d3-svg-legend) provides for a simple legend that can be displayed horizontally or vertically and accepts a few different [d3 scale](https://github.com/mbostock/d3/wiki/Scales) types.", "uid": "hugolpz_09c837f43dc4b3962be9"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Basic d3.carto Map</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    fill-opacity: 1;\n    fill: #4682B4;\n    stroke-opacity: 1;\n    stroke: black;\n    stroke-width: 2px;\n  }\n\n</style>\n<script>\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    countryLayer = d3.carto.layer.geojson();\n    \n    countryLayer.path(\"world.geojson\")\n    .label(\"Countries\")\n    .renderMode(\"svg\")\n    .cssClass(\"country\")\n    .clickableFeatures(true);\n\n    map.addCartoLayer(countryLayer);\n    map.setScale(2);\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Simple Map - d3.carto", "created_at": "2014-09-18T22:21:22Z", "updated_at": "2015-08-29T14:06:38Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.geojson"], "readme": "A simple map example created with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** that loads a single geoJSON layer.\n", "uid": "emeeks_b60d4c31f5802a120456"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.land {\n  fill: #222;\n}\n\n.county-boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.state-boundary {\n  fill: none;\n  stroke: #fff;\n}\n\n.border {\n  stroke: #000;\n  fill: none;\n\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3-composite-projections/0.3.5/conicConformalFrance-proj.min.js\"></script>\n<script>\n\nvar width = 900,\n    height = 500;\n\nvar projection = d3.geo.conicConformalFrance();\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"https://cdn.rawgit.com/rveciana/5919944/raw/b1f826319231c3e06d6e8548bc947ca2c29dc9e8/france.json\", function(error, regions) {\n  var land = topojson.feature(regions, regions.objects.regions);\n\n    svg.selectAll(\"path\")\n      .data(land.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\",\"#000\")\n      .style(\"stroke-width\",\".5px\")\n      .style(\"fill\",\"#aca\")\n      .on(\"mouseover\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"red\");\n        })\n      .on(\"mouseout\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"#aca\");\n        });\n\n  svg\n    .append(\"path\")\n      .style(\"fill\",\"none\")\n      .style(\"stroke\",\"#000\")\n      .attr(\"d\", projection.getCompositionBorders());\n\n\n});\n\n\n</script>\n", "description": "d3-composite-projections conicConformalFrance", "created_at": "2015-05-11T15:19:46Z", "updated_at": "2016-03-01T10:58:11Z", "api": ["d3.geo.conicConformalFrance", "d3.geo.path", "d3.select", "d3.json"], "readme": "This file shows how to use the *conicConformalFrance* projection from [d3-composite-projections](http://rveciana.github.io/d3-composite-projections/).", "uid": "rveciana_02eb5b83848e0b06fa8e"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.land {\n  fill: #222;\n}\n\n.county-boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.state-boundary {\n  fill: none;\n  stroke: #fff;\n}\n\n.border {\n  stroke: #000;\n  fill: none;\n\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3-composite-projections/0.3.5/conicEquidistantJapan.min.js\"></script>\n<script>\n\nvar width = 700,\n    height = 500;\n\n    var projection = d3.geo.conicEquidistantJapan();\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"https://cdn.rawgit.com/rveciana/5919944/raw/a3d0f29d851893e15dcf6194997453086c408fd3/japan.json\", function(error, regions) {\n  var land = topojson.feature(regions, regions.objects.japan);\n\n    svg.selectAll(\"path\")\n      .data(land.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\",\"#000\")\n      .style(\"stroke-width\",\".5px\")\n      .style(\"fill\",\"#aca\")\n      .on(\"mouseover\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"red\");\n        })\n      .on(\"mouseout\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"#aca\");\n        });\n\n  svg\n    .append(\"path\")\n      .style(\"fill\",\"none\")\n      .style(\"stroke\",\"#000\")\n      .attr(\"d\", projection.getCompositionBorders());\n\n\n});\n\n\n</script>\n", "description": "d3-composite-projections conicEquidistantJapan", "created_at": "2015-12-18T18:15:33Z", "updated_at": "2016-03-01T10:56:07Z", "api": ["d3.geo.conicEquidistantJapan", "d3.geo.path", "d3.select", "d3.json"], "readme": "This file shows how to use the *conicEquidistantJapan* projection from [d3-composite-projections](http://rveciana.github.io/d3-composite-projections/).", "uid": "rveciana_72987a139a9886ed6a87"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  margin: 0;\n}\n\n.map {\n  position: relative;\n  overflow: hidden;\n}\n\n.layer {\n  position: absolute;\n}\n\n.tile {\n  pointer-events: none;\n  position: absolute;\n  width: 256px;\n  height: 256px;\n}\n\n.info {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"tile.js\"></script>\n<script>\n\nvar width = Math.max(960, window.innerWidth),\n    height = Math.max(500, window.innerHeight),\n    prefix = prefixMatch([\"webkit\", \"ms\", \"Moz\", \"O\"]);\n\nvar tile = d3.geo.tile()\n    .size([width, height])\n    .overflow([true, false]);\n\nvar projection = d3.geo.mercator();\n\nvar zoom = d3.behavior.zoom()\n    .scale(1 << 8)\n    .scaleExtent([1 << 8, 1 << 23])\n    .translate([width / 2, height / 2])\n    .on(\"zoom\", zoomed);\n\nvar map = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"map\")\n    .style(\"width\", width + \"px\")\n    .style(\"height\", height + \"px\")\n    .call(zoom)\n    .on(\"mousemove\", mousemoved);\n\nvar layer = map.append(\"div\")\n    .attr(\"class\", \"layer\");\n\nvar info = map.append(\"div\")\n    .attr(\"class\", \"info\");\n\nzoomed();\n\nfunction zoomed() {\n  var tiles = tile\n      .scale(zoom.scale())\n      .translate(zoom.translate())\n      ();\n\n  projection\n      .scale(zoom.scale() / 2 / Math.PI)\n      .translate(zoom.translate());\n\n  var image = layer\n      .style(prefix + \"transform\", matrix3d(tiles.scale, tiles.translate))\n    .selectAll(\".tile\")\n      .data(tiles, function(d) { return d; });\n\n  image.exit()\n      .remove();\n\n  image.enter().append(\"img\")\n      .attr(\"class\", \"tile\")\n      .attr(\"src\", function(d) {\n        var z = d[2],\n            k = 1 << z,\n            x = (d[0] % k + k) % k,\n            y = d[1];\n        return \"http://\" + [\"a\", \"b\", \"c\", \"d\"][Math.random() * 4 | 0] + \".tiles.mapbox.com/v3/examples.map-i86nkdio/\" + z + \"/\" + x + \"/\" + y + \".png\";\n      })\n      .style(\"left\", function(d) { return (d[0] << 8) + \"px\"; })\n      .style(\"top\", function(d) { return (d[1] << 8) + \"px\"; });\n}\n\nfunction mousemoved() {\n  info.text(formatLocation(projection.invert(d3.mouse(this)), zoom.scale()));\n}\n\nfunction matrix3d(scale, translate) {\n  var k = scale / 256, r = scale % 1 ? Number : Math.round;\n  return \"matrix3d(\" + [k, 0, 0, 0, 0, k, 0, 0, 0, 0, k, 0, r(translate[0] * scale), r(translate[1] * scale), 0, 1 ] + \")\";\n}\n\nfunction prefixMatch(p) {\n  var i = -1, n = p.length, s = document.body.style;\n  while (++i < n) if (p[i] + \"Transform\" in s) return \"-\" + p[i].toLowerCase() + \"-\";\n  return \"\";\n}\n\nfunction formatLocation(p, k) {\n  var format = d3.format(\".\" + Math.floor(Math.log(k) / 2 - 2) + \"f\");\n  return (p[1] < 0 ? format(-p[1]) + \"\u00b0S\" : format(p[1]) + \"\u00b0N\") + \" \"\n       + (p[0] < 0 ? format(-p[0]) + \"\u00b0W\" : format(p[0]) + \"\u00b0E\");\n}\n\n</script>\n", "description": "Wrapped d3.geo.tile", "created_at": "2014-08-06T12:14:25Z", "updated_at": "2015-08-29T14:04:56Z", "api": ["d3.geo.tile", "d3.geo.mercator", "d3.behavior.zoom", "d3.select", "d3.mouse", "d3.format"], "readme": "A test for wrapping using the [d3.geo.tile](https://github.com/d3/d3-plugins/tree/master/geo/tile) plugin.\n\nBased on [Mike Bostock\u2019s example](http://bl.ocks.org/mbostock/4132797).\n", "uid": "jasondavies_0051a06829e72b423ba9"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - clustering</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\ncircle {\n    fill: black;\n    stroke: red;\n}\n\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    \n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\")\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(2)\n    .x(\"x\")\n    .y(\"y\")\n    .cluster(true);\n    \n    map.addCartoLayer(tileLayer).addCartoLayer(csvLayer);\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Quadtree clustering - d3.carto.map", "created_at": "2014-07-21T06:36:01Z", "updated_at": "2015-08-29T14:04:17Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer", "d3.carto.layer.csv"], "readme": "Clustering in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nIf you set the .cluster() property of a cartoLayer to true, it will cluster bsaed on a precomputed quadtree.\n\nThis is still very early on but it should get better.", "uid": "emeeks_7d5925cb7d9721c60360"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - CartoDB Layers</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    fill-opacity: .25;\n    fill: #4682B4;\n    stroke-opacity: 1;\n    stroke: black;\n    stroke-width: 2px;\n  }\n\n  .country-gray {\n    opacity: .25;\n    fill: lightgray;\n    stroke: lightgray;\n    stroke-width: 1;\n  }\n\n  .country-red {\n    fill-opacity: .25;\n    fill: yellow;\n    stroke: gold;\n    stroke-opacity: .5;\n    stroke-width: 1;\n  }\n  \n  .capital {\n    fill: white;\n    stroke: black;\n    stroke-width: 2px;\n  }\n</style>\n<script>\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    terrainLayer = d3.carto.layer.tile();\n    \n    terrainLayer\n    .tileType(\"cartodb\")\n    .path(\"dark_nolabels\")\n    .label(\"Terrain\");\n\n    countryLayer = d3.carto.layer.topojson();\n    \n    countryLayer.path(\"world.topojson\")\n    .label(\"Countries\")\n    .renderMode(\"canvas\")\n    .specificFeature(\"world\")\n    .cssClass(\"country-gray\")\n    .on(\"load\", showHighGDP)\n    .visibility(false);\n    \n    capitalLayer = d3.carto.layer.csv();\n    capitalLayer\n    .path(\"worldcapitals.csv\")\n    .label(\"Capitals\")\n    .cssClass(\"capital\")\n    .renderMode(\"svg\")\n    .markerSize(3)\n    .x(\"x\")\n    .y(\"y\")\n    .clickableFeatures(true)\n    .on(\"load\", loadXYArray);\n\n    map.addCartoLayer(terrainLayer)\n    map.addCartoLayer(countryLayer)\n    .addCartoLayer(capitalLayer);\n    map.setScale(2);\n    \n    function loadXYArray() {\n    d3.csv(\"worldcapitals.csv\", highPopCapitals);\n    \n    function highPopCapitals(data) {\n      highPop = data.filter(function(d) {return d.population > 3000000});\n      \n      highPopCapitals = d3.carto.layer.xyArray();\n      \n      highPopCapitals\n      .features(highPop)\n      .label(\"High Population Capitals\")\n      .cssClass(\"capital\")\n      .renderMode(\"svg\")\n      .markerSize(10)\n      .x(\"x\")\n      .y(\"y\")\n      .clickableFeatures(true);\n      \n      map.addCartoLayer(highPopCapitals);\n    }\n    }\n    \n    function showHighGDP() {\n      highGDPCountries = countryLayer.features().filter(function(d) {return d.properties.gdp > 1000});\n      \n      highGDPLayer = d3.carto.layer.featureArray();\n      \n      highGDPLayer\n      .features(highGDPCountries)\n    .label(\"High GDP\")\n    .renderMode(\"svg\")\n    .cssClass(\"country-red\")\n    .clickableFeatures(true);\n    \n    map.addCartoLayer(highGDPLayer)\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/topojson/1.6.19/topojson.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "d3.carto - CartoDB layers", "created_at": "2015-03-15T03:52:13Z", "updated_at": "2016-03-17T02:14:13Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.csv", "d3.carto.layer.xyArray", "d3.carto.layer.featureArray"], "readme": "A map example created with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** that loads **[CartoDB](http://cartodb.com/)** tile layers with the **.tileType(\"cartodb\")**. These layers will reproject just like Stamen and Mapbox layers in projection and globe mode.", "uid": "emeeks_a950399780ca90589f59"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - CartoDB Layers</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    fill-opacity: .25;\n    fill: #4682B4;\n    stroke-opacity: 1;\n    stroke: black;\n    stroke-width: 2px;\n  }\n\n  .country-gray {\n    opacity: .25;\n    fill: lightgray;\n    stroke: lightgray;\n    stroke-width: 1;\n  }\n\n  .country-red {\n    fill-opacity: .25;\n    fill: yellow;\n    stroke: gold;\n    stroke-opacity: .5;\n    stroke-width: 1;\n  }\n  \n  .capital {\n    fill: white;\n    stroke: black;\n    stroke-width: 2px;\n  }\n</style>\n<script>\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    terrainLayer = d3.carto.layer.tile();\n    \n    terrainLayer\n    .tileType(\"cartodb\")\n    .path(\"dark_nolabels\")\n    .label(\"Terrain\");\n\n    countryLayer = d3.carto.layer.topojson();\n    \n    countryLayer.path(\"world.topojson\")\n    .label(\"Countries\")\n    .renderMode(\"canvas\")\n    .specificFeature(\"world\")\n    .cssClass(\"country-gray\")\n    .on(\"load\", showHighGDP)\n    .visibility(false);\n    \n    capitalLayer = d3.carto.layer.csv();\n    capitalLayer\n    .path(\"worldcapitals.csv\")\n    .label(\"Capitals\")\n    .cssClass(\"capital\")\n    .renderMode(\"svg\")\n    .markerSize(3)\n    .x(\"x\")\n    .y(\"y\")\n    .clickableFeatures(true)\n    .on(\"load\", loadXYArray);\n\n    map.addCartoLayer(terrainLayer)\n    map.addCartoLayer(countryLayer)\n    .addCartoLayer(capitalLayer);\n    map.setScale(2);\n    \n    function loadXYArray() {\n    d3.csv(\"worldcapitals.csv\", highPopCapitals);\n    \n    function highPopCapitals(data) {\n      highPop = data.filter(function(d) {return d.population > 3000000});\n      \n      highPopCapitals = d3.carto.layer.xyArray();\n      \n      highPopCapitals\n      .features(highPop)\n      .label(\"High Population Capitals\")\n      .cssClass(\"capital\")\n      .renderMode(\"svg\")\n      .markerSize(10)\n      .x(\"x\")\n      .y(\"y\")\n      .clickableFeatures(true);\n      \n      map.addCartoLayer(highPopCapitals);\n    }\n    }\n    \n    function showHighGDP() {\n      highGDPCountries = countryLayer.features().filter(function(d) {return d.properties.gdp > 1000});\n      \n      highGDPLayer = d3.carto.layer.featureArray();\n      \n      highGDPLayer\n      .features(highGDPCountries)\n    .label(\"High GDP\")\n    .renderMode(\"svg\")\n    .cssClass(\"country-red\")\n    .clickableFeatures(true);\n    \n    map.addCartoLayer(highGDPLayer)\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "d3.carto - CartoDB layers", "created_at": "2015-09-08T07:51:38Z", "updated_at": "2015-09-08T07:51:38Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.csv", "d3.carto.layer.xyArray", "d3.carto.layer.featureArray"], "readme": "A map example created with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** that loads **[CartoDB](http://cartodb.com/)** tile layers with the **.tileType(\"cartodb\")**. These layers will reproject just like Stamen and Mapbox layers in projection and globe mode.", "uid": "renecnielsen_4a7d0a3a159ae7d0bdc3"}, {"code": "<html>\n<head>\n  <title>d3.svg.ribbon Example</title>\n  <meta charset=\"utf-8\" />\n<script src=\"http://d3js.org/d3.v3.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"d3.svg.ribbon.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    height: 1000px;\n    width: 1000px;\n  }\n\n</style>\n<body>\n\n<div id=\"viz\">\n  <svg>\n  </svg>\n</div>\n</body>\n  <footer>\n\n<script>\n\nvar points = [{x: 20, y:20, t: 10},{x:200,y:20, t: 5},{x:20,y:200, t: 15},{x:200,y:200, t: 2}];\n\nribbon = d3.svg.ribbon()\n  .x(function(d) {return d.x})\n  .y(function(d) {return d.y})\n  .r(function(d) {return d.t});\n\ndrag = d3.behavior.drag().on(\"drag\", function (d) {\n  d.x = d3.event.x;\n  d.y = d3.event.y;\n  redraw();\n})\n\nd3.select(\"svg\")\n.append(\"path\")\n.style(\"fill\", \"lightblue\")\n.style(\"stroke\", \"blue\")\n.style(\"stroke-opacity\", 0.75)\n.style(\"stroke-width\", \"2px\")\n.attr(\"d\", ribbon(points))\n\nd3.select(\"svg\")\n.selectAll(\"circle\")\n.data(points)\n.enter()\n.append(\"circle\")\n.attr(\"r\", 3)\n.style(\"fill\", \"lightgreen\")\n.style(\"stroke\", \"blue\")\n.style(\"stroke-width\", \"2px\")\n.attr(\"cx\", function (d) {return d.x})\n.attr(\"cy\", function (d) {return d.y})\n.attr(\"r\", function (d) {return d.t})\n.style(\"stroke-opacity\", 0.75)\n.call(drag);\n\nfunction redraw() {\n  d3.selectAll(\"circle\")\n    .attr(\"cx\", function (d) {return d.x})\n    .attr(\"cy\", function (d) {return d.y});\n\n  d3.select(\"path\")\n    .attr(\"d\", ribbon(points));\n}\n\n</script>\n  </footer>\n\n</html>\n", "description": "d3.svg.ribbon example", "created_at": "2015-09-02T03:29:53Z", "updated_at": "2015-09-02T03:29:53Z", "api": ["d3.svg.line", "d3.svg.ribbon", "d3.behavior.drag", "d3.select", "d3.selectAll"], "readme": "An example of [d3.svg.ribbon](https://github.com/emeeks/d3.svg.ribbon).\n\nDrag the circles to see the underlying single `svg:path` element re-interpolated based on the changing position of the points and their radii that are used to generate it. This is a different way of generating areas than `d3.svg.area` and might prove more suitable for some applications.\n\nforked from <a href='http://bl.ocks.org/emeeks/'>emeeks</a>'s block: <a href='http://bl.ocks.org/emeeks/a1e48992be56681e3f93'>d3.svg.ribbon example</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8829aa45703c893e5636'>d3.svg.ribbon example</a>", "uid": "georgemurphy_2ab077a1a795efeab2c8"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.land {\n  fill: #222;\n}\n\n.county-boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.state-boundary {\n  fill: none;\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3-composite-projections/0.3.5/albersUsa-proj.min.js\"></script>\n\n<script>\n\nvar width = 960,\n    height = 500;\n\nvar projection = d3.geo.albersUsa()\n    .scale(1000)\n    .translate([width / 2, height / 2]);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"/d/4090846/us.json\", function(error, us) {\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(us, us.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(us, us.objects.counties, function(a, b) { return a !== b && !(a.id / 1000 ^ b.id / 1000); }))\n      .attr(\"class\", \"county-boundary\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"state-boundary\")\n      .attr(\"d\", path);\n\n  svg\n    .append(\"path\")\n      .style(\"fill\",\"none\")\n      .style(\"stroke\",\"#000\")\n      .attr(\"d\", projection.getCompositionBorders());\n\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n</script>\n", "description": "d3-composite-projections albersUsa", "created_at": "2015-05-11T15:08:23Z", "updated_at": "2016-03-01T10:59:14Z", "api": ["d3.geo.albersUsa", "d3.geo.path", "d3.select", "d3.json"], "readme": "This file shows how to use the *albersUsa* projection from [d3-composite-projections](http://rveciana.github.io/d3-composite-projections/). In this case, the example (and projection) [is copied directly from the d3 projection](http://bl.ocks.org/mbostock/4090848), but adding the borders a the composed zones.", "uid": "rveciana_170a76b8dc1f9cfd8b2d"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Label Features</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\n    zoomMap = d3.carto.map();\n\n    d3.select(\"#map\").call(zoomMap);\n\n    zoomMap.setScale(2)\n\n    tileLayer = d3.carto.layer.tile();\n    tileLayer\n    .path(\"elijahmeeks.map-ktkeam22\")\n    .label(\"Terrain\");\n    \n    zoomMap.addCartoLayer(tileLayer);\n\n    d3.json(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\", function(error,data) {\n\n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(data.features)\n    .label(\"Countries\")\n    .cssClass(\"invisible\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true)\n    .on(\"load\", clickToZoom);\n    \n    function clickToZoom() {\n      d3.select(\"#map\").selectAll(\"path.countryborders\").on(\"click\", function (d) {\n\n        var path = d3.geo.path().projection(zoomMap.projection());\n        zoomMap.zoomTo(path.bounds(d),\"scaled\",.95,2000);\n\n      })\n    }\n\n      labelPoints = [];\n\n      for (x in data.features) {\n        var center = d3.geo.centroid(data.features[x]);\n        var newPoint = {label: data.features[x].properties.name, x: center[0], y: center[1]}\n        labelPoints.push(newPoint)\n      }\n      \n    xyLayer = d3.carto.layer.xyArray();\n    xyLayer\n    .features(data.features)\n    .label(\"Labels\")\n    .cssClass(\"countrylabel\")\n    .renderMode(\"svg\")\n    .x(\"x\")\n    .y(\"y\")\n    .markerSize(10)\n    .clickableFeatures(true);\n    \n    zoomMap.addCartoLayer(xyLayer)\n      \n      d3.selectAll(\"g.countrylabel\").append(\"text\")\n      .text(function(d) {return d.label});\n      d3.selectAll(\"circle.countrylabel\").remove();\n      zoomMap.refresh();\n\n\n    })\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "addXYLayer - d3.carto.map", "created_at": "2014-07-12T21:07:14Z", "updated_at": "2015-08-29T14:03:54Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.json", "d3.carto.layer.featureArray", "d3.geo.path", "d3.geo.centroid", "d3.carto.layer.xyArray", "d3.selectAll"], "readme": "Labeling features using addXYLayer **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nYou can add any array of objects with XY data by using d3.carto.layer.xyArray(). Here an array of centroid objects is made for the paths and then added to the map to display labels. Notice that the paths are added using addFeatureLayer because using addTopoJSON would load asynchronously and not have the data available to make the array for addXYLayer.\n", "uid": "emeeks_f2fea17ba3ec3cd66f60"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Changing Point Markers</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    map.addTileLayer(\"examples.map-zgrqqx0w\", \"Base\", \"mapbox\", false);\n    map.centerOn([-0.1275,51.507],\"latlong\",5000);\n    map.addTopoJSONLayer(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\",\"TopoJSON\",\"roads\",\"svg\",\"all\");\n    map.addCSVLayer(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\",\"CSV Points\",\"pinkcircle\",2,\"svg\",\"x\",\"y\");\n    \n    d3.select(\"#map\").append(\"button\").attr(\"class\", \"marker\").html(\"Change Markers\").on(\"click\", changeMarkers);\n    \n    function changeMarkers() {\n          csvLayer.g().selectAll(\"circle\").remove();\n\n          csvLayer.g().selectAll(\"g.marker\")\n            .append(\"rect\")\n            .attr(\"class\", \"bluesquare\")\n            .attr(\"height\", 5)\n            .attr(\"width\",5)\n            .attr(\"x\",-2.5)\n            .attr(\"y\",-2.5);\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Changing Markers - d3.carto.map", "created_at": "2014-07-12T20:51:24Z", "updated_at": "2015-08-29T14:03:54Z", "api": ["d3.carto.map", "d3.select"], "readme": "Changing markers with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nEach feature or point is added inside of a g element. You can then add whatever you want to that g element to create the symbols you want for your points. To do so, though, you need to use a different datum for the appended element. This doesn't seem like a good solution and will probably lead to the creation of a d3.carto.marker or equivalent at some point.", "uid": "emeeks_7bce3b67dffd0fe85ec2"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - globe mode</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    map.mode(\"globe\");\n\n    map.refresh();\n\n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base Layer\")\n    \n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"Canvas Features\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"canvas\")\n    .on(\"load\", selectFeatures);\n    \n    map.addCartoLayer(tileLayer).addCartoLayer(geojsonLayer);\n    \n      function selectFeatures() {\n\n    fNamedCountries = geojsonLayer.features().filter(function (d) {return d.properties.name.length < 6});\n\n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(fNamedCountries)\n    .label(\"SVG Features\")\n    .cssClass(\"francelike\")\n    .renderMode(\"svg\");\n\n      map.addCartoLayer(featureLayer);\n\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "globe mode - d3.carto.map", "created_at": "2014-07-26T01:40:38Z", "updated_at": "2016-01-13T20:02:06Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer", "d3.carto.layer.geojson", "d3.carto.layer.featureArray"], "readme": "A globe using orthographic projection with raster tiles from **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nIf you set map.mode(\"globe\") it will overwrite the projection with an orthographic projection and modify panning to allow for rotating a globe along two axes.", "uid": "emeeks_2792df20a4b490c3e3ff"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Changing Markers - d3.carto</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .reproject {\n    position: absolute;\n    z-index: 99;\n    left: 50px;\n    top: 250px;\n  }\n  \n\n  .metro {\n    fill: rgba(255,0,255,.5);\n    stroke: darkred;\n    stroke-width: 1\n  }\n  \n  .markerButton {\n    position: fixed;\n    top: 20px;\n    cursor: pointer;\n    z-index: 99;\n  }\n  \n</style>\n<script>\n  \n  function pngMarker() {\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    d3.selectAll(\"g.marker\").append(\"image\").attr(\"xlink:href\", \"icon_2330.png\")\n    .attr(\"height\", 20).attr(\"width\", 20)\n    .attr(\"x\", -10).attr(\"y\", -10)\n  }\n  \n  function rectangleMarker() {\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    d3.selectAll(\"g.marker\").append(\"rect\").attr(\"height\", 10).attr(\"width\", 10)\n    .attr(\"x\", -5)\n    .attr(\"y\", -5)\n    .style(\"fill\", \"yellow\")\n    .style(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"1px\")\n  }\n  \n  function circleMarker() {\n    var sizeScale = d3.scale.linear().domain([0,100,2000]).range([2,10,20]).clamp(true);\n    var randomDatapoint = \"r\" + Math.ceil(Math.random() * 7);\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    d3.selectAll(\"g.marker\").append(\"circle\")\n    .attr(\"class\", \"metro\")\n    .attr(\"r\", function(d) {return sizeScale(d[randomDatapoint])})\n  }\n  \n  function svgMarker() {\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    d3.html(\"icon_2330.svg\", loadSVG);\n     function loadSVG(svgData) {\n    d3.select(svgData).selectAll(\"path\").each(function(d) {\n      var that = this;\n        d3.selectAll(\"g.marker\").each(\n          function() {\n          d3.select(this).node().appendChild(that.cloneNode(true));\n          }\n          )\n    })\n    d3.selectAll(\"g.marker\").select(\"path\");\n     }\n  }\n  \n  function pieMarker() {\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    var pieChart = d3.layout.pie();\n    var newArc = d3.svg.arc().outerRadius(10);\n    var set3 = [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\"];\n\n    pieChart.value(function(d) {return d});\n    d3.selectAll(\"g.marker\").each(function(d) {\n      var pieData = d3.values(d).splice(3,7);\n      var pieChart = d3.layout.pie();\n      \n      d3.select(this).append(\"circle\").attr(\"r\",11).style(\"fill\", \"black\").style(\"stroke\",\"black\")\n\n      d3.select(this).selectAll(\"path\").data(pieChart(pieData)).enter().append(\"path\").attr(\"d\", function(d) {return newArc(d)})\n      .style(\"fill\", function(d,i) {return set3[i]})\n      .style(\"stroke\", function(d,i) {return set3[i]})\n      .style(\"stroke-width\", \"1px\")\n    })\n  }\n\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    map.centerOn([-99,39],\"latlong\");\n    map.setScale(4);\n\n    map.refresh();\n\n    wcLayer = d3.carto.layer.tile();\n    wcLayer\n    .tileType(\"stamen\")\n    .path(\"watercolor\")\n    .label(\"Watercolor\")\n    .visibility(true)\n\n    cityLayer = d3.carto.layer.csv();\n    cityLayer\n    .path(\"cities.csv\")\n    .label(\"Metro Areas\")\n    .cssClass(\"metro\")\n    .renderMode(\"svg\")\n    .x(\"x\")\n    .y(\"y\")\n    .clickableFeatures(true)\n    .on(\"load\", function(){console.log(cityLayer.dataset())});\n\n    map.addCartoLayer(wcLayer).addCartoLayer(cityLayer);\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\">\n  <button style=\"left: 140px;\" class=\"markerButton\" onclick=\"rectangleMarker();\">Rectangle Marker</button>\n  <button style=\"left: 250px;\" class=\"markerButton\" onclick=\"pngMarker();\">Image Marker</button>\n  <button style=\"left: 340px;\" class=\"markerButton\" onclick=\"circleMarker();\">Circle Marker</button>\n  <button style=\"left: 428px;\" class=\"markerButton\" onclick=\"svgMarker();\">SVG Marker</button>\n  <button style=\"top:50px; left: 140px;\" class=\"markerButton\" onclick=\"pieMarker();\">Pie Marker</button>\n</div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>\n", "description": "Changing Markers - d3.carto", "created_at": "2014-09-03T21:03:35Z", "updated_at": "2015-08-29T14:06:03Z", "api": ["d3.selectAll", "d3.scale.linear", "d3.html", "d3.select", "d3.layout.pie", "d3.svg.arc", "d3.values", "d3.carto.map", "d3.carto.layer.tile", "d3.carto.layer.csv"], "readme": "Changing markers with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nIn this example, the buttons show different markers used for the points, either simple SVG shapes, like the rectangle marker, or scaled circles, or images, or SVG paths either from an icon or from another D3 layout (a pie chart in this case). The Circle Marker button randomly selects one of several data attributes for each point and sizes the circle by that attribute, whereas the pie marker button creates a pie chart based off those attributes.\n\nAny point layer added with d3.carto.layer.csv or d3.carto.layer.xyArray automatically creates SVG circle elements for each point. These reside in a g.marker that you can access and replace the contents of in the same way you would with any other d3 data visualization. In this example I use d3.selectAll because there's only one points layer, but each layer has a .g() function that gives you access to the parent g element of that layer, which you can then use to select some or all of the child g.marker elements of that specific layer and change, update or replace content.\n", "uid": "emeeks_f8c0220c54ec8347ea95"}, {"code": "<!DOCTYPE html>\n<html>\n<meta charset=\"utf-8\">\n\n<!-- Example based on http://bl.ocks.org/mbostock/3887118 -->\n<!-- Tooltip example from http://www.d3noob.org/2013/01/adding-tooltips-to-d3js-graph.html -->\n\n<style>\nbody {\n  font: 11px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.dot {\n  stroke: #000;\n}\n\n.tooltip {\n  position: absolute;\n  width: 200px;\n  height: 28px;\n  pointer-events: none;\n}\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n/* \n * value accessor - returns the value to encode for a given data object.\n * scale - maps value to a visual display encoding, such as a pixel position.\n * map function - maps from data value to display value\n * axis - sets up axis\n */ \n\n// setup x \nvar xValue = function(d) { return d.Calories;}, // data -> value\n    xScale = d3.scale.linear().range([0, width]), // value -> display\n    xMap = function(d) { return xScale(xValue(d));}, // data -> display\n    xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\n// setup y\nvar yValue = function(d) { return d[\"Protein (g)\"];}, // data -> value\n    yScale = d3.scale.linear().range([height, 0]), // value -> display\n    yMap = function(d) { return yScale(yValue(d));}, // data -> display\n    yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\n// setup fill color\nvar cValue = function(d) { return d.Manufacturer;},\n    color = d3.scale.category10();\n\n// add the graph canvas to the body of the webpage\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// add the tooltip area to the webpage\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n// load data\nd3.csv(\"cereal.csv\", function(error, data) {\n\n  // change string (from CSV) into number format\n  data.forEach(function(d) {\n    d.Calories = +d.Calories;\n    d[\"Protein (g)\"] = +d[\"Protein (g)\"];\n//    console.log(d);\n  });\n\n  // don't want dots overlapping axis, so add in buffer to data domain\n  xScale.domain([d3.min(data, xValue)-1, d3.max(data, xValue)+1]);\n  yScale.domain([d3.min(data, yValue)-1, d3.max(data, yValue)+1]);\n\n  // x-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Calories\");\n\n  // y-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Protein (g)\");\n\n  // draw dots\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", xMap)\n      .attr(\"cy\", yMap)\n      .style(\"fill\", function(d) { return color(cValue(d));}) \n      .on(\"mouseover\", function(d) {\n          tooltip.transition()\n               .duration(200)\n               .style(\"opacity\", .9);\n          tooltip.html(d[\"Cereal Name\"] + \"<br/> (\" + xValue(d) \n\t        + \", \" + yValue(d) + \")\")\n               .style(\"left\", (d3.event.pageX + 5) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n\n  // draw legend\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  // draw legend colored rectangles\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  // draw legend text\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d;})\n});\n\n</script>\n</body>\n</html>", "description": "D3 Scatterplot Example", "created_at": "2013-08-08T14:27:44Z", "updated_at": "2015-12-20T19:39:03Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.scale.category10", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "d3 scatterplot example using the Breakfast Cereal Dataset from http://idvbook.com and based on the scatterplot example at http://bl.ocks.org/mbostock/3887118\n", "uid": "weiglemc_6185069"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; background-color: white;}\n   \n  </style>\n</head>\n\n<body>\n  <a-scene>\n      <!-- Camera with customized cursor -->\n      <a-camera position=\"0 1.8 0\" cursor-visible=\"true\" cursor-scale=\"2\" cursor-color=\"#4CC3D9\" cursor-offset=\"2\" cursor-maxdistance=\"100\" cursor-opacity=\"0.5\" cursor-fuse=\"true\"></a-camera>\n      <a-light color=\"#da47da\" position=\"0 5 0\" type=\"ambient\"></a-light>\n    \t<a-entity camera look-controls wasd-controls></a-entity>\n    \t<a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n      <!-- Sky -->\n      <a-sky color=\"#c8f8e0\"></a-sky>\n  </a-scene>\n  <script>\n    \n    // fake data\n    var data = [ 10, 20, 30, 15, 25, 35, 40,\n                45, 50, 70, 100, 120, 130,\n               12, 18, 22, 29, 33, 44, 59, 200]\n    \n    // we scale the height of our bars using d3's linear scale\n    var hscale = d3.scale.linear()\n    \t.domain([0, d3.max(data)])\n    \t.range([0, 3])\n    \n    // we select the scene object just like an svg\n    var scene = d3.select(\"a-scene\")\n    \n    // we use d3's enter/update/exit pattern to draw and bind our dom elements\n    var bars = scene.selectAll(\"a-cube.bar\").data(data)\n    bars.enter().append(\"a-cube\").classed(\"bar\", true)\n    // we set attributes on our cubes to determine how they are rendered\n    bars.attr({\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 1 + hscale(d)/2;\n        // lets place the bars all around our camera\n        var radius = 5;\n        //var x = i - data.length/2;\n        var x = radius * Math.cos(i/data.length * 2 * Math.PI)\n        var z = radius * Math.sin(i/data.length * 2 * Math.PI)\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/data.length)*360;\n        return x + \" \" + y + \" \" + z\n      },\n      width: function(d) { return 0.5},\n      depth: function(d) { return 0.9},\n      height: function(d) { return hscale(d)},\n      opacity: function(d,i) { return 0.6 + (i/data.length) * 0.4},\n      //metalness: function(d,i) { return i/data.length}\n    })\n    .on(\"click\", function(d,i) {\n      console.log(\"click\", i,d)\n    })\n    .on(\"mouseenter\", function(d,i) {\n      // this event gets fired continuously as long as the cursor\n      // is over the element. we only want trigger our animation the first time\n      if(this.hovering) return;\n      console.log(\"hover\", i,d)\n      this.hovering = true;\n      d3.select(this).transition().duration(1000)\n      .attr({\n        metalness: 0.5,\n        width: 2\n      })\n    })\n    .on(\"mouseleave\", function(d,i) {\n      console.log(\"leave\",i,d)\n      this.hovering = false;\n      d3.select(this).transition()\n      .attr({\n        metalness: 0,\n        width: 0.5\n      })\n    })    \n    \n  </script>\n</body>\n", "description": "aframe + d3 test_next project", "created_at": "2015-12-21T20:11:57Z", "updated_at": "2015-12-21T20:12:06Z", "api": ["d3.scale.linear", "d3.max", "d3.select"], "readme": "Testing out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org).\n\nSince AFrame works with DOM elements, you can use d3's selection API to generate and modify 3D elements, as well as handle \"mouse\" events (including the VR friendly \"fuse cursor\") as if it was SVG.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/8be32e6f1f32920ba841'>aframe + d3 test</a>", "uid": "malcolm-decuire_9f8e98a2481f61287ca3"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.land {\n  fill: #222;\n}\n\n.county-boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.state-boundary {\n  fill: none;\n  stroke: #fff;\n}\n\n.border {\n  stroke: #000;\n  fill: none;\n\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3-composite-projections/0.3.5/conicConformalPortugal-proj.min.js\"></script>\n<script>\n\nvar width = 900,\n    height = 500;\n\nvar projection = d3.geo.conicConformalPortugal();\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"https://cdn.rawgit.com/mbostock/4090846/raw/8a7f176072d508218e120773943b595c998991be/world-50m.json\", function(error, world) {\n  var land = topojson.feature(world, world.objects.countries);\n\n    svg.selectAll(\"path\")\n      .data(land.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\",\"#000\")\n      .style(\"stroke-width\",\".5px\")\n      .style(\"fill\",\"#aca\")\n      .on(\"mouseover\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"red\");\n        })\n      .on(\"mouseout\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"#aca\");\n        });\n\n  svg\n    .append(\"path\")\n      .style(\"fill\",\"none\")\n      .style(\"stroke\",\"#000\")\n      .attr(\"d\", projection.getCompositionBorders());\n\n\n});\n\n\n</script>\n", "description": "d3-composite-projections conicConformalPortugal", "created_at": "2015-05-11T15:16:25Z", "updated_at": "2016-03-01T10:58:41Z", "api": ["d3.geo.conicConformalPortugal", "d3.geo.path", "d3.select", "d3.json"], "readme": "This file shows how to use the *conicConformalPortugal* projection from [d3-composite-projections](http://rveciana.github.io/d3-composite-projections/). Since the world layer is used, note that the Iberian Peninsula is clipped at the projection border. These projections work well when used at the place they are intended for.", "uid": "rveciana_aec08199d43759e98afe"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.axis text {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n  \nvar seqlength=0;\n\nd3.tsv(\"gene.txt\", function(error, data){\n\tif (error) throw error;\n\tvar line = data;\n\tvar linelength = line.length;\n  seqlength = seqlength + linelength;\n\tconsole.log(linelength);  \n});\n  \n\n\nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 860 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.identity()\n    .domain([0, width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickValues(length)\n    .orient(\"bottom\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(xAxis);\n\nvar myString=\"gene.txt\"  \nvar length=\"myString.length\"  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n</script>", "description": "D3 ruler", "created_at": "2016-02-18T16:39:01Z", "updated_at": "2016-02-18T16:39:01Z", "api": ["d3.tsv", "d3.scale.identity", "d3.svg.axis", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "Rico3734_2d06a6aadbb4af3398ba"}, {"code": "<!DOCTYPE html>\n<style>\n\tbody {\n\t\tfont-family: 'Open Sans', sans-serif;\n    font-size: 12px;\n\t}\n  .graph {\n    text-align: center;\n  }\n  svg {\n    background-color: #333947;\n  }\n\t.title {\n    font-size: 16px;\n\t\tfont-weight: bold;\n    fill: #fff;\n\t}\n  .caption {\n    fill: #ccc;\n  }\n\t.axis path,\n\t.axis line {\n    fill: none;\n    stroke: #eee;\n    shape-rendering: crispEdges;\n\t}\n  .axis text {\n    fill: #fff;\n  }\n\t.loading {\n    font-size: 15px;\n\t}\n  .plot {\n    fill-opacity: 0.75;\n  }\n\n  .conflict0 { fill: #4990BF; }\n\t.conflict1 { fill: #FF6363; }\n\t.conflict2 { fill: #738b8c; }\n\t.conflict3 { fill: #BC63FF; }\n\t.conflict4 { fill: #EFFF63; }\n\t.conflict5 { fill: #FF3D3D; }\n\t.conflict6 { fill: #496EBF; }\n  .conflict7 { fill: #cda2a2; }\n  .conflict8 { fill: #E563FF; }\n  .conflict9 { fill: #63D8FF; }\n\n  .circle {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n  .circle:hover {\n    stroke: #000;\n    stroke-width: 2px;\n  }\n  .title-tip,\n  .body-tip {\n    line-height: 1;\n    padding: 12px;\n    background: #000;\n    color: #fff;\n    line-height: 14px;\n    border-radius: 2px;\n    pointer-events: none;\n    text-align: center;\n  }\n\n  .body-tip {\n    max-width: 250px;\n  }\n\n  .title-tip div {\n    font-size: 10px;\n    color: #ccc;\n  }\n\n  /* Creates a small triangle extender for the tooltip */\n  .title-tip:after {\n    box-sizing: border-box;\n    display: inline;\n    font-size: 10px;\n    width: 100%;\n    line-height: 1;\n    color: #000;\n    position: absolute;\n    pointer-events: none;\n  }\n\n  .title-tip.n:after {\n    content: \"\\25BC\";\n    margin: -1px 0 0 0;\n    top: 100%;\n    left: 0;\n    text-align: center;\n  }\n\n  .button {\n    height: 25px;\n    width: 125px;\n    stroke: #ccc;\n    stroke-width: 2px;\n    fill: #333947;\n  }\n\n  .button:hover,\n  .button-text:hover {\n    cursor: pointer;\n  }\n\n  .button-active {\n    stroke: #fff;\n    fill: #fff;\n  }\n\n  .button-text {\n    fill: #ccc;\n  }\n\n  .button-text-active {\n    fill: #000;\n  }\n</style> \n\n<div id=\"graph\" class=\"graph\"></div>\n \n<script src=\"http://d3js.org/d3.v2.min.js\"></script>\n<script src=\"http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js\"></script>\n\n<script>\n  var w = 1500;\n  var h = 800;\n  var pad = 40;\n  var above = 125;\n  var left = 225;\n\n  var titleTip = d3.tip()\n                   .attr('class', 'title-tip')\n                   .offset([-3, 0])\n                   .html(function(d) {\n                    return \"<strong>\" + d.title + \"</strong><div>\" + d.pageedits + \" page edits</div>\";\n                   });\n\n  var bodyTip = d3.tip()\n                  .attr('class', 'body-tip')\n                  .html(function(d) { return d.description; });\n   \n  var svg = d3.select(\"#graph\")\n              .append(\"svg\")\n              .attr(\"width\", w)\n              .attr(\"height\", h)\n              .call(titleTip)\n              .call(bodyTip);\n\n  var x = d3.scale.linear().domain([2001, 2006]).range([left, w-pad]);\n  var y = d3.scale.linear().domain([0, 9]).range([above, h-pad-above]);\n   \n  var xAxis = d3.svg.axis().scale(x).orient(\"bottom\")\n    .ticks(6)\n    .tickFormat(d3.format(\"d\"))\n\n  var yAxis = d3.svg.axis().scale(y).orient(\"left\")\n    .ticks(10)\n    .tickFormat(function (d, i) {\n      return ['Technicality','Political','Ethical','Ethnic','International Words','Religion','Culture','Animal Rights','Star Wars','Other'][d];\n    });\n\n  svg.append(\"text\")\n    .attr(\"class\", \"title\")\n    .attr(\"x\", w/2)\n    .attr(\"y\", above/3)\n    .attr(\"text-anchor\", \"middle\")\n    .text(\"Most Debated Wikipedia Articles (2010)\");\n\n  svg.append(\"text\")\n    .attr(\"class\", \"caption\")\n    .attr(\"x\", w/2)\n    .attr(\"y\", above/3+18)\n    .attr(\"text-anchor\", \"middle\")\n    .text(\"Click each circle to read more!\");\n   \n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", \"translate(0, \"+(h-pad)+\")\")\n      .call(xAxis);\n   \n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", \"translate(\"+(left-pad)+\", 0)\")\n      .call(yAxis);\n   \n  svg.append(\"text\")\n      .attr(\"class\", \"loading\")\n      .text(\"Loading...\")\n      .attr(\"x\", function () { return w/2; })\n      .attr(\"y\", function () { return h/2-5; });\n   \n  d3.json(\"data.json\", function (data) {\n    var max_r = d3.max(data.map(function (d) { return d.pageedits; }));\n    var r1 = d3.scale.linear()\n              .domain([0, d3.max(data, function (d) { return d.pageedits; })])\n              .range([3, 100]);\n\n    var r2 = d3.scale.linear()\n              .domain([0, d3.max(data, function (d) { return d.pagesofdiscussion; })])\n              .range([3, 100]);\n\n    var displayCircles = function(flag) {\n      data.sort(function(a,b) {\n        var i,j;\n        if (flag == 0) {\n          i = a.pageedits;\n          j = b.pageedits;\n        } else {\n          i = a.pagesofdiscussion;\n          j = b.pagesofdiscussion;\n        }\n        if (i > j)\n          return -1;\n        if (i < j)\n          return 1;\n        return 0;\n      });\n\n      svg.selectAll(\"circle\").remove();\n      svg.selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", function (d) { return \"circle conflict\"+d.conflicttype; })\n        .attr(\"cx\", function (d) { return x(d.creationdate); })\n        .attr(\"cy\", function (d) { return y(d.conflicttype); })\n        .on('mouseover', titleTip.show)\n        .on('mouseout', function(d) {\n          titleTip.hide();\n          bodyTip.hide(d);\n        })\n        .on('click', function (d) {\n          titleTip.hide();\n          bodyTip.show(d);\n        })\n        .transition()\n        .duration(800)\n        .attr(\"r\", function (d) {\n          if (flag == 0) {\n            return r1(d.pageedits);\n          } else {\n            return r2(d.pagesofdiscussion);\n          }\n        });\n\n      titleTip.html(function(d) {\n        if (flag == 0) {\n          return \"<strong>\" + d.title + \"</strong><div>\" + d.pageedits + \" page edits</div>\";\n        } else {\n          return \"<strong>\" + d.title + \"</strong><div>\" + d.pagesofdiscussion + \" pages of discussion</div>\";\n        }\n      });\n    }\n\n    var toggleButton = function (flag) {\n      if (flag == 0) {\n        button1.attr(\"class\", \"button button-active\");\n        button2.attr(\"class\", \"button\");\n        buttonText1.attr(\"class\", \"button-text button-text-active\");\n        buttonText2.attr(\"class\", \"button-text\");\n      } else {\n        button1.attr(\"class\", \"button\");\n        button2.attr(\"class\", \"button button-active\");\n        buttonText1.attr(\"class\", \"button-text\");\n        buttonText2.attr(\"class\", \"button-text button-text-active\");\n      }\n    }\n \n    svg.selectAll(\".loading\").remove();\n \n    displayCircles(0);\n\n    var button1 = svg.append(\"rect\")\n                     .attr(\"class\", \"button button-active\")\n                     .attr(\"height\", 25)\n                     .attr(\"width\", 125)\n                     .attr(\"x\", left/2)\n                     .attr(\"y\", above/2)\n                     .attr(\"rx\", 5)\n                     .attr(\"ry\", 5)\n                     .on(\"click\", function() {\n                        toggleButton(0);\n                        return displayCircles(0);\n                      });\n\n    var buttonText1 = svg.append(\"text\")\n                     .attr(\"class\", \"button-text button-text-active\")\n                     .attr(\"x\", left/2 + 63)\n                     .attr(\"y\", above/2 + 16)\n                     .attr(\"text-anchor\", \"middle\")\n                     .text(\"Page Edits\")\n                     .on(\"click\", function() {\n                        toggleButton(0);\n                        return displayCircles(0);\n                      });\n\n    var button2 = svg.append(\"rect\")\n                     .attr(\"class\", \"button\")\n                     .attr(\"height\", 25)\n                     .attr(\"width\", 125)\n                     .attr(\"x\", left/2+125)\n                     .attr(\"y\", above/2)\n                     .attr(\"rx\", 5)\n                     .attr(\"ry\", 5)\n                     .on(\"click\", function() {\n                        toggleButton(1);\n                        return displayCircles(1);\n                      });\n\n    var buttonText2 = svg.append(\"text\")\n                     .attr(\"class\", \"button-text\")\n                     .attr(\"x\", left/2 + 188)\n                     .attr(\"y\", above/2 + 16)\n                     .attr(\"text-anchor\", \"middle\")\n                     .text(\"Pages of Discussion\")\n                     .on(\"click\", function() {\n                        toggleButton(1);\n                        return displayCircles(1);\n                      });\n  });\n</script>", "description": "d3.js wiki visualization", "created_at": "2016-04-22T05:16:14Z", "updated_at": "2016-04-22T05:16:15Z", "api": ["d3.tip", "d3.select", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.json", "d3.max"], "readme": "\n\nforked from <a href='http://bl.ocks.org/lilyc5459/'>lilyc5459</a>'s block: <a href='http://bl.ocks.org/lilyc5459/a35687613ab0f4991f37'>d3.js wiki visualization</a>\n\nforked from <a href='http://bl.ocks.org/CBasis/'>CBasis</a>'s block: <a href='http://bl.ocks.org/CBasis/9bae6529ccab4b902a50'>d3.js wiki visualization</a>", "uid": "CBasis_bc51bd85d8045fe0bc470250daf8d0cd"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Orbit Layout Modes</title>\n  <meta charset=\"utf-8\" />\n</head>\n<style>\n\n  #viz, svg {\n    width: 1000px;\n    height: 1000px;\n  }\n\n  text {\n    pointer-events: none;\n  }\n\n  #buttons {\n    position: absolute;\n    top:0;\n    left:0;\n  }\n\n  circle.ring {\n    fill: none;\n    stroke: black;\n    stroke-width: 1px;\n    stroke-opacity: .15;\n\n  }\n  \n</style>\n<script>\n\n\nfunction makeViz() {\n\n  d3.json(\"solarsystem.json\", function(data) {drawOrbit(data)});\n\n}\n\nfunction drawOrbit(_data) {\n\n  orbitScale = d3.scale.linear().domain([1, 3]).range([3.8, 1.5]).clamp(true);\n  radiusScale = d3.scale.linear().domain([210.64,2500,10000,71492.68]).range([2,4,8,16]);\n\n  planetColors = {Mercury: \"gray\", Venus: \"#d6bb87\", Earth: \"#677188\", Mars: \"#7c5541\", Jupiter: \"#a36a3e\", Saturn: \"#e9ba85\", Uranus: \"#73cbf0\", Neptune: \"#6383d1\"}\n\n\n  orbit = d3.layout.orbit().size([500,500])\n  .children(function(d) {return d.values})\n  .revolution(function(d) {return 1 / d.orbital_period})\n  .orbitSize(function(d) {return orbitScale(d.depth)})\n  .speed(1)\n  .mode(\"atomic\")\n  .nodes(_data);\n\n  d3.select(\"svg\")\n.append(\"g\")\n.attr(\"class\", \"viz\")\n.attr(\"transform\", \"translate(50,50)\")\n  .selectAll(\"g.node\").data(orbit.nodes())\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"})\n  .on(\"mouseover\", nodeOver)\n  .on(\"mouseout\", nodeOut)\n\n  d3.selectAll(\"g.node\")\n  .append(\"circle\")\n  .attr(\"r\", function(d) {return d.radius ? radiusScale(d.radius) : 20})\n  .style(\"fill\", function(d) {return d.depth == 0 ? \"#FFCC00\" : d.depth == 1 ? planetColors[d.key] : \"lightgray\"});\n\n  d3.selectAll(\"g.node\").filter(function(d) {return d.depth == 1})\n  .append(\"text\")\n  .text(function(d) {return d.depth == 0 ? \"Sun\" : d.key})\n  .attr(\"y\", 20)\n  .style(\"text-anchor\", \"middle\")\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n  .enter()\n  .insert(\"circle\", \"g\")\n  .attr(\"class\", \"ring\")\n  .attr(\"r\", function(d) {return d.r})\n  .attr(\"cx\", function(d) {return d.x})\n  .attr(\"cy\", function(d) {return d.y})\n\n  d3.select(\"#buttons\").append(\"button\").html(\"solar\").on(\"click\", function() {newMode(\"solar\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"flat\").on(\"click\", function() {newMode(\"flat\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"atomic\").on(\"click\", function() {newMode(\"atomic\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"custom\").on(\"click\", function() {newMode([4,4])})\n\n  orbit.on(\"tick\", function() {\n    d3.selectAll(\"g.node\")\n      .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"});\n\n    d3.selectAll(\"circle.ring\")\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n  });\n\n  orbit.start();\n\n  function newMode(_mode) {\n    orbit.mode(_mode)\n    .nodes(_data);\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n    .exit()\n    .transition()\n    .duration(500)\n    .style(\"stroke-opacity\", 0)\n    .style(\"stroke-width\", 3)\n    .remove();\n\n    d3.select(\"g.viz\")\n    .selectAll(\"circle.ring\")\n    .data(orbit.orbitalRings())\n    .enter()\n    .insert(\"circle\", \"g\")\n    .attr(\"class\", \"ring\");\n    \n    d3.selectAll(\"circle.ring\")\n    .attr(\"r\", function(d) {return d.r})\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n\n  }\n\n  function nodeOver(d) {\n    orbit.stop();\n\n    if (d.depth == 2) {\n      d3.select(this).append(\"text\").text(d.label || d.key).style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"moon\");\n    }\n    d3.select(this).select(\"circle\").style(\"stroke\", \"black\").style(\"stroke-width\", 3);\n  }\n\n  function nodeOut() {\n    orbit.start();\n      d3.selectAll(\"text.moon\").remove();\n    d3.selectAll(\"g.node > circle\").style(\"stroke\", \"none\").style(\"stroke-width\", 0);    \n  }\n\n\n}\n\n</script>\n<body onload=\"makeViz()\">\n<div id=\"viz\"><svg></svg><div id=\"buttons\"></div></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"d3.layout.orbit.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n</footer>\n</body>\n</html>", "description": "d3.layout.orbit modes", "created_at": "2015-12-19T19:02:49Z", "updated_at": "2015-12-19T19:02:49Z", "api": ["d3.dispatch", "d3.rebind", "d3.layout.pie", "d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that shows the different modes:\n\n**\"flat\"** is the default, demonstrated in earlier [examples that use flare.json](http://bl.ocks.org/emeeks/298e07ea67a640b5d9f4).\n\n**\"solar\"** arranges each satellite in its own ring, equally divided from the set size of the layout.\n\n**\"atomic\"** places 2 satellites in orbit in the first ring and 8 in every ring after that.\n\n**\"custom\"** is achieved by passing an array of integers. Each integer sets the number of satellites in that ring, with the final value used to set the number of satellites in all remaining rings. Under the hood, \"solar\" could be achieved by passing [1], \"atomic\" could be achieved by passing [2,8] and \"flat\" could be achieved by passing [9999].\n\nforked from <a href='http://bl.ocks.org/emeeks/'>emeeks</a>'s block: <a href='http://bl.ocks.org/emeeks/c8ef9d67acc044b368ef'>d3.layout.orbit modes</a>", "uid": "malcolm-decuire_95314ea75aed1c988f7c"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Small Multiples with Maps</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    fill: none;\n    stroke: lightgray;\n    stroke-width: 1px;\n  }\n  \n  .smallmap {\n    width: 33%;\n    float: left;\n    border: 1px lightgray solid;\n  }\n\n</style>\n<script>\n    function makeSomeMaps() {\n\n    mapImageArray = [];\n    map = d3.carto.map();\n    d3.select(\"#map\").call(map);\n\n    map.setScale(1)\n\n    countryLayer = d3.carto.layer.topojson();\n    \n    countryLayer.path(\"world.topojson\")\n    .label(\"Countries\")\n    .renderMode(\"canvas\")\n    .cssClass(\"country\");\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"all_sites.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"point\")\n    .renderMode(\"canvas\")\n    .markerSize(1)\n    .x(\"xcoord\")\n    .y(\"ycoord\")\n    .on(\"load\", smallMaptiples)\n\n    map.addCartoLayer(countryLayer).addCartoLayer(csvLayer);\n    \n    function smallMaptiples() {\n    var cityAtts = [\"aq\", \"ar\", \"arid\", \"capacity\", \"de\", \"delivery\", \"pop\", \"qu\",\"region\"];\n    var cityData = csvLayer.features()\n\n    for (var att in cityAtts) {\n      \n    var attExtent = d3.extent(cityData, function(d) {return parseFloat(d[cityAtts[att]])});\n    var colorScale = d3.scale.linear().domain([attExtent[0],(attExtent[0] + attExtent[1])/2,attExtent[1]]).range([\"green\",\"yellow\",\"red\"])\n\n    csvLayer\n    .markerColor(function(d) {return colorScale(d[cityAtts[att]])})\n    .strokeColor(function(d) {return colorScale(d[cityAtts[att]])})\n\n    map.refresh();\n    mapImageArray.push(d3.select(\"canvas\").node().toDataURL());\n\n    }\n    \n    window.onresize(null);\n    d3.select(\"#map\").remove();\n    d3.select(\"body\").append(\"div\").selectAll(\"img\").data(mapImageArray).enter().append(\"img\").attr(\"class\", \"smallmap\").attr(\"src\", function(d) {return d})\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Small Maptiples - d3.carto", "created_at": "2015-09-08T08:43:15Z", "updated_at": "2015-09-08T08:43:15Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.extent", "d3.scale.linear"], "readme": "Using **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**'s built-in canvas rendering and HTML5 canvas's built-in toDataUrl() function to create small multiples of the same map.\n\nThis example cycles through the various numeric attributes of the point dataset and restyles the map by changing layer.markerColor and layer.strokeColor. You have to call map.refresh() to update the display and then select the canvas element associated with the map to get access to the image data as a data URL, which you can pass to img elements.\n\nThis method of accessing toDataUrl only works with layers drawn using canvas.", "uid": "renecnielsen_87e6126d58f86d216a3b"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <style>\n    body {\n      width: 960px;\n    }\n    path {\n      stroke: white;\n      fill-rule: evenodd;\n    }\n  </style>\n  <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/lodash/2.4.1/lodash.min.js\"></script>  \n</head>\n<body>\n  <div id='viz'></div>\n  <div>\n    <button onclick=\"larger()\">Larger</button><button onclick=\"smaller()\">Smaller</button>\n  </div>\n  <script>\n    var charts = [];\n\n    d3.json(\"flare.json\", function(error, root) {\n    \n      var countAccessorFn = function(d) { return 1; };\n      var sizeAccessorFn = function(d) { return d.size; };\n\n      charts.push(makeSunburst(root, countAccessorFn));\n      charts.push(makeSunburst(root, sizeAccessorFn));\n\n      function makeSunburst(dataRoot, valueAccessor) {\n\n        var width = 480, height = 480;\n        var radius = (Math.min(width, height) / 2) - 60;\n        var color = d3.scale.category20c();\n        var angleScale = d3.scale.linear().range([0, 2 * Math.PI]);\n        var ringRadiusScale = d3.scale.linear().range([0, radius]);\n\n        var svg = d3.select(\"#viz\").append(\"svg\")\n            .attr({width: width, height: height});\n        \n        var container = svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height * .52 + \")\");\n\n        var partition = d3.layout.partition().sort(null).value(valueAccessor);\n        var nodes = partition.nodes(dataRoot);\n\n        var arc = d3.svg.arc()\n          .startAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, angleScale(d.x))); })\n          .endAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, angleScale(d.x + d.dx))); })\n          .innerRadius(function(d) { return Math.max(0, ringRadiusScale(d.y)); })\n          .outerRadius(function(d) { return Math.max(0, ringRadiusScale(d.y + d.dy)); });\n\n        var path = container.selectAll(\"path\")\n            .data(nodes)\n          .enter().append(\"path\")\n            .attr(\"display\", function(d) { return d.depth ? null : \"none\"; }) // hide inner ring\n            .attr(\"d\", arc)\n            .style(\"fill\", function(d) { return color((d.children ? d : d.parent).name); });\n\n        return {\n          addToRadius: function(radiusChange) {\n            radius += radiusChange;\n            ringRadiusScale.range([0, radius]);\n            // leave all data the same but redraw arcs based on new radius\n            path.transition().attr('d', arc);\n          }\n        }\n      }\n\n      d3.select(self.frameElement).style(\"height\", \"600px\");\n    });\n\n\n    function larger() {\n      charts.forEach(function(chart) {\n        chart.addToRadius(20);\n      });\n    }\n\n    function smaller() {\n      charts.forEach(function(chart) {\n        chart.addToRadius(-20);\n      });\n    }\n  </script>\n</body>\n</html>", "description": "d3.layout.partition issue", "created_at": "2014-06-30T14:05:26Z", "updated_at": "2015-08-29T14:03:16Z", "api": ["d3.json", "d3.scale.category20c", "d3.scale.linear", "d3.select", "d3.layout.partition", "d3.svg.arc"], "readme": "Demo of how the properties added by d3.layout.partition are shared between visualizations referencing the same underlying data. Both charts should resize, but instead the first chart adopts the ring proportions of the second chart when the `.arc` function is called again.", "uid": "explunit_ab8cf15534f7fec5ac6d"}, {"code": "<html>\n<head>\n  <title>Community Grid</title>\n  <meta charset=\"utf-8\" />\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"jsLouvain.js\" type=\"text/JavaScript\"></script>\n<script src=\"forceInABox.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    height: 500px;\n    width: 500px;\n    border: 1px solid gray;\n  }\n</style>\n<body>\n\n<div id=\"viz\">\n  <svg class=\"main\">\n  </svg>\n</div>\n</body>\n  <footer>\n<script>\n\nd3.csv(\"firm.csv\",function(error,data) {createNetwork(data)});\n\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\nfunction createNetwork(edgelist) {\n  var nodeHash = {};\n  var nodes = [];\n  var edges = [];\n\n  edgelist.forEach(function (edge) {\n    if (!nodeHash[edge.source]) {\n      nodeHash[edge.source] = {id: edge.source, label: edge.source};\n      nodes.push(nodeHash[edge.source]);\n    }\n    if (!nodeHash[edge.target]) {\n      nodeHash[edge.target] = {id: edge.target, label: edge.target};\n      nodes.push(nodeHash[edge.target]);\n    }\n    if (edge.weight == 5) {\n      edges.push({id: nodeHash[edge.source].id + \"-\" + nodeHash[edge.target].id, source: nodeHash[edge.source], target: nodeHash[edge.target], weight: edge.weight});\n    }\n  });\n  createForceNetwork(nodes, edges);\n}\n\nfunction createForceNetwork(nodes, edges) {\n\n//create a network from an edgelist\n\nvar colors = d3.scale.ordinal().domain([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]).range([\"#996666\", \"#66CCCC\", \"#FFFF99\", \"#CC9999\", \"#666633\", \"#993300\", \"#999966\", \"#660000\", \"#996699\", \"#cc6633\", \"#ff9966\", \"#339999\", \"#6699cc\", \"#ffcc66\", \"#ff6600\", \"#00ccccc\"]);\n\nvar node_data = nodes.map(function (d) {return d.id});\nvar edge_data = edges.map(function (d) {return {source: d.source.id, target: d.target.id, weight: 1}; });\n\nvar community = jLouvain().nodes(node_data).edges(edge_data);\nvar result  = community();\n\nnodes.forEach(function (node) {\n  node.module = result[node.id]\n});\n\nvar force = d3.layout.forceInABox()\n    .charge(-120)\n    .linkDistance(50)\n    .linkStrengthInterCluster(0.01)\n    .gravityToFoci(0.2)\n    .gravityOverall(0.05)\n    .size([500, 500])\n    .groupBy(function (d) {return d.module});\n\n  force\n    .nodes(nodes)\n    .links(edges)\n    .on(\"tick\", updateGraph);\n\n  var edgeEnter = d3.select(\"svg.main\").selectAll(\"g.edge\")\n  .data(edges, function (d) {return d.id})\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"edge\");\n\n  edgeEnter\n  .append(\"line\")\n  .style(\"stroke-width\", \"1px\")\n  .style(\"stroke\", \"black\")\n  .style(\"pointer-events\", \"none\");\n\n  var nodeEnter = d3.select(\"svg.main\")\n  .selectAll(\"g.node\")\n  .data(nodes, function (d) {return d.id})\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .call(force.drag());\n\n  nodeEnter.append(\"circle\")\n  .attr(\"r\", 8)\n  .style(\"fill\", function (d) {return colors(d.module)})\n  .style(\"stroke\", \"black\")\n  .style(\"stroke-width\", \"1px\")\n\n  nodeEnter.append(\"text\")\n  .style(\"text-anchor\", \"middle\")\n  .attr(\"y\", 3)\n  .style(\"stroke-width\", \"1px\")\n  .style(\"stroke-opacity\", 0.75)\n  .style(\"stroke\", \"white\")\n  .style(\"font-size\", \"8px\")\n  .text(function (d) {return d.id})\n  .style(\"pointer-events\", \"none\")\n\n  nodeEnter.append(\"text\")\n  .style(\"text-anchor\", \"middle\")\n  .attr(\"y\", 3)\n  .style(\"font-size\", \"8px\")\n  .text(function (d) {return d.id})\n  .style(\"pointer-events\", \"none\")\n\n  force.start();\n\n\nfunction updateGraph(e) {\n  force.onTick(e);\n\n  d3.selectAll(\"line\")\n    .attr(\"x1\", function(d) { return d.source.x; })\n    .attr(\"y1\", function(d) { return d.source.y; })\n    .attr(\"x2\", function(d) { return d.target.x; })\n    .attr(\"y2\", function(d) { return d.target.y; });\n\n  d3.selectAll(\"g.node\")\n    .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n}\n\n}\n</script>\n  </footer>\n\n</html>\n", "description": "Example of d3.layout.forceInABox", "created_at": "2015-07-29T01:40:32Z", "updated_at": "2016-03-16T15:50:20Z", "api": ["d3.layout.force", "d3.map", "d3.layout.treemap", "d3.ascending", "d3.csv", "d3.scale.ordinal", "d3.layout.forceInABox", "d3.select", "d3.selectAll"], "readme": "An implementation of [d3.layout.forceInABox](https://github.com/john-guerra/forceInABox) which implements a method to separate nodes in a network visually based on some kind of group membership.\n\nIn this case, the group is the community membership of the node as determined by Louvain modularity using [jLouvain.js](https://github.com/upphiminn/jLouvain).", "uid": "emeeks_3a54620a4751a7d68c1e"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Orbit Layout Modes</title>\n  <meta charset=\"utf-8\" />\n</head>\n<style>\n\n  #viz, svg {\n    width: 1000px;\n    height: 1000px;\n  }\n\n  text {\n    pointer-events: none;\n  }\n\n  #buttons {\n    position: absolute;\n    top:0;\n    left:0;\n  }\n\n  circle.ring {\n    fill: none;\n    stroke: black;\n    stroke-width: 1px;\n    stroke-opacity: .15;\n\n  }\n  \n</style>\n<script>\n\n\nfunction makeViz() {\n\n  d3.json(\"solarsystem.json\", function(data) {drawOrbit(data)});\n\n}\n\nfunction drawOrbit(_data) {\n\n  orbitScale = d3.scale.linear().domain([1, 3]).range([3.8, 1.5]).clamp(true);\n  radiusScale = d3.scale.linear().domain([210.64,2500,10000,71492.68]).range([2,4,8,16]);\n\n  planetColors = {Mercury: \"gray\", Venus: \"#d6bb87\", Earth: \"#677188\", Mars: \"#7c5541\", Jupiter: \"#a36a3e\", Saturn: \"#e9ba85\", Uranus: \"#73cbf0\", Neptune: \"#6383d1\"}\n\n\n  orbit = d3.layout.orbit().size([500,500])\n  .children(function(d) {return d.values})\n  .revolution(function(d) {return 1 / d.orbital_period})\n  .orbitSize(function(d) {return orbitScale(d.depth)})\n  .speed(1)\n  .mode(\"atomic\")\n  .nodes(_data);\n\n  d3.select(\"svg\")\n.append(\"g\")\n.attr(\"class\", \"viz\")\n.attr(\"transform\", \"translate(50,50)\")\n  .selectAll(\"g.node\").data(orbit.nodes())\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"})\n  .on(\"mouseover\", nodeOver)\n  .on(\"mouseout\", nodeOut)\n\n  d3.selectAll(\"g.node\")\n  .append(\"circle\")\n  .attr(\"r\", function(d) {return d.radius ? radiusScale(d.radius) : 20})\n  .style(\"fill\", function(d) {return d.depth == 0 ? \"#FFCC00\" : d.depth == 1 ? planetColors[d.key] : \"lightgray\"});\n\n  d3.selectAll(\"g.node\").filter(function(d) {return d.depth == 1})\n  .append(\"text\")\n  .text(function(d) {return d.depth == 0 ? \"Sun\" : d.key})\n  .attr(\"y\", 20)\n  .style(\"text-anchor\", \"middle\")\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n  .enter()\n  .insert(\"circle\", \"g\")\n  .attr(\"class\", \"ring\")\n  .attr(\"r\", function(d) {return d.r})\n  .attr(\"cx\", function(d) {return d.x})\n  .attr(\"cy\", function(d) {return d.y})\n\n  d3.select(\"#buttons\").append(\"button\").html(\"solar\").on(\"click\", function() {newMode(\"solar\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"flat\").on(\"click\", function() {newMode(\"flat\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"atomic\").on(\"click\", function() {newMode(\"atomic\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"custom\").on(\"click\", function() {newMode([4,4])})\n\n  orbit.on(\"tick\", function() {\n    d3.selectAll(\"g.node\")\n      .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"});\n\n    d3.selectAll(\"circle.ring\")\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n  });\n\n  orbit.start();\n\n  function newMode(_mode) {\n    orbit.mode(_mode)\n    .nodes(_data);\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n    .exit()\n    .transition()\n    .duration(500)\n    .style(\"stroke-opacity\", 0)\n    .style(\"stroke-width\", 3)\n    .remove();\n\n    d3.select(\"g.viz\")\n    .selectAll(\"circle.ring\")\n    .data(orbit.orbitalRings())\n    .enter()\n    .insert(\"circle\", \"g\")\n    .attr(\"class\", \"ring\");\n    \n    d3.selectAll(\"circle.ring\")\n    .attr(\"r\", function(d) {return d.r})\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n\n  }\n\n  function nodeOver(d) {\n    orbit.stop();\n\n    if (d.depth == 2) {\n      d3.select(this).append(\"text\").text(d.label || d.key).style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"moon\");\n    }\n    d3.select(this).select(\"circle\").style(\"stroke\", \"black\").style(\"stroke-width\", 3);\n  }\n\n  function nodeOut() {\n    orbit.start();\n      d3.selectAll(\"text.moon\").remove();\n    d3.selectAll(\"g.node > circle\").style(\"stroke\", \"none\").style(\"stroke-width\", 0);    \n  }\n\n\n}\n\n</script>\n<body onload=\"makeViz()\">\n<div id=\"viz\"><svg></svg><div id=\"buttons\"></div></div>\n<footer>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n<script src=\"d3.layout.orbit.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n</footer>\n</body>\n</html>", "description": "d3.layout.orbit modes", "created_at": "2014-12-28T00:57:36Z", "updated_at": "2016-03-17T02:16:29Z", "api": ["d3.dispatch", "d3.rebind", "d3.layout.pie", "d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that shows the different modes:\n\n**\"flat\"** is the default, demonstrated in earlier [examples that use flare.json](http://bl.ocks.org/emeeks/298e07ea67a640b5d9f4).\n\n**\"solar\"** arranges each satellite in its own ring, equally divided from the set size of the layout.\n\n**\"atomic\"** places 2 satellites in orbit in the first ring and 8 in every ring after that.\n\n**\"custom\"** is achieved by passing an array of integers. Each integer sets the number of satellites in that ring, with the final value used to set the number of satellites in all remaining rings. Under the hood, \"solar\" could be achieved by passing [1], \"atomic\" could be achieved by passing [2,8] and \"flat\" could be achieved by passing [9999].", "uid": "emeeks_c8ef9d67acc044b368ef"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Orbit Layout Modes</title>\n  <meta charset=\"utf-8\" />\n</head>\n<style>\n\n  #viz, svg {\n    width: 1000px;\n    height: 1000px;\n  }\n\n  text {\n    pointer-events: none;\n  }\n\n  #buttons {\n    position: absolute;\n    top:0;\n    left:0;\n  }\n\n  circle.ring {\n    fill: none;\n    stroke: black;\n    stroke-width: 1px;\n    stroke-opacity: .15;\n\n  }\n  \n</style>\n<script>\n\n\nfunction makeViz() {\n\n  d3.json(\"solarsystem.json\", function(data) {drawOrbit(data)});\n\n}\n\nfunction drawOrbit(_data) {\n\n  orbitScale = d3.scale.linear().domain([1, 3]).range([3.8, 1.5]).clamp(true);\n  radiusScale = d3.scale.linear().domain([210.64,2500,10000,71492.68]).range([2,4,8,16]);\n\n  planetColors = {Mercury: \"gray\", Venus: \"#d6bb87\", Earth: \"#677188\", Mars: \"#7c5541\", Jupiter: \"#a36a3e\", Saturn: \"#e9ba85\", Uranus: \"#73cbf0\", Neptune: \"#6383d1\"}\n\n\n  orbit = d3.layout.orbit().size([500,500])\n  .children(function(d) {return d.values})\n  .revolution(function(d) {return 1 / d.orbital_period})\n  .orbitSize(function(d) {return orbitScale(d.depth)})\n  .speed(1)\n  .mode(\"atomic\")\n  .nodes(_data);\n\n  d3.select(\"svg\")\n.append(\"g\")\n.attr(\"class\", \"viz\")\n.attr(\"transform\", \"translate(50,50)\")\n  .selectAll(\"g.node\").data(orbit.nodes())\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"})\n  .on(\"mouseover\", nodeOver)\n  .on(\"mouseout\", nodeOut)\n\n  d3.selectAll(\"g.node\")\n  .append(\"circle\")\n  .attr(\"r\", function(d) {return d.radius ? radiusScale(d.radius) : 20})\n  .style(\"fill\", function(d) {return d.depth == 0 ? \"#FFCC00\" : d.depth == 1 ? planetColors[d.key] : \"lightgray\"});\n\n  d3.selectAll(\"g.node\").filter(function(d) {return d.depth == 1})\n  .append(\"text\")\n  .text(function(d) {return d.depth == 0 ? \"Sun\" : d.key})\n  .attr(\"y\", 20)\n  .style(\"text-anchor\", \"middle\")\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n  .enter()\n  .insert(\"circle\", \"g\")\n  .attr(\"class\", \"ring\")\n  .attr(\"r\", function(d) {return d.r})\n  .attr(\"cx\", function(d) {return d.x})\n  .attr(\"cy\", function(d) {return d.y})\n\n  d3.select(\"#buttons\").append(\"button\").html(\"solar\").on(\"click\", function() {newMode(\"solar\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"flat\").on(\"click\", function() {newMode(\"flat\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"atomic\").on(\"click\", function() {newMode(\"atomic\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"custom\").on(\"click\", function() {newMode([4,4])})\n\n  orbit.on(\"tick\", function() {\n    d3.selectAll(\"g.node\")\n      .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"});\n\n    d3.selectAll(\"circle.ring\")\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n  });\n\n  orbit.start();\n\n  function newMode(_mode) {\n    orbit.mode(_mode)\n    .nodes(_data);\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n    .exit()\n    .transition()\n    .duration(500)\n    .style(\"stroke-opacity\", 0)\n    .style(\"stroke-width\", 3)\n    .remove();\n\n    d3.select(\"g.viz\")\n    .selectAll(\"circle.ring\")\n    .data(orbit.orbitalRings())\n    .enter()\n    .insert(\"circle\", \"g\")\n    .attr(\"class\", \"ring\");\n    \n    d3.selectAll(\"circle.ring\")\n    .attr(\"r\", function(d) {return d.r})\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n\n  }\n\n  function nodeOver(d) {\n    orbit.stop();\n\n    if (d.depth == 2) {\n      d3.select(this).append(\"text\").text(d.label || d.key).style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"moon\");\n    }\n    d3.select(this).select(\"circle\").style(\"stroke\", \"black\").style(\"stroke-width\", 3);\n  }\n\n  function nodeOut() {\n    orbit.start();\n      d3.selectAll(\"text.moon\").remove();\n    d3.selectAll(\"g.node > circle\").style(\"stroke\", \"none\").style(\"stroke-width\", 0);    \n  }\n\n\n}\n\n</script>\n<body onload=\"makeViz()\">\n<div id=\"viz\"><svg></svg><div id=\"buttons\"></div></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"d3.layout.orbit.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n</footer>\n</body>\n</html>", "description": "d3.layout.orbit modes", "created_at": "2015-11-08T15:01:21Z", "updated_at": "2015-11-08T15:01:21Z", "api": ["d3.dispatch", "d3.rebind", "d3.layout.pie", "d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that shows the different modes:\n\n**\"flat\"** is the default, demonstrated in earlier [examples that use flare.json](http://bl.ocks.org/emeeks/298e07ea67a640b5d9f4).\n\n**\"solar\"** arranges each satellite in its own ring, equally divided from the set size of the layout.\n\n**\"atomic\"** places 2 satellites in orbit in the first ring and 8 in every ring after that.\n\n**\"custom\"** is achieved by passing an array of integers. Each integer sets the number of satellites in that ring, with the final value used to set the number of satellites in all remaining rings. Under the hood, \"solar\" could be achieved by passing [1], \"atomic\" could be achieved by passing [2,8] and \"flat\" could be achieved by passing [9999].", "uid": "wcjohnson11_7ebb3f3a28e403745856"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.axis text {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n</script>\n", "description": "d3.time.scale nice", "created_at": "2012-08-09T17:24:26Z", "updated_at": "2016-02-09T01:30:45Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "", "uid": "mbostock_3306147"}, {"code": "<html>\n    <meta charset='utf-8' />\n<head>\n</head>\n<body>\n    <svg>\n    <text id='text_node' y=\"20px\" text-anchor=\"start\" opacity=\"1\">\n        <tspan>You</tspan>\n        <tspan dx='.5em'>shall</tspan>\n        <tspan dx='.5em' dy='.9em'>not</tspan>\n        <tspan dx='.4em' dy='.9em'>pass</tspan>\n\n    </text>\n</svg>\n<script src='http://mbostock.github.com/d3/d3.js'></script>\n<script>\n    var node = document.getElementById('text_node');\n    var bbox = node.getBBox();\n    var computed_text_length = node.getComputedTextLength();\n\n    //Does not work\n    text_node = d3.select('#text_node')\n    text_node.append('tspan')\n        .text('Fly')\n        .attr('dx', '.2em')\n    text_node.append('tspan')\n        .text('you')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n    text_node.append('tspan')\n        .text('fools')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n\n    /*\n    d3.select('#text_node').append('tspan')\n        .text('Fly')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n\n    d3.select('#text_node').append('tspan')\n        .text('you')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n    */\n\n    console.log('BBOX width: ', bbox.width);\n    console.log('Computed text length: ', computed_text_length);\n</script>\n</body>\n</html>\n", "description": "d3 tspan append", "created_at": "2012-02-14T18:58:49Z", "updated_at": "2015-09-30T16:48:00Z", "api": ["d3.select"], "readme": "", "uid": "enjalot_1829187"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n \n\n.axis .minor {\n  stroke: red;\n  stroke-width: 1.0;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(24).tickSubdivide(2).tickSize(-30, -30, 0)));\n \n</script>", "description": "D3 time.scale minor lines", "created_at": "2013-01-31T22:48:37Z", "updated_at": "2015-12-12T00:58:55Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "", "uid": "vjpgo_4687407"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <style>\n    body {\n      width: 960px;\n    }\n    path {\n      stroke: white;\n      fill-rule: evenodd;\n    }\n  </style>\n  <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/lodash/2.4.1/lodash.min.js\"></script>  \n</head>\n<body>\n  <div id='viz'></div>\n  <div>\n    <button onclick=\"larger()\">Larger</button><button onclick=\"smaller()\">Smaller</button>\n  </div>\n  <script>\n    var charts = [];\n\n    d3.json(\"flare.json\", function(error, root) {\n    \n      var countAccessorFn = function(d) { return 1; };\n      var sizeAccessorFn = function(d) { return d.size; };\n      \n      // create separate partition variables\n      var countPartition = d3.layout.partition().sort(null).value(countAccessorFn);\n      var sizePartition = d3.layout.partition().sort(null).value(sizeAccessorFn);\n\n      charts.push(makeSunburst(root, countPartition));\n      charts.push(makeSunburst(root, sizePartition));\n\n      // make different charts according to partition\n      function makeSunburst(dataRoot, partition) {\n\n        var width = 480, height = 480;\n        var radius = (Math.min(width, height) / 2) - 60;\n        var color = d3.scale.category20c();\n        var angleScale = d3.scale.linear().range([0, 2 * Math.PI]);\n        var ringRadiusScale = d3.scale.linear().range([0, radius]);\n\n        var svg = d3.select(\"#viz\").append(\"svg\")\n            .attr({width: width, height: height});\n        \n        var container = svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height * .52 + \")\");\n\n        var nodes = partition.nodes(dataRoot);\n\n        var arc = d3.svg.arc()\n          .startAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, angleScale(d.x))); })\n          .endAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, angleScale(d.x + d.dx))); })\n          .innerRadius(function(d) { return Math.max(0, ringRadiusScale(d.y)); })\n          .outerRadius(function(d) { return Math.max(0, ringRadiusScale(d.y + d.dy)); });\n\n        var path = container.selectAll(\"path\")\n            .data(nodes)\n          .enter().append(\"path\")\n            .attr(\"display\", function(d) { return d.depth ? null : \"none\"; }) // hide inner ring\n            .attr(\"d\", arc)\n            .style(\"fill\", function(d) { return color((d.children ? d : d.parent).name); });\n\n        return {\n          addToRadius: function(radiusChange) {\n            radius += radiusChange;\n            ringRadiusScale.range([0, radius]);\n            \n            // update the data before re-rendering each chart\n            nodes = partition.nodes(dataRoot);\n            path.transition().attr('d', arc);\n          }\n        }\n      }\n\n      d3.select(self.frameElement).style(\"height\", \"600px\");\n    });\n\n\n    function larger() {\n      charts.forEach(function(chart) {\n        chart.addToRadius(20);\n      });\n    }\n\n    function smaller() {\n      charts.forEach(function(chart) {\n        chart.addToRadius(-20);\n      });\n    }\n  </script>\n</body>\n</html>", "description": "d3.layout.partition issue response", "created_at": "2014-06-30T23:00:18Z", "updated_at": "2015-08-29T14:03:17Z", "api": ["d3.json", "d3.layout.partition", "d3.scale.category20c", "d3.scale.linear", "d3.select", "d3.svg.arc"], "readme": "", "uid": "jshanley_86e3bc1b231e9772b16d"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Streamgraph</title>\n    <script type=\"text/javascript\" src=\"http://mbostock.github.com/d3/d3.v2.js?2.8.0\"></script>\n    <script type=\"text/javascript\" src=\"stream_layers.js\"></script>\n    <script type=\"text/javascript\" src=\"stream-chart.js\"></script>\n</head>\n<body>\n    <div id=\"chart\">\n        <button class=\"first last\" onclick=\"transition()\">\n            Update\n        </button><p>\n    </div>\n    <script>\n        var n = 20, // number of layers\n            m = 200; // number of samples per layer\n\n        var data1 = stream_layers(n, m);\n        var data0 = stream_layers(n, m);\n        var colors = d3.range(n).map(function() { return d3.interpolateRgb(\"#aad\", \"#556\")(Math.random()); });\n\n        var streamgraph = streamgraphChart()\n            .margin({top: 10, right: 10, bottom: 10, left: 10})\n            .color(function(d, i) { return colors[i]; }) // use same colors for both data sets\n            .transitionDuration(1500)\n            .on(\"mouseover\", fade(.2))\n            .on(\"mouseout\", fade(1));\n\n        d3.select(\"#chart\")\n            .datum(data0)\n            .call(streamgraph);\n\n        function transition() {\n            d3.select(\"#chart\")\n                    .datum(function() {\n                        var d = data1;\n                        data1 = data0;\n                        return data0 = d;\n                    })\n                    .call(streamgraph);\n        }\n\n        function fade(opacity) {\n            return function(g, i) {\n                streamgraph.layers()\n                    .filter(function(h, j) {\n                        return j != i;\n                    })\n                    .transition(1000)\n                      .style(\"opacity\", opacity);\n            }\n        }\n    </script>\n</body>\n</html>", "description": "Interactive Streamgraph D3", "created_at": "2012-03-03T10:38:10Z", "updated_at": "2016-04-03T22:37:10Z", "api": ["d3.range", "d3.interpolateRgb", "d3.select", "d3.layout.stack", "d3.max", "d3.svg.area"], "readme": "", "uid": "GerHobbelt_1965462"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar data = [1, 1, 2, 3, 5, 8, 13, 21];\n\nvar width = 960,\n    height = 500,\n    radius = height / 2 - 10;\n\nvar arc = d3.svg.arc()\n    .innerRadius(radius - 40)\n    .outerRadius(radius)\n    .cornerRadius(20);\n\nvar pie = d3.layout.pie()\n    .padAngle(.02);\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nsvg.selectAll(\"path\")\n    .data(pie(data))\n  .enter().append(\"path\")\n    .style(\"fill\", function(d, i) { return color(i); })\n    .attr(\"d\", arc);\n\n</script>\n", "description": "Arc Corners IV", "created_at": "2014-11-20T03:58:40Z", "updated_at": "2016-02-09T01:52:05Z", "api": ["d3.svg.arc", "d3.layout.pie", "d3.scale.category10", "d3.select"], "readme": "", "uid": "mbostock_c501f6cae402ab5e90c9"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\nvar width = 600,\n    height = 500,\n    radius = 240;\n\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius)\n    .innerRadius(radius - 100);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.Porcentaje; })\n    .startAngle(-1*Math.PI/2)\n    .endAngle(Math.PI/2);\n\n\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.csv(\"https://cdn.rawgit.com/rveciana/5919944/raw//encuesta.csv\", function(d){\n\n\n    var g = svg.selectAll(\".arc\")\n      .data(pie(d))\n        .enter().append(\"g\")\n        .attr(\"class\", \"arc\");\n\n    g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) {return d3.rgb(d.data.Color); });\n\n    \n    });\n\n</script>", "description": "JSL 2015: Pie Layout", "created_at": "2015-02-11T08:31:45Z", "updated_at": "2015-08-29T14:15:14Z", "api": ["d3.svg.arc", "d3.layout.pie", "d3.select", "d3.csv", "d3.rgb"], "readme": "Cuarto ejemplo del taller *Mapas web interactivos con D3.js* en el programa de las [9as Jornadas SIG Libre ](http://www.sigte.udg.edu/jornadassiglibre/programa/talleres/).\n\nEn este ejemplo se muestra como usar un layout de D3.js.\n\nEl layout usado se llama *pie layout* y sirve para hacer gr\u00e1ficos tipo tarta, pero tambi\u00e9n se puede usar para representar los esca\u00f1os en el Congreso de los Diputados, como en este caso.\n\nLos datos son de la encuesta GAD3, del 9-13 de enero de 2015. Fuente: [Wikipedia](http://es.wikipedia.org/wiki/Anexo:Sondeos_de_intenci%C3%B3n_de_voto_para_las_elecciones_generales_de_Espa%C3%B1a_de_2015)", "uid": "rveciana_20f120d7ab0580f9a8c5"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.land {\n  fill: #222;\n}\n\n.county-boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.state-boundary {\n  fill: none;\n  stroke: #fff;\n}\n\n.border {\n  stroke: #000;\n  fill: none;\n\n}\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-width: .5px;\n  stroke-opacity: .5;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3-composite-projections/0.3.5/conicConformalEurope-proj.min.js\"></script>\n<script>\n\nvar width = 600,\n    height = 500;\n\nvar projection = d3.geo.conicConformalEurope();\nvar graticule = d3.geo.graticule();\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n\n    svg.append(\"path\")\n        .datum(graticule)\n        .attr(\"class\", \"graticule\")\n        .attr(\"d\", path);\nd3.json(\"https://cdn.rawgit.com/rveciana/5919944/raw//nuts0.json\", function(error, europe) {\n  var land = topojson.feature(europe, europe.objects.nuts0);\n\n\n\n    svg.selectAll(\"path\")\n      .data(land.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\",\"#000\")\n      .style(\"stroke-width\",\".5px\")\n      .style(\"fill\",\"#aca\")\n      .on(\"mouseover\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"red\");\n        })\n      .on(\"mouseout\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"#aca\");\n        });\n\n        svg\n          .append(\"path\")\n            .style(\"fill\",\"none\")\n            .style(\"stroke\",\"#000\")\n            .attr(\"d\", projection.getCompositionBorders());\n\n\n\n});\n\n\n</script>\n", "description": "d3-composite-projections conicConformalEurope", "created_at": "2015-09-02T21:08:33Z", "updated_at": "2016-02-29T16:18:57Z", "api": ["d3.geo.conicConformalEurope", "d3.geo.graticule", "d3.geo.path", "d3.select", "d3.json"], "readme": "This example shows how to use the conicConformalEurope projection from [d3-composite-projections](http://rveciana.github.io/d3-composite-projections/).", "uid": "rveciana_4bcc5750c776c22ffda6"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style type=\"text/css\">\n\nsvg {\n  font-family: \"Helvetica Neue\", Helvetica;\n}\n\n.line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2px;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar m = [20, 20, 30, 20],\n    w = 960 - m[1] - m[3],\n    h = 500 - m[0] - m[2];\n\nvar x,\n    y,\n    duration = 1500,\n    delay = 500;\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", w + m[1] + m[3])\n    .attr(\"height\", h + m[0] + m[2])\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\nvar stocks,\n    symbols;\n\n// A line generator, for the dark stroke.\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); });\n\n// A line generator, for the dark stroke.\nvar axis = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(h);\n\n// A area generator, for the dark stroke.\nvar area = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y1(function(d) { return y(d.price); });\n\nd3.csv(\"stocks.csv\", function(data) {\n  var parse = d3.time.format(\"%b %Y\").parse;\n\n  // Nest stock values by symbol.\n  symbols = d3.nest()\n      .key(function(d) { return d.symbol; })\n      .entries(stocks = data);\n\n  // Parse dates and numbers. We assume values are sorted by date.\n  // Also compute the maximum price per symbol, needed for the y-domain.\n  symbols.forEach(function(s) {\n    s.values.forEach(function(d) { d.date = parse(d.date); d.price = +d.price; });\n    s.maxPrice = d3.max(s.values, function(d) { return d.price; });\n    s.sumPrice = d3.sum(s.values, function(d) { return d.price; });\n  });\n\n  // Sort by maximum price, descending.\n  symbols.sort(function(a, b) { return b.maxPrice - a.maxPrice; });\n\n  var g = svg.selectAll(\"g\")\n      .data(symbols)\n    .enter().append(\"g\")\n      .attr(\"class\", \"symbol\");\n\n  setTimeout(lines, duration);\n});\n\nfunction lines() {\n  x = d3.time.scale().range([0, w - 60]);\n  y = d3.scale.linear().range([h / 4 - 20, 0]);\n\n  // Compute the minimum and maximum date across symbols.\n  x.domain([\n    d3.min(symbols, function(d) { return d.values[0].date; }),\n    d3.max(symbols, function(d) { return d.values[d.values.length - 1].date; })\n  ]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + (i * h / 4 + 10) + \")\"; });\n\n  g.each(function(d) {\n    var e = d3.select(this);\n\n    e.append(\"path\")\n        .attr(\"class\", \"line\");\n\n    e.append(\"circle\")\n        .attr(\"r\", 5)\n        .style(\"fill\", function(d) { return color(d.key); })\n        .style(\"stroke\", \"#000\")\n        .style(\"stroke-width\", \"2px\");\n\n    e.append(\"text\")\n        .attr(\"x\", 12)\n        .attr(\"dy\", \".31em\")\n        .text(d.key);\n  });\n\n  function draw(k) {\n    g.each(function(d) {\n      var e = d3.select(this);\n      y.domain([0, d.maxPrice]);\n\n      e.select(\"path\")\n          .attr(\"d\", function(d) { return line(d.values.slice(0, k + 1)); });\n\n      e.selectAll(\"circle, text\")\n          .data(function(d) { return [d.values[k], d.values[k]]; })\n          .attr(\"transform\", function(d) { return \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\"; });\n    });\n  }\n\n  var k = 1, n = symbols[0].values.length;\n  d3.timer(function() {\n    draw(k);\n    if ((k += 2) >= n - 1) {\n      draw(n - 1);\n      setTimeout(horizons, 500);\n      return true;\n    }\n  });\n}\n\nfunction horizons() {\n  svg.insert(\"defs\", \".symbol\")\n    .append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", w)\n      .attr(\"height\", h / 4 - 20);\n\n  var color = d3.scale.ordinal()\n      .range([\"#c6dbef\", \"#9ecae1\", \"#6baed6\"]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"clip-path\", \"url(#clip)\");\n\n  area\n      .y0(h / 4 - 20);\n\n  g.select(\"circle\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (-h / 4) + \")\"; })\n      .remove();\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (h / 4 - 20) + \")\"; })\n      .attr(\"dy\", \"0em\");\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).selectAll(\".area\")\n        .data(d3.range(3))\n      .enter().insert(\"path\", \".line\")\n        .attr(\"class\", \"area\")\n        .attr(\"transform\", function(d) { return \"translate(0,\" + (d * (h / 4 - 20)) + \")\"; })\n        .attr(\"d\", area(d.values))\n        .style(\"fill\", function(d, i) { return color(i); })\n        .style(\"fill-opacity\", 1e-6);\n\n    y.domain([0, d.maxPrice / 3]);\n\n    d3.select(this).selectAll(\".line\").transition()\n        .duration(duration)\n        .attr(\"d\", line(d.values))\n        .style(\"stroke-opacity\", 1e-6);\n\n    d3.select(this).selectAll(\".area\").transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1)\n        .attr(\"d\", area(d.values))\n        .each(\"end\", function() { d3.select(this).style(\"fill-opacity\", null); });\n  });\n\n  setTimeout(areas, duration + delay);\n}\n\nfunction areas() {\n  var g = svg.selectAll(\".symbol\");\n\n  axis\n      .y(h / 4 - 21);\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return axis(d.values); });\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).select(\".line\").transition()\n        .duration(duration)\n        .style(\"stroke-opacity\", 1)\n        .each(\"end\", function() { d3.select(this).style(\"stroke-opacity\", null); });\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1e-6)\n        .attr(\"d\", area(d.values))\n        .remove();\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return !i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill\", color(d.key))\n        .attr(\"d\", area(d.values));\n  });\n\n  svg.select(\"defs\").transition()\n      .duration(duration)\n      .remove();\n\n  g.transition()\n      .duration(duration)\n      .each(\"end\", function() { d3.select(this).attr(\"clip-path\", null); });\n\n  setTimeout(stackedArea, duration + delay);\n}\n\nfunction stackedArea() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  area\n      .y0(function(d) { return y(d.price0); })\n      .y1(function(d) { return y(d.price0 + d.price); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration)\n      .attr(\"transform\", \"translate(0,0)\")\n      .each(\"end\", function() { d3.select(this).attr(\"transform\", null); });\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", function(d, i) { return i < 3 ? 1e-6 : 1; })\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(streamgraph, duration + delay);\n}\n\nfunction streamgraph() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\")\n      .offset(\"wiggle\");\n\n  stack(symbols);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration);\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(overlappingArea, duration + delay);\n}\n\nfunction overlappingArea() {\n  var g = svg.selectAll(\".symbol\");\n\n  line\n      .y(function(d) { return y(d.price0 + d.price); });\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d.maxPrice; }))])\n      .range([h, 0]);\n\n  area\n      .y0(h)\n      .y1(function(d) { return y(d.price); });\n\n  line\n      .y(function(d) { return y(d.price); });\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", .5)\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price) + \")\"; });\n\n  svg.append(\"line\")\n      .attr(\"class\", \"line\")\n      .attr(\"x1\", 0)\n      .attr(\"x2\", w - 60)\n      .attr(\"y1\", h)\n      .attr(\"y2\", h)\n      .style(\"stroke-opacity\", 1e-6)\n    .transition()\n      .duration(duration)\n      .style(\"stroke-opacity\", 1);\n\n  setTimeout(groupedBar, duration + delay);\n}\n\nfunction groupedBar() {\n  x = d3.scale.ordinal()\n      .domain(symbols[0].values.map(function(d) { return d.date; }))\n      .rangeBands([0, w - 60], .1);\n\n  var x1 = d3.scale.ordinal()\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeBands([0, x.rangeBand()]);\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .remove();\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", 1e-6)\n      .remove();\n\n  g.each(function(p, j) {\n    d3.select(this).selectAll(\"rect\")\n        .data(function(d) { return d.values; })\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.date) + x1(p.key); })\n        .attr(\"y\", function(d) { return y(d.price); })\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"height\", function(d) { return h - y(d.price); })\n        .style(\"fill\", color(p.key))\n        .style(\"fill-opacity\", 1e-6)\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1);\n  });\n\n  setTimeout(stackedBar, duration + delay);\n}\n\nfunction stackedBar() {\n  x.rangeRoundBands([0, w - 60], .1);\n\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  var g = svg.selectAll(\".symbol\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.select(\"text\")\n      .delay(symbols[0].values.length * 10)\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price); })\n      .attr(\"height\", function(d) { return h - y(d.price); })\n      .each(\"end\", function() {\n        d3.select(this)\n            .style(\"stroke\", \"#fff\")\n            .style(\"stroke-opacity\", 1e-6)\n          .transition()\n            .duration(duration / 2)\n            .attr(\"x\", function(d) { return x(d.date); })\n            .attr(\"width\", x.rangeBand())\n            .style(\"stroke-opacity\", 1);\n      });\n\n  setTimeout(transposeBar, duration + symbols[0].values.length * 10 + delay);\n}\n\nfunction transposeBar() {\n  x\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeRoundBands([0, w], .2);\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d3.sum(d.values.map(function(d) { return d.price; })); }))]);\n\n  var stack = d3.layout.stack()\n      .x(function(d, i) { return i; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; });\n\n  stack(d3.zip.apply(null, symbols.map(function(d) { return d.values; }))); // transpose!\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price) - 1; })\n      .attr(\"height\", function(d) { return h - y(d.price) + 1; })\n      .attr(\"x\", function(d) { return x(d.symbol); })\n      .attr(\"width\", x.rangeBand())\n      .style(\"stroke-opacity\", 1e-6);\n\n  t.select(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"transform\", function(d) { return \"translate(\" + (x(d.key) + x.rangeBand() / 2) + \",\" + h + \")\"; })\n      .attr(\"dy\", \"1.31em\")\n      .each(\"end\", function() { d3.select(this).attr(\"x\", null).attr(\"text-anchor\", \"middle\"); });\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"x2\", w);\n\n  setTimeout(donut,  duration / 2 + symbols[0].values.length * 10 + delay);\n}\n\nfunction donut() {\n  var g = svg.selectAll(\".symbol\");\n\n  g.selectAll(\"rect\").remove();\n\n  var pie = d3.layout.pie()\n      .value(function(d) { return d.sumPrice; });\n\n  var arc = d3.svg.arc();\n\n  g.append(\"path\")\n      .style(\"fill\", function(d) { return color(d.key); })\n      .data(function() { return pie(symbols); })\n    .transition()\n      .duration(duration)\n      .tween(\"arc\", arcTween);\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"dy\", \".31em\");\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"y1\", 2 * h)\n      .attr(\"y2\", 2 * h)\n      .remove();\n\n  function arcTween(d) {\n    var path = d3.select(this),\n        text = d3.select(this.parentNode.appendChild(this.previousSibling)),\n        x0 = x(d.data.key),\n        y0 = h - y(d.data.sumPrice);\n\n    return function(t) {\n      var r = h / 2 / Math.min(1, t + 1e-3),\n          a = Math.cos(t * Math.PI / 2),\n          xx = (-r + (a) * (x0 + x.rangeBand()) + (1 - a) * (w + h) / 2),\n          yy = ((a) * h + (1 - a) * h / 2),\n          f = {\n            innerRadius: r - x.rangeBand() / (2 - a),\n            outerRadius: r,\n            startAngle: a * (Math.PI / 2 - y0 / r) + (1 - a) * d.startAngle,\n            endAngle: a * (Math.PI / 2) + (1 - a) * d.endAngle\n          };\n\n      path.attr(\"transform\", \"translate(\" + xx + \",\" + yy + \")\");\n      path.attr(\"d\", arc(f));\n      text.attr(\"transform\", \"translate(\" + arc.centroid(f) + \")translate(\" + xx + \",\" + yy + \")rotate(\" + ((f.startAngle + f.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n    };\n  }\n\n  setTimeout(donutExplode, duration + delay);\n}\n\nfunction donutExplode() {\n  var r0a = h / 2 - x.rangeBand() / 2,\n      r1a = h / 2,\n      r0b = 2 * h - x.rangeBand() / 2,\n      r1b = 2 * h,\n      arc = d3.svg.arc();\n\n  svg.selectAll(\".symbol path\")\n      .each(transitionExplode);\n\n  function transitionExplode(d, i) {\n    d.innerRadius = r0a;\n    d.outerRadius = r1a;\n    d3.select(this).transition()\n        .duration(duration / 2)\n        .tween(\"arc\", tweenArc({\n          innerRadius: r0b,\n          outerRadius: r1b\n        }));\n  }\n\n  function tweenArc(b) {\n    return function(a) {\n      var path = d3.select(this),\n          text = d3.select(this.nextSibling),\n          i = d3.interpolate(a, b);\n      for (var key in b) a[key] = b[key]; // update data\n      return function(t) {\n        var a = i(t);\n        path.attr(\"d\", arc(a));\n        text.attr(\"transform\", \"translate(\" + arc.centroid(a) + \")translate(\" + w / 2 + \",\" + h / 2 +\")rotate(\" + ((a.startAngle + a.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n      };\n    }\n  }\n\n  setTimeout(function() {\n    svg.selectAll(\"*\").remove();\n    svg.selectAll(\"g\").data(symbols).enter().append(\"g\").attr(\"class\", \"symbol\");\n    lines();\n  }, duration);\n}\n\n</script>\n", "description": "D3 Show Reel", "created_at": "2016-02-02T17:46:17Z", "updated_at": "2016-02-02T17:46:19Z", "api": ["d3.scale.category10", "d3.select", "d3.svg.line", "d3.svg.area", "d3.csv", "d3.time.format", "d3.nest", "d3.max", "d3.sum", "d3.time.scale", "d3.scale.linear", "d3.min", "d3.timer", "d3.scale.ordinal", "d3.range", "d3.layout.stack", "d3.zip.apply", "d3.layout.pie", "d3.svg.arc", "d3.interpolate"], "readme": "The first 15 seconds of the D3 show reel. See full video at <http://vimeo.com/29862153>. Includes seamless transitions between the following visualization types:\n\n* lines\n* horizons\n* areas\n* stacked areas\n* streamgraph\n* overlapping areas\n* grouped bars\n* stacked bars\n* bars\n* donut\n\nAdmittedly, these aren\u2019t the most useful visualizations; their purpose is not to inform but to demonstrate D3\u2019s capability for producing dynamic visualizations with custom transitions. They *do* show real data (the monthly closing price for ten years\u2019 worth of stock data), but I didn\u2019t include axes for date or price. See the [axis component](http://bl.ocks.org/1166403) for a better example. Also, the stacked visualizations aren\u2019t especially meaningful, unless you imagine owning a portfolio with equal parts AAPL, AMZN, IBM and MSFT. Similarly, the bars and donuts represent the *average* price (or sum) during this time period.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1256572'>D3 Show Reel</a>", "uid": "sivartravis_84553799f7a1a17548e1"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the scatterplot\n    svg.selectAll(\"dot\")\n        .data(data)\n      .enter().append(\"circle\")\n      .filter(function(d) { return d.close < 400 })\n        .style(\"fill\", \"red\")\n        .attr(\"r\", 3.5)\n        .attr(\"cx\", function(d) { return x(d.date); })\n        .attr(\"cy\", function(d) { return y(d.close); });\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>\n", "description": "Filtering in d3.js", "created_at": "2014-06-22T18:39:22Z", "updated_at": "2015-08-29T14:02:53Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple scatterplot](http://bl.ocks.org/d3noob/38744a17f9c0141bcd04) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at demonstrating the use of the `.filter` statement in d3.js and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_8dc93bce7e7200ab487d"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n  </style>\n</head>\n\n<body>\n  <a-scene>\n      <!-- Camera with customized cursor -->\n      <a-camera position=\"0 1.8 0\" cursor-visible=\"true\" cursor-scale=\"2\" cursor-color=\"#4CC3D9\" cursor-offset=\"2\" cursor-maxdistance=\"100\" cursor-opacity=\"0.5\" cursor-fuse=\"true\"></a-camera>\n      <a-light color=\"#FFF\" position=\"-1 1 0\" type=\"ambient\"></a-light>\n    \n      <a-entity light=\"type: point; color: #FFF; intensity: 0.3\" position=\"0 3 0\"></a-entity>\n      <!-- Sky -->\n      <a-sky color=\"#00004d\"></a-sky>\n  </a-scene>\n  <script>\n\n    \n    // random data\n    var data = [];\n    \n    for (var i = 0; i < 50; i++) {\n    \tdata.push(Math.random())\n\t\t}\n    // Scale the height of bars\n    var hScale = d3.scale.linear()\n                    .domain([d3.min(data), d3.max(data)])\n                    .range([0, 10])\n    \n    // Set color scale\n    var colors = d3.scale.linear()\n                    .domain([0, data.length*.33, data.length*.66, data.length])\n                    .range(['#B58929','#C61C6F', '#268BD2', '#85992C'])\n    \n    // Select the scene object just like an svg\n    var scene = d3.select(\"a-scene\")\n    \n    // Use d3's enter/update/exit pattern to draw and bind the dom elements\n    var bars = scene.selectAll(\"a-cylinder.bar\")\n    \t\t\t\t\t\t\t\t.data(data)\n    \n    \t\t\t\t\t\tbars.enter()\n                    .append(\"a-cylinder\")\n                    .classed(\"bar\", true)\n\n    \n    // Set attributes on the cubes \n    bars.attr({\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 1 + hScale(d)/2;\n        // lets place the bars all around our camera\n        var radius = 15;\n        //var x = i - data.length/2;\n        var x = radius * Math.cos(i/data.length * 2 * Math.PI);\n        var z = radius * Math.sin(i/data.length * 2 * Math.PI);\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/data.length)*360;\n        return x + \" \" + y + \" \" + z\n      },\n      width: function(d) { return 0.5},\n      depth: function(d) { return 0.9},\n      height: 0,\n      color: function(d,i) { return colors(i);}     \n    })\n        .transition()\n        .attr(\"height\", function(d) { return  hScale(d) })\n        .delay(function(d, i) {\n            return i * 100;\n        })\n        .duration(7000)\n        .ease(\"elastic\")\n    \n    \n  </script>\n</body>\n", "description": "a-frame + d3 test", "created_at": "2015-12-19T06:38:04Z", "updated_at": "2015-12-19T06:46:14Z", "api": ["d3.scale.linear", "d3.min", "d3.max", "d3.select"], "readme": "Testing out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org).\n\nAlthough a-frame has its animation method based on tween.js, we can use d3's transition method to animate the DOM.\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/8be32e6f1f32920ba841'>aframe + d3 test</a>", "uid": "YasufumiSaito_35b59c0b074cac700798"}, {"code": "<!DOCTYPE html>\n<title></title>\n<meta charset=\"utf-8\">\n<script src=\"http://d3js.org/d3.v2.js\"></script>\n<script src=\"http://underscorejs.org/underscore.js\"></script>\n<script src=\"burrow.js\"></script>\n\n<style>\n\n.node circle {\n  fill: steelblue;\n  stroke-width: 1.5px;\n  stroke: #fff;\n}\n\n.node {\n  font: 10px sans-serif;\n}\n\n.link {\n  fill: none;\n  stroke: #ccc;\n  stroke-opacity: 0.6;\n  stroke-width: 1.5px;\n}\n\n</style>\n<body>\n</body>\n<script>\n/* Reingold-Tilford Tree */\n\nvar diameter = 960;\nvar padding = 210;\n\nvar tree = d3.layout.tree()\n    .size([360, diameter / 2 - padding])\n    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n\nvar diagonal = d3.svg.diagonal.radial()\n    .projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + diameter / 2 + \",\" + diameter / 2 + \")\");\n\nd3.selection.prototype.moveToFront = function() {\n  return this.each(function() {\n    this.parentNode.appendChild(this);\n  });\n};\n\nd3.tsv(\"d3.v1.tsv\", function(files) {\n  var nested1 = processData(files);\n  svg.append(\"text\")\n    .attr(\"id\", \"version\")\n    .text(\"v1.29.7\")\n    .attr(\"x\", -diameter*0.4)\n    .attr(\"y\", -diameter*0.4)\n    .style(\"font-size\", \"32px\");\n  treemap(nested1);\n  d3.tsv(\"d3.v2.tsv\", function(files) {\n    var nested2 = processData(files);\n    function update2() {\n      svg.select(\"#version\")\n        .transition().duration(500)\n        .style(\"opacity\", 0)\n        .transition().delay(500)\n        .text(\"2.10.3\")\n        .transition()\n        .style(\"opacity\", 1)\n      treemap(nested2);\n    };\n    setTimeout(update2, 5200);\n    d3.tsv(\"d3.v3.tsv\", function(files2) {\n      var nested3 = processData(files2);\n      function update3() {\n        svg.select(\"#version\")\n        .transition().duration(500)\n        .style(\"opacity\", 0)\n        .transition().delay(500)\n        .text(\"3.0.0pre\")\n        .transition()\n        .style(\"opacity\", 1)\n        treemap(nested3);\n      };\n      setTimeout(update3, 11800);\n    });\n  });\n});\n\nfunction processData(files) {\n  files.forEach(function(d) {\n    d.size = parseInt(d.size);\n    d.keys = d.file.replace(\".js\",\"\").split(\"/\");\n    d.keys.forEach(function(sect,i) {\n      d[\"section\" + i] = sect;\n    });\n  });\n\n  return burrow(files);\n}\n\nfunction treemap(root) {\n  var nodes = tree.nodes(root),\n      links = tree.links(nodes);\n\n  var link = svg.selectAll(\".link\")\n    .data(links, function(d) { return d.source.name + \"-\" + d.target.name;})\n\n  link\n    .transition()\n      .delay(400)\n      .duration(600)\n      .attr(\"d\", diagonal);\n\n  link\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal)\n      .style(\"opacity\", 0)\n      .transition()\n      .duration(300)\n      .delay(function(d,i) {\n        return 24*i;\n      })\n      .style(\"opacity\", 1);\n\n  link.exit()\n    .transition()\n      .duration(400)\n      .style(\"opacity\", 0)\n      .delay(400)\n      .remove();\n\n  var node = svg.selectAll(\".node\")\n      .moveToFront()\n      .data(nodes, function(d) { return d.name + \"-\" + (d.parent ? d.parent.name : \"root\");})\n\n   node.exit()\n    .transition()\n      .duration(400)\n      .style(\"opacity\", 0)\n      .delay(400)\n      .remove();\n\n  node\n    .transition()\n      .delay(400)\n      .duration(800)\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n\n  node.selectAll(\"text\")\n    .transition()\n      .duration(800)\n      .attr(\"font-weight\", null)\n      .attr(\"fill\", \"#555\")\n      .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n      .text(function(d) { return d.name; });\n\n  var g = node\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n\n  g.append(\"circle\")\n    .attr(\"r\", 3)\n    .style(\"opacity\", 0)\n    .transition()\n      .duration(300)\n      .delay(function(d,i) {\n        return 24*i;\n      })\n      .style(\"opacity\", 1);\n\n  g.append(\"text\")\n    .attr(\"dy\", \".31em\")\n    .attr(\"font-weight\", \"bold\")\n    .attr(\"fill\", \"black\")\n    .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n    .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n    .text(function(d) { return d.name; })\n    .style(\"opacity\", 0)\n    .transition()\n      .duration(300)\n      .delay(function(d,i) {\n        return 24*i;\n      })\n      .style(\"opacity\", 1);\n\n};\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n</script>\n", "description": "d3 src tree transitions", "created_at": "2015-09-08T07:42:48Z", "updated_at": "2015-09-08T07:42:48Z", "api": ["d3.layout.tree", "d3.svg.diagonal.radial", "d3.select", "d3.tsv"], "readme": "A comparison of the src directory for three versions of d3. Also see [d3 src tree](http://bl.ocks.org/4076122).\n\nforked from <a href='http://bl.ocks.org/syntagmatic/'>syntagmatic</a>'s block: <a href='http://bl.ocks.org/syntagmatic/4092944'>d3 src tree transitions</a>", "uid": "renecnielsen_02dde03ccff6748520e1"}, {"code": "<!DOCTYPE html>\n<title></title>\n<meta charset=\"utf-8\">\n<script src=\"http://d3js.org/d3.v2.js\"></script>\n<script src=\"http://underscorejs.org/underscore.js\"></script>\n<script src=\"burrow.js\"></script>\n\n<style>\n\n.node circle {\n  fill: #fff;\n  stroke: steelblue;\n  stroke-width: 2px;\n}\n\n.node {\n  font: 12px sans-serif;\n}\n\n.link {\n  fill: none;\n  stroke: #ccc;\n  stroke-width: 1.5px;\n}\n\n</style>\n<body>\n</body>\n<script>\nd3.tsv(\"d3.v3.tsv\", function(files) {\n  files.forEach(function(d) {\n    d.size = parseInt(d.size);\n    d.keys = d.file.replace(\".js\",\"\").split(\"/\");\n    d.keys.forEach(function(sect,i) {\n      d[\"section\" + i] = sect;\n    });\n  });\n\n  var nested = burrow(files);\n\n  treemap(nested.children[11]);\n});\n\n/* Reingold-Tilford Tree */\n\nvar diameter = 960;\n\nvar tree = d3.layout.tree()\n    .size([360, diameter / 2 - 120])\n    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n\nvar diagonal = d3.svg.diagonal.radial()\n    .projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + diameter / 2 + \",\" + diameter / 2 + \")\");\n\nfunction treemap(root) {\n  var nodes = tree.nodes(root),\n      links = tree.links(nodes);\n\n  var link = svg.selectAll(\".link\")\n      .data(links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal);\n\n  var node = svg.selectAll(\".node\")\n      .data(nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n\n  node.append(\"circle\")\n      .attr(\"r\", 2.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n      .text(function(d) { return d.name; });\n};\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n</script>", "description": "d3 src tree", "created_at": "2012-11-15T01:43:47Z", "updated_at": "2016-03-30T00:26:28Z", "api": ["d3.tsv", "d3.layout.tree", "d3.svg.diagonal.radial", "d3.select"], "readme": "A visualization of files in the [src](https://github.com/mbostock/d3/tree/3.0/src) directory of the d3 repository, based on [Reingold-Tilford Tree](http://bl.ocks.org/4063550).\n\n## Data Collection\n\nUse [git](http://git-scm.com/) to clone a repository, then [du](http://www.gnu.org/software/coreutils/manual/html_node/du-invocation.html) to create a tsv with the directory contents.\n\n    git clone git://github.com/mbostock/d3.git\n    (echo -n 'size\\tfile\\n'; du -a d3) > d3.tsv\n\n## Burrow - recursive nesting\n\nBranches may go to an arbitrary depth. [burrow()](https://gist.github.com/4076122#file_burrow.js) creates this data structure from a JSON table. It's still getting tweaked, an example will go here when it's ready.", "uid": "syntagmatic_4076122"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n\n  <body>\n    <script>\n      // Set the dimensions of the canvas / graph\n    var margin = {top: 30, right: 30, bottom: 40, left: 50};\n    var width = 800 - margin.left - margin.right;\n    var height = 300 - margin.top - margin.bottom;\n\n    // Set the ranges\n    var x = d3.time.scale().range([0, width]);\n    var y = d3.scale.linear().range([height, 0]);\n\n    // Define the axes\n    var xAxis = d3.svg.axis().scale(x)\n        .orient(\"bottom\").ticks(5);\n\n    var yAxis = d3.svg.axis().scale(y)\n        .orient(\"left\").ticks(5);\n\n    // Adds the svg canvas\n    var svgContainer = d3.select(\"body\")\n        .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n            .attr(\"transform\", \n                  \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var data = [\n                {\"date\":\"1-Apr-15\", \"close\":140.61},\n                {\"date\":\"15-Apr-15\", \"close\":20.23},\n                {\"date\":\"13-May-15\", \"close\":99.00},\n                {\"date\":\"21-May-15\", \"close\":188.13},\n                {\"date\":\"18-Jun-15\", \"close\":59.13},\n                {\"date\":\"28-Jul-15\", \"close\":75.13},\n                {\"date\":\"8-Aug-15\", \"close\":109.13},\n                {\"date\":\"12-Aug-15\", \"close\":96.13}];\n\n    // Parse the date / time\n    var parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n    // Get the data\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the X Axis\n    svgContainer.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svgContainer.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n    // Draw vertical grid lines\n    svgContainer.append(\"g\")     \n        .attr(\"class\", \"grid\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis\n            .tickSize(-height, 0, 0)\n            .tickFormat(\"\")\n            )\n\n    // Draw horizontal grid lines\n    svgContainer.append(\"g\")     \n        .attr(\"class\", \"grid\")\n        .call(yAxis\n            .tickSize(-width, 0, 0)\n            .tickFormat(\"\")\n            )\n\n    svgContainer.selectAll(\"bar\")\n        .data(data)\n        .enter().append(\"rect\")\n        .style(\"fill\", \"#aec6a8\")\n        .attr(\"x\", function(d) { return x(d.date)-5; })\n        .attr(\"width\", 10)\n        .attr(\"y\", function(d) { return y(d.close); })\n        .attr(\"height\", function(d) { return height - y(d.close); });\n      \n    // Define the line (interpolate to smooth the line)\n    var valueline = d3.svg.line()\n        .interpolate(\"cardinal\")\n        .x(function(d) { return x(d.date); })\n        .y(function(d) { return y(d.close); });\n\n    svgContainer.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n   </script>\n</body>\n", "description": "D3 graphs 2", "created_at": "2015-10-24T06:11:40Z", "updated_at": "2015-10-24T07:28:29Z", "api": ["d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.time.format", "d3.extent", "d3.max", "d3.svg.line"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/dmijalkovic/'>dmijalkovic</a>'s block: <a href='http://bl.ocks.org/dmijalkovic/52fb07194d4b2988cafb'>D3 graphs</a>", "uid": "dmijalkovic_3385b8e7269b5b345558"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Simple tables in D3</title>\n    <meta charset=\"utf-8\">\n    <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n    <script src=\"https://rawgit.com/gka/d3-jetpack/master/d3-jetpack.js\"></script>\n    <style type=\"text/css\">\n    body { font-family: 'Helvetica Neue', Helvetica; font-weight: 300; padding: 20px;}\n    th { text-align: left; }\n    th, td { padding: 0 1em 0.5ex 0;}\n    th.center, td.center { text-align: center; }\n    th.num, td.num { text-align: right; }\n    </style>\n</head>\n<body>\n    <script>\n\n    // the table rows, typically loaded from data file using d3.csv\n    var movies = [\n        { title: \"The Godfather\", year: 1972, length: 175, budget: 6000000, rating: 9.1 },\n        { title: \"The Shawshank Redemption\", year: 1994, length: 142, budget: 25000000, rating: 9.1 },\n        { title: \"The Lord of the Rings: The Return of the King\", year: 2003, length: 251, budget: 94000000, rating: 9 },\n        { title: \"The Godfather: Part II\", year: 1974, length: 200, budget: 13000000, rating: 8.9 },\n        { title: \"Shichinin no samurai\", year: 1954, length: 206, budget: 500000, rating: 8.9 },\n        { title: \"Buono, il brutto, il cattivo, Il\", year: 1966, length: 180, budget: 1200000, rating: 8.8 },\n        { title: \"Casablanca\", year: 1942, length: 102, budget: 950000, rating: 8.8 },\n        { title: \"The Lord of the Rings: The Fellowship of the Ring\", year: 2001, length: 208, budget: 93000000, rating: 8.8 },\n        { title: \"The Lord of the Rings: The Two Towers\", year: 2002, length: 223, budget: 94000000, rating: 8.8 },\n        { title: \"Pulp Fiction\", year: 1994, length: 168, budget: 8000000, rating: 8.8 }\n    ];\n\n    // column definitions\n    var columns = [\n        { head: 'Movie title', cl: 'title', html: \u0192('title') },\n        { head: 'Year', cl: 'center', html: \u0192('year') },\n        { head: 'Length', cl: 'center', html: \u0192('length', length()) },\n        { head: 'Budget', cl: 'num', html: \u0192('budget', d3.format('$,')) },\n        { head: 'Rating', cl: 'num', html: \u0192('rating', d3.format('.1f')) }\n    ];\n\n    // create table\n    var table = d3.select('body')\n        .append('table');\n\n    // create table header\n    table.append('thead').append('tr')\n        .selectAll('th')\n        .data(columns).enter()\n        .append('th')\n        .attr('class', \u0192('cl'))\n        .text(\u0192('head'));\n\n    // create table body\n    table.append('tbody')\n        .selectAll('tr')\n        .data(movies).enter()\n        .append('tr')\n        .selectAll('td')\n        .data(function(row, i) {\n            return columns.map(function(c) {\n                // compute cell values for this specific row\n                var cell = {};\n                d3.keys(c).forEach(function(k) {\n                    cell[k] = typeof c[k] == 'function' ? c[k](row,i) : c[k];\n                });\n                return cell;\n            });\n        }).enter()\n        .append('td')\n        .html(\u0192('html'))\n        .attr('class', \u0192('cl'));\n\n    function length() {\n        var fmt = d3.format('02d');\n        return function(l) { return Math.floor(l / 60) + ':' + fmt(l % 60) + ''; };\n    }\n\n\n    </script>\n</body>\n</html>\n\n\n", "description": "simple tables in D3", "created_at": "2015-04-24T13:15:54Z", "updated_at": "2016-01-30T04:32:41Z", "api": ["d3.format", "d3.select", "d3.keys"], "readme": "Read more about this in [my blog post](http://vis4.net/blog/posts/making-html-tables-in-d3-doesnt-need-to-be-a-pain/).", "uid": "gka_17ee676dc59aa752b4e6"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n  </style>\n</head>\n\n<body>\n  \n   <a-scene>\n      <!--<a-cube position=\"0 0 -4\" depth=1 height=0.1 width=100 color=\"#fff\"></a-cube>-->\n      <a-light color=\"#da47da\" position=\"0 0 0\" type=\"ambient\"></a-light>\n      <a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n     <a-entity position=\"0 0 0\" rotation=\"0 0 0\">\n    \t <a-entity camera look-controls wasd-controls></a-entity>\n     </a-entity>\n    \t\n      <!-- Sky -->\n      <a-sky color=\"#c8f7f0\"></a-sky>\n  </a-scene>\n  \n  <script>\n    // fake data\n    var data = [ 10, 20, 30, 15, 25, 35, 40,\n                45, 50, 70, 100, 120, 130,\n               12, 18, 22, 29, 33, 44, 59, 200]\n    \n    var hscale = d3.scale.linear()\n      .domain([0, d3.max(data)])\n      .range([0,5])\n    \n    var scene = d3.select(\"a-scene\");\n    \n    var cubes = scene.selectAll(\"a-cube.bar\")\n      .data(data)\n    cubes.enter().append(\"a-cube\").classed(\"bar\", true)\n    cubes.attr({\n      position: function(d,i) {\n        var radius = 10;\n        var theta = (i/data.length) * (2 * Math.PI)\n        var x = radius * Math.cos(theta);\n        var y = hscale(d)/2;\n        var z = radius * Math.sin(theta);\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var y = -360 * i/data.length;\n        var z = 0;\n        return x + \" \" + y + \" \" + z\n      },\n      height: function(d,i) {\n        return hscale(d)\n      }\n    })\n  </script>\n</body>\n", "description": "D3-copy-Enjalot", "created_at": "2016-04-30T08:10:30Z", "updated_at": "2016-04-30T08:10:30Z", "api": ["d3.scale.linear", "d3.max", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/e366fba2b4626271dcceb3aeed7089e5'>D3-copy-Enjalot</a>", "uid": "rvross_ac78fbba1282c7b228253b97b0090e6b"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <script src=\"aframe-text-component.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; background-color: white;\n    }\n    .a-canvas {\n      height: calc(100% - 120px) !important;\n    }\n    .a-enter-vr {\n      bottom: 140px;\n    }\n    #hud {\n      position: absolute;\n      bottom: 0;\n      height: 120px;\n      width: 100%;\n    }\n    svg#path2d {\n      position:absolute;\n      left:0;\n      bottom: 0;\n      height: 120px;\n      width: 300px;\n    }\n  </style>\n</head>\n\n\n<body>\n  <div id=\"scene\">\n  <a-scene>\n      <!-- Camera with customized cursor -->\n      \n      <a-light color=\"#da47da\" position=\"0 5 0\" type=\"ambient\"></a-light>\n      <a-entity id=\"vehicle\">\n        <a-entity id=\"camera\" camera look-controls wasd-controls></a-entity>\n      </a-entity>\n    \t<a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n    \n      <!-- Sky -->\n      <a-sky color=\"#ecfcf4\"></a-sky>\n  </a-scene>\n  </div>\n  <div id=\"hud\">\n    <svg id=\"path2d\"><svg>\n  </div>\n    \n  <script>\n    // fake data\n    var data = [ 10, 20, 30, 15, 25, 35, 40,\n                45, 50, 70, 100, 120, 130,\n               12, 18, 22, 29, 33, 44, 59, 200, 10]\n    \n    // we scale the height of our bars using d3's linear scale\n    var height3d = 3;\n    var hscale = d3.scale.linear()\n    \t.domain([0, d3.max(data)])\n    \t.range([0, height3d])\n    \n    function xz(i) {\n        // lets place the bars all around our camera\n        var radius = 5;\n        var theta = i/data.length * 2 * Math.PI - 3/4*Math.PI\n        var x = radius * Math.cos(theta)\n        var z = radius * Math.sin(theta)\n        return {x:x,  z:z}\n    }\n    \n    var toDomain = d3.scale.linear()\n        .domain([0, 1]).range(hscale.domain())\n    \n    var camera = d3.select(\"#vehicle\")\n    .attr(\"position\", \"0 1 0\")\n    .attr(\"rotation\", \"0 45 0\")\n    \n    // 2d line\n    var height2d = 100;\n    var width2d = 300;\n    \n    var yscale = d3.scale.linear()\n    .domain([0, d3.max(data)])\n    .range([height2d,0])\n\t\tvar line = d3.svg.line()\n    .x(function(d,i) {\n      return width2d * i/data.length;\n    })\n    .y(function(d,i) {\n      return yscale(d);\n    })\n    //.interpolate(\"basis\")\n    .interpolate(\"cardinal\")\n    \n    var svg = d3.select(\"svg#path2d\")\n    \n    svg.selectAll(\"rect.bar2d\").data(data)\n    .enter().append(\"rect\").classed(\"bar2d\", true)\n    .attr({\n      x: function(d,i) { return i/data.length * width2d - width2d/data.length/4},\n      y: function(d,i) { \n        return yscale(d) \n      },\n      width: width2d/data.length/2,\n      height: function(d,i) { \n        return height2d - yscale(d)\n      },\n      \"fill-opacity\": 0.1\n    })\n    var path2d = svg.append(\"path\").attr({\n      d: line(data),\n      fill: \"none\",\n      stroke: \"#111\",\n      \"stroke-width\": 3\n    })\n    \n    var playHead = svg.append(\"line\")\n    .classed(\"play-head\", true)\n    .attr({\n      stroke: \"#f11\",\n      y1: 0,\n      y2: height2d,\n    })\n    \n    var path = path2d.node()\n    var totalLength = path.getTotalLength();\n    \n    var trackn2d = 200;\n    var track2ddata = d3.range(trackn2d).map(function(d,i) {\n      var t = i/trackn2d;\n      var p = path.getPointAtLength(t*totalLength)\n      var x = p.x //t * width2d - width2d/trackn2d/4\n      var y = 1 + height2d - p.y/height2d * height2d;\n      \n      return {x: x, y: y}\n    })\n    svg.selectAll(\"rect.track2d\").data(track2ddata)\n    .enter().append(\"rect\").classed(\"track2d\", true)\n    .attr({\n      x: function(d,i) { return d.x},\n      y: function(d,i) { \n        return height2d - d.y\n      },\n      width: width2d/trackn2d/2,\n      height: function(d,i) { \n        return d.y\n      },\n      \"fill-opacity\": 0.3,\n      fill: \"blue\"\n    })\n    \n    // we select the scene object just like an svg\n    var scene = d3.select(\"a-scene\")\n    \n    // visualize the camera tracks\n    var track = function(t) {\n      //var y = 1.5 + hscale(data[Math.round(t * data.length)])\n      var p2d = path.getPointAtLength(t*totalLength)\n      var y = 1.3 + height3d -  p2d.y/height2d * height3d;\n\t\t\t//console.log(t, t*totalLength, y)\n      var tx = p2d.x/width2d\n      var p = xz(tx*data.length);\n      return {x: p.x, y: y, z: p.z}\n    }\n    \n    var tracknum = 200;\n    var trackdata = d3.range(tracknum).map(function(i) {\n      var p = track(i/tracknum)\n      return p\n    })\n    var tracks = scene.selectAll(\"a-cube.track\").data(trackdata)\n    tracks.enter().append(\"a-cube\").classed(\"track\", true)\n    tracks.attr({\n\t\t\tposition: function(d,i) { return d.x + \" \" + d.y + \" \" + d.z},\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/tracknum)*360;\n        return x + \" \" + y + \" \" + z\n      },\n      width: 0.05,\n      height: 0.05,\n      depth: 0.5,\n      opacity: 0.1\n    })\n    ////\n    \n\n    d3.timer(function(elapsed) {\n\n      dt = (elapsed * 0.0005 % 10) / 10;\n      var p = track(dt);\n      //var p = xz(dt*data.length)\n      //var y = 1.5 + hscale(data[Math.floor(dt * data.length)])\n      //var y = 1.5 + path.getPointAtLength(dt*totalLength).y/100;\n      p.y += 0.5;\n      \n      var r = {\n        x: 0,\n        y: -dt*360 - 45,\n        z: 0\n      }\n      camera.attr({\n        position: p.x + \" \" + p.y + \" \" + p.z,\n        rotation: r.x + \" \" + r.y + \" \" + r.z\n      })\n      \n      playHead.attr({\n        x1: dt*100,\n        x2: dt*100,\n        y1: 0,\n        y2: 100\n      })\n    })\n\n    \n    // we use d3's enter/update/exit pattern to draw and bind our dom elements\n    var bars = scene.selectAll(\"a-cube.bar\").data(data)\n    bars.enter().append(\"a-cube\").classed(\"bar\", true)\n\n    // we set attributes on our cubes to determine how they are rendered\n    bars.attr({\n      position: function(d,i) {\n        var y = 1 + hscale(d)/2;\n        var p = xz(i);\n        return p.x + \" \" + y + \" \" + p.z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/data.length)*360 - 45;\n        return x + \" \" + y + \" \" + z\n      },\n      width: function(d) { return 0.5},\n      depth: function(d) { return 0.9},\n      height: function(d) { return hscale(d)},\n      opacity: function(d,i) { return 0.6 + (i/data.length) * 0.4},\n      //metalness: function(d,i) { return i/data.length}\n    })\n    .on(\"click\", function(d,i) {\n      console.log(\"click\", i,d)\n    })\n    .on(\"mouseenter\", function(d,i) {\n      // this event gets fired continuously as long as the cursor\n      // is over the element. we only want trigger our animation the first time\n      if(this.hovering) return;\n      console.log(\"hover\", i,d)\n      this.hovering = true;\n      d3.select(this).transition().duration(1000)\n      .attr({\n        metalness: 0.5,\n        width: 2\n      })\n    })\n    .on(\"mouseleave\", function(d,i) {\n      console.log(\"leave\",i,d)\n      this.hovering = false;\n      d3.select(this).transition()\n      .attr({\n        metalness: 0,\n        width: 0.5\n      })\n    }) \n    \n    \n    var labels = scene.selectAll(\"a-entity.label\").data(data)\n    labels.enter().append(\"a-entity\").classed(\"label\", true)\n    .attr({\n      text: function(d,i){  return \"text: \" + i },\n      material: \"color: #000\",\n      size: 3\n    })\n    labels.attr({\n\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 0.3;\n        // lets place the bars all around our camera\n        var radius = 5;\n        var theta = i/data.length * 2 * Math.PI - 3/4*Math.PI - 0.07\n        var x = radius * Math.cos(theta)\n        var z = radius * Math.sin(theta)\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = +45 -(i/data.length)*360;\n        return x + \" \" + y + \" \" + z\n      },\n    })\n    \n    \n    \n  </script>\n</body>\n", "description": "aframe + d3 test: camera", "created_at": "2015-12-21T21:32:17Z", "updated_at": "2015-12-24T17:34:14Z", "api": ["d3.scale.linear", "d3.max", "d3.select", "d3.svg.line", "d3.range", "d3.timer"], "readme": "Testing out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org). use **WASD** keys to \"walk\" around the space.\n\nSince AFrame works with DOM elements, you can use d3's selection API to generate and modify 3D elements, as well as handle \"mouse\" events (including the VR friendly \"fuse cursor\") as if it was SVG.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/8be32e6f1f32920ba841'>aframe + d3 test</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/1fd196cd99f8d58a56d3'>aframe + d3 test: text labels</a>", "uid": "enjalot_ce9a88c24e5e11563e06"}, {"code": "<!DOCTYPE html>\n<style>\n\tbody {\n\t\tfont-family: 'Open Sans', sans-serif;\n    font-size: 12px;\n\t}\n  .graph {\n    text-align: center;\n  }\n  svg {\n    background-color: #333947;\n  }\n\t.title {\n    font-size: 16px;\n\t\tfont-weight: bold;\n    fill: #fff;\n\t}\n  .caption {\n    fill: #ccc;\n  }\n\t.axis path,\n\t.axis line {\n    fill: none;\n    stroke: #eee;\n    shape-rendering: crispEdges;\n\t}\n  .axis text {\n    fill: #fff;\n  }\n\t.loading {\n    font-size: 15px;\n\t}\n  .plot {\n    fill-opacity: 0.75;\n  }\n\n  .conflict0 { fill: #4990BF; }\n\t.conflict1 { fill: #FF6363; }\n\t.conflict2 { fill: #738b8c; }\n\t.conflict3 { fill: #BC63FF; }\n\t.conflict4 { fill: #EFFF63; }\n\t.conflict5 { fill: #FF3D3D; }\n\t.conflict6 { fill: #496EBF; }\n  .conflict7 { fill: #cda2a2; }\n  .conflict8 { fill: #E563FF; }\n  .conflict9 { fill: #63D8FF; }\n\n  .circle {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n  .circle:hover {\n    stroke: #000;\n    stroke-width: 2px;\n  }\n  .title-tip,\n  .body-tip {\n    line-height: 1;\n    padding: 12px;\n    background: #000;\n    color: #fff;\n    line-height: 14px;\n    border-radius: 2px;\n    pointer-events: none;\n    text-align: center;\n  }\n\n  .body-tip {\n    max-width: 250px;\n  }\n\n  .title-tip div {\n    font-size: 10px;\n    color: #ccc;\n  }\n\n  /* Creates a small triangle extender for the tooltip */\n  .title-tip:after {\n    box-sizing: border-box;\n    display: inline;\n    font-size: 10px;\n    width: 100%;\n    line-height: 1;\n    color: #000;\n    position: absolute;\n    pointer-events: none;\n  }\n\n  .title-tip.n:after {\n    content: \"\\25BC\";\n    margin: -1px 0 0 0;\n    top: 100%;\n    left: 0;\n    text-align: center;\n  }\n\n  .button {\n    height: 25px;\n    width: 125px;\n    stroke: #ccc;\n    stroke-width: 2px;\n    fill: #333947;\n  }\n\n  .button:hover,\n  .button-text:hover {\n    cursor: pointer;\n  }\n\n  .button-active {\n    stroke: #fff;\n    fill: #fff;\n  }\n\n  .button-text {\n    fill: #ccc;\n  }\n\n  .button-text-active {\n    fill: #000;\n  }\n</style> \n\n<div id=\"graph\" class=\"graph\"></div>\n \n<script src=\"http://d3js.org/d3.v2.min.js\"></script>\n<script src=\"http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js\"></script>\n\n<script>\n  var w = 1500;\n  var h = 800;\n  var pad = 40;\n  var above = 125;\n  var left = 225;\n\n  var titleTip = d3.tip()\n                   .attr('class', 'title-tip')\n                   .offset([-3, 0])\n                   .html(function(d) {\n                    return \"<strong>\" + d.title + \"</strong><div>\" + d.pageedits + \" page edits</div>\";\n                   });\n\n  var bodyTip = d3.tip()\n                  .attr('class', 'body-tip')\n                  .html(function(d) { return d.description; });\n   \n  var svg = d3.select(\"#graph\")\n              .append(\"svg\")\n              .attr(\"width\", w)\n              .attr(\"height\", h)\n              .call(titleTip)\n              .call(bodyTip);\n\n  var x = d3.scale.linear().domain([2001, 2006]).range([left, w-pad]);\n  var y = d3.scale.linear().domain([0, 9]).range([above, h-pad-above]);\n   \n  var xAxis = d3.svg.axis().scale(x).orient(\"bottom\")\n    .ticks(6)\n    .tickFormat(d3.format(\"d\"))\n\n  var yAxis = d3.svg.axis().scale(y).orient(\"left\")\n    .ticks(10)\n    .tickFormat(function (d, i) {\n      return ['Technicality','Political','Ethical','Ethnic','International Words','Religion','Culture','Animal Rights','Star Wars','Other'][d];\n    });\n\n  svg.append(\"text\")\n    .attr(\"class\", \"title\")\n    .attr(\"x\", w/2)\n    .attr(\"y\", above/3)\n    .attr(\"text-anchor\", \"middle\")\n    .text(\"Most Debated Wikipedia Articles (2010)\");\n\n  svg.append(\"text\")\n    .attr(\"class\", \"caption\")\n    .attr(\"x\", w/2)\n    .attr(\"y\", above/3+18)\n    .attr(\"text-anchor\", \"middle\")\n    .text(\"Click each circle to read more!\");\n   \n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", \"translate(0, \"+(h-pad)+\")\")\n      .call(xAxis);\n   \n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", \"translate(\"+(left-pad)+\", 0)\")\n      .call(yAxis);\n   \n  svg.append(\"text\")\n      .attr(\"class\", \"loading\")\n      .text(\"Loading...\")\n      .attr(\"x\", function () { return w/2; })\n      .attr(\"y\", function () { return h/2-5; });\n   \n  d3.json(\"data.json\", function (data) {\n    var max_r = d3.max(data.map(function (d) { return d.pageedits; }));\n    var r1 = d3.scale.linear()\n              .domain([0, d3.max(data, function (d) { return d.pageedits; })])\n              .range([3, 100]);\n\n    var r2 = d3.scale.linear()\n              .domain([0, d3.max(data, function (d) { return d.pagesofdiscussion; })])\n              .range([3, 100]);\n\n    var displayCircles = function(flag) {\n      data.sort(function(a,b) {\n        var i,j;\n        if (flag == 0) {\n          i = a.pageedits;\n          j = b.pageedits;\n        } else {\n          i = a.pagesofdiscussion;\n          j = b.pagesofdiscussion;\n        }\n        if (i > j)\n          return -1;\n        if (i < j)\n          return 1;\n        return 0;\n      });\n\n      svg.selectAll(\"circle\").remove();\n      svg.selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", function (d) { return \"circle conflict\"+d.conflicttype; })\n        .attr(\"cx\", function (d) { return x(d.creationdate); })\n        .attr(\"cy\", function (d) { return y(d.conflicttype); })\n        .on('mouseover', titleTip.show)\n        .on('mouseout', function(d) {\n          titleTip.hide();\n          bodyTip.hide(d);\n        })\n        .on('click', function (d) {\n          titleTip.hide();\n          bodyTip.show(d);\n        })\n        .transition()\n        .duration(800)\n        .attr(\"r\", function (d) {\n          if (flag == 0) {\n            return r1(d.pageedits);\n          } else {\n            return r2(d.pagesofdiscussion);\n          }\n        });\n\n      titleTip.html(function(d) {\n        if (flag == 0) {\n          return \"<strong>\" + d.title + \"</strong><div>\" + d.pageedits + \" page edits</div>\";\n        } else {\n          return \"<strong>\" + d.title + \"</strong><div>\" + d.pagesofdiscussion + \" pages of discussion</div>\";\n        }\n      });\n    }\n\n    var toggleButton = function (flag) {\n      if (flag == 0) {\n        button1.attr(\"class\", \"button button-active\");\n        button2.attr(\"class\", \"button\");\n        buttonText1.attr(\"class\", \"button-text button-text-active\");\n        buttonText2.attr(\"class\", \"button-text\");\n      } else {\n        button1.attr(\"class\", \"button\");\n        button2.attr(\"class\", \"button button-active\");\n        buttonText1.attr(\"class\", \"button-text\");\n        buttonText2.attr(\"class\", \"button-text button-text-active\");\n      }\n    }\n \n    svg.selectAll(\".loading\").remove();\n \n    displayCircles(0);\n\n    var button1 = svg.append(\"rect\")\n                     .attr(\"class\", \"button button-active\")\n                     .attr(\"height\", 25)\n                     .attr(\"width\", 125)\n                     .attr(\"x\", left/2)\n                     .attr(\"y\", above/2)\n                     .attr(\"rx\", 5)\n                     .attr(\"ry\", 5)\n                     .on(\"click\", function() {\n                        toggleButton(0);\n                        return displayCircles(0);\n                      });\n\n    var buttonText1 = svg.append(\"text\")\n                     .attr(\"class\", \"button-text button-text-active\")\n                     .attr(\"x\", left/2 + 63)\n                     .attr(\"y\", above/2 + 16)\n                     .attr(\"text-anchor\", \"middle\")\n                     .text(\"Page Edits\")\n                     .on(\"click\", function() {\n                        toggleButton(0);\n                        return displayCircles(0);\n                      });\n\n    var button2 = svg.append(\"rect\")\n                     .attr(\"class\", \"button\")\n                     .attr(\"height\", 25)\n                     .attr(\"width\", 125)\n                     .attr(\"x\", left/2+125)\n                     .attr(\"y\", above/2)\n                     .attr(\"rx\", 5)\n                     .attr(\"ry\", 5)\n                     .on(\"click\", function() {\n                        toggleButton(1);\n                        return displayCircles(1);\n                      });\n\n    var buttonText2 = svg.append(\"text\")\n                     .attr(\"class\", \"button-text\")\n                     .attr(\"x\", left/2 + 188)\n                     .attr(\"y\", above/2 + 16)\n                     .attr(\"text-anchor\", \"middle\")\n                     .text(\"Pages of Discussion\")\n                     .on(\"click\", function() {\n                        toggleButton(1);\n                        return displayCircles(1);\n                      });\n  });\n</script>", "description": "d3.js wiki visualization", "created_at": "2016-02-07T11:14:22Z", "updated_at": "2016-02-07T11:14:22Z", "api": ["d3.tip", "d3.select", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.json", "d3.max"], "readme": "\n\nforked from <a href='http://bl.ocks.org/lilyc5459/'>lilyc5459</a>'s block: <a href='http://bl.ocks.org/lilyc5459/a35687613ab0f4991f37'>d3.js wiki visualization</a>", "uid": "CBasis_9bae6529ccab4b902a50"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; background-color: white;}\n   \n  </style>\n</head>\n\n<body>\n  <a-scene>\n      <!-- Camera with customized cursor -->\n      <a-camera position=\"0 1.8 0\" cursor-visible=\"true\" cursor-scale=\"2\" cursor-color=\"#4CC3D9\" cursor-offset=\"2\" cursor-maxdistance=\"100\" cursor-opacity=\"0.5\" cursor-fuse=\"true\"></a-camera>\n      <a-light color=\"#da47da\" position=\"0 5 0\" type=\"ambient\"></a-light>\n    \t<a-entity camera look-controls wasd-controls></a-entity>\n    \t<a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n      <!-- Sky -->\n      <a-sky color=\"#c8f8e0\"></a-sky>\n  </a-scene>\n  <script>\n    \n    // fake data\n    var data = [ 10, 20, 30, 15, 25, 35, 40,\n                45, 50, 70, 100, 120, 130,\n               12, 18, 22, 29, 33, 44, 59, 200]\n    \n    // we scale the height of our bars using d3's linear scale\n    var hscale = d3.scale.linear()\n    \t.domain([0, d3.max(data)])\n    \t.range([0, 3])\n    \n    // we select the scene object just like an svg\n    var scene = d3.select(\"a-scene\")\n    \n    // we use d3's enter/update/exit pattern to draw and bind our dom elements\n    var bars = scene.selectAll(\"a-cube.bar\").data(data)\n    bars.enter().append(\"a-cube\").classed(\"bar\", true)\n    // we set attributes on our cubes to determine how they are rendered\n    bars.attr({\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 1 + hscale(d)/2;\n        // lets place the bars all around our camera\n        var radius = 5;\n        //var x = i - data.length/2;\n        var x = radius * Math.cos(i/data.length * 2 * Math.PI)\n        var z = radius * Math.sin(i/data.length * 2 * Math.PI)\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/data.length)*360;\n        return x + \" \" + y + \" \" + z\n      },\n      width: function(d) { return 0.5},\n      depth: function(d) { return 0.9},\n      height: function(d) { return hscale(d)},\n      opacity: function(d,i) { return 0.6 + (i/data.length) * 0.4},\n      //metalness: function(d,i) { return i/data.length}\n    })\n    .on(\"click\", function(d,i) {\n      console.log(\"click\", i,d)\n    })\n    .on(\"mouseenter\", function(d,i) {\n      // this event gets fired continuously as long as the cursor\n      // is over the element. we only want trigger our animation the first time\n      if(this.hovering) return;\n      console.log(\"hover\", i,d)\n      this.hovering = true;\n      d3.select(this).transition().duration(1000)\n      .attr({\n        metalness: 0.5,\n        width: 2\n      })\n    })\n    .on(\"mouseleave\", function(d,i) {\n      console.log(\"leave\",i,d)\n      this.hovering = false;\n      d3.select(this).transition()\n      .attr({\n        metalness: 0,\n        width: 0.5\n      })\n    })    \n    \n  </script>\n</body>\n", "description": "aframe + d3 test", "created_at": "2015-12-18T18:15:55Z", "updated_at": "2015-12-19T06:57:36Z", "api": ["d3.scale.linear", "d3.max", "d3.select"], "readme": "Testing out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org).\n\nSince AFrame works with DOM elements, you can use d3's selection API to generate and modify 3D elements, as well as handle \"mouse\" events (including the VR friendly \"fuse cursor\") as if it was SVG.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "enjalot_8be32e6f1f32920ba841"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>reprojection selection</title>\n  <meta charset=\"utf-8\" />\n\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n\n</head>\n\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 90%;\n    width: 90%;\n    top: 10%;\n    position: absolute;\n  }\n\n  #title {\n    padding: 20px;\n  }\n\n  .bluesquare {\n    fill: green;\n    stroke: gray;\n    stroke-width: 1px;\n  }\n\n  button.marker {\n    position: fixed;\n    z-index: 1;\n    bottom: 150px;\n    left: 150px;\n  }\n\n  .countryborders{\n    fill:#99d8c9\n  }\n\n  .reproject{\n    margin-top:-10;\n  }\n\n.reprojectshp{\n  margin-top:-10;\n}\n\n#projection-menu{\n  margin-top:10px;\n}\n\n  </style>\n\n<select id=\"projection-menu\"></select>\n<script>\n  function makeSomeMaps() {\n\nvar map =d3.carto.map();\n  d3.select('#map')\n    .call(map);\n\nmap.mode('globe');\nmap.zoom().scale(300)\n\nmap.refresh();\n\n    countryLayer = d3.carto.layer.geojson();\n    countryLayer\n    .path(\"./world.geojson\")\n    .label(\"Countries\")\n    .cssClass(\"countryborders\")\n    .renderMode(\"svg\");\n\n\n  map.addCartoLayer(countryLayer);\n\nd3.select(\"#map\").append(\"button\").attr(\"class\", \"reproject\").html(\"Projection Mode\").on(\"click\", reproject);\n\nd3.select(\"#map\").append(\"button\").attr(\"class\", \"reprojectshp\").html(\"Sphere mode\").on(\"click\", sphereit);\n\nfunction reproject(){\n  var projection = d3.geo.conicEquidistant()\n  .center([0, 0])\n  .scale(200)\n  .translate(map.zoom().translate())\n  .precision(.1);\n\nmap.mode('projection')\n  map.projection(projection);\n  map.refresh();\n\n};\n\n// this is the funciton getting called by the sphere thing\nfunction sphereit(){\n  map.mode('globe');\n  map.refresh;\n\n};\n\n// big list of d3.geo projections from http://bl.ocks.org/mbostock/3711652\nvar options = [\n  {name: \"Aitoff\", projection: d3.geo.aitoff()},\n  {name: \"Albers\", projection: d3.geo.albers().scale(145).parallels([20, 50])},\n  {name: \"August\", projection: d3.geo.august().scale(60)},\n  {name: \"Baker\", projection: d3.geo.baker().scale(100)},\n  {name: \"Boggs\", projection: d3.geo.boggs()},\n  {name: \"Bonne\", projection: d3.geo.bonne().scale(120)},\n  {name: \"Bromley\", projection: d3.geo.bromley()},\n  {name: \"Collignon\", projection: d3.geo.collignon().scale(93)},\n  {name: \"Craster Parabolic\", projection: d3.geo.craster()},\n  {name: \"Eckert I\", projection: d3.geo.eckert1().scale(165)},\n  {name: \"Eckert II\", projection: d3.geo.eckert2().scale(165)},\n  {name: \"Eckert III\", projection: d3.geo.eckert3().scale(180)},\n  {name: \"Eckert IV\", projection: d3.geo.eckert4().scale(180)},\n  {name: \"Eckert V\", projection: d3.geo.eckert5().scale(170)},\n  {name: \"Eckert VI\", projection: d3.geo.eckert6().scale(170)},\n  {name: \"Eisenlohr\", projection: d3.geo.eisenlohr().scale(60)},\n  {name: \"Equirectangular (Plate Carr\u00e9e)\", projection: d3.geo.equirectangular()},\n  {name: \"Hammer\", projection: d3.geo.hammer().scale(165)},\n  {name: \"Hill\", projection: d3.geo.hill()},\n  {name: \"Goode Homolosine\", projection: d3.geo.homolosine()},\n  {name: \"Kavrayskiy VII\", projection: d3.geo.kavrayskiy7()},\n  {name: \"Lambert cylindrical equal-area\", projection: d3.geo.cylindricalEqualArea()},\n  {name: \"Lagrange\", projection: d3.geo.lagrange().scale(120)},\n  {name: \"Larriv\u00e9e\", projection: d3.geo.larrivee().scale(95)},\n  {name: \"Laskowski\", projection: d3.geo.laskowski().scale(120)},\n  {name: \"Loximuthal\", projection: d3.geo.loximuthal()},\n  // {name: \"Mercator\", projection: d3.geo.mercator().scale(490 / 2 / Math.PI)},\n  {name: \"Miller\", projection: d3.geo.miller().scale(100)},\n  {name: \"McBryde\u2013Thomas Flat-Polar Parabolic\", projection: d3.geo.mtFlatPolarParabolic()},\n  {name: \"McBryde\u2013Thomas Flat-Polar Quartic\", projection: d3.geo.mtFlatPolarQuartic()},\n  {name: \"McBryde\u2013Thomas Flat-Polar Sinusoidal\", projection: d3.geo.mtFlatPolarSinusoidal()},\n  {name: \"Mollweide\", projection: d3.geo.mollweide().scale(165)},\n  {name: \"Natural Earth\", projection: d3.geo.naturalEarth()},\n  {name: \"Nell\u2013Hammer\", projection: d3.geo.nellHammer()},\n  {name: \"Polyconic\", projection: d3.geo.polyconic().scale(100)},\n  {name: \"Robinson\", projection: d3.geo.robinson()},\n  {name: \"Sinusoidal\", projection: d3.geo.sinusoidal()},\n  {name: \"Sinu-Mollweide\", projection: d3.geo.sinuMollweide()},\n  {name: \"van der Grinten\", projection: d3.geo.vanDerGrinten().scale(75)},\n  {name: \"van der Grinten IV\", projection: d3.geo.vanDerGrinten4().scale(120)},\n  {name: \"Wagner IV\", projection: d3.geo.wagner4()},\n  {name: \"Wagner VI\", projection: d3.geo.wagner6()},\n  {name: \"Wagner VII\", projection: d3.geo.wagner7()},\n  {name: \"Winkel Tripel\", projection: d3.geo.winkel3()}\n];\n\nvar menu = d3.select(\"#projection-menu\")\n    .on(\"change\", change);\n\nmenu.selectAll(\"option\")\n    .data(options)\n  .enter().append(\"option\")\n    .text(function(d) { return d.name; });\n\n\n  function change(){\n    console.log(options[this.selectedIndex].projection);\n\nvar projector = options[this.selectedIndex].projection;\n\n      var projection = projector\n      .center([0, 0])\n      .scale(100)\n    //  .translate(map.zoom().translate())\n      .precision(.1);\n\n      map.projection(projection);\n      map.refresh();\n\n\n\n  }\n\n  }\n\n\n</script>\n<body onload=\"makeSomeMaps()\">\n\n<div id=\"map\"></div>\n\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"/mpmckenna8/raw/55557f2cc06ae603f242/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"/mpmckenna8/raw/55557f2cc06ae603f242/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"/mpmckenna8/raw/55557f2cc06ae603f242/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>\n", "description": "reproject d3.carto.map", "created_at": "2014-08-01T18:22:02Z", "updated_at": "2015-08-29T14:04:49Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.geojson", "d3.geo.conicEquidistant", "d3.geo.aitoff", "d3.geo.albers", "d3.geo.august", "d3.geo.baker", "d3.geo.boggs", "d3.geo.bonne", "d3.geo.bromley", "d3.geo.collignon", "d3.geo.craster", "d3.geo.eckert1", "d3.geo.eckert2", "d3.geo.eckert3", "d3.geo.eckert4", "d3.geo.eckert5", "d3.geo.eckert6", "d3.geo.eisenlohr", "d3.geo.equirectangular", "d3.geo.hammer", "d3.geo.hill", "d3.geo.homolosine", "d3.geo.kavrayskiy7", "d3.geo.cylindricalEqualArea", "d3.geo.lagrange", "d3.geo.larrivee", "d3.geo.laskowski", "d3.geo.loximuthal", "d3.geo.mercator", "d3.geo.miller", "d3.geo.mtFlatPolarParabolic", "d3.geo.mtFlatPolarQuartic", "d3.geo.mtFlatPolarSinusoidal", "d3.geo.mollweide", "d3.geo.naturalEarth", "d3.geo.nellHammer", "d3.geo.polyconic", "d3.geo.robinson", "d3.geo.sinusoidal", "d3.geo.sinuMollweide", "d3.geo.vanDerGrinten", "d3.geo.vanDerGrinten4", "d3.geo.wagner4", "d3.geo.wagner6", "d3.geo.wagner7", "d3.geo.winkel3"], "readme": "Trying to make a little page to reproject data using d3.carto jam and it kind of works.\n\nThings which could make this a little nicer:\n\n-Adding some graticules.\n\n-Adding different kinds of layers.\n\n-Figure out what the errors are about the paths which get multiplied when panning in globe mode.\n\nFor some much cleaner better javascript examples of how to do similar things w/ d3 please see Jason Davies stuff like http://www.jasondavies.com/maps/transition/ and Mike Bostocks stuff like http://bl.ocks.org/mbostock/3711652.\n\nReally I'm just trying to figure out how to kind of do some things they did w/ d3-carto-map.\n\nAs always let me know if there is anything silly in my code or how I could make it better.\n", "uid": "mpmckenna8_f6245adc7a3cd3930a11"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Small Multiples with Maps</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    fill: none;\n    stroke: lightgray;\n    stroke-width: 1px;\n  }\n  \n  .smallmap {\n    width: 33%;\n    float: left;\n    border: 1px lightgray solid;\n  }\n\n</style>\n<script>\n    function makeSomeMaps() {\n\n    mapImageArray = [];\n    map = d3.carto.map();\n    d3.select(\"#map\").call(map);\n\n    map.setScale(1)\n\n    countryLayer = d3.carto.layer.topojson();\n    \n    countryLayer.path(\"world.topojson\")\n    .label(\"Countries\")\n    .renderMode(\"canvas\")\n    .cssClass(\"country\");\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"all_sites.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"point\")\n    .renderMode(\"canvas\")\n    .markerSize(1)\n    .x(\"xcoord\")\n    .y(\"ycoord\")\n    .on(\"load\", smallMaptiples)\n\n    map.addCartoLayer(countryLayer).addCartoLayer(csvLayer);\n    \n    function smallMaptiples() {\n    var cityAtts = [\"aq\", \"ar\", \"arid\", \"capacity\", \"de\", \"delivery\", \"pop\", \"qu\",\"region\"];\n    var cityData = csvLayer.features()\n\n    for (var att in cityAtts) {\n      \n    var attExtent = d3.extent(cityData, function(d) {return parseFloat(d[cityAtts[att]])});\n    var colorScale = d3.scale.linear().domain([attExtent[0],(attExtent[0] + attExtent[1])/2,attExtent[1]]).range([\"green\",\"yellow\",\"red\"])\n\n    csvLayer\n    .markerColor(function(d) {return colorScale(d[cityAtts[att]])})\n    .strokeColor(function(d) {return colorScale(d[cityAtts[att]])})\n\n    map.refresh();\n    mapImageArray.push(d3.select(\"canvas\").node().toDataURL());\n\n    }\n    \n    window.onresize(null);\n    d3.select(\"#map\").remove();\n    d3.select(\"body\").append(\"div\").selectAll(\"img\").data(mapImageArray).enter().append(\"img\").attr(\"class\", \"smallmap\").attr(\"src\", function(d) {return d})\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Small Maptiples - d3.carto", "created_at": "2014-09-27T03:07:37Z", "updated_at": "2015-08-29T14:06:57Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.extent", "d3.scale.linear"], "readme": "Using **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**'s built-in canvas rendering and HTML5 canvas's built-in toDataUrl() function to create small multiples of the same map.\n\nThis example cycles through the various numeric attributes of the point dataset and restyles the map by changing layer.markerColor and layer.strokeColor. You have to call map.refresh() to update the display and then select the canvas element associated with the map to get access to the image data as a data URL, which you can pass to img elements.\n\nThis method of accessing toDataUrl only works with layers drawn using canvas.", "uid": "emeeks_2090bc8489a662c2e84d"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Responsive Markers - d3.carto</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .reproject {\n    position: absolute;\n    z-index: 99;\n    left: 50px;\n    top: 250px;\n  }\n\n  .node {\n    fill: blue;\n    stroke: black;\n    stroke-width: 1\n  }\n  \n  .markerButton {\n    position: fixed;\n    top: 20px;\n    z-index: 99;\n    cursor: pointer;\n  }\n  .roads {\n    fill: none;\n    stroke: brown;\n    stroke-width: 2px;\n  }\n  \n</style>\n<script>\n  \n  function rectangleMarker() {\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    d3.selectAll(\"g.marker\").append(\"rect\").attr(\"height\", 10).attr(\"width\", 10)\n    .attr(\"x\", -5)\n    .attr(\"y\", -5)\n    .style(\"fill\", \"yellow\")\n    .style(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"1px\")\n  }\n  \n  function circleMarker() {\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    d3.selectAll(\"g.marker\").append(\"circle\").attr(\"r\", 5)\n    .style(\"fill\", \"blue\")\n    .style(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"1px\")\n  }\n  \n  function svgMarker() {\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    d3.html(\"icon_2330.svg\", loadSVG);\n     function loadSVG(svgData) {\n    d3.select(svgData).selectAll(\"path\").each(function(d) {\n      var that = this;\n        d3.selectAll(\"g.marker\").each(\n          function() {\n          d3.select(this).node().appendChild(that.cloneNode(true));\n          }\n          )\n    })\n    d3.selectAll(\"g.marker\").select(\"path\");\n     }\n  }\n\n  function makeSomeMaps() {\n    pathSource = 0;\n\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    map.centerOn([-88,39],\"latlong\");\n    map.setScale(4);\n\n    map.refresh();\n\n    wcLayer = d3.carto.layer.tile();\n    wcLayer\n    .tileType(\"stamen\")\n    .path(\"watercolor\")\n    .label(\"Watercolor\")\n    .visibility(true)\n\n    postLayer = d3.carto.layer.topojson();\n    postLayer\n    .path(\"uspost.topojson\")\n    .label(\"Postal Routes\")\n    .cssClass(\"roads\")\n    .renderMode(\"svg\")\n    .on(\"load\", createMatrix);\n\n    map.addCartoLayer(wcLayer).addCartoLayer(postLayer);\n\n    function createMatrix() {\n      postdata = postLayer.features()\n      edgeList = [];\n      edgeMap = {};\n      nodes = [];\n      nodeHash = {};\n      for (x in postdata) {\n        var line = postdata[x].geometry.coordinates;\n        var lS = line[0];\n        var lE = line[line.length - 1];\n        var nA = [lS,lE];\n        for (y in nA) {\n        if (!nodeHash[\"node\" + Math.ceil(nA[y][0] * 1000) + (nA[y][1] * 1000)]) {\n          var newNode = {label: \"Node \" + nodes.length, id: nodes.length.toString(), coordinates: [nA[y]], x: nA[y][0], y: nA[y][1]}\n          nodeHash[\"node\" + Math.ceil(nA[y][0] * 1000) + (nA[y][1] * 1000)] = newNode;\n          nodes.push(newNode)\n        }\n        }\n        postdata[x].properties.source = nodeHash[\"node\" + Math.ceil(lS[0] * 1000) + (lS[1] * 1000)];\n        postdata[x].properties.target = nodeHash[\"node\" + Math.ceil(lE[0] * 1000) + (lE[1] * 1000)];\n        postdata[x].properties.cost = d3.geo.length(postdata[x]) * 6371;\n      }\n\n    nodeLayer = d3.carto.layer.xyArray();\n    nodeLayer\n    .features(nodes)\n    .label(\"Vertices\")\n    .cssClass(\"node\")\n    .renderMode(\"svg\")\n    .x(\"x\")\n    .y(\"y\")\n    .markerSize(5)\n    .clickableFeatures(true)\n    .on(\"load\", function() {nodeLayer.g().selectAll(\"g.marker\").on(\"click\", function(d) {flood(d.id)})});\n    map.addCartoLayer(nodeLayer);\n    \n    for (x in postdata) {\n      if (edgeMap[postdata[x].properties.source.id]) {\n        edgeMap[postdata[x].properties.source.id][postdata[x].properties.target.id] = postdata[x].properties.cost;\n      }\n      else {\n        edgeMap[postdata[x].properties.source.id] = {};\n        edgeMap[postdata[x].properties.source.id][postdata[x].properties.target.id] = postdata[x].properties.cost;\n      }\n      if (edgeMap[postdata[x].properties.target.id]) {\n        edgeMap[postdata[x].properties.target.id][postdata[x].properties.source.id] = postdata[x].properties.cost;\n      }\n      else {\n        edgeMap[postdata[x].properties.target.id] = {};\n        edgeMap[postdata[x].properties.target.id][postdata[x].properties.source.id] = postdata[x].properties.cost;\n      }\n    }\n\n      graph = new Graph(edgeMap);\n    }\n\n   function flood(siteID) {\n    siteDistance = d3.keys(graph.map).map(function(d) {return Infinity});\n    siteDistance[siteID] = 0;\n    \n    var map = graph.map;\n    var calculatedSites = [siteID];\n    var connectedSites = d3.keys(graph.map[siteID]);\n    var visitedSites = [siteID];\n    var sitesToVisit = [siteID];\n    var currentNode = siteID;\n    var currentCost = 0;\n\n    while (sitesToVisit.length > 0) {\n      sitesToVisit.splice(0,1);\n    for (x in connectedSites) {\n      if (calculatedSites.indexOf(connectedSites[x]) == -1) {\n          calculatedSites.push(connectedSites[x]);\n          siteDistance[connectedSites[x]] = currentCost + map[currentNode][connectedSites[x]];\n      }\n      else {\n          siteDistance[connectedSites[x]] = Math.min(currentCost + map[currentNode][connectedSites[x]], siteDistance[connectedSites[x]]);\n      }\n      \n      if (visitedSites.indexOf(connectedSites[x]) == -1 && sitesToVisit.indexOf(connectedSites[x]) == -1) {\n        sitesToVisit.push(connectedSites[x]);\n      }\n      }\n      visitedSites.push(currentNode)\n\n          //sort sitesToVisit\n          sitesToVisit = sitesToVisit.sort(function(a,b) {\n    if (siteDistance[a] < siteDistance[b])\n    return -1;\n    if (siteDistance[a] > siteDistance[b])\n    return 1;\n    return 0;\n    })\n      currentNode = sitesToVisit[0];\n      currentCost = siteDistance[currentNode];\n      connectedSites = d3.keys(graph.map[currentNode]);\n\n    }\n    \n    color = d3.scale.linear().domain([0,500,3500]).range([\"green\",\"yellow\",\"red\"])\n    nodeLayer.g().selectAll(\"g.marker\").selectAll(\"*\").style(\"fill\", \"lightgray\")\n    .transition()\n    .delay(function(d) {return siteDistance[d.id] == Infinity ? 5000 : siteDistance[d.id] * 2})\n    .duration(1000)\n    .style(\"fill\", function(d) {return siteDistance[d.id] == Infinity ? \"gray\" : color(siteDistance[d.id])})\n\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\">\n    <button style=\"left: 140px;\" class=\"markerButton\" onclick=\"rectangleMarker();\">Rectangle Marker</button>\n  <button style=\"left: 250px;\" class=\"markerButton\" onclick=\"circleMarker();\">Circle Marker</button>\n  <button style=\"left: 338px;\" class=\"markerButton\" onclick=\"svgMarker();\">SVG Marker</button>\n</div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"dijkstra.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>\n", "description": "Dynamic Markers - d3.carto", "created_at": "2014-09-03T21:15:00Z", "updated_at": "2015-08-29T14:06:03Z", "api": ["d3.selectAll", "d3.html", "d3.select", "d3.carto.map", "d3.carto.layer.tile", "d3.carto.layer.topojson", "d3.geo.length", "d3.carto.layer.xyArray", "d3.keys", "d3.scale.linear"], "readme": "Dynamic markers with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nSee also: [Changing markers with d3.carto](http://bl.ocks.org/emeeks/f8c0220c54ec8347ea95)\n\nThis example simply shows that if your code can handle different types of SVG elements used as markers, then it can adjust those markers even when you've changed them from their default shape. If you click on any marker, it will show the network distance from that marker to all other markers (or gray if inaccessible). Even if you change the markers to little mailboxes by clicking SVG Marker, clicking on a little mailbox will still show network distance, this time with little mailboxes.\n\nLittle mailbox icon is public domain, as all icons should be.", "uid": "emeeks_28fcb6803748a31718d9"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 | reusable heatmap calendar</title> \n  <meta name=\"author\" content=\"Sundar Singh | eesur.com\">\n  \n  <link rel=\"stylesheet\" href=\"main.css\">\n  <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.min.js\" charset=\"utf-8\"></script>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment.min.js\"></script>\n</head>\n<body>\n\n  <article>\n    <header>\n      <span id=\"info\">Info</span> \n    </header>\n    <section id=\"heatmap\"></section>\n  </article> \n\n  <script> d3.eesur = {}; //namespace  </script>\n  <script src=\"d3_code_heatmap_cal.js\"></script>\n  <script>\n  // *****************************************\n  // render chart\n  // *****************************************\n  (function() {\n      'use strict';\n      \n      var nestedData;\n      var parseDate = d3.time.format('%Y-%m-%d').parse;\n\n      // create chart\n      var heatChart = d3.eesur.heatmap()\n          .colourRangeStart('#e1f4fd')\n          .colourRangeEnd('#00447c')\n          .height(800)\n          .startYear('2011')\n          .endYear('2016')\n          .on('_hover', function (d, i) {\n              var f = d3.time.format('%B %d %Y');\n              d3.select('#info')\n                  .text(function () {\n                      return f(d) + ': ' + nestedData[d];\n                  });\n          });\n\n      // apply after nesting data\n      d3.json('heatmap_data.json', function(error, data) {\n\n          if (error) return console.warn(error);\n        \n          nestedData = d3.nest()\n              .key(function (d) { return parseDate(d.date.split(' ')[0]); })\n              .rollup(function (n) { \n                  return d3.sum(n, function (d) { \n                      return d.amount; // key\n                  }); \n              })\n              .map(data);\n\n          // console.log(nestedData);\n\n          // render chart\n          d3.select('#heatmap')\n              .datum(nestedData)\n              .call(heatChart);\n\n      });\n\n  }());\n\n  d3.select(self.frameElement).style('height', '900px');\n\n  </script>\n\n</body>\n\n</html>\n\n\n", "description": "d3 | reusable heatmap calendar", "created_at": "2016-01-07T03:14:41Z", "updated_at": "2016-01-07T03:23:16Z", "api": ["d3.dispatch", "d3.scale.linear", "d3.range", "d3.min", "d3.time.format", "d3.select", "d3.time.days", "d3.time.months", "d3.extent", "d3.values", "d3.rebind", "d3.eesur.heatmap", "d3.json", "d3.nest", "d3.sum"], "readme": "Calendar heatmap adapted into a reusable chart for quick testing\n\n> loading of ~~CSV~~ json data, which is then quantized into a diverging color scale. The values are visualized as coloured cells per day. Days are arranged into columns by week, then grouped by month and years. \n\n[source](http://bl.ocks.org/mbostock/4063318)\n\n\nforked from <a href='http://bl.ocks.org/eesur/'>eesur</a>'s block: <a href='http://bl.ocks.org/eesur/5fbda7f410d31da35e42'>d3 | reusable heatmap calendar</a>", "uid": "renecnielsen_00ece1121142dddee837"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<body>\n    <div id=\"map\"></div>\n    <script src=\"//d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n\t\t<script src=\"//d3js.org/d3.geo.projection.v0.min.js\" charset=\"utf-8\"></script>\n\t  <script src=\"//d3js.org/topojson.v1.min.js\"></script>\n    <script src=\"//d3js.org/queue.v1.min.js\"></script>\n\n  <style>\n\nbody {\n  background: #fcfcfa;\n}\n\n.stroke {\n  fill: none;\n  stroke: #000;\n  stroke-width: 3px;\n}\n\n.fill {\n  fill: #fff;\n}\n\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-width: .5px;\n  stroke-opacity: .5;\n}\n\n.land {\n  fill: #000;\n}\n\n.image.country {\n  stroke: #000;\n  stroke-width: 0.5px;\n}\n\n.boundary {\n  fill: none;\n  stroke: #000;\n  stroke-width: 0.5px;\n}\n\n  </style>\n  <script>\n    var wflags = \"https://gist.githubusercontent.com/espinielli/5107491/raw/world-country-flags.tsv\",\n        w110 = \"https://gist.githubusercontent.com/mbostock/4090846/raw/world-110m.json\",\n        wnames = \"https://gist.githubusercontent.com/mbostock/4090846/raw/world-country-names.tsv\";\n\n\n    var width = 1200,\n        height = 700;\n\n    // \nvar projection = d3.geo.robinson()\n    .scale(180)\n    .translate([width / 2, height / 2])\n    .precision(.1);\n    \nvar path = d3.geo.path()\n    .projection(projection);\n\nvar graticule = d3.geo.graticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar defs = svg.append(\"defs\");\n\ndefs.append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\nsvg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"fill\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\n    var q = queue()\n        .defer(d3.json, w110)\n        .defer(d3.tsv, wnames)\n        .defer(d3.tsv, wflags)\n        .await(ready);\n\n\n    function ready(error, world, names, flags) {\n        if (error) {\n            alert('error: ' + error);\n            return;\n        }\n\n      \tflags.forEach(function (d) { d.id = +d.id;});\n        flags.sort(function(a,b) {\n          return +a.id < +b.id ? -1 : +a.id > +b.id ? +1 : 0;\n        });\n\n        var countries = topojson.feature(world, world.objects.countries).features,\n            land = topojson.feature(world, world.objects.land);\n\n      \tcountries = countries.filter(function(d) {\n\t\t\t    return names.some(function(n) {\n            if (d.id == n.id) {\n              return d.name = n.name;\n            }\n    \t\t\t});\n  \t\t\t});\n      \n        countries = countries.filter(function(d) {\n\t\t\t    return flags.some(function(n) {\n            if (d.id == n.id) {\n            \tvar bounds = path.bounds(d);\n            \tif (bounds[0][0] < 0) bounds[0][0] = 0;\n            \tif (bounds[1][0] > width) bounds[1][0] = width;\n            \tif (bounds[0][1] < 0) bounds[0][1] = 0;\n            \tif (bounds[1][1] < 0) bounds[1][1] = height;\n              \n             d.bounds = bounds; \n              \n              return d.url = n.url;\n            }\n    \t\t\t});\n  \t\t\t});\n\n      defs.selectAll(\"mask\")\n\t\t\t\t.data(countries)\n\t\t\t\t.enter()\n        \t.append(\"clipPath\")\n\t\t\t\t\t\t.attr(\"class\", \"mask\")\n\t\t\t\t\t\t.attr(\"id\", function(d) {return \"iso-\" + d.id})\n\t\t\t\t\t\t.append(\"path\")\n\t\t\t\t\t\t.attr(\"d\", path);\n\n\n      svg.selectAll(\"country\")\n      \t.data(countries)\n      \t.enter()\n        .insert(\"image\", \".graticule\")\n      \t\t.attr(\"class\", \"country\")\n          .attr(\"xlink:href\", function (d){return d.url;})\n          .attr(\"x\", function (d) {return d.bounds[0][0];})\n          .attr(\"y\", function (d) {return d.bounds[0][1];})\n          .attr(\"width\", function (d) {return d.bounds[1][0] - d.bounds[0][0];})\n          .attr(\"height\", function (d) {return d.bounds[1][1] - d.bounds[0][1];})\n          .attr(\"preserveAspectRatio\", \"none\")\n          .attr(\"clip-path\", function(d) {\n          \treturn \"url(#iso-\" + d.id + \")\";\n          });\n\n      // interior boundaries\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"clip-path\", \"url(#sphere)\")\n\t\t\t.attr(\"d\", path);\n\t// exterior boundaries\n      svg.insert(\"path\", \".graticule\")\n    .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a === b}))\n    .attr(\"d\", path)\n    .attr(\"class\", \"boundary\");\n}\n\n\n   \n      \n</script>\n</body>\n\n</html>\n", "description": "D3.js Boetti ", "created_at": "2015-12-13T16:18:54Z", "updated_at": "2015-12-20T15:03:50Z", "api": ["d3.geo.robinson", "d3.geo.path", "d3.geo.graticule", "d3.select"], "readme": "[Boetti's map](http://www.moma.org/learn/moma_learning/alighiero-boetti-map-of-the-world-1989) using D3\n\n### ToDo's:\n\nDue to their peculiar bounding boxes (see Jason Davies [nice visualization](https://www.jasondavies.com/maps/bounds/)) some countries need special treatment\n\n* France: split Guyana and map French flag accordingly\n* USA: split Alaska map the flag\n\nInspired by <a href='http://bl.ocks.org/rveciana/'>rveciana</a>'s block: <a href='http://bl.ocks.org/rveciana/6193058'>Flag map with D3js - SVG</a>", "uid": "espinielli_9ea56e041f6847dbe944"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n \n \n.axis .minor {\n  stroke: red;\n  stroke-width: 1.0;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(24).tickSubdivide(2).tickSize(-30, -30, 0));\n \n</script>", "description": "d3 minor lines 3", "created_at": "2013-01-31T23:20:32Z", "updated_at": "2015-12-12T00:58:56Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "", "uid": "vjpgo_4687640"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n \n \n.axis .minor {\n  stroke: red;\n  stroke-width: 1.0;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(16).tickSubdivide(3).tickSize(-60, -60, 0));\n \n</script>", "description": "d3 minor lines 4", "created_at": "2013-01-31T23:22:18Z", "updated_at": "2015-12-12T00:58:56Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "", "uid": "vjpgo_4687652"}, {"code": "<!DOCTYPE html >\n<html >\n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"chrome=1\" />\n    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" />\n    <title>d3 x3dom demo</title>\n    <script type=\"text/javascript\" src=\"http://mbostock.github.com/d3/d3.js\"></script>\n    <script type=\"text/javascript\" src=\"http://x3dom.org/x3dom/example/x3dom.js\"></script>\n  </head>\n  <body>\n    <script>\n      function randomData() {\n        return d3.range(6).map( function() { return Math.random()*20; } )\n      };\n\n      x3d = d3.select(\"body\")\n                    .append(\"x3d\")\n                    .attr( \"height\", \"400px\" )\n                    .attr( \"width\", \"400px\" )\n                    ;\n      var scene = x3d.append(\"scene\");\n      scene.append(\"viewpoint\")\n          .attr( \"centerOfRotation\", \"3.75 0 10\")\n           .attr( \"position\", \"13.742265188709691 -27.453522975182366 16.816062840792625\" )\n           .attr( \"orientation\", \"0.962043810961999 0.1696342804961945 0.21376603254551874 1.379433089729343\" )\n           ;\n\n      function refresh( data ) {\n        shapes = scene.selectAll(\"transform\").data( data );\n        shapesEnter = shapes\n             .enter()\n             .append( \"transform\" )\n             .append( \"shape\" )\n             ;\n        // Enter and update\n        shapes.transition()\n              .attr(\"translation\", function(d,i) { return i*1.5 + \" 0.0 \" + d/2.0; } )\n              .attr(\"scale\", function(d) { return \"1.0 1.0 \" + d; } )\n              ;\n\n        shapesEnter\n            .append(\"appearance\")\n              .append(\"material\")\n              .attr(\"diffuseColor\", \"steelblue\" );\n\n        shapesEnter.append( \"box\" )\n          .attr( \"size\", \"1.0 1.0 1.0\" );\n      }\n\n      refresh( randomData() )\n      setInterval(\n        function(){\n          refresh( randomData() );\n        },\n        2500);\n\n    </script>\n  </body>\n</html>", "description": "d3 with x3dom Demo", "created_at": "2015-11-21T21:31:16Z", "updated_at": "2015-11-21T23:19:52Z", "api": ["d3.range", "d3.select"], "readme": "", "uid": "ufenegga_366344909b1d79e327b9"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Streamgraph</title>\n    <script type=\"text/javascript\" src=\"https://raw.github.com/lgrammel/d3/master/d3.v2.js\"></script>\n    <script type=\"text/javascript\" src=\"stream_layers.js\"></script>\n    <script type=\"text/javascript\" src=\"stream-chart.js\"></script>\n</head>\n<body>\n    <div id=\"chart\">\n        <button class=\"first last\" onclick=\"transition()\">\n            Update\n        </button><p>\n    </div>\n    <script>\n        var n = 20, // number of layers\n            m = 200; // number of samples per layer\n\n        var data1 = stream_layers(n, m);\n        var data0 = stream_layers(n, m);\n        var colors = d3.range(n).map(function() { return d3.interpolateRgb(\"#aad\", \"#556\")(Math.random()); });\n\n        var streamgraph = streamgraphChart()\n            .margin({top: 10, right: 10, bottom: 10, left: 10})\n            .color(function(d, i) { return colors[i]; }) // use same colors for both data sets\n            .transitionDuration(1500)\n            .on(\"mouseover\", fade(.2))\n            .on(\"mouseout\", fade(1));\n\n        d3.select(\"#chart\")\n            .datum(data0)\n            .call(streamgraph);\n\n        function transition() {\n            d3.select(\"#chart\")\n                    .datum(function() {\n                        var d = data1;\n                        data1 = data0;\n                        return data0 = d;\n                    })\n                    .call(streamgraph);\n        }\n\n        function fade(opacity) {\n            return function(g, i) {\n                streamgraph.layers()\n                    .filter(function(h, j) {\n                        return j != i;\n                    })\n                    .transition(1000)\n                      .style(\"opacity\", opacity);\n            }\n        }\n    </script>\n</body>\n</html>", "description": "Interactive Streamgraph D3", "created_at": "2012-03-03T02:51:19Z", "updated_at": "2015-10-01T09:28:08Z", "api": ["d3.range", "d3.interpolateRgb", "d3.select", "d3.layout.stack", "d3.max", "d3.svg.area"], "readme": "", "uid": "lgrammel_1963983"}, {"code": "<!DOCTYPE html>\n<head>\n\t<meta charset=\"utf-8\">\n\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n\t<style type=\"text/css\">\n\n\t\t\tbody {\n\t\t\t\tbackground-color: white;\n\t\t\t\tfont-family: Helvetica, Arial, sans-serif;\n\t\t\t}\n\n\t\t\th1 {\n\t\t\t\tfont-size: 24px;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\n\t\t\tp {\n\t\t\t\tfont-size: 14px;\n\t\t\t\tmargin: 10px 0 0 0;\n\t\t\t}\n\n\t\t\tsvg {\n\t\t\t\tbackground-color: white;\n\t\t\t}\n\n\t\t\tpath:hover {\n\t\t\t\tfill: yellow;\n\t\t\t}\n\n\t\t\t.axis path,\n\t\t\t.axis line {\n\t\t\t\tfill: none;\n\t\t\t\tstroke: black;\n\t\t\t\tshape-rendering: crispEdges;\n\t\t\t}\n\n\t\t\t.axis text {\n\t\t\t\tfont-family: sans-serif;\n\t\t\t\tfont-size: 11px;\n\t\t\t}\n\n\t</style>\n</head>\n<body>\n\t<h1>Slave Trafficing Across the Atlantic</h1>\n\n\t<p>Years 1501-1865. Source: <a href=\"http://slavevoyages.org/assessment/estimates\">Voyages</a></p>\n\t<script>\n\tvar w = 960,\n\t\th = 500,\n\t\tpadding = {top: 10, right: 10, bottom: 10, left: 50},\n\t\tcatSeven = [\"#889072\",\n\t\t\t\"#C0A69C\",\n\t\t\t\"#655D4E\",\n\t\t\t\"#B59575\",\n\t\t\t\"#907D76\",\n\t\t\t\"#93A198\",\n\t\t\t\"#B8B693\"];\n\n\tvar dataSet = [\n\t\t\t{\n\t\t\t\tcountry: \"spain\",\n\t\t\t\ttrades:[\n\t\t\t\t\t\t\t{x: 1641, y: 2239},\n\t\t\t\t\t\t\t{x: 1642, y: 889},\n\t\t\t\t\t\t\t{x: 1643, y: 889},\n\t\t\t\t\t\t\t{x: 1644, y: 889},\n\t\t\t\t\t\t\t{x: 1645, y: 889},\n\t\t\t\t\t\t\t{x: 1646, y: 889},\n\t\t\t\t\t\t\t{x: 1647, y: 889}\n\t\t\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tcountry: \"portugal\",\n\t\t\t\ttrades: [\n\t\t\t\t\t\t\t{x: 1641, y: 6239},\n\t\t\t\t\t\t\t{x: 1642, y: 4000},\n\t\t\t\t\t\t\t{x: 1643, y: 4325},\n\t\t\t\t\t\t\t{x: 1644, y: 4179},\n\t\t\t\t\t\t\t{x: 1645, y: 4581},\n\t\t\t\t\t\t\t{x: 1646, y: 4000},\n\t\t\t\t\t\t\t{x: 1647, y: 4617}\n\t\t\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tcountry: \"great britian\",\n\t\t\t\ttrades: [\n\t\t\t\t\t\t\t{x: 1641, y: 949},\n\t\t\t\t\t\t\t{x: 1642, y: 1722},\n\t\t\t\t\t\t\t{x: 1643, y: 0},\n\t\t\t\t\t\t\t{x: 1644, y: 5530},\n\t\t\t\t\t\t\t{x: 1645, y: 6115},\n\t\t\t\t\t\t\t{x: 1646, y: 9480},\n\t\t\t\t\t\t\t{x: 1647, y: 5854}\n\t\t\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tcountry: \"netherlands\",\n\t\t\t\ttrades: [\n\t\t\t\t\t\t\t{x: 1641, y: 1935},\n\t\t\t\t\t\t\t{x: 1642, y: 3128},\n\t\t\t\t\t\t\t{x: 1643, y: 6203},\n\t\t\t\t\t\t\t{x: 1644, y: 6416},\n\t\t\t\t\t\t\t{x: 1645, y: 4551},\n\t\t\t\t\t\t\t{x: 1646, y: 1131},\n\t\t\t\t\t\t\t{x: 1647, y: 7}\n\t\t\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tcountry: \"usa\",\n\t\t\t\ttrades: [\n\t\t\t\t\t\t\t{x: 1641, y: 0},\n\t\t\t\t\t\t\t{x: 1642, y: 0},\n\t\t\t\t\t\t\t{x: 1643, y: 0},\n\t\t\t\t\t\t\t{x: 1644, y: 0},\n\t\t\t\t\t\t\t{x: 1645, y: 371},\n\t\t\t\t\t\t\t{x: 1646, y: 0},\n\t\t\t\t\t\t\t{x: 1647, y: 0}\n\t\t\t\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tcountry: \"france\",\n\t\t\t\ttrades: [\n\t\t\t\t\t\t\t{x: 1641, y: 0},\n\t\t\t\t\t\t\t{x: 1642, y: 0},\n\t\t\t\t\t\t\t{x: 1643, y: 366},\n\t\t\t\t\t\t\t{x: 1644, y: 566},\n\t\t\t\t\t\t\t{x: 1645, y: 0},\n\t\t\t\t\t\t\t{x: 1646, y: 628},\n\t\t\t\t\t\t\t{x: 1647, y: 267}\n\t\t\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tcountry: \"denmark baltics\",\n\t\t\t\ttrades: [\n\t\t\t\t\t\t\t{x: 1641, y: 150},\n\t\t\t\t\t\t\t{x: 1642, y: 0},\n\t\t\t\t\t\t\t{x: 1643, y: 0},\n\t\t\t\t\t\t\t{x: 1644, y: 0},\n\t\t\t\t\t\t\t{x: 1645, y: 0},\n\t\t\t\t\t\t\t{x: 1646, y: 260},\n\t\t\t\t\t\t\t{x: 1647, y: 643}\n\t\t\t\t\t\t]\n\t\t\t}\n\t\t];\n\n\t// Set up stack layout\n\tvar stack = d3.layout.stack()\n\t\t.values(function(d) {\n\t\t\treturn d.trade;\n\t\t});\n\n\t// Set up scales\n\tvar xScale = d3.scale.linear()\n\t\t.range([padding.left, w - padding.left]);\n\n\tvar yScale = d3.scale.linear()\n\t\t.range([padding.top, h - padding.top - padding.bottom]);\n\n\tvar xAxis = d3.svg.axis()\n\t\t.scale(xScale)\n\t\t.orient(\"bottom\")\n\t\t.ticks(15);\n\n\tvar yAxis = d3.svg.axis()\n\t\t.scale(yScale)\n\t\t.orient(\"left\")\n\t\t.ticks(5);\n\n\t// Create area generator\n\tvar area = d3.svg.area()\n\t\t.x(function(d, i) {\n\t\t\treturn xScale(d.x);\n\t\t})\n\t\t.y0(function(d) {\n\t\t\treturn yScale(d.y0);\n\t\t})\n\t\t.y1(function(d) {\n\t\t\treturn yScale(d.y0 + d.y);\n\t\t});\n\n\t// Set colors to a IWantHue series\n\tvar\tcolor = d3.scale.ordinal()\n\t\t.domain([0,1,2,3,4,5,6])\n\t\t.range(catSeven);\n\n\t// Create svg element\n\tvar svg = d3.select(\"body\")\n\t\t.append(\"svg\")\n\t\t.attr(\"width\", w)\n\t\t.attr(\"height\", h);\n\n\td3.csv(\"slavery.csv\", function(data) {\n\n\t\tvar countries = [\n\t\t\t{\n\t\t\t\tcountry: \"Denmark\",\n\t\t\t\ttrade: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tcountry: \"France\",\n\t\t\t\ttrade: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tcountry: \"Great Britian\",\n\t\t\t\ttrade: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tcountry: \"Netherlands\",\n\t\t\t\ttrade: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tcountry:\"Portugal\",\n\t\t\t\ttrade: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tcountry: \"Spain\",\n\t\t\t\ttrade: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tcountry: \"USA\",\n\t\t\t\ttrade: []\n\t\t\t}\n\t\t];\n\n\t\tvar years = [];\n\t\tfor(var i = 1501; i < 1865; i++) {\n\t\t\tyears.push(i);\n\t\t}\n\n\t\theaders = [\"great_britian\", \"france\", \"denmark_baltics\", \"usa\", \"netherlands\", \"protugal\", \"spain\"];\n\n\t\tfor(var i = 0; i < countries.length; i++) {\n\t\t\tfor(var j = 0; j < data.length; j++) {\n\t\t\t\tcountries[i].trade.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tx: +data[j].year,\n\t\t\t\t\t\ty: +data[j][headers[i]]\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Remove NaN trades\n\t\tcountries.forEach(function(country) {\n\t\t\tfor( var trade in country.trade) {\n\t\t\t\tif(isNaN(country.trade[trade].y)) {\n\t\t\t\t\tcountry.trade[trade].y = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tstack(countries);\n\n\t\txScale.domain([ d3.min(years),d3.max(years) ]);\n\n\t\t//Loop once for each year, and get the total trades\n\t\t// that year\n\t\tvar totals = [];\n\n\t\tfor (i = 0; i < years.length; i++) {\n\t\t\ttotals[i] = 0;\n\t\t\tfor (j = 0; j < countries.length; j++) {\n\t\t\t\ttotals[i] += countries[j].trade[i].y;\n\t\t\t\t// console.log(countries[j].trade[i]);\n\t\t\t}\n\t\t}\n\n\t\tyScale.domain([ d3.max(totals), 0 ]);\n\n\t\t// Make a path for each country\n\t\tvar paths = svg.selectAll(\"path\")\n\t\t\t.data(countries)\n\t\t\t.enter()\n\t\t\t.append(\"path\")\n\t\t\t.attr(\"class\", \"area\")\n\t\t\t.attr(\"d\", function(d) {\n\t\t\t\treturn area(d.trade);\n\t\t\t})\n\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t.attr(\"fill\", function(d, i) {\n\t\t\t\treturn color(i);\n\t\t\t});\n\n\t\t// Add groups from each row of data\n\t\tvar groups = svg.selectAll(\"g\")\n\t\t\t.data(countries)\n\t\t\t.enter()\n\t\t\t.append(\"g\")\n\t\t\t.style(\"fill\", function(d, i) {\n\t\t\t\treturn color(i);\n\t\t\t});\n\n\t\t// Append paths\n\t\tpaths.append(\"title\")\n\t\t\t.text(function(d) {\n\t\t\t\treturn d.country;\n\t\t\t});\n\n\t\t// Create axes\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"x axis\")\n\t\t\t.attr(\"transform\", \"translate(0, \" + (h - padding.bottom - padding.top) + \")\")\n\t\t\t.call(xAxis);\n\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"y axis\")\n\t\t\t.attr(\"transform\", \"translate(\" + padding.left + \",0)\")\n\t\t\t.call(yAxis);\n\n\t});\n\n\t</script>\n</body>", "description": "Intermediate D3: Week 2", "created_at": "2015-12-05T23:36:13Z", "updated_at": "2015-12-05T23:43:23Z", "api": ["d3.layout.stack", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.scale.ordinal", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "", "uid": "rcrocker13_60203151a99eb3f7f000"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.land {\n  fill: #222;\n}\n\n.county-boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.state-boundary {\n  fill: none;\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script>\n\nmeetup_data = {\n\"results\": [\n{\n\"status\": \"upcoming\",\n\"visibility\": \"public\",\n\"maybe_rsvp_count\": 0,\n\"venue\": {\n\"zip\": \"93940\",\n\"phone\": \"831.372.0581\",\n\"lon\": -121.889899,\n\"state\": \"CA\",\n\"address_1\": \"256 Figueroa St\",\n\"address_2\": \"Wharf #2\",\n\"city\": \"Monterey\",\n\"country\": \"us\",\n\"id\": 1106358,\n\"repinned\": false,\n\"name\": \"London Bridge Pub\",\n\"lat\": 36.601817\n},\n\"id\": \"119518782\",\n\"utc_offset\": -25200000,\n\"time\": 1371693600000,\n\"waitlist_count\": 0,\n\"announced\": true,\n\"updated\": 1371593066000,\n\"yes_rsvp_count\": 7,\n\"created\": 1368632764000,\n\"event_url\": \"http://www.meetup.com/Monterey-Bay-Information-Technologists/events/119518782/\",\n\"description\": \"<p><strong>Announcements:</strong></p>\n<p>MBIT is still looking for sponsors to provide raffle prizes and possible future locations for MBIT meetups.</p>\n<p><strong>Presentations:</strong></p>\n<ul>\n<li>Introduction to Functional Programming with Clojure</li>\n<li>Data Visualization in the Browser with D3</li>\n</ul>\n<p><strong>Location</strong>:</p>\n<p>London Bridge Pub <br />\n\n <span>256 Figueroa St. <br />\n\n</span> <span>Monterey, CA 93940</span><span> <br />\n\n</span> <a class=\"linkified\" href=\"http://goo.gl/maps/lWJbJ\" style=\"font-size : 14px ; text-decoration : underline\">http://goo.gl/maps/lWJbJ</a></p>\n<p><strong>NOTE</strong>: Minors (under 21) are allowed in the pub until 10p so everyone is welcome.</p>\n<p><span>There should be a few MBIT people there about an hour (~6p) before the meetup for networking, discussions, and just overall relaxing.</span></p>\n<p>Also, we should have some time after the presentations and meetup proper to have more casual discussions as well.</p>\n<p><strong>Parking</strong>:</p>\n<p>There is parking next to the pub but I believe it might be paid parking.</p>\n<p> </p>\",\n\"name\": \"MBIT : June Meetup\",\n\"headcount\": 0,\n\"group\": {\n\"id\": 8488122,\n\"group_lat\": 36.59000015258789,\n\"name\": \"Monterey Bay Information Technologists (MBIT)\",\n\"group_lon\": -121.8499984741211,\n\"join_mode\": \"open\",\n\"urlname\": \"Monterey-Bay-Information-Technologists\",\n\"who\": \"MBitrs\"\n}\n}\n],\n\"meta\": {\n\"lon\": \"\",\n\"count\": 1,\n\"signed_url\": \"http://api.meetup.com/2/events?status=upcoming&order=time&limited_events=False&group_urlname=Monterey-Bay-Information-Technologists&desc=false&offset=0&format=json&page=20&fields=&sig_id=79162512&sig=7efb712148f3645653a29c8820aa904d647cd34b\",\n\"link\": \"http://www.meetup.com/2/events\",\n\"next\": \"\",\n\"total_count\": 1,\n\"url\": \"http://www.meetup.com/2/events?status=upcoming&order=time&limited_events=False&group_urlname=Monterey-Bay-Information-Technologists&desc=false&offset=0&format=json&page=20&fields=&sign=true\",\n\"id\": \"\",\n\"title\": \"Meetup Events v2\",\n\"updated\": 1371593066000,\n\"description\": \"Access Meetup events using a group, member, or event id. Events in private groups are available only to authenticated members of those groups. To search events by topic or location, see [Open Events](/meetup_api/docs/2/open_events).\",\n\"method\": \"Events\",\n\"lat\": \"\"\n}\n}\n\nvar width = 960,\n    height = 500;\n\nvar projection = d3.geo.albersUsa()\n    .scale(1000)\n    .translate([width / 2, height / 2]);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"/d/4090846/us.json\", function(error, us) {\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(us, us.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(us, us.objects.counties, function(a, b) { return a !== b && !(a.id / 1000 ^ b.id / 1000); }))\n      .attr(\"class\", \"county-boundary\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"state-boundary\")\n      .attr(\"d\", path);\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n</script>", "description": "MBIT D3.js Demo", "created_at": "2013-06-19T23:52:31Z", "updated_at": "2015-12-18T17:29:41Z", "api": ["d3.geo.albersUsa", "d3.geo.path", "d3.select", "d3.json"], "readme": "", "uid": "david4096_5819181"}, {"code": "<html>\n\t<head>\n\t\t<title>Interactive Line Graph</title>\n\t\t<script src=\"http://d3js.org/d3.v2.js\"></script>\n\t\t<!-- \n\t\t\tusing JQuery for element dimensions\n\t\t\tThis is a small aspect of this example so it can be removed fairly easily if needed.\n\t\t-->\n\t\t<script src=\"http://code.jquery.com/jquery-1.7.2.min.js\"></script>\n\t\t<script src=\"sample_data.js\"></script>\n\t\t<script src=\"line-graph.js\"></script>\n\t\t<link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: \"Helvetica Neue\", Helvetica;\n\t\t\t}\n\t\t\t\t\t\n\t\t\tp {\n\t\t\t\tclear:both;\n\t\t\t\ttop: 20px;\n\t\t\t}\t\t\n\t\t\t\t\t\n\t\t\tdiv.aGraph {\n\t\t\t\tmargin-bottom: 30px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t<div id=\"graph1\" class=\"aGraph\" style=\"position:relative;width:100%;height:400px\"></div>\n\t\n\t<div id=\"graph2\" class=\"aGraph\" style=\"float:left;position:relative;width:49%;height:200px\"></div>\n\t<div id=\"graph3\" class=\"aGraph\" style=\"float:left;position:relative;width:49%;height:200px\"></div>\n\n\t<script>\n\t\t/* \n\t\t * If running inside bl.ocks.org we want to resize the iframe to fit both graphs\n\t\t */\n\t\t if(parent.document.getElementsByTagName(\"iframe\")[0]) {\n\t\t\t parent.document.getElementsByTagName(\"iframe\")[0].setAttribute('style', 'height: 650px !important');\n\t\t }\n\t\n\t\t /*\n\t\t * Note how the 'data' object is added to here before rendering to provide decoration information.\n\t\t * <p>\n\t\t * This is purposefully done here instead of in data.js as an example of how data would come from a server\n\t\t * and then have presentation information injected into it (rather than as separate arguments in another object)\n\t\t * and passed into LineGraph.\n\t\t *\n\t\t * Also, CSS can be used to style colors etc, but this is also doable via the 'data' object so that the styling\n\t\t * of different data points can be done in code which is often more natural for display names, legends, line colors etc\n\t\t */\n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data[\"displayNames\"] = [\"2xx\",\"3xx\",\"4xx\",\"5xx\"];\n\t\t data[\"colors\"] = [\"green\",\"orange\",\"red\",\"darkred\"];\n\t\t data[\"scale\"] = \"pow\";\n\t\t \n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data2[\"displayNames\"] = [\"2xx\",\"3xx\",\"4xx\",\"5xx\"];\n\t\t data2[\"colors\"] = [\"green\",\"orange\",\"red\",\"darkred\"];\n\t\t data2[\"scale\"] = \"linear\";\n\t\t \n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data3[\"displayNames\"] = [\"Data1\", \"Data2\"];\n\t\t data3[\"axis\"] = [\"left\", \"right\"];\n\t\t data3[\"colors\"] = [\"#2863bc\",\"#c8801c\"];\n\t\t data3[\"rounding\"] = [2, 0];\n\n\t\t // create graph now that we've added presentation config\n\t\tvar l1 = new LineGraph({containerId: 'graph1', data: data});\n\t\tvar l2 = new LineGraph({containerId: 'graph2', data: data2});\n\t\tvar l3 = new LineGraph({containerId: 'graph3', data: data3});\n\t\t\n\tsetInterval(function() {\n\t\t/*\n\t\t* The following will simulate live updating of the data (see dataA, dataB, dataC etc in data.js which are real examples)\n\t\t* This is being simulated so this example functions standalone without a backend server which generates data such as data.js contains.\n\t\t*/\n\t\t// for each data series ...\n\t\tvar newData = [];\n\t\tdata.values.forEach(function(dataSeries, index) {\n\t\t\t// take the first value and move it to the end\n\t\t\t// and capture the value we're moving so we can send it to the graph as an update\n\t\t\tvar v = dataSeries.shift();\n\t\t\tdataSeries.push(v);\n\t\t\t// put this value in newData as an array with 1 value\n\t\t\tnewData[index] = [v];\n\t\t})\n\t\t\n\t\t// we will reuse dataA each time\n\t\tdataA.values = newData;\n\t\t// increment time 1 step\n\t\tdataA.start = dataA.start + dataA.step;\n\t\tdataA.end = dataA.end + dataA.step; \n\t\t\t\t\t\n\t\tl1.slideData(dataA);\n\t}, 2000);\n\n\t\t\n\t</script>\n\n\n\n\t</body>\n</html>", "description": "Interactive Line Graph (D3)", "created_at": "2012-11-21T10:36:44Z", "updated_at": "2015-10-13T02:18:04Z", "api": ["d3.format", "d3.max", "d3.scale.pow", "d3.scale.log", "d3.scale.linear", "d3.svg.axis", "d3.time.scale", "d3.select", "d3.svg.line"], "readme": "", "uid": "phoebebright_4124200"}, {"code": "<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>A D3 map with basic interaction</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n    <script src=\"https://rawgit.com/maptimelex/d3-mapping/gh-pages/d3-map01-starter/ky-counties.js\"></script>\n    \n    <link href=\"http://fonts.googleapis.com/css?family=Montserrat\" rel=\"stylesheet\" type=\"text/css\">\n<style>\n    body {\n        padding: 0;\n        margin: 0;\n        background: whitesmoke;\n    }\n    h1, h2 {\n        position: absolute;\n        left: 20px;\n        top: 10px;\n        font-family: \"Proxima Nova\", Montserrat, sans-serif;\n        font-size: 2em;\n        font-weight: 100;\n        color: #005DAA; /* offical UK Kentucky blue */\n    }\n    h2 {\n        top: 50px;\n        font-size: 1.6em;\n    }\n    .county {\n      stroke: #fff;\n      fill:#005DAA;\n    }\n    .hover {\n        fill: yellow;   \n    }\n</style>\n</head>\n<body>\n    <h1>Kentucky Counties</h1>\n    <h2></h2>\n  <script>\n        \n    var width = window.innerWidth,\n        height = window.innerHeight;\n    \n    var svg = d3.select( \"body\" )\n          .append( \"svg\" )\n          .attr( \"width\", width )\n          .attr( \"height\", height );\n      \n    var projection = d3.geo.albers()\n        .center([0, 37.8])\n        .rotate([85.8,0])\n        .scale(8000)\n        .translate([width / 2, height / 2]);\n\n    var geoPath = d3.geo.path()\n        .projection(projection);\n        \n    svg.append(\"g\")\n        .selectAll(\"path\")\n        .data(counties.features)\n        .enter()\n        .append(\"path\")\n        .attr( \"d\", geoPath )\n        .attr(\"class\",\"county\")\n        .on(\"mouseover\", function(d){\n            d3.select(\"h2\").text(d.properties.NAME);\n            d3.select(this).attr(\"class\",\"county hover\");\n        })\n        .on(\"mouseout\", function(d){\n            d3.select(\"h2\").text(\"\");\n            d3.select(this).attr(\"class\",\"county\");\n        });\n \n  </script>\n</body>\n</html>\n\n\n", "description": "First D3 Building Block", "created_at": "2015-09-02T03:33:05Z", "updated_at": "2015-09-02T03:33:05Z", "api": ["d3.select", "d3.geo.albers", "d3.geo.path"], "readme": "## Testing out Block Builder\n\nExample from Rich Donohue's maptimeLEX [meetup on D3-based mapping](https://github.com/maptimelex/d3-mapping/tree/gh-pages/d3-map01-starter).\n\n\n\n\n\n\n\n\n\n", "uid": "maptastik_4a69f2f4c697e097ee74"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style type=\"text/css\">\n\nsvg {\n  font-family: \"Helvetica Neue\", Helvetica;\n}\n\n.line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2px;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar m = [20, 20, 30, 20],\n    w = 960 - m[1] - m[3],\n    h = 500 - m[0] - m[2];\n\nvar x,\n    y,\n    duration = 1500,\n    delay = 500;\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", w + m[1] + m[3])\n    .attr(\"height\", h + m[0] + m[2])\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\nvar stocks,\n    symbols;\n\n// A line generator, for the dark stroke.\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); });\n\n// A line generator, for the dark stroke.\nvar axis = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(h);\n\n// A area generator, for the dark stroke.\nvar area = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y1(function(d) { return y(d.price); });\n\nd3.csv(\"stocks.csv\", function(data) {\n  var parse = d3.time.format(\"%b %Y\").parse;\n\n  // Nest stock values by symbol.\n  symbols = d3.nest()\n      .key(function(d) { return d.symbol; })\n      .entries(stocks = data);\n\n  // Parse dates and numbers. We assume values are sorted by date.\n  // Also compute the maximum price per symbol, needed for the y-domain.\n  symbols.forEach(function(s) {\n    s.values.forEach(function(d) { d.date = parse(d.date); d.price = +d.price; });\n    s.maxPrice = d3.max(s.values, function(d) { return d.price; });\n    s.sumPrice = d3.sum(s.values, function(d) { return d.price; });\n  });\n\n  // Sort by maximum price, descending.\n  symbols.sort(function(a, b) { return b.maxPrice - a.maxPrice; });\n\n  var g = svg.selectAll(\"g\")\n      .data(symbols)\n    .enter().append(\"g\")\n      .attr(\"class\", \"symbol\");\n\n  setTimeout(lines, duration);\n});\n\nfunction lines() {\n  x = d3.time.scale().range([0, w - 60]);\n  y = d3.scale.linear().range([h / 4 - 20, 0]);\n\n  // Compute the minimum and maximum date across symbols.\n  x.domain([\n    d3.min(symbols, function(d) { return d.values[0].date; }),\n    d3.max(symbols, function(d) { return d.values[d.values.length - 1].date; })\n  ]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + (i * h / 4 + 10) + \")\"; });\n\n  g.each(function(d) {\n    var e = d3.select(this);\n\n    e.append(\"path\")\n        .attr(\"class\", \"line\");\n\n    e.append(\"circle\")\n        .attr(\"r\", 5)\n        .style(\"fill\", function(d) { return color(d.key); })\n        .style(\"stroke\", \"#000\")\n        .style(\"stroke-width\", \"2px\");\n\n    e.append(\"text\")\n        .attr(\"x\", 12)\n        .attr(\"dy\", \".31em\")\n        .text(d.key);\n  });\n\n  function draw(k) {\n    g.each(function(d) {\n      var e = d3.select(this);\n      y.domain([0, d.maxPrice]);\n\n      e.select(\"path\")\n          .attr(\"d\", function(d) { return line(d.values.slice(0, k + 1)); });\n\n      e.selectAll(\"circle, text\")\n          .data(function(d) { return [d.values[k], d.values[k]]; })\n          .attr(\"transform\", function(d) { return \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\"; });\n    });\n  }\n\n  var k = 1, n = symbols[0].values.length;\n  d3.timer(function() {\n    draw(k);\n    if ((k += 2) >= n - 1) {\n      draw(n - 1);\n      setTimeout(horizons, 500);\n      return true;\n    }\n  });\n}\n\nfunction horizons() {\n  svg.insert(\"defs\", \".symbol\")\n    .append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", w)\n      .attr(\"height\", h / 4 - 20);\n\n  var color = d3.scale.ordinal()\n      .range([\"#c6dbef\", \"#9ecae1\", \"#6baed6\"]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"clip-path\", \"url(#clip)\");\n\n  area\n      .y0(h / 4 - 20);\n\n  g.select(\"circle\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (-h / 4) + \")\"; })\n      .remove();\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (h / 4 - 20) + \")\"; })\n      .attr(\"dy\", \"0em\");\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).selectAll(\".area\")\n        .data(d3.range(3))\n      .enter().insert(\"path\", \".line\")\n        .attr(\"class\", \"area\")\n        .attr(\"transform\", function(d) { return \"translate(0,\" + (d * (h / 4 - 20)) + \")\"; })\n        .attr(\"d\", area(d.values))\n        .style(\"fill\", function(d, i) { return color(i); })\n        .style(\"fill-opacity\", 1e-6);\n\n    y.domain([0, d.maxPrice / 3]);\n\n    d3.select(this).selectAll(\".line\").transition()\n        .duration(duration)\n        .attr(\"d\", line(d.values))\n        .style(\"stroke-opacity\", 1e-6);\n\n    d3.select(this).selectAll(\".area\").transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1)\n        .attr(\"d\", area(d.values))\n        .each(\"end\", function() { d3.select(this).style(\"fill-opacity\", null); });\n  });\n\n  setTimeout(areas, duration + delay);\n}\n\nfunction areas() {\n  var g = svg.selectAll(\".symbol\");\n\n  axis\n      .y(h / 4 - 21);\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return axis(d.values); });\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).select(\".line\").transition()\n        .duration(duration)\n        .style(\"stroke-opacity\", 1)\n        .each(\"end\", function() { d3.select(this).style(\"stroke-opacity\", null); });\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1e-6)\n        .attr(\"d\", area(d.values))\n        .remove();\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return !i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill\", color(d.key))\n        .attr(\"d\", area(d.values));\n  });\n\n  svg.select(\"defs\").transition()\n      .duration(duration)\n      .remove();\n\n  g.transition()\n      .duration(duration)\n      .each(\"end\", function() { d3.select(this).attr(\"clip-path\", null); });\n\n  setTimeout(stackedArea, duration + delay);\n}\n\nfunction stackedArea() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  area\n      .y0(function(d) { return y(d.price0); })\n      .y1(function(d) { return y(d.price0 + d.price); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration)\n      .attr(\"transform\", \"translate(0,0)\")\n      .each(\"end\", function() { d3.select(this).attr(\"transform\", null); });\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", function(d, i) { return i < 3 ? 1e-6 : 1; })\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(streamgraph, duration + delay);\n}\n\nfunction streamgraph() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\")\n      .offset(\"wiggle\");\n\n  stack(symbols);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration);\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(overlappingArea, duration + delay);\n}\n\nfunction overlappingArea() {\n  var g = svg.selectAll(\".symbol\");\n\n  line\n      .y(function(d) { return y(d.price0 + d.price); });\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d.maxPrice; }))])\n      .range([h, 0]);\n\n  area\n      .y0(h)\n      .y1(function(d) { return y(d.price); });\n\n  line\n      .y(function(d) { return y(d.price); });\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", .5)\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price) + \")\"; });\n\n  svg.append(\"line\")\n      .attr(\"class\", \"line\")\n      .attr(\"x1\", 0)\n      .attr(\"x2\", w - 60)\n      .attr(\"y1\", h)\n      .attr(\"y2\", h)\n      .style(\"stroke-opacity\", 1e-6)\n    .transition()\n      .duration(duration)\n      .style(\"stroke-opacity\", 1);\n\n  setTimeout(groupedBar, duration + delay);\n}\n\nfunction groupedBar() {\n  x = d3.scale.ordinal()\n      .domain(symbols[0].values.map(function(d) { return d.date; }))\n      .rangeBands([0, w - 60], .1);\n\n  var x1 = d3.scale.ordinal()\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeBands([0, x.rangeBand()]);\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .remove();\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", 1e-6)\n      .remove();\n\n  g.each(function(p, j) {\n    d3.select(this).selectAll(\"rect\")\n        .data(function(d) { return d.values; })\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.date) + x1(p.key); })\n        .attr(\"y\", function(d) { return y(d.price); })\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"height\", function(d) { return h - y(d.price); })\n        .style(\"fill\", color(p.key))\n        .style(\"fill-opacity\", 1e-6)\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1);\n  });\n\n  setTimeout(stackedBar, duration + delay);\n}\n\nfunction stackedBar() {\n  x.rangeRoundBands([0, w - 60], .1);\n\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  var g = svg.selectAll(\".symbol\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.select(\"text\")\n      .delay(symbols[0].values.length * 10)\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price); })\n      .attr(\"height\", function(d) { return h - y(d.price); })\n      .each(\"end\", function() {\n        d3.select(this)\n            .style(\"stroke\", \"#fff\")\n            .style(\"stroke-opacity\", 1e-6)\n          .transition()\n            .duration(duration / 2)\n            .attr(\"x\", function(d) { return x(d.date); })\n            .attr(\"width\", x.rangeBand())\n            .style(\"stroke-opacity\", 1);\n      });\n\n  setTimeout(transposeBar, duration + symbols[0].values.length * 10 + delay);\n}\n\nfunction transposeBar() {\n  x\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeRoundBands([0, w], .2);\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d3.sum(d.values.map(function(d) { return d.price; })); }))]);\n\n  var stack = d3.layout.stack()\n      .x(function(d, i) { return i; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; });\n\n  stack(d3.zip.apply(null, symbols.map(function(d) { return d.values; }))); // transpose!\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price) - 1; })\n      .attr(\"height\", function(d) { return h - y(d.price) + 1; })\n      .attr(\"x\", function(d) { return x(d.symbol); })\n      .attr(\"width\", x.rangeBand())\n      .style(\"stroke-opacity\", 1e-6);\n\n  t.select(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"transform\", function(d) { return \"translate(\" + (x(d.key) + x.rangeBand() / 2) + \",\" + h + \")\"; })\n      .attr(\"dy\", \"1.31em\")\n      .each(\"end\", function() { d3.select(this).attr(\"x\", null).attr(\"text-anchor\", \"middle\"); });\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"x2\", w);\n\n  setTimeout(donut,  duration / 2 + symbols[0].values.length * 10 + delay);\n}\n\nfunction donut() {\n  var g = svg.selectAll(\".symbol\");\n\n  g.selectAll(\"rect\").remove();\n\n  var pie = d3.layout.pie()\n      .value(function(d) { return d.sumPrice; });\n\n  var arc = d3.svg.arc();\n\n  g.append(\"path\")\n      .style(\"fill\", function(d) { return color(d.key); })\n      .data(function() { return pie(symbols); })\n    .transition()\n      .duration(duration)\n      .tween(\"arc\", arcTween);\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"dy\", \".31em\");\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"y1\", 2 * h)\n      .attr(\"y2\", 2 * h)\n      .remove();\n\n  function arcTween(d) {\n    var path = d3.select(this),\n        text = d3.select(this.parentNode.appendChild(this.previousSibling)),\n        x0 = x(d.data.key),\n        y0 = h - y(d.data.sumPrice);\n\n    return function(t) {\n      var r = h / 2 / Math.min(1, t + 1e-3),\n          a = Math.cos(t * Math.PI / 2),\n          xx = (-r + (a) * (x0 + x.rangeBand()) + (1 - a) * (w + h) / 2),\n          yy = ((a) * h + (1 - a) * h / 2),\n          f = {\n            innerRadius: r - x.rangeBand() / (2 - a),\n            outerRadius: r,\n            startAngle: a * (Math.PI / 2 - y0 / r) + (1 - a) * d.startAngle,\n            endAngle: a * (Math.PI / 2) + (1 - a) * d.endAngle\n          };\n\n      path.attr(\"transform\", \"translate(\" + xx + \",\" + yy + \")\");\n      path.attr(\"d\", arc(f));\n      text.attr(\"transform\", \"translate(\" + arc.centroid(f) + \")translate(\" + xx + \",\" + yy + \")rotate(\" + ((f.startAngle + f.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n    };\n  }\n\n  setTimeout(donutExplode, duration + delay);\n}\n\nfunction donutExplode() {\n  var r0a = h / 2 - x.rangeBand() / 2,\n      r1a = h / 2,\n      r0b = 2 * h - x.rangeBand() / 2,\n      r1b = 2 * h,\n      arc = d3.svg.arc();\n\n  svg.selectAll(\".symbol path\")\n      .each(transitionExplode);\n\n  function transitionExplode(d, i) {\n    d.innerRadius = r0a;\n    d.outerRadius = r1a;\n    d3.select(this).transition()\n        .duration(duration / 2)\n        .tween(\"arc\", tweenArc({\n          innerRadius: r0b,\n          outerRadius: r1b\n        }));\n  }\n\n  function tweenArc(b) {\n    return function(a) {\n      var path = d3.select(this),\n          text = d3.select(this.nextSibling),\n          i = d3.interpolate(a, b);\n      for (var key in b) a[key] = b[key]; // update data\n      return function(t) {\n        var a = i(t);\n        path.attr(\"d\", arc(a));\n        text.attr(\"transform\", \"translate(\" + arc.centroid(a) + \")translate(\" + w / 2 + \",\" + h / 2 +\")rotate(\" + ((a.startAngle + a.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n      };\n    }\n  }\n\n  setTimeout(function() {\n    svg.selectAll(\"*\").remove();\n    svg.selectAll(\"g\").data(symbols).enter().append(\"g\").attr(\"class\", \"symbol\");\n    lines();\n  }, duration);\n}\n\n</script>\n", "description": "D3 Show Reel", "created_at": "2016-02-02T21:45:16Z", "updated_at": "2016-02-02T21:45:17Z", "api": ["d3.scale.category10", "d3.select", "d3.svg.line", "d3.svg.area", "d3.csv", "d3.time.format", "d3.nest", "d3.max", "d3.sum", "d3.time.scale", "d3.scale.linear", "d3.min", "d3.timer", "d3.scale.ordinal", "d3.range", "d3.layout.stack", "d3.zip.apply", "d3.layout.pie", "d3.svg.arc", "d3.interpolate"], "readme": "The first 15 seconds of the D3 show reel. See full video at <http://vimeo.com/29862153>. Includes seamless transitions between the following visualization types:\n\n* lines\n* horizons\n* areas\n* stacked areas\n* streamgraph\n* overlapping areas\n* grouped bars\n* stacked bars\n* bars\n* donut\n\nAdmittedly, these aren\u2019t the most useful visualizations; their purpose is not to inform but to demonstrate D3\u2019s capability for producing dynamic visualizations with custom transitions. They *do* show real data (the monthly closing price for ten years\u2019 worth of stock data), but I didn\u2019t include axes for date or price. See the [axis component](http://bl.ocks.org/1166403) for a better example. Also, the stacked visualizations aren\u2019t especially meaningful, unless you imagine owning a portfolio with equal parts AAPL, AMZN, IBM and MSFT. Similarly, the bars and donuts represent the *average* price (or sum) during this time period.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1256572'>D3 Show Reel</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/9c5e51b7ecc472f08562'>D3 Show Reel</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/dc46be50fae1cd49ad54'>D3 Show Reel</a>", "uid": "sivartravis_4279eb6fff6a7d47ca74"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Zoomable Treemap</title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n<script src=\"http://d3js.org/d3.v2.js\"></script>\n<script src=\"http://code.jquery.com/jquery-1.7.1.js\"></script>\n\n<p id=\"chart\">\n<p id=\"rawdata\">\n\n<script src=\"treemap.js\"></script>\n<script>\n\tfunction reSortRoot(root,value_key) {\n\t\t//console.log(\"Calling\");\n\t\tfor (var key in root) {\n\t\t\tif (key == \"key\") {\n\t\t\t\troot.name = root.key;\n\t\t\t\tdelete root.key;\n\t\t\t}\n\t\t\tif (key == \"values\") {\n\t\t\t\troot.children = [];\n\t\t\t\tfor (item in root.values) {\n\t\t\t\t\troot.children.push(reSortRoot(root.values[item],value_key));\n\t\t\t\t}\n\t\t\t\tdelete root.values;\n\t\t\t}\n\t\t\tif (key == value_key) {\n\t\t\t\troot.value = parseFloat(root[value_key]);\n\t\t\t\tdelete root[value_key];\n\t\t\t}\n\t\t}\n\t\treturn root;\n\t}\n\n\t$( document ).ready(function() {\n\t\t// You can comment out the whole csv section if you just have a JSON file.\n    // loadJSONFile('data/portaldata.json');\n\n    \td3.csv(\"UK_Home_Office_Air_Travel_Data_2011.csv\", function(csv_data){\n\n\t\t\t// Add, remove or change the key values to change the hierarchy. \n      var nested_data = d3.nest()\n       \t\t\t\t.key(function(d)  { return d.Destination; })\n       \t\t\t\t.key(function(d)  { return d.Supplier_name; })\n              .key(function(d)  { return d.Ticket_class_description; })\n\t\t\t\t      .entries(csv_data);\n\t\t\t\n\t\t\t// Creat the root node for the treemap\n\t\t\tvar root = {};\n\t\t\t\n\t\t\t// Add the data to the tree\n\t\t\troot.key = \"Data\";\n\t\t\troot.values = nested_data;\n\t\t\n\t\t\t// Change the key names and children values from .next and add values for a chosen column to define the size of the blocks\n\t\t\troot = reSortRoot(root,\"Paid_fare\");\n\t\t\t\n\t\t\t// DEBUG\n// \t\t\t$(\"#rawdata\").html(JSON.stringify(root));\n\t\t\t\n\t\t\tloadData(root);\n\t\t\t\n\t\t});\n\n\n\t});\n</script>\n", "description": "D3 Treemap from CSV with d3.nest", "created_at": "2016-04-21T20:19:43Z", "updated_at": "2016-04-21T20:19:43Z", "api": ["d3.csv", "d3.nest", "d3.format", "d3.scale.linear", "d3.layout.treemap", "d3.select", "d3.scale.category20c", "d3.json"], "readme": "Treemap from CSV of flights taken by members of the UK Government Home Office in 2011.\n\nOriginal dataset from: [http://data.gov.uk/dataset/home-office-flight-data](http://data.gov.uk/dataset/home-office-flight-data)\n\nThanks to:\n  [PMeinshausen](http://bl.ocks.org/PMeinshausen/5806106)\n  [phoebebright](https://gist.github.com/phoebebright/3176159)\n  [mbostock](http://bost.ocks.org/mike/)\n\nforked from <a href='http://bl.ocks.org/davetaz/'>davetaz</a>'s block: <a href='http://bl.ocks.org/davetaz/9954190'>D3 Treemap from CSV with d3.nest</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/6a8a2a34f8e185c00b17f005c7e12bb0'>D3 Treemap from CSV with d3.nest</a>", "uid": "CBasis_6a76935b609b0b2a38596c46fb690bba"}, {"code": "<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>A very simple D3 map</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n    <script src=\"ky-counties.js\"></script>\n    \n    <link href=\"http://fonts.googleapis.com/css?family=Montserrat\" rel=\"stylesheet\" type=\"text/css\">\n<style>\n    body {\n        padding: 0;\n        margin: 0;\n        background: whitesmoke;\n    }\n    h1 {\n        position: absolute;\n        left: 20px;\n        top: 10px;\n        font-family: \"Proxima Nova\", Montserrat, sans-serif;\n        font-size: 2em;\n        font-weight: 100;\n        color: #005DAA; /* offical UK Kentucky blue */\n    }\n    .county {\n      stroke: #fff;\n      fill:#005DAA;\n    } \n</style>\n</head>\n<body>\n    <h1>Kentucky Counties</h1>\n  <script>\n        \n    var width = 900,\n        height = 600;\n    \n    var svg = d3.select( \"body\" )\n          .append( \"svg\" )\n          .attr( \"width\", width )\n          .attr( \"height\", height );\n      \n    var projection = d3.geo.albers()\n        .center([0, 37.8])\n        .rotate([85.8,0])\n        .scale(8000)\n        .translate([width / 2, height / 2]);\n\n    var geoPath = d3.geo.path()\n        .projection(projection);\n        \n    svg.append(\"g\")\n        .selectAll(\"path\")\n        .data(counties.features)\n        .enter()\n        .append(\"path\")\n        .attr( \"d\", geoPath )\n        .attr(\"class\",\"county\");\n \n  </script>\n</body>\n</html>", "description": "A very simple D3 map", "created_at": "2015-06-24T15:15:37Z", "updated_at": "2015-08-29T14:23:38Z", "api": ["d3.select", "d3.geo.albers", "d3.geo.path"], "readme": "Example of map explained in maptimeLex [Introduction to D3.js Web Mapping Through 7 Simple Maps](https://github.com/maptimelex/d3-mapping).", "uid": "rgdonohue_4793dab7f993a81cc670"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>", "description": "Simple d3.js Graph", "created_at": "2016-02-27T19:56:57Z", "updated_at": "2016-02-27T19:56:57Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a simple d3.js graph used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at providing some exposure to some d3.js functions and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "hungvietdo_28d434d3818db4fbe369"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>", "description": "Simple d3.js Graph", "created_at": "2014-06-20T19:35:38Z", "updated_at": "2016-04-22T23:23:58Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a simple d3.js graph used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at providing some exposure to some d3.js functions and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_b3ff6ae1c120eea654b5"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\nbody {\n  margin: 0;\n  font:normal 10px/15px 'Helvetica', sans-serif;\n}\na {\n  color:#444;\n}\n.map {\n  position: absolute;\n  top:0;\n  bottom:0;\n  right:0;\n  left:0;\n  overflow: hidden;\n}\n.layer {\n  position: absolute;\n}\n.tile {\n  position: absolute;\n  width: 256px;\n  height: 256px;\n}\n.info {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n}\n.attribution {\n  position:absolute;\n  bottom:0;\n  left:0;\n  z-index:9;\n  background:#fff;\n  padding:2px 4px;\n}\n</style>\n<body>\n<div class='attribution'><a href='http://mapbox.com/about/maps/'>Terms &amp; Conditions</a></div>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/d3.geo.tile.v0.min.js\"></script>\n<script>\nvar width = window.innerWidth,\n    height = window.innerHeight,\n    prefix = prefixMatch([\"webkit\", \"ms\", \"Moz\", \"O\"]);\n\nvar tile = d3.geo.tile()\n    .size([width, height]);\n\nvar projection = d3.geo.mercator();\n\nvar zoom = d3.behavior.zoom()\n    .scale(1 << 10)\n    .scaleExtent([1 << 9, 1 << 23])\n    .translate([width / 2, height / 2])\n    .on(\"zoom\", zoomed);\n\nvar map = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"map\")\n    .style(\"width\", width + \"px\")\n    .style(\"height\", height + \"px\")\n    .call(zoom);\n\nvar layer = map.append(\"div\")\n    .attr(\"class\", \"layer\");\n\nvar info = map.append(\"div\")\n    .attr(\"class\", \"info\");\n\nzoomed();\n\nfunction zoomed() {\n  var tiles = tile\n      .scale(zoom.scale())\n      .translate(zoom.translate())\n      ();\n\n  projection\n      .scale(zoom.scale())\n      .translate(zoom.translate());\n\n  var image = layer\n      .style(prefix + \"transform\", matrix3d(tiles.scale, tiles.translate))\n    .selectAll(\".tile\")\n      .data(tiles, function(d) { return d; });\n\n  image.exit()\n      .remove();\n\n  image.enter().append(\"img\")\n      .attr(\"class\", \"tile\")\n      .attr(\"src\", function(d) { return \"http://\" + [\"a\", \"b\", \"c\", \"d\"][Math.random() * 4 | 0] +\n        \".tiles.mapbox.com/v3/examples.map-vyofok3q/\" + d[2] + \"/\" + d[0] + \"/\" + d[1] + \".png\"; })\n      .style(\"left\", function(d) { return (d[0] << 8) + \"px\"; })\n      .style(\"top\", function(d) { return (d[1] << 8) + \"px\"; });\n}\n\nfunction matrix3d(scale, translate) {\n  var k = scale / 256, r = scale % 1 ? Number : Math.round;\n  return \"matrix3d(\" + [k, 0, 0, 0, 0, k, 0, 0, 0, 0, k, 0, r(translate[0] * scale), r(translate[1] * scale), 0, 1 ] + \")\";\n}\n\nfunction prefixMatch(p) {\n  var i = -1, n = p.length, s = document.body.style;\n  while (++i < n) if (p[i] + \"Transform\" in s) return \"-\" + p[i].toLowerCase() + \"-\";\n  return \"\";\n}\n</script>\n", "description": "Basic d3 Example", "created_at": "2013-03-12T22:15:06Z", "updated_at": "2015-12-14T20:58:58Z", "api": ["d3.geo.tile", "d3.geo.mercator", "d3.behavior.zoom", "d3.select"], "readme": "Based off of [Mike Bostock's d3.geo.tile example](http://bl.ocks.org/mbostock/4132797).", "uid": "tmcw_5147590"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the scatterplot\n    svg.selectAll(\"dot\")\n        .data(data)\n      .enter().append(\"circle\")\n        .attr(\"r\", 3.5)\n        .attr(\"cx\", function(d) { return x(d.date); })\n        .attr(\"cy\", function(d) { return y(d.close); });\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>\n", "description": "Simple scatterplot with d3.js", "created_at": "2014-06-22T18:12:55Z", "updated_at": "2015-08-29T14:02:53Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple d3.js graph](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt adds points to a simple line graph to produce a hybrid line / scatterplot graph. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_38744a17f9c0141bcd04"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Automated Convex Hulls</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  .cityhull {\n    fill: purple;\n    fill-opacity: .5;\n    stroke: black;\n    stroke-width: 1px;\n  }\n  \n  .point {\n    fill: darkred;\n    stroke: black;\n    stroke-width: 1px;\n  }\n\n</style>\n<script>\n      function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    \n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Base\")\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"all_sites.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"point\")\n    .renderMode(\"canvas\")\n    .markerSize(1)\n    .x(\"xcoord\")\n    .y(\"ycoord\")\n    .on(\"load\", makeHull)\n    .clickableFeatures(true);\n\n    map.addCartoLayer(tileLayer)\n    .addCartoLayer(csvLayer);\n    map.centerOn([-115,40],\"latlong\").setScale(2);\n\n        function makeHull() {\n          hullLayer = map.createHullLayer(csvLayer, function(d) {return d.ccode});\n          hullLayer.markerSize(1).cssClass(\"cityhull\")\n          .on(\"load\", recolorHulls)\n          map.addCartoLayer(hullLayer);\n          \n          function recolorHulls() {\n            var hullColor = d3.scale.category20b();\n              hullLayer.g()\n              .selectAll(\"path\")\n              .style(\"fill\", function(d,i) {return hullColor(i%20)});\n          }\n    }\n\n  }\n  \n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Automated Convex Hulls - d3.carto", "created_at": "2014-09-25T02:30:15Z", "updated_at": "2015-08-29T14:06:52Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer", "d3.carto.layer.csv", "d3.scale.category20b"], "readme": "Automated convex hull layers in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\n**map.createHullLayer** takes a d3.carto.layer and an accessor function that identifies the categorical attributes of the features in that carto layer from which to create hulls. In this example, hulls are created based on the \"ccode\" attribute of a feature.\n", "uid": "emeeks_e484f2b1b5ba6c4742f6"}, {"code": "<html>\n<head>\n  <title>d3.svg.ribbon Example</title>\n  <meta charset=\"utf-8\" />\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"d3.svg.ribbon.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    height: 1000px;\n    width: 1000px;\n  }\n\n</style>\n<body>\n\n<div id=\"viz\">\n  <svg>\n  </svg>\n</div>\n</body>\n  <footer>\n\n<script>\n\nvar points = [{x: 20, y:20, t: 10},{x:200,y:20, t: 5},{x:20,y:200, t: 15},{x:200,y:200, t: 2}];\n\nribbon = d3.svg.ribbon()\n  .x(function(d) {return d.x})\n  .y(function(d) {return d.y})\n  .r(function(d) {return d.t});\n\ndrag = d3.behavior.drag().on(\"drag\", function (d) {\n  d.x = d3.event.x;\n  d.y = d3.event.y;\n  redraw();\n})\n\nd3.select(\"svg\")\n.append(\"path\")\n.style(\"fill\", \"lightblue\")\n.style(\"stroke\", \"blue\")\n.style(\"stroke-opacity\", 0.75)\n.style(\"stroke-width\", \"2px\")\n.attr(\"d\", ribbon(points))\n\nd3.select(\"svg\")\n.selectAll(\"circle\")\n.data(points)\n.enter()\n.append(\"circle\")\n.attr(\"r\", 3)\n.style(\"fill\", \"lightgreen\")\n.style(\"stroke\", \"blue\")\n.style(\"stroke-width\", \"2px\")\n.attr(\"cx\", function (d) {return d.x})\n.attr(\"cy\", function (d) {return d.y})\n.attr(\"r\", function (d) {return d.t})\n.style(\"stroke-opacity\", 0.75)\n.call(drag);\n\nfunction redraw() {\n  d3.selectAll(\"circle\")\n    .attr(\"cx\", function (d) {return d.x})\n    .attr(\"cy\", function (d) {return d.y});\n\n  d3.select(\"path\")\n    .attr(\"d\", ribbon(points));\n}\n\n</script>\n  </footer>\n\n</html>\n", "description": "d3.svg.ribbon example", "created_at": "2015-08-22T20:38:02Z", "updated_at": "2016-03-16T15:48:14Z", "api": ["d3.svg.line", "d3.svg.ribbon", "d3.behavior.drag", "d3.select", "d3.selectAll"], "readme": "An example of [d3.svg.ribbon](https://github.com/emeeks/d3.svg.ribbon).\n\nDrag the circles to see the underlying single `svg:path` element re-interpolated based on the changing position of the points and their radii that are used to generate it. This is a different way of generating areas than `d3.svg.area` and might prove more suitable for some applications.", "uid": "emeeks_a1e48992be56681e3f93"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the scatterplot\n    svg.selectAll(\"dot\")\n        .data(data)\n      .enter().append(\"circle\")\n        .attr(\"r\", 3.5)\n        .attr(\"cx\", function(d) { return x(d.date); })\n        .attr(\"cy\", function(d) { return y(d.close); });\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>\n", "description": "Simple scatterplot with d3.js", "created_at": "2016-02-24T21:47:55Z", "updated_at": "2016-02-24T21:47:56Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple d3.js graph](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt adds points to a simple line graph to produce a hybrid line / scatterplot graph. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/38744a17f9c0141bcd04'>Simple scatterplot with d3.js</a>", "uid": "nguyenbq_a350280a02c8105529d0"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\ndiv.tooltip {\t\n    position: absolute;\t\t\t\n    text-align: center;\t\t\t\n    width: 60px;\t\t\t\t\t\n    height: 28px;\t\t\t\t\t\n    padding: 2px;\t\t\t\t\n    font: 12px sans-serif;\t\t\n    background: lightsteelblue;\t\n    border: 0px;\t\t\n    border-radius: 8px;\t\t\t\n    pointer-events: none;\t\t\t\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\nvar formatTime = d3.time.format(\"%e %B\");\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n\n// Define the div for the tooltip\nvar div = d3.select(\"body\").append(\"div\")\t\n    .attr(\"class\", \"tooltip\")\t\t\t\t\n    .style(\"opacity\", 0);\n\n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the scatterplot\n    svg.selectAll(\"dot\")\t\n        .data(data)\t\t\t\n    .enter().append(\"circle\")\t\t\t\t\t\t\t\t\n        .attr(\"r\", 5)\t\t\n        .attr(\"cx\", function(d) { return x(d.date); })\t\t \n        .attr(\"cy\", function(d) { return y(d.close); })\t\t\n        .on(\"mouseover\", function(d) {\t\t\n            div.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", .9);\t\t\n            div\t.html(formatTime(d.date) + \"<br/>\"  + d.close)\t\n                .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\t\n            div.transition()\t\t\n                .duration(500)\t\t\n                .style(\"opacity\", 0);\t\n        });\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>\n", "description": "Simple d3.js tooltips", "created_at": "2014-06-22T18:24:10Z", "updated_at": "2016-03-14T18:37:43Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple scatterplot](http://bl.ocks.org/d3noob/38744a17f9c0141bcd04) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at demonstrating a simple tooltip using d3.js and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_a22c42db65eb00d4e369"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.fill {\n  fill: #ccc;\n}\n\n.stroke {\n  fill: none;\n  stroke: #000;\n  stroke-width: 20px;\n}\n\n</style>\n<svg width=\"960\" height=\"500\" viewBox=\"-2 -2 100 95\">\n  <defs>\n    <path id=\"dee\" d=\"M0,0h7.75a45.5,45.5 0 1 1 0,91h-7.75v-20h7.75a25.5,25.5 0 1 0 0,-51h-7.75z\"/>\n    <path id=\"three\" d=\"M36.2510,0h32a27.75,27.75 0 0 1 21.331,45.5a27.75,27.75 0 0 1 -21.331,45.5h-32a53.6895,53.6895 0 0 0 18.7464,-20h13.2526a7.75,7.75 0 1 0 0,-15.5h-7.75a53.6895,53.6895 0 0 0 0,-20h7.75a7.75,7.75 0 1 0 0,-15.5h-13.2526a53.6895,53.6895 0 0 0 -18.7464,-20z\"/>\n    <clipPath id=\"clip-three\">\n      <use xlink:href=\"#three\"/>\n    </clipPath>\n  </defs>\n  <use class=\"fill\" xlink:href=\"#dee\"/>\n  <use class=\"fill\" xlink:href=\"#three\"/>\n  <path class=\"stroke\" style=\"display:none;\" d=\"M0,10h7.75a35.5,35.5 0 1 1 0,71h-7.75\"/>\n  <path class=\"stroke\" style=\"display:none;\" clip-path=\"url(#clip-three)\" d=\"M36.2510,10h32a17.75,17.75 0 0 1 0,35.5h-7.75h7.75a17.75,17.75 0 0 1 0,35.5h-32\"/>\n</svg>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nd3.select(this)\n    .on(\"touchstart\", animate)\n    .on(\"click\", animate)\n    .on(\"load\", animate);\n\nfunction animate() {\n  var delay = 0,\n      stroke = d3.selectAll(\".stroke\");\n\n  // First cancel any active or scheduled transitions.\n  stroke.interrupt().transition();\n\n  // Then schedule the new transition.\n  stroke.transition().each(function() {\n    var length = this.getTotalLength(),\n        duration = length * 10;\n\n    d3.select(this)\n        .style(\"display\", null)\n        .style(\"stroke-dasharray\", \"0,\" + length)\n      .transition()\n        .delay(delay)\n        .duration(duration)\n        .style(\"stroke-dasharray\", length + \",\" + length);\n\n    delay += duration;\n  });\n}\n\n</script>\n", "description": "Animated D3 Logo", "created_at": "2015-11-07T20:15:01Z", "updated_at": "2015-11-07T20:15:01Z", "api": ["d3.select", "d3.selectAll"], "readme": "Animating the [D3 logo](/mbostock/c9455b842a01f6907020) as if it were being drawn by hand.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/bc4e32ec71636b498c46'>Animated D3 Logo</a>", "uid": "wcjohnson11_7fb5012dc2a9643541ac"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Simple Chloropleth 2</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n.wards {\n    fill: gray;\n    stroke: gray;\n    stroke-width: 1px;\n}\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    map.setScale(9)\n    map.centerOn([-0.1275,51.507],\"latlong\");\n\n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\")\n    \n    topojsonLayer = d3.carto.layer();\n    topojsonLayer\n    .type(\"topojson\")\n    .path(\"http://bl.ocks.org/emeeks/raw/80dc1e4c11586c47a266/glondon.topojson\")\n    .label(\"London Wards\")\n    .cssClass(\"wards\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true)\n    .on(\"load\", colorBySize);\n\n    map.addCartoLayer(tileLayer);\n    map.addCartoLayer(topojsonLayer);\n    \n// Function is called on load because it won't have anything to apply to until the layer is loaded\n    function colorBySize() {\n    var featureData = topojsonLayer.features();\n    var sizeExtent = d3.extent(featureData, function (d) {return d.properties.w_size})\n    var sizeScale = d3.scale.quantile().domain(sizeExtent).range(colorbrewer.Greens[5]);\n\n      d3.selectAll(\"path.wards\")\n      .style(\"fill\", function (d) {return sizeScale(d.properties.w_size)})\n    \n        //Some simple hover behavior\n    d3.selectAll(\"path.wards\").style(\"pointer-events\", \"auto\").on(\"mouseover\", wardOver).on(\"mouseout\", wardOut);\n    \n    function wardOver(d,i) {\n      d3.selectAll(\"path.wards\").style(\"opacity\", function (p) {return p.properties.region == d.properties.region ? .3 : 1})\n    }\n\n    function wardOut(d,i) {\n      d3.selectAll(\"path.wards\").style(\"opacity\", 1)\n    }\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Choropleth 2 - d3.carto.map", "created_at": "2014-07-14T23:08:37Z", "updated_at": "2015-08-29T14:03:58Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer", "d3.extent", "d3.scale.quantile", "d3.selectAll"], "readme": "A simple choropleth map made with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nAfter adding a tile layer and a topojson layer, you can access the features either by using map.layers() or the layer if assigned to a variable or via d3.selectAll.data() on the appropriate elements. You can then style the features based on their properties. In this case, the size of the ward.\n\nSome hover behavior can also be defined using D3. Here we the wards in a shared region are turned semi-transparent.", "uid": "emeeks_c5c36485442d1779581d"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - globe mode</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .reproject {\n    position: absolute;\n    z-index: 99;\n    left: 50px;\n    top: 250px;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    map.mode(\"globe\");\n\n    map.refresh();\n\n    wcLayer = d3.carto.layer.tile();\n    wcLayer\n    .tileType(\"stamen\")\n    .path(\"watercolor\")\n    .label(\"Watercolor\")\n    .visibility(true)\n\n    tonerLayer = d3.carto.layer.tile();\n    tonerLayer\n    .tileType(\"stamen\")\n    .path(\"toner\")\n    .visibility(false)\n    .label(\"Toner\")\n    \n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"SVG Borders\")\n    .cssClass(\"thickborders\")\n    .renderMode(\"svg\")\n    .on(\"load\", selectFeatures);\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(2)\n    .x(\"x\")\n    .y(\"y\");\n\n    map.addCartoLayer(wcLayer).addCartoLayer(tonerLayer).addCartoLayer(geojsonLayer).addCartoLayer(csvLayer);\n    \n      function selectFeatures() {\n\n    fNamedCountries = geojsonLayer.features().filter(function (d) {return d.properties.name.length < 6});\n\n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(fNamedCountries)\n    .label(\"featureArray\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\");\n\n      map.addCartoLayer(featureLayer);\n\n    }\n    \n    d3.select(\"#map\").append(\"button\").attr(\"class\", \"reproject\").html(\"Transform\").on(\"click\", reproject);\n    \n    function reproject() {\n      if (d3.select(\"button.reproject\").html() == \"Transform\") {\n        d3.select(\"button.reproject\").html(\"Projection\")\n        map.mode(\"transform\");\n        map.refresh();\n      }\n      else if (d3.select(\"button.reproject\").html() == \"Globe\") {\n        d3.select(\"button.reproject\").html(\"Transform\")\n        map.mode(\"globe\");\n        map.refresh();        \n      }\n      else {\n        d3.select(\"button.reproject\").html(\"Globe\")\n        map.mode(\"projection\");\n        map.refresh();        \n      }\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Stamen Tiles - d3.carto.map", "created_at": "2015-09-08T08:43:47Z", "updated_at": "2015-09-08T08:43:47Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.csv", "d3.carto.layer.featureArray"], "readme": "Various **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** modes with Stamen tiles from [http://maps.stamen.com/#toner/12/37.7706/-122.3782](http://maps.stamen.com/#toner/12/37.7706/-122.3782).\n\nClick the button to cycle through map modes to see the difference between Transform, Projection and Globe modes.", "uid": "renecnielsen_c072f8145713cb3f0bde"}, {"code": "<!DOCTYPE html>\n<style>\n\tbody {\n\t\tfont-family: 'Open Sans', sans-serif;\n    font-size: 12px;\n\t}\n  .graph {\n    text-align: center;\n  }\n  svg {\n    background-color: #333947;\n  }\n\t.title {\n    font-size: 16px;\n\t\tfont-weight: bold;\n    fill: #fff;\n\t}\n  .caption {\n    fill: #ccc;\n  }\n\t.axis path,\n\t.axis line {\n    fill: none;\n    stroke: #eee;\n    shape-rendering: crispEdges;\n\t}\n  .axis text {\n    fill: #fff;\n  }\n\t.loading {\n    font-size: 15px;\n\t}\n  .plot {\n    fill-opacity: 0.75;\n  }\n\n  .conflict0 { fill: #4990BF; }\n\t.conflict1 { fill: #FF6363; }\n\t.conflict2 { fill: #738b8c; }\n\t.conflict3 { fill: #BC63FF; }\n\t.conflict4 { fill: #EFFF63; }\n\t.conflict5 { fill: #FF3D3D; }\n\t.conflict6 { fill: #496EBF; }\n  .conflict7 { fill: #cda2a2; }\n  .conflict8 { fill: #E563FF; }\n  .conflict9 { fill: #63D8FF; }\n\n  .circle {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n  .circle:hover {\n    stroke: #000;\n    stroke-width: 2px;\n  }\n  .title-tip,\n  .body-tip {\n    line-height: 1;\n    padding: 12px;\n    background: #000;\n    color: #fff;\n    line-height: 14px;\n    border-radius: 2px;\n    pointer-events: none;\n    text-align: center;\n  }\n\n  .body-tip {\n    max-width: 250px;\n  }\n\n  .title-tip div {\n    font-size: 10px;\n    color: #ccc;\n  }\n\n  /* Creates a small triangle extender for the tooltip */\n  .title-tip:after {\n    box-sizing: border-box;\n    display: inline;\n    font-size: 10px;\n    width: 100%;\n    line-height: 1;\n    color: #000;\n    position: absolute;\n    pointer-events: none;\n  }\n\n  .title-tip.n:after {\n    content: \"\\25BC\";\n    margin: -1px 0 0 0;\n    top: 100%;\n    left: 0;\n    text-align: center;\n  }\n\n  .button {\n    height: 25px;\n    width: 125px;\n    stroke: #ccc;\n    stroke-width: 2px;\n    fill: #333947;\n  }\n\n  .button:hover,\n  .button-text:hover {\n    cursor: pointer;\n  }\n\n  .button-active {\n    stroke: #fff;\n    fill: #fff;\n  }\n\n  .button-text {\n    fill: #ccc;\n  }\n\n  .button-text-active {\n    fill: #000;\n  }\n</style> \n\n<div id=\"graph\" class=\"graph\"></div>\n \n<script src=\"http://d3js.org/d3.v2.min.js\"></script>\n<script src=\"http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js\"></script>\n\n<script>\n  var w = 1500;\n  var h = 800;\n  var pad = 40;\n  var above = 125;\n  var left = 225;\n\n  var titleTip = d3.tip()\n                   .attr('class', 'title-tip')\n                   .offset([-3, 0])\n                   .html(function(d) {\n                    return \"<strong>\" + d.title + \"</strong><div>\" + d.pageedits + \" page edits</div>\";\n                   });\n\n  var bodyTip = d3.tip()\n                  .attr('class', 'body-tip')\n                  .html(function(d) { return d.description; });\n   \n  var svg = d3.select(\"#graph\")\n              .append(\"svg\")\n              .attr(\"width\", w)\n              .attr(\"height\", h)\n              .call(titleTip)\n              .call(bodyTip);\n\n  var x = d3.scale.linear().domain([2001, 2006]).range([left, w-pad]);\n  var y = d3.scale.linear().domain([0, 9]).range([above, h-pad-above]);\n   \n  var xAxis = d3.svg.axis().scale(x).orient(\"bottom\")\n    .ticks(6)\n    .tickFormat(d3.format(\"d\"))\n\n  var yAxis = d3.svg.axis().scale(y).orient(\"left\")\n    .ticks(10)\n    .tickFormat(function (d, i) {\n      return ['Technicality','Political','Ethical','Ethnic','International Words','Religion','Culture','Animal Rights','Star Wars','Other'][d];\n    });\n\n  svg.append(\"text\")\n    .attr(\"class\", \"title\")\n    .attr(\"x\", w/2)\n    .attr(\"y\", above/3)\n    .attr(\"text-anchor\", \"middle\")\n    .text(\"Most Debated Wikipedia Articles (2010)\");\n\n  svg.append(\"text\")\n    .attr(\"class\", \"caption\")\n    .attr(\"x\", w/2)\n    .attr(\"y\", above/3+18)\n    .attr(\"text-anchor\", \"middle\")\n    .text(\"Click each circle to read more!\");\n   \n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", \"translate(0, \"+(h-pad)+\")\")\n      .call(xAxis);\n   \n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", \"translate(\"+(left-pad)+\", 0)\")\n      .call(yAxis);\n   \n  svg.append(\"text\")\n      .attr(\"class\", \"loading\")\n      .text(\"Loading...\")\n      .attr(\"x\", function () { return w/2; })\n      .attr(\"y\", function () { return h/2-5; });\n   \n  d3.json(\"data.json\", function (data) {\n    var max_r = d3.max(data.map(function (d) { return d.pageedits; }));\n    var r1 = d3.scale.linear()\n              .domain([0, d3.max(data, function (d) { return d.pageedits; })])\n              .range([3, 100]);\n\n    var r2 = d3.scale.linear()\n              .domain([0, d3.max(data, function (d) { return d.pagesofdiscussion; })])\n              .range([3, 100]);\n\n    var displayCircles = function(flag) {\n      data.sort(function(a,b) {\n        var i,j;\n        if (flag == 0) {\n          i = a.pageedits;\n          j = b.pageedits;\n        } else {\n          i = a.pagesofdiscussion;\n          j = b.pagesofdiscussion;\n        }\n        if (i > j)\n          return -1;\n        if (i < j)\n          return 1;\n        return 0;\n      });\n\n      svg.selectAll(\"circle\").remove();\n      svg.selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", function (d) { return \"circle conflict\"+d.conflicttype; })\n        .attr(\"cx\", function (d) { return x(d.creationdate); })\n        .attr(\"cy\", function (d) { return y(d.conflicttype); })\n        .on('mouseover', titleTip.show)\n        .on('mouseout', function(d) {\n          titleTip.hide();\n          bodyTip.hide(d);\n        })\n        .on('click', function (d) {\n          titleTip.hide();\n          bodyTip.show(d);\n        })\n        .transition()\n        .duration(800)\n        .attr(\"r\", function (d) {\n          if (flag == 0) {\n            return r1(d.pageedits);\n          } else {\n            return r2(d.pagesofdiscussion);\n          }\n        });\n\n      titleTip.html(function(d) {\n        if (flag == 0) {\n          return \"<strong>\" + d.title + \"</strong><div>\" + d.pageedits + \" page edits</div>\";\n        } else {\n          return \"<strong>\" + d.title + \"</strong><div>\" + d.pagesofdiscussion + \" pages of discussion</div>\";\n        }\n      });\n    }\n\n    var toggleButton = function (flag) {\n      if (flag == 0) {\n        button1.attr(\"class\", \"button button-active\");\n        button2.attr(\"class\", \"button\");\n        buttonText1.attr(\"class\", \"button-text button-text-active\");\n        buttonText2.attr(\"class\", \"button-text\");\n      } else {\n        button1.attr(\"class\", \"button\");\n        button2.attr(\"class\", \"button button-active\");\n        buttonText1.attr(\"class\", \"button-text\");\n        buttonText2.attr(\"class\", \"button-text button-text-active\");\n      }\n    }\n \n    svg.selectAll(\".loading\").remove();\n \n    displayCircles(0);\n\n    var button1 = svg.append(\"rect\")\n                     .attr(\"class\", \"button button-active\")\n                     .attr(\"height\", 25)\n                     .attr(\"width\", 125)\n                     .attr(\"x\", left/2)\n                     .attr(\"y\", above/2)\n                     .attr(\"rx\", 5)\n                     .attr(\"ry\", 5)\n                     .on(\"click\", function() {\n                        toggleButton(0);\n                        return displayCircles(0);\n                      });\n\n    var buttonText1 = svg.append(\"text\")\n                     .attr(\"class\", \"button-text button-text-active\")\n                     .attr(\"x\", left/2 + 63)\n                     .attr(\"y\", above/2 + 16)\n                     .attr(\"text-anchor\", \"middle\")\n                     .text(\"Page Edits\")\n                     .on(\"click\", function() {\n                        toggleButton(0);\n                        return displayCircles(0);\n                      });\n\n    var button2 = svg.append(\"rect\")\n                     .attr(\"class\", \"button\")\n                     .attr(\"height\", 25)\n                     .attr(\"width\", 125)\n                     .attr(\"x\", left/2+125)\n                     .attr(\"y\", above/2)\n                     .attr(\"rx\", 5)\n                     .attr(\"ry\", 5)\n                     .on(\"click\", function() {\n                        toggleButton(1);\n                        return displayCircles(1);\n                      });\n\n    var buttonText2 = svg.append(\"text\")\n                     .attr(\"class\", \"button-text\")\n                     .attr(\"x\", left/2 + 188)\n                     .attr(\"y\", above/2 + 16)\n                     .attr(\"text-anchor\", \"middle\")\n                     .text(\"Pages of Discussion\")\n                     .on(\"click\", function() {\n                        toggleButton(1);\n                        return displayCircles(1);\n                      });\n  });\n</script>", "description": "d3.js wiki visualization", "created_at": "2015-11-10T18:11:48Z", "updated_at": "2015-11-10T18:11:48Z", "api": ["d3.tip", "d3.select", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.json", "d3.max"], "readme": "\n\nforked from <a href='http://bl.ocks.org/lilyc5459/'>lilyc5459</a>'s block: <a href='http://bl.ocks.org/lilyc5459/a35687613ab0f4991f37'>d3.js wiki visualization</a>", "uid": "jalapic_af63041b6b5edf373fa3"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  margin: 0;\n}\n/* misc */\n.info {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  font: 14px sans-serif;\n}\n\n.attrib {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  font: 10px sans-serif;\n  padding: 5px;\n  background-color:white;\n  opacity:.8;\n}\n.attrib a {\n color: black; \n font-weight:800;\n}\n\n/* tiles */\n.map {\n  position: relative;\n  overflow: hidden;\n}\n\n.layer {\n  position: absolute;\n}\n\n.tile {\n  position: absolute;\n  width: 256px;\n  height: 256px;\n  opacity:.8;\n}\n\n/* globe */\nsvg {\n  position:absolute;\n  bottom:10px;\n}\n\n.land {\n  fill: rgb(84, 77, 69);\n  stroke-opacity: 1;\n}\n\n.graticule {\n  fill: none;\n  stroke: black;\n  stroke-width:.5;\n  opacity:.3;\n}\n\n.extent {\n  fill: #933;\n  opacity: .6;\n}\n\n.noclicks {\n  pointer-events:none;\n}\n\n.point { fill:rgb(57, 38, 19); }\n/* point classes */\n.point.r1 { opacity: .8; }\n.point.r2 { opacity: .8; }\n.point.r3,\n.point.r4,\n.point.r5 { opacity: .3; }\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/d3.geo.tile.v0.min.js\"></script>\n<script src=\"http://d3js.org/queue.v1.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v0.min.js\"></script>\n<script>\n// slippy map code from\n// http://bl.ocks.org/3943330 by tmcw\n// http://bl.ocks.org/4132797 by mbostock\n\nvar width = window.innerWidth,\n    height = window.innerHeight,\n    prefix = prefixMatch([\"webkit\", \"ms\", \"Moz\", \"O\"]);\n\nvar inset = {\n  w: 320, \n  h: 320, \n  projection: null, extentRect: null, svg: null, path: null, graticule: null,\n  init: function() {\n    inset.projection = d3.geo.orthographic()\n                        .scale(140)\n                        .translate([inset.w / 2, inset.h / 2])\n                        .clipAngle(90)\n\n    inset.path = d3.geo.path()\n                  .projection(inset.projection)\n                  .pointRadius(1.5);\n\n    inset.graticule = d3.geo.graticule();\n\n    inset.extentRect = [{ \n          \"type\": \"Feature\", \n          \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[]]}\n          }]\n\n    inset.svg = d3.select(\"body\").append(\"svg\")\n                  .attr(\"width\", inset.w)\n                  .attr(\"height\", inset.h)\n                  .attr(\"class\",\"noclicks\")\n    queue()\n        .defer(d3.json, \"world-110m.json\")\n        .defer(d3.json, \"places.json\")\n        .await(inset.ready);\n  },\n  ready: function(error,world,places) {\n    var defs = inset.svg.append(\"defs\")\n    var ocean = defs.append(\"radialGradient\")\n            .attr(\"id\", \"ocean\")\n            .attr(\"cx\", \"75%\")\n            .attr(\"cy\", \"25%\");\n        ocean.append(\"stop\").attr(\"offset\", \"5%\").attr(\"stop-color\", \"#e6e6f4\");\n        ocean.append(\"stop\").attr(\"offset\", \"100%\").attr(\"stop-color\", \"#a2abb3\");\n\n    var highlight = defs.append(\"radialGradient\")\n          .attr(\"id\", \"highlight\")\n          .attr(\"cx\", \"75%\")\n          .attr(\"cy\", \"25%\");\n        highlight.append(\"stop\")\n          .attr(\"offset\", \"5%\").attr(\"stop-color\", \"#ffd\")\n          .attr(\"stop-opacity\",\"0.6\");\n        highlight.append(\"stop\")\n          .attr(\"offset\", \"100%\").attr(\"stop-color\", \"#ba9\")\n          .attr(\"stop-opacity\",\"0.2\");\n\n    var shade = defs.append(\"radialGradient\")\n          .attr(\"id\", \"shade\")\n          .attr(\"cx\", \"50%\")\n          .attr(\"cy\", \"40%\");\n        shade.append(\"stop\")\n          .attr(\"offset\",\"50%\").attr(\"stop-color\", \"#a2abb3\")\n          .attr(\"stop-opacity\",\"0\")\n        shade.append(\"stop\")\n          .attr(\"offset\",\"100%\").attr(\"stop-color\", \"#57616b\")\n          .attr(\"stop-opacity\",\"0.3\")\n\n    var halo = defs.append(\"radialGradient\")\n          .attr(\"id\", \"halo\")\n          .attr(\"cx\", \"50%\")\n          .attr(\"cy\", \"50%\");\n        halo.append(\"stop\")\n          .attr(\"offset\",\"85%\").attr(\"stop-color\", \"#FFF\")\n          .attr(\"stop-opacity\",\"1\")\n        halo.append(\"stop\")\n          .attr(\"offset\",\"100%\").attr(\"stop-color\", \"#FFF\")\n          .attr(\"stop-opacity\",\"0\")  \n\n    inset.svg.append(\"ellipse\")\n      .attr(\"cx\", inset.w/2).attr(\"cy\", inset.h/2)\n      .attr(\"rx\", inset.projection.scale()+20)\n      .attr(\"ry\", inset.projection.scale()+20)\n      .attr(\"class\", \"noclicks\")\n      .style(\"fill\", \"url(#halo)\");\n\n    inset.svg.append(\"circle\")\n      .attr(\"cx\", inset.w / 2).attr(\"cy\", inset.h / 2)\n      .attr(\"r\", inset.projection.scale())\n      .attr(\"class\", \"noclicks\")\n      .style(\"fill\", \"url(#ocean)\");\n\n    inset.svg.append(\"path\")\n      .datum(topojson.object(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", inset.path);\n\n    inset.svg.append(\"path\")\n      .datum(inset.graticule)\n      .attr(\"class\", \"graticule noclicks\")\n      .attr(\"d\", inset.path);\n\n    inset.svg.append(\"circle\")\n      .attr(\"cx\", inset.w / 2).attr(\"cy\", inset.h / 2)\n      .attr(\"r\", inset.projection.scale())\n      .attr(\"class\",\"noclicks\")\n      .style(\"fill\", \"url(#highlight)\");\n\n    inset.svg.append(\"circle\")\n      .attr(\"cx\", inset.w / 2).attr(\"cy\", inset.h/ 2)\n      .attr(\"r\", inset.projection.scale())\n      .attr(\"class\",\"noclicks\")\n      .style(\"fill\", \"url(#shade)\");\n\n    inset.svg.append(\"g\").attr(\"class\",\"points\")\n        .selectAll(\"text\").data(places.features)\n      .enter().append(\"path\")\n        .attr(\"class\", function(d){\n          return \"point r\" + (5-d.properties.scalerank)\n        })\n        .attr(\"d\", inset.path);\n    \n    inset.svg.append(\"g\").attr(\"class\",\"extents\")\n        .selectAll(\"path\").data(inset.extentRect)\n      .enter().append(\"path\")\n        .attr(\"class\", \"extent\")\n        .attr(\"d\", inset.path);\n  },\n  refresh: function(dims) {\n    inset.projection.rotate([-dims.center[0],-dims.center[1]])      \n\n    var e = dims.topline.concat(dims.bottomline);\n    e.push([dims.topline[0]])\n    \n    inset.extentRect[0].geometry.coordinates[0] = e;\n\n    inset.svg.select(\".extent\").attr(\"d\", inset.path);\n    inset.svg.select(\".land\").attr(\"d\", inset.path);\n    inset.svg.select(\".graticule\").attr(\"d\", inset.path);\n    inset.svg.select(\".extent\").attr(\"d\", inset.path);\n    inset.svg.selectAll(\".point\").attr(\"d\", inset.path);\n  }\n}\n\nvar tile = d3.geo.tile()\n    .size([width, height]);\n\nvar projection = d3.geo.mercator()\n    .center([-96, 38.3]);\n\nvar zoom = d3.behavior.zoom()\n    .scale(1 << 13)\n    .scaleExtent([1 << 12, 1 << 23])\n    .translate([width / 2, height / 2])\n    .on(\"zoom\", refresh);\n\nvar map = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"map\")\n    .style(\"width\", width + \"px\")\n    .style(\"height\", height + \"px\")\n    .call(zoom)\n    .on(\"mousemove\", mousemoved);\n\nvar layer = map.append(\"div\").attr(\"class\", \"layer\");\nvar info = map.append(\"div\").attr(\"class\", \"info\");\nvar attrib = map.append(\"div\").attr(\"class\", \"attrib\").html('Map tiles by <a href=\"http://mapbox.com\">Mapbox</a>, Data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap Contributors</a>.')\n\ninset.init();\nrefresh();\n\nfunction refresh() {\n  var tiles = tile\n        .scale(zoom.scale())\n        .translate(zoom.translate())\n        ();\n\n  projection\n      .scale(zoom.scale())\n      .translate(zoom.translate());\n\n  var map_dims = { \n        topline: [],\n        bottomline: [],\n        center:  projection.invert([width/2,height/2])\n      }\n\n  var samples = 8,\n      step = width/samples;\n\n  for (var i = 0; i < samples; i++) {\n    map_dims.topline\n      .push(projection.invert( [step*i,0] ))\n    map_dims.bottomline\n      .push(projection.invert( [step*(samples-i-1),height] ))\n  }\n\n  inset.refresh(map_dims)\n  \n  var image = layer\n      .style(prefix + \"transform\", matrix3d(tiles.scale, tiles.translate))\n    .selectAll(\".tile\")\n      .data(tiles, function(d) { return d; });\n\n  image.exit().remove();\n  image.enter().append(\"img\")\n      .attr(\"class\", \"tile\")\n      .attr(\"src\", function(d) { return \"http://a.tiles.mapbox.com/v3/landplanner.map-dm7abyjg/\" + d[2] + \"/\" + d[0] + \"/\" + d[1] + \".png\"; })\n      .style(\"left\", function(d) { return (d[0] << 8) + \"px\"; })\n      .style(\"top\", function(d) { return (d[1] << 8) + \"px\"; });\n}\n\nfunction mousemoved() {\n  info.text(formatLocation(projection.invert(d3.mouse(this)), zoom.scale()));\n}\n\nfunction matrix3d(scale, translate) {\n  var k = scale / 256, r = scale % 1 ? Number : Math.round;\n  return \"matrix3d(\" + [k, 0, 0, 0, 0, k, 0, 0, 0, 0, k, 0, r(translate[0] * scale), r(translate[1] * scale), 0, 1 ] + \")\";\n}\n\nfunction prefixMatch(p) {\n  var i = -1, n = p.length, s = document.body.style;\n  while (++i < n) if (p[i] + \"Transform\" in s) return \"-\" + p[i].toLowerCase() + \"-\";\n  return \"\";\n}\n\nfunction formatLocation(p, k) {\n  var format = d3.format(\".\" + Math.floor(Math.log(k) / 2 - 2) + \"f\");\n  return (p[1] < 0 ? format(-p[1]) + \"\u00b0S\" : format(p[1]) + \"\u00b0N\") + \" \"\n       + (p[0] < 0 ? format(-p[0]) + \"\u00b0W\" : format(p[0]) + \"\u00b0E\");\n}\n\n</script>", "description": "Fiddling with D3 Finder params", "created_at": "2013-02-05T18:35:57Z", "updated_at": "2015-12-12T04:48:52Z", "api": ["d3.geo.orthographic", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.geo.tile", "d3.geo.mercator", "d3.behavior.zoom", "d3.mouse", "d3.format"], "readme": "Extent indicator globe using [d3.geo.orthographic](https://github.com/mbostock/d3/wiki/Geo-Projections#wiki-orthographic) and radial gradients - EVERYTHING OF IMPORT HERE IS THE WORK OF @dwtkns\n\nSlippy map code from:  \n[http://bl.ocks.org/3943330](http://bl.ocks.org/3943330) by tmcw  \n[http://bl.ocks.org/4132797](http://bl.ocks.org/4132797) by mbostock  \n\nMap tiles from [Stamen](http://www.stamen.com)", "uid": "wboykinm_4716561"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - modal infobox</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\nrect.bluesquare {\n    fill: #4682B4;\n    stroke: black;\n    stroke-width: 1px;\n}\n.countryborders {\n    fill: rgba(0,0,0,0);\n    stroke-width: 1px;\n    stroke: gray;\n    cursor: pointer;\n}\n\n.roads {\n    stroke: brown;\n    stroke-width: 1px;\n    fill: none;\n}\n\n.halffilledcountries {\n    fill: rgba(224,224,209,0.5);\n    stroke-width: 1px;\n    stroke: black;\n    opacity: 1;    \n}\n</style>\n<script>\n  \n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    tileLayer = d3.carto.layer.tile();\n    tileLayer\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\")\n    .on(\"load\", recenter);\n\n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoBorders\")\n    .cssClass(\"countryborders\")\n    .renderMode(\"canvas\")\n    .on(\"load\", createFeatureLayer);\n    \n    topojsonLayer = d3.carto.layer.topojson();\n    topojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n    .label(\"TopoRoutes\")\n    .cssClass(\"roads\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true);\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .type(\"csv\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(6)\n    .x(\"x\")\n    .y(\"y\")\n    .clickableFeatures(true);\n\n    map.addCartoLayer(tileLayer);\n    map.addCartoLayer(topojsonLayer);\n    map.addCartoLayer(geojsonLayer);\n    map.addCartoLayer(csvLayer);\n\n    function recenter() {\n      map.centerOn([-0.1275,51.507],\"latlong\",2000);\n    }\n\n    function createFeatureLayer() {\n      var featuresArray = [];\n      var mapLayers = map.layers();\n      mapLayers.forEach(function (layer) {\n        if (layer.label() == \"GeoBorders\") {\n          featuresArray = layer.features();\n        }\n      })\n     shortNameCountries = featuresArray.filter(function(d) {return d.properties.name.length < 7})\n\n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(shortNameCountries)\n    .label(\"Feature Array\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true); \n    \n    map.addCartoLayer(featureLayer);\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Modal Infoboxes - d3.carto.map", "created_at": "2014-08-26T16:04:24Z", "updated_at": "2015-08-29T14:05:41Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.carto.layer.featureArray"], "readme": "A demonstration of modal infoboxes from **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nClick on any line, square, or area to see a modal infobox. By setting cartoLayer.clickableFeatures(true) then any SVG points or features will create a modal dialogue with the attributes of that feature. If the feature has a \"Name\" or \"Label\" attribute, that will be used as the title for the infobox.\n\nYou can modify the contents of the modal and how it processes the data associated with a feature by using d3.carto.modal and its built-in formatter, which is explained in the [custom infobox example](http://bl.ocks.org/emeeks/905bb4f399e0855e08fe).", "uid": "emeeks_433a9b04f82a1c78af4b"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - canvas globe</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .reproject {\n    position: absolute;\n    z-index: 99;\n    left: 50px;\n    top: 250px;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\nmap = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    map.mode(\"globe\");\n    map.zoom().scale(350);\n\n    map.refresh();\n\n    wcLayer = d3.carto.layer.tile();\n    wcLayer\n    .tileType(\"stamen\")\n    .path(\"watercolor\")\n    .label(\"Watercolor\")\n    .visibility(false)\n\n    countryLayer = d3.carto.layer.geojson();\n    countryLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"Countries\")\n    .cssClass(\"countryborders\")\n    .renderMode(\"canvas\");\n    \n    cableLayer = d3.carto.layer.geojson();\n    cableLayer\n    .path(\"subcables.geojson\")\n    .label(\"Undersea Cables\")\n    .cssClass(\"roads\")\n    .renderMode(\"canvas\");\n\n    map.addCartoLayer(wcLayer).addCartoLayer(countryLayer).addCartoLayer(cableLayer);\n    \n    d3.select(\"#map\").append(\"button\").attr(\"class\", \"reproject\").html(\"Transform\").on(\"click\", reproject);\n    \n    function reproject() {\n      if (d3.select(\"button.reproject\").html() == \"Transform\") {\n        d3.select(\"button.reproject\").html(\"Projection\")\n        map.mode(\"transform\");\n        map.refresh();\n      }\n      else if (d3.select(\"button.reproject\").html() == \"Globe\") {\n        d3.select(\"button.reproject\").html(\"Transform\")\n        map.mode(\"globe\");\n        map.refresh();        \n      }\n      else {\n        d3.select(\"button.reproject\").html(\"Globe\")\n        map.mode(\"projection\");\n\n    var projection = d3.geo.armadillo()\n    .scale(237)\n    .parallel(20)\n    .rotate([-10, 0])\n    .precision(.1);\n    map.projection(projection);\n\n        map.refresh();        \n      }\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Canvas Layers - d3.carto.map", "created_at": "2014-07-29T06:02:34Z", "updated_at": "2015-08-29T14:04:38Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.geo.armadillo"], "readme": "Drawing **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** layers to canvas is simple, just set the renderMode to \"canvas\" instead of \"svg\". This example shows the various map modes with canvas drawing of vector layers.\n\nClick the button to cycle through map modes to see the difference between Transform, Projection and Globe modes.\n\nUndersea cable geodata and armadillo projection inspiration from [Peter Bakkum's example](https://bl.ocks.org/bakks/9405946). Stamen watercolor map from [http://maps.stamen.com/#toner/12/37.7706/-122.3782](http://maps.stamen.com/#toner/12/37.7706/-122.3782).", "uid": "emeeks_37dd76398240ab29abd8"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 | reusable slopegraph</title> \n  <meta name=\"author\" content=\"Sundar Singh | eesur.com\">\n\n  <link rel=\"stylesheet\" href=\"main.css\">\n  <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n</head>\n<body>\n\n    <header>\n        <h1>Reusable slopegraph</h1> \n        <p>Slopegraph example showing number of personal computers installed in a country per household.</p>\n    </header>\n\n    <section id=\"slopegraph\"></section>\n\n    <footer>\n      <button id=\"reset\">reset</button>\n      <nav id='nav-alt'></nav>\n    </footer>\n\n    <!-- namespace -->\n    <script> d3.eesur = {}; </script>\n    <!-- reusable slopegraph -->\n    <script src=\"d3_code_slopegraph.js\"></script>\n    <script>\n\n  //  render slopegraph chart\n\n    (function() {\n\n    // create chart\n    var slopegraph = d3.eesur.slopegraph()\n        // .margin({top: 20, bottom: 20, left: 100, right:100})\n        .strokeColour('#130C0E')\n        .keyName('country')\n            .keyValueStart('2000')\n            .keyValueEnd('2012')\n            .h(500)\n            // .format(d3.format('04d'))\n            .on('_hover', function (d, i) {\n                highlightLine(d, i);\n            });\n\n    \n    d3.json('data.json', function(error, data) {\n\n        if (error) throw error;\n\n        // render chart\n        d3.select('#slopegraph')\n            .datum(data)\n            .call(slopegraph);\n\n        // alternative navigation     \n        navAlt(data);\n    });\n\n    // reset button listener\n    d3.select('#reset')\n        .on('click', function () {\n            d3.selectAll('.elm').transition().style('opacity', 1);\n            d3.selectAll('.s-line').style('stroke', '#130C0E');\n        });\n\n    // navigation\n    function navAlt(data) {\n        d3.select('#nav-alt').append('ul')\n            .selectAll('li')\n            .data(data)\n            .enter().append('li')\n            .on('click', function (d, i) {\n                highlightLine(d, i);\n            })\n            .text(function (d) { return d['country']; });\n    }\n\n    // highlight line and fade other lines\n    function highlightLine(d, i) {\n        d3.selectAll('.elm').transition().style('opacity', 0.2);\n        d3.selectAll('.sel-' + i).transition().style('opacity', 1);\n        d3.selectAll('.s-line').style('stroke', '#FDBB30');\n        d3.selectAll('.s-line.sel-' + i).style('stroke', '#130C0E');\n    }\n\n    // just for blocks viewer size\n    d3.select(self.frameElement).style('height', '800px');\n  \n  }());\n\n    </script>\n</body>\n</html>\n\n", "description": "d3 | Reusable slopegraph", "created_at": "2016-04-16T12:56:00Z", "updated_at": "2016-04-16T12:56:14Z", "api": ["d3.format", "d3.dispatch", "d3.max", "d3.scale.linear", "d3.select", "d3.rebind", "d3.eesur.slopegraph", "d3.json", "d3.selectAll"], "readme": "Reusable slopegraph inspired/adapted from [Ben Van Dyke's example](http://vandykeindustries.com/slopegraphs-d3.html) into a reusable chart.\n\nThis slopegraph example shows the number of personal computers installed in a country per household. This includes desktop PCs and laptops, but excludes smartphones and terminals connected to mainframe computers. All figures are calculated using total number of Personal Computers and the Total Number of Households.\n\n[data source](http://www.nakono.com/tekcarta/databank/personal-computers-per-household/)\n\n\nforked from <a href='http://bl.ocks.org/eesur/'>eesur</a>'s block: <a href='http://bl.ocks.org/eesur/a4679ee453aa9357977c'>d3 | Reusable slopegraph</a>", "uid": "espinielli_347a69f480fcd1e40db43d782439e623"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Major City Clustering</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n      function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    \n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Base\")\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/540b1b884b80b14a44c6/all_sites.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .x(\"xcoord\")\n    .y(\"ycoord\")\n    .cluster(true)\n    .on(\"recluster\", positionCluster);\n    \n    map.addCartoLayer(tileLayer).addCartoLayer(csvLayer);\n    map.centerOn([-115,40],\"latlong\").setScale(2);\n\n        function positionCluster() {\n        var d3MapProjection = map.projection();\n      csvLayer.clusterLayer().g().selectAll(\"g.pointG\")\n      .each(function(d) {\n        if (!d.leaf) {\n          var newPosition = findMax(d,d);\n          var newProjectedPos = d3MapProjection([csvLayer.x()(newPosition.point),csvLayer.y()(newPosition.point)]);\n          d3.select(this).attr(\"transform\", \"translate(\"+newProjectedPos+\")\");\n        }\n\n      })\n      \n      function findMax(current, max) {\n        if (current.leaf) {\n          if (!max.leaf) {\n            max = current;\n          }\n          else if (parseInt(current.point.pop) >= parseInt(max.point.pop)) {\n            max = current;\n          }\n        }\n        else {\n          for (var y in current.children) {\n            var thisMax = findMax(current.children[y],max);\n            if (!max.leaf) {\n              max = thisMax;\n            }\n            else if (parseInt(thisMax.point.pop) >= parseInt(max.point.pop)) {\n              max = thisMax;\n            }\n          }\n        }\n        return max;\n      }\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Semantic Cluster Positioning - d3.carto", "created_at": "2014-09-16T04:03:39Z", "updated_at": "2015-08-29T14:06:31Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer", "d3.carto.layer.csv"], "readme": "Repositioning clustered points in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nd3.carto uses quadtrees to perform grid-based clustering of points. One drawback of grid-based clustering as seen in the [basic](http://bl.ocks.org/emeeks/7d5925cb7d9721c60360) and [complex](http://bl.ocks.org/emeeks/540b1b884b80b14a44c6) clustering examples is that it produces regular rows and columns of clustered points, which can be jarring to map readers, especially when the regularized point is located in the sea when the dataset is entirely on land.\n\nIn this example, medium-sized cities (between 50k and 1m population) are clustered using the built-in clustering behavior, but the points are adjusted after each \"recluster\" event so that they are placed on the location of the largest city (population-wise) is located. This is accomplished by accessing the d3.carto.map.projection() and using it to adjust the \"transform\" attribute of the g.pointG container that determines the position of each point. It might do to make this semi-automated, but it's a hard thing to plan for, because you might want to use some kind of administrative rank (local, prefectural and national capitals) or other mechanism to determine the \"anchor\" point. In other cases, where there is no obvious such point, you might want to pick the point nearest the center or use some other mechanism.\n\nAs a result of this repoisitioning, the clustered sites are irregular, semantically interesting and never placed on non-sensical terrain.\n\nWhich is good.", "uid": "emeeks_066e20c1ce5008f884eb"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <!--\n  <script src=\"d3.min.js\"></script>\n  <script src=\"aframe.min.js\"></script>\n   -->\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; background-color: white;}\n   \n  </style>\n</head>\n\n<body>\n  <a-scene>\n      <!-- Camera with customized cursor -->\n      <a-camera position=\"0 1.8 0\" cursor-visible=\"true\" cursor-scale=\"2\" cursor-color=\"#4CC3D9\" cursor-offset=\"2\" cursor-maxdistance=\"100\" cursor-opacity=\"0.5\" cursor-fuse=\"true\"></a-camera>\n      <a-light color=\"steelblue\" position=\"0 5 0\" type=\"ambient\"></a-light>\n    \n    <a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n      <!-- Sky -->\n      <a-sky color=\"#d9d9d9\"></a-sky>\n  </a-scene>\n  <script>\n    \n    // synthetic data\n    var data = [ 10, 20, 30, 15, 25, 35, 40,\n                45, 50, 70, 100, 120, 130,\n               12, 18, 22, 29, 33, 44, 59, 200]\n    \n    // we scale the height of our bars using d3's linear scale\n    var hscale = d3.scale.linear()\n    \t.domain([0, d3.max(data)])\n    \t.range([0, 3])\n    \n    // we select the scene object just like an svg\n    var scene = d3.select(\"a-scene\")\n    \n    // we use d3's enter/update/exit pattern to draw and bind our dom elements\n    var bars = scene.selectAll(\"a-cube.bar\").data(data)\n    bars.enter().append(\"a-cube\").classed(\"bar\", true)\n    // we set attributes on our cubes to determine how they are rendered\n    bars.attr({\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 1 + hscale(d)/2;\n        // lets place the bars all around our camera\n        var radius = 5;\n        //var x = i - data.length/2;\n        var x = radius * Math.cos(i/data.length * 2 * Math.PI)\n        var z = radius * Math.sin(i/data.length * 2 * Math.PI)\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/data.length)*360;\n        return x + \" \" + y + \" \" + z\n      },\n      width: function(d) { return 0.5},\n      depth: function(d) { return 0.9},\n      height: function(d) { return hscale(d)},\n      opacity: function(d,i) { return 0.6 + (i/data.length) * 0.4},\n      //metalness: function(d,i) { return i/data.length}\n    })\n    .on(\"click\", function(d,i) {\n      console.log(\"click\", i,d)\n    })\n    .on(\"mouseenter\", function(d,i) {\n      // this event gets fired continuously as long as the cursor\n      // is over the element. we only want trigger our animation the first time\n      if(this.hovering) return;\n      console.log(\"hover\", i,d)\n      this.hovering = true;\n      d3.select(this).transition().duration(1000)\n      .attr({\n        metalness: 0.2,\n        width: 1.5\n      })\n    })\n    .on(\"mouseleave\", function(d,i) {\n      console.log(\"leave\",i,d)\n      this.hovering = false;\n      d3.select(this).transition().delay(1000)\n      .attr({\n        metalness: 0,\n        width: 0.5\n      })\n    })    \n    \n  </script>\n</body>\n", "description": "aframe + d3 experiment", "created_at": "2015-12-18T22:12:35Z", "updated_at": "2016-05-14T15:16:39Z", "api": ["d3.scale.linear", "d3.max", "d3.select"], "readme": "successfully changed the sky and bar colors.  learned that in this strange 3D animation paradigm, the color of the light actually determines the color of the bars:\n\n```\n<a-light color=\"steelblue\" position=\"0 5 0\" type=\"ambient\"></a-light>\n```\n\nthis was non-obvious to me, and pretty cool once I figured it out.\n\noh, I also added a delay the the `mouseout` (`gazeout`?!) transition.  the idea for this is to allow the user time to look to the next bar without snapping their attention right back to the previous bar.\n\n---\n\nTesting out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org).\n\nSince AFrame works with DOM elements, you can use d3's selection API to generate and modify 3D elements, as well as handle \"mouse\" events (including the VR friendly \"fuse cursor\") as if it was SVG.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/8be32e6f1f32920ba841'>aframe + d3 test</a>", "uid": "micahstubbs_77e765beffccb6fe1648"}, {"code": "<!doctype html>\n<html>\n<head>\n    <title>Pie Chart Test</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n</head>\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.arc path {\n  stroke: #fff;\n}\n</style>\n\n<body>\n\n\n<script>\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(0);\n\n// defines wedge size\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function (d) { return d.ratio; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.json(\"data.json\", function(error, data) {\n  node = data.data[0].ap[0].floorratio;\n\n  var g = svg.selectAll(\".arc\")\n      .data(pie(node))\n      .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.data.floor); });\n\n  g.append(\"text\")\n      .attr(\"transform\", function (d) { return \"translate(\" + arc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function (d) { return d.data.floor; });\n});\n</script>\n</body>\n</html>", "description": "Pie Chart", "created_at": "2015-09-14T17:24:53Z", "updated_at": "2015-09-14T18:02:50Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.json"], "readme": "Stackoverflow question: http://stackoverflow.com/questions/32549683/d3js-json-pie-chart?noredirect=1#comment52995750_32549683", "uid": "steveharoz_0638d230c133da1de385"}, {"code": "<!DOCTYPE html>\n<html>\n<head>   \n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js\"></script>\n</head>\n<body>\n\n<script>\nvar width = 200, height = 200, radius = Math.min(width, height) / 1.34;\n// var width = 200, height = 200, radius = Math.min(width, height) / 2;\nvar c10 = d3.scale.category10();\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(0);\n\nvar data = [ \n [\"de\",1968],\n [\"la\",1407],\n [\"el\",1246],\n [\"en\",1066],\n [\"a\",1044],\n [\"y\",687]\n/* [\"un\",580],\n   [\"del\",504],\n   [\"por\",471],\n   [\"los\",437] */\n];\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d[1]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nvar g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\ng.append(\"path\")\n .attr(\"d\", arc)\n .attr(\"stroke\", \"#fff\")\n .style(\"fill\", function(d,i) { return c10(i); });\n\ng.append(\"text\")\n .attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; })\n .attr(\"dy\", \".35em\")\n .style(\"text-anchor\", \"middle\")\n .attr(\"fill\",\"white\")\n .text( function(d) {return d.data[0];} );\n\n\n\n</script>  \n  \n</body>\n</html>", "description": "square pie chart ( d3.js )", "created_at": "2015-11-04T18:40:45Z", "updated_at": "2015-11-04T18:40:45Z", "api": ["d3.scale.category10", "d3.svg.arc", "d3.layout.pie", "d3.select"], "readme": "", "uid": "aaizemberg_381f050ef4296db37737"}, {"code": "<!DOCTYPE html>\n\n<html lang='en'>\n\n<head>\n    <meta charset='UTF-8'>\n    <title>d3 | reusable slopegraph v2</title> \n    <meta name=\"author\" content=\"Sundar Singh | eesur.com\">\n    \n    <link rel=\"stylesheet\" href=\"main.css\">\n    <script src=\"//d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.min.js\" charset=\"utf-8\"></script>\n</head>\n\n<body>\n\n    <header>\n        <h1>Reusable slopegraph v2</h1> \n        <p>Number of personal computers installed in a country per household.</p>\n\n        <nav id='filter'></nav>\n        <nav id='nav-alt'></nav>\n    </header>\n\n    <section id=\"slopegraph\" class=\"slope\"></section>\n\n<!-- *************** start js/d3 code ***************** -->\n\n<!-- namespace -->\n<script> d3.eesur = {}; </script>\n<!-- reusable slopegraph -->\n<script src=\"d3_code_slopegraph_v2.js\"></script>\n\n<script>\n//  render slopegraph chart\n\n(function() {\n    'use strict';\n\n    var data,\n        // keys values from data to be applied\n        keyValues = ['2000', '2002', '2004', '2006', '2008', '2010', '2012'];\n\n    // store chart\n    var slopegraph;\n    // track any user interactions\n    var state = {\n        // have an array to mutate\n        keys: keyValues,\n        // track filtered sets\n        filter: [],\n        // toggle highlights\n        navToggle: [],\n        // track line selection\n        highlight: null\n    };\n\n    d3.json('data.json', function(error, json) {\n        if (error) throw error;\n        // access data outside this callback\n        data = json;\n        // initial render chart\n        render(data, keyValues);\n        // alternative navigation     \n        navAlt(data);\n        // add some filter options\n        filterFunc();\n    });\n\n    // filter sets via user interaction\n    function filterFunc() {\n        // create array values\n        _.times(keyValues.length, function(n) {\n            state.filter.push(true);\n        });\n\n        d3.select('#filter').append('ul')\n            .selectAll('li')\n            .data(keyValues)\n            .enter().append('li')\n            .on('click', function (d, i) {\n                if (!state.filter[i]) {\n                    // set toggle \n                    state.filter[i] = true;\n                    d3.select(this).style('opacity', 1);\n                    // push key into array\n                    state.keys.push(d);\n                    // ensure array is kept in date order\n                    state.keys = _.sortBy(state.keys);\n                    // render chart with new keys\n                    render(data, state.keys);\n                // ensure there at least two values\n                // so a slopegraph can be rendered\n                } else if (state.filter[i] && state.keys.length > 2) {\n                    state.filter[i] = false;\n                    d3.select(this).style('opacity', 0.3);\n                    _.pull(state.keys, d);\n                    state.keys = _.sortBy(state.keys);\n                    render(data, state.keys);\n                }\n            })\n            .text(function (d) { return d; });\n    }\n\n    // navigation to highlight lines\n    function navAlt(data) {\n        // create array values\n        _.times(data.length, function(n) {\n            state.navToggle.push(true);\n        });\n\n        d3.select('#nav-alt').append('ul')\n            .selectAll('li')\n            .data(data)\n            .enter().append('li')\n            .attr('class', function (d, i) { return 'navAlt li-' + i; })\n            .on('click', function (d, i) {\n                if (!state.navToggle[i]) {\n                    // update toggle state\n                    state.navToggle[i] = true;\n                    resetSelection();\n                    state.highlight = null;\n                } else if (state.navToggle[i]) {\n                    state.navToggle[i] = false;\n                    // hover to highlight line\n                    highlightLine(i);\n                    // highlight nav in relation to line\n                    highlightNav(i);\n                    // update state\n                    state.highlight = i;\n                }\n            })\n            .text(function (d) { return d['country']; });\n    }\n\n\n    // render slopegraph chart \n    function render(data, keys) {\n        resetSelection();\n        // create chart\n        slopegraph = d3.eesur.slopegraph_v2()\n            .margin({top: 20, bottom: 20, left: 100, right: 100})\n            .gutter(25)\n            .keyName('country')\n            .keyValues(keys)\n            .on('_hover', function (d, i) {\n                // hover to highlight line\n                highlightLine(i);\n                // highlight nav in relation to line\n                highlightNav(i);\n                // update state of selected highlight line\n                state.highlight = i;\n            });\n\n\n        // apply chart\n        d3.select('#slopegraph')\n            .datum(data)\n            .call(slopegraph);\n\n        // ensure highlight is maintained on update    \n        if (!_.isNull(state.highlight)) {\n            d3.selectAll('.elm').style('opacity', 0.2);\n            d3.selectAll('.sel-' + state.highlight).style('opacity', 1);\n            highlightNav(state.highlight);\n        }\n    }\n\n    function highlightLine(i) {\n        d3.selectAll('.elm').transition().style('opacity', 0.2);\n        d3.selectAll('.sel-' + i).transition().style('opacity', 1);\n    }\n\n    function highlightNav(i) {\n        d3.selectAll('.navAlt').transition().style('opacity', 0.6);\n        d3.select('.li-' + i).transition().style('opacity', 1);\n    }\n\n    function resetSelection() {\n        d3.selectAll('.elm').transition().style('opacity', 1);\n        d3.selectAll('.navAlt').transition().style('opacity', 1);\n    }\n\n    // just for blocks viewer size\n    d3.select(self.frameElement).style('height', '800px');\n\n}());\n\n</script>\n\n</body>\n</html>\n\n\n\n", "description": "d3 | reusable slopegraph v2", "created_at": "2016-01-07T03:42:53Z", "updated_at": "2016-01-07T03:44:02Z", "api": ["d3.format", "d3.dispatch", "d3.scale.linear", "d3.select", "d3.rebind", "d3.json", "d3.selectAll"], "readme": "Updated reusable slopegraph sketch, from my [previous slopegraph version](http://bl.ocks.org/eesur/a4679ee453aa9357977c)\n\nThis version allows for multiple sets/columns and will adapted accordingly. Added some interaction to toggle the sets/columns and also toggle highlighted line.\n\n[data source](http://www.nakono.com/tekcarta/databank/personal-computers-per-household/)\n\n\nforked from <a href='http://bl.ocks.org/eesur/'>eesur</a>'s block: <a href='http://bl.ocks.org/eesur/ee8d0ab88229d0e07f7f'>d3 | reusable slopegraph v2</a>", "uid": "renecnielsen_99ee17e86c184a616c7c"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js\"></script>\n  <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n</head>\n<style>\n\n.label {\n  font: 300 10pt 'Helvetica Neue', sans-serif;\n  stroke: #000;\n  stroke-width: 1px;\n}\n\ndiv.label {\n\n}\ninput.slider {\n  width: 75%;\n  margin: auto;\n  display: block;\n}\ninput.number {\n  text-align: center;\n  margin-left: 2px;\n}\n.donut {\n  margin: auto;\n  display: flex;\n  justify-content: center; /* align horizontal */\n  align-items: center; /* align vertical */\n}\n.chartContainer {\n  padding: 20px;\n  display: inline-block;\n  margin: auto;\n  width: 230;\n}\n.header {\n  font: 300 14pt 'Futura', sans-serif;\n  text-align: center;\n  vertical-align: middle;\n}\n\n.sub-header {\n  font: 100 8pt 'Futura', sans-serif;\n}\n.label-value {\n  /*display: inline;*/\n  font: 300 10pt 'Helvetica Neue', sans-serif;\n  position: relative;\n  margin: auto;\n  display: flex;\n  justify-content: center; /* align horizontal */\n  align-items: center; /* align vertical */\n    /*float: none;*/\n}\n\n.shadow {\n  stroke: #fff;\n  stroke-width: 1.75px;\n  opacity: 0.9;\n  font: 300 10pt 'Helvetica Neue', sans-serif;\n}\n\n.incomingBars {\n  padding-top: 20px;\n  margin: auto;\n  width: 600px;\n  display: inline-block;\n}\n</style>\n<body>\n<div ng-app=\"myApp\">\n    <div ng-controller=\"mainCtrl\">\n      <div class=\"chartContainer\">\n        <div class=\"header\">Residency<br><span class=\"sub-header\">CA-RESIDENT | NON-RESIDENT</span></div>\n        <res-donut data=\"data_res\" accessor=\"accessor_res\" class=\"donut\"></res-donut> \n        <div ng-repeat=\"datum in data_res | filter: {label:'Non-Resident'}\" >\n          <div class=\"label-value\">% {{datum.label}} \n            <input ng-model=\"datum.value\" type=\"number\" min=\"0\" max=\"100\" class=\"number\"></input>\n          </div>\n          <div> \n            <input ng-model=\"datum.value\" type=\"range\" min=\"0\" max=\"100\" class=\"slider\"></input>\n          </div>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <script>\n    \n\n    var myApp = angular.module('myApp', []);\n    var arc = d3.svg.arc();\n\n    var stack = d3.layout.stack()\n            .values(function(d) { return d.values; })\n            .y(function(d) { return d.count; });\n\n    var nest = d3.nest()\n        .key(function(d) { return d.residency; });\n\n    myApp.controller('mainCtrl', function ($scope) {\n        \n        //THIS DOES NOT WORK\n        d3.csv('csv-help.csv', function(err, data) {\n              if(err){ throw err; }\n                $scope.data_res = data;\n                $scope.$apply();\n              });\n        \n        // THIS WORKS\n        $scope.data_res = [{ label: 'CA-Residents', value: 76 },\n                     { label: 'Non-Residents', value: 24 }];\n\n        // keep this for either case\n        $scope.accessor_res = function(d){ return +d.value };\n        console.log('$scope ',$scope);\n    });\n\n    myApp.directive('resDonut', function() {\n      function link(scope, el, attr){\n        var color = d3.scale.ordinal().range([\"#bd9e39\",\"#0868ac\"]);\n        var data = scope.data;\n        var width = 150;\n        var height = 150;\n        var min = Math.min(width, height);\n        var svg = d3.select(el[0]).append('svg');\n        var pie = d3.layout.pie().sort(null);\n        arc.outerRadius(min / 2 * 0.8)\n          .innerRadius(min / 2 * 0.45);\n        \n        pie.value(function(d){ return +d.value ; });\n\n        svg.attr({width: width, height: height});\n        var g = svg.append('g')\n          // center the donut chart\n          .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');\n        \n        // add the <path>s for each arc slice\n        var arcs = g.selectAll('path').data(pie(data))\n          .enter().append('path')\n            .style('stroke', 'white')\n            .attr('fill-opacity', 0.75)\n            .attr('fill', function(d, i){ return color(i); })\n            // store the initial angles\n            .each(function(d) { return this._current = d });\n\n       var labelshadows = g.selectAll('.shadow').data(pie(data))\n          .enter().append(\"text\")\n          .attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; })\n          .attr(\"dy\", \".35em\")\n          .attr(\"class\", \"shadow\")\n          .style(\"text-anchor\", \"middle\")\n          .text(function(d) { return d.data.label === \"CA-Residents\" ? \"CA-Res\" : \"Non-Res\"; });\n\n        var labels = g.selectAll('.label').data(pie(data))\n          .enter().append(\"text\")\n          .attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; })\n          .attr(\"dy\", \".35em\")\n          .attr(\"class\", \"label\")\n          .style(\"text-anchor\", \"middle\")\n          .text(function(d) { return d.data.label === \"CA-Residents\" ? \"CA-Res\" : \"Non-Res\"; });\n\n        scope.$watch('data', function (newVal, oldVal) {\n          console.log(\"an element within `data` changed!\");\n          var ca = newVal.filter(function(d) {return d.label === \"CA-Residents\";}),\n              nr = newVal.filter(function(d) {return d.label === \"Non-Residents\";}),\n              duration = 750;\n              nr[0].value = +nr[0].value;\n          ca[0].value = 100 - nr[0].value;\n          arcs.data(pie(scope.data)); //.attr('d', arc)\n          arcs.transition().duration(duration).attrTween('d', arcTween);\n          labels.data(pie(scope.data)).transition().duration(duration).attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; });\n          labelshadows.data(pie(scope.data)).transition().duration(duration).attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; });\n        }, true);\n      }\n      return {\n        link: link,\n        restrict: 'E',\n        scope: { 'data': '=',\n                'accessor': '=' }\n      };\n\n    });\n\n    function arcTween(a) {\n          // see: http://bl.ocks.org/mbostock/1346410\n          var i = d3.interpolate(this._current, a);\n          this._current = i(0);\n          return function(t) {\n            return arc(i(t));\n          };\n        }\n\n  </script>\n</body>\n</html>", "description": "angular and d3.csv", "created_at": "2015-07-10T18:43:04Z", "updated_at": "2015-08-29T14:24:37Z", "api": ["d3.svg.arc", "d3.layout.stack", "d3.nest", "d3.csv", "d3.scale.ordinal", "d3.select", "d3.layout.pie", "d3.interpolate"], "readme": "", "uid": "saraquigley_c88725be1238b6b80e37"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Managing Layers of Different Types</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    fill-opacity: .25;\n    fill: #4682B4;\n    stroke-opacity: 1;\n    stroke: black;\n    stroke-width: 2px;\n  }\n\n  .country-gray {\n    opacity: .25;\n    fill: lightgray;\n    stroke: lightgray;\n    stroke-width: 1;\n  }\n\n  .country-red {\n    fill-opacity: .25;\n    fill: darkred;\n    stroke: black;\n    stroke-width: 1;\n  }\n  \n  .capital {\n    fill: white;\n    stroke: black;\n    stroke-width: 2px;\n  }\n</style>\n<script>\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    terrainLayer = d3.carto.layer.tile();\n    \n    terrainLayer\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Terrain\");\n\n    countryLayer = d3.carto.layer.topojson();\n    \n    countryLayer.path(\"world.topojson\")\n    .label(\"Countries\")\n    .renderMode(\"canvas\")\n    .specificFeature(\"world\")\n    .cssClass(\"country-gray\")\n    .on(\"load\", showHighGDP)\n    .visibility(false);\n    \n    capitalLayer = d3.carto.layer.csv();\n    capitalLayer\n    .path(\"worldcapitals.csv\")\n    .label(\"Capitals\")\n    .cssClass(\"capital\")\n    .renderMode(\"svg\")\n    .markerSize(3)\n    .x(\"x\")\n    .y(\"y\")\n    .clickableFeatures(true)\n    .on(\"load\", loadXYArray);\n\n    map.addCartoLayer(terrainLayer)\n    map.addCartoLayer(countryLayer)\n    .addCartoLayer(capitalLayer);\n    map.setScale(2);\n    \n    function loadXYArray() {\n    d3.csv(\"worldcapitals.csv\", highPopCapitals);\n    \n    function highPopCapitals(data) {\n      highPop = data.filter(function(d) {return d.population > 3000000});\n      \n      highPopCapitals = d3.carto.layer.xyArray();\n      \n      highPopCapitals\n      .features(highPop)\n      .label(\"High Population Capitals\")\n      .cssClass(\"capital\")\n      .renderMode(\"svg\")\n      .markerSize(10)\n      .x(\"x\")\n      .y(\"y\")\n      .clickableFeatures(true);\n      \n      map.addCartoLayer(highPopCapitals);\n    }\n    }\n    \n    function showHighGDP() {\n      highGDPCountries = countryLayer.features().filter(function(d) {return d.properties.gdp > 1000});\n      \n      highGDPLayer = d3.carto.layer.featureArray();\n      \n      highGDPLayer\n      .features(highGDPCountries)\n    .label(\"High GDP\")\n    .renderMode(\"svg\")\n    .cssClass(\"country-red\")\n    .clickableFeatures(true);\n    \n    map.addCartoLayer(highGDPLayer)\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Managing Layers - d3.carto", "created_at": "2015-09-08T08:43:22Z", "updated_at": "2015-09-08T08:43:22Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.csv", "d3.carto.layer.xyArray", "d3.carto.layer.featureArray"], "readme": "A map example created with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** that loads feature, tile and point layers using the various methods available in d3.carto.", "uid": "renecnielsen_682ab33dbf139214df59"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>D3 Legend</title>\n  <meta charset=\"utf-8\" />\n</head>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"legend.js\"></script>\n<style>\n  body, html {\n    width:100%;\n    height:100%;\n  }\n  #vizcontainer {\n    width:100%;\n    height:100%;\n  }\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n<body onload=\"legendDemo()\">\n\n<div id=\"vizcontainer\">\n<svg></svg>\n</div>\n  <footer>\n<script>\n  function legendDemo() {\n\n  sampleNumerical = [1,2.5,5,10,20];\n  sampleThreshold=d3.scale.threshold().domain(sampleNumerical).range(colorbrewer.Reds[5]);\n  horizontalLegend = d3.svg.legend().units(\"Miles\").cellWidth(80).cellHeight(25).inputScale(sampleThreshold).cellStepping(100);\n\n  d3.select(\"svg\").append(\"g\").attr(\"transform\", \"translate(50,70)\").attr(\"class\", \"legend\").call(horizontalLegend);\n\n  sampleCategoricalData = [\"Something\",\"Something Else\", \"Another\", \"This\", \"That\", \"Etc\"]\n  sampleOrdinal = d3.scale.category20().domain(sampleCategoricalData);\n\n  verticalLegend = d3.svg.legend().labelFormat(\"none\").cellPadding(5).orientation(\"vertical\").units(\"Things in a List\").cellWidth(25).cellHeight(18).inputScale(sampleOrdinal).cellStepping(10);\n\n  d3.select(\"svg\").append(\"g\").attr(\"transform\", \"translate(50,140)\").attr(\"class\", \"legend\").call(verticalLegend);\n\n  }\n</script>\n  </footer>\n</body>\n</html>", "description": "d3.svg.legend example", "created_at": "2014-08-19T14:34:05Z", "updated_at": "2015-08-29T14:05:27Z", "api": ["d3.scale.threshold", "d3.svg.legend", "d3.select", "d3.scale.category20", "d3.format"], "readme": "[d3.svg.legend](https://github.com/emeeks/d3-svg-legend) provides for a simple legend that can be displayed horizontally or vertically and accepts a few different [d3 scale](https://github.com/mbostock/d3/wiki/Scales) types.", "uid": "emeeks_8855733967174fe4b1b4"}, {"code": "<html>\n    <meta charset='utf-8' />\n<head>\n</head>\n<body>\n    <svg>\n    <text id='text_node' y=\"20px\" text-anchor=\"start\" opacity=\"1\">\n        <tspan>You</tspan>\n        <tspan dx='.5em'>shall</tspan>\n        <tspan dx='.5em' dy='.9em'>not</tspan>\n        <tspan dx='.4em' dy='.9em'>pass</tspan>\n\n    </text>\n</svg>\n<script src='http://mbostock.github.com/d3/d3.js'></script>\n<script>\n    var node = document.getElementById('text_node');\n    var bbox = node.getBBox();\n    var computed_text_length = node.getComputedTextLength();\n\n    //Does not work\n    d3.select('#text_node').append('tspan')\n        .text('Fly')\n        .attr('dx', '.2em')\n    d3.select('#text_node').append('tspan')\n        .text('you')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n    d3.select('#text_node').append('tspan')\n        .text('fools')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n\n    /*\n    d3.select('#text_node').append('tspan')\n        .text('Fly')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n\n    d3.select('#text_node').append('tspan')\n        .text('you')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n    */\n\n    console.log('BBOX width: ', bbox.width);\n    console.log('Computed text length: ', computed_text_length);\n</script>\n</body>\n</html>", "description": "d3 tspan append", "created_at": "2012-02-14T18:54:15Z", "updated_at": "2015-09-30T16:47:59Z", "api": ["d3.select"], "readme": "", "uid": "enoex_1829124"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.land {\n  fill: #222;\n}\n\n.county-boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.state-boundary {\n  fill: none;\n  stroke: #fff;\n}\n\n.border {\n  stroke: #000;\n  fill: none;\n\n}\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-width: .5px;\n  stroke-opacity: .5;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"https://cdn.rawgit.com/rveciana/d3-composite-projections/master/src/conicConformalEurope-proj.js\"></script>\n<script>\n\nvar width = 600,\n    height = 500;\n\nvar projection = d3.geo.conicConformalEurope();\nvar graticule = d3.geo.graticule();\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n\n    svg.append(\"path\")\n        .datum(graticule)\n        .attr(\"class\", \"graticule\")\n        .attr(\"d\", path);\nd3.json(\"https://cdn.rawgit.com/rveciana/5919944/raw//nuts0.json\", function(error, europe) {\n  var land = topojson.feature(europe, europe.objects.nuts0);\n\n\n\n    svg.selectAll(\"path\")\n      .data(land.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\",\"#000\")\n      .style(\"stroke-width\",\".5px\")\n      .style(\"fill\",\"#aca\")\n      .on(\"mouseover\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"red\");\n        })\n      .on(\"mouseout\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"#aca\");\n        });\n\n        svg\n          .append(\"path\")\n            .style(\"fill\",\"none\")\n            .style(\"stroke\",\"#000\")\n            .attr(\"d\", projection.getCompositionBorders());\n\n\n\n});\n\n\n</script>\n", "description": "d3-composite-projections conicConformalEurope", "created_at": "2016-01-17T13:06:37Z", "updated_at": "2016-01-17T13:07:31Z", "api": ["d3.geo.conicConformalEurope", "d3.geo.graticule", "d3.geo.path", "d3.select", "d3.json"], "readme": "This example shows how to use the conicConformalEurope projection from [d3-composite-projections](http://rveciana.github.io/d3-composite-projections/).", "uid": "espinielli_715229536cdba1fdac9a"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.chart { \n  background: #fff;\n}\n\np {\n  font: 12px helvetica;\n}\n\n\n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2px;\n  shape-rendering: crispEdges;\n}\n\nbutton {\n  position: absolute;\n  right: 50px;\n  top: 10px;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.js\"></script>\n\n\n<div class=\"chart\">\n</div>\n\n<script>\n\nchart(\"data.csv\", \"orange\");\n\nvar datearray = [];\nvar colorrange = [];\n\n\nfunction chart(csvpath, color) {\n\nif (color == \"blue\") {\n  colorrange = [\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"];\n}\nelse if (color == \"pink\") {\n  colorrange = [\"#980043\", \"#DD1C77\", \"#DF65B0\", \"#C994C7\", \"#D4B9DA\", \"#F1EEF6\"];\n}\nelse if (color == \"orange\") {\n  colorrange = [\"#B30000\", \"#E34A33\", \"#FC8D59\", \"#FDBB84\", \"#FDD49E\", \"#FEF0D9\"];\n}\nstrokecolor = colorrange[0];\n\nvar format = d3.time.format(\"%m/%d/%y\");\n\nvar margin = {top: 20, right: 40, bottom: 30, left: 30};\nvar width = document.body.clientWidth - margin.left - margin.right;\nvar height = 400 - margin.top - margin.bottom;\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"remove\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"20\")\n    .style(\"visibility\", \"hidden\")\n    .style(\"top\", \"30px\")\n    .style(\"left\", \"55px\");\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height-10, 0]);\n\nvar z = d3.scale.ordinal()\n    .range(colorrange);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .ticks(d3.time.weeks);\n\nvar yAxis = d3.svg.axis()\n    .scale(y);\n\nvar yAxisr = d3.svg.axis()\n    .scale(y);\n\nvar stack = d3.layout.stack()\n    .offset(\"silhouette\")\n    .values(function(d) { return d.values; })\n    .x(function(d) { return d.date; })\n    .y(function(d) { return d.value; });\n\nvar nest = d3.nest()\n    .key(function(d) { return d.key; });\n\nvar area = d3.svg.area()\n    .interpolate(\"cardinal\")\n    .x(function(d) { return x(d.date); })\n    .y0(function(d) { return y(d.y0); })\n    .y1(function(d) { return y(d.y0 + d.y); });\n\nvar svg = d3.select(\".chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar graph = d3.csv(csvpath, function(data) {\n  data.forEach(function(d) {\n    d.date = format.parse(d.date);\n    d.value = +d.value;\n  });\n\n  var layers = stack(nest.entries(data));\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.y0 + d.y; })]);\n\n  svg.selectAll(\".layer\")\n      .data(layers)\n    .enter().append(\"path\")\n      .attr(\"class\", \"layer\")\n      .attr(\"d\", function(d) { return area(d.values); })\n      .style(\"fill\", function(d, i) { return z(i); });\n\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + width + \", 0)\")\n      .call(yAxis.orient(\"right\"));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis.orient(\"left\"));\n\n  svg.selectAll(\".layer\")\n    .attr(\"opacity\", 1)\n    .on(\"mouseover\", function(d, i) {\n      svg.selectAll(\".layer\").transition()\n      .duration(250)\n      .attr(\"opacity\", function(d, j) {\n        return j != i ? 0.6 : 1;\n    })})\n\n    .on(\"mousemove\", function(d, i) {\n      mousex = d3.mouse(this);\n      mousex = mousex[0];\n      var invertedx = x.invert(mousex);\n      invertedx = invertedx.getMonth() + invertedx.getDate();\n      var selected = (d.values);\n      for (var k = 0; k < selected.length; k++) {\n        datearray[k] = selected[k].date\n        datearray[k] = datearray[k].getMonth() + datearray[k].getDate();\n      }\n\n      mousedate = datearray.indexOf(invertedx);\n      pro = d.values[mousedate].value;\n\n      d3.select(this)\n      .classed(\"hover\", true)\n      .attr(\"stroke\", strokecolor)\n      .attr(\"stroke-width\", \"0.5px\"), \n      tooltip.html( \"<p>\" + d.key + \"<br>\" + pro + \"</p>\" ).style(\"visibility\", \"visible\");\n      \n    })\n    .on(\"mouseout\", function(d, i) {\n     svg.selectAll(\".layer\")\n      .transition()\n      .duration(250)\n      .attr(\"opacity\", \"1\");\n      d3.select(this)\n      .classed(\"hover\", false)\n      .attr(\"stroke-width\", \"0px\"), tooltip.html( \"<p>\" + d.key + \"<br>\" + pro + \"</p>\" ).style(\"visibility\", \"hidden\");\n  })\n    \n  var vertical = d3.select(\".chart\")\n        .append(\"div\")\n        .attr(\"class\", \"remove\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"19\")\n        .style(\"width\", \"1px\")\n        .style(\"height\", \"380px\")\n        .style(\"top\", \"10px\")\n        .style(\"bottom\", \"30px\")\n        .style(\"left\", \"0px\")\n        .style(\"background\", \"#fff\");\n\n  d3.select(\".chart\")\n      .on(\"mousemove\", function(){  \n         mousex = d3.mouse(this);\n         mousex = mousex[0] + 5;\n         vertical.style(\"left\", mousex + \"px\" )})\n      .on(\"mouseover\", function(){  \n         mousex = d3.mouse(this);\n         mousex = mousex[0] + 5;\n         vertical.style(\"left\", mousex + \"px\")});\n});\n}\n</script>", "description": "D3 Interactive Streamgraph", "created_at": "2013-01-25T02:15:26Z", "updated_at": "2015-12-11T16:58:56Z", "api": ["d3.time.format", "d3.select", "d3.time.scale", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.layout.stack", "d3.nest", "d3.svg.area", "d3.csv", "d3.extent", "d3.max", "d3.mouse"], "readme": "", "uid": "WillTurman_4631136"}, {"code": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>D3 Level 3</title>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n        <style>\n            svg {\n                font: 10px sans-serif;\n            }\n            .area {\n                fill: steelblue;\n                clip-path: url(#clip);\n            }\n            .axis path,\n            .axis line {\n                fill: none;\n                stroke: #000;\n                shape-rendering: crispEdges;\n            }\n            .brush .extent {\n                stroke: #fff;\n                fill-opacity: .125;\n                shape-rendering: crispEdges;\n            }\n        </style>\n    </head>\n    <body>\n        <button id=\"reset\">Reset</button>\n        <br>\n        <script>\n            var W = 960, H = 500;\n\n            //Setting up Margins\n            var mainMargin = {top: 10, right: 10, left: 70, bottom: 140};\n            var subMargin = {top: 400, right: 10, bottom: 40, left: 70};\n\n            //Widths, Heights\n            var width = W - mainMargin.left - mainMargin.right;\n            var mainHeight = H - mainMargin.top - mainMargin.bottom;\n            var subHeight = H - subMargin.top - subMargin.bottom;\n\n            //Date Parser\n            var parseDate = d3.time.format(\"%b %Y\").parse;\n\n            //Main Chart Scales\n            var mainXScale = d3.time.scale().range([0, width]);\n            var mainYScale = d3.scale.linear().range([mainHeight, 0]);\n\n            //Sub Chart scales\n            var subXScale = d3.time.scale().range([0, width]);\n            var subYScale = d3.scale.linear().range([subHeight, 0]);\n\n            //Main Chart Axes\n            var mainXAxis = d3.svg.axis().scale(mainXScale).orient('bottom');\n            var mainYAxis = d3.svg.axis().scale(mainYScale).orient('left');\n\n            //Sub Chart Axes\n            var subXAxis = d3.svg.axis().scale(subXScale).orient('bottom');\n            var subYAxis = d3.svg.axis().scale(subYScale).orient('left').ticks(2);\n\n            //Area\n            var mainArea = d3.svg.area()\n                    .interpolate('monotone')\n                    .x(function (d) {\n                        return mainXScale(d.date)\n                    })\n                    .y0(mainHeight)\n                    .y1(function (d) {\n                        return mainYScale(d.price)\n                    });\n\n            var subArea = d3.svg.area()\n                    .interpolate('monotone')\n                    .x(function (d) {\n                        return subXScale(d.date)\n                    })\n                    .y0(subHeight)\n                    .y1(function (d) {\n                        return subYScale(d.price)\n                    });\n\n            var svg = d3.select('body').append('svg')\n                    .attr('width', W)\n                    .attr('height', H);\n\n            svg.append('defs')\n                    .append('clipPath')\n                    .attr('id', 'clip')\n                    .append('rect')\n                    .attr('width', width)\n                    .attr('height', mainHeight);\n\n            var main = svg.append('g')\n                    .classed('main', true)\n                    .attr(\"transform\", \"translate(\" + mainMargin.left + \",\" + mainMargin.top + \")\");\n\n            var sub = svg.append('g')\n                    .classed('sub', true)\n                    .attr(\"transform\", \"translate(\" + subMargin.left + \",\" + subMargin.top + \")\");\n\n            var brush = d3.svg.brush()\n                    .x(subXScale)\n                    .on(\"brush\", brushed);\n\n            d3.csv('data.csv', function (d) {\n                d.date = parseDate(d.date);\n                d.price = +d.price;\n                return d;\n            }, function (err, data) {\n                mainXScale.domain(d3.extent(data, function (d) {\n                    return d.date\n                }));\n                mainYScale.domain([0, d3.max(data, function (d) {\n                        return d.price\n                    })]);\n\n                subXScale.domain(mainXScale.domain());\n                subYScale.domain(mainYScale.domain());\n\n                main.append(\"g\")\n                        .classed(\"x axis\", true)\n                        .attr(\"transform\", \"translate(0, \" + mainHeight + \")\")\n                        .call(mainXAxis);\n                main.append(\"g\")\n                        .classed(\"y axis\", true)\n                        .attr(\"transform\", \"translate(0, 0)\")\n                        .call(mainYAxis);\n\n                main.append('path')\n                        .datum(data)\n                        .classed('area', true)\n                        .attr('d', mainArea);\n\n                sub.append(\"g\")\n                        .classed(\"x axis\", true)\n                        .attr(\"transform\", \"translate(0, \" + subHeight + \")\")\n                        .call(subXAxis);\n                sub.append(\"g\")\n                        .classed(\"y axis\", true)\n                        .attr(\"transform\", \"translate(0, 0)\")\n                        .call(subYAxis);\n\n                sub.append('path')\n                        .datum(data)\n                        .classed('area', true)\n                        .attr('d', subArea);\n\n                sub.append(\"g\")\n                        .classed(\"x brush\", true)\n                        .call(brush)\n                        .selectAll(\"rect\")\n                        .attr(\"y\", -6)\n                        .attr(\"height\", subHeight + 7);\n\n                d3.select('#reset').on('click', function () {\n                    mainXScale.domain(subXScale.domain());\n                    main.select('.area').transition().attr('d', mainArea);\n                    main.select('.x.axis').transition().call(mainXAxis);\n                    sub.select('rect.extent').transition().attr('width', 0);\n                })\n            });\n\n            function brushed() {\n                mainXScale.domain(brush.empty() ? subXScale.domain() : brush.extent());\n                main.select('.area').attr('d', mainArea);\n                main.select('.x.axis').call(mainXAxis);\n            }\n        </script>\n    </body>\n</html>\n", "description": "Zoom and Brush in d3", "created_at": "2015-06-18T04:35:03Z", "updated_at": "2015-08-29T14:23:15Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.select", "d3.svg.brush", "d3.csv", "d3.extent", "d3.max"], "readme": "", "uid": "nivas8292_222939d7c74c5de09387"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n  </style>\n</head>\n\n<body>\n  <script>\n    var margin = {top: 20, right: 10, bottom: 20, left: 10};\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // Feel free to change or delete any of the code you see!\n    svg.append(\"rect\")\n      .attr({x: 100, y: 10, width: width - 200, height: height - 20})\n      .style({ fill: \"#a72d1a\"})\n      .transition().duration(3000).ease(\"bounce\")\n      .style({ fill: \"#5db9e3\"})\n    \n    console.log(\"you are now rocking with d3\", d3);\n  </script>\n</body>\n", "description": "Mozfest - Intro to D3", "created_at": "2015-11-07T12:17:13Z", "updated_at": "2015-11-07T12:17:15Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "lifeofmle_862ce2e7ef47e1e1a310"}, {"code": "<!DOCTYPE html>\n\n<html lang='en'>\n\n<head>\n    <meta charset='UTF-8'>\n    <title>d3 | reusable slopegraph v2</title> \n    <meta name=\"author\" content=\"Sundar Singh | eesur.com\">\n    \n    <link rel=\"stylesheet\" href=\"main.css\">\n    <script src=\"//d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.min.js\" charset=\"utf-8\"></script>\n</head>\n\n<body>\n\n    <header>\n        <h1>Reusable slopegraph v2</h1> \n        <p>Number of personal computers installed in a country per household.</p>\n\n        <nav id='filter'></nav>\n        <nav id='nav-alt'></nav>\n    </header>\n\n    <section id=\"slopegraph\" class=\"slope\"></section>\n\n<!-- *************** start js/d3 code ***************** -->\n\n<!-- namespace -->\n<script> d3.eesur = {}; </script>\n<!-- reusable slopegraph -->\n<script src=\"d3_code_slopegraph_v2.js\"></script>\n\n<script>\n//  render slopegraph chart\n\n(function() {\n    'use strict';\n\n    var data,\n        // keys values from data to be applied\n        keyValues = ['2000', '2002', '2004', '2006', '2008', '2010', '2012'];\n\n    // store chart\n    var slopegraph;\n    // track any user interactions\n    var state = {\n        // have an array to mutate\n        keys: keyValues,\n        // track filtered sets\n        filter: [],\n        // toggle highlights\n        navToggle: [],\n        // track line selection\n        highlight: null\n    };\n\n    d3.json('data.json', function(error, json) {\n        if (error) throw error;\n        // access data outside this callback\n        data = json;\n        // initial render chart\n        render(data, keyValues);\n        // alternative navigation     \n        navAlt(data);\n        // add some filter options\n        filterFunc();\n    });\n\n    // filter sets via user interaction\n    function filterFunc() {\n        // create array values\n        _.times(keyValues.length, function(n) {\n            state.filter.push(true);\n        });\n\n        d3.select('#filter').append('ul')\n            .selectAll('li')\n            .data(keyValues)\n            .enter().append('li')\n            .on('click', function (d, i) {\n                if (!state.filter[i]) {\n                    // set toggle \n                    state.filter[i] = true;\n                    d3.select(this).style('opacity', 1);\n                    // push key into array\n                    state.keys.push(d);\n                    // ensure array is kept in date order\n                    state.keys = _.sortBy(state.keys);\n                    // render chart with new keys\n                    render(data, state.keys);\n                // ensure there at least two values\n                // so a slopegraph can be rendered\n                } else if (state.filter[i] && state.keys.length > 2) {\n                    state.filter[i] = false;\n                    d3.select(this).style('opacity', 0.3);\n                    _.pull(state.keys, d);\n                    state.keys = _.sortBy(state.keys);\n                    render(data, state.keys);\n                }\n            })\n            .text(function (d) { return d; });\n    }\n\n    // navigation to highlight lines\n    function navAlt(data) {\n        // create array values\n        _.times(data.length, function(n) {\n            state.navToggle.push(true);\n        });\n\n        d3.select('#nav-alt').append('ul')\n            .selectAll('li')\n            .data(data)\n            .enter().append('li')\n            .attr('class', function (d, i) { return 'navAlt li-' + i; })\n            .on('click', function (d, i) {\n                if (!state.navToggle[i]) {\n                    // update toggle state\n                    state.navToggle[i] = true;\n                    resetSelection();\n                    state.highlight = null;\n                } else if (state.navToggle[i]) {\n                    state.navToggle[i] = false;\n                    // hover to highlight line\n                    highlightLine(i);\n                    // highlight nav in relation to line\n                    highlightNav(i);\n                    // update state\n                    state.highlight = i;\n                }\n            })\n            .text(function (d) { return d['country']; });\n    }\n\n\n    // render slopegraph chart \n    function render(data, keys) {\n        resetSelection();\n        // create chart\n        slopegraph = d3.eesur.slopegraph_v2()\n            .margin({top: 20, bottom: 20, left: 100, right: 100})\n            .gutter(25)\n            .keyName('country')\n            .keyValues(keys)\n            .on('_hover', function (d, i) {\n                // hover to highlight line\n                highlightLine(i);\n                // highlight nav in relation to line\n                highlightNav(i);\n                // update state of selected highlight line\n                state.highlight = i;\n            });\n\n\n        // apply chart\n        d3.select('#slopegraph')\n            .datum(data)\n            .call(slopegraph);\n\n        // ensure highlight is maintained on update    \n        if (!_.isNull(state.highlight)) {\n            d3.selectAll('.elm').style('opacity', 0.2);\n            d3.selectAll('.sel-' + state.highlight).style('opacity', 1);\n            highlightNav(state.highlight);\n        }\n    }\n\n    function highlightLine(i) {\n        d3.selectAll('.elm').transition().style('opacity', 0.2);\n        d3.selectAll('.sel-' + i).transition().style('opacity', 1);\n    }\n\n    function highlightNav(i) {\n        d3.selectAll('.navAlt').transition().style('opacity', 0.6);\n        d3.select('.li-' + i).transition().style('opacity', 1);\n    }\n\n    function resetSelection() {\n        d3.selectAll('.elm').transition().style('opacity', 1);\n        d3.selectAll('.navAlt').transition().style('opacity', 1);\n    }\n\n    // just for blocks viewer size\n    d3.select(self.frameElement).style('height', '800px');\n\n}());\n\n</script>\n\n</body>\n</html>\n\n\n\n", "description": "d3 | reusable slopegraph v2", "created_at": "2015-12-18T16:10:28Z", "updated_at": "2015-12-19T18:34:24Z", "api": ["d3.format", "d3.dispatch", "d3.scale.linear", "d3.select", "d3.rebind", "d3.json", "d3.selectAll"], "readme": "Updated reusable slopegraph sketch, from my [previous slopegraph version](http://bl.ocks.org/eesur/a4679ee453aa9357977c)\n\nThis version allows for multiple sets/columns and will adapted accordingly. Added some interaction to toggle the sets/columns and also toggle highlighted line.\n\n[data source](http://www.nakono.com/tekcarta/databank/personal-computers-per-household/)\n", "uid": "eesur_ee8d0ab88229d0e07f7f"}, {"code": "<!DOCTYPE html>\n<head>\n<meta charset=\"utf-8\">\n<title>Draggable Circle Packing</title>\n<style>\n\nsvg circle {\n  cursor: move;\n  stroke: #000;\n  stroke-width: 1.5px;\n  fill: #827d92;\n}\n\n.fixed {\n  fill: #f00;\n}\n\nbutton {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n}\n\n</style>\n</head>\n\n<body>\n<button onclick=\"reset()\">Reset</button>\n<script src=\"https://code.jquery.com/jquery-1.11.2.min.js\"></script>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 900;\nvar height = 500;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar nodes = d3.range(128).map(function () { return {radius: Math.random() * 16 + 8}; });\nvar nodesCopy = $.extend(true, [], nodes);\n\nfunction dblclick(d) {\n  d3.select(this).classed(\"fixed\", d.fixed = false);\n}\n\nfunction dragstart(d) {\n  d3.select(this).classed(\"fixed\", d.fixed = true);\n}\n\nfunction collide(node) {\n  var r = node.radius + 16;\n  var nx1 = node.x - r;\n  var nx2 = node.x + r;\n  var ny1 = node.y - r;\n  var ny2 = node.y + r;\n  return function (quad, x1, y1, x2, y2) {\n    if (quad.point && (quad.point !== node)) {\n      var x = node.x - quad.point.x;\n      var y = node.y - quad.point.y;\n      var l = Math.sqrt(x * x + y * y);\n      var npr = node.radius + quad.point.radius;\n      if (l < npr) {\n        l = (l - npr) / l * 0.5;\n        x *= l;\n        node.x -= x;\n        y *= l;\n        node.y -= y;\n        quad.point.x += x;\n        quad.point.y += y;\n      }\n    }\n    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n  };\n}\n\nfunction packup() {\n  var pack = d3.layout.pack()\n      .sort(null)\n      .size([width, height])\n      .padding(0)\n      .value(function (d) { return d.radius; });\n\n  svg.selectAll(\".node\")\n      .data(pack.nodes({\"children\": nodes})\n      .filter(function (d) { return !d.children; }))\n    .enter().append(\"circle\")\n      .attr(\"r\", function (d) { return d.radius; })\n      .attr(\"cx\", function (d) { return d.x; })\n      .attr(\"cy\", function (d) { return d.y; });\n}\n\nfunction forceup() {\n  var force = d3.layout.force()\n      .nodes(nodes)\n      .gravity(0.05)\n      .charge(0)\n      .size([width, height])\n      .start();\n\n  var drag = force.drag().on(\"dragstart\", dragstart);\n\n  force.on(\"tick\", function () {\n    var q = d3.geom.quadtree(nodes);\n    var i = 0;\n    var n = nodes.length;\n\n    while (++i < n) {\n      q.visit(collide(nodes[i]));\n    }\n\n    svg.selectAll(\"circle\")\n        .attr(\"cx\", function (d) { return d.x; })\n        .attr(\"cy\", function (d) { return d.y; });\n  });\n\n  d3.selectAll(\"circle\")\n    .on(\"dblclick\", dblclick)\n    .call(drag);\n}\n\nfunction reset() {\n  svg.selectAll(\"*\").remove();\n  nodes = $.extend(true, [], nodesCopy);\n  packup();\n  forceup();\n}\n\npackup();\nforceup();\n\n</script>\n</body>\n</html>", "description": "Draggable Circle Packing - D3.js", "created_at": "2015-04-16T02:37:39Z", "updated_at": "2016-04-27T10:11:39Z", "api": ["d3.select", "d3.range", "d3.layout.pack", "d3.layout.force", "d3.geom.quadtree", "d3.selectAll"], "readme": "", "uid": "rphv_0d6c8f05b3afe882e166"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<html>\n  <head>\n    <style>\n      .axis {\n        font-size: 10px;\n      }\n      .axis path {\n        fill: none;\n        stroke: #000000;\n      }\n      .axis .tick line {\n        stroke: #000;\n      }\n        \n        .states {\n            fill: #ccc;\n            stroke: #fff;\n        }\n  \n    </style>\n  </head>\n  <body>\n   \n \n    <script src=\"http://d3js.org/d3.v3.js\"></script>\n    <script src=\"scatter.js\"></script>\n    <script src=\"brush.js\"></script>\n    <script src=\"symbol_map.js\"></script>\n    <script src=\"miso.ds.deps.0.4.1.js\"></script>\n    <script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n    <script src=\"http://d3js.org/queue.v1.min.js\"></script>\n\n  \n    <script>\n        \n        var Vis = {};\n        Vis.data = new Array();\n    \n        //http://bl.ocks.org/mbostock/4342045\n        var width = 960,\n        height = 500;\n        var data;\n        \n        var SPREADSHEET_ID = \"0Agy_OAo_DS4PdFlrdVR1X2Nub1U3VnE0X0xBemI1eUE\";\n        var SPREADSHEET_TAB = \"1\";\n        \n        var json_file = \"pics5.json\";\n\n        var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n        \n        var mapgroup = svg.append(\"g\")\n        ;\n        \n        //Define map projection\n        var projection = d3.geo.albersUsa()\n            .translate([700, 230])\n            .scale([500]);\n        \n        \n        var path = d3.geo.path()\n            .projection(projection);\n\n        queue()\n        .defer(d3.json, \"us.json\")\n        .await(ready);\n        \n        function ready(error, us) {\n            \n            mapgroup.append(\"path\")\n            .attr(\"class\", \"states\")\n            .datum(topojson.feature(us, us.objects.states))\n            .attr(\"d\", path);\n            \n            \n            loadJson(json_file);\n            //loadGSS(SPREADSHEET_ID, SPREADSHEET_TAB);\n            \n        }\n\n\n\n        \n      \n      function createDiagram() {\n\n          var sgroup = svg.append(\"g\")\n          .attr(\"transform\", \"translate(50, 0)\")\n          var scatter = d3.chart.scatter()\n          scatter.data(Vis.data)\n          scatter(sgroup)\n          \n          var symbol_map = d3.chart.symbol_map()\n          symbol_map.data(Vis.data)\n          symbol_map(mapgroup)\n          \n          \n          //brush\n          var bgroup = svg.append(\"g\")\n          .attr(\"transform\", \"translate(100, 430)\")\n          var brush = d3.chart.brush()\n          brush\n          .data(Vis.data)\n          .width(800)\n          brush(bgroup)\n          \n          brush.on(\"filter\", function(filtered) {\n                   scatter.data(filtered);\n                   scatter.update();\n                   symbol_map.data(filtered)\n                   symbol_map.update();\n                   })\n                   \n          scatter.on(\"hover\", function(hovered) {\n                              brush.highlight(hovered)\n                              symbol_map.highlight(hovered)\n                              })\n\n        symbol_map.on(\"hover\", function(hovered) {\n          scatter.highlight(hovered)\n          brush.highlight(hovered)\n        })\n\n\n      }\n    \n      function loadJson(file_name) {\n          d3.json(file_name, function(error, file_data) {\n                  Vis.data = file_data;\n                  \n                  Vis.data.forEach(function(d) {\n                               d.created *= 1000;\n                  });\n                  createDiagram();\n                  });\n          \n                  \n      }\n    \n    function loadGSS(ssid, tab) {\n        \n        //connect to spreadsheet\n        var lsheet = new Miso.Dataset({\n                                      importer : Miso.Dataset.Importers.GoogleSpreadsheet,\n                                      parser : Miso.Dataset.Parsers.GoogleSpreadsheet,\n                                      key : ssid,\n                                      worksheet : tab\n                                      });\n                                      \n                                      //load data from spreadsheet\n                                      lsheet.fetch({\n                                                   success : function() {\n                                                \n                                                   this.each(function(row){\n                                                             Vis.data.push(row);\n                                                             });\n                                                   Vis.data.forEach(function(d) {\n                                                                    d.created *= 1000;\n                                                                    });\n                                                   \n                                                   createDiagram();\n\n                                                   },\n                                                   error : function() {\n                                                   console.log(\"Data failed to load from GSS.\");\n                                                   }\n                                                   });\n                                                   \n    }\n\n    </script>\n\n  </body>\n</html>\n", "description": "d3 Tutorial: Coordinated Views", "created_at": "2013-09-30T19:31:53Z", "updated_at": "2015-12-24T08:09:17Z", "api": ["d3.dispatch", "d3.extent", "d3.time.scale", "d3.svg.brush", "d3.svg.axis", "d3.time.format", "d3.rebind", "d3.max", "d3.min", "d3.scale.linear", "d3.select", "d3.geo.albersUsa", "d3.geo.path", "d3.chart.scatter", "d3.chart.brush", "d3.json"], "readme": "", "uid": "dukevis_6768900"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<html>\n  <head>\n    <style>\n      .axis {\n        font-size: 10px;\n      }\n      .axis path {\n        fill: none;\n        stroke: #000000;\n      }\n      .axis .tick line {\n        stroke: #000;\n      }\n        \n        .states {\n            fill: #ccc;\n            stroke: #fff;\n        }\n  \n    </style>\n  </head>\n  <body>\n   \n \n    <script src=\"http://d3js.org/d3.v3.js\"></script>\n    <script src=\"scatter.js\"></script>\n    <script src=\"brush.js\"></script>\n    <script src=\"symbol_map.js\"></script>\n    <script src=\"miso.ds.deps.0.4.1.js\"></script>\n    <script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n    <script src=\"http://d3js.org/queue.v1.min.js\"></script>\n\n  \n    <script>\n        \n        var Vis = {};\n        Vis.data = new Array();\n    \n        //http://bl.ocks.org/mbostock/4342045\n        var width = 960,\n        height = 500;\n        var data;\n        \n        var SPREADSHEET_ID = \"0Agy_OAo_DS4PdFlrdVR1X2Nub1U3VnE0X0xBemI1eUE\";\n        var SPREADSHEET_TAB = \"1\";\n        \n        var json_file = \"pics5.json\";\n\n        var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n        \n        var mapgroup = svg.append(\"g\")\n        ;\n        \n        //Define map projection\n        var projection = d3.geo.albersUsa()\n            .translate([700, 230])\n            .scale([500]);\n        \n        \n        var path = d3.geo.path()\n            .projection(projection);\n\n        queue()\n        .defer(d3.json, \"us.json\")\n        .await(ready);\n        \n        function ready(error, us) {\n            \n            mapgroup.append(\"path\")\n            .attr(\"class\", \"states\")\n            .datum(topojson.feature(us, us.objects.states))\n            .attr(\"d\", path);\n            \n            \n            loadJson(json_file);\n            //loadGSS(SPREADSHEET_ID, SPREADSHEET_TAB);\n            \n        }\n\n\n\n        \n      \n      function createDiagram() {\n\n          var sgroup = svg.append(\"g\")\n          .attr(\"transform\", \"translate(50, 0)\")\n          var scatter = d3.chart.scatter()\n          scatter.data(Vis.data)\n          scatter(sgroup)\n          \n          var symbol_map = d3.chart.symbol_map()\n          symbol_map.data(Vis.data)\n          symbol_map(mapgroup)\n          \n          \n          //brush\n          var bgroup = svg.append(\"g\")\n          .attr(\"transform\", \"translate(100, 430)\")\n          var brush = d3.chart.brush()\n          brush\n          .data(Vis.data)\n          .width(800)\n          brush(bgroup)\n          \n          brush.on(\"filter\", function(filtered) {\n                   scatter.data(filtered);\n                   scatter.update();\n                   symbol_map.data(filtered)\n                   symbol_map.update();\n                   })\n                   \n          scatter.on(\"hover\", function(hovered) {\n                              brush.highlight(hovered)\n                              symbol_map.highlight(hovered)\n                              })\n\n        symbol_map.on(\"hover\", function(hovered) {\n          scatter.highlight(hovered)\n          brush.highlight(hovered)\n        })\n\n\n      }\n    \n      function loadJson(file_name) {\n          d3.json(file_name, function(error, file_data) {\n                  Vis.data = file_data;\n                  \n                  Vis.data.forEach(function(d) {\n                               d.created *= 1000;\n                  });\n                  createDiagram();\n                  });\n          \n                  \n      }\n    \n    function loadGSS(ssid, tab) {\n        \n        //connect to spreadsheet\n        var lsheet = new Miso.Dataset({\n                                      importer : Miso.Dataset.Importers.GoogleSpreadsheet,\n                                      parser : Miso.Dataset.Parsers.GoogleSpreadsheet,\n                                      key : ssid,\n                                      worksheet : tab\n                                      });\n                                      \n                                      //load data from spreadsheet\n                                      lsheet.fetch({\n                                                   success : function() {\n                                                \n                                                   this.each(function(row){\n                                                             Vis.data.push(row);\n                                                             });\n                                                   Vis.data.forEach(function(d) {\n                                                                    d.created *= 1000;\n                                                                    });\n                                                   \n                                                   createDiagram();\n\n                                                   },\n                                                   error : function() {\n                                                   console.log(\"Data failed to load from GSS.\");\n                                                   }\n                                                   });\n                                                   \n    }\n\n    </script>\n\n  </body>\n</html>\n", "description": "d3 Tutorial: Coordinated Views", "created_at": "2015-10-08T16:24:27Z", "updated_at": "2015-10-08T16:24:28Z", "api": ["d3.dispatch", "d3.extent", "d3.time.scale", "d3.svg.brush", "d3.svg.axis", "d3.time.format", "d3.rebind", "d3.max", "d3.min", "d3.scale.linear", "d3.select", "d3.geo.albersUsa", "d3.geo.path", "d3.chart.scatter", "d3.chart.brush", "d3.json"], "readme": "", "uid": "ufenegga_d5dd49363a42fb2d5a07"}, {"code": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>Knight D3 Module 5</title>\n        <style>\n            body {\n                margin: 0;\n            }\n\n            .axis path, .axis line {\n              fill: none;\n              stroke: #000;\n              shape-rendering: crispEdges;\n            }\n\n            circle {\n                fill: rgb(173, 118, 55);\n                opacity: 0.8;\n            }\n\n            circle:hover {\n                fill: rgb(237, 128, 4);\n            }\n\n            .axis text, text.axis {\n                font-size: 12px;\n            }\n\n            text.centered {\n                text-anchor: middle;\n            }\n\n            h1, p, text {\n                font-family: avenir, sans-serif;\n            }\n\n            h1 {\n                font-weight: initial;\n                margin: 4px 50px;\n            }\n\n            p {\n                margin: 4px 50px;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>High School Prevents Teen Pregnancy</h1>\n        <p>Plots teen pregnancy (<a href=http://noceilings.org/data>NoCeilings</a> series ADFERRAT) vs. net female high school enrollment (series NERASEFE). Circle area indicates the percentage of women who are internet users (IUPOHPWBxPERFINTU). Even though all four datasets are unavailable for most of the developed world, we see how a women's opportunities are affected by society.</p>\n        <svg>\n        </svg>\n        <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n        <script>\n            var html_height = 125,\n                margin = {top: 20, right: 20, bottom: 35, left: 50},\n                width = 960 - margin.left - margin.right,\n                height = 800 - margin.top - margin.bottom - html_height;\n\n            var x = d3.scale.linear()\n                .range([0, width]);\n\n            var y = d3.scale.linear()\n                .range([height, 0]);\n\n            var r = d3.scale.sqrt()\n                .range([0, 16]);\n\n            var xAxis = d3.svg.axis()\n                .scale(x)\n                .orient(\"bottom\")\n                .tickFormat(function(d){ return d + \"%\"; });\n\n            var yAxis = d3.svg.axis()\n                .scale(y)\n                .orient(\"left\")\n                .tickFormat(function(d){ return d + \"%\"; });\n\n            d3.csv(\"no-ceilings-data.csv\", function(row){\n                //accessor to convert to numbers\n                var obj = {}\n                Object.keys(row).forEach(function(k){\n                    var v = row[k]\n                    obj[k] = +v || v;\n                })\n                // wiap = women internet access percentage\n                obj.wiap = obj.internet_users_per_100 * obj.internet_users_percent_female / 100;\n                return obj\n            }, function(err, data){\n                if (err) return console.error(err);\n                data = data.filter(function(d){return d.population > 5})\n                    .sort(function(a,b){return d3.descending(a.wiap, b.wiap)})\n\n                x.domain(d3.extent(data, function(d){return d.female_hs_enrollment}))\n                y.domain([0, d3.max(data, function(d){return d.teen_pregnancy})])\n                r.domain([0, d3.max(data, function(d){return d.wiap})])\n\n                var svg = d3.select(\"svg\")\n                    .attr(\"width\", margin.left + width + margin.right)\n                    .attr(\"height\", margin.top + height + margin.bottom)\n                  .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\n                svg.append(\"g\")\n                    .attr(\"class\", \"x axis\")\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\n                    .call(xAxis);\n                svg.append(\"g\")\n                    .attr(\"transform\", \"rotate(270)\")\n                  .append(\"text\")\n                    .attr(\"x\", -height/2)\n                    .attr(\"y\", -30)\n                    .attr(\"class\", \"centered axis\")\n                    .text(\"Teen pregnancy rate\")\n\n                svg.append(\"g\")\n                    .attr(\"class\", \"y axis\")\n                    .call(yAxis)\n                svg.append(\"text\")\n                    .attr(\"x\", width/2)\n                    .attr(\"y\", height+30)\n                    .attr(\"class\", \"centered axis\")\n                    .text(\"Percent of girls who attend high school\")\n\n                svg.selectAll(\"circle\")\n                   .data(data)\n                   .enter()\n                   .append(\"circle\")\n                   .attr(\"cx\", function(d){return x(d.female_hs_enrollment)})\n                   .attr(\"cy\", function(d){return y(d.teen_pregnancy)})\n                   .attr(\"r\", function(d){return r(d.wiap)})\n                 .append(\"title\")\n                 .text(function(d){\n                     return d.country + \" has a teen pregnancy rate of \" + d3.round(d.teen_pregnancy, 2) + \"% and \" +\n                     d3.round(d.female_hs_enrollment, 2) + \"% of girls attend high school. \" +\n                     d3.round(d.wiap, 2) + \"% of women are internet users.\"\n                 })\n            })\n        </script>\n    </body>\n</html>\n", "description": "Knight D3 Modules 5", "created_at": "2015-04-16T02:56:00Z", "updated_at": "2015-08-29T14:19:15Z", "api": ["d3.scale.linear", "d3.scale.sqrt", "d3.svg.axis", "d3.csv", "d3.descending", "d3.extent", "d3.max", "d3.select", "d3.round"], "readme": "", "uid": "mgold_3cb71efd1287f5c03c80"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.counties {\n  fill:   none;\n  stroke: black;\n  opacity:0.2;\n}\n\n.states {\n  fill:   none;\n  stroke: black;\n  stroke-linejoin: round;\n}\n\n.make-it-red {\n  fill: red;\n  stroke: yellow;\n  stroke-width: 2px;\n}\n\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/queue.v1.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script>\nvar maptype = 'topojson';\n\n\nvar width = 960,\n    height = 600;\n\n\nvar projection = d3.geo.albersUsa()\n    .scale(1280)\n    .translate([width / 2, height / 2]);\n\n\nvar path = d3.geo.path()\n    .projection(projection);\n\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n\nqueue()\n    .defer(d3.json, \"us-states.geojson\")\n    .defer(d3.json, \"us-states.topojson\")\n    .await(ready);\n\n\nfunction ready(error, us_geojson,us_topojson) {\n  \n// GEOJSON  \n  if (maptype === 'geojson') {\n    var us = us_geojson;\n\n\n    svg.append(\"g\")\n        .attr(\"class\", \"states\")\n      .selectAll(\"path\")\n        .data(us.features)\n      .enter().append(\"path\")\n        .attr(\"d\", path)\n        // the three commented lines below are a longer version of the line above\n        /*\n         .attr(\"d\", function(d) {\n          return path(d);\n         })\n        */\n        .classed('make-it-red', function(d) {\n          if (d.properties.name === \"Mississippi\" || d.properties.name === \"Oregon\") {\n            return true;\n          }\n          else {\n            return false;\n          }\n        })\n\n\n  }\n  \n\n// TOPOJSON\n  else if (maptype === 'topojson') {\n    var us = us_topojson;\n\n    svg.append(\"g\")\n        .attr(\"class\", \"counties\")\n      .selectAll(\"path\")\n        .data(topojson.feature(us, us.objects.counties).features)\n      .enter().append(\"path\")\n        .attr(\"d\", path);\n\n    svg.append(\"path\")\n        .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n        .attr(\"class\", \"states\")\n        .attr(\"d\", path);\n  \n  }\n\n  \n}\n\n</script>", "description": "Simple D3 US Map", "created_at": "2014-08-07T11:33:41Z", "updated_at": "2015-08-29T14:05:00Z", "api": ["d3.geo.albersUsa", "d3.geo.path", "d3.select"], "readme": "", "uid": "dwtkns_c6945b98afe6cc2fc410"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\ncircle {\n  fill: rgb(31, 119, 180);\n  fill-opacity: .25;\n  stroke: rgb(31, 119, 180);\n  stroke-width: 1px;\n}\n\n.leaf circle {\n  fill: #ff7f0e;\n  fill-opacity: 1;\n}\n\ntext {\n  font: 10px sans-serif;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar diameter = 960,\n    format = d3.format(\",d\");\n\nvar pack = d3.layout.pack()\n    .size([diameter - 4, diameter - 4])\n    .radius(function(d){return Math.sqrt(d);})\n    .value(function(d) { return d.size; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(2,2)\");\n\nd3.json(\"flare.json\", function(error, root) {\n  var node = svg.datum(root).selectAll(\".node\")\n      .data(pack.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return d.children ? \"node\" : \"leaf node\"; })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"title\")\n      .text(function(d) { return d.name + (d.children ? \"\" : \": \" + format(d.size)); });\n\n  node.append(\"circle\")\n      .attr(\"r\", function(d) { return d.r; });\n\n  node.filter(function(d) { return !d.children; }).append(\"text\")\n      .attr(\"dy\", \".3em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.name.substring(0, d.r / 3); });\n});\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n</script>", "description": "d3 pack radius fail", "created_at": "2014-05-16T17:42:02Z", "updated_at": "2015-08-29T14:01:30Z", "api": ["d3.format", "d3.layout.pack", "d3.select", "d3.json"], "readme": "Enclosure diagrams use containment to represent the hierarchy. Although circle packing is not as space-efficient as a treemap, it better reveals the hierarchy. Implementation based on work by [Jeff Heer](http://jheer.org/). Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, also courtesy Jeff Heer.\n\nSee also this [zoomable version](/mbostock/7607535).", "uid": "ecerulm_f0a36710e3ccbf0cfc01"}, {"code": "<!DOCTYPE html>\n<html>\n<meta charset=\"utf-8\">\n<title>Sankey Diagram</title>\n<style>\n \n@import url(http://fonts.googleapis.com/css?family=PT+Serif|PT+Serif:b|PT+Serif:i|PT+Sans|PT+Sans:b);\n \n#chart {\n  height: 500px;\n}\n \n.node rect {\n  cursor: move;\n  fill-opacity: .9;\n  shape-rendering: crispEdges;\n}\n \n.node text {\n  pointer-events: none;\n  text-shadow: 0 1px 0 #fff;\n}\n \n.link {\n  fill: none;\n  stroke: #000;\n  stroke-opacity: .2;\n}\n \n.link:hover {\n  stroke-opacity: .5;\n}\n \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js?2.9.1\"></script>\n<script src=\"sankey.js\"></script>\n<script>\n \nvar margin = {top: 1, right: 1, bottom: 6, left: 1},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar formatNumber = d3.format(\",.0f\"),\n    format = function(d) { return formatNumber(d) + \" TWh\"; },\n    color = d3.scale.category20();\n \nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nvar sankey = d3.sankey()\n    .nodeWidth(15)\n    .nodePadding(10)\n    .size([width, height]);\n \nvar path = sankey.link();\n \nd3.json(\"energy.json\", function(energy) {\n \n  sankey\n      .nodes(energy.nodes)\n      .links(energy.links)\n      .layout(32);\n \n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(energy.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n \n  link.append(\"title\")\n      .text(function(d) { return d.source.name + \" \u2192 \" + d.target.name + \"\\n\" + format(d.value); });\n \n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(energy.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n      .origin(function(d) { return d; })\n      .on(\"dragstart\", function() { this.parentNode.appendChild(this); })\n      .on(\"drag\", dragmove));\n \n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { return d.name + \"\\n\" + format(d.value); });\n \n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n \n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \"translate(\" + d.x + \",\" + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n \n</script>", "description": "d3 Sankey Demo", "created_at": "2014-02-12T16:43:39Z", "updated_at": "2015-08-29T13:56:17Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.json", "d3.behavior.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest"], "readme": "", "uid": "git-ashish_8959381"}, {"code": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>Knight D3 Module 3</title>\n        <style>\n            .axis path, .axis line {\n              fill: none;\n              stroke: #000;\n              shape-rendering: crispEdges;\n            }\n\n            rect {\n                fill: rgb(2, 168, 2);\n            }\n\n            rect:hover {\n                fill: rgb(2, 111, 2);\n            }\n\n            .axis text {\n                font-size: 12px;\n            }\n\n            text.centered {\n                text-anchor: middle;\n            }\n\n            h1, p, text {\n                font-family: avenir, sans-serif;\n            }\n\n            h1 {\n                font-weight: initial;\n                margin: 4px 0px;\n            }\n\n            p {\n                margin: 4px 0px;\n            }\n\n            .y.axis line, .y.axis path{\n                opacity: 0;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>The Most Forested Countries</h1>\n        <p>From the UN Statistics Dvision and the Millennium Development Goals Indicators, collected by <a href=noceilings.org/data>NoCeilings</a> (series LACFORES)</p>\n        <svg width=960 height=800>\n        </svg>\n        <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n        <script>\n            var margin = {top: 20, right: 20, bottom: 30, left: 112},\n                width = 960 - margin.left - margin.right,\n                height = 800 - margin.top - margin.bottom;\n\n            var x = d3.scale.linear()\n                .range([0, width]);\n\n            var y = d3.scale.ordinal()\n                .rangeRoundBands([0, height-margin.bottom], 0.1);\n\n            var xAxis = d3.svg.axis()\n                .scale(x)\n                .orient(\"bottom\");\n\n            var yAxis = d3.svg.axis()\n                .scale(y)\n                .orient(\"left\");\n\n            d3.csv(\"no-ceilings-data.csv\", function(row){\n                //accessor to convert to numbers\n                var obj = {}\n                Object.keys(row).forEach(function(k){\n                    var v = row[k]\n                    obj[k] = +v || v;\n                })\n                return obj\n            }, function(err, data){\n                if (err) return console.error(err);\n                data = data.filter(function(d){return d.population > 5});\n                data.sort(function(a,b){return d3.descending(a.forests, b.forests)})\n                var cutoff = 42;\n                if (data.length > cutoff){ data = data.slice(0, cutoff) }\n\n                x.domain([0, d3.max(data, function(d){return d.forests})])\n                y.domain(data.map(function(d){return d.country}))\n\n                var svg = d3.select(\"svg\");\n\n                svg.append(\"g\")\n                    .attr(\"class\", \"x axis\")\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + (height-margin.bottom) + \")\")\n                    .call(xAxis);\n\n                svg.append(\"g\")\n                    .attr(\"class\", \"y axis\")\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + 0 + \")\")\n                    .call(yAxis)\n                    .selectAll(\"text\").attr(\"dx\", \"6px\")\n                svg.append(\"text\")\n                    .attr(\"x\", margin.left + width/2)\n                    .attr(\"y\", height+10)\n                    .attr(\"class\", \"centered\")\n                    .text(\"Percent of surface area that is forested\")\n\n                svg.selectAll(\"rect\")\n                   .data(data)\n                   .enter()\n                   .append(\"rect\")\n                   .attr(\"x\", margin.left)\n                   .attr(\"y\", function(d){return y(d.country)})\n                   .attr(\"height\", y.rangeBand())\n                   .attr(\"width\", function(d){return x(d.forests)})\n            })\n        </script>\n    </body>\n</html>\n", "description": "Knight D3 Module 4", "created_at": "2015-04-13T00:36:13Z", "updated_at": "2015-08-29T14:19:02Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.csv", "d3.descending", "d3.max", "d3.select"], "readme": "", "uid": "mgold_20691b86ad226e14bb70"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style type=\"text/css\">\n\nsvg {\n  font-family: \"Helvetica Neue\", Helvetica;\n}\n\n.line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2px;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar m = [20, 20, 30, 20],\n    w = 960 - m[1] - m[3],\n    h = 500 - m[0] - m[2];\n\nvar x,\n    y,\n    duration = 1500,\n    delay = 500;\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", w + m[1] + m[3])\n    .attr(\"height\", h + m[0] + m[2])\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\nvar stocks,\n    symbols;\n\n// A line generator, for the dark stroke.\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); });\n\n// A line generator, for the dark stroke.\nvar axis = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(h);\n\n// A area generator, for the dark stroke.\nvar area = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y1(function(d) { return y(d.price); });\n\nd3.csv(\"stocks.csv\", function(data) {\n  var parse = d3.time.format(\"%b %Y\").parse;\n\n  // Nest stock values by symbol.\n  symbols = d3.nest()\n      .key(function(d) { return d.symbol; })\n      .entries(stocks = data);\n\n  // Parse dates and numbers. We assume values are sorted by date.\n  // Also compute the maximum price per symbol, needed for the y-domain.\n  symbols.forEach(function(s) {\n    s.values.forEach(function(d) { d.date = parse(d.date); d.price = +d.price; });\n    s.maxPrice = d3.max(s.values, function(d) { return d.price; });\n    s.sumPrice = d3.sum(s.values, function(d) { return d.price; });\n  });\n\n  // Sort by maximum price, descending.\n  symbols.sort(function(a, b) { return b.maxPrice - a.maxPrice; });\n\n  var g = svg.selectAll(\"g\")\n      .data(symbols)\n    .enter().append(\"g\")\n      .attr(\"class\", \"symbol\");\n\n  setTimeout(lines, duration);\n});\n\nfunction lines() {\n  x = d3.time.scale().range([0, w - 60]);\n  y = d3.scale.linear().range([h / 4 - 20, 0]);\n\n  // Compute the minimum and maximum date across symbols.\n  x.domain([\n    d3.min(symbols, function(d) { return d.values[0].date; }),\n    d3.max(symbols, function(d) { return d.values[d.values.length - 1].date; })\n  ]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + (i * h / 4 + 10) + \")\"; });\n\n  g.each(function(d) {\n    var e = d3.select(this);\n\n    e.append(\"path\")\n        .attr(\"class\", \"line\");\n\n    e.append(\"circle\")\n        .attr(\"r\", 5)\n        .style(\"fill\", function(d) { return color(d.key); })\n        .style(\"stroke\", \"#000\")\n        .style(\"stroke-width\", \"2px\");\n\n    e.append(\"text\")\n        .attr(\"x\", 12)\n        .attr(\"dy\", \".31em\")\n        .text(d.key);\n  });\n\n  function draw(k) {\n    g.each(function(d) {\n      var e = d3.select(this);\n      y.domain([0, d.maxPrice]);\n\n      e.select(\"path\")\n          .attr(\"d\", function(d) { return line(d.values.slice(0, k + 1)); });\n\n      e.selectAll(\"circle, text\")\n          .data(function(d) { return [d.values[k], d.values[k]]; })\n          .attr(\"transform\", function(d) { return \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\"; });\n    });\n  }\n\n  var k = 1, n = symbols[0].values.length;\n  d3.timer(function() {\n    draw(k);\n    if ((k += 2) >= n - 1) {\n      draw(n - 1);\n      setTimeout(horizons, 500);\n      return true;\n    }\n  });\n}\n\nfunction horizons() {\n  svg.insert(\"defs\", \".symbol\")\n    .append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", w)\n      .attr(\"height\", h / 4 - 20);\n\n  var color = d3.scale.ordinal()\n      .range([\"#c6dbef\", \"#9ecae1\", \"#6baed6\"]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"clip-path\", \"url(#clip)\");\n\n  area\n      .y0(h / 4 - 20);\n\n  g.select(\"circle\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (-h / 4) + \")\"; })\n      .remove();\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (h / 4 - 20) + \")\"; })\n      .attr(\"dy\", \"0em\");\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).selectAll(\".area\")\n        .data(d3.range(3))\n      .enter().insert(\"path\", \".line\")\n        .attr(\"class\", \"area\")\n        .attr(\"transform\", function(d) { return \"translate(0,\" + (d * (h / 4 - 20)) + \")\"; })\n        .attr(\"d\", area(d.values))\n        .style(\"fill\", function(d, i) { return color(i); })\n        .style(\"fill-opacity\", 1e-6);\n\n    y.domain([0, d.maxPrice / 3]);\n\n    d3.select(this).selectAll(\".line\").transition()\n        .duration(duration)\n        .attr(\"d\", line(d.values))\n        .style(\"stroke-opacity\", 1e-6);\n\n    d3.select(this).selectAll(\".area\").transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1)\n        .attr(\"d\", area(d.values))\n        .each(\"end\", function() { d3.select(this).style(\"fill-opacity\", null); });\n  });\n\n  setTimeout(areas, duration + delay);\n}\n\nfunction areas() {\n  var g = svg.selectAll(\".symbol\");\n\n  axis\n      .y(h / 4 - 21);\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return axis(d.values); });\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).select(\".line\").transition()\n        .duration(duration)\n        .style(\"stroke-opacity\", 1)\n        .each(\"end\", function() { d3.select(this).style(\"stroke-opacity\", null); });\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1e-6)\n        .attr(\"d\", area(d.values))\n        .remove();\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return !i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill\", color(d.key))\n        .attr(\"d\", area(d.values));\n  });\n\n  svg.select(\"defs\").transition()\n      .duration(duration)\n      .remove();\n\n  g.transition()\n      .duration(duration)\n      .each(\"end\", function() { d3.select(this).attr(\"clip-path\", null); });\n\n  setTimeout(stackedArea, duration + delay);\n}\n\nfunction stackedArea() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  area\n      .y0(function(d) { return y(d.price0); })\n      .y1(function(d) { return y(d.price0 + d.price); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration)\n      .attr(\"transform\", \"translate(0,0)\")\n      .each(\"end\", function() { d3.select(this).attr(\"transform\", null); });\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", function(d, i) { return i < 3 ? 1e-6 : 1; })\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(streamgraph, duration + delay);\n}\n\nfunction streamgraph() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\")\n      .offset(\"wiggle\");\n\n  stack(symbols);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration);\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(overlappingArea, duration + delay);\n}\n\nfunction overlappingArea() {\n  var g = svg.selectAll(\".symbol\");\n\n  line\n      .y(function(d) { return y(d.price0 + d.price); });\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d.maxPrice; }))])\n      .range([h, 0]);\n\n  area\n      .y0(h)\n      .y1(function(d) { return y(d.price); });\n\n  line\n      .y(function(d) { return y(d.price); });\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", .5)\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price) + \")\"; });\n\n  svg.append(\"line\")\n      .attr(\"class\", \"line\")\n      .attr(\"x1\", 0)\n      .attr(\"x2\", w - 60)\n      .attr(\"y1\", h)\n      .attr(\"y2\", h)\n      .style(\"stroke-opacity\", 1e-6)\n    .transition()\n      .duration(duration)\n      .style(\"stroke-opacity\", 1);\n\n  setTimeout(groupedBar, duration + delay);\n}\n\nfunction groupedBar() {\n  x = d3.scale.ordinal()\n      .domain(symbols[0].values.map(function(d) { return d.date; }))\n      .rangeBands([0, w - 60], .1);\n\n  var x1 = d3.scale.ordinal()\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeBands([0, x.rangeBand()]);\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .remove();\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", 1e-6)\n      .remove();\n\n  g.each(function(p, j) {\n    d3.select(this).selectAll(\"rect\")\n        .data(function(d) { return d.values; })\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.date) + x1(p.key); })\n        .attr(\"y\", function(d) { return y(d.price); })\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"height\", function(d) { return h - y(d.price); })\n        .style(\"fill\", color(p.key))\n        .style(\"fill-opacity\", 1e-6)\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1);\n  });\n\n  setTimeout(stackedBar, duration + delay);\n}\n\nfunction stackedBar() {\n  x.rangeRoundBands([0, w - 60], .1);\n\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  var g = svg.selectAll(\".symbol\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.select(\"text\")\n      .delay(symbols[0].values.length * 10)\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price); })\n      .attr(\"height\", function(d) { return h - y(d.price); })\n      .each(\"end\", function() {\n        d3.select(this)\n            .style(\"stroke\", \"#fff\")\n            .style(\"stroke-opacity\", 1e-6)\n          .transition()\n            .duration(duration / 2)\n            .attr(\"x\", function(d) { return x(d.date); })\n            .attr(\"width\", x.rangeBand())\n            .style(\"stroke-opacity\", 1);\n      });\n\n  setTimeout(transposeBar, duration + symbols[0].values.length * 10 + delay);\n}\n\nfunction transposeBar() {\n  x\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeRoundBands([0, w], .2);\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d3.sum(d.values.map(function(d) { return d.price; })); }))]);\n\n  var stack = d3.layout.stack()\n      .x(function(d, i) { return i; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; });\n\n  stack(d3.zip.apply(null, symbols.map(function(d) { return d.values; }))); // transpose!\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price) - 1; })\n      .attr(\"height\", function(d) { return h - y(d.price) + 1; })\n      .attr(\"x\", function(d) { return x(d.symbol); })\n      .attr(\"width\", x.rangeBand())\n      .style(\"stroke-opacity\", 1e-6);\n\n  t.select(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"transform\", function(d) { return \"translate(\" + (x(d.key) + x.rangeBand() / 2) + \",\" + h + \")\"; })\n      .attr(\"dy\", \"1.31em\")\n      .each(\"end\", function() { d3.select(this).attr(\"x\", null).attr(\"text-anchor\", \"middle\"); });\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"x2\", w);\n\n  setTimeout(donut,  duration / 2 + symbols[0].values.length * 10 + delay);\n}\n\nfunction donut() {\n  var g = svg.selectAll(\".symbol\");\n\n  g.selectAll(\"rect\").remove();\n\n  var pie = d3.layout.pie()\n      .value(function(d) { return d.sumPrice; });\n\n  var arc = d3.svg.arc();\n\n  g.append(\"path\")\n      .style(\"fill\", function(d) { return color(d.key); })\n      .data(function() { return pie(symbols); })\n    .transition()\n      .duration(duration)\n      .tween(\"arc\", arcTween);\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"dy\", \".31em\");\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"y1\", 2 * h)\n      .attr(\"y2\", 2 * h)\n      .remove();\n\n  function arcTween(d) {\n    var path = d3.select(this),\n        text = d3.select(this.parentNode.appendChild(this.previousSibling)),\n        x0 = x(d.data.key),\n        y0 = h - y(d.data.sumPrice);\n\n    return function(t) {\n      var r = h / 2 / Math.min(1, t + 1e-3),\n          a = Math.cos(t * Math.PI / 2),\n          xx = (-r + (a) * (x0 + x.rangeBand()) + (1 - a) * (w + h) / 2),\n          yy = ((a) * h + (1 - a) * h / 2),\n          f = {\n            innerRadius: r - x.rangeBand() / (2 - a),\n            outerRadius: r,\n            startAngle: a * (Math.PI / 2 - y0 / r) + (1 - a) * d.startAngle,\n            endAngle: a * (Math.PI / 2) + (1 - a) * d.endAngle\n          };\n\n      path.attr(\"transform\", \"translate(\" + xx + \",\" + yy + \")\");\n      path.attr(\"d\", arc(f));\n      text.attr(\"transform\", \"translate(\" + arc.centroid(f) + \")translate(\" + xx + \",\" + yy + \")rotate(\" + ((f.startAngle + f.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n    };\n  }\n\n  setTimeout(donutExplode, duration + delay);\n}\n\nfunction donutExplode() {\n  var r0a = h / 2 - x.rangeBand() / 2,\n      r1a = h / 2,\n      r0b = 2 * h - x.rangeBand() / 2,\n      r1b = 2 * h,\n      arc = d3.svg.arc();\n\n  svg.selectAll(\".symbol path\")\n      .each(transitionExplode);\n\n  function transitionExplode(d, i) {\n    d.innerRadius = r0a;\n    d.outerRadius = r1a;\n    d3.select(this).transition()\n        .duration(duration / 2)\n        .tween(\"arc\", tweenArc({\n          innerRadius: r0b,\n          outerRadius: r1b\n        }));\n  }\n\n  function tweenArc(b) {\n    return function(a) {\n      var path = d3.select(this),\n          text = d3.select(this.nextSibling),\n          i = d3.interpolate(a, b);\n      for (var key in b) a[key] = b[key]; // update data\n      return function(t) {\n        var a = i(t);\n        path.attr(\"d\", arc(a));\n        text.attr(\"transform\", \"translate(\" + arc.centroid(a) + \")translate(\" + w / 2 + \",\" + h / 2 +\")rotate(\" + ((a.startAngle + a.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n      };\n    }\n  }\n\n  setTimeout(function() {\n    svg.selectAll(\"*\").remove();\n    svg.selectAll(\"g\").data(symbols).enter().append(\"g\").attr(\"class\", \"symbol\");\n    lines();\n  }, duration);\n}\n\n</script>\n", "description": "D3 Show Reel", "created_at": "2011-10-01T19:57:22Z", "updated_at": "2016-04-28T16:44:17Z", "api": ["d3.scale.category10", "d3.select", "d3.svg.line", "d3.svg.area", "d3.csv", "d3.time.format", "d3.nest", "d3.max", "d3.sum", "d3.time.scale", "d3.scale.linear", "d3.min", "d3.timer", "d3.scale.ordinal", "d3.range", "d3.layout.stack", "d3.zip.apply", "d3.layout.pie", "d3.svg.arc", "d3.interpolate"], "readme": "The first 15 seconds of the D3 show reel. See full video at <http://vimeo.com/29862153>. Includes seamless transitions between the following visualization types:\n\n* lines\n* horizons\n* areas\n* stacked areas\n* streamgraph\n* overlapping areas\n* grouped bars\n* stacked bars\n* bars\n* donut\n\nAdmittedly, these aren\u2019t the most useful visualizations; their purpose is not to inform but to demonstrate D3\u2019s capability for producing dynamic visualizations with custom transitions. They *do* show real data (the monthly closing price for ten years\u2019 worth of stock data), but I didn\u2019t include axes for date or price. See the [axis component](http://bl.ocks.org/1166403) for a better example. Also, the stacked visualizations aren\u2019t especially meaningful, unless you imagine owning a portfolio with equal parts AAPL, AMZN, IBM and MSFT. Similarly, the bars and donuts represent the *average* price (or sum) during this time period.", "uid": "mbostock_1256572"}, {"code": "<!DOCTYPE html>\n<title></title>\n<meta charset=\"utf-8\">\n<script src=\"http://d3js.org/d3.v2.js\"></script>\n<script src=\"http://underscorejs.org/underscore.js\"></script>\n<script src=\"burrow.js\"></script>\n\n<style>\n\n.node circle {\n  fill: steelblue;\n  stroke-width: 1.5px;\n  stroke: #fff;\n}\n\n.node {\n  font: 10px sans-serif;\n}\n\n.link {\n  fill: none;\n  stroke: #ccc;\n  stroke-opacity: 0.6;\n  stroke-width: 1.5px;\n}\n\n</style>\n<body>\n</body>\n<script>\n/* Reingold-Tilford Tree */\n\nvar diameter = 960;\nvar padding = 210;\n\nvar tree = d3.layout.tree()\n    .size([360, diameter / 2 - padding])\n    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n\nvar diagonal = d3.svg.diagonal.radial()\n    .projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + diameter / 2 + \",\" + diameter / 2 + \")\");\n\nd3.selection.prototype.moveToFront = function() {\n  return this.each(function() {\n    this.parentNode.appendChild(this);\n  });\n};\n\nd3.tsv(\"d3.v1.tsv\", function(files) {\n  var nested1 = processData(files);\n  svg.append(\"text\")\n    .attr(\"id\", \"version\")\n    .text(\"v1.29.7\")\n    .attr(\"x\", -diameter*0.4)\n    .attr(\"y\", -diameter*0.4)\n    .style(\"font-size\", \"32px\");\n  treemap(nested1);\n  d3.tsv(\"d3.v2.tsv\", function(files) {\n    var nested2 = processData(files);\n    function update2() {\n      svg.select(\"#version\")\n        .transition().duration(500)\n        .style(\"opacity\", 0)\n        .transition().delay(500)\n        .text(\"2.10.3\")\n        .transition()\n        .style(\"opacity\", 1)\n      treemap(nested2);\n    };\n    setTimeout(update2, 5200);\n    d3.tsv(\"d3.v3.tsv\", function(files2) {\n      var nested3 = processData(files2);\n      function update3() {\n        svg.select(\"#version\")\n        .transition().duration(500)\n        .style(\"opacity\", 0)\n        .transition().delay(500)\n        .text(\"3.0.0pre\")\n        .transition()\n        .style(\"opacity\", 1)\n        treemap(nested3);\n      };\n      setTimeout(update3, 11800);\n    });\n  });\n});\n\nfunction processData(files) {\n  files.forEach(function(d) {\n    d.size = parseInt(d.size);\n    d.keys = d.file.replace(\".js\",\"\").split(\"/\");\n    d.keys.forEach(function(sect,i) {\n      d[\"section\" + i] = sect;\n    });\n  });\n\n  return burrow(files);\n}\n\nfunction treemap(root) {\n  var nodes = tree.nodes(root),\n      links = tree.links(nodes);\n\n  var link = svg.selectAll(\".link\")\n    .data(links, function(d) { return d.source.name + \"-\" + d.target.name;})\n\n  link\n    .transition()\n      .delay(400)\n      .duration(600)\n      .attr(\"d\", diagonal);\n\n  link\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal)\n      .style(\"opacity\", 0)\n      .transition()\n      .duration(300)\n      .delay(function(d,i) {\n        return 24*i;\n      })\n      .style(\"opacity\", 1);\n\n  link.exit()\n    .transition()\n      .duration(400)\n      .style(\"opacity\", 0)\n      .delay(400)\n      .remove();\n\n  var node = svg.selectAll(\".node\")\n      .moveToFront()\n      .data(nodes, function(d) { return d.name + \"-\" + (d.parent ? d.parent.name : \"root\");})\n\n   node.exit()\n    .transition()\n      .duration(400)\n      .style(\"opacity\", 0)\n      .delay(400)\n      .remove();\n\n  node\n    .transition()\n      .delay(400)\n      .duration(800)\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n\n  node.selectAll(\"text\")\n    .transition()\n      .duration(800)\n      .attr(\"font-weight\", null)\n      .attr(\"fill\", \"#555\")\n      .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n      .text(function(d) { return d.name; });\n\n  var g = node\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n\n  g.append(\"circle\")\n    .attr(\"r\", 3)\n    .style(\"opacity\", 0)\n    .transition()\n      .duration(300)\n      .delay(function(d,i) {\n        return 24*i;\n      })\n      .style(\"opacity\", 1);\n\n  g.append(\"text\")\n    .attr(\"dy\", \".31em\")\n    .attr(\"font-weight\", \"bold\")\n    .attr(\"fill\", \"black\")\n    .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n    .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n    .text(function(d) { return d.name; })\n    .style(\"opacity\", 0)\n    .transition()\n      .duration(300)\n      .delay(function(d,i) {\n        return 24*i;\n      })\n      .style(\"opacity\", 1);\n\n};\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n</script>\n", "description": "d3 src tree transitions", "created_at": "2012-11-17T03:09:37Z", "updated_at": "2015-10-12T21:58:14Z", "api": ["d3.layout.tree", "d3.svg.diagonal.radial", "d3.select", "d3.tsv"], "readme": "A comparison of the src directory for three versions of d3. Also see [d3 src tree](http://bl.ocks.org/4076122).", "uid": "syntagmatic_4092944"}, {"code": "  <!DOCTYPE html>\n  <html>\n    <head>\n      <meta charset=utf-8 />\n      <title>Leaflet, Mapbox and D3JS test</title>\n      <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />\n      <script src='https://api.tiles.mapbox.com/mapbox.js/v2.0.1/mapbox.js'></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.11/d3.min.js\"></script>\n        <script src=\"http://libs.cartocdn.com/cartodb.js/v3/cartodb.js\"></script>\n      <link href='https://api.tiles.mapbox.com/mapbox.js/v2.0.1/mapbox.css' rel='stylesheet' />\n        <link rel=\"stylesheet\" href=\"http://libs.cartocdn.com/cartodb.js/v3/themes/css/cartodb.css\" />\n      <style>\n        \n        body { margin:0; padding:0; }\n        \n        #map { \n          width: 1200px;\n          height: 800px;\n          margin: 50px auto;\n        }\n\n        svg { \n          position: relative; \n        }\n\n        path {\n          fill: #000;\n          fill-opacity: 0;\n          stroke: #fff;\n          stroke-width: 1.5px;\n        }\n\n        path:hover {\n          fill: hsl(340, 50%, 50%);\n          fill-opacity: .4;\n        }\n\n      </style>\n    </head>\n    <body>\n\n      <div id='map'></div>\n\n      <script>\n\n        /********************************************************\n          MapBox JS code credit: \n          https://www.mapbox.com/mapbox.js/example/v1.0.0/plain-leaflet/  \n        ********************************************************/\n\n        var mapboxTiles = L.tileLayer('https://{s}.tiles.mapbox.com/v3/chenrick.k94zehfr/{z}/{x}/{y}.png');\n\n        var params = {\n          center: [0,0],\n          minZoom: 2, \n          maxZoom: 4,\n          zoom: 2,        \n        };\n\n        var map = L.map('map', params)\n            .addLayer(mapboxTiles);\n\n        /********************************************************\n          CartoDB code credit: http://docs.cartodb.com/tutorials/create_map_cartodbjs.html\n        ********************************************************/\n\n        var CbdLayerUrl = \"http://chenrick.cartodb.com/api/v2/viz/f8014f6c-343f-11e4-a181-0e230854a1cb/viz.json\";\n\n        cartodb.createLayer(map, CbdLayerUrl).on('done', function(layer) {\n          init();\n        })\n        .addTo(map);\n\n         /********************************************************\n          D3 JS code credit: http://bost.ocks.org/mike/leaflet/  \n        ********************************************************/\n        function init(){\n          /* set up the svg object in realtionship to the Leaflet map */\n          var svg = d3.select(map.getPanes().overlayPane).append(\"svg\"),\n                g = svg.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\");\n\n          d3.json(\"ne_10m_time_zones.json\", function(collection) {\n            \n            console.log(\"collection: \", collection);\n\n            var transform = d3.geo.transform({point: projectPoint}),\n                  path = d3.geo.path().projection(transform);\n\n            var feature = g.selectAll(\"path\")\n                  .data(collection.features)\n                .enter().append(\"path\");\n            \n            map.on(\"viewreset\", reset);\n            reset();\n\n            function reset(){\n              var bounds = path.bounds(collection),\n              topLeft = bounds[0],\n              bottomRight = bounds[1];    \n\n              svg .attr(\"width\", bottomRight[0] - topLeft[0])\n                    .attr(\"height\", bottomRight[1] - topLeft[1])\n                    .style(\"left\", topLeft[0] + \"px\")\n                    .style(\"top\", topLeft[1] + \"px\");\n\n              g   .attr(\"transform\", \"translate(\" + -topLeft[0] + \",\" + -topLeft[1] + \")\");\n\n              feature.attr(\"d\", path);\n            }             \n\n            function projectPoint(x, y) {\n              var point = map.latLngToLayerPoint(new L.LatLng(y, x));\n              this.stream.point(point.x, point.y);\n            }\n\n          });\n        }\n\n      </script>\n    </body>\n  </html>", "description": "CartoDB JS + D3 JS", "created_at": "2014-09-11T12:27:39Z", "updated_at": "2015-08-29T14:06:18Z", "api": ["d3.select", "d3.json", "d3.geo.transform", "d3.geo.path"], "readme": "", "uid": "clhenrick_20fd8f959b965d647f83"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  margin: auto;\n  padding-top: 40px;\n  position: relative;\n  width: 960px;\n}\n\nbutton {\n  position: absolute;\n  right: 10px;\n  top: 10px;\n}\n\n.bullet { font: 10px sans-serif; }\n.bullet .marker { stroke: #000; stroke-width: 2px; }\n.bullet .tick line { stroke: #666; stroke-width: .5px; }\n.bullet .range.s0 { fill: #eee; }\n.bullet .range.s1 { fill: #ddd; }\n.bullet .range.s2 { fill: #ccc; }\n.bullet .measure.s0 { fill: lightsteelblue; }\n.bullet .measure.s1 { fill: steelblue; }\n.bullet .title { font-size: 14px; font-weight: bold; }\n.bullet .subtitle { fill: #999; }\n\n</style>\n<button>Update</button>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"bullet.js\"></script>\n<script>\n\nvar margin = {top: 5, right: 40, bottom: 20, left: 120},\n    width = 960 - margin.left - margin.right,\n    height = 50 - margin.top - margin.bottom;\n\nvar chart = d3.bullet()\n    .width(width)\n    .height(height);\n\nd3.json(\"bullets.json\", function(error, data) {\n  var svg = d3.select(\"body\").selectAll(\"svg\")\n      .data(data)\n    .enter().append(\"svg\")\n      .attr(\"class\", \"bullet\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .call(chart);\n\n  var title = svg.append(\"g\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"transform\", \"translate(-6,\" + height / 2 + \")\");\n\n  title.append(\"text\")\n      .attr(\"class\", \"title\")\n      .text(function(d) { return d.title; });\n\n  title.append(\"text\")\n      .attr(\"class\", \"subtitle\")\n      .attr(\"dy\", \"1em\")\n      .text(function(d) { return d.subtitle; });\n\n  d3.selectAll(\"button\").on(\"click\", function() {\n    svg.datum(randomize).call(chart.duration(1000)); // TODO automatic transition\n  });\n});\n\nfunction randomize(d) {\n  if (!d.randomizer) d.randomizer = randomizer(d);\n  d.ranges = d.ranges.map(d.randomizer);\n  d.markers = d.markers.map(d.randomizer);\n  d.measures = d.measures.map(d.randomizer);\n  return d;\n}\n\nfunction randomizer(d) {\n  var k = d3.max(d.ranges) * .2;\n  return function(d) {\n    return Math.max(0, d + k * (Math.random() - .5));\n  };\n}\n\n</script>\n", "description": "D3 Bullet Chart", "created_at": "2015-02-20T07:27:07Z", "updated_at": "2015-08-29T14:15:48Z", "api": ["d3.select", "d3.scale.linear", "d3.timer.flush", "d3.bullet", "d3.json", "d3.selectAll", "d3.max"], "readme": "Designed by Stephen Few, a bullet chart \u201cprovides a rich display of data in a small space.\u201d A variation on a bar chart, bullet charts compare a given quantitative measure (such as profit or revenue) against qualitative ranges (e.g., poor, satisfactory, good) and related markers (e.g., the same measure a year ago). Layout inspired by [Stephen Few](http://www.perceptualedge.com/articles/misc/Bullet_Graph_Design_Spec.pdf). Implementation based on work by [Clint Ivy](http://projects.instantcognition.com/protovis/bulletchart/), Jamie Love of [N-Squared Software](http://www.nsquaredsoftware.com/) and [Jason Davies](http://www.jasondavies.com/). The \"update\" button randomizes the values slightly to demonstrate transitions.\n", "uid": "git-ashish_e7182a82862071b405b5"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Zoomable Treemap</title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n<script src=\"http://d3js.org/d3.v2.js\"></script>\n<script src=\"http://code.jquery.com/jquery-1.7.1.js\"></script>\n\n<p id=\"chart\">\n<p id=\"rawdata\">\n\n<script src=\"treemap.js\"></script>\n<script>\n\tfunction reSortRoot(root,value_key) {\n\t\t//console.log(\"Calling\");\n\t\tfor (var key in root) {\n\t\t\tif (key == \"key\") {\n\t\t\t\troot.name = root.key;\n\t\t\t\tdelete root.key;\n\t\t\t}\n\t\t\tif (key == \"values\") {\n\t\t\t\troot.children = [];\n\t\t\t\tfor (item in root.values) {\n\t\t\t\t\troot.children.push(reSortRoot(root.values[item],value_key));\n\t\t\t\t}\n\t\t\t\tdelete root.values;\n\t\t\t}\n\t\t\tif (key == value_key) {\n\t\t\t\troot.value = parseFloat(root[value_key]);\n\t\t\t\tdelete root[value_key];\n\t\t\t}\n\t\t}\n\t\treturn root;\n\t}\n\n\t$( document ).ready(function() {\n\t\t// You can comment out the whole csv section if you just have a JSON file.\n    // loadJSONFile('data/portaldata.json');\n\n    \td3.csv(\"liste.csv\", function(csv_data){\n\n\t\t\t// Add, remove or change the key values to change the hierarchy. \n      var nested_data = d3.nest()\n       \t\t\t\t.key(function(d)  { return d.Continent; })\n       \t\t\t\t.key(function(d)  { return d.Pays; })\n          \t\t\t.key(function(d)  { return d.Name; })\n\t\t\t\t      .entries(csv_data);\n\t\t\t\n\t\t\t// Creat the root node for the treemap\n\t\t\tvar root = {};\n\t\t\t\n\t\t\t// Add the data to the tree\n\t\t\troot.key = \"Niveau de donn\u00e9es\";\n\t\t\troot.values = nested_data;\n\t\t\n\t\t\t// Change the key names and children values from .next and add values for a chosen column to define the size of the blocks\n\t\t\troot = reSortRoot(root,\"Net_Worth\");\n\t\t\t\n\t\t\t// DEBUG\n// \t\t\t$(\"#rawdata\").html(JSON.stringify(root));\n\t\t\t\n\t\t\tloadData(root);\n\t\t\t\n\t\t});\n\n\n\t});\n</script>", "description": "D3 Treemap Milliardaires", "created_at": "2015-03-05T21:44:38Z", "updated_at": "2015-11-02T02:58:06Z", "api": ["d3.csv", "d3.nest", "d3.format", "d3.scale.linear", "d3.layout.treemap", "d3.select", "d3.scale.category20c", "d3.json"], "readme": "", "uid": "fdaudens_22905918f5aec406f773"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>", "description": "Simple d3.js Graph", "created_at": "2016-03-22T11:08:17Z", "updated_at": "2016-03-22T11:08:17Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a simple d3.js graph used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at providing some exposure to some d3.js functions and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "yesoreyeram_c1b07998add14ffc9d03"}, {"code": "<!DOCTYPE html>\n<html>\n<meta charset=\"utf-8\">\n<title>Sankey Diagram</title>\n<style>\n  #chart {\n    height: 500px;\n  }\n\n  .node rect {\n    cursor: move;\n    fill-opacity: .9;\n    shape-rendering: crispEdges;\n  }\n\n  .node text {\n    pointer-events: none;\n    text-shadow: 0 1px 0 #fff;\n  }\n\n  .link {\n    fill: none;\n    stroke: #000;\n    stroke-opacity: .2;\n  }\n\n  .link:hover {\n    stroke-opacity: .5;\n  }\n</style>\n\n<body>\n  <div id=\"chart\"></div>\n  <script src=\"d3.min.js\"></script>\n  <script>\n    var margin = {\n        top: 1,\n        right: 1,\n        bottom: 6,\n        left: 1\n      },\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n    var formatNumber = d3.format(\",.0f\"),\n      format = function(d) {\n        return formatNumber(d) + \" TWh\";\n      },\n      color = d3.scale.category20();\n\n    var svg = d3.select(\"#chart\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var sankey = d3.sankey()\n      .nodeWidth(15)\n      .nodePadding(10)\n      .size([width, height]);\n\n    var path = sankey.link();\n\n    d3.json(\"energy.json\", function(energy) {\n\n      sankey\n        .nodes(energy.nodes)\n        .links(energy.links)\n        .layout(32);\n\n      var link = svg.append(\"g\").selectAll(\".link\")\n        .data(energy.links)\n        .enter().append(\"path\")\n        .attr(\"class\", \"link\")\n        .attr(\"d\", path)\n        .style(\"stroke-width\", function(d) {\n          return Math.max(1, d.dy);\n        })\n        .sort(function(a, b) {\n          return b.dy - a.dy;\n        });\n\n      link.append(\"title\")\n        .text(function(d) {\n          return d.source.name + \" \u2192 \" + d.target.name + \"\\n\" + format(d.value);\n        });\n\n      var node = svg.append(\"g\").selectAll(\".node\")\n        .data(energy.nodes)\n        .enter().append(\"g\")\n        .attr(\"class\", \"node\")\n        .attr(\"transform\", function(d) {\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\n        });\n\n        // Not currently implemented in v4.0\n\n        // .call(d3.behavior.drag()\n        //   .origin(function(d) {\n        //     return d;\n        //   })\n        //   .on(\"dragstart\", function() {\n        //     this.parentNode.appendChild(this);\n        //   })\n        //   .on(\"drag\", dragmove));\n\n      node.append(\"rect\")\n        .attr(\"height\", function(d) {\n          return d.dy;\n        })\n        .attr(\"width\", sankey.nodeWidth())\n        .style(\"fill\", function(d) {\n          return d.color = color(d.name.replace(/ .*/, \"\"));\n        })\n        .style(\"stroke\", function(d) {\n          return d3.rgb(d.color).darker(2);\n        })\n        .append(\"title\")\n        .text(function(d) {\n          return d.name + \"\\n\" + format(d.value);\n        });\n\n      node.append(\"text\")\n        .attr(\"x\", -6)\n        .attr(\"y\", function(d) {\n          return d.dy / 2;\n        })\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"transform\", null)\n        .text(function(d) {\n          return d.name;\n        })\n        .filter(function(d) {\n          return d.x < width / 2;\n        })\n        .attr(\"x\", 6 + sankey.nodeWidth())\n        .attr(\"text-anchor\", \"start\");\n\n      function dragmove(d) {\n        d3.select(this).attr(\"transform\", \"translate(\" + d.x + \",\" + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + \")\");\n        sankey.relayout();\n        link.attr(\"d\", path);\n      }\n    });\n  </script>\n", "description": "d3-sankey demo", "created_at": "2015-12-03T16:43:56Z", "updated_at": "2015-12-05T19:09:27Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.json", "d3.behavior.drag", "d3.rgb"], "readme": "Created using the [d3-sankey](https://github.com/d3/d3-sankey) plugin for D3 4.0.\n\nRun `npm install` and then `npm run build` to create `d3.min.js`.  \n\nStolen from Mike Bostock's [original here](http://bost.ocks.org/mike/sankey/).\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "xaranke_9ada4c74a87b57ae7308"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  .axis path,\n  .axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n  }\n  .dot {}\n</style>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<body>\n  <script>\n    // var resource = 'https://dataclips.heroku.com/vgyygvzqtezwpmwpcmmjlluamjlk.json';\n    // Replaced with local copy (CORS)\n    \n    var format = d3.time.format(\"%Y-%m-%d\"),\n        margin = {top: 20, right: 20, bottom: 30, left: 40},\n        width = 960 - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom;\n        \n    var x = d3.time.scale()\n                    .range([0, width]);\n    var y = d3.scale.linear()\n                    .range([height, 0]);\n                    \n    var color = d3.scale.category10();\n    \n    var xAxis = d3.svg.axis()\n                    .scale(x)\n                    .orient(\"bottom\")\n                    .ticks(d3.time.months, 1)\n                    .tickFormat(d3.time.format('%b'))\n                    .tickSize(0)\n                    .tickPadding(10);\n   \n    var yAxis = d3.svg.axis()\n                    .scale(y)\n                    .orient(\"left\")\n                    .tickPadding(10);\n  \n    var svg = d3.select(\"body\")\n                .append(\"svg\")\n                  .attr(\"width\", width + margin.left + margin.right)\n                  .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n    d3.json('sample.json', function(error, data) {\n      console.log(data)\n      data.values.forEach(function(d) {\n        d.date = format.parse(String(d[0]).substring(0, 10));\n        d.amount = d[1];\n        console.log(\"Spent $\" + d.amount + \" on \" + d.date);\n      });\n      x.domain([format.parse(String(data.values[0][0]).substring(0, 10)), d3.time.day.offset(format.parse(String(data.values[data.values.length - 1][0]).substring(0, 10)), 1)]).nice();\n      \n      y.domain([0, 1500])\n      // d3.max(data.values, function(d) { return d.amount; })\n      // y.domain(d3.extent(data.values, function(d){ return d.amount; })).nice();\n      \n      svg.append(\"g\")\n          .attr(\"class\", \"x axis\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(xAxis)\n          .append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"x\", width)\n            .attr(\"y\", -6)\n            .style(\"text-anchor\", \"end\")\n            .text(data.fields[0]);\n            \n      svg.append(\"g\")\n          .attr(\"class\", \"y axis\")\n          .call(yAxis)\n          .append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", 6)\n            .attr(\"dy\", \".71em\")\n            .style(\"text-anchor\", \"end\")\n            .text(data.fields[1]);\n      \n      svg.selectAll(\"circle.dot\")\n          .data(data.values)\n          .enter()\n          .append(\"circle\")\n            .attr(\"class\", \"dot\")\n            .attr(\"r\", 10)\n            .attr(\"cx\", function(d) { return x(d.date); })\n            .attr(\"cy\", function(d) { return y(d.amount); })\n            .attr(\"fill\", \"red\")\n            .attr(\"stroke-width\", 0);\n    })\n  \n  </script>\n</body>", "description": "DataClips + D3.js Chart", "created_at": "2013-06-03T21:09:18Z", "updated_at": "2015-12-18T01:09:08Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.select", "d3.json", "d3.time.day.offset", "d3.max", "d3.extent"], "readme": "Simple demonstration of consuming Heroku DataClips with D3.js.\n\nData source: <https://dataclips.heroku.com/vgyygvzqtezwpmwpcmmjlluamjlk> (.json)", "uid": "dustinlarimer_5701438"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Reprojected Tiles</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n  button.reproject {\n    position: fixed;\n    z-index: 1;\n    top: 250px;\n  }\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    map.mode(\"projection\")\n\n    tileLayer = d3.carto.layer.tile();\n    tileLayer\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\");\n\n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoJSON Countries\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\");\n\n    topojsonLayer = d3.carto.layer.topojson();\n    topojsonLayer\n    .path(\"sample_routes.topojson\")\n    .label(\"TopoJSON Lines\")\n    .cssClass(\"roads\")\n    .renderMode(\"svg\");\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .x(\"x\")\n    .y(\"y\")\n    .markerSize(2);\n\n    map.addCartoLayer(tileLayer);\n    map.addCartoLayer(geojsonLayer);\n    map.addCartoLayer(topojsonLayer);\n    map.addCartoLayer(csvLayer);\n\n    d3.json(\"world.geojson\", function(error,data) {\n\n    fNamedCountries = data.features.filter(function (d) {return d.properties.name.substring(0,1) == \"F\"});\n\n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(fNamedCountries)\n    .label(\"Filtered Features\")\n    .cssClass(\"francelike\")\n    .renderMode(\"svg\");\n\n      map.addCartoLayer(featureLayer);\n      })\n    \n    d3.select(\"#map\").append(\"button\").attr(\"class\", \"reproject\").html(\"Reproject to Conic Equidistant\").on(\"click\", reproject);\n    \n    function reproject() {\n\n    var projection = d3.geo.conicEquidistant()\n    .center([0, 15])\n    .scale(600)\n    .translate(map.zoom().translate())\n    .precision(.1);\n\n    map.projection(projection);\n    map.refresh();\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Raster Reprojection d3.carto.map", "created_at": "2014-07-12T18:48:31Z", "updated_at": "2015-08-29T14:03:54Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.json", "d3.carto.layer.featureArray", "d3.geo.conicEquidistant"], "readme": "This is an example of automatic raster reprojection of a tiled layer from **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nIt still needs some work. It does not reproject the raster on-the-fly but rather only reprojects it at \"zoomend\" which is triggered at the end of a zoom or pan event.\n\nThis uses [Jason Davies' d3.geo.raster and d3.quadtiles](http://www.jasondavies.com/maps/tile/).", "uid": "emeeks_c970c9ee3e242e90004b"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bullet.css\" />\n<body></body>\n<style>\n\nbody {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  margin: auto;\n  padding-top: 40px;\n  position: relative;\n  width: 960px;\n}\n\n.bullet { font: 10px sans-serif; }\n.bullet .axis line, .bullet .axis path { stroke: #666; stroke-width: .5px; fill: none; }\n.bullet .measure.s0 { fill: steelblue; }\n.bullet .measure.s1 { fill: lightsteelblue; }\n\n</style>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"bullet.js\"></script>\n<script>\n\nvar margin = {top: 5, right: 40, bottom: 30, left: 40},\n    width = 450 - margin.left - margin.right,\n    height = 60 - margin.top - margin.bottom;\n\nvar chart = d3.bullet()\n    .orient(\"left\")\n    .width(width)\n    .height(height)\n    .markers([85])\n    .measures([92])\n\n\nfunction base_chart(){\n    return d3.select(\"body\").append(\"svg\")\n      .attr(\"class\", \"bullet\")\n      .attr(\"width\", chart.width() + margin.left + margin.right)\n      .attr(\"height\", chart.height() + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n  }\n\nd3.select(\"body\").append(\"h2\").text(\"Passing tests showing correctness\")\n\nd3.select(\"body\").append(\"p\").text(\"Testing 2 to 5 ranges\")\nbase_chart().call(chart.ranges([90,100]))\nbase_chart().call(chart.ranges([80,90,100]))\nbase_chart().call(chart.ranges([70,80,90,100]))\nbase_chart().call(chart.ranges([65,70,80,90,100]))\n\nd3.select(\"body\").append(\"p\").text(\"Testing ability to specify accessors as functions\")\nchart.markers(function(){return [85]})\n    .measures(function(){return [92]})\n    .ranges(function(){return [80,90,100]})\nbase_chart().call(chart)\n\nd3.select(\"body\").append(\"p\").text(\"Testing 2 markers\")\nchart.markers([85, 75])\nbase_chart().call(chart)\n\nd3.select(\"body\").append(\"p\").text(\"Testing 2 measures\")\nd3.select(\"body\").append(\"p\").text(\"Measure 2 may undershoot or overshoot measure 1, which below is always 85\")\nchart.markers([89])\nbase_chart().call(chart.measures([85,92]))\nbase_chart().call(chart.measures([85,70]))\nchart.orient(\"right\")\nbase_chart().call(chart.measures([85,92]))\nbase_chart().call(chart.measures([85,70]))\n\nd3.select(\"body\").append(\"p\").text(\"Testing alternate orientations\")\nchart.measures([92])\nbase_chart().call(chart.orient(\"right\"))\nchart.width(height).height(width)\nbase_chart().call(chart.orient(\"top\"))\nbase_chart().call(chart.orient(\"bottom\"))\nchart.width(width).height(height).orient(\"left\")\n\nd3.select(\"body\").append(\"h2\").text(\"Failing tests (things I'd like to add/fix later)\")\n\nd3.select(\"body\").append(\"p\").text(\"Chart does not render properly when missing markers, measures, and ranges (also range length 1)\")\nbase_chart().call(chart.markers([]))\nchart.markers([92])\nbase_chart().call(chart.measures([]))\nchart.measures([85])\nbase_chart().call(chart.ranges([]))\nbase_chart().call(chart.ranges([100]))\nchart.ranges([80,90,100])\n\nd3.select(\"body\").append(\"p\").text(\"Ranges that don't start at 0 (90%-100%, negative only, zero in middle)\")\nd3.select(\"body\").append(\"p\").text(\"This means that we can no longer implictly start at 0 (big breaking change)\")\nd3.select(\"body\").append(\"p\").text(\"Ranges that don't include 0 should render the measure as an X not a bar\")\n\nbase_chart().call(chart.ranges([90,95, 100]).markers([98]).measures([94]))\nbase_chart().call(chart.ranges([-10,-40, -80]).markers([-5]).measures([-33]))\nbase_chart().call(chart.ranges([-10, 0, 10]).markers([-5]).measures([-3]))\n\n\n</script>\n", "description": "Testing d3.bullet", "created_at": "2014-09-03T02:03:50Z", "updated_at": "2015-08-29T14:06:00Z", "api": ["d3.svg.axis", "d3.select", "d3.scale.linear", "d3.max", "d3.transition", "d3.timer.flush", "d3.rebind", "d3.bullet"], "readme": "Testing each option to d3.bullet, taken from [d3-plugins](https://github.com/d3/d3-plugins/tree/42102dcc0142d3025295740dcdb71999f216a71a/bullet) and slightly revised. This shows that all of the options still work, and some of them work in edge cases where they didn't before. Also shown are cases that do not yet work. This is not an automated test suite; determining success or failure must be done manually (optically).", "uid": "mgold_0f1d3667b74ea5616d9f"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  .hexagon {\n    fill: none;\n    stroke: #000;\n    stroke-width: .5px;\n  }\n</style>\n\n<body>\n  <script src=\"d3.min.js\"></script>\n  <script>\n    var margin = {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      },\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n    var randomX = d3.random.normal(width / 2, 80),\n      randomY = d3.random.normal(height / 2, 80),\n      points = d3.range(2000).map(function() {\n        return [randomX(), randomY()];\n      });\n    console.log(points);\n\n    var hexbin = d3.hexbin()\n      .size([width, height])\n      .radius(20);\n\n    // the result of the hexbin layout\n    var hexbinData = hexbin(points);\n\n    var color = d3.scale.linear()\n      .domain([0, d3.max(hexbinData, function(d) {\n        return d.length;\n      })])\n      .range([\"white\", \"steelblue\"])\n      .interpolate(d3.interpolateLab);\n\n    var x = d3.scale.identity()\n      .domain([0, width]);\n\n    var y = d3.scale.linear()\n      .domain([0, height])\n      .range([height, 0]);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    svg.append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n      .append(\"rect\")\n      .attr(\"class\", \"mesh\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    svg.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n      .selectAll(\".hexagon\")\n      .data(hexbinData)\n      .enter().append(\"path\")\n      .attr(\"class\", \"hexagon\")\n      .attr(\"d\", hexbin.hexagon())\n      .attr(\"transform\", function(d) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      })\n      .style(\"fill\", function(d) {\n        return color(d.length)\n      })\n      .style(\"stroke\", \"none\");\n  </script>\n", "description": "d3-hexbin demo", "created_at": "2015-12-05T21:03:01Z", "updated_at": "2015-12-05T21:38:20Z", "api": ["d3.values", "d3.random.normal", "d3.range", "d3.hexbin", "d3.scale.linear", "d3.max", "d3.scale.identity", "d3.select"], "readme": "## hexbin scatterplot\n\na [d3-hexbin](https://github.com/d3/d3-hexbin) example with no axes donated by [micahstubbs](http://bl.ocks.org/micahstubbs).\n\nThis example modifies the block [Hexagonal Binning](http://bl.ocks.org/mbostock/4248145) by\n\n+ removing the axes\n\n+ removing the stroke from the hexagon paths\n\n+ using shiny new D3 V4.0 syntax\n\n---\n\nThis example shows how to use the [d3.hexbin](https://github.com/d3/d3-hexbin) plugin for hexagonal binning. 2,000 random points with a normal distribution are binned into hexagons; color encodes the number of points that fall into each bin. You can also use [area encoding](../4248146). Inspired by earlier work by [Zachary Forest Johnson](http://indiemaps.com/blog/2011/10/hexbins/).\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "xaranke_b956ee7215b7b50bc78a"}, {"code": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>VI4 - Magnitude as Area</title>\n  </head>\n  <body>\n    <div id=\"chart\"></div>\n    <script \n\nsrc=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n    <script>\n      (function(d3) {\n        'use strict';\n        var dataset = [\n          { label: 'Marcus Mariota', count: 3773 }, \n          { label: 'Connor Cook', count: 2900 },\n          { label: 'Brandon Doughty', count: 4344 },\n          { label: 'Patrick Mahomes', count: 1547 }\n        ];\n        var width = 360;\n        var height = 360;\n        var radius = Math.min(width, height) / 2;\n        var color = d3.scale.category20b();\n        var svg = d3.select('#chart')\n          .append('svg')\n          .attr('width', width)\n          .attr('height', height)\n          .append('g')\n          .attr('transform', 'translate(' + (width / 2) + \n            ',' + (height / 2) + ')');\n        var arc = d3.svg.arc()\n          .outerRadius(radius);\n        var pie = d3.layout.pie()\n          .value(function(d) { return d.count; })\n          .sort(null);\n        var path = svg.selectAll('path')\n          .data(pie(dataset))\n          .enter()\n          .append('path')\n          .attr('d', arc)\n          .attr('fill', function(d, i) { \n            return color(d.data.label);\n          });\n      })(window.d3);\n    </script>\n  </body>\n</html>", "description": "VI4 - Magnitude as Area", "created_at": "2016-02-17T04:55:46Z", "updated_at": "2016-02-17T04:55:47Z", "api": ["d3.scale.category20b", "d3.select", "d3.svg.arc", "d3.layout.pie"], "readme": "\nJames Eanes - VI4 - Magnitude as Area.\n\nThis pie chart gives an example of magnitude as area.  The pie chart code was taken from Zero Viscosity's example (http://zeroviscosity.com/d3-js-step-by-step/step-1-a-basic-pie-chart).  The data is a subset of the passing yards data from week 3.", "uid": "Jamestiberiuseanes_e1af6e917aab755c628f"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.arc text {\n  font: 10px sans-serif;\n  text-anchor: middle;\n}\n\n.arc path {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(0);\n\nvar labelArc = d3.svg.arc()\n    .outerRadius(radius - 40)\n    .innerRadius(radius - 40); \n  \n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.genes; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.json(\"genes.json\", function(error, data) {\n  if (error) throw error;\n\n  var g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\"); \n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.direction/d.genes); });\n\n  g.append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + labelArc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.direction/d.genes; });\n});\n\n\n</script>", "description": "final exam question 2", "created_at": "2016-05-05T14:10:25Z", "updated_at": "2016-05-05T14:10:25Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.json"], "readme": "Without modifying the information in genes.json, use D3 to construct a pie chart that shows the relative fraction of genes in the forward and reverse directions. Your code must dynamically generate the pie chart from the data. In other words, if I modify the genes.json data file, the pie chart must update automatically. (15 points)\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/53fe9d373ca3b3e20632f69c5169a59d'>final exam question 2</a>", "uid": "diepvf_66dab938296ceb5b46383fa3b2feef6c"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  svg { \n  \tborder: 1px solid black;\n  }\n</style>\n<body style=\"padding:40px\">\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/sylvester/0.1.3/sylvester.min.js\"></script> \n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>  \nvar width = 500, \n    height = 500, \n    radius = 20,  \n    padding = 100;\n    \nvar nodes = d3.range(10).map(function() { return {\n  radius: radius,\n  x: padding + Math.random() * (width - padding*2),\n  y: padding + Math.random() * (height - padding*2)\n}; }),\n    color = d3.scale.category10();\n   \nfunction MoveToClosestWall(d) {\n  if (d.x < width/2 && d.y < height/2 && d.y > d.x) d.x = 0;\n  if (d.x < width/2 && d.y < height/2 && d.x >= d.y) d.y = 0;\n \n  if (d.x >= width/2 && d.y < height/2 && width - d.x > d.y ) d.y = 0;\n  if (d.x >= width/2 && d.y < height/2 && width - d.x <= d.y) d.x = width;\n  \n  if (d.x < width/2 && d.y >= height/2 && d.x < height - d.y) d.x = 0;\n  if (d.x < width/2 && d.y >= height/2 && d.x >= height - d.y) d.y = height;\n  \n  if (d.x >= width/2 && d.y >= height/2 && width - d.x > height - d.y) d.y = height;\n  if (d.x >= width/2 && d.y >= height/2 && width - d.x <= height - d.y) d.x = width;\n}  \n\n  var left = Line.create([0,0], [0,height]);\n  var right = Line.create([width,0], [width,height]);\n  var bottom = Line.create([0,0], [width,0]);\n  var top = Line.create([0,height], [width,height]);\n  \nconsole.log(left, right, bottom, top);\n\nfunction ProjectOnLine(d) {\n  var origin = {x: width/2; y: height/2;}\n  \n}\n  \nnodes.forEach(function(d) {\n    d.orgX = d.x; \n    d.orgY = d.y;\n    //MoveToClosestWall(d);\n\t})  \n\n  var svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n  \n  var borders = svg.append(\"g\").classed(\"borders\", true);\n  borders.append(\"line\")\n\t\t.attr({\n    \tx1: 0, y1: 0,\n      x2: width, y2: height,\n      stroke: \"#d6d6d6\"\n  });\n  \n  borders.append(\"line\")\n\t\t.attr({\n    \tx1: 0, y1: height,\n      x2: width, y2: 0,\n      stroke: \"#d6d6d6\"\n  });\n  \n  borders.append(\"line\")\n\t\t.attr({\n    \tx1: width/2, y1: 0,\n      x2: width/2, y2: height,\n      stroke: \"#d6d6d6\"\n  }); \n  \n   borders.append(\"line\")\n\t\t.attr({\n    \tx1: 0, y1: height/2,\n      x2: width, y2: height/2,\n      stroke: \"#d6d6d6\"\n  });\n \n \n  var group = svg.selectAll(\".first\").data(nodes).enter().append(\"g\").classed(\"first\", true);\n  group.append(\"line\")\n    .attr({\n      x1: function(d) { return d.x; },\n      y1: function(d) { return d.y; },\n      x2: function(d) { return d.orgX; },\n      y2: function(d) { return d.orgY; },\n  \t\t\"stroke\": \"#d6d6d6\"});\n      \n  group.append(\"circle\")   \n    .attr({\n      cx: function(d) { return d.orgX; },\n      cy: function(d) { return d.orgY; },\n      r: 3,\n      fill: \"gray\",\n  \t\t\"stroke\": \"gray\"});\n  \n  group.append(\"circle\")\n    .attr({\n      cx: function(d) { return d.x; },\n      cy: function(d) { return d.y; },\n      r: 3,\n      fill: \"white\",\n  \t\t\"stroke\": \"gray\"});\n  \nvar force = d3.layout.force()\n    .gravity(0) \n    .charge(-200) \n    .nodes(nodes) \n.size([width, height])\n .on('end', function() { \n   nodes.forEach(function(d,i) {  \n     \n    var g = svg.append(\"g\");\n     g.append(\"line\")          \n      .style(\"stroke\", \"gray\")  \n      .attr(\"x1\", d.orgX)    \n      .attr(\"y1\", d.orgY)\n      .attr(\"x2\", d.x)    \n      .attr(\"y2\", d.y); \n\n  g.append(\"circle\")\n       \t.attr({\n          cx: d.x,\n          cy: d.y,\n          r: radius,\n          fill: \"white\",\n          stroke: \"gray\"     \n        });\n     \n       g.append(\"svg:image\")\n        .attr(\"xlink:href\",  \"https://image.freepik.com/free-icon/chinese-temple_318-104239.png\")\n        .attr(\"x\", d.x - radius/2)\n        .attr(\"y\", d.y - radius/2)\n        .attr(\"height\", radius)\n        .attr(\"width\", radius);\n   });  \n }); \n  \nforce.start();   \n  \nsvg.selectAll(\".move\")\n    .data(nodes)\n  .enter().append(\"circle\")\n\t.classed(\"move\", true)\n    .attr(\"r\", function(d) { return d.radius; })\n    .attr(\"cx\", function(d) { return d.x; })\n    .attr(\"cy\", function(d) { return d.y; })\n\t\t.style({\n      fill: \"url(#bkgrdimg)\",\n      stroke: \"gray\"\n\t\t});\n  \n  \n     \n\nforce.on(\"tick\", function(e) {\n  var q = d3.geom.quadtree(nodes),\n      i = 0,\n      n = nodes.length;\n  \n  while (++i < n) q.visit(collide(nodes[i]));\n  \n  svg.selectAll(\".move\")\n      .attr(\"cx\", function(d) { return d.x = Math.max(radius, Math.min(width - radius, d.x)); })\n      .attr(\"cy\", function(d) { return d.y = Math.max(radius, Math.min(height - radius, d.y)); });\n  \n});\n\n  \nfunction collide(node) {\n  var r = node.radius,\n      nx1 = node.x - r,\n      nx2 = node.x + r,\n      ny1 = node.y - r,\n      ny2 = node.y + r;\n  return function(quad, x1, y1, x2, y2) {\n    if (quad.point && (quad.point !== node)) {\n      var x = node.x - quad.point.x,\n          y = node.y - quad.point.y,\n          l = Math.sqrt(x * x + y * y),\n          r = node.radius + quad.point.radius;\n      if (l < r) {\n        l = (l - r) / l * .5;\n        node.x -= x *= l;\n        node.y -= y *= l;\n        quad.point.x += x;\n        quad.point.y += y;\n      }\n    }\n    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n  };\n}\n  \n</script>\n", "description": "Bound d3 with repulsion", "created_at": "2016-04-08T21:14:22Z", "updated_at": "2016-04-11T19:06:02Z", "api": ["d3.range", "d3.scale.category10", "d3.select", "d3.layout.force", "d3.geom.quadtree"], "readme": "Circle-bound nodes in [d3.layout.force()](https://github.com/mbostock/d3/wiki/Force-Layout), using a variation of Mike Bostock's rectangular [Bounded Force Layout](http://bl.ocks.org/mbostock/1129492). Here we calculate the maximum and minimum `x` for a given `y` in the circle, and vice versa.\n\nforked from <a href='http://bl.ocks.org/nsonnad/'>nsonnad</a>'s block: <a href='http://bl.ocks.org/nsonnad/5993342'>Circle-bound D3 force layout</a>", "uid": "GitNoise_1768f929ffafb7a2238f7438a866dc37"}, {"code": "<title>Crossfilter with d3.csv</title>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"crossfilter.js\"></script>\n<h3 id=\"loading\">Loading....</h3>\n<div>Number of rows: <span id=\"size\">0</span></div>\n<h3>Top Protein</h3>\n<ol id=\"protein-list\"></ol>\n<h3>Top Calcium</h3>\n<ol id=\"calcium-list\"></ol>\n<h3>Top Sodium</h3>\n<ol id=\"sodium-list\"></ol>\n<script>\nvar url = \"nutrients.csv\";\nvar numerics = [\"protein (g)\", \"calcium (g)\", \"sodium (g)\"];\n\nvar nutrients,\n    protein, calcium, sodium;\n\n// load the data from an external file\nd3.csv(url, function(data) {\n\n  // coerce numbers to floats, empty strings to null\n  data.forEach(function(d) {\n    numerics.forEach(function(dim) {\n      d[dim] = isNumber(d[dim]) ? parseFloat(d[dim]) : null;\n    });\n  });\n\n  // load data into crossfilter\n  nutrients = crossfilter(data);\n\n  // construct filtering dimensions\n  protein = nutrients.dimension(function(d) { return d[\"protein (g)\"]; });\n  calcium = nutrients.dimension(function(d) { return d[\"calcium (g)\"]; });\n  sodium = nutrients.dimension(function(d) { return d[\"sodium (g)\"]; });\n\n  // done loading\n  d3.select(\"#loading\").text(\"Loaded \" + url);\n\n  // display dataset size\n  d3.select(\"#size\").text(nutrients.size());\n\n  // display top K lists\n  renderTopList(protein, 6, \"#protein-list\");\n  renderTopList(calcium, 6, \"#calcium-list\");\n  renderTopList(sodium, 6, \"#sodium-list\");\n});\n\n// http://stackoverflow.com/a/1830844\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction renderTopList(dimension, count, selector) {\n  d3.select(selector).selectAll(\"li\")\n    .data(dimension.top(count))\n    .enter().append(\"li\")\n    .text(function(d) { return d.name });\n}\n</script>\n<style>\nbody {\n  font-size: 13px;\n  font-family: sans-serif;\n}\n</style>", "description": "Crossfilter with d3.csv", "created_at": "2013-03-09T10:18:09Z", "updated_at": "2015-12-14T17:39:04Z", "api": ["d3.csv", "d3.select"], "readme": "Loading data into a [crossfilter](http://square.github.com/crossfilter/) and with [d3.csv](https://github.com/mbostock/d3/wiki/CSV) and displaying a few [Top-K lists](https://github.com/square/crossfilter/wiki/API-Reference#wiki-dimension_top)\n\nData derived from the [USDA National Nutrient Database](http://www.ars.usda.gov/Services/docs.htm?docid=8964).", "uid": "syntagmatic_5123745"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n  </style>\n</head>\n\n<body>\n  \n   <a-scene>\n      <!--<a-cube position=\"0 0 -4\" depth=1 height=0.1 width=100 color=\"#fff\"></a-cube>-->\n      <a-light color=\"#da47da\" position=\"0 0 0\" type=\"ambient\"></a-light>\n      <a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n     <a-entity position=\"0 0 0\" rotation=\"0 0 0\">\n    \t <a-entity camera look-controls wasd-controls></a-entity>\n     </a-entity>\n    \t\n      <!-- Sky -->\n      <a-sky color=\"#c8f7f0\"></a-sky>\n  </a-scene>\n  \n  <script>\n    // fake data\n    var data = [ 5, 10, 15, 20, 25, 30, 35,\n                40, 50, 70, 80, 90, 100,\n               110, 115, 120, 125, 130, 145, 150, 200]\n    \n    var hscale = d3.scale.linear()\n      .domain([0, d3.max(data)])\n      .range([0,5])\n    \n    var scene = d3.select(\"a-scene\");\n    \n    var cubes = scene.selectAll(\"a-cube.bar\")\n      .data(data)\n    cubes.enter().append(\"a-cube\").classed(\"bar\", true)\n    cubes.attr({\n      position: function(d,i) {\n        var radius = 10;\n        var theta = (i/data.length) * (2 * Math.PI)\n        var x = radius * Math.cos(theta);\n        var y = hscale(d)/2;\n        var z = radius * Math.sin(theta);\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var y = -360 * i/data.length;\n        var z = 0;\n        return x + \" \" + y + \" \" + z\n      },\n      height: function(d,i) {\n        return hscale(d)\n      }\n    })\n  </script>\n</body>\n", "description": "D3-copy-Enjalot", "created_at": "2016-04-30T08:18:57Z", "updated_at": "2016-04-30T08:18:57Z", "api": ["d3.scale.linear", "d3.max", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/e366fba2b4626271dcceb3aeed7089e5'>D3-copy-Enjalot</a>\n\nforked from <a href='http://bl.ocks.org/rvross/'>rvross</a>'s block: <a href='http://bl.ocks.org/rvross/ac78fbba1282c7b228253b97b0090e6b'>D3-copy-Enjalot</a>", "uid": "rvross_b3a10c9d95945216a0a889249ec421b0"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.point {\n  fill: #2f225d;\n  stroke: #afa2dc;\n}\n\n.selected {\n  fill: #afa2dc;\n  stroke: #2f225d;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\np {\n  font: 12px sans-serif;\n  margin: 0 0 2px 0;\n  padding: 0;\n}\n\n.clear-button {\n  font: 14px sans-serif;\n  cursor: pointer;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\nd3.helper = {};\n\nd3.helper.tooltip = function(){\n    var tooltipDiv;\n    var bodyNode = d3.select('body').node();\n\n    function tooltip(selection){\n\n        selection.on('mouseover.tooltip', function(pD, pI){\n            // Clean up lost tooltips\n            d3.select('body').selectAll('div.tooltip').remove();\n            // Append tooltip\n            tooltipDiv = d3.select('body')\n                           .append('div')\n                           .attr('class', 'tooltip')\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px',\n                'background-color': '#d8d5e4',\n                width: '65px',\n                height: '30px',\n                padding: '5px',\n                position: 'absolute',\n                'z-index': 1001,\n                'box-shadow': '0 1px 2px 0 #656565'\n            });\n\n            var first_line = '<p>X-Value: ' + pD.index + '</p>'\n            var second_line = '<p>Y-Value: ' + pD.value + '</p>'\n\n            tooltipDiv.html(first_line + second_line)\n        })\n        .on('mousemove.tooltip', function(pD, pI){\n            // Move tooltip\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px'\n            });\n        })\n        .on('mouseout.tooltip', function(pD, pI){\n            // Remove tooltip\n            tooltipDiv.remove();\n        });\n\n    }\n\n    tooltip.attr = function(_x){\n        if (!arguments.length) return attrs;\n        attrs = _x;\n        return this;\n    };\n\n    tooltip.style = function(_x){\n        if (!arguments.length) return styles;\n        styles = _x;\n        return this;\n    };\n\n    return tooltip;\n};\n\nvar data = [];\nvar values = [];\nfor (var i = 2; i <= 50; i++) {\n    var val = Math.floor(Math.random() * (50 - 5 + 1) + 5);\n    data.push({index: i, value: val});\n    values.push(val);\n}\n\nvar margin = {top: 20, right: 20, bottom: 60, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([0, 50]);\n\nvar y = d3.scale.linear()\n    .range([height, 0])\n    .domain([0, d3.max(values) + 5]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(11);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\npoints = svg.selectAll(\".point\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"class\", \"point\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"r\", function(d){return Math.floor(Math.random() * (20 - 5 + 1) + 5);})\n    .attr(\"cx\", function(d) { return x(d.index); })\n    .attr(\"cy\", function(d) { return y(d.value); })\n    .call(d3.helper.tooltip());\n\n</script>", "description": "D3 Brush and Tooltip II", "created_at": "2013-11-24T17:47:06Z", "updated_at": "2015-12-29T06:38:58Z", "api": ["d3.select", "d3.mouse", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.helper.tooltip"], "readme": "Example for [Cooperative Brushing and Tooltips in D3](http://wrobstory.github.io/2013/11/D3-brush-and-tooltip.html). \n\nScatter chart with only tooltips, no brush layer. ", "uid": "wrobstory_7630011"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Automatic Hexbinning</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n      function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    \n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Base\")\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"all_sites.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"canvas\")\n    .markerColor(\"black\")\n    .markerSize(.5)\n    .x(\"xcoord\")\n    .y(\"ycoord\")\n    .on(\"load\", makeHexbins)\n    \n    map.addCartoLayer(tileLayer).addCartoLayer(csvLayer);\n    map.centerOn([100,30],\"latlong\").setScale(3);\n    \n    function makeHexbins() {\n      var colorScale = d3.scale.linear().domain([1,5,30]).range([\"green\",\"yellow\",\"red\"])\n      hexbinLayerLarge = map.createHexbinLayer(csvLayer, 2);\n      hexbinLayerSmall = map.createHexbinLayer(csvLayer, .75);\n      hexbinLayerLarge\n      .label(\"2 Degree Hexbin\")\n      .visibility(false)\n      .on(\"load\", function() {hexbinLayerLarge.g().selectAll(\"path\").style(\"opacity\", .5).style(\"fill\", function(d) {return colorScale(d.properties.node.length)})})\n\n      hexbinLayerSmall\n      .label(\".75 Degree Hexbin\")\n      .on(\"load\", function() {hexbinLayerSmall.g().selectAll(\"path\").style(\"opacity\", .5).style(\"fill\", function(d) {return colorScale(d.properties.node.length)})})\n      \n      map.addCartoLayer(hexbinLayerSmall);\n      map.addCartoLayer(hexbinLayerLarge);\n      \n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"hexbin.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Automatic Hexbinning - d3.carto", "created_at": "2014-09-15T19:00:09Z", "updated_at": "2015-08-29T14:06:30Z", "api": ["d3.values", "d3.range", "d3.carto.map", "d3.select", "d3.carto.layer", "d3.carto.layer.csv", "d3.scale.linear"], "readme": "Automatic hexbinning in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** allows for the creation of granular or high resolution heatmaps.\n\nThe map.createHexbinLayer function takes two variable: a point d3.carto.layer (either CSV or XY Array) and a resolution (in degrees). It creates a feature carto layer that automatically bins the points in the source layer and which you can then add to the map easily.\n\nIn this example, I generate two different hexbin resolutions: One at 2-degree and one at .75 degree, so that you can see how simple it is. The original point objects are found in the properties.node attribute of each hex feature and can be used to count the number or average the population, etc.\n\nThis requires a slightly modified [hexbin.js](https://github.com/emeeks/d3-plugins/blob/master/hexbin/hexbin.js) (also in this gist) to work.", "uid": "emeeks_790788687df9e560e288"}, {"code": "<!DOCTYPE html>\n<head>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  text-align: center;\n}\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n</head>\n<body>\n<script>\n\n// Define the data as a two-dimensional array of numbers. If you had other\n// data to associate with each number, replace each number with an object, e.g.,\n// `{key: \"value\"}`.\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  var dataset1 = data\n\nconsole.log(dataset1)\n\n\n\nvar dataset2 = [\n[4.39,1.64],\n[0.4894,0.0413],\n[32.661,11.343],\n[24.61,100.0875],\n[1.969142857,0.505642857],\n[6.186428571,3.160357143],\n[0.604761905,3.774738095],\n[6.0212,2.4136],\n[1.2275,0.2935],\n[1.1012,1.0771],\n[5.605666667,19.395],\n];\n\nconsole.log(dataset2)\n\n\n\n// Define the margin, radius, and color scale. The color scale will be\n// assigned by index, but if you define your data using objects, you could pass\n// in a named field from the data object instead, such as `d.name`. Colors\n// are assigned lazily, so if you want deterministic behavior, define a domain\n// for the color scale.\nvar m = 10,\n    r = 100,\n    z = d3.scale.ordinal()\n                    .domain([function(d) { return d.right;}, function(d) { return d.wrong;}])\n\t\t\t\t\t.range([\"e7969c\",\"9ecae1\"])\n\n// Insert an svg element (with margin) for each row in our dataset. A child g\n// element translates the origin to the pie center.\nvar svg = d3.select(\"body\").selectAll(\"svg\")\n    .data(data)\n  .enter().append(\"svg\")\n    .attr(\"width\", (r + m) * 2)\n    .attr(\"height\", (r + m) * 2)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + (r + m) + \",\" + (r + m) + \")\");//translate from corner of svg\n\n// The data for each svg element is a row of numbers (an array). We pass that to\n// d3.layout.pie to compute the angles for each arc. These start and end angles\n// are passed to d3.svg.arc to draw arcs! Note that the arc radius is specified\n// on the arc, not the layout.\nsvg.selectAll(\"path\")\n    .data(d3.layout.pie())\n  .enter().append(\"path\")\n    .attr(\"d\", d3.svg.arc()\n        .innerRadius(r / 2)\n        .outerRadius(r))\n    .style(\"fill\", function(d, i) { return z(i); });\n\n});\n\n\nfunction type(d) {\n  d.right = +d.count_1;\n  d.wrong= +d.count_2;\n  return d;\n}\n\n</script>\n</body>\n</html>", "description": "", "created_at": "2016-02-13T23:00:14Z", "updated_at": "2016-02-13T23:00:14Z", "api": ["d3.csv", "d3.scale.ordinal", "d3.select", "d3.layout.pie", "d3.svg.arc"], "readme": "", "uid": "iblind_5a51e5ac4ee2cf024e34"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"pathlayout.js\"></script>\n<script>\nvar width = 600,\n    height = 500;\n\nvar projection = d3.geo.mercator()\n    .scale(5*(width + 1) / 2 / Math.PI)\n    .translate([width / 2, height / 2])\n    .rotate([-125, -15, 0])\n    .precision(.1);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\n\nd3.json(\"track.json\", function(error, track) {\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var trail = d3.layout.trail()\n        .positioner(function(d) {return [d.lon,d.lat];})\n        .coordType('coordinates');\n\n    var trail_layout = trail.data(track).layout();\n\n    paths = svg.selectAll(\"line\").data(trail_layout);\n\n    paths.enter()\n    .append('path')\n    .style(\"stroke-width\",3)\n    .style(\"stroke\",\"black\") \n    .attr(\"d\", path);\n});\n</script>", "description": "D3 Trail Layout using coordinates", "created_at": "2014-07-05T10:20:00Z", "updated_at": "2015-08-29T14:03:31Z", "api": ["d3.geo.mercator", "d3.geo.path", "d3.json", "d3.select", "d3.layout.trail"], "readme": "This an example using the [D3 trail layout](https://github.com/bmschmidt/D3-trail) made by [Benjamin Schmidt](https://github.com/bmschmidt).\nThe example shows how to use the *coordinates* as the *coordType* value.\nThe track.json data represents the Hayian typhoon track, as it's explained in [this blog entry](http://geoexamples.blogspot.com/2013/12/d3-map-styling-tutorial-i-preparing-data.html).\n\nThere is a blog entry explaining this example at [GeoExamples](http://geoexamples.blogspot.com/2014/07/using-d3-trail-layout-to-draw-hayian.html)", "uid": "rveciana_04ce0887026bd3e6185c"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 | reusable slopegraph</title> \n  <meta name=\"author\" content=\"Sundar Singh | eesur.com\">\n\n  <link rel=\"stylesheet\" href=\"main.css\">\n  <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n</head>\n<body>\n\n    <header>\n        <h1>Reusable slopegraph</h1> \n        <p>Slopegraph example showing number of personal computers installed in a country per household.</p>\n    </header>\n\n    <section id=\"slopegraph\"></section>\n\n    <footer>\n      <button id=\"reset\">reset</button>\n      <nav id='nav-alt'></nav>\n    </footer>\n\n    <!-- namespace -->\n    <script> d3.eesur = {}; </script>\n    <!-- reusable slopegraph -->\n    <script src=\"d3_code_slopegraph.js\"></script>\n    <script>\n\n  //  render slopegraph chart\n\n    (function() {\n\n    // create chart\n    var slopegraph = d3.eesur.slopegraph()\n        // .margin({top: 20, bottom: 20, left: 100, right:100})\n        .strokeColour('#130C0E')\n        .keyName('country')\n            .keyValueStart('2000')\n            .keyValueEnd('2012')\n            .h(500)\n            // .format(d3.format('04d'))\n            .on('_hover', function (d, i) {\n                highlightLine(d, i);\n            });\n\n    \n    d3.json('data.json', function(error, data) {\n\n        if (error) throw error;\n\n        // render chart\n        d3.select('#slopegraph')\n            .datum(data)\n            .call(slopegraph);\n\n        // alternative navigation     \n        navAlt(data);\n    });\n\n    // reset button listener\n    d3.select('#reset')\n        .on('click', function () {\n            d3.selectAll('.elm').transition().style('opacity', 1);\n            d3.selectAll('.s-line').style('stroke', '#130C0E');\n        });\n\n    // navigation\n    function navAlt(data) {\n        d3.select('#nav-alt').append('ul')\n            .selectAll('li')\n            .data(data)\n            .enter().append('li')\n            .on('click', function (d, i) {\n                highlightLine(d, i);\n            })\n            .text(function (d) { return d['country']; });\n    }\n\n    // highlight line and fade other lines\n    function highlightLine(d, i) {\n        d3.selectAll('.elm').transition().style('opacity', 0.2);\n        d3.selectAll('.sel-' + i).transition().style('opacity', 1);\n        d3.selectAll('.s-line').style('stroke', '#FDBB30');\n        d3.selectAll('.s-line.sel-' + i).style('stroke', '#130C0E');\n    }\n\n    // just for blocks viewer size\n    d3.select(self.frameElement).style('height', '800px');\n  \n  }());\n\n    </script>\n</body>\n</html>\n\n", "description": "d3 | Reusable slopegraph", "created_at": "2015-12-12T16:37:47Z", "updated_at": "2016-01-25T10:41:50Z", "api": ["d3.format", "d3.dispatch", "d3.max", "d3.scale.linear", "d3.select", "d3.rebind", "d3.eesur.slopegraph", "d3.json", "d3.selectAll"], "readme": "Reusable slopegraph inspired/adapted from [Ben Van Dyke's example](http://vandykeindustries.com/slopegraphs-d3.html) into a reusable chart.\n\nThis slopegraph example shows the number of personal computers installed in a country per household. This includes desktop PCs and laptops, but excludes smartphones and terminals connected to mainframe computers. All figures are calculated using total number of Personal Computers and the Total Number of Households.\n\n[data source](http://www.nakono.com/tekcarta/databank/personal-computers-per-household/)\n", "uid": "eesur_a4679ee453aa9357977c"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the scatterplot\n    svg.selectAll(\"dot\")\t\n        .data(data)\t\t\t\t\t\t\t\t\t\t\n    .enter().append(\"circle\")\t\t\t\t\t\t\t\t\n        .attr(\"r\", 3.5)\t\t\n        .style(\"fill\", function(d) {\n            if (d.close <= 400) {return \"red\"}\n            else \t{ return \"black\" }\n        ;})\n        .attr(\"cx\", function(d) { return x(d.date); })\t\t \n        .attr(\"cy\", function(d) { return y(d.close); });\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>\n", "description": "if selection in d3.js", "created_at": "2014-06-22T18:45:24Z", "updated_at": "2015-08-29T14:02:53Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple scatterplot](http://bl.ocks.org/d3noob/38744a17f9c0141bcd04) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at demonstrating a the use of an `if` statement to select elements in d3.js. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_464c92429ac05c6a19a1"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<head>\n\t<style>\n\n\t.axis {\n\t  font: 10px sans-serif;\n\t}\n\n\t.axis path,\n\t.axis line {\n\t  fill: none;\n\t  stroke: #000;\n\t  shape-rendering: crispEdges;\n\t}\n\n\t</style>\n</head>\n\n<body>\n\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar\tparseDate = d3.time.format(\"%Y-%m\").parse;\n\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], .05);\n\nvar y = d3.scale.linear().range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tickFormat(d3.time.format(\"%Y-%m\"));\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"bar-data.csv\", function(error, data) {\n\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.value = +d.value;\n    });\n\t\n  x.domain(data.map(function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value ($)\");\n\n  svg.selectAll(\"bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .style(\"fill\", \"steelblue\")\n      .attr(\"x\", function(d) { return x(d.date); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); });\n\n});\n\n</script>\n\n</body>\n", "description": "Simple d3.js bar chart", "created_at": "2014-02-12T09:11:14Z", "updated_at": "2016-05-17T07:29:18Z", "api": ["d3.time.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.max"], "readme": "This is a d3.js bar chart as used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is derived from the Mike Bostock's [Bar Chart example](http://bl.ocks.org/mbostock/3885304) but it is a slightly cut down version.", "uid": "d3noob_8952219"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\ncircle {\n  stroke: #e67e22;\n  fill-opacity: .25;\n  fill: #f1c40f;\n  stroke-width: 1px;\n}\n\n.leaf circle {\n  fill: #3498db;\n  stroke: #34495e;\n  fill-opacity: 1;\n}\n\ntext {\n  font: 12px sans-serif;\n}\n\n@media only screen and (min-device-width: 320px) and (max-device-width: 568px) {\n  #visual {\n    -webkit-user-select: none;\n    font-size: 1.2em;\n  }\n}\n\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {\n  #visual { \n\t-webkit-user-select: none; \n  }\n}\n\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar initialdiameter = diameter = 960,\n    noob = 2,\n    format = d3.format(\",d\");\n\n// adjust the box immediately for mobile devices\nif (window.innerWidth <= 480) {\n    diameter = window.innerWidth;\n}\n    \n// set viewBox and aspect ratio to enable a resize of the visual dimensions \nvar viewBoxDimensions = \"0 0 \" + diameter + \" \" + diameter,\n    aspect = 1;\n\nvar pack = d3.layout.pack()\n    .size([diameter - 40, diameter - 40])\n    .value(function(d) { return d.size; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"id\", \"visualsvg\")\n    .attr(\"viewBox\", viewBoxDimensions)\n    .attr(\"preserveAspectRatio\", \"xMinYMid\")    // add viewBox and preserveAspectRatio\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(2,2)\");\n\nd3.json(\"d3authorsbydomain.json\", function(error, root) {\n  var node = svg.datum(root).selectAll(\".node\")\n      .data(pack.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return d.children ? \"node\" : \"leaf node\"; })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"title\")\n      .text(function(d) { return d.name + (d.children ? \"\" : \": \" + format(d.size)); });\n\n  node.append(\"circle\")\n      .attr(\"r\", function(d) { return d.r; });\n\n  node.filter(function(d) { return !d.children && d.size > noob; }).append(\"text\")\n      .attr(\"dy\", \".3em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.name.substring(0, d.r / 3); });\n});\n\nwindow.onresize = function() {\n    var targetWidth = (window.innerWidth < initialdiameter)? window.innerWidth : initialdiameter;\n            \n    var svg = d3.select(\"#visualsvg\")\n        .attr(\"width\", targetWidth)\n        .attr(\"height\", targetWidth / aspect);\n}\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n</script>\n</body>\n</html>", "description": "D3 Authors by Domain", "created_at": "2014-01-29T23:17:28Z", "updated_at": "2015-08-29T13:55:48Z", "api": ["d3.format", "d3.layout.pack", "d3.select", "d3.json"], "readme": "This infographic was prepared for the d3.selectAll('\u00admeetup').data(\u00ad[2014]).enter() meet of the Bay Area d3 User Group, held Jan. 28, 2014. It uses Mike Bostock's [Circle Packing](http://bl.ocks.org/mbostock/4063530) enclosure diagram to show the long-tail distribution of authors and titles in the D3 ecosystem.  Source data originates from the [D3 Gallery](http://christopheviau.com/d3list/gallery.html) spreadsheet.  \n\nDuring data cleanup, aggregated domain values were assigned to each record in the data from the url.  The bl.ocks.org domain represents 880 titles, and github holds 169.  However, there are 24 domains with more than 5 titles and another 522 with fewer than 5.  While bl.ocks and github are the foundation for the developer community, the other domains hold finished titles that make points and change opinions.  Presentation of author titles by domain allows us to see this dynamic at a glance.\n\nEach containing circle (yellow) represents a web domain where authors display their finished D3 visualizations. Each leaf circle (blue) within a domain represents the number of works an author presents on that domain. Mouse over a circle to view the number in a tooltip.\n\nThe Jan. 24, 2014 spreadsheet snapshot held 1,986 titles, but listed authors for only 1,464 (74%) of the total.   Null values were replaced with author tokens extracted from the url when possible. The remainder were associated with the single appearance of a unique domain, and were assigned to the list with a unique name with the suffix 'other'. This represents the many people with one published D3 image. The same approach was taken for 60 bl.ocks.org titles that had a gist number, but no name. These should actually be assigned to someone on the list, but there wasn't enough time to finish that work. The information was kept to keep the domains sized appropriately.\n\nThis version of the infographic adds responsive page design to the circle packing gist, which resizes the image as the window size changes. Click on the [raw data](http://bl.ocks.org/StewartNoyce/raw/8699346/) to see this in action.  This allows it to appear gracefully in a phone format (particularly the iPhone). Additionally, there is a noob factor that suppresses the label for any circle representing a person with fewer published images than the specified value. ", "uid": "StewartNoyce_8699346"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Managing Layers of Different Types</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    fill-opacity: .25;\n    fill: #4682B4;\n    stroke-opacity: 1;\n    stroke: black;\n    stroke-width: 2px;\n  }\n\n  .country-gray {\n    opacity: .25;\n    fill: lightgray;\n    stroke: lightgray;\n    stroke-width: 1;\n  }\n\n  .country-red {\n    fill-opacity: .25;\n    fill: darkred;\n    stroke: black;\n    stroke-width: 1;\n  }\n  \n  .capital {\n    fill: white;\n    stroke: black;\n    stroke-width: 2px;\n  }\n</style>\n<script>\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    terrainLayer = d3.carto.layer.tile();\n    \n    terrainLayer\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Terrain\");\n\n    countryLayer = d3.carto.layer.topojson();\n    \n    countryLayer.path(\"world.topojson\")\n    .label(\"Countries\")\n    .renderMode(\"canvas\")\n    .specificFeature(\"world\")\n    .cssClass(\"country-gray\")\n    .on(\"load\", showHighGDP)\n    .visibility(false);\n    \n    capitalLayer = d3.carto.layer.csv();\n    capitalLayer\n    .path(\"worldcapitals.csv\")\n    .label(\"Capitals\")\n    .cssClass(\"capital\")\n    .renderMode(\"svg\")\n    .markerSize(3)\n    .x(\"x\")\n    .y(\"y\")\n    .clickableFeatures(true)\n    .on(\"load\", loadXYArray);\n\n    map.addCartoLayer(terrainLayer)\n    map.addCartoLayer(countryLayer)\n    .addCartoLayer(capitalLayer);\n    map.setScale(2);\n    \n    function loadXYArray() {\n    d3.csv(\"worldcapitals.csv\", highPopCapitals);\n    \n    function highPopCapitals(data) {\n      highPop = data.filter(function(d) {return d.population > 3000000});\n      \n      highPopCapitals = d3.carto.layer.xyArray();\n      \n      highPopCapitals\n      .features(highPop)\n      .label(\"High Population Capitals\")\n      .cssClass(\"capital\")\n      .renderMode(\"svg\")\n      .markerSize(10)\n      .x(\"x\")\n      .y(\"y\")\n      .clickableFeatures(true);\n      \n      map.addCartoLayer(highPopCapitals);\n    }\n    }\n    \n    function showHighGDP() {\n      highGDPCountries = countryLayer.features().filter(function(d) {return d.properties.gdp > 1000});\n      \n      highGDPLayer = d3.carto.layer.featureArray();\n      \n      highGDPLayer\n      .features(highGDPCountries)\n    .label(\"High GDP\")\n    .renderMode(\"svg\")\n    .cssClass(\"country-red\")\n    .clickableFeatures(true);\n    \n    map.addCartoLayer(highGDPLayer)\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Managing Layers - d3.carto", "created_at": "2014-09-20T20:01:24Z", "updated_at": "2015-08-29T14:06:44Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.csv", "d3.carto.layer.xyArray", "d3.carto.layer.featureArray"], "readme": "A map example created with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** that loads feature, tile and point layers using the various methods available in d3.carto.", "uid": "emeeks_e1e661f4696af856e017"}, {"code": "<!DOCTYPE html>\n<body>\n <script src=\"https://code.jquery.com/jquery-2.1.4.min.js\"></script> //JQuery\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\" charset=\"utf-8\"></script> //D3 \n\n  <script>\n    \nvar width = 550;\nvar height = 350;\nradius = Math.min(width, height) / 2;\n    \nvar color = d3.scale.category20b();  //builtin range of colors\n\nvar svg = d3.select('#pie_chart').append('svg').attr('width', width).attr('height', \t\t\t\theight).append('g').attr('transform', 'translate(' + (width / 2) +',' + (height / 2) \t\t\t\t+ ')');\n \nvar arc = d3.svg.arc().outerRadius(radius);\n    \nvar pie = d3.layout.pie().value(function(d,i) { return  pie_data[i]; }).sort(null);\n    var path = svg.selectAll('path')\n.data(pie(data))\n.enter()\n.append('path')\n.attr('d', arc)\n.attr('fill', \n      \nfunction(d, i) {\nreturn data[i].color;\n});\n    \n    d3.json(\"genes.json\", type, function(error, data) {\n    if (error) throw error});\n  </script>\n</body>", "description": "final exam question 2 attempt 2", "created_at": "2016-05-05T14:08:24Z", "updated_at": "2016-05-05T14:08:24Z", "api": ["d3.scale.category20b", "d3.select", "d3.svg.arc", "d3.layout.pie", "d3.json"], "readme": "Without modifying the information in genes.json, use D3 to construct a pie chart that shows the relative fraction of genes in the forward and reverse directions. Your code must dynamically generate the pie chart from the data. In other words, if I modify the genes.json data file, the pie chart must update automatically. (15 points)\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/53fe9d373ca3b3e20632f69c5169a59d'>final exam question 2 attempt 2</a>", "uid": "cheneymb_1938bab155ab57919bd792ad706dc6dd"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style type=\"text/css\">\n\nsvg {\n  font-family: \"Helvetica Neue\", Helvetica;\n}\n\n.line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2px;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar m = [20, 20, 30, 20],\n    w = 960 - m[1] - m[3],\n    h = 500 - m[0] - m[2];\n\nvar x,\n    y,\n    duration = 1500,\n    delay = 500;\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", w + m[1] + m[3])\n    .attr(\"height\", h + m[0] + m[2])\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\nvar stocks,\n    symbols;\n\n// A line generator, for the dark stroke.\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); });\n\n// A line generator, for the dark stroke.\nvar axis = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(h);\n\n// A area generator, for the dark stroke.\nvar area = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y1(function(d) { return y(d.price); });\n\nd3.csv(\"stocks.csv\", function(data) {\n  var parse = d3.time.format(\"%b %Y\").parse;\n\n  // Nest stock values by symbol.\n  symbols = d3.nest()\n      .key(function(d) { return d.symbol; })\n      .entries(stocks = data);\n\n  // Parse dates and numbers. We assume values are sorted by date.\n  // Also compute the maximum price per symbol, needed for the y-domain.\n  symbols.forEach(function(s) {\n    s.values.forEach(function(d) { d.date = parse(d.date); d.price = +d.price; });\n    s.maxPrice = d3.max(s.values, function(d) { return d.price; });\n    s.sumPrice = d3.sum(s.values, function(d) { return d.price; });\n  });\n\n  // Sort by maximum price, descending.\n  symbols.sort(function(a, b) { return b.maxPrice - a.maxPrice; });\n\n  var g = svg.selectAll(\"g\")\n      .data(symbols)\n    .enter().append(\"g\")\n      .attr(\"class\", \"symbol\");\n\n  setTimeout(lines, duration);\n});\n\nfunction lines() {\n  x = d3.time.scale().range([0, w - 60]);\n  y = d3.scale.linear().range([h / 4 - 20, 0]);\n\n  // Compute the minimum and maximum date across symbols.\n  x.domain([\n    d3.min(symbols, function(d) { return d.values[0].date; }),\n    d3.max(symbols, function(d) { return d.values[d.values.length - 1].date; })\n  ]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + (i * h / 4 + 10) + \")\"; });\n\n  g.each(function(d) {\n    var e = d3.select(this);\n\n    e.append(\"path\")\n        .attr(\"class\", \"line\");\n\n    e.append(\"circle\")\n        .attr(\"r\", 5)\n        .style(\"fill\", function(d) { return color(d.key); })\n        .style(\"stroke\", \"#000\")\n        .style(\"stroke-width\", \"2px\");\n\n    e.append(\"text\")\n        .attr(\"x\", 12)\n        .attr(\"dy\", \".31em\")\n        .text(d.key);\n  });\n\n  function draw(k) {\n    g.each(function(d) {\n      var e = d3.select(this);\n      y.domain([0, d.maxPrice]);\n\n      e.select(\"path\")\n          .attr(\"d\", function(d) { return line(d.values.slice(0, k + 1)); });\n\n      e.selectAll(\"circle, text\")\n          .data(function(d) { return [d.values[k], d.values[k]]; })\n          .attr(\"transform\", function(d) { return \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\"; });\n    });\n  }\n\n  var k = 1, n = symbols[0].values.length;\n  d3.timer(function() {\n    draw(k);\n    if ((k += 2) >= n - 1) {\n      draw(n - 1);\n      setTimeout(horizons, 500);\n      return true;\n    }\n  });\n}\n\nfunction horizons() {\n  svg.insert(\"defs\", \".symbol\")\n    .append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", w)\n      .attr(\"height\", h / 4 - 20);\n\n  var color = d3.scale.ordinal()\n      .range([\"#c6dbef\", \"#9ecae1\", \"#6baed6\"]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"clip-path\", \"url(#clip)\");\n\n  area\n      .y0(h / 4 - 20);\n\n  g.select(\"circle\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (-h / 4) + \")\"; })\n      .remove();\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (h / 4 - 20) + \")\"; })\n      .attr(\"dy\", \"0em\");\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).selectAll(\".area\")\n        .data(d3.range(3))\n      .enter().insert(\"path\", \".line\")\n        .attr(\"class\", \"area\")\n        .attr(\"transform\", function(d) { return \"translate(0,\" + (d * (h / 4 - 20)) + \")\"; })\n        .attr(\"d\", area(d.values))\n        .style(\"fill\", function(d, i) { return color(i); })\n        .style(\"fill-opacity\", 1e-6);\n\n    y.domain([0, d.maxPrice / 3]);\n\n    d3.select(this).selectAll(\".line\").transition()\n        .duration(duration)\n        .attr(\"d\", line(d.values))\n        .style(\"stroke-opacity\", 1e-6);\n\n    d3.select(this).selectAll(\".area\").transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1)\n        .attr(\"d\", area(d.values))\n        .each(\"end\", function() { d3.select(this).style(\"fill-opacity\", null); });\n  });\n\n  setTimeout(areas, duration + delay);\n}\n\nfunction areas() {\n  var g = svg.selectAll(\".symbol\");\n\n  axis\n      .y(h / 4 - 21);\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return axis(d.values); });\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).select(\".line\").transition()\n        .duration(duration)\n        .style(\"stroke-opacity\", 1)\n        .each(\"end\", function() { d3.select(this).style(\"stroke-opacity\", null); });\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1e-6)\n        .attr(\"d\", area(d.values))\n        .remove();\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return !i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill\", color(d.key))\n        .attr(\"d\", area(d.values));\n  });\n\n  svg.select(\"defs\").transition()\n      .duration(duration)\n      .remove();\n\n  g.transition()\n      .duration(duration)\n      .each(\"end\", function() { d3.select(this).attr(\"clip-path\", null); });\n\n  setTimeout(stackedArea, duration + delay);\n}\n\nfunction stackedArea() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  area\n      .y0(function(d) { return y(d.price0); })\n      .y1(function(d) { return y(d.price0 + d.price); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration)\n      .attr(\"transform\", \"translate(0,0)\")\n      .each(\"end\", function() { d3.select(this).attr(\"transform\", null); });\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", function(d, i) { return i < 3 ? 1e-6 : 1; })\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(streamgraph, duration + delay);\n}\n\nfunction streamgraph() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\")\n      .offset(\"wiggle\");\n\n  stack(symbols);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration);\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(overlappingArea, duration + delay);\n}\n\nfunction overlappingArea() {\n  var g = svg.selectAll(\".symbol\");\n\n  line\n      .y(function(d) { return y(d.price0 + d.price); });\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d.maxPrice; }))])\n      .range([h, 0]);\n\n  area\n      .y0(h)\n      .y1(function(d) { return y(d.price); });\n\n  line\n      .y(function(d) { return y(d.price); });\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", .5)\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price) + \")\"; });\n\n  svg.append(\"line\")\n      .attr(\"class\", \"line\")\n      .attr(\"x1\", 0)\n      .attr(\"x2\", w - 60)\n      .attr(\"y1\", h)\n      .attr(\"y2\", h)\n      .style(\"stroke-opacity\", 1e-6)\n    .transition()\n      .duration(duration)\n      .style(\"stroke-opacity\", 1);\n\n  setTimeout(groupedBar, duration + delay);\n}\n\nfunction groupedBar() {\n  x = d3.scale.ordinal()\n      .domain(symbols[0].values.map(function(d) { return d.date; }))\n      .rangeBands([0, w - 60], .1);\n\n  var x1 = d3.scale.ordinal()\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeBands([0, x.rangeBand()]);\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .remove();\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", 1e-6)\n      .remove();\n\n  g.each(function(p, j) {\n    d3.select(this).selectAll(\"rect\")\n        .data(function(d) { return d.values; })\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.date) + x1(p.key); })\n        .attr(\"y\", function(d) { return y(d.price); })\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"height\", function(d) { return h - y(d.price); })\n        .style(\"fill\", color(p.key))\n        .style(\"fill-opacity\", 1e-6)\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1);\n  });\n\n  setTimeout(stackedBar, duration + delay);\n}\n\nfunction stackedBar() {\n  x.rangeRoundBands([0, w - 60], .1);\n\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  var g = svg.selectAll(\".symbol\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.select(\"text\")\n      .delay(symbols[0].values.length * 10)\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price); })\n      .attr(\"height\", function(d) { return h - y(d.price); })\n      .each(\"end\", function() {\n        d3.select(this)\n            .style(\"stroke\", \"#fff\")\n            .style(\"stroke-opacity\", 1e-6)\n          .transition()\n            .duration(duration / 2)\n            .attr(\"x\", function(d) { return x(d.date); })\n            .attr(\"width\", x.rangeBand())\n            .style(\"stroke-opacity\", 1);\n      });\n\n  setTimeout(transposeBar, duration + symbols[0].values.length * 10 + delay);\n}\n\nfunction transposeBar() {\n  x\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeRoundBands([0, w], .2);\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d3.sum(d.values.map(function(d) { return d.price; })); }))]);\n\n  var stack = d3.layout.stack()\n      .x(function(d, i) { return i; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; });\n\n  stack(d3.zip.apply(null, symbols.map(function(d) { return d.values; }))); // transpose!\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price) - 1; })\n      .attr(\"height\", function(d) { return h - y(d.price) + 1; })\n      .attr(\"x\", function(d) { return x(d.symbol); })\n      .attr(\"width\", x.rangeBand())\n      .style(\"stroke-opacity\", 1e-6);\n\n  t.select(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"transform\", function(d) { return \"translate(\" + (x(d.key) + x.rangeBand() / 2) + \",\" + h + \")\"; })\n      .attr(\"dy\", \"1.31em\")\n      .each(\"end\", function() { d3.select(this).attr(\"x\", null).attr(\"text-anchor\", \"middle\"); });\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"x2\", w);\n\n  setTimeout(donut,  duration / 2 + symbols[0].values.length * 10 + delay);\n}\n\nfunction donut() {\n  var g = svg.selectAll(\".symbol\");\n\n  g.selectAll(\"rect\").remove();\n\n  var pie = d3.layout.pie()\n      .value(function(d) { return d.sumPrice; });\n\n  var arc = d3.svg.arc();\n\n  g.append(\"path\")\n      .style(\"fill\", function(d) { return color(d.key); })\n      .data(function() { return pie(symbols); })\n    .transition()\n      .duration(duration)\n      .tween(\"arc\", arcTween);\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"dy\", \".31em\");\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"y1\", 2 * h)\n      .attr(\"y2\", 2 * h)\n      .remove();\n\n  function arcTween(d) {\n    var path = d3.select(this),\n        text = d3.select(this.parentNode.appendChild(this.previousSibling)),\n        x0 = x(d.data.key),\n        y0 = h - y(d.data.sumPrice);\n\n    return function(t) {\n      var r = h / 2 / Math.min(1, t + 1e-3),\n          a = Math.cos(t * Math.PI / 2),\n          xx = (-r + (a) * (x0 + x.rangeBand()) + (1 - a) * (w + h) / 2),\n          yy = ((a) * h + (1 - a) * h / 2),\n          f = {\n            innerRadius: r - x.rangeBand() / (2 - a),\n            outerRadius: r,\n            startAngle: a * (Math.PI / 2 - y0 / r) + (1 - a) * d.startAngle,\n            endAngle: a * (Math.PI / 2) + (1 - a) * d.endAngle\n          };\n\n      path.attr(\"transform\", \"translate(\" + xx + \",\" + yy + \")\");\n      path.attr(\"d\", arc(f));\n      text.attr(\"transform\", \"translate(\" + arc.centroid(f) + \")translate(\" + xx + \",\" + yy + \")rotate(\" + ((f.startAngle + f.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n    };\n  }\n\n  setTimeout(donutExplode, duration + delay);\n}\n\nfunction donutExplode() {\n  var r0a = h / 2 - x.rangeBand() / 2,\n      r1a = h / 2,\n      r0b = 2 * h - x.rangeBand() / 2,\n      r1b = 2 * h,\n      arc = d3.svg.arc();\n\n  svg.selectAll(\".symbol path\")\n      .each(transitionExplode);\n\n  function transitionExplode(d, i) {\n    d.innerRadius = r0a;\n    d.outerRadius = r1a;\n    d3.select(this).transition()\n        .duration(duration / 2)\n        .tween(\"arc\", tweenArc({\n          innerRadius: r0b,\n          outerRadius: r1b\n        }));\n  }\n\n  function tweenArc(b) {\n    return function(a) {\n      var path = d3.select(this),\n          text = d3.select(this.nextSibling),\n          i = d3.interpolate(a, b);\n      for (var key in b) a[key] = b[key]; // update data\n      return function(t) {\n        var a = i(t);\n        path.attr(\"d\", arc(a));\n        text.attr(\"transform\", \"translate(\" + arc.centroid(a) + \")translate(\" + w / 2 + \",\" + h / 2 +\")rotate(\" + ((a.startAngle + a.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n      };\n    }\n  }\n\n  setTimeout(function() {\n    svg.selectAll(\"*\").remove();\n    svg.selectAll(\"g\").data(symbols).enter().append(\"g\").attr(\"class\", \"symbol\");\n    lines();\n  }, duration);\n}\n\n</script>\n", "description": "D3 Show Reel", "created_at": "2016-05-15T14:47:56Z", "updated_at": "2016-05-15T14:47:56Z", "api": ["d3.scale.category10", "d3.select", "d3.svg.line", "d3.svg.area", "d3.csv", "d3.time.format", "d3.nest", "d3.max", "d3.sum", "d3.time.scale", "d3.scale.linear", "d3.min", "d3.timer", "d3.scale.ordinal", "d3.range", "d3.layout.stack", "d3.zip.apply", "d3.layout.pie", "d3.svg.arc", "d3.interpolate"], "readme": "The first 15 seconds of the D3 show reel. See full video at <http://vimeo.com/29862153>. Includes seamless transitions between the following visualization types:\n\n* lines\n* horizons\n* areas\n* stacked areas\n* streamgraph\n* overlapping areas\n* grouped bars\n* stacked bars\n* bars\n* donut\n\nAdmittedly, these aren\u2019t the most useful visualizations; their purpose is not to inform but to demonstrate D3\u2019s capability for producing dynamic visualizations with custom transitions. They *do* show real data (the monthly closing price for ten years\u2019 worth of stock data), but I didn\u2019t include axes for date or price. See the [axis component](http://bl.ocks.org/1166403) for a better example. Also, the stacked visualizations aren\u2019t especially meaningful, unless you imagine owning a portfolio with equal parts AAPL, AMZN, IBM and MSFT. Similarly, the bars and donuts represent the *average* price (or sum) during this time period.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1256572'>D3 Show Reel</a>\n\nforked from <a href='http://bl.ocks.org/sivartravis/'>sivartravis</a>'s block: <a href='http://bl.ocks.org/sivartravis/84553799f7a1a17548e1'>D3 Show Reel</a>", "uid": "domhorvath_5413cfc6b6cd59eb0e1544a990ba3f74"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.8/d3.min.js\"></script>\n  <style>\n    circle {\n      opacity: 0.5208;\n    }\n    body {\n        font-family: futura;\n    }\n    h2.title {\n      color: black;\n      text-align: center;\n    }\n    .axis {\n      font-family: arial;\n      font-size: 0.7em;\n    }\n    text {\n      fill: black;\n      stroke: none;\n    }\n    .label {\n      font-size: 1.5em;\n    }\n    path {\n      fill: none;\n      stroke: black;\n      stroke-width: 1px;\n    }\n    .tick {\n      fill: none;\n      stroke: black;\n    }\n    .line {\n      fill: none;\n      stroke: #4eb0bb;\n      stroke-width: 1px;\n    }\n  </style>\n  <script>\n    function draw(data) {\n    \"use strict\";\n\n    /*\n        D3.js setup code\n    */\n\n    // set margins according to Mike Bostock's margin conventions\n    // http://bl.ocks.org/mbostock/3019563\n    var margin = {top: 25, right: 40, bottom: 150, left: 75};\n    \n    // set height and width of chart\n    var width = 960 - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom;\n    \n    // specify the radius of our circles and the\n    // column we want to plot\n    var radius = 3,\n        field = 'San Francisco',\n        x_field = \"number_of_reviews\",\n        y_field = 'price',\n        size_field = 'reviews_per_month';\n  \n    // Append the title for the graph\n    d3.select(\"body\")\n        .append(\"h2\")\n        .text(field + \" Listings\")\n        .attr('class', 'title');\n    \n    // append the SVG tag with height and width to accommodate for margins\n    var svg = d3.select(\"body\")\n                .append(\"svg\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                .append('g')\n                    .attr('class','chart')\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    // remove outlier values\n    data = data.filter(function(d) {\n      return d[y_field] < 1000;\n    });\n\n    // bind our data to svg circles for the scatter plot\n    svg.selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n      \n      // maximum price\n      var max_y = d3.max(data, function(d) {\n          return +d[y_field];\n      });\n\n      // get min/max review count\n      var review_extent = d3.extent(data, function(d){\n          return +d[x_field];\n      });\n\n      // get min/max host listings count\n      var host_extent = d3.extent(data, function(d){\n          return +d[size_field];\n      });\n\n      // Create x-axis scale mapping dates -> pixels\n      var review_scale = d3.scale.linear()\n          .range([0, width])\n          .domain(review_extent);\n\n      // Create y-axis scale mapping price -> pixels\n      var measure_scale = d3.scale.linear()\n          .range([height, 0])\n          .domain([0, max_y]);\n\n      // Create y-axis scale mapping price -> pixels\n      var host_scale = d3.scale.pow().exponent(1.5)\n          .range([1, 10])\n          .domain(host_extent);\n\n      // create scale for color bars\n      var color = d3.scale.category10();\n      \n      // Create D3 axis object from time_scale for the x-axis\n      var x_axis = d3.svg.axis()\n          .scale(review_scale);\n\n      // Create D3 axis object from measure_scale for the y-axis\n      var measure_axis = d3.svg.axis()\n          .scale(measure_scale)\n          .orient(\"left\");\n\n      // Append SVG to page corresponding to the D3 x-axis\n      svg.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', \"translate(0,\" + height + \")\")\n          .call(x_axis)\n      \t\t.append('text')\n            .attr('class', 'label')\n            .attr(\"x\", width / 2 )\n            .attr('y', 50)\n            .text(\"# of Reviews\")\n            .style('text-anchor', 'middle');\n\n      // Append SVG to page corresponding to the D3 y-axis\n      svg.append('g')\n          .attr('class', 'y axis')\n          .call(measure_axis);\n\n      // add label to y-axis\n      var y_label = d3.select(\".y.axis\")\n          .append(\"text\")\n          .attr('class', 'label')\n          .text(\"Price\")\n          .attr(\"transform\", \"rotate(-90)\");\n      \n      // center y axis label\n      y_label.attr(\"x\", -(height / 2)).attr('y', -40)\n            .style(\"text-anchor\", \"middle\");\n\n      // based on the data bound to each svg circle,\n      // change its center-x (cx) and center-y (cy)\n      // coordinates\n      d3.selectAll('circle')\n          .attr('cx', function(d) {\n              return review_scale(+d[x_field]);\n          })\n          .attr('cy', function(d) {\n              return measure_scale(+d[y_field]);\n          })\n          .attr('r', function(d) {\n            return host_scale(+d[size_field]);\n          })\n          .style('fill', function(d) {\n            return color(d['room_type']);\n          });\n      \n            // append a legend\n      var legend = svg.selectAll(\".legend\")\n          .data(color.domain().slice().reverse())\n        .enter().append(\"g\")\n          .attr(\"class\", \"legend\")\n          .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n      // append the colored square for legend\n      legend.append(\"rect\")\n          .attr(\"x\", width - 18)\n          .attr(\"width\", 18)\n          .attr(\"height\", 18)\n          .style(\"fill\", color);\n\n      // append the text for the legend\n      legend.append(\"text\")\n          .attr(\"x\", width - 24)\n          .attr(\"y\", 9)\n          .attr(\"dy\", \".35em\")\n          .style(\"text-anchor\", \"end\")\n          .text(function(d) { return d; });\n    }\n  </script>\n</head>\n  <body>\n    <script>\n      /*\n      Use D3 to load the CSV file and pass\n      the contents of it to the draw function.\n      */\n      d3.csv(\"http://jay-oh-en.github.io/interactive-data-viz/data/airbnb/listings.csv\", draw);\n    </script>\n  </body>\n</html>", "description": "D3.js Legends", "created_at": "2016-04-03T07:30:33Z", "updated_at": "2016-04-07T15:30:28Z", "api": ["d3.select", "d3.max", "d3.extent", "d3.scale.linear", "d3.scale.pow", "d3.scale.category10", "d3.svg.axis", "d3.selectAll", "d3.csv"], "readme": "[![Join the chat at https://gitter.im/Jay-Oh-eN/data-scientists-guide-apache-spark](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Jay-Oh-eN/interactive-data-viz?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThese are the materials for my workshop on creating interactive data visualizations with D3! We will be using the following two tools to work through the exercises:\n\n* [bl.ocks.org](http://bl.ocks.org/): D3.js Gist renderer and online community\n* [Building Blocks](http://blockbuilder.org/about): In-browser interactive D3.js bl.ock editor\n\nAnd please do not hesitate to reach out to me directly via email at jondinu@gmail.com or over twitter @clearspandex\n\n> Throughout this workshop, you will learn how to make an interactive map of AirBnB listings in SF to better understand the companies impact on the city.\n\n### Exercises\n\n* [Part 1](15f52d2ec0b035b53c6f): simple bubble chart visualizing 3 dimensions of the data.\n  * [solution (you are here \ud83d\udc47)](1ca89dc69bcc18f3f4c0) \n* [Part 2](a29e820cb6d8f3a84249): thematic map of AirBnB listings distribution across SF neighborhoods.\n  * [solution](a6e0ca2e13082ec099da) \n* [Final](b8ef4734abad1c644221): interactive linked map and line plot of AirBnB activity per each neighborhood in SF.\n\n### The Data\n\nThe [data](http://insideairbnb.com/get-the-data.html) comes from [Inside AirBnB](http://insideairbnb.com/index.html) and it is available below under a [Creative Commons CC0 1.0 Universal (CC0 1.0) \"Public Domain Dedication\"](http://creativecommons.org/publicdomain/zero/1.0/) license.\n\n> Inside AirBnB is an independent, non-commercial set of tools and data that allows you to explore how Airbnb is really being used in cities around the world.\n\n---\n\nGithub repo: [https://github.com/Jay-Oh-eN/interactive-data-viz](https://github.com/Jay-Oh-eN/interactive-data-viz)\n\nArchival event links: \n\n* [Open Data Science Conference SF 2015](http://opendatascicon.com/detailed-speaker-page/#jonathan-dinu)\n* [DataWeek 2015](https://integrate2015.sched.org/event/4Hmk/introduction-to-data-science-interactive-data-visualozation-with-d3js)\n\n[mongoose]: http://cesanta.com/mongoose.shtml\n[sublime]: http://www.sublimetext.com/2\n[chrome]: https://www.google.com/chrome/browser/desktop/\n[zip]: https://github.com/Jay-Oh-eN/hands-on-d3/archive/master.zip\n[gitit]: http://jlord.us/git-it/\n\n[sf-asthma]: https://data.sfgov.org/Health-and-Social-Services/Climate-and-Health-Data/paqg-zyqx\n[grayarea]: http://grayarea.org/\n[swiss]: http://www.swissnexsanfrancisco.org/\n[lift]: http://liftconference.com/lift15\n[data-canvas-img]: images/data-canvas.png\n[data-canvas]: http://datacanvas.org/\n[data-canvas-map]: http://map.datacanvas.org/\n[dump]: https://s3.amazonaws.com/localdata-export/datacanvas/full.zip\n[data-canvas-data]: http://map.datacanvas.org/#!/data\n[dictionary]: https://github.com/Jay-Oh-eN/hands-on-d3/blob/master/data/dictionary.pdf\n\n[d3]: http://d3js.org/\n[dimple]: http://dimplejs.org/\n[moment]: http://momentjs.com/\n[d3plus]: http://d3plus.org/\n[rickshaw]: http://code.shutterstock.com/rickshaw/\n[dc.js]: http://dc-js.github.io/dc.js/\n[nvd3]: http://nvd3.org/\n[c3]: http://c3js.org/\n[raw]: http://app.raw.densitydesign.org/\n[queue]: https://github.com/mbostock/queue\n[parallel]: https://syntagmatic.github.io/parallel-coordinates/\n\nforked from <a href='http://bl.ocks.org/Jay-Oh-eN/'>Jay-Oh-eN</a>'s block: <a href='http://bl.ocks.org/Jay-Oh-eN/1ca89dc69bcc18f3f4c0'>Civic Impact through Data Visualization: Solution 1</a>", "uid": "Jay-Oh-eN_9337d41b59b2bcee149004e811d5b266"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #000;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<!--<script src=\"http://d3js.org/d3.v3.min.js\"></script>-->\n<script>\n\nvar data = [5,10,-3,100, 123, 11, 225];\n\nvar margin = {top: 20, right: 40, bottom: 40, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar xscale = d3.scale.linear()\n            .domain([0, data.length])\n            .range([0, width]);\n\nvar yscale = d3.scale.linear()\n            .domain(d3.extent(data))\n            .range([height, 0]);\n\nvar zoom = d3.behavior.zoom()\n    .x(xscale)\n    .y(yscale)\n    .on(\"zoomstart\", zoom_start)\n    .on(\"zoom\", zoomed)\n    .on(\"zoomend\", zoom_end);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n        .attr(\"class\", \"zoom-rect\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    .on(\"mousedown\", mousedowned)\n    .call(zoom);\n\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .style(\"fill\", \"none\")\n    .style(\"pointer-events\", \"all\");\n\n\nvar brushstart = function(){\n\n    console.log(\"brushstart\" + this);\n    console.log(d3.event);\n};\n\nvar brushmove = function(){\n\n    console.log(\"brush\" + this);\n    console.log(d3.event);\n};\n\nvar brushend = function(){\n    console.log(\"brushend\" + this);\n    console.log(d3.event);\n};\n\n// brush for selecting areas\nvar make_brush = d3.svg.brush()\n    .on(\"brushstart\", brushstart)\n    .on(\"brush\", brushmove)\n    .on(\"brushend\", brushend)\n        .x(xscale);\n\n\nvar check_mousemove = function(){\n    var stop = d3.event.button != 0;\n    if (stop) d3.event.stopImmediatePropagation(); // stop zoom\n\n    var new_click_event = new Event('mousedown');\n    new_click_event.pageX = d3.event.pageX;\n    new_click_event.clientX = d3.event.clientX;\n    new_click_event.pageY = d3.event.pageY;\n    new_click_event.clientY = d3.event.clientY;\n    console.log(\"redirect to zoom\");\n    console.log(new_click_event);\n\n    svg.node()\n       .dispatchEvent(new_click_event);\n\n};\n\n\nsvg.append(\"g\")\n      .attr(\"class\", \"x brush\")\n      .attr(\"width\", width )\n    .attr(\"height\", height )\n        //.on(\"mousedown\", check_mousemove)\n        //.on(\"mousemove\", check_mousemove)\n      .call(make_brush)\n      //.call(zoom)\n    .selectAll(\"rect\")\n      .attr(\"height\", height);\n\nvar container = svg.append(\"g\");\n\nvar line  = d3.svg.line()\n        .x(function(d,i) {return xscale(i)})\n        .y(function(d) {return yscale(d)});\n\ncontainer.append(\"g\")\n    .attr(\"class\", \"lines\")\n  .append(\"path\")\n    .attr(\"class\", \"line\")\n    .datum(data)\n    .attr(\"d\", line)\n        .style(\"fill\", \"none\")\n        .style(\"stroke\", \"#000\");\n\nfunction make_axis(scale, orient){\n            return d3.svg.axis()\n                    .scale(scale)\n                    .orient(orient)\n}\n\n// create axis\ncontainer.append(\"g\")\n    .attr(\"class\", \"axis axis--x\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(make_axis(xscale, \"bottom\"));\n\ncontainer.append(\"g\")\n    .attr(\"class\", \"axis axis--y\")\n    .call(make_axis(yscale, \"left\"));\n\n\nfunction zoom_start(){\n    console.log(\"zoom start\");\n    console.log(d3.event);\n}\n\nfunction zoomed() {\n    d3.select(\".axis--x\")\n        .call(make_axis(xscale, \"bottom\"));\n\n    d3.select(\".axis--y\")\n        .call(make_axis(yscale, \"left\"));\n\n    d3.select(\".line\")\n            .attr(\"d\", line);\n}\n\nfunction zoom_end(){\n    console.log(\"zoom end\");\n    console.log(d3.event);\n}\n\nfunction mousedowned() {\n  var stop = d3.event.button != 1;\n  if (stop) d3.event.stopImmediatePropagation(); // stop zoom\n\n\n  svg.append(\"circle\")\n      .attr(\"transform\", \"translate(\" + d3.mouse(this) + \")\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", stop ? \"red\" : \"green\")\n      .style(\"stroke-width\", \"3px\")\n      .style(\"stroke-opacity\", 1)\n    .transition()\n      .ease(Math.sqrt)\n      .duration(500)\n      .attr(\"r\", 12)\n      .style(\"stroke-opacity\", 0)\n          .each(\"end\", function() {d3.select(this).remove()});\n}\n\n</script>\n", "description": "d3 zoom and brush test", "created_at": "2015-10-12T06:40:55Z", "updated_at": "2015-10-12T06:40:55Z", "api": ["d3.scale.linear", "d3.extent", "d3.behavior.zoom", "d3.select", "d3.svg.brush", "d3.event.stopImmediatePropagation", "d3.svg.line", "d3.svg.axis", "d3.mouse"], "readme": "This [d3.js block] [d3b] tries to combine the zoom and brush behaviour of d3.\n\nLeft click should change the brush (create brush, change brush size, move brush) and middle click shoule move the graph with zoom behaviour (and not change the brush).\nMousewheel can be used for zooming.\n\nSee [Stack Overflow] [so] for question regarding the problem.\n\n[so]: http://stackoverflow.com/questions/23910711/how-to-handle-brush-on-left-click-and-zoom-on-middle-click-in-d3-js\n[d3b]: http://bl.ocks.org/bobatsar/9403d59b12e33a0925cb\n\nforked from <a href='http://bl.ocks.org/bobatsar/'>bobatsar</a>'s block: <a href='http://bl.ocks.org/bobatsar/9403d59b12e33a0925cb'>d3 zoom and brush test</a>", "uid": "faniepotgieter_2ebcb3004abe34c380cc"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Projection Mode Rendering</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n  button.reproject {\n    position: fixed;\n    z-index: 1;\n    top: 250px;\n  }\n</style>\n<script>\nfunction makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    map.mode(\"projection\")\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .type(\"csv\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(3)\n    .x(function(d) {return d.x})\n    .y(function(d) {return d.xy});\n\n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoJSON Countries\")\n    .cssClass(\"countries\")\n    .renderMode(\"canvas\");\n    \n    topojsonLayer = d3.carto.layer.topojson();\n    topojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n    .label(\"TopoJSON Lines\")\n    .cssClass(\"roads\")\n    .renderMode(\"canvas\");\n    \n    d3.select(\"#map\").append(\"button\").attr(\"class\", \"reproject\").html(\"Reproject to Conic Equidistant\").on(\"click\", reproject);\n    \n    map.addCartoLayer(geojsonLayer).addCartoLayer(topojsonLayer).addCartoLayer(csvLayer)\n\n    function reproject() {\n\n    var projection = d3.geo.conicEquidistant()\n    .center([0, 15])\n    .scale(600)\n    .translate(map.zoom().translate())\n    .precision(.1);\n\n    map.projection(projection);\n    map.refresh();\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Projection Mode Rendering - d3.carto.map", "created_at": "2014-07-12T19:07:21Z", "updated_at": "2015-08-29T14:03:54Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.csv", "d3.carto.layer.geojson", "d3.carto.layer.topojson", "d3.geo.conicEquidistant"], "readme": "This is an of projection mode rendering from **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nSwitching the map mode to \"projection\" activates it. The default projection is Mollweide, but you can define your own and assign it using map.projection(), as shown in the reproject function.\n", "uid": "emeeks_ffb10b231ec605c1dde8"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - custom infobox formatters</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .countryInfobox {\n    color: pink;\n    font-style: italic;\n    padding: 20px;\n  }\n  rect.bluesquare {\n    fill: #4682B4;\n    stroke: black;\n    stroke-width: 1px;\n}\n.countryborders {\n    fill: rgba(0,0,0,0);\n    stroke-width: 1px;\n    stroke: gray;\n    cursor: pointer;\n}\n\n.roads {\n    stroke: brown;\n    stroke-width: 1px;\n    fill: none;\n}\n\n.halffilledcountries {\n    fill: rgba(224,224,209,0.5);\n    stroke-width: 1px;\n    stroke: black;\n    opacity: 1;    \n}\n\n</style>\n<script>\n\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    tileLayer = d3.carto.layer.tile();\n    tileLayer\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\")\n    .on(\"load\", recenter);\n\n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoBorders\")\n    .cssClass(\"countryborders\")\n    .renderMode(\"canvas\")\n    .on(\"load\", createFeatureLayer);\n    \n    topojsonLayer = d3.carto.layer.topojson();\n    topojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n    .label(\"TopoRoutes\")\n    .cssClass(\"roads\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true);\n\n    csvModal = d3.carto.modal();\n    csvModal.formatter(\n      function(d) {return \"<h1>\" + d.label + \" in modern day \" + d.modern + \"</h1>\"}\n    )\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .type(\"csv\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(8)\n    .x(\"x\")\n    .y(\"y\")\n    .modal(csvModal)\n    .clickableFeatures(true);\n\n    map.addCartoLayer(tileLayer);\n    map.addCartoLayer(topojsonLayer);\n    map.addCartoLayer(geojsonLayer);\n    map.addCartoLayer(csvLayer);\n\n    function recenter() {\n      map.centerOn([3,43],\"latlong\");\n    }\n    \n    function createFeatureLayer() {\n      var featuresArray = [];\n      var mapLayers = map.layers();\n      mapLayers.forEach(function (layer) {\n        if (layer.label() == \"GeoBorders\") {\n          featuresArray = layer.features();\n        }\n      })\n     shortNameCountries = featuresArray.filter(function(d) {return d.properties.name.length < 7})\n\n    featureModal = d3.carto.modal();\n    featureModal.formatter(\n      function(d) {return \"<span class='countryInfobox'>The country of \" + d.properties.name + \" has a short name</span>\"}\n    )\n    \n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(shortNameCountries)\n    .label(\"Feature Array\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true)\n    .modal(featureModal);\n    \n    map.addCartoLayer(featureLayer);\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Custom Infobox Formatter - d3.carto.map", "created_at": "2015-09-08T08:43:16Z", "updated_at": "2015-09-08T08:43:16Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.topojson", "d3.carto.modal", "d3.carto.layer.csv", "d3.carto.layer.featureArray"], "readme": "A demonstration of custom modal infoboxes from **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nIf you click on a site point (the pink circles) you'll see an infobox that reads something like \"Lugdunum Convenarum in modern day France\" whereas if you click on a country, you'll see an infobox that reads something like \"The country of Spain has a short name\".\n\nHow a modal handles the data in a datapoint for display is handled by defining a custom formatter for the modal, which requires that you create a new d3.carto.modal. The new modal is assigned to a d3.carto.layer using .modal() as shown in the example for the CSV Points and Feature Array layers.\n\nFormatters are defined using the standard D3 accessor syntax. The default formatter, demonstrated in the [basic modal example](http://bl.ocks.org/emeeks/433a9b04f82a1c78af4b). Since you know your data better than d3.carto does, you can specify how to parse what attributes in as specific a manner as you want. The function should return a string of HTML suitable to be dropped into the modal div.\n\nThe key lines for defining the modal and formatter are:\n```\n    csvModal = d3.carto.modal();\n    csvModal.formatter(\n      function(d) {return \"<h1>\" + d.label + \" in modern day \" + d.modern + \"</h1>\"}\n    )\n```\n\nand:\n```\n    featureModal = d3.carto.modal();\n    featureModal.formatter(\n      function(d) {return \"<p class='countryInfobox'>The country of \" + d.properties.name + \" has a short name</p>\"}\n    )\n```", "uid": "renecnielsen_f8fba5bc1d56bafcdbe3"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.fill {\n  fill: #ccc;\n}\n\n.stroke {\n  fill: none;\n  stroke: #000;\n  stroke-width: 20px;\n}\n\n</style>\n<svg width=\"960\" height=\"500\" viewBox=\"-10 -10 116 111\">\n  <defs>\n    <path id=\"dee\" d=\"M0,0h7.75a45.5,45.5 0 1 1 0,91h-7.75v-20h7.75a25.5,25.5 0 1 0 0,-51h-7.75z\"/>\n    <path id=\"three\" d=\"M36.2510,0h32a27.75,27.75 0 0 1 21.331,45.5a27.75,27.75 0 0 1 -21.331,45.5h-32a53.6895,53.6895 0 0 0 18.7464,-20h13.2526a7.75,7.75 0 1 0 0,-15.5h-7.75a53.6895,53.6895 0 0 0 0,-20h7.75a7.75,7.75 0 1 0 0,-15.5h-13.2526a53.6895,53.6895 0 0 0 -18.7464,-20z\"/>\n    <clipPath id=\"clip-three\">\n      <use xlink:href=\"#three\"/>\n    </clipPath>\n  </defs>\n  <use class=\"fill\" xlink:href=\"#dee\"/>\n  <use class=\"fill\" xlink:href=\"#three\"/>\n  <path class=\"stroke\" style=\"display:none;\" d=\"M0,10h7.75a35.5,35.5 0 1 1 0,71h-7.75\"/>\n  <path class=\"stroke\" style=\"display:none;\" clip-path=\"url(#clip-three)\" d=\"M36.2510,10h32a17.75,17.75 0 0 1 0,35.5h-7.75h7.75a17.75,17.75 0 0 1 0,35.5h-32\"/>\n</svg>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nd3.select(this)\n    .on(\"touchstart\", animate)\n    .on(\"click\", animate)\n    .on(\"load\", animate);\n\nfunction animate() {\n  var delay = 0,\n      stroke = d3.selectAll(\".stroke\");\n\n  // First cancel any active or scheduled transitions.\n  stroke.interrupt().transition();\n\n  // Then schedule the new transition.\n  stroke.transition().each(function() {\n    var length = this.getTotalLength(),\n        duration = length * 20;\n\n    d3.select(this)\n        .style(\"display\", null)\n        .style(\"stroke-dasharray\", \"0,\" + length)\n      .transition()\n        .delay(delay)\n        .duration(duration)\n        .style(\"stroke-dasharray\", length + \",\" + length);\n\n    delay += duration;\n  });\n}\n\n</script>\n", "description": "Animated D3 Logo", "created_at": "2015-10-16T04:33:43Z", "updated_at": "2016-02-09T01:49:09Z", "api": ["d3.select", "d3.selectAll"], "readme": "Animating the [D3 logo](/mbostock/c9455b842a01f6907020) as if it were being drawn by hand.\n", "uid": "mbostock_bc4e32ec71636b498c46"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Simple Chloropleth</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n.wards {\n    fill: gray;\n    stroke: gray;\n    stroke-width: 1px;\n}\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    \n    map.mode(\"projection\");\n\n    var projection = d3.geo.conicEquidistant()\n    .center([-0.0275,51.307])\n    .scale(84000)\n    .translate(map.zoom().translate())\n    .precision(.1);\n\n    map.projection(projection);\n    map.refresh();\n    \n    topojsonLayer = d3.carto.layer();\n    topojsonLayer\n    .type(\"topojson\")\n    .path(\"glondon.topojson\")\n    .label(\"London Wards\")\n    .cssClass(\"wards\")\n    .renderMode(\"svg\")\n    .on(\"load\", colorBySize);\n\n    map.addCartoLayer(topojsonLayer);\n    \n// Function is called on load because it won't have anything to apply to until the layer is loaded\n    function colorBySize() {\n    var featureData = topojsonLayer.features();\n    var sizeExtent = d3.extent(featureData, function (d) {return d.properties.w_size})\n    var sizeScale = d3.scale.quantile().domain(sizeExtent).range(colorbrewer.Greens[5]);\n\n      d3.selectAll(\"path.wards\")\n      .style(\"fill\", function (d) {return sizeScale(d.properties.w_size)})\n    \n    //Some simple hover behavior\n    d3.selectAll(\"path.wards\").style(\"pointer-events\", \"auto\").on(\"mouseover\", wardOver).on(\"mouseout\", wardOut);\n    \n    function wardOver(d,i) {\n      d3.selectAll(\"path.wards\").style(\"stroke-width\", function (p) {return p.properties.region == d.properties.region ? 0 : 1})\n    }\n\n    function wardOut(d,i) {\n      d3.selectAll(\"path.wards\").style(\"stroke-width\", \"1px\")\n    }\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Simple Choropleth - d3.carto.map", "created_at": "2014-07-14T22:25:57Z", "updated_at": "2015-08-29T14:03:58Z", "api": ["d3.carto.map", "d3.select", "d3.geo.conicEquidistant", "d3.carto.layer", "d3.extent", "d3.scale.quantile", "d3.selectAll"], "readme": "A simple choropleth map made with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nAfter adding a topojson layer, you can access the features either by using map.layers() or the layer if assigned to a variable or via d3.selectAll.data() on the appropriate elements. You can then style the features based on their properties. In this case, the size of the ward.\n\nSome hover behavior can also be defined using D3.", "uid": "emeeks_80dc1e4c11586c47a266"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 | reusable heatmap calendar</title> \n  <meta name=\"author\" content=\"Sundar Singh | eesur.com\">\n  \n  <link rel=\"stylesheet\" href=\"main.css\">\n  <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.min.js\" charset=\"utf-8\"></script>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment.min.js\"></script>\n</head>\n<body>\n\n  <article>\n    <header>\n      <span id=\"info\">info</span> \n    </header>\n    <section id=\"heatmap\"></section>\n  </article> \n\n  <script> d3.eesur = {}; //namespace  </script>\n  <script src=\"d3_code_heatmap_cal.js\"></script>\n  <script>\n  // *****************************************\n  // render chart\n  // *****************************************\n  (function() {\n      'use strict';\n      \n      var nestedData;\n      var parseDate = d3.time.format('%Y-%m-%d').parse;\n\n      // create chart\n      var heatChart = d3.eesur.heatmap()\n          .colourRangeStart('#FDBB30')\n          .colourRangeEnd('#EE3124')\n          .height(800)\n          .startYear('2011')\n          .endYear('2016')\n          .on('_hover', function (d, i) {\n              var f = d3.time.format('%B %d, %Y');\n              d3.select('#info')\n                  .text(function () {\n                      return 'date: ' + f(d) + ' | value: ' + nestedData[d];\n                  });\n          });\n\n      // apply after nesting data\n      d3.json('heatmap_data.json', function(error, data) {\n\n          if (error) return console.warn(error);\n        \n          nestedData = d3.nest()\n              .key(function (d) { return parseDate(d.date.split(' ')[0]); })\n              .rollup(function (n) { \n                  return d3.sum(n, function (d) { \n                      return d.amount; // key\n                  }); \n              })\n              .map(data);\n\n          // console.log(nestedData);\n\n          // render chart\n          d3.select('#heatmap')\n              .datum(nestedData)\n              .call(heatChart);\n\n      });\n\n  }());\n\n  d3.select(self.frameElement).style('height', '900px');\n\n  </script>\n\n</body>\n\n</html>\n\n\n", "description": "d3 | reusable heatmap calendar", "created_at": "2015-12-08T18:10:09Z", "updated_at": "2015-12-08T18:10:12Z", "api": ["d3.dispatch", "d3.scale.linear", "d3.range", "d3.min", "d3.time.format", "d3.select", "d3.time.days", "d3.time.months", "d3.extent", "d3.values", "d3.rebind", "d3.eesur.heatmap", "d3.json", "d3.nest", "d3.sum"], "readme": "Calendar heatmap adapted into a reusable chart for quick testing\n\n> loading of ~~CSV~~ json data, which is then quantized into a diverging color scale. The values are visualized as coloured cells per day. Days are arranged into columns by week, then grouped by month and years. \n\n[source](http://bl.ocks.org/mbostock/4063318)\n", "uid": "eesur_5fbda7f410d31da35e42"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.chart { \n  background: #fff;\n}\n\np {\n  font: 12px helvetica;\n}\n\n\n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2px;\n  shape-rendering: crispEdges;\n}\n\nbutton {\n  position: absolute;\n  right: 50px;\n  top: 10px;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.js\"></script>\n\n\n<div class=\"chart\">\n</div>\n\n<script>\n\n//chart(\"data.csv\", \"orange\");\nchart(\"mental_disability_streamgraph.csv\", \"orange\");\n\nvar datearray = [];\nvar colorrange = [];\n\n\nfunction chart(csvpath, color) {\n\nif (color == \"blue\") {\n  colorrange = [\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"];\n}\nelse if (color == \"pink\") {\n  colorrange = [\"#980043\", \"#DD1C77\", \"#DF65B0\", \"#C994C7\", \"#D4B9DA\", \"#F1EEF6\"];\n}\nelse if (color == \"orange\") {\n  colorrange = [\"#B30000\", \"#E34A33\", \"#FC8D59\", \"#FDBB84\", \"#FDD49E\", \"#FEF0D9\"];\n}\nstrokecolor = colorrange[0];\n\nvar format = d3.time.format(\"%m/%d/%y\");\n\nvar margin = {top: 20, right: 40, bottom: 30, left: 30};\nvar width = document.body.clientWidth - margin.left - margin.right;\nvar height = 400 - margin.top - margin.bottom;\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"remove\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"20\")\n    .style(\"visibility\", \"hidden\")\n    .style(\"top\", \"30px\")\n    .style(\"left\", \"55px\");\n\n//var x = d3.time.scale()\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height-10, 0]);\n\nvar z = d3.scale.ordinal()\n    .range(colorrange);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n   // .ticks(d3.time.weeks);\n\nvar yAxis = d3.svg.axis()\n    .scale(y);\n\nvar yAxisr = d3.svg.axis()\n    .scale(y);\n\nvar stack = d3.layout.stack()\n    .offset(\"silhouette\")\n    .values(function(d) { return d.values; })\n    .x(function(d) { return d.year; })\n    .y(function(d) { return d.count; });\n\nvar nest = d3.nest()\n    .key(function(d) { return d.term; });\n\nvar area = d3.svg.area()\n    .interpolate(\"cardinal\")\n    .x(function(d) { return x(d.year); })\n    .y0(function(d) { return y(d.y0); })\n    .y1(function(d) { return y(d.y0 + d.y); });\n\nvar svg = d3.select(\".chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar graph = d3.csv(csvpath, function(data) {\n  data.forEach(function(d) {\n    //d.date = format.parse(d.date);\n    //d.value = +d.value;\n    d.year = +d.year;\n    d.count = +d.count;\n  });\n\n  var layers = stack(nest.entries(data));\n\n  x.domain(d3.extent(data, function(d) { return d.year; }));\n  y.domain([0, d3.max(data, function(d) { return d.y0 + d.y; })]);\n\n  svg.selectAll(\".layer\")\n      .data(layers)\n    .enter().append(\"path\")\n      .attr(\"class\", \"layer\")\n      .attr(\"d\", function(d) { return area(d.values); })\n      .style(\"fill\", function(d, i) { return z(i); });\n\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + width + \", 0)\")\n      .call(yAxis.orient(\"right\"));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis.orient(\"left\"));\n\n  svg.selectAll(\".layer\")\n    .attr(\"opacity\", 1)\n    .on(\"mouseover\", function(d, i) {\n      svg.selectAll(\".layer\").transition()\n      .duration(250)\n      .attr(\"opacity\", function(d, j) {\n        return j != i ? 0.6 : 1;\n    })})\n/***\n    .on(\"mousemove\", function(d, i) {\n      mousex = d3.mouse(this);\n      mousex = mousex[0];\n      var invertedx = x.invert(mousex);\n      invertedx = invertedx.getMonth() + invertedx.getDate();\n      var selected = (d.values);\n      for (var k = 0; k < selected.length; k++) {\n        datearray[k] = selected[k].date\n        datearray[k] = datearray[k].getMonth() + datearray[k].getDate();\n      }\n\n      mousedate = datearray.indexOf(invertedx);\n      pro = d.values[mousedate].value;\n***/\n      d3.select(this)\n      .classed(\"hover\", true)\n      .attr(\"stroke\", strokecolor)\n      .attr(\"stroke-width\", \"0.5px\"), \n      tooltip.html( \"<p>\" + d.term + \"<br>\" + pro + \"</p>\" ).style(\"visibility\", \"visible\");\n      \n    })\n    .on(\"mouseout\", function(d, i) {\n     svg.selectAll(\".layer\")\n      .transition()\n      .duration(250)\n      .attr(\"opacity\", \"1\");\n      d3.select(this)\n      .classed(\"hover\", false)\n      .attr(\"stroke-width\", \"0px\"), tooltip.html( \"<p>\" + d.term + \"<br>\" + pro + \"</p>\" ).style(\"visibility\", \"hidden\");\n  })\n    \n  var vertical = d3.select(\".chart\")\n        .append(\"div\")\n        .attr(\"class\", \"remove\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"19\")\n        .style(\"width\", \"1px\")\n        .style(\"height\", \"380px\")\n        .style(\"top\", \"10px\")\n        .style(\"bottom\", \"30px\")\n        .style(\"left\", \"0px\")\n        .style(\"background\", \"#fff\");\n\n  d3.select(\".chart\")\n      .on(\"mousemove\", function(){  \n         mousex = d3.mouse(this);\n         mousex = mousex[0] + 5;\n         vertical.style(\"left\", mousex + \"px\" )})\n      .on(\"mouseover\", function(){  \n         mousex = d3.mouse(this);\n         mousex = mousex[0] + 5;\n         vertical.style(\"left\", mousex + \"px\")});\n//});\n}\n</script>", "description": "D3 Interactive Streamgraph", "created_at": "2015-09-11T18:26:16Z", "updated_at": "2015-09-11T18:43:33Z", "api": ["d3.time.format", "d3.select", "d3.time.scale", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.layout.stack", "d3.nest", "d3.svg.area", "d3.csv", "d3.extent", "d3.max", "d3.mouse"], "readme": "", "uid": "dukevis_84ed35ed91f857ec3d79"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width:100%; height: 100% }\n  </style>\n</head>\n\n<body>\n  \n  <div id=\"chart\"></div>\n  \n  <script>\n    \n    var dataset = [\n      { label: 'Is Sometimes A Bear', count: 10 }, \n      { label: 'Is Never A Bear', count: 90 }\n    ];\n    \n    var width = 360,\n        height = 360,\n        radius = Math.min(width, height) / 2,\n        donutWidth = 55;\n    \n    var svg = d3.select(\"#chart\")\n    \t\t\t.append('svg')\n          .attr('width', width)\n          .attr('height', height)\n          .append('g')\n          .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')');\n    \n    var color = d3.scale.ordinal()\n  \t\t.range(['#B4D455', '#8EB41C']); \n    \n    var arc = d3.svg.arc()\n    \t.innerRadius(radius - donutWidth)\n    \t.outerRadius(radius);\n    \n    var pie = d3.layout.pie()\n      .value(function(d) { return d.count; })\n      .sort(null);\n    \n    var path = svg.selectAll('path')\n      .data(pie(dataset))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .attr('fill', function(d, i) { \n        return color(d.data.label);\n      });\n    \n    \n\n    console.log(\"you are now rocking with d3\", d3);\n  </script>\n</body>\n", "description": "fresh block", "created_at": "2016-05-13T21:18:47Z", "updated_at": "2016-05-13T21:18:47Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/4cfe56d4dfbf9001c5620ca384ec9426'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/18bfab55bf5c8def68af6b71a9651d75'>fresh block</a>", "uid": "thejenbo_5d0b8c55f9eec9287776a8fdb38c51b2"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <style>\n    body {\n      width: 960px;\n    }\n    path {\n      stroke: white;\n      fill-rule: evenodd;\n    }\n  </style>\n  <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/lodash/2.4.1/lodash.min.js\"></script>  \n</head>\n<body>\n  <div id='viz'></div>\n  <div>\n    <button onclick=\"larger()\">Larger</button><button onclick=\"smaller()\">Smaller</button>\n  </div>\n  <script>\n    var charts = [];\n\n    d3.json(\"flare.json\", function(error, root) {\n    \n      var countAccessorFn = function(d) { return 1; };\n      var sizeAccessorFn = function(d) { return d.size; };\n\n      charts.push(makeSunburst(_.cloneDeep(root), countAccessorFn));\n      charts.push(makeSunburst(_.cloneDeep(root), sizeAccessorFn));\n\n      function makeSunburst(dataRoot, valueAccessor) {\n\n        var width = 480, height = 480;\n        var radius = (Math.min(width, height) / 2) - 60;\n        var color = d3.scale.category20c();\n        var angleScale = d3.scale.linear().range([0, 2 * Math.PI]);\n        var ringRadiusScale = d3.scale.linear().range([0, radius]);\n\n        var svg = d3.select(\"#viz\").append(\"svg\")\n            .attr({width: width, height: height});\n        \n        var container = svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height * .52 + \")\");\n\n        var partition = d3.layout.partition().sort(null).value(valueAccessor);\n        var nodes = partition.nodes(dataRoot);\n\n        var arc = d3.svg.arc()\n          .startAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, angleScale(d.x))); })\n          .endAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, angleScale(d.x + d.dx))); })\n          .innerRadius(function(d) { return Math.max(0, ringRadiusScale(d.y)); })\n          .outerRadius(function(d) { return Math.max(0, ringRadiusScale(d.y + d.dy)); });\n\n        var path = container.selectAll(\"path\")\n            .data(nodes)\n          .enter().append(\"path\")\n            .attr(\"display\", function(d) { return d.depth ? null : \"none\"; }) // hide inner ring\n            .attr(\"d\", arc)\n            .style(\"fill\", function(d) { return color((d.children ? d : d.parent).name); });\n\n        return {\n          addToRadius: function(radiusChange) {\n            radius += radiusChange;\n            ringRadiusScale.range([0, radius]);\n            // leave all data the same but redraw arcs based on new radius\n            path.transition().attr('d', arc);\n          }\n        }\n      }\n\n      d3.select(self.frameElement).style(\"height\", \"600px\");\n    });\n\n\n    function larger() {\n      charts.forEach(function(chart) {\n        chart.addToRadius(20);\n      });\n    }\n\n    function smaller() {\n      charts.forEach(function(chart) {\n        chart.addToRadius(-20);\n      });\n    }\n  </script>\n</body>\n</html>", "description": "d3.layout.partition workaround", "created_at": "2014-06-30T22:11:01Z", "updated_at": "2015-08-29T14:03:17Z", "api": ["d3.json", "d3.scale.category20c", "d3.scale.linear", "d3.select", "d3.layout.partition", "d3.svg.arc"], "readme": "Workaround for issue described in [this example](http://bl.ocks.org/explunit/ab8cf15534f7fec5ac6d), uses Lodash `cloneDeep` to make each chart have it's own copy of the data.", "uid": "explunit_e9efb830439247eea1be"}, {"code": "  <!DOCTYPE html>\n  <html>\n    <head>\n      <meta charset=utf-8 />\n      <title>Leaflet, Mapbox and D3JS test</title>\n      <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />\n      <script src='https://api.tiles.mapbox.com/mapbox.js/v2.0.1/mapbox.js'></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.11/d3.min.js\"></script>\n      <link href='https://api.tiles.mapbox.com/mapbox.js/v2.0.1/mapbox.css' rel='stylesheet' />\n      <style>\n        \n        body { margin:0; padding:0; }\n        \n        #map { \n          width: 1200px;\n          height: 800px;\n          margin: 50px auto;\n        }\n\n        svg { \n          position: relative; \n        }\n\n        path {\n          fill: #000;\n          fill-opacity: 0;\n          stroke: #fff;\n          stroke-width: 1.5px;\n        }\n\n        path:hover {\n          fill: hsl(340, 50%, 50%);\n          fill-opacity: .4;\n        }\n\n      </style>\n    </head>\n    <body>\n\n      <div id='map'></div>\n\n      <script>\n\n        /********************************************************\n          MapBox JS code credit: \n          https://www.mapbox.com/mapbox.js/example/v1.0.0/plain-leaflet/  \n        ********************************************************/\n        \n        var mapboxTiles = L.tileLayer('https://{s}.tiles.mapbox.com/v3/chenrick.k94zehfr/{z}/{x}/{y}.png');\n\n        var params = {\n          center: [0,0],\n          minZoom: 2, \n          maxZoom: 4,\n          zoom: 3,        \n        };\n\n        var map = L.map('map', params)\n            .addLayer(mapboxTiles);\n\n        /********************************************************\n          D3 JS code credit: http://bost.ocks.org/mike/leaflet/  \n        ********************************************************/\n\n        /* set up the svg object in realtionship to the Leaflet map */\n        var svg = d3.select(map.getPanes().overlayPane).append(\"svg\"),\n              g = svg.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\");\n\n        d3.json(\"ne_10m_time_zones.json\", function(collection) {\n          \n          console.log(\"collection: \", collection);\n\n          var transform = d3.geo.transform({point: projectPoint}),\n                path = d3.geo.path().projection(transform);\n\n          var feature = g.selectAll(\"path\")\n                .data(collection.features)\n              .enter().append(\"path\");\n          \n          map.on(\"viewreset\", reset);\n          reset();\n\n          function reset(){\n            var bounds = path.bounds(collection),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];    \n\n            svg .attr(\"width\", bottomRight[0] - topLeft[0])\n                  .attr(\"height\", bottomRight[1] - topLeft[1])\n                  .style(\"left\", topLeft[0] + \"px\")\n                  .style(\"top\", topLeft[1] + \"px\");\n\n            g   .attr(\"transform\", \"translate(\" + -topLeft[0] + \",\" + -topLeft[1] + \")\");\n\n            feature.attr(\"d\", path);\n          }             \n\n          function projectPoint(x, y) {\n            var point = map.latLngToLayerPoint(new L.LatLng(y, x));\n            this.stream.point(point.x, point.y);\n          }\n\n        });\n\n      </script>\n\n    </body>\n  </html>", "description": "Leaflet + D3 test", "created_at": "2014-08-16T01:45:00Z", "updated_at": "2015-08-29T14:05:22Z", "api": ["d3.select", "d3.json", "d3.geo.transform", "d3.geo.path"], "readme": "", "uid": "clhenrick_dd664d262a4c3fbe02b9"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Canvas ImageData Zoom</title>\n<style>\nbody {\n  position: relative;\n}\n\nsvg,\ncanvas {\n    position: absolute;\n}\n\n.axis text {\n    font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<body>\n<script>\n\nvar margin = {top: 10, right: 10, bottom: 20, left: 30},\n    width = 600,\n    height = 400;\n\nvar ctx;\nvar imageObj = new Image();\n\nvar x = d3.scale.linear()\n    .domain([0, width])\n    .range([0, width]);\n\n\nvar y = d3.scale.linear()\n    .domain([0, height])\n    .range([height, 0]);\n\nvar xmin = x.domain()[0];\nvar xmax = x.domain()[1];\nvar ymin = y.domain()[0];\nvar ymax = y.domain()[1];\n    \nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n    \nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n    \nvar zoom = d3.behavior.zoom()\n        .x(x)\n        .y(y)\n        .scaleExtent([1, 10])\n        .on(\"zoom\", refresh);\n\nvar color = d3.scale.linear()\n        .domain([95, 115, 135, 155, 175, 195])\n        .range([\"#0a0\", \"#6c0\", \"#ee0\", \"#eb4\", \"#eb9\", \"#fff\"]);\n\nvar canvas = d3.select(\"body\").append(\"canvas\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        .style(\"left\", margin.left + \"px\")\n        .style(\"top\", margin.top + \"px\")\n        .style(\"width\", width + \"px\")\n        .style(\"height\", height + \"px\")\n        .style(\"position\", \"absolute\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// We make an invisible rectangle to intercept mouse events for zooming.\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .style(\"fill\", \"000\")\n    .style(\"opacity\", 1e-6)\n    .call(zoom);\n\nsvg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .call(removeZero);\n\nsvg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis)\n        .call(removeZero);\n\n// Keep an eye out for \"translateExtent\" or \"xExtent\" methods that may be\n// added at some point to bound the limits of zooming and panning. Until then,\n// this works.\nfunction refresh() {\n    var t = zoom.translate();\n    var s = zoom.scale();\n    var tx = t[0],\n        ty = t[1];\n    var xdom = x.domain();\n    var reset_s = 0;\n    if ((xdom[1] - xdom[0]) >= (xmax - xmin)) {\n        zoom.x(x.domain([xmin, xmax]));\n        xdom = x.domain();\n        reset_s = 1;\n    }\n    var ydom = y.domain();\n    if ((ydom[1] - ydom[0]) >= (ymax - ymin)) {\n        zoom.y(y.domain([ymin, ymax]));\n        ydom = y.domain();\n        reset_s += 1;\n    }\n    if (reset_s == 2) { // Both axes are full resolution. Reset.\n        zoom.scale(1);\n        tx = 0;\n        ty = 0;\n    }\n    else {\n        if (xdom[0] < xmin) {\n            tx = 0;\n            x.domain([xmin, xdom[1] - xdom[0] + xmin]);\n            xdom = x.domain();\n        }\n        if (xdom[1] > xmax) {\n            xdom[0] -= xdom[1] - xmax;\n            tx = -xdom[0]*width/(xmax-xmin)*s;\n            x.domain([xdom[0], xmax]);\n        }\n        if (ydom[0] < ymin) {\n            y.domain([ymin, ydom[1] - ydom[0] + ymin]);\n            ydom = y.domain();\n            ty = -(ymax-ydom[1])*height/(ymax-ymin)*s;\n        }\n        if (ydom[1] > ymax) {\n            ydom[0] -= ydom[1] - ymax;\n            ty = 0;\n            y.domain([ydom[0], ymax]);\n        }\n    }\n    // Reset (possibly) if hit an edge so that next focus event starts correctly.\n    zoom.translate([tx, ty]);\n\n    ctx.drawImage(imageObj, \n        tx*imageObj.width/width, ty*imageObj.height/height,\n        imageObj.width*s, imageObj.height*s);\n    svg.select(\".x.axis\").call(xAxis).call(removeZero);\n    svg.select(\".y.axis\").call(yAxis).call(removeZero);\n}\n\nfunction removeZero(axis) {\n    axis.selectAll(\"g\").filter(function(d) { return !d; }).remove();\n}\n\nd3.json(\"heatmap.json\", function(error, heatmap) {\n    xmax = heatmap[0].length,\n    ymax = heatmap.length;\n    x.domain([0, xmax]);\n    y.domain([0, ymax]);\n    d3.select(\"canvas\")\n        .attr(\"width\", xmax)\n        .attr(\"height\", ymax)\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        .call(drawImage);\n\n  // Compute the pixel colors; scaled by CSS.\n    function drawImage(canvas) {\n        ctx = canvas.node().getContext(\"2d\");\n        var img = ctx.createImageData(xmax, ymax);\n        for (var y = 0, p = -1; y < ymax; ++y) {\n            for (var x = 0; x < xmax; ++x) {\n                var c = d3.rgb(color(heatmap[y][x]));\n                img.data[++p] = c.r;\n                img.data[++p] = c.g;\n                img.data[++p] = c.b;\n                img.data[++p] = 255;\n            }\n        }\n        ctx.putImageData(img, 0, 0);\n        imageObj.src = canvas.node().toDataURL();\n    }\n});\n</script>\n", "description": "D3 Zoomable ImageData", "created_at": "2013-12-20T02:14:34Z", "updated_at": "2015-12-31T21:49:16Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.behavior.zoom", "d3.select", "d3.json", "d3.rgb"], "readme": "Implements constrained zooming of an image constructed from a data-driven\nImageData object placed onto an HTML5 Canvas. Borrows heavily from \nhttps://gist.github.com/mbostock/3074470.", "uid": "tommct_8049508"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n    text {text-anchor: middle;}\n    .bingoChips {fill: white; color: black;}\n    .bingoChips text {fill: black;}\n    .chosen {fill: grey; color: white}\n    .chosen text {fill: white;}\n  </style>\n</head>\n\n<body>\n  <script>\n    var margin = {top: 20, right: 25, bottom: 20, left: 25};\n    var width = 100 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    var svg = d3.select(\"body\").append(\"svg\")\n    \t.attr(\"width\", width + margin.left + margin.right)\n     \t.attr(\"height\", height + margin.top + margin.bottom)\n    \t.append(\"g\")\n      \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n       \n    // if you add the URL, then when you click on it it will redirect to that URL\n    var bingoBlocks = [\n  \t\t{goal:\"data defines color\", url: \"\"},\n  \t\t{goal:\"data defines position\", url: \"\"},\n  \t\t{goal:\"use circles\", url: \"\"},\n  \t\t{goal:\"use rect\", url: \"\"}, \n  \t\t{goal:\"data defines text size\", url: \"\"}, \n  \t\t{goal:\"data defines angle\", url: \"\"}, \n  \t\t{goal:\"use Math.random\", url: \"\"},\n  \t\t{goal:\"bar chart, from scratch\", url: \"\"},\n      {goal:\"use trig functions\", url: \"\"},\n  \t\t{goal:\"freespace!\", url: \"http://bl.ocks.org/kenpenn/raw/9476266/\"},\n  \t\t{goal:\"use polygon\", url: \"\"}, \n  \t\t{goal:\"gantt chart, from scratch\", url: \"\"},\n  \t\t{goal:\"data defines area\", url: \"\"}, \n  \t\t{goal:\"pie chart, from scratch\", url: \"\"}, \n  \t\t{goal:\"mouse pos defines size\", url: \"\"}, \n  \t\t{goal:\"data defines stroke-width\", url: \"\"},\n  \t]\n\n  \tvar regEx = /(\\w+)\\/(\\w+)/\n\n  \ttoggleOnClick = function(d, element){\n  \t\tif(d.url)\n  \t\t\twindow.open(d.url, target=\"_blank\")\n  \t\telse\n\t\t\td3.select(element).classed(\"chosen\", !d3.select(element).classed(\"chosen\"));\n  \t}\n\n    // Feel free to change or delete any of the code you see!\n    var chips = svg.selectAll(\".bingoChips\")\n    \t.data(bingoBlocks)\n    \t.enter()\n    \t\t.append(\"g\")\n    \t\t.attr(\"class\", \"bingoChips\")\n    \t\t.classed(\"chosen\", function(d){\n    \t\t\tif(d.url != \"\")\n    \t\t\t\treturn true\n    \t\t})\n    \t\t.on(\"click\", function(d){toggleOnClick(d, this)})\n    \t\t.attr(\"transform\", function(d, i){return \"translate(\" + (i % 4)*230 + \",\" + Math.floor(i / 4)*110 + \")\"});\n\n    chips.append(\"rect\")\n        .attr(\"height\", 100)\n        .attr(\"width\", 220)\n        .attr(\"stroke\", \"grey\")\n        .attr(\"stroke-width\", 2)\n\n    chips.append(\"text\")\n    \t.attr({x: 110, y:50})\n    \t.text(function(d){return d.goal})\n    \n  </script>\n</body>\n", "description": "D3 Challenges (WIP)", "created_at": "2015-11-07T06:21:34Z", "updated_at": "2015-11-08T18:44:29Z", "api": ["d3.select"], "readme": "", "uid": "zanarmstrong_248c97c602bb8f883f99"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.line {\n  fill: none;\n  stroke: steelblue;\n  stroke-width: 1.5px;\n}\n\n.legend rect {\n  fill:white;\n  stroke:black;\n  opacity:0.8;}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<script src=\"d3.legend.js\"></script>\n<script>\n\n\nvar margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (\u00baF)\");\n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .attr(\"data-legend\",function(d) { return d.name})\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name; });\n\n\n  legend = svg.append(\"g\")\n    .attr(\"class\",\"legend\")\n    .attr(\"transform\",\"translate(50,30)\")\n    .style(\"font-size\",\"12px\")\n    .call(d3.legend)\n\n  setTimeout(function() { \n    legend\n      .style(\"font-size\",\"20px\")\n      .attr(\"data-style-padding\",10)\n      .call(d3.legend)\n  },1000)\n\n});\n\n</script>", "description": "d3.legend example", "created_at": "2012-10-19T13:59:56Z", "updated_at": "2016-05-20T00:21:41Z", "api": ["d3.select", "d3.entries", "d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "## d3.legend \n\nd3.legend is a quick hack to add a legend to a `d3` chart.  Simply add a `g` and `.call(d3.legend)`.  Any elements that have a title set in the `\"data-legend\"` attribute will be included when `d3.legend` is called.  Each title will appear only once (even when multiple items define the same data-legend) as the process uses a set based on a existing names, not an array of all items.\n\n### Color\nBy default the color in the legend will try to match the fill attribute or the stroke attribute of the relevant items.  Color can be explicitly defined by attribute `\"data-legend-color\"`\n\n### Order\nThe order of items in the legend will be sorted using the top of the bounding box for each included item.  The order can be explicitly defined by attribute `\"data-legend-pos\"`\n\n### Padding\nPadding will be determined by attribute `\"data-style-padding\"` on the legend element.\nDefaults to  5.\n\n### Size\nSize of the box is determined by font size, as items are placed using `\"em\"` and the frame around the items is based on the bounding box.\n\n### This Example\nThis example takes an existing Gist and adds a legend by defining data-legend for each series and calling `d3.legend` on a `\"g\"` element.   To show the font-adjustment I change font-size after one second and call `d3.legend` again.\n\n\n## d3.legend \n\nd3.legend is a quick hack to add a legend to a `d3.graph`.  Simply add a `g` and `.call(d3.legend)`.  Any elements that has a title set in the `\"data-legend\"` attribute set will be included, when `d3.legend` is called.  Each title  will appear only once as the process uses a set based on a existing names, not an array of all items.\n\n### Color\nBy default the color in the legend will try to match the fill attribute or the stroke attribute of the relevant items.  Color can be explicitly defined by attribute `\"data-legend-color\"`\n\n### Order\nThe order of items in the legend will be sorted using the top of the bounding box for each included item.  The order can be explicitly defined by attribute `\"data-legend-pos\"`\n\n### Padding\nPadding will be determined by attribute `\"data-style-padding\"` on the legend element.\nDefaults to  5.\n\n### Size\nSize of the box is determined by font size, as items are placed using `\"em\"` and the frame around the items is based on the bounding box.\n\n### This Example\nThis example takes an existing Gist and adds a legend by defining data-legend for each series:\n```\n .attr(\"data-legend\",function(d) { return d.name})\n```\n\nAdding the legend is as simple as:\n```javascript\nlegend = svg.append(\"g\")\n  .attr(\"class\",\"legend\")\n  .attr(\"transform\",\"translate(50,30)\")\n  .style(\"font-size\",\"12px\")\n  .call(d3.legend)\n```\n\nTo show the font-adjustment I change font-size after one second and call `d3.legend` again.\n\n##Comments on the original gist\nThis line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape", "uid": "ZJONSSON_3918369"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v0.min.js\"></script>\n<style>\n\n.background {\n  fill: #a4bac7;\n}\n\n.foreground {\n  fill: none;\n  stroke: #333;\n  stroke-width: 1.5px;\n}\n\n.graticule {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.graticule :nth-child(2n) {\n  stroke-dasharray: 2,2;\n}\n\n.land {\n  fill: #d7c7ad;\n  stroke: #766951;\n}\n\n.boundary {\n  fill: none;\n  stroke: #a5967e;\n}\n\n</style>\n<body>\n  <div id=\"current_proj_info\"></div>\n  <div id=\"myDiv\"></div>\n  \n<script>\n\nvar width = 960,\n    height = 500;\n\nvar projection = d3.geo.mercator()\n    .scale(490);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar graticule = d3.geo.graticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"path\")\n    .datum(graticule.outline)\n    .attr(\"class\", \"background\")\n    .attr(\"d\", path);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"graticule\")\n  .selectAll(\"path\")\n    .data(graticule.lines)\n  .enter().append(\"path\")\n    .attr(\"d\", path);\n\nsvg.append(\"path\")\n    .datum(graticule.outline)\n    .attr(\"class\", \"foreground\")\n    .attr(\"d\", path);\n\nd3.json(\"/d/4090846/world-110m.json\", function(error, world) {\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.object(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a.id !== b.id; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n});\n\nset_projection(new Option(\"Mercator\", \"mercator\", false, false));\n\nfunction set_projection(option) {\n  proj = option.value\n\n  projection = eval(\"d3.geo.\"+proj+\"();\");\n\n  path = d3.geo.path()\n    .projection(projection);\n\n  svg.selectAll(\"path\").transition()\n      .duration(1000)\n       .attr(\"d\", path);\n  var link = \"https://github.com/mbostock/d3/wiki/Geo-Projections#wiki-\" + proj\n  d3.selectAll(\"div#current_proj_info\").html(\"Current projection: <a href=\\\"\"+link+\"\\\">\"+option.text+\"</a>\");\n}\n\nfunction projection_selected(e){\n  set_projection(e.target[e.target.selectedIndex])\n}\n\nvar newSelect = document.createElement(\"select\");\nnewSelect.id = \"selectlistid\"; // add some attributes\nnewSelect.onchange = projection_selected; // call the somethingChanged function when a change is made\nnewSelect[newSelect.length] = new Option(\"Aitoff\",\"aitoff\",false, false)\nnewSelect[newSelect.length] = new Option(\"Albers equal-area conic\",\"albers\",false, false);\nnewSelect[newSelect.length] = new Option(\"Armadillo\",\"armadillo\",false, false);\nnewSelect[newSelect.length] = new Option(\"August conformal\",\"august\",false, false);\nnewSelect[newSelect.length] = new Option(\"Lambert azimuthal equal-area\",\"azimuthalEqualArea\",false, false);\nnewSelect[newSelect.length] = new Option(\"azimuthal equidistant\",\"azimuthalEquidistant\",false, false);\nnewSelect[newSelect.length] = new Option(\"Baker Dinomic\",\"baker\",false, false);\nnewSelect[newSelect.length] = new Option(\"Berghaus Star\",\"berghaus\",false, false);\nnewSelect[newSelect.length] = new Option(\"Boggs eumorphic\",\"boggs\",false, false);\nnewSelect[newSelect.length] = new Option(\"Bonne\",\"bonne\",false, false);\nnewSelect[newSelect.length] = new Option(\"Bromley\",\"bromley\",false, false);\nnewSelect[newSelect.length] = new Option(\"Collignon\",\"collignon\",false, false);\nnewSelect[newSelect.length] = new Option(\"Lambert conformal conic\",\"conicConformal\",false, false);\nnewSelect[newSelect.length] = new Option(\"conic equidistant\",\"conicEquidistant\",false, false);\nnewSelect[newSelect.length] = new Option(\"Craig retroazimuthal\",\"craig\",false, false);\nnewSelect[newSelect.length] = new Option(\"Craster parabolic\",\"craster\",false, false);\nnewSelect[newSelect.length] = new Option(\"cylindrical equal-area, Gall\u2013Peters, Hobo\u2013Dyer, Tobler world-in-a-square\",\"cylindricalEqualArea\",false, false);\nnewSelect[newSelect.length] = new Option(\"Eckert I\",\"eckert1\",false, false);\nnewSelect[newSelect.length] = new Option(\"Eckert II\",\"eckert2\",false, false);\nnewSelect[newSelect.length] = new Option(\"Eckert III\",\"eckert3\",false, false);\nnewSelect[newSelect.length] = new Option(\"Eckert IV\",\"eckert4\",false, false);\nnewSelect[newSelect.length] = new Option(\"Eckert V\",\"eckert5\",false, false);\nnewSelect[newSelect.length] = new Option(\"Eckert VI\",\"eckert6\",false, false);\nnewSelect[newSelect.length] = new Option(\"Eisenlohr conformal\",\"eisenlohr\",false, false);\nnewSelect[newSelect.length] = new Option(\"Equirectangular (Plate Carr\u00e9e)\",\"equirectangular\",false, false);\nnewSelect[newSelect.length] = new Option(\"Fahey\",\"fahey\",false, false);\nnewSelect[newSelect.length] = new Option(\"gnomonic\",\"gnomonic\",false, false);\nnewSelect[newSelect.length] = new Option(\"Gringorten\",\"gringorten\",false, false);\nnewSelect[newSelect.length] = new Option(\"Guyou hemisphere-in-a-square\",\"guyou\",false, false);\nnewSelect[newSelect.length] = new Option(\"Hammer, Eckert\u2013Greifendorff, quartic authalic, Briesemeister\",\"hammer\",false, false);\nnewSelect[newSelect.length] = new Option(\"Hammer retroazimuthal\",\"hammerRetroazimuthal\",false, false);\nnewSelect[newSelect.length] = new Option(\"HEALPix\",\"healpix\",false, false);\nnewSelect[newSelect.length] = new Option(\"Hill eucyclic, Maurer No. 73\",\"hill\",false, false);\nnewSelect[newSelect.length] = new Option(\"Goode homolosine\",\"homolosine\",false, false);\nnewSelect[newSelect.length] = new Option(\"Kavrayskiy VII\",\"kavrayskiy7\",false, false);\nnewSelect[newSelect.length] = new Option(\"Lagrange conformal\",\"lagrange\",false, false);\nnewSelect[newSelect.length] = new Option(\"Larriv\u00e9e\",\"larrivee\",false, false);\nnewSelect[newSelect.length] = new Option(\"Laskowski tri-optimal\",\"laskowski\",false, false);\nnewSelect[newSelect.length] = new Option(\"Littrow\",\"littrow\",false, false);\nnewSelect[newSelect.length] = new Option(\"loximuthal\",\"loximuthal\",false, false);\nnewSelect[newSelect.length] = new Option(\"Mercator\",\"mercator\",false, true);\nnewSelect[newSelect.length] = new Option(\"Miller\",\"miller\",false, false);\nnewSelect[newSelect.length] = new Option(\"Mollweide, Atlantis\",\"mollweide\",false, false);\nnewSelect[newSelect.length] = new Option(\"McBryde\u2013Thomas flat-polar parabolic\",\"mtFlatPolarParabolic\",false, false);\nnewSelect[newSelect.length] = new Option(\"McBryde\u2013Thomas flat-polar quartic\",\"mtFlatPolarQuartic\",false, false);\nnewSelect[newSelect.length] = new Option(\"McBryde\u2013Thomas flat-polar sinusoidal\",\"mtFlatPolarSinusoidal\",false, false);\nnewSelect[newSelect.length] = new Option(\"Natural Earth\",\"naturalEarth\",false, false);\nnewSelect[newSelect.length] = new Option(\"Nell\u2013Hammer\",\"nellHammer\",false, false);\nnewSelect[newSelect.length] = new Option(\"orthographic\",\"orthographic\",false, false);\nnewSelect[newSelect.length] = new Option(\"Pierce quincuncial\",\"peirceQuincuncial\",false, false);\nnewSelect[newSelect.length] = new Option(\"Polyconic\",\"polyconic\",false, false);\nnewSelect[newSelect.length] = new Option(\"Robinson\",\"robinson\",false, false);\nnewSelect[newSelect.length] = new Option(\"satellite (tilted perpsective)\",\"satellite\",false, false);\nnewSelect[newSelect.length] = new Option(\"sinusoidal\",\"sinusoidal\",false, false);\nnewSelect[newSelect.length] = new Option(\"Sinu-Mollweide\",\"sinuMollweide\",false, false);\nnewSelect[newSelect.length] = new Option(\"stereographic\",\"stereographic\",false, false);\nnewSelect[newSelect.length] = new Option(\"Van der Grinten\",\"vanDerGrinten\",false, false);\nnewSelect[newSelect.length] = new Option(\"Van der Grinten II\",\"vanDerGrinten2\",false, false);\nnewSelect[newSelect.length] = new Option(\"Van der Grinten III\",\"vanDerGrinten3\",false, false);\nnewSelect[newSelect.length] = new Option(\"Van der Grinten IV\",\"vanDerGrinten4\",false, false);\nnewSelect[newSelect.length] = new Option(\"Wagner IV, Putni\u1e47\u0161 P2\u00b4\",\"wagner4\",false, false);\nnewSelect[newSelect.length] = new Option(\"Wagner VI\",\"wagner6\",false, false);\nnewSelect[newSelect.length] = new Option(\"Wagner VII\",\"wagner7\",false, false);\nnewSelect[newSelect.length] = new Option(\"Wiechel\",\"wiechel\",false, false);\nnewSelect[newSelect.length] = new Option(\"Winkel Tripel\",\"winkel3\",false, false);\ndocument.getElementById('myDiv').appendChild(newSelect); // myDiv is the container to hold the select list\n\n</script>\nFor more info <a href=\"https://github.com/mbostock/d3/wiki/Geo-Projections\">click here</a>.\n</body>\n</html>", "description": "D3 Morphing Map Projections", "created_at": "2013-02-08T16:00:34Z", "updated_at": "2015-12-12T07:49:04Z", "api": ["d3.geo.mercator", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.json", "d3.selectAll"], "readme": "", "uid": "mortenjohs_4739921"}, {"code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 Array of Tables Demo</title>\n  <!-- Author: Bo Ericsson, bo@boe.net -->\n  <link rel=stylesheet type=text/css href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/css/bootstrap.min.css\" media=\"all\">\n  <style>\n    body {\n      padding: 10px;\n      font-size: 12px;\n    }\n    .well {\n      padding-top: 0px;\n      padding-bottom: 0px;\n      width: 500px;\n    }\n    table {\n      font-size: 10px;\n      line-height: 10px;\n    }\n    td, th {\n      width: 33.3%;\n    }\n    label {\n      margin-bottom: 10px;\n    }\n  </style>\n<body>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js\"></script>\n<script>\n'use strict';\n\n// title div with label and button\nvar header = d3.select(\"body\").append(\"div\").attr(\"class\", \"well\");\n\nheader.append(\"h3\").text(\"Dynamic D3 Array of Tables Demo\");\n\nvar taskLabel = header.append(\"label\")\n    .attr(\"id\", \"taskLabel\")\n    .html(\"&nbsp;\");\n\nvar currTask = 0;\nvar taskButton = header.append(\"button\")\n    .attr(\"class\", \"btn btn-primary\")\n    .style(\"margin-bottom\", \"20px\")\n    .style(\"width\", \"100%\")\n    .style(\"text-align\", \"left\")\n    .text(\"Start\")\n    .on(\"click\", function() {\n      this.blur();\n      // execute the task\n      tasks[currTask]();\n      // next task\n      currTask = ++currTask % tasks.length;\n    })\n\n// container for array of tables\nvar tableDiv = d3.select(\"body\").append(\"div\").attr(\"id\", \"tableDiv1\");\n\n// initial data\nvar data;\nvar initialData = [\n  { table: \"Table1\", rows: [\n      { table: \"Table1\", row: \"Row1\", data: \"DataT1R1\" },\n      { table: \"Table1\", row: \"Row2\", data: \"DataT1R2\" }\n    ]\n  },\n  { table: \"Table2\", rows: [\n      { table: \"Table2\", row: \"Row1\", data: \"DataT2R1\" },\n      { table: \"Table2\", row: \"Row2\", data: \"DataT2R2\" },\n      { table: \"Table2\", row: \"Row3\", data: \"DataT2R3\" }\n    ]\n  },\n  { table: \"Table3\", rows: [\n      { table: \"Table3\", row: \"Row1\", data: \"DataT3R1\" },\n      { table: \"Table3\", row: \"Row2\", data: \"DataT3R2\" }\n    ]\n  },\n  { table: \"Table4\", rows: [\n      { table: \"Table4\", row: \"Row1\", data: \"DataT4R1\" },\n      { table: \"Table4\", row: \"Row2\", data: \"DataT4R2\" }\n    ]\n  }\n]\n\n// tasks\nfunction task0() {\n  // clear any existing tables (by providing an empty array)\n  update([]);\n\n  taskLabel.html(\"Cleared any existing tables\");\n  taskButton.text(\"Next step: Initial load of tables\");\n}\n\nfunction task1() {\n  // load initial tables\n  data = JSON.parse(JSON.stringify(initialData));\n  update(data);\n\n  taskLabel.text(\"Step 1: Initial tables loaded\");\n  taskButton.text(\"Next step: Add 4th row to Table 2\");\n}\n\nfunction task2() {\n  // add 4th row to table 2\n  data[1].rows.push({ table: \"Table2\", row: \"Row4\", data: \"DataT2R4\" });\n  update(data);\n\n  taskLabel.text(\"Step 2: Added 4th row to Table 2\");\n  taskButton.text(\"Next step: Delete first row of Table 3\");\n}\n\nfunction task3() {\n  // delete first row of table 3\n  data[2].rows.shift();\n  update(data);\n\n  taskLabel.text(\"Step 3: Deleted first row of Table 3\");\n  taskButton.text(\"Next step: Add Table 5 with 8 rows\");\n}\n\nfunction task4() {\n  // add table 5 with 8 rows\n  data.push(  \n    { table: \"Table5\", rows: [\n        { table: \"Table5\", row: \"Row1\", data: \"DataT5R1\" },\n        { table: \"Table5\", row: \"Row2\", data: \"DataT5R2\" },\n        { table: \"Table5\", row: \"Row3\", data: \"DataT5R3\" },\n        { table: \"Table5\", row: \"Row4\", data: \"DataT5R4\" },\n        { table: \"Table5\", row: \"Row5\", data: \"DataT5R5\" },\n        { table: \"Table5\", row: \"Row6\", data: \"DataT5R6\" },\n        { table: \"Table5\", row: \"Row7\", data: \"DataT5R7\" },\n        { table: \"Table5\", row: \"Row8\", data: \"DataT5R8\" }\n      ]\n    });\n  update(data);\n\n  taskLabel.text(\"Step 4: Added Table 5 with 8 rows\");\n  taskButton.text(\"Next step: Remove Table 4\");  \n}\n\nfunction task5() {\n  // remove table 4\n  data.splice(3, 1);\n  update(data);\n\n  taskLabel.text(\"Step 5: Removed Table 4\");\n  taskButton.text(\"Next step: Change data of row 1 of Table 1\")  ;\n}\n\nfunction task6() {\n  // change the content of row 1 of table 1\n  var item = data[0].rows[0].data;\n  data[0].rows[0].data = item + \" - Updated\";\n  update(data);\n\n  taskLabel.text(\"Step 6: Changed data of row 1 of Table 1\");\n  taskButton.text(\"Restart\") ;  \n}\n\n// task list (array of functions)\nvar tasks = [task0, task1, task2, task3, task4, task5, task6];\n\n\n// function in charge of the array of tables\nfunction update(data) {\n\n  // select all divs in the table div, and then apply new data \n  var divs = tableDiv.selectAll(\"div\")\n      // after .data() is executed below, divs becomes a d3 update selection\n      .data(data,                     // new data\n        function(d) { return d.table  // \"key\" function to disable default by-index evaluation\n      }) \n\n  // use the exit method of the d3 update selection to remove any deleted table div and contents (which would be absent in the data array just applied)\n  divs.exit().remove();\n\n  // use the enter metod of the d3 update selection to add new (\"entering\") items present in the data array just applied\n  var divsEnter = divs.enter().append(\"div\")\n      .attr(\"id\", function(d) { return d.table + \"Div\"; })\n      .attr(\"class\", \"well\")\n\n  // add title in new div(s)\n  divsEnter.append(\"h5\").text(function(d) { return d.table; });\n\n  // add table in new div(s)\n  var tableEnter = divsEnter.append(\"table\")\n      .attr(\"id\", function(d) { return d.table })\n      .attr(\"class\", \"table table-condensed table-striped table-bordered\")\n\n  // append table head in new table(s)\n  tableEnter.append(\"thead\")\n    .append(\"tr\")\n      .selectAll(\"th\")\n      .data([\"Table Name\", \"Row Number\", \"Data Contents\"]) // table column headers (here constant, but could be made dynamic)\n    .enter().append(\"th\")\n      .text(function(d) { return d; })\n\n  // append table body in new table(s)\n  tableEnter.append(\"tbody\");\n\n  // select all tr elements in the divs update selection\n  var tr = divs.select(\"table\").select(\"tbody\").selectAll(\"tr\")\n      // after the .data() is executed below, tr becomes a d3 update selection\n      .data(\n        function(d) { return d.rows; }, // return inherited data item\n        function(d) { return d.row }    // \"key\" function to disable default by-index evaluation\n      ); \n\n  // use the exit method of the update selection to remove table rows without associated data\n  tr.exit().remove();\n\n  // use the enter method to add table rows corresponding to new data\n  tr.enter().append(\"tr\");\n\n  // bind data to table cells\n  var td = tr.selectAll(\"td\")\n      // after the .data() is executed below, the td becomes a d3 update selection\n      .data(function(d) { return d3.values(d); });   // return inherited data item\n\n  // use the enter method to add td elements \n  td.enter().append(\"td\")               // add the table cell\n      .text(function(d) { return d; })  // add text to the table cell\n}\n\n\n</script>\n", "description": "D3 Dynamic Array of Tables", "created_at": "2015-09-26T17:09:49Z", "updated_at": "2016-05-18T15:27:40Z", "api": ["d3.select", "d3.values"], "readme": "## D3 Dynamic Array of Tables\n\nDemonstrates the the use of D3 to manage an array of tables. Via a button, the user will cycle through several steps which will mutate the underlying array of arrays, which at each step is fed to the table **update** function. For example, tables are added and removed from the array of tables, individual rows of tables are added and removed, and individual table cells are modified. The **update** function demonstrates the enter, exit and update patterns at the div/table level as well as at the table row level. \n\nFor **bl.ocks.org** users, the script should be viewed in its own window. See the script in action [here](http://bl.ocks.org/boeric/raw/e16ad218bc241dfd2d6e/)", "uid": "boeric_e16ad218bc241dfd2d6e"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - globe mode</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .reproject {\n    position: absolute;\n    z-index: 99;\n    left: 50px;\n    top: 250px;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    map.mode(\"globe\");\n\n    map.refresh();\n\n    wcLayer = d3.carto.layer.tile();\n    wcLayer\n    .tileType(\"stamen\")\n    .path(\"watercolor\")\n    .label(\"Watercolor\")\n    .visibility(true)\n\n    tonerLayer = d3.carto.layer.tile();\n    tonerLayer\n    .tileType(\"stamen\")\n    .path(\"toner\")\n    .visibility(false)\n    .label(\"Toner\")\n    \n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"SVG Borders\")\n    .cssClass(\"thickborders\")\n    .renderMode(\"svg\")\n    .on(\"load\", selectFeatures);\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(2)\n    .x(\"x\")\n    .y(\"y\");\n\n    map.addCartoLayer(wcLayer).addCartoLayer(tonerLayer).addCartoLayer(geojsonLayer).addCartoLayer(csvLayer);\n    \n      function selectFeatures() {\n\n    fNamedCountries = geojsonLayer.features().filter(function (d) {return d.properties.name.length < 6});\n\n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(fNamedCountries)\n    .label(\"featureArray\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\");\n\n      map.addCartoLayer(featureLayer);\n\n    }\n    \n    d3.select(\"#map\").append(\"button\").attr(\"class\", \"reproject\").html(\"Transform\").on(\"click\", reproject);\n    \n    function reproject() {\n      if (d3.select(\"button.reproject\").html() == \"Transform\") {\n        d3.select(\"button.reproject\").html(\"Projection\")\n        map.mode(\"transform\");\n        map.refresh();\n      }\n      else if (d3.select(\"button.reproject\").html() == \"Globe\") {\n        d3.select(\"button.reproject\").html(\"Transform\")\n        map.mode(\"globe\");\n        map.refresh();        \n      }\n      else {\n        d3.select(\"button.reproject\").html(\"Globe\")\n        map.mode(\"projection\");\n        map.refresh();        \n      }\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Stamen Tiles - d3.carto.map", "created_at": "2014-07-27T02:43:46Z", "updated_at": "2015-08-29T14:04:35Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.csv", "d3.carto.layer.featureArray"], "readme": "Various **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** modes with Stamen tiles from [http://maps.stamen.com/#toner/12/37.7706/-122.3782](http://maps.stamen.com/#toner/12/37.7706/-122.3782).\n\nClick the button to cycle through map modes to see the difference between Transform, Projection and Globe modes.", "uid": "emeeks_abcc82cc61c52fc47b19"}, {"code": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Step 1 - A Basic Pie Chart</title>\n    <link rel=\"stylesheet\" href=\"normalize.css\">\n  </head>\n  <body>\n    <div id=\"chart\"></div>\n    <script src=\"d3.v3.min.js\"></script>\n    <script>\n      (function(d3) {\n        'use strict';\n\n        var dataset = [\n          { label: 'Abulia', count: 10 }, \n          { label: 'Betelgeuse', count: 20 },\n          { label: 'Cantaloupe', count: 30 },\n          { label: 'Dijkstra', count: 40 }\n        ];\n\n        var width = 360;\n        var height = 360;\n        var radius = Math.min(width, height) / 2;\n\n        var color = d3.scale.category20b();\n\n        var svg = d3.select('#chart')\n          .append('svg')\n          .attr('width', width)\n          .attr('height', height)\n          .append('g')\n          .attr('transform', 'translate(' + (width / 2) + \n            ',' + (height / 2) + ')');\n\n        var arc = d3.svg.arc()\n          .outerRadius(radius);\n\n        var pie = d3.layout.pie()\n          .value(function(d) { return d.direction; })\n          .sort(null);\n\n        var path = svg.selectAll('path')\n          .data(pie(genes))\n          .enter()\n          .append('path')\n          .attr('d', arc)\n          .attr('fill', function(d, i) { \n            return color(d.data.label);\n          });\n\n      })(window.d3);\n    </script>\n  </body>\n</html>\n", "description": "junk ", "created_at": "2016-05-05T13:31:50Z", "updated_at": "2016-05-05T13:56:29Z", "api": ["d3.scale.category20b", "d3.select", "d3.svg.arc", "d3.layout.pie"], "readme": "Without modifying the information in genes.json, use D3 to construct a pie chart that shows the relative fraction of genes in the forward and reverse directions. Your code must dynamically generate the pie chart from the data. In other words, if I modify the genes.json data file, the pie chart must update automatically. (15 points)\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/53fe9d373ca3b3e20632f69c5169a59d'>final exam question 2</a>", "uid": "dunlapea_5391d815c7b36039adafde7b93750b0a"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<style>\n\n.map {\n  fill: none;\n  stroke: #777;\n  stroke-opacity: .5;\n  stroke-width: .5px;\n}\n\n.land {\n  fill: #999;\n}\n\n.boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n</style>\n\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"pathlayout.js\"></script>\n<script>\nvar width = 600,\n    height = 500;\n\nvar projection = d3.geo.mercator()\n    .scale(5*(width + 1) / 2 / Math.PI)\n    .translate([width / 2, height / 2])\n    .rotate([-125, -15, 0])\n    .precision(.1);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nd3.json(\"https://gist.githubusercontent.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/world-50m.json\", function(error, world) {\nd3.json(\"track.json\", function(error, track) {\n\n    var color_scale = d3.scale.quantile().domain([1, 5]).range(colorbrewer.YlOrRd[5]);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var trail = d3.layout.trail()\n        .positioner(function(d) {return projection([d.lon,d.lat]);})\n        .coordType('xy');\n\n    var trail_layout = trail.data(track).layout();\n\n    svg.insert(\"path\", \".map\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n    svg.insert(\"path\", \".map\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n\n    var hayan_trail = svg.selectAll(\"d\").data(trail_layout);\n\n    hayan_trail.enter()\n        .append('line')\n        .attr(\"x1\",function(d) {return d.x1}) \n        .attr(\"x2\",function(d) {return d.x1})\n        .attr(\"y1\",function(d) {return d.y1}) \n        .attr(\"y2\",function(d) {return d.y1}) \n        .attr(\"class\",\"line\")\n        .style(\"stroke-width\",4)\n        .attr(\"stroke\", function(d){return color_scale(d.class);})\n        .transition()\n        .ease(\"linear\")\n        .delay(function(d,i) {return i*500})\n        .duration(500)\n        .attr(\"x2\",function(d) {return d.x2})\n        .attr(\"y2\",function(d) {return d.y2}) \n    ;\n    \n});\n});\n</script>", "description": "D3 Trail Layout", "created_at": "2015-12-13T16:24:29Z", "updated_at": "2015-12-13T16:25:57Z", "api": ["d3.geo.mercator", "d3.geo.path", "d3.json", "d3.scale.quantile", "d3.select", "d3.layout.trail"], "readme": "Starte from http://bl.ocks.org/rveciana/2986e55a01c7008d4b5b\n\nStarted from http://bl.ocks.org/rveciana/2986e55a01c7008d4b5b\n\n\nThis an example using the [D3 trail layout](https://github.com/bmschmidt/D3-trail) made by [Benjamin Schmidt](https://github.com/bmschmidt).\nIn this case, the animated Hayian Typhoon track map is shown, with the colour changing with the typhoon class, as in [this example](http://bl.ocks.org/rveciana/10743959), but in an easier and cleaner way.\n\nThere is a blog entry explaining this example at [GeoExamples](http://geoexamples.blogspot.com/2014/07/using-d3-trail-layout-to-draw-hayian.html)\n\nforked from <a href='http://bl.ocks.org/rveciana/'>rveciana</a>'s block: <a href='http://bl.ocks.org/rveciana/2986e55a01c7008d4b5b'>D3 Trail Layout</a>", "uid": "espinielli_17f6644f79685c42eae5"}, {"code": "<!--\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n * http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * -->\n\n<html>\n\t<head>\n\t\t<title>Interactive Line Graph</title>\n\t\t<script src=\"http://d3js.org/d3.v2.js\"></script>\n\t\t<!-- \n\t\t\tusing JQuery for element dimensions\n\t\t\tThis is a small aspect of this example so it can be removed fairly easily if needed.\n\t\t-->\n\t\t<script src=\"http://code.jquery.com/jquery-1.7.2.min.js\"></script>\n\t\t<script src=\"sample_data.js\"></script>\n\t\t<script src=\"line-graph.js\"></script>\n\t\t<link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: \"Helvetica Neue\", Helvetica;\n\t\t\t}\n\t\t\t\t\t\n\t\t\tp {\n\t\t\t\tclear:both;\n\t\t\t\ttop: 20px;\n\t\t\t}\t\t\n\t\t\t\t\t\n\t\t\tdiv.aGraph {\n\t\t\t\tmargin-bottom: 30px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t<div id=\"graph1\" class=\"aGraph\" style=\"position:relative;width:100%;height:400px\"></div>\n\t\n\t<div id=\"graph2\" class=\"aGraph\" style=\"float:left;position:relative;width:49%;height:200px\"></div>\n\t<div id=\"graph3\" class=\"aGraph\" style=\"float:left;position:relative;width:49%;height:200px\"></div>\n\n\t<script>\n\t\t/* \n\t\t * If running inside bl.ocks.org we want to resize the iframe to fit both graphs\n\t\t */\n\t\t if(parent.document.getElementsByTagName(\"iframe\")[0]) {\n\t\t\t parent.document.getElementsByTagName(\"iframe\")[0].setAttribute('style', 'height: 650px !important');\n\t\t }\n\t\n\t\t /*\n\t\t * Note how the 'data' object is added to here before rendering to provide decoration information.\n\t\t * <p>\n\t\t * This is purposefully done here instead of in data.js as an example of how data would come from a server\n\t\t * and then have presentation information injected into it (rather than as separate arguments in another object)\n\t\t * and passed into LineGraph.\n\t\t *\n\t\t * Also, CSS can be used to style colors etc, but this is also doable via the 'data' object so that the styling\n\t\t * of different data points can be done in code which is often more natural for display names, legends, line colors etc\n\t\t */\n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data[\"displayNames\"] = [\"2xx\",\"3xx\",\"4xx\",\"5xx\"];\n\t\t data[\"colors\"] = [\"green\",\"orange\",\"red\",\"darkred\"];\n\t\t data[\"scale\"] = \"pow\";\n\t\t \n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data2[\"displayNames\"] = [\"2xx\",\"3xx\",\"4xx\",\"5xx\"];\n\t\t data2[\"colors\"] = [\"green\",\"orange\",\"red\",\"darkred\"];\n\t\t data2[\"scale\"] = \"linear\";\n\t\t \n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data3[\"displayNames\"] = [\"Data1\", \"Data2\"];\n\t\t data3[\"axis\"] = [\"left\", \"right\"];\n\t\t data3[\"colors\"] = [\"#2863bc\",\"#c8801c\"];\n\t\t data3[\"rounding\"] = [2, 0];\n\n\t\t // create graph now that we've added presentation config\n\t\tvar l1 = new LineGraph({containerId: 'graph1', data: data});\n\t\tvar l2 = new LineGraph({containerId: 'graph2', data: data2});\n\t\tvar l3 = new LineGraph({containerId: 'graph3', data: data3});\n\t\t\n\tsetInterval(function() {\n\t\t/*\n\t\t* The following will simulate live updating of the data (see dataA, dataB, dataC etc in data.js which are real examples)\n\t\t* This is being simulated so this example functions standalone without a backend server which generates data such as data.js contains.\n\t\t*/\n\t\t// for each data series ...\n\t\tvar newData = [];\n\t\tdata.values.forEach(function(dataSeries, index) {\n\t\t\t// take the first value and move it to the end\n\t\t\t// and capture the value we're moving so we can send it to the graph as an update\n\t\t\tvar v = dataSeries.shift();\n\t\t\tdataSeries.push(v);\n\t\t\t// put this value in newData as an array with 1 value\n\t\t\tnewData[index] = [v];\n\t\t})\n\t\t\n\t\t// we will reuse dataA each time\n\t\tdataA.values = newData;\n\t\t// increment time 1 step\n\t\tdataA.start = dataA.start + dataA.step;\n\t\tdataA.end = dataA.end + dataA.step; \n\t\t\t\t\t\n\t\tl1.slideData(dataA);\n\t}, 2000);\n\n\t\t\n\t</script>\n\n\n\n\t</body>\n</html>", "description": "Interactive Line Graph (D3)", "created_at": "2012-05-11T06:05:12Z", "updated_at": "2016-01-03T15:12:49Z", "api": ["d3.format", "d3.max", "d3.scale.pow", "d3.scale.log", "d3.scale.linear", "d3.svg.axis", "d3.time.scale", "d3.select", "d3.svg.line"], "readme": "", "uid": "benjchristensen_2657838"}, {"code": "<title>Crossfilter with d3.csv</title>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"crossfilter.js\"></script>\n<h3 id=\"loading\">Loading....</h3>\n<div>Number of rows: <span id=\"size\">0</span></div>\n<h3>Top Protein</h3>\n<ol id=\"protein-list\"></ol>\n<h3>Top Calcium</h3>\n<ol id=\"calcium-list\"></ol>\n<h3>Top Sodium</h3>\n<ol id=\"sodium-list\"></ol>\n<script>\nvar url = \"nutrients.csv\";\nvar numerics = [\"protein (g)\", \"calcium (g)\", \"sodium (g)\"];\n\nvar nutrients,\n    protein, calcium, sodium;\n\n// load the data from an external file\nd3.csv(url, function(data) {\n\n  // coerce numbers to floats, empty strings to null\n  data.forEach(function(d) {\n    numerics.forEach(function(dim) {\n      d[dim] = isNumber(d[dim]) ? parseFloat(d[dim]) : null;\n    });\n  });\n\n  // load data into crossfilter\n  nutrients = crossfilter(data);\n\n  // construct filtering dimensions\n  protein = nutrients.dimension(function(d) { return d[\"protein (g)\"]; });\n  calcium = nutrients.dimension(function(d) { return d[\"calcium (g)\"]; });\n  sodium = nutrients.dimension(function(d) { return d[\"sodium (g)\"]; });\n\n  // done loading\n  d3.select(\"#loading\").text(\"Loaded \" + url);\n\n  // display dataset size\n  d3.select(\"#size\").text(nutrients.size());\n\n  // display top K lists\n  renderTopList(protein, 6, \"#protein-list\");\n  renderTopList(calcium, 6, \"#calcium-list\");\n  renderTopList(sodium, 6, \"#sodium-list\");\n});\n\n// http://stackoverflow.com/a/1830844\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction renderTopList(dimension, count, selector) {\n  d3.select(selector).selectAll(\"li\")\n    .data(dimension.top(count))\n    .enter().append(\"li\")\n    .text(function(d) { return d.name });\n}\n</script>\n<style>\nbody {\n  font-size: 13px;\n  font-family: sans-serif;\n}\n</style>", "description": "Crossfilter with d3.csv", "created_at": "2015-09-08T07:42:50Z", "updated_at": "2015-09-08T07:42:50Z", "api": ["d3.csv", "d3.select"], "readme": "Loading data into a [crossfilter](http://square.github.com/crossfilter/) and with [d3.csv](https://github.com/mbostock/d3/wiki/CSV) and displaying a few [Top-K lists](https://github.com/square/crossfilter/wiki/API-Reference#wiki-dimension_top)\n\nData derived from the [USDA National Nutrient Database](http://www.ars.usda.gov/Services/docs.htm?docid=8964).\n\nforked from <a href='http://bl.ocks.org/syntagmatic/'>syntagmatic</a>'s block: <a href='http://bl.ocks.org/syntagmatic/5123745'>Crossfilter with d3.csv</a>", "uid": "renecnielsen_b9a0c2eafb1e655e0680"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.provincias {\n  fill: #ccc;\n  stroke: #fff;\n}\ndiv.tooltip {\n  position: absolute;\n  text-align: center;\n  width: 70px;\n\n  padding: 2px;\n  font: 12px sans-serif;\n  background: lightsteelblue;\n  border: 0px;\n  border-radius: 8px;\n  pointer-events: none;\n}\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3-composite-projections/0.3.5/conicConformalSpain-proj.min.js\"></script>\n<script>\nvar width = 960,\n    height = 500;\nvar colores = {\"PP\":\"#03a9e7\",\"PSOE\":\"#ff2f2e\",\"IU\":\"#149f27\",\"UPyD\":\"#d64b8c\",\"CiU\":\"#024c97\",\"Amaiur\":\"#b0d2e9\",\n\"PNV\":\"#0f7c2f\",\"ERC\":\"#f9d43f\",\"Comprom\u00eds\":\"#faddaa\",\"Podemos\":\"#82398a\",\"Ciudadanos\":\"#e28535\",\"Otros\":\"#e8e8e8\"};\n\nvar projection = d3.geo.conicConformalSpain()\n\nvar path = d3.geo.path()\n.projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar div = d3.select(\"body\").append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"opacity\", 0);\n\nd3.json(\"https://cdn.rawgit.com/rveciana/5919944/raw//provincias.json\", function(error, provincias) {\n  d3.json(\"https://cdn.rawgit.com/rveciana/5919944/raw//resultados.json\", function(error, resultados) {\n\n  var land = topojson.feature(provincias, provincias.objects.provincias);\n  svg.selectAll(\"path\")\n      .data(land.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .attr(\"fill\", function(d){\n\n        var ganador = Object.keys(resultados[d.properties.nombre])[0];\n\n        return colores[ganador];\n       })\n      .on(\"mouseover\", function(d) {\n            d3.select(this)\n                .transition()\n                .style(\"stroke-width\", 4);\n\n            div.transition()\n                .duration(200)\n                .style(\"opacity\", 0.9);\n            var resultados_provincia  = \"\";\n            var partido;\n            for (partido in resultados[d.properties.nombre]) {\n              resultados_provincia += partido + \": \" + resultados[d.properties.nombre][partido] + \"</br>\";\n            }\n            div.html(\"Resultados: <br/>\" + resultados_provincia)\n                .style(\"left\", (d3.event.pageX) + \"px\")\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            })\n        .on(\"mouseout\", function(d) {\n            d3.select(this)\n                .transition()\n                .style(\"stroke-width\", 0);\n            div.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        });\n\n        svg\n          .append(\"path\")\n            .style(\"fill\",\"none\")\n            .style(\"stroke\",\"#000\")\n            .attr(\"d\", projection.getCompositionBorders());\n  });\n  });\n\n</script>\n", "description": "d3-composite-projections conicConformalSpain", "created_at": "2015-05-11T15:23:13Z", "updated_at": "2016-03-01T10:57:43Z", "api": ["d3.geo.conicConformalSpain", "d3.geo.path", "d3.select", "d3.json"], "readme": "This file shows how to use the *conicConformalPortugal* projection from [d3-composite-projections](http://rveciana.github.io/d3-composite-projections/). The example is the same as [the one at this block](http://bl.ocks.org/rveciana/b62832e7b32f9afc779c), but with this new composite projection gives a much better result.", "uid": "rveciana_472b7749352554ca4b68"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.arc text {\n  font: 10px sans-serif;\n  text-anchor: middle;\n}\n\n.arc path {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(0);\n\nvar labelArc = d3.svg.arc()\n    .outerRadius(radius - 40)\n    .innerRadius(radius - 40);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.name; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  \t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.json(\"genes.json\", type, function(error, data) {\n  if (error) throw error;\n\n  var g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n  \t\t.style(\"fill\", function(d) {            \n            if (d.direction === \"forward\") {return \"#659EC7\"}  \n            else\t{return \"#837E7C\"}})\t\n  \t\t.style({stroke: \"black\"});\n  \n  g.append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + labelArc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.direction; });\n});\n\nfunction type(d) {\n  d.name = +d.name;\n  return d;\n}\n\n</script>\n  \n\n", "description": "final exam question 2", "created_at": "2016-05-05T13:45:44Z", "updated_at": "2016-05-05T14:11:17Z", "api": ["d3.svg.arc", "d3.layout.pie", "d3.select", "d3.json"], "readme": "Without modifying the information in genes.json, use D3 to construct a pie chart that shows the relative fraction of genes in the forward and reverse directions. Your code must dynamically generate the pie chart from the data. In other words, if I modify the genes.json data file, the pie chart must update automatically. (15 points)\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/53fe9d373ca3b3e20632f69c5169a59d'>final exam question 2</a>\n\nforked from <a href='http://bl.ocks.org/cheneymb/'>cheneymb</a>'s block: <a href='http://bl.ocks.org/cheneymb/5a49289b11fb8d3b19d2cebad37bc8b4'>final exam question 2</a>", "uid": "cheneymb_ba6c622f06d35d8fb75f84c4b68f2b45"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Constrained Zoom by Rectangle</title>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<style>\n\nbody {\n  font-family: sans-serif;\n}\n\n.noselect {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\nsvg {\n  font: 9pt sans-serif;\n  shape-rendering: crispEdges;\n}\n\nrect {\n  fill: #ddd;\n}\n\nrect.zoom {\n  stroke: steelblue;\n  fill: #bbb;\n  fill-opacity: 0.5;\n}\n\n.axis path, .axis line {\n  fill: none;\n  stroke: #fff;\n}\n\n</style>\n<p><label for=\"zoom-rect\"><input type=\"checkbox\" id=\"zoom-rect\"> zoom by rectangle</label>\n<script>\n\nvar margin = {top: 20, right: 12, bottom: 20, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 430 - margin.top - margin.bottom;\n\nvar xmin = 0,\n    xmax = 500,\n    ymin = 0,\n    ymax = 1;\n\nvar ynorm = d3.scale.linear().domain([ymin, ymax]);\n\nvar x = d3.scale.linear()\n    .domain([xmin, xmax])\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .domain([ymin, ymax])\n    .range([height, 0]);\n    \nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tickSize(-height); // Draw gridlines\n\n// Partition layout is used for getting the normalized tick locations at the\n// various depths of the hierarchy\nvar partition = d3.layout.partition()\n    .children(function(d) { return (d.sub) ? d.sub : null;})\n    .value(function(d) { return 1;}) // Size by number of entries\n    .sort(function(a,b){return a.name.localeCompare(b.name);});\n    \nvar nodes;\nd3.json(\"hierarchy.json\", function(json) {\n    nodes = partition.nodes(json);\n    ymax = nodes.filter(function(d){return d.depth==3;}).length;\n    y.domain([ymin, ymax]);\n\n    var zoom = d3.behavior.zoom().x(x).y(y).scaleExtent([.001, Infinity]).on(\"zoom\", refresh);\n\n    var chapter_x = nodes.filter(function(d){return d.depth==1;})\n            .map(function(d){return d.x*ymax;});\n    var chapter_names = nodes.filter(function(d){return d.depth==1;})\n            .map(function(d){return d.name;});\n    var chapter_scale = d3.scale.ordinal()\n            .domain(chapter_x)\n            .range(chapter_names);\n\n    var section_x = nodes.filter(function(d){return d.depth==2;})\n            .map(function(d){return d.x*ymax;});\n    var section_names = nodes.filter(function(d){return d.depth==2;})\n            .map(function(d){return d.parent.name + \".\" + d.name;});\n    var section_scale = d3.scale.ordinal()\n            .domain(section_x)\n            .range(section_names);\n    \n    var subsection_x = nodes.filter(function(d){return d.depth==3;})\n            .map(function(d){return d.x*ymax;});\n    var subsection_names = nodes.filter(function(d){return d.depth==3;})\n            .map(function(d){\n                return d.parent.parent.name + \".\" + d.parent.name + \".\" + d.name;\n            });\n    var subsection_scale = d3.scale.ordinal()\n            .domain(subsection_x)\n            .range(subsection_names);\n    \n    var yAxis = d3.svg.axis()\n            .scale(y)\n            .orient(\"left\")\n            .tickValues(function() {\n                var ydom = y.domain();\n                if ((ydom[1]-ydom[0]) > 0.25*ymax) {\n                    return chapter_x.filter(function(d){\n                        return ((d+.001>=ydom[0])&(d<=ydom[1]));\n                    });\n                } else if ((y.domain()[1]-y.domain()[0]) > 0.1*ymax) {\n                    return section_x.filter(function(d){\n                        return ((d+.001>=ydom[0])&(d<=ydom[1]));\n                    });\n                } else {\n                    return subsection_x.filter(function(d){\n                        return ((d+.001>=ydom[0])&(d<=ydom[1]));\n                    });\n                }\n            })\n            .tickFormat(function(d) {\n                var ydom = y.domain();\n                if ((ydom[1]-ydom[0]) > 0.25*ymax) {\n                    return chapter_scale(d);\n                } else if ((ydom[1]-ydom[0]) > 0.1*ymax) {\n                    return section_scale(d);\n                } else {\n                    return subsection_scale(d);\n                }\n            })\n    .tickSize(-width); // tickLine == gridline\n\n    var zoomRect = false;\n\n    d3.select(\"#zoom-rect\").on(\"change\", function() {\n        zoomRect = this.checked;\n    });\n\n    var svg = d3.select(\"body\").append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n          .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n            .call(zoom)\n          .append(\"g\")\n            .on(\"mousedown\", function() {\n                if (!zoomRect) return;\n                var e = this,\n                    origin = d3.mouse(e),\n                    rect = svg.append(\"rect\").attr(\"class\", \"zoom\");\n                d3.select(\"body\").classed(\"noselect\", true);\n                origin[0] = Math.max(0, Math.min(width, origin[0]));\n                origin[1] = Math.max(0, Math.min(height, origin[1]));\n                d3.select(window)\n                  .on(\"mousemove.zoomRect\", function() {\n                     var m = d3.mouse(e);\n                     m[0] = Math.max(0, Math.min(width, m[0]));\n                     m[1] = Math.max(0, Math.min(height, m[1]));\n                     rect.attr(\"x\", Math.min(origin[0], m[0]))\n                         .attr(\"y\", Math.min(origin[1], m[1]))\n                         .attr(\"width\", Math.abs(m[0] - origin[0]))\n                         .attr(\"height\", Math.abs(m[1] - origin[1]));\n                  })\n                  .on(\"mouseup.zoomRect\", function() {\n                     d3.select(window).on(\"mousemove.zoomRect\", null).on(\"mouseup.zoomRect\", null);\n                     d3.select(\"body\").classed(\"noselect\", false);\n                     var m = d3.mouse(e);\n                     m[0] = Math.max(0, Math.min(width, m[0]));\n                     m[1] = Math.max(0, Math.min(height, m[1]));\n                     if (m[0] !== origin[0] && m[1] !== origin[1]) {\n                         zoom.x(x.domain([origin[0], m[0]].map(x.invert).sort()))\n                             .y(y.domain([origin[1], m[1]].map(y.invert).sort()));\n                     }\n                     rect.remove();\n                     refresh();\n                  }, true);\n                d3.event.stopPropagation();\n            });\n\n    svg.append(\"rect\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n\n    svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis);\n\n    svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .call(yAxis);\n\n    function refresh() {\n        var t = zoom.translate();\n        var s = zoom.scale();\n        var tx = t[0],\n            ty = t[1];\n        var xdom = x.domain();\n        var reset_s = 0;\n        if ((xdom[1] - xdom[0]) >= (xmax - xmin)) {\n            zoom.x(x.domain([xmin, xmax]));\n            xdom = x.domain();\n            reset_s = 1;\n        }\n        var ydom = y.domain();\n        if ((ydom[1] - ydom[0]) >= (ymax - ymin)) {\n            zoom.y(y.domain([ymin, ymax]));\n            ydom = y.domain();\n            reset_s += 1;\n        }\n        if (reset_s == 2) { // Both axes are full resolution. Reset.\n            zoom.scale(1);\n            tx = 0;\n            ty = 0;\n        } else {\n            if (xdom[0] < xmin) {\n                tx = 0;\n                x.domain([xmin, xdom[1] - xdom[0] + xmin]);\n                xdom = x.domain();\n            }\n            if (xdom[1] > xmax) {\n                xdom[0] -= xdom[1] - xmax;\n                tx = -xdom[0]*width/(xmax-xmin)*s;\n                x.domain([xdom[0], xmax]);\n            }\n            if (ydom[0] < ymin) {\n                y.domain([ymin, ydom[1] - ydom[0] + ymin]);\n                ydom = y.domain();\n                ty = -(ymax-ydom[1])*height/(ymax-ymin)*s;\n            }\n            if (ydom[1] > ymax) {\n                ydom[0] -= ydom[1] - ymax;\n                ty = 0;\n                y.domain([ydom[0], ymax]);\n            }\n        }\n        // Reset (possibly) if hit an edge so that next focus event starts correctly.\n        zoom.translate([tx, ty]);\n        svg.select(\".x.axis\").call(xAxis);\n        svg.select(\".y.axis\").call(yAxis);\n    }\n});\n\n</script>", "description": "D3 Hierarchical Ordinal Ticks", "created_at": "2013-12-31T02:02:03Z", "updated_at": "2016-01-01T19:38:58Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.layout.partition", "d3.json", "d3.behavior.zoom", "d3.scale.ordinal", "d3.select", "d3.mouse", "d3.event.stopPropagation"], "readme": "This D3 example demonstrates constrained zooming, much like \nhttp://bl.ocks.org/tommct/5671250, but also illustrates the use of hierarchical\nordinal tick marks. It does this by using the normalized values that one gets\nwhen using a hierarchical partition layout.\n", "uid": "tommct_8191276"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Constrained Zoom by Rectangle</title>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.1\"></script>\n<style>\n\nbody {\n  font-family: sans-serif;\n}\n\n.noselect {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\nsvg {\n  font: 9pt sans-serif;\n  shape-rendering: crispEdges;\n}\n\nrect {\n  fill: #ddd;\n}\n\nrect.zoom {\n  stroke: steelblue;\n  fill: #bbb;\n  fill-opacity: 0.5;\n}\n\n.axis path, .axis line {\n  fill: none;\n  stroke: #fff;\n}\n\n</style>\n<p><label for=\"zoom-rect\"><input type=\"checkbox\" id=\"zoom-rect\"> zoom by rectangle</label>\n<script>\n\nvar margin = {top: 0, right: 12, bottom: 20, left: 60},\n    width = 960 - margin.left - margin.right,\n    height = 430 - margin.top - margin.bottom;\n\nvar xmin = 0,\n    xmax = 500,\n    ymin = 0,\n    ymax = 1000;\n\nvar x = d3.scale.linear()\n    .domain([xmin+.5, xmax+.5])\n    .range([0.5, width+.5]);\n\nvar y = d3.scale.linear()\n    .domain([ymin+.5, ymax+.5])\n    .range([height+.5, 0.5]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tickSize(-height);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(5)\n    .tickSize(-width); // tickLine == gridline\n\nvar refresh = function() {\n  var reset_s = 0;\n  if ((x.domain()[1] - x.domain()[0]) >= (xmax - xmin)) {\n    zoom.x(x.domain([xmin, xmax]));\n    reset_s = 1;\n  }\n  if ((y.domain()[1] - y.domain()[0]) >= (ymax - ymin)) {\n    zoom.y(y.domain([ymin, ymax]));\n    reset_s += 1;\n  }\n  if (reset_s == 2) { // Both axes are full resolution. Reset.\n    zoom.scale(1);\n    zoom.translate([0,0]);\n  }\n  else {\n    if (x.domain()[0] < xmin) {\n      x.domain([xmin, x.domain()[1] - x.domain()[0] + xmin]);\n    }\n    if (x.domain()[1] > xmax) {\n      var xdom0 = x.domain()[0] - x.domain()[1] + xmax;\n      x.domain([xdom0, xmax]);\n    }\n    if (y.domain()[0] < ymin) {\n      y.domain([ymin, y.domain()[1] - y.domain()[0] + ymin]);\n    }\n    if (y.domain()[1] > ymax) {\n      var ydom0 = y.domain()[0] - y.domain()[1] + ymax;\n      y.domain([ydom0, ymax]);\n    }\n  }\n  svg.select(\".x.axis\").call(xAxis);\n  svg.select(\".y.axis\").call(yAxis);\n}\n\nvar zoom = d3.behavior.zoom().x(x).y(y).scaleExtent([.001, Infinity]).on(\"zoom\", refresh);\n\nvar zoomRect = false;\n\nd3.select(\"#zoom-rect\").on(\"change\", function() {\n      zoomRect = this.checked;\n    });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    .call(zoom)\n  .append(\"g\")\n    .on(\"mousedown\", function() {\n      if (!zoomRect) return;\n      var e = this,\n          origin = d3.mouse(e),\n          rect = svg.append(\"rect\").attr(\"class\", \"zoom\");\n      d3.select(\"body\").classed(\"noselect\", true);\n      origin[0] = Math.max(0, Math.min(width, origin[0]));\n      origin[1] = Math.max(0, Math.min(height, origin[1]));\n      d3.select(window)\n          .on(\"mousemove.zoomRect\", function() {\n            var m = d3.mouse(e);\n            m[0] = Math.max(0, Math.min(width, m[0]));\n            m[1] = Math.max(0, Math.min(height, m[1]));\n            rect.attr(\"x\", Math.min(origin[0], m[0]))\n                .attr(\"y\", Math.min(origin[1], m[1]))\n                .attr(\"width\", Math.abs(m[0] - origin[0]))\n                .attr(\"height\", Math.abs(m[1] - origin[1]));\n          })\n          .on(\"mouseup.zoomRect\", function() {\n            d3.select(window).on(\"mousemove.zoomRect\", null).on(\"mouseup.zoomRect\", null);\n            d3.select(\"body\").classed(\"noselect\", false);\n            var m = d3.mouse(e);\n            m[0] = Math.max(0, Math.min(width, m[0]));\n            m[1] = Math.max(0, Math.min(height, m[1]));\n            if (m[0] !== origin[0] && m[1] !== origin[1]) {\n              zoom.x(x.domain([origin[0], m[0]].map(x.invert).sort(function(a,b) { return a - b;})))\n                  .y(y.domain([origin[1], m[1]].map(y.invert).sort(function(a,b) { return a - b;})));\n            }\n            rect.remove();\n            refresh();\n          }, true);\n      d3.event.stopPropagation();\n    });\n\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n</script>", "description": "D3 Bounded Zoom", "created_at": "2013-05-29T15:37:19Z", "updated_at": "2016-04-13T19:22:54Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.behavior.zoom", "d3.select", "d3.mouse", "d3.event.stopPropagation"], "readme": "This D3 example demonstrates using the *zoom* event and limits the bounds of the zooming\nto a specified domain. It is largely based on http://bl.ocks.org/jasondavies/3689931,\nbut with bounds. Most of this bounding is done in the *refresh* function. You need to zoom in before you can pan or zoom out.", "uid": "tommct_5671250"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Quadtree-based Feature Clustering - d3.carto</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    stroke: white;\n  }\n  \n  .clustered {\n    stroke: red;\n    fill: orange;\n  }\n  \n</style>\n<script>\n\n  function makeSomeMaps() {\n    pathSource = 0;\n\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    map.centerOn([-88,39],\"latlong\");\n    map.setScale(2);\n\n    clusterModal = d3.carto.modal();\n    clusterModal.formatter(clusterFormatter);\n\n    regionLayer = d3.carto.layer.geojson();\n    regionLayer\n    .path(\"world.geojson\")\n    .label(\"Countries\")\n    .cssClass(\"country\")\n    .renderMode(\"svg\")\n    .on(\"recluster\", recolorClusters)\n    .cluster(true);\n    \n    map.addCartoLayer(regionLayer);\n\n    map.refresh();\n    \n    function recolorClusters() {\n\n    regionLayer.clusterLayer()\n    .clickableFeatures(true)\n    .modal(clusterModal);\n\n    var clusterColor = d3.scale.category20b();\n    \n    regionLayer.clusterLayer().g()\n    .selectAll(\"path\")\n    .style(\"fill\", function(d,i) {return clusterColor(i%20)})\n    .style(\"stroke\", function(d,i) {return d3.rgb(clusterColor(i%20)).darker()})\n    }\n    \n        function clusterFormatter(d) {\n      var content = \"\";\n      if (d.properties.node) {\n        var content = \"<h1>Clustered Region</h1><p> (\"+d.properties.node._d3MapQuad.size + \" Countries)</p>\"\n        \n      }\n      else {\n        content = \"<h1>Country</h1><p>Name: \" + d.properties.name + \"</p>\"\n      }\n      return content;\n    }\n    \n  }\n  \n  \n  \n\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\">\n</div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>\n", "description": "Feature Clustering - d3.carto", "created_at": "2014-09-12T01:21:37Z", "updated_at": "2015-08-29T14:06:21Z", "api": ["d3.carto.map", "d3.select", "d3.carto.modal", "d3.carto.layer.geojson", "d3.scale.category20b", "d3.rgb"], "readme": "Quadtree-based feature clustering in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nThis is an early example of how using the quadtrees generated with each layer could also be used with feature layers. This allows you to dynamically aggregate features based on zoom. Polygons are colored by their shared grouping at different zoom levels. This version uses centroids--the final version will likely either use bounding box solely or give the option for both.\n\nSee also [simple point clustering](http://bl.ocks.org/emeeks/7d5925cb7d9721c60360) and [more advanced point clustering that leverages circle-packing](http://bl.ocks.org/emeeks/540b1b884b80b14a44c6).\n\nThis also uses a [custom formatter](http://bl.ocks.org/emeeks/905bb4f399e0855e08fe) for the infoboxes to give you the name of an unclustered feature and the number of features in a clustered region.", "uid": "emeeks_1a75ec54489368b514f8"}, {"code": "<!DOCTYPE html >\n<html >\n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"chrome=1\" />\n    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" />\n    <title>d3 x3dom demo</title>\n    <script type=\"text/javascript\" src=\"http://mbostock.github.com/d3/d3.js\"></script>\n    <script type=\"text/javascript\" src=\"http://x3dom.org/x3dom/example/x3dom.js\"></script>\n  </head>\n  <body>\n    <script>\n      function randomData() {\n        return d3.range(6).map( function() { return Math.random()*20; } )\n      };\n\n      x3d = d3.select(\"body\")\n                    .append(\"x3d\")\n                    .attr( \"height\", \"400px\" )\n                    .attr( \"width\", \"400px\" )\n                    ;\n      var scene = x3d.append(\"scene\");\n      scene.append(\"viewpoint\")\n           .attr( \"centerOfRotation\", \"3.75 0 10\")\n           .attr( \"position\", \"13.742265188709691 -27.453522975182366 16.816062840792625\" )\n           .attr( \"orientation\", \"0.962043810961999 0.1696342804961945 0.21376603254551874 1.379433089729343\" )\n           ;\n\n      function refresh( data ) {\n        shapes = scene.selectAll(\"transform\").data( data );\n        shapesEnter = shapes\n             .enter()\n             .append( \"transform\" )\n             .append( \"shape\" )\n             ;\n        // Enter and update\n        shapes.transition()\n              .attr(\"translation\", function(d,i) { return i*1.5 + \" 0.0 \" + d/2.0; } )\n              .attr(\"scale\", function(d) { return \"1.0 1.0 \" + d; } )\n              ;\n\n        shapesEnter\n            .append(\"appearance\")\n              .append(\"material\")\n              .attr(\"diffuseColor\", \"steelblue\" );\n\n        shapesEnter.append( \"box\" )\n          .attr( \"size\", \"1.0 1.0 1.0\" );\n      }\n\n      refresh( randomData() )\n      setInterval(\n        function(){\n          refresh( randomData() );\n        },\n        2500);\n\n    </script>\n  </body>\n</html>", "description": "d3 with x3dom Demo", "created_at": "2013-03-05T00:53:07Z", "updated_at": "2015-12-14T12:29:05Z", "api": ["d3.range", "d3.select"], "readme": "Here is a demonstration of integrating d3 and x3dom to create a 3d bar plot of dynamic data. This example demonstrates the power of the d3 approach -- using x3dom for 3d visualization is just as concise and conceptually simple as using svg for 2d graphics.\n\nUse your mouse to change the viewing angle, pan, and zoom.\n\nNotes\n-----\nFiguring out the correct viewport position and orientation was challenging and involved a lot of matrix math. See the wikipedia page for rotation matrices for hints.\n\n\nLinks\n-----\n\n * Live demo of this file: http://bl.ocks.org/camio/5087116\n * X3D Reference: http://www.web3d.org/files/specifications/19775-1/V3.3/index.html\n * x3dom site: http://www.x3dom.org/\n\nAuthors\n-------\nDavid Sankel & Harry Voorhees\nStellar Science\n", "uid": "camio_5087116"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n    <style>\n\n\n        </style>\n    <body>\n\n<svg class='keyer'></svg>\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n        <script src=\"d3.geo.zoom.js\"></script>\n        <script>\n\nd3.json(\"../world110.json\", function(err, world) {\n//  console.log(\"data\", world)\n  var countries = topojson.feature(world, world.objects.land);\n//  console.log(\"countries\", countries)\nvar width = 720\nvar height = 400\n//var projection = d3.geo.orthographic()\nvar projection = d3.geo.albers()\n//var projection = d3.geo.mercator()\n  .scale(170)\n  .rotate([100,0,0])\n  .translate([width/2, height/2])\n  .clipAngle(90);\n\nvar path = d3.geo.path()\n  .projection(projection);\n\nvar svg = d3.select('.keyer');\n\nsvg.attr('height',height).attr('width',width);\n\n\nsvg.append(\"path\")\n.datum(countries)\n  .attr(\"d\", path(countries))\n  .classed(\"land\", true)\n  .attr('fill','rgb(83, 207, 142)');\n\n\n  var graticule = d3.geo.graticule();\n\n  svg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path)\n    .attr(\"fill\", \"transparent\")\n    .attr(\"stroke\",\"grey\");\n\nvar zoom = d3.geo.zoom()\n  .projection(projection)\n  //.scaleExtent([projection.scale() *.7, projection.scale() *10])\n  .on(\"zoom.redraw\", function(){\n    d3.event.sourceEvent.preventDefault();\n    svg.selectAll(\"path\").attr(\"d\",path);\n  })\n  d3.selectAll('path')\n.call(zoom);\n\n\n})\n\n\n\n\n\n\n            </script>\n    </body>\n", "description": "d3.geo.zoom.js plugin first use", "created_at": "2014-07-27T21:06:18Z", "updated_at": "2015-08-29T14:04:36Z", "api": ["d3.dispatch", "d3.behavior.zoom", "d3.mouse", "d3.rebind", "d3.json", "d3.geo.orthographic", "d3.geo.albers", "d3.geo.mercator", "d3.geo.path", "d3.select", "d3.geo.graticule", "d3.geo.zoom", "d3.event.sourceEvent.preventDefault", "d3.selectAll"], "readme": "", "uid": "mpmckenna8_f43a842a8953e87f5b3c"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.states {\n  fill: #ccc;\n  stroke: #fff;\n}\n\n.symbol {\n  fill: steelblue;\n  fill-opacity: .8;\n  stroke: #fff;\n}\n\n.tooltip{ background-color:rgba(68,136,187,0.5);;\n          margin: 10px;\n          height: 50px;\n          width: 150px;\n          padding-left: 10px; \n          padding-top: 10px;\n    -webkit-border-radius:10px;\n    -moz-border-radius:10px;\n    border-radius:10px;\n        }\n</style>\n<body>\n<button type=\"button\" id=\"change\">Change</button>\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v0.min.js\"></script>\n<script src=\"http://d3js.org/queue.v1.min.js\"></script>\n<script type=\"text/javascript\" src=\"./tooltip.js\"></script>\n\n\n<script>\nvar width = 960,\n    height = 500;\nvar states, points;\n\n\nvar radius = d3.scale.sqrt()\n    .domain([0, 1e6])\n    .range([0, 10]);\n\nvar projection = d3.geo.mercator()\n    .center([-97, 37])\n    .scale(4000 / 2 / Math.PI)\n    .translate([width / 2, height / 2]);\n\n\nvar path = d3.geo.path()\n.projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nqueue()\n    .defer(d3.json, \"/mbostock/raw/4090846/us.json\")\n    .defer(d3.json, \"/mbostock/raw/3750900/us-state-centroids.json\")\n    .await(ready);\n\n\nfunction ready(error, us, centroid) {\nstates = svg.append(\"path\")\n      .attr(\"class\", \"states\")\n      .datum(topojson.object(us, us.objects.states))\n      .attr(\"d\", path);\n\n    points =  svg.selectAll(\".symbol\")\n      .data(centroid.features.sort(function(a, b) { return b.properties.population - a.properties.population; }))\n    .enter().append(\"path\")\n      .attr(\"class\", \"symbol\")\n      .attr(\"d\", path.pointRadius(function(d) { if(d.properties) { return radius(d.properties.population);} else {return;} }))\n      .call(d3.helper.tooltip(\n        function(d, i){\n          return \"<b>\"+d.properties.name + \"</b><br/>pop: \"+d.properties.population;\n        }\n        ));\n};\n\nd3.select(\"#change\").on(\"click\", function() {\n  projection = d3.geo.albers();\n  path.projection(projection);\n  states.transition()\n      .duration(10000)\n      .attr(\"d\", path);\n  points.transition()\n      .duration(3000)\n      .attr(\"d\", path);\n});\n\n\n</script>\n\n", "description": "D3 tutorial V: Adding tooltips", "created_at": "2013-03-17T11:12:35Z", "updated_at": "2015-12-15T01:39:02Z", "api": ["d3.scale.sqrt", "d3.geo.mercator", "d3.geo.path", "d3.select", "d3.helper.tooltip", "d3.geo.albers", "d3.mouse"], "readme": "This example belongs to [the presentation](rveciana.github.com/geoexamples/geoinquiets/d3js/index_en.html) made to the [OSGeo](http://www.osgeo.org/) local group in Barcelona [Geoinquiets](http://www.geoinquiets.cat/)\nThe example is an adaptation from [Mike Bostock](http://bost.ocks.org/mike/)'s [Symbol Map example](http://bl.ocks.org/mbostock/4342045)", "uid": "rveciana_5181105"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  p { width: 600px; margin-bottom: 30px; line-height: 1.7; }\n  .chart { shape-rendering: crispEdges; }\n  .axis text { font: 10px sans-serif; }\n  .axis line, .axis path { fill: none; stroke: black; }\n</style>\n<body>\n<h1>Generating regular time scale axis tick labels</h1>\n<p>By default the tick generator will generate adjacent ticks at month and year boundaries, leading to irregular tick spacing, as seen below.</p>\n<div class=\"irregular\"></div>\n<p>To solve this problem I've done two things: first, I've used <tt>tickValues()</tt> to display only every <em>n</em>th label<sup><a href=\"#thanks\">[1]</a></sup>; and second, calculating <em>n</em> based on the chart width and the label width. Here, I've hardcoded the label width to 40px. This works for me because my <tt>tickFormat</tt> is fixed. If you're using the default behavior, which sometimes prints \"December\" and sometimes \"2013\", a fixed value likely won't work for you.</p>\n<div class=\"regular\"></div>\n<hr>\n<p><sup name=\"thanks\">[1]</sup>Thanks to Adam Pearce for <a href=\"http://stackoverflow.com/questions/21296968/d3-time-scale-axis-ticks-are-irregular-on-year-boundaries\">this inspiration</a>.</p>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar start_date = \"2013-12-21T00:00:00Z\",\n    end_date   = \"2014-01-07T00:00:00Z\",\n    iso        = d3.time.format.iso,\n    t1         = iso.parse(start_date),\n    t2         = iso.parse(end_date);\n\nvar margin = {top: 0, right: 10, bottom: 20, left: 10},\n    width  = 600 - margin.left - margin.right,\n    height = 40 - margin.top - margin.bottom;\n\n\nvar x = d3.time.scale()\n    .domain([t1, t2])\n    .range([0, width])\n\nvar xAxisIrregular = d3.svg.axis()\n    .scale(x)\n\nvar svg = d3.select(\".irregular\").append(\"svg\")\n    .attr(\"class\", \"chart\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append('g')\n    .attr('class', 'x axis')\n    .call(xAxisIrregular)\n  .selectAll('text')\n    .attr('fill', function(d) { if(is_problematic(d)) { return \"red\"; } })\n\n/*****/\n\nvar interval = d3.time.day;\nvar LABEL_WIDTH = 40,\n    LABEL_FORMAT = d3.time.format('%b %_d');\nvar max_label_ct = width / LABEL_WIDTH,\n    label_skip = Math.ceil(interval.range(t1, t2).length / max_label_ct);\n\nvar xAxisRegular = d3.svg.axis()\n    .scale(x)\n    .tickValues(interval.range(t1, t2).filter(function(d, i) {\n      return !(i % label_skip); }))\n    .tickFormat(LABEL_FORMAT);\n\nvar svg2 = d3.select('.regular').append('svg')\n    .attr(\"class\", \"chart\")\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n  .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\nsvg2.append('g')\n    .attr('class', 'x axis')\n    .call(xAxisRegular);\n\n\nfunction is_problematic(d) {\n  return ((d.getDate() == 31) || (d.getDate() == 1));\n}\n</script>\n", "description": "D3 time axis tick trouble", "created_at": "2014-01-22T23:55:57Z", "updated_at": "2016-01-04T04:39:19Z", "api": ["d3.time.scale", "d3.svg.axis", "d3.select", "d3.time.format"], "readme": "", "uid": "benkimball_8570073"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.arc path {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(radius - 70);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.count; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.csv(\"data.csv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.population = +d.count;\n  });\n\n  var g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.data.range); });\n\n  g.append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return \"\" + d.data.range; });\n\n});\n\n</script>", "description": "", "created_at": "2013-10-31T14:59:27Z", "updated_at": "2015-12-27T02:19:03Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.csv"], "readme": "Estimated vs Actual CPU usage.", "uid": "JaapSuter_7251163"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.arc path {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 1000,\n    height = 700,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(radius - 200);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.Rate; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2  + \",\" + height / 2 + \")\");\n\nd3.csv(\"proj6.csv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.Rate = +d.Rate;\n  });\n\n  var g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.data.id); });\n\n  g.append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.data.id; });\n\n});\n\n</script>\n", "description": "2014-11-19-Michael-Pearlson-HW4(Part1)", "created_at": "2014-11-19T12:41:07Z", "updated_at": "2015-08-29T14:09:55Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.csv"], "readme": "", "uid": "mapearlson_116aa7e159d22d53f6d0"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Zoom + Pan</title>\n<style>\n\n.overlay {\n  fill: none;\n  pointer-events: all;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500;\n\nvar randomX = d3.random.normal(width / 2, 80),\n    randomY = d3.random.normal(height / 2, 80);\n\nvar data = d3.range(2000).map(function() {\n  return [\n    randomX(),\n    randomY()\n  ];\n});\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .call(d3.behavior.zoom().scaleExtent([1, 8]).on(\"zoom\", zoom))\n  .append(\"g\");\n\nsvg.append(\"rect\")\n    .attr(\"class\", \"overlay\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"circle\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"r\", 2.5)\n    .attr(\"transform\", function(d) { return \"translate(\" + d + \")\"; });\n\nfunction zoom() {\n  svg.attr(\"transform\", \"translate(\" + d3.event.translate + \")scale(\" + d3.event.scale + \")\");\n}\n\n</script>\n", "description": "D3 Zooming techniques", "created_at": "2015-02-20T08:18:24Z", "updated_at": "2015-08-29T14:15:48Z", "api": ["d3.random.normal", "d3.range", "d3.select", "d3.behavior.zoom"], "readme": "A series of related examples:\n\n* [Canvas geometric zooming](http://bl.ocks.org/3680958)\n* [Canvas semantic zooming](http://bl.ocks.org/3681006)\n* **SVG geometric zooming**\n* [SVG semantic zooming](http://bl.ocks.org/3680957)\n", "uid": "git-ashish_65d72d26368bd3bf75bf"}, {"code": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>Knight D3 Module 6</title>\n        <style>\n            body {\n                margin: 0;\n            }\n\n            .axis path, .axis line {\n              fill: none;\n              stroke: #000;\n              shape-rendering: crispEdges;\n            }\n\n            .line {\n                stroke: black;\n                stroke-width: 1px;\n                opacity: 0.5;\n                fill: none;\n            }\n\n            .line:hover {\n                stroke: red;\n                stroke-width: 2px;\n                opacity: 1;\n            }\n\n            .axis text, text.axis {\n                font-size: 12px;\n            }\n\n            text.centered {\n                text-anchor: middle;\n            }\n\n            h1, p, text {\n                font-family: avenir, sans-serif;\n            }\n\n            h1 {\n                font-weight: initial;\n                margin: 4px 50px;\n            }\n\n            p {\n                margin: 4px 50px;\n            }\n\n            text.label {\n                fill: red;\n                opacity: 0.7;\n                font-size: 12px;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>Women Living with HIV</h1>\n        <p>Shows total infant mortality rate in about 100 countries. <a href=http://noceilings.org/data>NoCeilings</a> series HIVNFEIN.</p>\n        <svg></svg>\n        <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n        <script>\n            var html_height = 125,\n                margin = {top: 20, right: 100, bottom: 35, left: 50},\n                width = 1000 - margin.left - margin.right,\n                height = 800 - margin.top - margin.bottom - html_height;\n\n            var dateFormat = d3.time.format(\"%Y\");\n            var years = d3.range(1995, 2012+1)\n\n            var x = d3.time.scale()\n                .domain([years[0], years[years.length-1]].map(function(d){return dateFormat.parse(\"\"+d)}))\n                .range([0, width]);\n\n            var y = d3.scale.linear()\n                .range([height, 0]);\n\n            var xAxis = d3.svg.axis()\n                .scale(x)\n                .orient(\"bottom\")\n                .tickFormat(dateFormat)\n\n            var yAxis = d3.svg.axis()\n                .scale(y)\n                .orient(\"left\")\n                .tickFormat(function(d){ return d/1e6 });\n\n            var line = d3.svg.line()\n                .x(function(d){return x(d.year)})\n                .y(function(d){return y(d.value)})\n\n            d3.csv(\"countries.csv\", function(err, countries_raw){\n                if (err) return console.error(err);\n                var countries = d3.map(countries_raw, function(d){return d.iso;})\n            d3.csv(\"HIVNFEIN.csv\", function(row){\n                row.years = years.map(function(year){\n                    return {year: dateFormat.parse(\"\"+year),\n                            value: +row[year]};\n                })\n                return row\n            }, function(err, data){\n                if (err) return console.error(err);\n\n                y.domain([0, d3.max(data, function(d){ return d3.max(d.years, function(d2){return d2.value}) })])\n\n                var svg = d3.select(\"svg\")\n                    .attr(\"width\", margin.left + width + margin.right)\n                    .attr(\"height\", margin.top + height + margin.bottom)\n                  .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\n                svg.append(\"g\")\n                    .attr(\"class\", \"x axis\")\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\n                    .call(xAxis);\n                svg.append(\"g\")\n                    .attr(\"transform\", \"rotate(270)\")\n                  .append(\"text\")\n                    .attr(\"x\", -height/2)\n                    .attr(\"y\", -30)\n                    .attr(\"class\", \"centered axis\")\n                    .text(\"Millions of women living with HIV\")\n\n                svg.append(\"g\")\n                    .attr(\"class\", \"y axis\")\n                    .call(yAxis)\n                svg.append(\"text\")\n                    .attr(\"x\", width/2)\n                    .attr(\"y\", height+30)\n                    .attr(\"class\", \"centered axis\")\n                    .text(\"Year\")\n\n                var text = svg.append(\"text\")\n                    .attr(\"class\", \"label\")\n                    .attr(\"x\", width)\n\n                svg.selectAll(\".line\")\n                   .data(data)\n                   .enter()\n                   .append(\"path\")\n                   .attr(\"d\", function(d){return line(d.years)})\n                   .attr(\"class\", \"line\")\n                   .on(\"mouseover\", function(d){\n                       text.text(countries.get(d.ISO).name);\n                       text.attr(\"y\", y(d[\"2012\"]))\n                   })\n                   .on(\"mouseout\", function(d){ text.text(\"\"); })\n                 .append(\"title\")\n                 .text(function(d){\n                     return d.ISO\n                 })\n            })\n            })\n\n        </script>\n    </body>\n</html>\n", "description": "Knight D3 Module 6", "created_at": "2015-04-22T14:54:31Z", "updated_at": "2015-08-29T14:19:41Z", "api": ["d3.time.format", "d3.range", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.csv", "d3.map", "d3.max", "d3.select"], "readme": "", "uid": "mgold_e21dbf08e838796dcf60"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 1.5;\n  shape-rendering: crispEdges;\n}\n \n \n.axis .minor {\n  stroke: red;\n  stroke-width: 1.0;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(16).tickSubdivide(3).tickSize(-60, -60, 0));\n \n</script>", "description": "d3 minor lines 5", "created_at": "2013-01-31T23:24:57Z", "updated_at": "2015-12-12T00:58:56Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "", "uid": "vjpgo_4687662"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 1.5;\n  shape-rendering: crispEdges;\n}\n \n \n.axis .minor {\n  stroke: red;\n  stroke-width: 0.6;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(16).tickSubdivide(3).tickSize(-60, -60, 0));\n \n</script>", "description": "d3 minor lines 6", "created_at": "2013-01-31T23:26:52Z", "updated_at": "2015-12-12T00:58:55Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "", "uid": "vjpgo_4687681"}, {"code": "<!DOCTYPE html>\n<html>\n <head>\n  <meta charset=\"utf-8\" />\n  <title>d3.js Axys Chart</title>\n  <!-- Always force latest IE rendering engine (even in intranet) & Chrome Frame\n  Remove this if you use the .htaccess -->\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n\n  <script  src=\"http://d3js.org/d3.v2.min.js?2.9.1\"></script>        <style>\n            .axis path, .axis line {\n                fill: none;\n                stroke: #000;\n                shape-rendering: crispEdges;\n            }\n        </style>\n</head><body><h3>d3.js Axys Chart    <a href=\"http://ramblings.mcpher.com\">(thanks so much to ramblings.mcpher.com)</a></h3>        <script>\n            var perfdata = new Array();\n\n            var margin = {top: 120, right: 60, bottom: 60, left: 60},\n                width = 1000 - margin.right - margin.left,\n                height = 550 - margin.top - margin.bottom;\n            \n            var x = d3.time.scale()\n                .range([0, width - 60]);\n            \n            var y = d3.scale.linear()\n                .range([height - 20, 0]);\n            \n            var duration = 1500,\n                delay = 500;\n            \n            var color = d3.scale.category10();\n            \n            var svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.right + margin.left)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n            \n            var parse = d3.time.format(\"%m/%d/%Y\").parse, format = d3.time.format(\"%Y\"),\n              perfdata = new Array();   \n         </script><script> var data = {\n   \"cDataSet\":[      {\n         \"date\":\"12/31/1990\",\n         \"portfolio\":\"0\",\n         \"sp500\":\"0\"\n      },\n      {\n         \"date\":\"12/31/1991\",\n         \"portfolio\":\"16.27\",\n         \"sp500\":\"30.47\"\n      },\n      {\n         \"date\":\"12/31/1992\",\n         \"portfolio\":\"7.99\",\n         \"sp500\":\"7.62\"\n      },\n      {\n         \"date\":\"12/31/1993\",\n         \"portfolio\":\"6.55\",\n         \"sp500\":\"10.08\"\n      },\n      {\n         \"date\":\"12/31/1994\",\n         \"portfolio\":\"0.44\",\n         \"sp500\":\"1.32\"\n      },\n      {\n         \"date\":\"12/31/1995\",\n         \"portfolio\":\"16.08\",\n         \"sp500\":\"37.58\"\n      },\n      {\n         \"date\":\"12/31/1996\",\n         \"portfolio\":\"11.56\",\n         \"sp500\":\"22.96\"\n      },\n      {\n         \"date\":\"12/31/1997\",\n         \"portfolio\":\"18.2\",\n         \"sp500\":\"33.36\"\n      },\n      {\n         \"date\":\"12/31/1998\",\n         \"portfolio\":\"13.98\",\n         \"sp500\":\"28.58\"\n      },\n      {\n         \"date\":\"12/31/1999\",\n         \"portfolio\":\"9.09\",\n         \"sp500\":\"21.04\"\n      },\n      {\n         \"date\":\"12/31/2000\",\n         \"portfolio\":\"0.13\",\n         \"sp500\":\"-9.1\"\n      },\n      {\n         \"date\":\"12/31/2001\",\n         \"portfolio\":\"-4.83\",\n         \"sp500\":\"-11.89\"\n      },\n      {\n         \"date\":\"12/31/2002\",\n         \"portfolio\":\"-7.81\",\n         \"sp500\":\"-22.1\"\n      },\n      {\n         \"date\":\"12/31/2003\",\n         \"portfolio\":\"16.2\",\n         \"sp500\":\"28.68\"\n      },\n      {\n         \"date\":\"12/31/2004\",\n         \"portfolio\":\"7.97\",\n         \"sp500\":\"10.88\"\n      },\n      {\n         \"date\":\"12/31/2005\",\n         \"portfolio\":\"5.57\",\n         \"sp500\":\"4.91\"\n      },\n      {\n         \"date\":\"12/31/2006\",\n         \"portfolio\":\"11.69\",\n         \"sp500\":\"15.79\"\n      },\n      {\n         \"date\":\"12/31/2007\",\n         \"portfolio\":\"6.92\",\n         \"sp500\":\"5.49\"\n      },\n      {\n         \"date\":\"12/31/2008\",\n         \"portfolio\":\"-25\",\n         \"sp500\":\"-37\"\n      },\n      {\n         \"date\":\"12/31/2009\",\n         \"portfolio\":\"19.92\",\n         \"sp500\":\"26.46\"\n      },\n      {\n         \"date\":\"12/31/2010\",\n         \"portfolio\":\"13.59\",\n         \"sp500\":\"15.06\"\n      },\n      {\n         \"date\":\"12/31/2011\",\n         \"portfolio\":\"-1.58\",\n         \"sp500\":\"2.11\"\n      }\n    ]\n };</script>        <script>\n                var inc = 0;\n            \n                data = data.cDataSet;\n                \n                data.forEach( function(d) {\n                    for (key in d) {\n                        if ( key != \"date\" ) {\n                            perfdata[inc]  = { date: parse(d.date) , perf : parseFloat(d[key]), symbol : key };\n                            inc = inc + 1;\n                        }\n                    };\n                });\n                  \n                //if we want to filter only some set of what is there\n                //stocks = perfdata.filter(function(d) { return d.symbol in filter; });\n                \n                // Nest stock values by symbol.\n                symbols = d3.nest()\n                  .key(function(d) { return d.symbol; })\n                  .entries(perfdata);\n                \n                // Parse dates and numbers. We assume values are sorted by date.\n                // Also compute the maximum price per symbol, needed for the y-domain.\n                //symbols.forEach(function(s) {\n                //    s.values.forEach(function(d) { d.date = parse(d.date); d.price = +d.price; });\n                //});\n                \n                // Sort by maximum price, descending.\n                //symbols.sort(function(a, b) { return b.maxPrice - a.maxPrice; });\n                \n                // Compute the minimum and maximum date across symbols.\n                x.domain([\n                    d3.min(symbols, function(d) { return d.values[0].date; }),\n                    d3.max(symbols, function(d) { return d.values[d.values.length - 1].date; })\n                ]);\n                \n                var g = svg.selectAll(\"g\")\n                    .data(symbols)\n                    .enter().append(\"g\")\n                        .attr(\"class\", \"symbol\");  \n                                \n            groupedBar();\n            \n            function groupedBar() {\n                  x = d3.scale.ordinal()\n                      .domain(symbols[0].values.map(function(d) { return d.date; }))\n                      .rangeBands([0, width - 60], .1);\n                \n                  var x1 = d3.scale.ordinal()\n                      .domain(symbols.map(function(d) { return d.key; }))\n                      .rangeBands([0, x.rangeBand()]);\n    \n                var y0 = Math.max(Math.abs(d3.min(symbols.map(function(d) { return d3.min(d.values.map(function(d) { return d.perf; })); }))), d3.max(symbols.map(function(d) { return d3.max(d.values.map(function(d) { return d.perf; })); })));                \n                y\n                    .domain([-y0, y0])\n                    //.domain([d3.min(symbols.map(function(d) { return d3.min(d.values.map(function(d) { return d.perf; })); })), d3.max(symbols.map(function(d) { return d3.max(d.values.map(function(d) { return d.perf; })); }))])\n                    .range([height, 0])\n                    .nice();\n                \n                var yAxis = d3.svg.axis().scale(y).orient(\"left\");                            \n\n                svg.selectAll(\".labels\")\n                    .data(symbols[0].values.map(function(d) { return d.date; }))\n                    .enter().append(\"text\")\n                        .attr(\"class\", \"labels\")\n                        .attr(\"text-anchor\", \"middle\")\n                        .attr(\"x\", function(d,i) { return x(i) + x.rangeBand() / 2 ; })\n                        .attr(\"y\", height / 2 + 15)\n                        .text(function(d) {return format(d) })\n                        .style(\"fill-opacity\", 1);\n\n                \n                  var g = svg.selectAll(\".symbol\");\n                \n                  var t = g.transition()\n                      .duration(duration);\n                      \n                    //got working with lots of help but this section particularly dedicated to http://stackoverflow.com/questions/10127402/bar-chart-with-negative-values\n                  g.each(function(p, j) {\n                    d3.select(this).selectAll(\"rect\")\n                        .data(function(d) { return d.values; })\n                      .enter().append(\"rect\")\n                        .attr(\"x\", function(d) { return x(d.date) + x1(p.key); })\n                        .attr(\"y\", function(d, i) { return y(Math.max(0, d.perf)); })                        \n                        //.attr(\"y\", function(d) { return y(d.perf); })\n                        .attr(\"width\", x1.rangeBand())\n                        .attr(\"height\", function(d, i) { return Math.abs(y(d.perf) - y(0)); })                        \n                        //.attr(\"height\", function(d) { return height - y(d.perf); })\n                        .style(\"fill\", color(p.key))\n                        .style(\"fill-opacity\", 1e-6)                    \n                      .transition()\n                        .duration(duration)\n                        .style(\"fill-opacity\", 1);\n                      \n                    d3.select(this).selectAll(\"text\")\n                        .data(function(d) { return d.values; })\n                        .enter().append(\"text\")\n                            .attr(\"x\", function(d) { return x(d.date) + x1(p.key) + x1.rangeBand() / 2 ; })\n                            .attr(\"y\", function(d, i) { return y(d.perf) ; })\n                            .attr(\"text-anchor\", \"middle\")                        \n                            .text(function(d) { return d.perf; })\n                            .style(\"fill-opacity\", 1e-6)                    \n                       .transition()\n                        .duration(duration)\n                        .style(\"fill-opacity\", 1);\n                  });            \n                        \n                    //svg.append(\"g\")\n                    //    .attr(\"class\", \"x axis\")\n                    //    .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n                    \n                    svg.append(\"g\")\n                        .attr(\"class\", \"y axis\")\n                        .call(yAxis);\n                    //    .attr(\"y1\", 0)\n                    //    .attr(\"y2\", height);\n                \n            }\n               \n        </script>\n   <br>\n  <footer>\n   <aside>\n   <small> works best on Chrome <br />acknowledgements</small>\n \n    <a href=\"http://d3js.org/\"><small>d3.js</small></a>\n   </aside>\n\n  </footer>\n </body>\n</html>\n", "description": "d3 Axys Integration", "created_at": "2012-07-13T18:19:41Z", "updated_at": "2016-04-26T11:00:23Z", "api": ["d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.select", "d3.time.format", "d3.nest", "d3.min", "d3.max", "d3.scale.ordinal", "d3.svg.axis"], "readme": "", "uid": "timelyportfolio_3106445"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  svg {\n    font: 10px sans-serif;\n  }\n  .bar rect {\n    fill: steelblue;\n    shape-rendering: crispEdges;\n  }\n  .axis path, .axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n  }\n  .line {\n    fill: none;\n    stroke: purple;\n    stroke-width: 1.5px;\n  }\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n//sample based upon: http://www.pryor.com/blog/creating-a-pareto-chart-in-excel/\n//TODO - perhaps add circle \"points\" on the line to match the reference sample\n\n  //Set dimensions\nvar m = {top: 50, right: 50, bottom: 50, left: 50}\n  , h = 500 - m.top - m.bottom\n  , w = 960 - m.left - m.right\n  , barWidth = 5;\n\nvar dataset = null;\n\nd3.csv(\"pareto_data.csv\",function(error,data){\n  if (error) return console.log(error);\n\n  //typecast Amount to #, calculate total, and cumulative amounts\n  var totalAmount = 0;\n  for(var i = 0; i < data.length; i++){\n    data[i].Amount = +data[i].Amount;\n    totalAmount += data[i].Amount;\n    if(i > 0){\n      data[i]['CumulativeAmount'] = data[i].Amount + data[i-1].CumulativeAmount;\n    }else{\n      data[i]['CumulativeAmount'] = data[i].Amount;\n    }\n  }\n  //now calculate cumulative % from the cumulative amounts & total, round %\n  for(var i = 0; i < data.length; i++){\n    data[i]['CumulativePercentage'] = (data[i]['CumulativeAmount'] / totalAmount);\n    data[i]['CumulativePercentage'] = parseFloat(data[i]['CumulativePercentage'].toFixed(2));\n  }\n\n  dataset = data;\n\n  //Axes and scales\n  var xScale = d3.scale.ordinal().rangeRoundBands([0, w], 0.1);\n  xScale.domain(data.map(function(d) { return d.Category; }));\n\n  var yhist = d3.scale.linear()\n                  .domain([0, d3.max(data, function(d) { return d.Amount; })])\n                  .range([h, 0]);\n\n  var ycum = d3.scale.linear().domain([0, 1]).range([h, 0]);\n\n  var xAxis = d3.svg.axis()\n                .scale(xScale)\n                .orient('bottom');\n\n  var yAxis = d3.svg.axis()\n                .scale(yhist)\n                .orient('left');\n\n  var yAxis2 = d3.svg.axis()\n                 .scale(ycum)\n                 .orient('right');\n\n  //Draw svg\n  var svg = d3.select(\"body\").append(\"svg\")\n              .attr(\"width\", w + m.left + m.right)\n              .attr(\"height\", h + m.top + m.bottom)\n              .append(\"g\")\n              .attr(\"transform\", \"translate(\" + m.left + \",\" + m.top + \")\");\n\n  //Draw histogram\n  var bar = svg.selectAll(\".bar\")\n                .data(data)\n                .enter().append(\"g\")\n                .attr(\"class\", \"bar\");\n\n  bar.append(\"rect\")\n      .attr(\"x\", function(d) { return xScale(d.Category); })\n      .attr(\"width\", xScale.rangeBand())\n      .attr(\"y\", function(d) { return yhist(d.Amount); })\n      .attr(\"height\", function(d) { return h - yhist(d.Amount); });\n\n  //Draw CDF line\n  var guide = d3.svg.line()\n                .x(function(d) { return xScale(d.Category); })\n                .y(function(d){ return ycum(d.CumulativePercentage) })\n                .interpolate('basis');\n\n  var line = svg.append('path')\n                .datum(data)\n                .attr('d', guide)\n                .attr('class', 'line');\n\n  //Draw axes\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + h + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Amount\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + [w, 0] + \")\")\n      .call(yAxis2)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 4)\n      .attr(\"dy\", \"-.71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Cumulative %\");\n});\n</script>\n</body>", "description": "d3 Pareto Chart Example", "created_at": "2016-02-01T01:35:13Z", "updated_at": "2016-02-01T01:37:13Z", "api": ["d3.csv", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.select", "d3.svg.line"], "readme": "", "uid": "daluu_d43ec5e610dd5dedbbe1"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n    <title></title>\n    <script type='text/javascript' src=\"http://d3js.org/d3.v3.js\"></script>\n    <script type='text/javascript' src=\"http://code.jquery.com/jquery-1.8.3.min.js\"></script>\n    <script type='text/javascript' src=\"//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.6.0/underscore-min.js\"></script>\n    <script type='text/javascript' src=\"//cdnjs.cloudflare.com/ajax/libs/backbone.js/1.1.2/backbone-min.js\"></script>\n    <style>\n        path.domain {\n            fill: none;\n            stroke: black;\n        }\n        .mark {\n            fill: skyblue;\n        }\n        .tick line {\n            stroke: black;\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"control\">\n    <button class=\"update-data\">Update Data</button>\n    <button class=\"update-config\">Update Config</button>\n</div>\n<div class=\"chart\" id=\"chart1\"></div>\n<div class=\"chart\" id=\"chart2\"></div>\n\n<script>\n\n    // Chart module\n    /////////////////////////////////////\n\n    d3.custom = {};\n\n    d3.custom.chart = function module(){\n        var config = {\n            margin: {top: 20, right: 20, bottom: 40, left: 40},\n            width: 500,\n            height: 500,\n            geometry: 'bar'\n        };\n        var privateConfig = {\n            chartW: null,\n            chartH: null,\n            data: null,\n            scaleX: null,\n            scaleY: null\n        };\n        var svg, dispatch = d3.dispatch('customHover');\n\n        function exports(_selection){\n            _selection.each(function(_data){\n\n                var chartW = config.width - config.margin.left - config.margin.right,\n                        chartH = config.height - config.margin.top - config.margin.bottom;\n\n                var scaleX = d3.scale.ordinal()\n                        .domain(_data.x.map(function(d, i){ return i; }))\n                        .rangeRoundBands([0, chartW], .1);\n//                        .rangePoints([0, chartW], .1);\n\n                var scaleY = d3.scale.linear()\n                        .domain([0, d3.max(_data.y, function(d, i){ return d; })])\n                        .range([chartH, 0]);\n\n                privateConfig = {\n                    chartW: chartW,\n                    chartH: chartH,\n                    data: _data,\n                    scaleX: scaleX,\n                    scaleY: scaleY\n                };\n\n                var xAxis = d3.svg.axis()\n                        .scale(scaleX)\n                        .orient('bottom');\n\n                var yAxis = d3.svg.axis()\n                        .scale(scaleY)\n                        .orient('left');\n\n                if(!svg){\n                    svg = d3.select(this)\n                            .append('svg')\n                            .classed('chart', true);\n                    var container = svg.append('g').classed('container-group', true);\n                    container.append('g').classed('chart-group', true);\n                    container.append('g').classed('x-axis-group axis', true);\n                    container.append('g').classed('y-axis-group axis', true);\n                }\n\n                svg.transition().attr({width: config.width, height: config.height})\n                svg.select('.container-group')\n                        .attr({transform: 'translate(' + config.margin.left + ',' + config.margin.top + ')'});\n\n                svg.select('.x-axis-group.axis')\n                        .attr({transform: 'translate(0,' + (chartH) + ')'})\n                        .transition()\n                        .call(xAxis);\n\n                svg.select('.y-axis-group.axis')\n                        .transition()\n                        .call(yAxis);\n\n                if(config.geometry === 'bar') exports.renderBars();\n                if(config.geometry === 'line') exports.renderLines();\n            });\n        }\n        exports.renderLines = function(){\n            var barW = privateConfig.scaleX.rangeBand();\n            var radius = 5;\n            var bars = svg.select('.chart-group')\n                    .selectAll('.mark')\n                    .data(privateConfig.data.y);\n            bars.enter().append('circle')\n                    .classed('mark', true)\n                    .attr({\n                        cx: privateConfig.chartW,\n                        cy: function(d, i){ return privateConfig.scaleY(d); },\n                    })\n                    .on('mouseover', dispatch.customHover);\n            bars.transition()\n                    .attr({\n                        cx: function(d, i){ return privateConfig.scaleX(i) + barW/2; },\n//                        cx: function(d, i){ return privateConfig.scaleX(i); },\n                        cy: function(d, i){ return privateConfig.scaleY(d); },\n                        r: radius\n                    });\n            bars.exit().transition().style({opacity: 0}).remove();\n            return this;\n        };\n        exports.renderBars = function(){\n            var barW = privateConfig.scaleX.rangeBand();\n            var bars = svg.select('.chart-group')\n                    .selectAll('.mark')\n                    .data(privateConfig.data.y);\n            bars.enter().append('rect')\n                    .classed('mark', true)\n                    .attr({\n                        x: privateConfig.chartW,\n                        y: function(d, i){ return privateConfig.scaleY(d); }\n                    })\n                    .on('mouseover', dispatch.customHover);\n            bars.transition()\n                    .attr({\n                        x: function(d, i){ return privateConfig.scaleX(i); },\n                        y: function(d, i){ return privateConfig.scaleY(d); },\n                        width: barW,\n                        height: function(d, i){ return privateConfig.chartH - privateConfig.scaleY(d); }\n                    });\n            bars.exit().transition().style({opacity: 0}).remove();\n            return this;\n        };\n        exports.config = function(_newConfig){\n            if(!arguments.length) return config;\n            for(var x in _newConfig) if(x in config) config[x] = _newConfig[x];\n            return this;\n        };\n        exports.getPrivateConfig = function(){ //useful for unit tests\n            return privateConfig;\n        };\n        d3.rebind(exports, dispatch, 'on');\n        return exports;\n    };\n\n\n    // Chart view\n    /////////////////////////////////////\n\n    var ChartView = Backbone.View.extend({\n        chart: null,\n        chartSelection: null,\n        initialize: function(){\n            this.model.get('data').bind('change', this.render, this);\n            this.model.get('config').bind('change', this.update, this);\n            this.chart = d3.custom.chart();\n            this.chart.config(this.model.get('config').toJSON());\n            this.chart.on('customHover', function(d, i){\n                //console.log('hover', d, i);\n            });\n            this.render();\n        },\n        render: function(){\n            this.chartSelection = d3.select(this.el)\n                    .datum(this.model.get('data').attributes)\n                    .call(this.chart);\n        },\n        update: function(){\n            this.chartSelection.call(this.chart.config(this.model.get('config').toJSON()));\n        }\n    });\n\n    // Buttons view\n    /////////////////////////////////////\n\n    var WidgetView = Backbone.View.extend({\n        el: \".control\",\n        events: {\n            \"click .update-data\": \"updateData\",\n            \"click .update-config\": \"updateConfig\"\n        },\n        updateData: function(){\n            var that = this\n            var newData = d3.range(this._randomInt(10)).map(function(d, i){ return that._randomInt(100); });\n            this.model.get('data').set({x: newData.map(function(d, i){ return i; }), y: newData});\n        },\n        updateConfig: function(){\n            var newConfig = {width: this._randomInt(600, 100)};\n            this.model.get('config').set(newConfig);\n        },\n        _randomInt: function(_maxSize, _minSize){\n            var minSize = _minSize || 1;\n            return ~~(Math.random() * (_maxSize - minSize)) + minSize;\n        }\n    });\n\n    // Chart data\n    /////////////////////////////////////\n\n    var ChartData = Backbone.Model.extend({\n        defaults: {\n            x: [1, 2, 3, 4],\n            y: [10, 20, 30, 40]\n        }\n    });\n\n    // Chart config\n    /////////////////////////////////////\n\n    var ChartConfig = Backbone.Model.extend({\n        defaults: {\n            height: 300,\n            width: 400\n        }\n    });\n\n    // Usage\n    /////////////////////////////////////\n\n    var chartData = new ChartData();\n\n    var barChartConfig = new ChartConfig();\n    var barChartModel = new Backbone.Model().set({data: chartData, config: barChartConfig});\n    var barChartWidgets = new WidgetView({model: barChartModel});\n    var barChartView = new ChartView({model: barChartModel, el: '#chart1'})\n\n    var lineChartConfig = new ChartConfig({height: 200, width: 400, geometry: 'line'});\n    var lineChartModel = new Backbone.Model().set({data: chartData, config: lineChartConfig});\n    var lineChartView = new ChartView({model: lineChartModel, el: '#chart2'})\n\n\n</script>\n\n</body>\n</html>", "description": "Backbone + reusable D3 charts", "created_at": "2014-03-31T20:53:35Z", "updated_at": "2015-11-03T13:44:27Z", "api": ["d3.dispatch", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.select", "d3.rebind", "d3.custom.chart", "d3.range"], "readme": "", "uid": "biovisualize_40ce9f6886ee5011e536"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.paths--straight {\n  fill: none;\n  stroke: #777;\n}\n\n.paths--round {\n  fill: #ccc;\n  stroke: #000;\n  stroke-width: 1.5px;\n  stroke-linejoin: round;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar data = [1, 1, 2, 3, 5, 8, 13, 21];\n\nvar width = 960,\n    height = 500,\n    outerRadius = height / 2 - 30,\n    cornerRadius = 20;\n\nvar pie = d3.layout.pie();\n\nvar arc = d3.svg.arc()\n    .outerRadius(outerRadius);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nvar straightPath = svg.append(\"g\")\n    .attr(\"class\", \"paths--straight\")\n  .selectAll(\"path\")\n    .data(data)\n  .enter().append(\"path\");\n\nvar roundPath = svg.append(\"g\")\n    .attr(\"class\", \"paths--round\")\n  .selectAll(\"path\")\n    .data(data)\n  .enter().append(\"path\");\n\nvar ease = d3.ease(\"cubic-in-out\"),\n    duration = 2500;\n\nd3.timer(function(elapsed) {\n  var t = ease(1 - Math.abs((elapsed % duration) / duration - .5) * 2),\n      arcs = pie.padAngle(t * .1)(data);\n\n  arc.innerRadius(outerRadius / (3 - t));\n  straightPath.data(arcs).attr(\"d\", arc.cornerRadius(0));\n  roundPath.data(arcs).attr(\"d\", arc.cornerRadius(cornerRadius));\n});\n\n</script>\n", "description": "Arc Corners II", "created_at": "2014-11-19T08:18:29Z", "updated_at": "2016-02-09T01:52:11Z", "api": ["d3.layout.pie", "d3.svg.arc", "d3.select", "d3.ease", "d3.timer"], "readme": "", "uid": "mbostock_f8f88029f3a5fde00407"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  text-align: center;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\n// Define the data as a two-dimensional array of numbers. If you had other\n// data to associate with each number, replace each number with an object, e.g.,\n// `{key: \"value\"}`.\nvar data = [\n  [11975,  5871, 8916, 2868],\n  [ 1951, 10048, 2060, 6171],\n  [ 8010, 16145, 8090, 8045],\n  [ 1013,   990,  940, 6907]\n];\n\n// Define the margin, radius, and color scale. The color scale will be\n// assigned by index, but if you define your data using objects, you could pass\n// in a named field from the data object instead, such as `d.name`. Colors\n// are assigned lazily, so if you want deterministic behavior, define a domain\n// for the color scale.\nvar m = 10,\n    r = 100,\n    z = d3.scale.category20c();\n\n// Insert an svg element (with margin) for each row in our dataset. A child g\n// element translates the origin to the pie center.\nvar svg = d3.select(\"body\").selectAll(\"svg\")\n    .data(data)\n  .enter().append(\"svg\")\n    .attr(\"width\", (r + m) * 2)\n    .attr(\"height\", (r + m) * 2)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + (r + m) + \",\" + (r + m) + \")\");\n\n// The data for each svg element is a row of numbers (an array). We pass that to\n// d3.layout.pie to compute the angles for each arc. These start and end angles\n// are passed to d3.svg.arc to draw arcs! Note that the arc radius is specified\n// on the arc, not the layout.\nsvg.selectAll(\"path\")\n    .data(d3.layout.pie())\n  .enter().append(\"path\")\n    .attr(\"d\", d3.svg.arc()\n        .innerRadius(r / 2)\n        .outerRadius(r))\n    .style(\"fill\", function(d, i) { return z(i); });\n\n</script>\n", "description": "Pie Multiples", "created_at": "2011-10-21T22:11:27Z", "updated_at": "2016-02-20T05:53:53Z", "api": ["d3.scale.category20c", "d3.select", "d3.layout.pie", "d3.svg.arc"], "readme": "An example of multiple pie (donut) charts created with [D3](http://mbostock.github.com/d3/). The data is represented as a two-dimensional array of numbers; each row in the array is mapped to a pie chart. Thus, each pie represents the relative value of a number (such as 1,013) within its rows. Note that in this dataset, the totals for each row are not equal.\n", "uid": "mbostock_1305111"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  body { font-family: sans-serif; }\n</style>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<body>\n  <script>\n    // var resource = 'https://dataclips.heroku.com/vgyygvzqtezwpmwpcmmjlluamjlk.json';\n    // Replaced with local copy (CORS)\n    \n    var format = d3.time.format(\"%Y-%m-%d\"),\n        margin = {top: 20, right: 20, bottom: 30, left: 40},\n        width = 960 - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom;\n\n    var force = d3.layout.force()\n          .gravity(0.1)\n          .charge(function(d, i) { return d.amount * -1; })\n          .size([width, height]);\n\n    var color = d3.scale.category10();\n  \n    var svg = d3.select(\"body\")\n                .append(\"svg\")\n                  .attr(\"width\", width + margin.left + margin.right)\n                  .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n    d3.json('sample.json', function(error, data) {\n      console.log(data)\n      data.values.forEach(function(d) {\n        d.date = format.parse(String(d[0]).substring(0, 10));\n        d.amount = d[1];\n        console.log(\"Spent $\" + d.amount + \" on \" + d.date);\n      });\n      \n      force\n        .nodes(data.values)\n        .start();\n      \n      var node = svg.selectAll(\"g.node\")\n          .data(data.values)\n          .enter()\n          .append(\"g\")\n            .attr(\"class\", \"node\")\n            .call(force.drag);\n      \n      node.append(\"circle\")\n            .attr(\"r\", function(d) { return d.amount * .1; })\n            .attr(\"opacity\", .67)\n            .attr(\"fill\", function(d){\n              if (d.amount <= 800) {\n                return \"#27ae60\"  // Green\n              } else if (d.amount > 800 && d.amount <= 900) {\n                return \"#f1c40f\"  // Yellow\n              } else if (d.amount > 900 && d.amount <= 1000) {\n                return \"#e67e22\"  // Orange\n              } else {\n                return \"#c0392b\"  // Red\n              }\n            });\n      \n      node.append(\"text\")\n            .text(function(d){ return d.date.toString().substring(4,7); })\n            .attr('fill', '#fff')\n            .attr('font-size', 24)\n            .attr('dx', -16)\n            .attr('dy', -5);\n            \n      node.append(\"text\")\n            .text(function(d){ return '$' + d.amount; })\n            .attr('fill', '#fff')\n            .attr('dx', -25)\n            .attr('dy', 15);\n            \n      \n      force.on(\"tick\", function() {\n        node\n          .attr('transform', function(d) { return 'translate('+ Math.max(20, Math.min(width-20, d.x)) + ',' + Math.max(20, Math.min(height-20, d.y)) + ')'; });\n      });\n    })\n  \n  </script>\n</body>", "description": "DataClips + D3.js Force-Directed", "created_at": "2013-06-05T20:04:11Z", "updated_at": "2015-12-18T03:18:56Z", "api": ["d3.time.format", "d3.layout.force", "d3.scale.category10", "d3.select", "d3.json"], "readme": "Second demo of consuming Heroku DataClips with D3.js.\n\nData source: <https://dataclips.heroku.com/vgyygvzqtezwpmwpcmmjlluamjlk> (.json)", "uid": "dustinlarimer_5716840"}, {"code": "<html>\n<head>\n  <title>d3.svg.ribbon with Napoleon's March</title>\n  <meta charset=\"utf-8\" />\n<script src=\"http://d3js.org/d3.v3.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"d3.svg.ribbon.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    height: 2000px;\n    width: 2000px;\n  }\n\n</style>\n<body>\n\n<div id=\"viz\">\n  <svg>\n  </svg>\n</div>\n</body>\n  <footer>\n\n<script>\n\ncolorScale = d3.scale.ordinal().range([\"#96abb1\", \"#313746\", \"#b0909d\", \"#687a97\", \"#292014\"])\n\narmy = [\n    /* Group 1 */\n    {lon:24.0,  lat:54.9,  size:340000, dir:1,  group:1},\n    {lon:24.5,  lat:55.0,  size:340000, dir:1,  group:1},\n    {lon:25.5,  lat:54.6,  size:340000, dir:1,  group:1},\n    {lon:26.0,  lat:54.7,  size:320000, dir:1,  group:1},\n    {lon:27.0,  lat:54.8,  size:300000, dir:1,  group:1},\n    {lon:28.0,  lat:54.9,  size:280000, dir:1,  group:1},\n    {lon:28.5,  lat:55.0,  size:240000, dir:1,  group:1},\n    {lon:29.0,  lat:55.1,  size:210000, dir:1,  group:1},\n    {lon:30.0,  lat:55.2,  size:180000, dir:1,  group:1},\n    {lon:30.3,  lat:55.3,  size:175000, dir:1,  group:1},\n    {lon:32.0,  lat:54.8,  size:145000, dir:1,  group:1},\n    {lon:33.2,  lat:54.9,  size:140000, dir:1,  group:1},\n    {lon:34.4,  lat:55.5,  size:127100, dir:1,  group:1},\n    {lon:35.5,  lat:55.4,  size:100000, dir:1,  group:1},\n    {lon:36.0,  lat:55.5,  size:100000, dir:1,  group:1},\n    {lon:37.6,  lat:55.8,  size:100000, dir:1,  group:1},\n    {lon:37.65, lat:55.65, size:100000, dir:-1, group:1},\n    {lon:37.45, lat:55.62, size:98000,  dir:-1, group:1},\n    {lon:37.0,  lat:55.0,  size:97000,  dir:-1, group:1},\n    {lon:36.8,  lat:55.0,  size:96000,  dir:-1, group:1},\n    {lon:35.4,  lat:55.3,  size:87000,  dir:-1, group:1},\n    {lon:34.3,  lat:55.2,  size:55000,  dir:-1, group:1},\n    {lon:33.3,  lat:54.8,  size:37000,  dir:-1, group:1},\n    {lon:32.0,  lat:54.6,  size:24000,  dir:-1, group:1},\n    {lon:30.4,  lat:54.4,  size:20000,  dir:-1, group:1},\n    {lon:29.2,  lat:54.3,  size:20000,  dir:-1, group:1},\n    {lon:29.13, lat:54.29, size:50000,  dir:-1, group:1}, /* joined by group 2 */\n    {lon:28.5,  lat:54.2,  size:50000,  dir:-1, group:1},\n    {lon:28.3,  lat:54.3,  size:48000,  dir:-1, group:1},\n    {lon:26.8,  lat:54.3,  size:12000,  dir:-1, group:1},\n    {lon:26.8,  lat:54.4,  size:14000,  dir:-1, group:1},\n    {lon:25.0,  lat:54.4,  size:8000,   dir:-1, group:1},\n    {lon:24.4,  lat:54.4,  size:4000,   dir:-1, group:1},\n    {lon:24.2,  lat:54.4,  size:4000,   dir:-1, group:1},\n    {lon:24.1,  lat:54.4,  size:4000,   dir:-1, group:1},\n    /* Group 2 */\n    {lon:24.0,  lat:55.1,  size:60000,  dir:1,  group:2},\n    {lon:24.5,  lat:55.2,  size:60000,  dir:1,  group:2},\n    {lon:25.5,  lat:54.7,  size:60000,  dir:1,  group:2},\n    {lon:26.6,  lat:55.7,  size:40000,  dir:1,  group:2},\n    {lon:27.4,  lat:55.6,  size:33000,  dir:1,  group:2},\n    {lon:28.7,  lat:55.5,  size:33000,  dir:1,  group:2},\n    {lon:28.7,  lat:55.5,  size:33000,  dir:-1, group:2},\n    {lon:29.2,  lat:54.29, size:30000,  dir:-1, group:2},\n    /* Group 3 */\n    {lon:24.0,  lat:55.2,  size:22000,  dir:1,  group:3},\n    {lon:24.5,  lat:55.3,  size:22000,  dir:1,  group:3},\n    {lon:24.6,  lat:55.8,  size:6000,   dir:1,  group:3},\n    {lon:24.6,  lat:55.8,  size:6000,   dir:-1, group:3},\n    {lon:24.2,  lat:54.4,  size:6000,   dir:-1, group:3},\n    {lon:24.1,  lat:54.4,  size:6000,   dir:-1, group:3}\n];\n\nprojection = d3.geo.equirectangular().translate([-3300,7800]).scale(8000);\nsizeScale = d3.scale.linear().domain([6000,340000]).range([1,10])\n\nribbon = d3.svg.ribbon()\n  .x(function(d) {return projection([d.lon, d.lat])[0]})\n  .y(function(d) {return projection([d.lon, d.lat])[1]})\n  .r(function(d) {return sizeScale(d.size)});\n\ndrag = d3.behavior.drag().on(\"drag\", function (d) {\n  d.x = d3.event.x;\n  d.y = d3.event.y;\n  redraw();\n});\n\nvar groupNest = d3.nest().key(function (d) {return d.group}).entries(army);\n\nd3.select(\"svg\")\n.selectAll(\"path.minard\")\n.data(groupNest)\n.enter()\n.append(\"path\")\n.attr(\"class\", \"minard\")\n.style(\"fill\", function (d) {return colorScale(d.key)})\n.style(\"stroke\", \"gray\")\n.style(\"stroke-opacity\", 0.15)\n.style(\"stroke-width\", \"2px\")\n.attr(\"d\", function (d) {return ribbon(d.values)})\n\n</script>\n  </footer>\n\n</html>\n", "description": "Napoleon's March with d3.svg.ribbon", "created_at": "2015-09-08T07:51:24Z", "updated_at": "2015-09-08T07:51:24Z", "api": ["d3.svg.line", "d3.scale.ordinal", "d3.geo.equirectangular", "d3.scale.linear", "d3.svg.ribbon", "d3.behavior.drag", "d3.nest", "d3.select"], "readme": "An example of [d3.svg.ribbon](https://github.com/emeeks/d3.svg.ribbon) using Napoleon's March through Russia made famous by Minard's map. Dataset comes from Ben Schmidt's use of it in his excellent [d3.trail layout](https://github.com/bmschmidt/D3-trail).\n\nThe pattern for using d3.svg.ribbon with geodata is simply to factor the projection into the accessors:\n\n```\nprojection = d3.geo.equirectangular().translate([-3300,7800]).scale(8000);\nsizeScale = d3.scale.linear().domain([6000,340000]).range([1,10])\n\nribbon = d3.svg.ribbon()\n  .x(function(d) {return projection([d.lon, d.lat])[0]})\n  .y(function(d) {return projection([d.lon, d.lat])[1]})\n  .r(function(d) {return sizeScale(d.size)});\n```\n\nforked from <a href='http://bl.ocks.org/emeeks/'>emeeks</a>'s block: <a href='http://bl.ocks.org/emeeks/a0b5a95c999628547494'>Napoleon's March with d3.svg.ribbon</a>", "uid": "renecnielsen_d44783b9a0a12f3ccc3a"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n\n    <title>Collapsible Tree Example</title>\n\n    <style>\n\n\t.node circle {\n\t  fill: #fff;\n\t  stroke: steelblue;\n\t  stroke-width: 3px;\n\t}\n\n\t.node text { font: 12px sans-serif; }\n\n\t.link {\n\t  fill: none;\n\t  stroke: #ccc;\n\t  stroke-width: 2px;\n\t}\n\t\n    </style>\n\n  </head>\n\n  <body>\n\n<!-- load the d3.js library -->\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\t\n<script>\n\nvar treeData = [\n  {\n    \"name\": \"Top Level\",\n    \"parent\": \"null\",\n    \"children\": [\n      {\n        \"name\": \"Level 2: A\",\n        \"parent\": \"Top Level\",\n        \"children\": [\n          {\n            \"name\": \"Son of A\",\n            \"parent\": \"Level 2: A\"\n          },\n          {\n            \"name\": \"Daughter of A\",\n            \"parent\": \"Level 2: A\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Level 2: B\",\n        \"parent\": \"Top Level\"\n      }\n    ]\n  }\n];\n\n// ************** Generate the tree diagram\t *****************\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n\twidth = 960 - margin.right - margin.left,\n\theight = 500 - margin.top - margin.bottom;\n\t\nvar i = 0;\n\nvar tree = d3.layout.tree()\n\t.size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n\t.projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.right + margin.left)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nroot = treeData[0];\n  \nupdate(root);\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n\t  links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Declare the nodes\u2026\n  var node = svg.selectAll(\"g.node\")\n\t  .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter the nodes.\n  var nodeEnter = node.enter().append(\"g\")\n\t  .attr(\"class\", \"node\")\n\t  .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeEnter.append(\"circle\")\n\t  .attr(\"r\", 10)\n\t  .style(\"fill\", \"#fff\");\n\n  nodeEnter.append(\"text\")\n\t  .attr(\"x\", function(d) { \n\t\t  return d.children || d._children ? -13 : 13; })\n\t  .attr(\"dy\", \".35em\")\n\t  .attr(\"text-anchor\", function(d) { \n\t\t  return d.children || d._children ? \"end\" : \"start\"; })\n\t  .text(function(d) { return d.name; })\n\t  .style(\"fill-opacity\", 1);\n\n  // Declare the links\u2026\n  var link = svg.selectAll(\"path.link\")\n\t  .data(links, function(d) { return d.target.id; });\n\n  // Enter the links.\n  link.enter().insert(\"path\", \"g\")\n\t  .attr(\"class\", \"link\")\n\t  .attr(\"d\", diagonal);\n\n}\n\n</script>\n\t\n  </body>\n</html>\n", "description": "Simple d3.js tree diagram", "created_at": "2014-01-08T20:15:11Z", "updated_at": "2016-01-02T15:29:09Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select"], "readme": "This is a simple d3.js tree diagram used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is derived from the Mike Bostock [Collapsible tree example](http://bl.ocks.org/mbostock/4339083) but it is a VERY cut down version without the ability to update (collapse).", "uid": "d3noob_8323795"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Improved Canvas (Transform) - d3.carto</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .region {\n    stroke: white;\n  }\n  \n</style>\n<script>\n\n  function makeSomeMaps() {\n    pathSource = 0;\n\n    map = d3.carto.map();\n    \n    var regionColor = [\"lightgray\",\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"];\n    var colorScale = d3.scale.linear().domain([0,5,26]).range([\"green\",\"yellow\", \"red\"])\n    var sizeScale = d3.scale.linear().domain([50,1000]).range([1,6])\n\n    d3.select(\"#map\").call(map);\n\n    map.centerOn([-88,39],\"latlong\");\n    map.setScale(2);\n\n    wcLayer = d3.carto.layer.tile();\n    wcLayer\n    .tileType(\"mapbox\")\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Base\")\n    .visibility(true)\n\n    regionLayer = d3.carto.layer.geojson();\n    regionLayer\n    .path(\"ecoregions.json\")\n    .label(\"Regions\")\n    .cssClass(\"region\")\n    .renderMode(\"canvas\")\n    .markerColor(function(d) {return regionColor[d.a]})\n    .clickableFeatures(true);\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"all_sites.csv\")\n    .label(\"Cities\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"canvas\")\n    .markerSize(function(d) {return sizeScale(d.pop)})\n    .markerColor(function(d) {return colorScale(d.capacity)})\n    .x(function(d) {return d.xcoord})\n    .y(function(d) {return d.ycoord});\n    \n    map.addCartoLayer(wcLayer).addCartoLayer(regionLayer).addCartoLayer(csvLayer);\n    map.refresh();\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\">\n</div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>\n", "description": "Canvas Styling (Transform) - d3.carto", "created_at": "2014-09-10T00:26:56Z", "updated_at": "2015-08-29T14:06:16Z", "api": ["d3.carto.map", "d3.scale.linear", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.csv"], "readme": "Canvas element styling with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** does not use d3.selectAll like [SVG element styling](http://bl.ocks.org/emeeks/f8c0220c54ec8347ea95) because these aren't SVG elements.\n\nThis relies on using cartoLayer.markerColor() and cartoLayer.markerSize() and setting them to function based on the data. If you don't set markerColor, then it will rely on CSS styling of the associated class.\n\n[This example is also available as a globe](http://bl.ocks.org/emeeks/aea3c7fc1acc0eca4d44).", "uid": "emeeks_e6f72fbca42e77be0eb3"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<style>\n\n.map {\n  fill: none;\n  stroke: #777;\n  stroke-opacity: .5;\n  stroke-width: .5px;\n}\n\n.land {\n  fill: #999;\n}\n\n.boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n</style>\n\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"pathlayout.js\"></script>\n<script>\nvar width = 600,\n    height = 500;\n\nvar projection = d3.geo.mercator()\n    .scale(5*(width + 1) / 2 / Math.PI)\n    .translate([width / 2, height / 2])\n    .rotate([-125, -15, 0])\n    .precision(.1);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nd3.json(\"/mbostock/raw/4090846/world-50m.json\", function(error, world) {\nd3.json(\"track.json\", function(error, track) {\n\n    var color_scale = d3.scale.quantile().domain([1, 5]).range(colorbrewer.YlOrRd[5]);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var trail = d3.layout.trail()\n        .positioner(function(d) {return projection([d.lon,d.lat]);})\n        .coordType('xy');\n\n    var trail_layout = trail.data(track).layout();\n\n    svg.insert(\"path\", \".map\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n    svg.insert(\"path\", \".map\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n\n    var hayan_trail = svg.selectAll(\"d\").data(trail_layout);\n\n    hayan_trail.enter()\n        .append('line')\n        .attr(\"x1\",function(d) {return d.x1}) \n        .attr(\"x2\",function(d) {return d.x1})\n        .attr(\"y1\",function(d) {return d.y1}) \n        .attr(\"y2\",function(d) {return d.y1}) \n        .attr(\"class\",\"line\")\n        .style(\"stroke-width\",4)\n        .attr(\"stroke\", function(d){return color_scale(d.class);})\n        .transition()\n        .ease(\"linear\")\n        .delay(function(d,i) {return i*500})\n        .duration(500)\n        .attr(\"x2\",function(d) {return d.x2})\n        .attr(\"y2\",function(d) {return d.y2}) \n    ;\n    \n});\n});\n</script>", "description": "D3 Trail Layout animated map", "created_at": "2014-07-07T18:22:08Z", "updated_at": "2015-08-29T14:03:37Z", "api": ["d3.geo.mercator", "d3.geo.path", "d3.json", "d3.scale.quantile", "d3.select", "d3.layout.trail"], "readme": "This an example using the [D3 trail layout](https://github.com/bmschmidt/D3-trail) made by [Benjamin Schmidt](https://github.com/bmschmidt).\nIn this case, the animated Hayian Typhoon track map is shown, with the colour changing with the typhoon class, as in [this example](http://bl.ocks.org/rveciana/10743959), but in an easier and cleaner way.\n\nThere is a blog entry explaining this example at [GeoExamples](http://geoexamples.blogspot.com/2014/07/using-d3-trail-layout-to-draw-hayian.html)", "uid": "rveciana_2986e55a01c7008d4b5b"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - custom infobox formatters</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .countryInfobox {\n    color: pink;\n    font-style: italic;\n    padding: 20px;\n  }\n  rect.bluesquare {\n    fill: #4682B4;\n    stroke: black;\n    stroke-width: 1px;\n}\n.countryborders {\n    fill: rgba(0,0,0,0);\n    stroke-width: 1px;\n    stroke: gray;\n    cursor: pointer;\n}\n\n.roads {\n    stroke: brown;\n    stroke-width: 1px;\n    fill: none;\n}\n\n.halffilledcountries {\n    fill: rgba(224,224,209,0.5);\n    stroke-width: 1px;\n    stroke: black;\n    opacity: 1;    \n}\n\n</style>\n<script>\n\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    tileLayer = d3.carto.layer.tile();\n    tileLayer\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\")\n    .on(\"load\", recenter);\n\n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoBorders\")\n    .cssClass(\"countryborders\")\n    .renderMode(\"canvas\")\n    .on(\"load\", createFeatureLayer);\n    \n    topojsonLayer = d3.carto.layer.topojson();\n    topojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n    .label(\"TopoRoutes\")\n    .cssClass(\"roads\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true);\n\n    csvModal = d3.carto.modal();\n    csvModal.formatter(\n      function(d) {return \"<h1>\" + d.label + \" in modern day \" + d.modern + \"</h1>\"}\n    )\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .type(\"csv\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(8)\n    .x(\"x\")\n    .y(\"y\")\n    .modal(csvModal)\n    .clickableFeatures(true);\n\n    map.addCartoLayer(tileLayer);\n    map.addCartoLayer(topojsonLayer);\n    map.addCartoLayer(geojsonLayer);\n    map.addCartoLayer(csvLayer);\n\n    function recenter() {\n      map.centerOn([3,43],\"latlong\");\n    }\n    \n    function createFeatureLayer() {\n      var featuresArray = [];\n      var mapLayers = map.layers();\n      mapLayers.forEach(function (layer) {\n        if (layer.label() == \"GeoBorders\") {\n          featuresArray = layer.features();\n        }\n      })\n     shortNameCountries = featuresArray.filter(function(d) {return d.properties.name.length < 7})\n\n    featureModal = d3.carto.modal();\n    featureModal.formatter(\n      function(d) {return \"<span class='countryInfobox'>The country of \" + d.properties.name + \" has a short name</span>\"}\n    )\n    \n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(shortNameCountries)\n    .label(\"Feature Array\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true)\n    .modal(featureModal);\n    \n    map.addCartoLayer(featureLayer);\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Custom Infobox Formatter - d3.carto.map", "created_at": "2014-08-26T21:50:55Z", "updated_at": "2015-08-29T14:05:45Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.topojson", "d3.carto.modal", "d3.carto.layer.csv", "d3.carto.layer.featureArray"], "readme": "A demonstration of custom modal infoboxes from **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nIf you click on a site point (the pink circles) you'll see an infobox that reads something like \"Lugdunum Convenarum in modern day France\" whereas if you click on a country, you'll see an infobox that reads something like \"The country of Spain has a short name\".\n\nHow a modal handles the data in a datapoint for display is handled by defining a custom formatter for the modal, which requires that you create a new d3.carto.modal. The new modal is assigned to a d3.carto.layer using .modal() as shown in the example for the CSV Points and Feature Array layers.\n\nFormatters are defined using the standard D3 accessor syntax. The default formatter, demonstrated in the [basic modal example](http://bl.ocks.org/emeeks/433a9b04f82a1c78af4b). Since you know your data better than d3.carto does, you can specify how to parse what attributes in as specific a manner as you want. The function should return a string of HTML suitable to be dropped into the modal div.\n\nThe key lines for defining the modal and formatter are:\n```\n    csvModal = d3.carto.modal();\n    csvModal.formatter(\n      function(d) {return \"<h1>\" + d.label + \" in modern day \" + d.modern + \"</h1>\"}\n    )\n```\n\nand:\n```\n    featureModal = d3.carto.modal();\n    featureModal.formatter(\n      function(d) {return \"<p class='countryInfobox'>The country of \" + d.properties.name + \" has a short name</p>\"}\n    )\n```", "uid": "emeeks_905bb4f399e0855e08fe"}, {"code": "Using d3-tip to add tooltips to a d3 bar chart.\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.bar {\n  fill: green;\n}\n\n.bar:hover {\n  fill: purple ;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.d3-tip {\n  line-height: 1;\n  font-weight: bold;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  border-radius: 2px;\n}\n\n/* Creates a small triangle extender for the tooltip */\n.d3-tip:after {\n  box-sizing: border-box;\n  display: inline;\n  font-size: 10px;\n  width: 100%;\n  line-height: 1;\n  color: rgba(0, 0, 0, 0.8);\n  content: \"\\25BC\";\n  position: absolute;\n  text-align: center;\n}\n\n/* Style northward tooltips differently */\n.d3-tip.n:after {\n  margin: -1px 0 0 0;\n  top: 100%;\n  left: 0;\n}\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js\"></script>\n<script>\n\nvar margin = {top: 40, right: 20, bottom: 50, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n  \nvar tempColor;\n  \nvar tooltip = d3.select('body').append('div')\n        .style('position', 'absolute')\n        .style('padding', '0 10px')\n        .style('background', 'white')\n        .style('opacity', 0)\n\nvar formatPercent = d3.format(\".0%\");\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(formatPercent);\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Frequency:</strong> <span style='color:red'>\" + d.frequency + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n  \t\t.on('mouseover', function(d) {\n\n        tooltip.transition()\n            .style('opacity', .9)\n\n        tooltip.html(d)\n            .style('left', (d3.event.pageX - 35) + 'px')\n            .style('top',  (d3.event.pageY - 30) + 'px')\n\n\n        tempColor = this.style.fill;\n        d3.select(this)\n            .style('opacity', .8)\n            .style('fill', 'purple')\n    })\n\n    .on('mouseout', function(d) {\n        d3.select(this)\n            .style('opacity', 1)\n            .style('fill', tempColor)\n    })\n\n\t\t});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n  \nsvg.transition()\n    .attr('height', function(d) {\n        return y(d);\n    })\n    .attr('y', function(d) {\n        return height - y(d);\n    })\n    .delay(function(d, i) {\n        return i * 20;\n    })\n    .duration(1000)\n    .ease('elastic')\n\n</script>\n", "description": "Using d3-tip to add tool", "created_at": "2016-04-18T12:24:03Z", "updated_at": "2016-04-18T12:24:03Z", "api": ["d3.select", "d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.tsv", "d3.max"], "readme": "How to use [d3-tip](https://github.com/caged/d3-tip) with d3's [simple bar chart example](http://bl.ocks.org/mbostock/3885304).\n\n\nforked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>\n\nforked from <a href='http://bl.ocks.org/wcjohnson11/'>wcjohnson11</a>'s block: <a href='http://bl.ocks.org/wcjohnson11/04feb3139aa6a857d67f756afa6abda1'>Using d3-tip to add tooltips to a d3 bar chart</a>\n\nforked from <a href='http://bl.ocks.org/aax951/'>aax951</a>'s block: <a href='http://bl.ocks.org/aax951/d7a90cc03d3e1bddffa5569cae11490d'>Using d3-tip to add tool</a>\n\nforked from <a href='http://bl.ocks.org/aax951/'>aax951</a>'s block: <a href='http://bl.ocks.org/aax951/40d4e8f220b5dfe0e6339b5a37d687bc'>Using d3-tip to add tool</a>", "uid": "aax951_7e8f43fc4f2e6e715a8ec172e44cb2e6"}, {"code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 Array of Tables Demo</title>\n  <!-- Author: Bo Ericsson, bo@boe.net -->\n  <link rel=stylesheet type=text/css href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/css/bootstrap.min.css\" media=\"all\">\n  <style>\n    body {\n      padding: 10px;\n      font-size: 12px;\n    }\n    .well {\n      padding-top: 0px;\n      padding-bottom: 0px;\n      width: 500px;\n    }\n    table {\n      font-size: 10px;\n      line-height: 10px;\n    }\n    td, th {\n      width: 33.3%;\n    }\n    label {\n      margin-bottom: 10px;\n    }\n  </style>\n<body>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js\"></script>\n<script>\n'use strict';\n\n// title div with label and button\nvar header = d3.select(\"body\").append(\"div\").attr(\"class\", \"well\");\n\nheader.append(\"h3\").text(\"Vaccine Record\");\n\nvar taskLabel = header.append(\"label\")\n    .attr(\"id\", \"taskLabel\")\n    .html(\"&nbsp;\");\n\nvar currTask = 1;\nvar taskButton = header.append(\"button\")\n    .attr(\"class\", \"btn btn-primary\")\n    .style(\"margin-bottom\", \"20px\")\n    .style(\"width\", \"100%\")\n    .style(\"text-align\", \"left\")\n    .text(\"Start\")\n    .on(\"click\", function() {\n      this.blur();\n      // execute the task\n      tasks[currTask]();\n      // next task\n      currTask = ++currTask % tasks.length;\n    })\n\n// container for array of tables\nvar tableDiv = d3.select(\"body\").append(\"div\").attr(\"id\", \"tableDiv1\");\n\n// initial data\nvar data;\nvar initialData = [\n  { table: \"At birth\", rows: [\n      { table: \"Table1\", row: \"Row1\", data: \"DataT1R1\", status:\"pending\" }\n    ]\n  },\n  { table: \"Table2\", rows: [\n      { table: \"Table2\", row: \"Row1\", data: \"DataT2R1\" },\n      { table: \"Table2\", row: \"Row2\", data: \"DataT2R2\" },\n      { table: \"Table2\", row: \"Row3\", data: \"DataT2R3\" }\n    ]\n  },\n  { table: \"Table3\", rows: [\n      { table: \"Table3\", row: \"Row1\", data: \"DataT3R1\" },\n      { table: \"Table3\", row: \"Row2\", data: \"DataT3R2\" }\n    ]\n  },\n  { table: \"Table4\", rows: [\n      { table: \"Table4\", row: \"Row1\", data: \"DataT4R1\" },\n      { table: \"Table4\", row: \"Row2\", data: \"DataT4R2\" }\n    ]\n  }\n]\n\n// tasks\nfunction task0() {\n  update([]);\n\n  taskLabel.html(\"Cleared any existing tables\");\n  taskButton.text(\"Next step: Initial load of tables\");\n}\n\nfunction task1() {\n  data = JSON.parse(JSON.stringify(initialData));\n  update(data);\n\n  taskLabel.text(\"Step 1: Initial tables loaded\");\n  taskButton.text(\"Next step: Add 4th row to Table 2\");\n}\n\n\n\nfunction task2() {\n  var item = data[0].rows[0].data;\n  data[0].rows[0].data = item + \" - Updated\";\n  update(data);\n  taskLabel.text(\"Step 6: Changed data of row 1 of Table 1\");\n  taskButton.text(\"Restart\") ;  \n}\n\n// task list\nvar tasks = [task0, task1, task2,];\n\n\n// function in charge of the array of tables (is called from the tasks defined above)\nfunction update(data) {\n\n  // get all divs in the table div \n  var divs = tableDiv.selectAll(\"div\")\n      // after .data() is executed below, divs becomes a d3 update selection\n      //.data(data, function(d) { return d.table }) // key function to disable default by-index evaluation\n      .data(function(d) {\n        return data;\n      }, function(d) { \n      return d.table \n      }) // key function to disable default by-index evaluation\n\n  // for any deleted table, remove its div and contents (by using the exit function of the update selection)\n  divs.exit().remove();\n\n  // add new div(s); define divsEnter (all new divs), add each div and set id and class\n  var divsEnter = divs.enter().append(\"div\")\n      .attr(\"id\", function(d) { return d.table + \"Div\"; })\n      .attr(\"class\", \"well\")\n\n  // add title h5 in new div(s)\n  divsEnter.append(\"h5\").text(function(d) { return d.table; });\n\n  // add table(s) in new div(s)\n  var tableEnter = divsEnter.append(\"table\")\n      .attr(\"id\", function(d) { return d.table })\n      .attr(\"class\", \"table table-condensed table-striped table-bordered\")\n\n  // append table head in new table(s) in new div(s)\n  tableEnter.append(\"thead\")\n    .append(\"tr\")\n      .selectAll(\"th\")\n      .data([\"Table Name\", \"Row Number\", \"Data Contents\", \"status\"])\n    .enter().append(\"th\")\n      .text(function(d) { return d; })\n\n  // append table body in new table(s) in new divs(s)\n  tableEnter.append(\"tbody\");\n\n  // select all tr elements in the divs update selection\n  var tr = divs.select(\"table\").select(\"tbody\").selectAll(\"tr\")\n      .data(function(d, i) { return d.rows; }, function(d) { return d.row }); // again we're using key function to disable by-index evaluation\n\n  // remove rows for missing data items\n  tr.exit().remove();\n\n  // add rows for new data items\n  tr.enter().append(\"tr\");\n\n  // bind data to table cells\n  var td = tr.selectAll(\"td\")\n      .data(function(d, i) { return d3.values(d); });\n\n  // add new cells\n  td.enter().append(\"td\");\n\n  // update contents of table cells\n  td.text(function(d) { return d; })\n}\n\n\n</script>\n", "description": "D3 Dynamic Array of Tables", "created_at": "2016-04-26T15:31:23Z", "updated_at": "2016-04-26T15:45:41Z", "api": ["d3.select", "d3.values"], "readme": "## D3 Dynamic Array of Tables\n\nDemonstrates the the use of D3 to manage an array of tables. Via a button, the user will cycle through several steps which will mutate the underlying array of arrays, which at each step is fed to the table **update** function. For example, tables are added and removed from the array of tables, individual rows of tables are added and removed, and individual table cells are modified. The **update** function demonstrates the enter, exit and update patterns at the div/table level as well as at the table row level. \n\nFor **bl.ocks.org** users, the script should be viewed in its own window. See the script in action [here](http://bl.ocks.org/boeric/raw/e16ad218bc241dfd2d6e/)\n\nforked from <a href='http://bl.ocks.org/boeric/'>boeric</a>'s block: <a href='http://bl.ocks.org/boeric/e16ad218bc241dfd2d6e'>D3 Dynamic Array of Tables</a>", "uid": "devssunil_5485fa28d3fdd422930b53ab330f96e3"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>Marvel Characters | Force layout with images</title>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n\n    <style>\n      @import url(http://fonts.googleapis.com/css?family=Source+Code+Pro:400,600);\n      body {font-family: \"Source Code Pro\", Consolas, monaco, monospace; line-height: 160%; font-size: 16px;  margin: 0; }\n      path.link {\n        fill: none;\n        stroke-width: 2px;\n      }\n      .node:not(:hover) .nodetext {\n        display: none;\n      }\n      h1 { font-size: 36px; margin: 10px 0; text-transform: uppercase; font-weight: normal;}\n      h2, h3 { font-size: 18px; margin: 5px 0 ; font-weight: normal;}\n      header {padding: 20px; position: absolute; top: 0; left: 0;}\n      a:link { color: #EE3124; text-decoration: none;}\n      a:visited { color: #EE3124; }\n      a:hover { color: #A4CD39; text-decoration: underline;}\n      a:active { color: #EE3124; }\n    </style>\n</head>\n    \n\n<body>\n    <header>\n      <h1>Marvel Characters</h1>\n      <h2>Click to view their identity</h2>\n      <h3>And link to their web page!</h3>\n    </header>\n    <!-- container for force layout visualisation  -->\n    <section id=\"vis\"></section> \n<script>\n\n// some colour variables\n  var tcBlack = \"#130C0E\";\n\n// rest of vars\nvar w = 960,\n    h = 800,\n    maxNodeSize = 50,\n    x_browser = 20,\n    y_browser = 25,\n    root;\n \nvar vis;\nvar force = d3.layout.force(); \n\nvis = d3.select(\"#vis\").append(\"svg\").attr(\"width\", w).attr(\"height\", h);\n \nd3.json(\"marvel.json\", function(json) {\n \n  root = json;\n  root.fixed = true;\n  root.x = w / 2;\n  root.y = h / 4;\n \n \n        // Build the path\n  var defs = vis.insert(\"svg:defs\")\n      .data([\"end\"]);\n \n \n  defs.enter().append(\"svg:path\")\n      .attr(\"d\", \"M0,-5L10,0L0,5\");\n \n     update();\n});\n \n \n/**\n *   \n */\nfunction update() {\n  var nodes = flatten(root),\n      links = d3.layout.tree().links(nodes);\n \n  // Restart the force layout.\n  force.nodes(nodes)\n        .links(links)\n        .gravity(0.05)\n    .charge(-1500)\n    .linkDistance(100)\n    .friction(0.5)\n    .linkStrength(function(l, i) {return 1; })\n    .size([w, h])\n    .on(\"tick\", tick)\n        .start();\n \n   var path = vis.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n \n    path.enter().insert(\"svg:path\")\n      .attr(\"class\", \"link\")\n      // .attr(\"marker-end\", \"url(#end)\")\n      .style(\"stroke\", \"#eee\");\n \n \n  // Exit any old paths.\n  path.exit().remove();\n \n \n \n  // Update the nodes\u2026\n  var node = vis.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id; });\n \n \n  // Enter any new nodes.\n  var nodeEnter = node.enter().append(\"svg:g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n      .on(\"click\", click)\n      .call(force.drag);\n \n  // Append a circle\n  nodeEnter.append(\"svg:circle\")\n      .attr(\"r\", function(d) { return Math.sqrt(d.size) / 10 || 4.5; })\n      .style(\"fill\", \"#eee\");\n \n   \n  // Append images\n  var images = nodeEnter.append(\"svg:image\")\n        .attr(\"xlink:href\",  function(d) { return d.img;})\n        .attr(\"x\", function(d) { return -25;})\n        .attr(\"y\", function(d) { return -25;})\n        .attr(\"height\", 50)\n        .attr(\"width\", 50);\n  \n  // make the image grow a little on mouse over and add the text details on click\n  var setEvents = images\n          // Append hero text\n          .on( 'click', function (d) {\n              d3.select(\"h1\").html(d.hero); \n              d3.select(\"h2\").html(d.name); \n              d3.select(\"h3\").html (\"Take me to \" + \"<a href='\" + d.link + \"' >\"  + d.hero + \" web page \u21e2\"+ \"</a>\" ); \n           })\n\n          .on( 'mouseenter', function() {\n            // select element in current context\n            d3.select( this )\n              .transition()\n              .attr(\"x\", function(d) { return -60;})\n              .attr(\"y\", function(d) { return -60;})\n              .attr(\"height\", 100)\n              .attr(\"width\", 100);\n          })\n          // set back\n          .on( 'mouseleave', function() {\n            d3.select( this )\n              .transition()\n              .attr(\"x\", function(d) { return -25;})\n              .attr(\"y\", function(d) { return -25;})\n              .attr(\"height\", 50)\n              .attr(\"width\", 50);\n          });\n\n  // Append hero name on roll over next to the node as well\n  nodeEnter.append(\"text\")\n      .attr(\"class\", \"nodetext\")\n      .attr(\"x\", x_browser)\n      .attr(\"y\", y_browser +15)\n      .attr(\"fill\", tcBlack)\n      .text(function(d) { return d.hero; });\n \n \n  // Exit any old nodes.\n  node.exit().remove();\n \n \n  // Re-select for update.\n  path = vis.selectAll(\"path.link\");\n  node = vis.selectAll(\"g.node\");\n \nfunction tick() {\n \n \n    path.attr(\"d\", function(d) {\n \n     var dx = d.target.x - d.source.x,\n           dy = d.target.y - d.source.y,\n           dr = Math.sqrt(dx * dx + dy * dy);\n           return   \"M\" + d.source.x + \",\" \n            + d.source.y \n            + \"A\" + dr + \",\" \n            + dr + \" 0 0,1 \" \n            + d.target.x + \",\" \n            + d.target.y;\n  });\n    node.attr(\"transform\", nodeTransform);    \n  }\n}\n\n \n/**\n * Gives the coordinates of the border for keeping the nodes inside a frame\n * http://bl.ocks.org/mbostock/1129492\n */ \nfunction nodeTransform(d) {\n  d.x =  Math.max(maxNodeSize, Math.min(w - (d.imgwidth/2 || 16), d.x));\n    d.y =  Math.max(maxNodeSize, Math.min(h - (d.imgheight/2 || 16), d.y));\n    return \"translate(\" + d.x + \",\" + d.y + \")\";\n   }\n \n/**\n * Toggle children on click.\n */ \nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n \n  update();\n}\n \n \n/**\n * Returns a list of all nodes under the root.\n */ \nfunction flatten(root) {\n  var nodes = []; \n  var i = 0;\n \n  function recurse(node) {\n    if (node.children) \n      node.children.forEach(recurse);\n    if (!node.id) \n      node.id = ++i;\n    nodes.push(node);\n  }\n \n  recurse(root);\n  return nodes;\n} \n  \n  \n</script>\n\n</body>\n</html>\n", "description": "d3 | Force layout with images", "created_at": "2014-11-30T11:40:31Z", "updated_at": "2015-08-29T14:10:33Z", "api": ["d3.layout.force", "d3.select", "d3.json", "d3.layout.tree"], "readme": "Force layout test/experiment with images\n\nSources:\n- [Force Layout](https://github.com/mbostock/d3/wiki/Force-Layout)\n- [Force-based label placement](http://bl.ocks.org/MoritzStefaner/1377729)\n- [Collapsible force layout with directed paths and images/text in the nodes.](http://bl.ocks.org/djjupa/5653692)\n- [Labeled Force Layout](http://bl.ocks.org/mbostock/950642)\n", "uid": "eesur_be2abfb3155a38be4de4"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Multiple Tile Layers</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n.countryborders {\n    fill: rgba(0,0,0,0);\n    stroke-width: 1px;\n    stroke: gray;\n    cursor: pointer;\n}\n\n.roads {\n    stroke: brown;\n    stroke-width: 1px;\n    fill: none;\n}\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    map.centerOn([-0.1275,51.507],\"latlong\");\n\ntileLayer1 = d3.carto.layer.tile();\n    tileLayer1\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Terrain 1\")\n    .visibility(false);\n\ntileLayer2 = d3.carto.layer.tile();\n    tileLayer2\n    .path(\"elijahmeeks.map-ktkeam22\")\n    .label(\"Terrain 2\");\n\ntileLayer3 = d3.carto.layer.tile();\n    tileLayer3\n    .path(\"examples.map-h67hf2ic\")\n    .label(\"Streets\")\n    .visibility(false);\n\n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoBorders\")\n    .visibility(false)\n    .cssClass(\"countryborders\")\n    .renderMode(\"canvas\");\n    \n    topojsonLayer = d3.carto.layer.topojson();\n    topojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n    .label(\"TopoRoutes\")\n    .visibility(false)\n    .cssClass(\"roads\")\n\n    .renderMode(\"canvas\");\n\n    map.addCartoLayer(tileLayer1);\n    map.addCartoLayer(tileLayer2);\n    map.addCartoLayer(tileLayer3);\n    map.addCartoLayer(topojsonLayer);\n    map.addCartoLayer(geojsonLayer);\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Loading Tile Layers in d3.carto.map", "created_at": "2014-07-12T19:33:28Z", "updated_at": "2015-08-30T21:38:39Z", "api": ["d3.geo.path", "d3.dispatch", "d3.quadTiles", "d3.rebind", "d3.selectAll", "d3.range", "d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.topojson"], "readme": "Loading multiple tile layers with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nEach layer is represented in the layer selector and can be hidden or displayed by clicking its name or the checkbox.", "uid": "emeeks_f3105fda25ff785dc5ed"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Orbit Layout Modes</title>\n  <meta charset=\"utf-8\" />\n</head>\n<style>\n\n  #viz, svg {\n    width: 100%;\n    height: 100%;\n  }\n\n  text {\n    pointer-events: none;\n  }\n\n  #buttons {\n    position: fixed;\n    top:0;\n    left:0;\n  }\n\n  circle.ring {\n    fill: none;\n    stroke: black;\n    stroke-width: 1px;\n    stroke-opacity: .15;\n\n  }\n  \n</style>\n<script>\n\n\nfunction makeViz() {\n\n  d3.json(\"d3.json\", function(data) {drawOrbit(data)});\n\n}\n\nfunction drawOrbit(_data) {\n\n  var center = {};\n  var recenter = false;\n\n\n  for (var x=0;x<_data.children.length;x++) {\n    _data.children[x].size = _data.children[x].children ? _data.children[x].children.length : 0;\n  }\n\n  _data.children.sort(function(a,b) {\n        if (a.size > b.size) {\n          return 1;\n        }\n        if (a.size < b.size) {\n          return -1;\n        }\n        return 0;\n  })\n\n\n  sizeScale = d3.scale.linear().domain([0,1,5,10,20]).range([4,6,8,10,12]).clamp(true);\n  colorScale = d3.scale.linear().domain([0,1,2,3,4]).range([\"rgb(161,208,120)\",\"rgb(247,148,72)\",\"rgb(225,203,208)\",\"rgb(174,223,228)\",\"rgb(245,132,102)\"]);\n\n  planetColors = {Mercury: \"gray\", Venus: \"#d6bb87\", Earth: \"#677188\", Mars: \"#7c5541\", Jupiter: \"#a36a3e\", Saturn: \"#e9ba85\", Uranus: \"#73cbf0\", Neptune: \"#6383d1\"}\n\n\n  orbit = d3.layout.orbit().size([800,800])\n  .revolution(customRevolution)\n  .orbitSize(function(d) {return d.depth >= 2 ? 6 : 4})\n  .speed(.25)\n  .mode([35,36,8,3,1])\n  .nodes(_data);\n\n  center = orbit.nodes()[0];\n\n  d3.select(\"svg\")\n.append(\"g\")\n.attr(\"class\", \"viz\")\n.attr(\"transform\", \"translate(50,50)\")\n  .selectAll(\"g.node\").data(orbit.nodes())\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"})\n  .on(\"mouseover\", nodeOver)\n  .on(\"click\", recenter)\n\n  d3.selectAll(\"g.node\")\n  .append(\"circle\")\n  .attr(\"class\", \"satellite\")\n  .attr(\"r\", function(d) {return sizeScale(d.children ? d.children.length : 0)})\n  .style(\"fill\", function(d) {return colorScale(d.depth)})\n  .style(\"stroke\", \"brown\")\n  .style(\"stroke-width\", \"1px\")\n\n  d3.selectAll(\"g.node\").filter(function(d) {return d.depth == 1})\n  .append(\"text\")\n  .text(function(d) {return d.depth == 0 ? \"Sun\" : d.key})\n  .attr(\"y\", 20)\n  .style(\"text-anchor\", \"middle\")\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n  .enter()\n  .insert(\"circle\", \"g\")\n  .attr(\"class\", \"ring\")\n  .attr(\"r\", function(d) {return d.r})\n  .attr(\"cx\", function(d) {return d.x})\n  .attr(\"cy\", function(d) {return d.y})\n\n  orbit.on(\"tick\", orbitTick);\n\n  orbit.start();\n\n  function orbitTick() {\n\n    var newX = 200- center.x;\n    var newY = 200 - center.y;\n\n    d3.select(\"g.viz\")\n    .attr(\"transform\", \"scale(\"+(1 + (center.depth *.1)) +\") translate(\" + newX + \",\" + newY + \")\")\n\n\n    d3.selectAll(\"g.node\")\n      .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"});\n\n    d3.selectAll(\"circle.ring\")\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n\n        d3.selectAll(\"line.visible\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n\n  }\n\n  function changeCenter() {\n        recenter = false;\n        orbit.stop();\n    var newX = 200 - center.x;\n    var newY = 200 - center.y;\n\n    d3.select(\"g.viz\")\n    .transition()\n    .duration(1000)\n    .attr(\"transform\", \"scale(\"+(1 + (center.depth *.1)) +\") translate(\" + newX + \",\" + newY + \")\")\n    .each(\"end\", function() {orbit.start()})\n\n  }\n\n  function customRevolution(d) \n  {\n    if (d.name == \"time\") {\n      return d.depth * .25;\n    }\n    if (d.name == \"geo\") {\n      return -d.depth * .25;      \n    }\n    return d.depth\n  }\n\n  function nodeOver(d) {\n    orbit.stop();\n\n      center = d;\n      changeCenter();\n\n      d3.selectAll(\"text.sat\").remove();\n\n      d3.selectAll(\"line.visible\").remove();\n\n      if (d.children) {\n        var lines = d.children.map(function(p) {return {source: d, target: p}})\n        d3.select(\"g.viz\").selectAll(\"line.visible\")\n        .data(lines)\n        .enter()\n        .insert(\"line\", \"g\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n        .attr(\"class\", \"visible\")\n        .style(\"stroke\", \"rgb(73,106,154)\")\n        .style(\"stroke-width\", 2)\n      }\n\n      if (d.parent) {\n\n        d3.select(\"g.viz\").selectAll(\"line.fake\")\n        .data([{source:d, target: d.parent}])\n        .enter()\n        .insert(\"line\", \"g\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n        .attr(\"class\", \"visible\")\n        .style(\"stroke\", \"rgb(165,127,124)\")\n        .style(\"stroke-width\", 3)\n      }\n\n\n      d3.selectAll(\"g.node\")\n      .filter(function(p) {return p == d || p == d.parent || (d.children ? d.children.indexOf(p) > -1 : false)})\n      .append(\"text\")\n      .text(function(p) {return p.name})\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"sat\")\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", \"white\")\n      .style(\"stroke-width\", 3)\n      .style(\"stroke-opacity\", .7);\n\n      d3.selectAll(\"g.node\")\n      .filter(function(p) {return p == d || p == d.parent || (d.children ? d.children.indexOf(p) > -1 : false)})\n      .append(\"text\")\n      .text(function(p) {return p.name})\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"sat\");\n\n    d3.selectAll(\"g.node > circle\").style(\"stroke\", \"brown\").style(\"stroke-width\", 1);    \n\n    d3.select(this).select(\"circle\").style(\"stroke\", \"black\").style(\"stroke-width\", 3);\n\n  }\n\n\n}\n\n</script>\n<body onload=\"makeViz()\">\n<div id=\"viz\"><svg></svg><div id=\"buttons\"></div></div>\n<footer>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n<script src=\"d3.layout.orbit.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n</footer>\n</body>\n</html>", "description": "Orbital Layout of D3.js API", "created_at": "2015-01-01T19:16:06Z", "updated_at": "2016-03-17T02:15:36Z", "api": ["d3.dispatch", "d3.rebind", "d3.layout.pie", "d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that visualizes the D3 API.\n\nWhen you mouseover a node, it displays its label and centers the orbit layout on that node. It also draws spokes to children and parents where applicable.", "uid": "emeeks_068ef3e4106e155467a3"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.states {\n  fill: #ccc;\n  stroke: #fff;\n}\n</style>\n<body>\n<button type=\"button\" id=\"change\">Change</button>\n\n<script src=\"https://raw.github.com/mbostock/d3/v3.0.8/d3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v0.min.js\"></script>\n\n<script>\nvar width = 960,\n    height = 500;\nvar states;\nvar projection = d3.geo.mercator()\n    .center([-97,37])\n    .scale(4000)\n    .translate([width / 2, height / 2]);\n\n\nvar path = d3.geo.path()\n.projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"/mbostock/raw/4090846/us.json\", function(error, us) {\n   states = svg.append(\"path\")\n      .attr(\"class\", \"states\")\n      .datum(topojson.object(us, us.objects.states))\n      .attr(\"d\", path);\n\n  \n});\n\nd3.select(\"#change\").on(\"click\", function() {\n  projection = d3.geo.albers();\npath.projection(projection);\nstates.transition()\n      .duration(10000)\n      .attr(\"d\", path);\n});\n\n\n</script>", "description": "Wrong way to transform a D3 projection", "created_at": "2013-03-24T19:43:39Z", "updated_at": "2015-12-15T08:48:56Z", "api": ["d3.geo.mercator", "d3.geo.path", "d3.select", "d3.json", "d3.geo.albers"], "readme": "***Actualization***\nThis behaviour has been corrected and now the example is valid, since the points are ordered the same way in both projections.\n\nFrom the mailing list:\n> OK, this has been fixed in release 3.1.4, so you'll no longer need the\nwork-around described in my previous email. Enjoy, and thank you for\nthe bug report!\n\n> http://bl.ocks.org/mbostock/580de8199ea3b85f822a\n\n\n***Initial message***\nThis example shows how a projection change must NOT be done.\nIt works properly when the D3 version is 3.0.8, but from 3.1.0, the change does strange things. \nJust change the D3 source at line 13 to https://raw.github.com/mbostock/d3/v3.1.2/d3.min.js to see the effects.\n\nI asked the question [at the D3 mailing list] (https://groups.google.com/forum/?fromgroups=#!topic/d3-js/9j37YsWU6bM).\n\nAs Mike Bostock answered:\n\n> The issue you are seeing is that projections apply adaptive resampling (as of D3 3.0, which was released last December). Therefore the number of control points for the same geometry may differ when different projections are used, and thus you cannot apply naive path interpolation to transition between two projections.\n\nMike Bostock [has a working example](http://bl.ocks.org/mbostock/3711652), and Jason David [has an other one] (https://www.jasondavies.com/maps/transition/)\n", "uid": "rveciana_5233218"}, {"code": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\n    <style type=\"text/css\">\nsvg {\n  border: solid 1px #aaa;\n}\n\n#checks {\n  margin: 10px;\n}\n    </style>\n  </head>\n  <body>\n    <script type=\"text/javascript\" src=\"http://mbostock.github.com/d3/d3.js\"></script>\n    <script type=\"text/javascript\" src=\"dragrect.js\"></script>\n    <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\" type=\"text/javascript\"></script>\n    <div id=\"checks\">\n    \tX-axis:<input type=\"checkbox\" id=\"xChecked\" checked/>\n    \tY-axis:<input type=\"checkbox\" id=\"yChecked\" checked/>\n    </div>\n\n    <script>\n$('#xChecked').click(function() {\n    isXChecked = !isXChecked;\n     dragbarleft \n        .attr(\"fill-opacity\", (isXChecked ? 0.5 : 0))\n        .attr(\"cursor\", (isXChecked ? \"ew-resize\" : \"move\"));\n     dragbarright \n        .attr(\"fill-opacity\", (isXChecked ? 0.5 : 0))\n        .attr(\"cursor\", (isXChecked ? \"ew-resize\" : \"move\"));\n});\n\n$('#yChecked').click(function() {\n    isYChecked = !isYChecked;\n     dragbartop \n        .attr(\"fill-opacity\", (isYChecked ? 0.5 : 0))\n        .attr(\"cursor\", (isYChecked ? \"ns-resize\" : \"move\"));\n     dragbarbottom \n        .attr(\"fill-opacity\", (isYChecked ? 0.5 : 0))\n        .attr(\"cursor\", (isYChecked ? \"ns-resize\" : \"move\"));\n});\n    </script>\n  </body>\n</html>", "description": "D3 Drag Rectangle with drag handles", "created_at": "2015-11-02T16:02:27Z", "updated_at": "2015-11-02T16:02:29Z", "api": ["d3.behavior.drag", "d3.select"], "readme": "\n\nforked from <a href='http://bl.ocks.org/mccannf/'>mccannf</a>'s block: <a href='http://bl.ocks.org/mccannf/1629464'>D3 Drag Rectangle with drag handles</a>", "uid": "SpaceActuary_4b358651fe079e5bfa02"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Simple tables in D3</title>\n    <meta charset=\"utf-8\">\n    <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n    <script src=\"https://rawgit.com/gka/d3-jetpack/master/d3-jetpack.js\"></script>\n    <style type=\"text/css\">\n    body { font-family: 'Helvetica Neue', Helvetica; font-weight: 300; padding: 20px;}\n    th { text-align: left; }\n    th, td { padding: 0 1em 0.5ex 0;}\n    th.center, td.center { text-align: center; }\n    th.num, td.num { text-align: right; }\n    </style>\n</head>\n<body>\n    <script>\n\n    // the table rows, typically loaded from data file using d3.csv\n    var movies = [\n        { title: \"The Godfather\", year: 1972, length: 175, budget: 6000000, rating: 9.1 },\n        { title: \"The Shawshank Redemption\", year: 1994, length: 142, budget: 25000000, rating: 9.1 },\n        { title: \"The Lord of the Rings: The Return of the King\", year: 2003, length: 251, budget: 94000000, rating: 9 },\n        { title: \"The Godfather: Part II\", year: 1974, length: 200, budget: 13000000, rating: 8.9 },\n        { title: \"Shichinin no samurai\", year: 1954, length: 206, budget: 500000, rating: 8.9 },\n        { title: \"Buono, il brutto, il cattivo, Il\", year: 1966, length: 180, budget: 1200000, rating: 8.8 },\n        { title: \"Casablanca\", year: 1942, length: 102, budget: 950000, rating: 8.8 },\n        { title: \"The Lord of the Rings: The Fellowship of the Ring\", year: 2001, length: 208, budget: 93000000, rating: 8.8 },\n        { title: \"The Lord of the Rings: The Two Towers\", year: 2002, length: 223, budget: 94000000, rating: 8.8 },\n        { title: \"Pulp Fiction\", year: 1994, length: 168, budget: 8000000, rating: 8.8 }\n    ];\n\n\n    // column definitions\n    var columns = [\n        { head: 'Movie title', cl: 'title', html: \u0192('title') },\n        { head: 'Year', cl: 'center', html: \u0192('year') },\n        { head: 'Length', cl: 'center', html: \u0192('length', length()) },\n        { head: 'Budget', cl: 'num', html: \u0192('budget', d3.format('$,'))},\n        { head: 'Rating', cl: 'num', html: \u0192('rating', d3.format('.1f'))}\n    ];\n\n    //grab ratings and make a scale with them\n    var ratings      = movies.map(function(d){return d.rating});\n    var ratingsScale = d3.scale.linear()\n    \t.domain(d3.extent(ratings))\n    \t.range([\"red\",\"steelblue\"]);\n\n   //grab the budgets too.\n    var budgets     = movies.map(function(d){return d.budget});\n    var budgetScale = d3.scale.linear()\n    \t.domain(d3.extent(budgets))\n    \t.range([\"red\",\"steelblue\"]);\n\n    // create table\n    var table = d3.select('body')\n        .append('table');\n\n    // create table header\n    table.append('thead').append('tr')\n        .selectAll('th')\n        .data(columns).enter()\n        .append('th')\n        .attr('class', \u0192('cl'))\n        .text(\u0192('head'));\n\n    // create table body\n    table.append('tbody')\n        .selectAll('tr')\n        .data(movies).enter()\n        .append('tr')\n        .selectAll('td')\n        .data(function(row, i) {\n      //row is the entry in the csv, i is the index of that entry\n            return columns.map(function(c) {\n                // compute cell values for this specific row\n                var cell = {};\n                //initialize a holder for the returned object for this column.\n                d3.keys(c).forEach(function(k) {\n                    cell[k] = typeof c[k] == 'function' ? c[k](row,i) : c[k];\n                });\n                return cell;\n            });\n        }).enter()\n        .append('td')\n    //----------------------------------------\n    //I changed this (and also some minor scaling functions above)\n\t\t.attr(\"bgcolor\", function(d,i){     //logic for coloring goes here.\n      \t\tif(d.head == \"Rating\"){         //rating column\n                return ratingsScale(d.html)\n            } else if (d.head == \"Budget\"){ //budget column\n                //There might be an d3.unformat but I couldnt find it.\n                var amt = d.html.replace(/,/g, \"\").replace(\"$\", \"\")\n                return budgetScale(amt)\n            }\n\t\t})\n    //----------------------------------------\n        .html(\u0192('html'))\n        .attr('class', \u0192('cl'));\n\n    function length() {\n        var fmt = d3.format('02d');\n        return function(l) { return Math.floor(l / 60) + ':' + fmt(l % 60) + ''; };\n    }\n\n\n    </script>\n</body>\n</html>\n", "description": "(not quite) simple tables in D3", "created_at": "2016-01-30T04:24:40Z", "updated_at": "2016-01-30T23:16:47Z", "api": ["d3.format", "d3.scale.linear", "d3.extent", "d3.select", "d3.keys"], "readme": "Forked from Gregor Aisch's Block [simple tables in D3](https://gist.github.com/gka/17ee676dc59aa752b4e6). \n\nInspired by a question posted in the comments about using the cell values in a given row to color code the background of that cell.\n", "uid": "nstrayer_5f8248aa0a3a11e9da54"}, {"code": "<!DOCTYPE html>\n\n<head>\n  <title>Difference Chart</title>\n</head>\n<meta charset=\"utf-8\">\n<style>\n\nsvg{\n  background-color: #eee;\n  margin-top: 20px;\n}\n\npath.domain {\n  fill: none;\n}\n\ng.tick > line {\n  stroke: white;\n  stroke-width: 1px;\n}\n\n</style>\n<body>\n<div id=\"viz\"></div>\n</body>\n\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n<script>\n\nvar width = 500,\n    height = 500;\n\nxScale = d3.scale.linear().domain([0,10]).range([40,760]);\nyScale = d3.scale.linear().domain([0,10]).range([60,830]);\n\nsvg = d3.select('#viz')\n    .append('svg')\n    .attr({width: width, height: height});\n\n  svg.append(\"g\").attr(\"class\",\"linechart\");\n\n  linechart = d3.select(\"g.linechart\");\n\nd3.json(\"bush_obama.json\", createLineChart);\n\nfunction createLineChart(data) {\n\n  data.forEach(function(d) {\n    d.b_a = parseInt(d.b_a);\n    d.o_a = parseInt(d.o_a);\n  });\n\n  b_aExtent = d3.extent(data, function(d) {return d.b_a});\n  o_aExtent = d3.extent(data, function(d) {return d.o_a});\n\n  chartExtent = ([Math.min(b_aExtent[0],o_aExtent[0]) - 5, Math.max(b_aExtent[1],o_aExtent[1]) + 5]);\n\n  xScale = d3.scale.linear().domain([data.length, 0]).range([20,480]);\n  yScale = d3.scale.linear().domain(chartExtent).range([480,20]);\n\n  var axis = d3.svg.axis().scale(yScale)\n    .orient(\"right\")\n    .ticks(8)\n    .tickSize(-460)\n    .tickSubdivide(true);\n\n  b_aLine = d3.svg.line().x(function(d,i) {return xScale(i)}).y(function(d) {return yScale(d.b_a)}).interpolate(\"linear\");\n  o_aLine = d3.svg.line().x(function(d,i) {return xScale(i)}).y(function(d) {return yScale(d.o_a)}).interpolate(\"linear\");\n\n  b_aDifference = d3.svg.area().x(function(d,i) {return xScale(i)})\n  .y(function(d) {return yScale(Math.max(d.b_a,d.o_a))})\n  .y0(function(d) {return yScale(d.o_a)})\n  .interpolate(\"linear\");\n  \n  o_aDifference = d3.svg.area().x(function(d,i) {return xScale(i)})\n  .y(function(d) {return yScale(Math.max(d.o_a,d.b_a))})\n  .y0(function(d) {return yScale(d.b_a)})\n  .interpolate(\"linear\");\n\n  linechart.append(\"g\").attr(\"transform\", \"translate(480,0)\").call(axis);\n\n  linechart.append(\"path\")\n  .style(\"fill\", \"green\")\n  .style(\"fill-opacity\", .5)\n  .attr(\"class\", \"difference\")\n  .attr(\"d\", b_aDifference(data))\n\n  linechart.append(\"path\")\n  .style(\"fill\", \"red\")\n  .style(\"fill-opacity\", .5)\n  .attr(\"class\", \"difference\")\n  .attr(\"d\", o_aDifference(data))\n\n  linechart.append(\"path\")\n  .style(\"fill\", \"none\")\n  .style(\"stroke-width\", \"1px\")\n  .style(\"stroke\", \"darkgreen\")\n  .attr(\"class\", \"line\")\n  .attr(\"d\", b_aLine(data))\n\n  linechart.append(\"path\")\n  .style(\"fill\", \"none\")\n  .style(\"stroke-width\", \"1px\")\n  .style(\"stroke\", \"darkred\")\n  .attr(\"class\", \"line\")\n  .attr(\"d\", o_aLine(data))\n}\n\n</script>", "description": "Simple Difference Chart with d3.svg.area", "created_at": "2015-04-15T15:47:43Z", "updated_at": "2016-03-17T02:11:25Z", "api": ["d3.scale.linear", "d3.select", "d3.json", "d3.extent", "d3.svg.axis", "d3.svg.line", "d3.svg.area"], "readme": "A difference chart of presidential approval ratings of the Obama and Bush (43) administrations. Difference charts graphically encode the variance between two time series (typically) coloring the variance to indicate which time series has a higher value during that period. All the examples I've seen of difference charts in D3 use clipping or convoluted mechanisms to create the difference area.\n\nHere's an example that just uses d3.svg.area and defines the y value as the maximum of the two time series points at that position and the y0 value as whichever time series you're using as the baseline. To give the chart the expected outlines, d3.svg.line is used to draw each time series on top of the difference areas.\n\nThis chart was used in my [exploration of figure/ground and metastability in data visualization](http://emeeks.github.io/gestaltdataviz/section4.html).", "uid": "emeeks_02d6acaed240ba0a504e"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Quadtree-based Feature Clustering with TopoJSON Merging- d3.carto</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    stroke: white;\n  }\n  \n  .clustered {\n    stroke: red;\n    fill: orange;\n  }\n  \n</style>\n<script>\n\n  function makeSomeMaps() {\n    pathSource = 0;\n\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    map.centerOn([-88,39],\"latlong\").setScale(2).clusteringTolerance(1);\n\n    regionLayer = d3.carto.layer.topojson();\n    regionLayer\n    .path(\"world.topojson\")\n    .label(\"Countries\")\n    .cssClass(\"country\")\n    .renderMode(\"svg\")\n    .on(\"recluster\", recolorClusters)\n    .specificFeature(\"countries\")\n    .cluster(true);\n    \n    map.addCartoLayer(regionLayer);\n\n    map.refresh();\n    \n    function recolorClusters() {\n        var clusterColor = d3.scale.category20b();\n\n    regionLayer.clusterLayer().g()\n    .selectAll(\"path\")\n    .style(\"fill\", function(d,i) {return !d.properties.node.leaf ? clusterColor(i%19) : \"lightgray\"})\n    .style(\"stroke\", function(d,i) {return !d.properties.node.leaf ? \"black\" : \"white\"})\n    .style(\"stroke-width\", function(d,i) {return !d.properties.node.leaf ? \"2px\" : \"1px\"})\n\n    d3.selectAll(\"g.marker\").style(\"pointer-events\", \"none\")\n    }\n\n  }\n  \n  \n  \n\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\">\n</div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>\n", "description": "Topojson Merged Feature Clustering - d3.carto", "created_at": "2014-09-15T04:30:36Z", "updated_at": "2015-08-29T14:06:30Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.topojson", "d3.scale.category20b", "d3.selectAll"], "readme": "Zoom in and zoom out to see dynamically clustered and merged features. Quadtree-based feature clustering in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** that takes advantage of [topojson's](https://github.com/mbostock/topojson) built-in merging functionality.\n\nIn contrast to [feature clustering with GeoJSON features](http://bl.ocks.org/emeeks/1a75ec54489368b514f8), which create multipolygons from the clustered features, topojson layers create merged polygons from clustered features.\n\nThis also demonstrates map.clusteringTolerance() which allows you to increase or decrease the degree of clustering.\n\nSee also [simple point clustering](http://bl.ocks.org/emeeks/7d5925cb7d9721c60360) and [more advanced point clustering that leverages circle-packing](http://bl.ocks.org/emeeks/540b1b884b80b14a44c6).\n", "uid": "emeeks_66a38345f12cbe3452ec"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Automatic Hexbinning</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n      function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    tileLayer = d3.carto.layer.tile();\n    tileLayer\n    .tileType(\"stamen\")\n\n    .path(\"toner\")\n    .label(\"Base\")\n\nvar url = 'http://data.sfgov.org/resource/tmnf-yvry.csv?$order=date DESC&$q=BICYCLE&$limit=1000'\n\n\n/*\n    d3.json(url,function(err, data){\n      if(err){\n        throw err\n      }\n\n      console.log('loading finished', data);\n\n      var bikecri = d3.carto.layer.xyArray();\n        bikecri\n        .path(data)\n        .x('x')\n        .y('y')\n\n      map.addCartoLayer(bikecri)\n\n\n\n\n})\n\n*/\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(url)\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"canvas\")\n    .markerColor(\"purple\")\n    .markerSize(.95)\n    .x(\"X\")\n    .y(\"Y\")\n    .on(\"load\", makeHexbins)\n\n    map.addCartoLayer(tileLayer).addCartoLayer(csvLayer);\n    map.centerOn([-122.4167,37.7833],\"latlong\").setScale(10);\n\n    function makeHexbins() {\n      var colorScale = d3.scale.linear().domain([1,5,30]).range([\"yellow\",\"orange\",\"red\"])\n      hexbinLayerLarge = map.createHexbinLayer(csvLayer, 2);\n      hexbinLayerSmall = map.createHexbinLayer(csvLayer, .0075);\n      hexbinLayerLarge\n      .label(\"2 Degree Hexbin\")\n      .visibility(false)\n      .on(\"load\", function() {hexbinLayerLarge.g().selectAll(\"path\").style(\"opacity\", .5).style(\"fill\", function(d) {return colorScale(d.properties.node.length)})})\n\n      hexbinLayerSmall\n      .label(\"Hexbin\")\n      .on(\"load\", function() {hexbinLayerSmall.g().selectAll(\"path\").style(\"opacity\", .5).style(\"fill\", function(d) {return colorScale(d.properties.node.length)})})\n\n      map.addCartoLayer(hexbinLayerSmall);\n      \n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"hexbin.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>\n", "description": "Bike theft d3.carto.map() hex binning copy", "created_at": "2014-11-06T01:11:51Z", "updated_at": "2015-08-29T14:08:41Z", "api": ["d3.values", "d3.range", "d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.json", "d3.carto.layer.xyArray", "d3.carto.layer.csv", "d3.scale.linear"], "readme": "Copying and changing a little an example of Automatic hexbinning in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** allows for the creation of granular or high resolution heatmaps.\n\nThe map.createHexbinLayer function takes two variable: a point d3.carto.layer (either CSV or XY Array) and a resolution (in degrees). It creates a feature carto layer that automatically bins the points in the source layer and which you can then add to the map easily.\n\nIn this example, I generate two different hexbin resolutions: One at 2-degree and one at .75 degree, so that you can see how simple it is. The original point objects are found in the properties.node attribute of each hex feature and can be used to count the number or average the population, etc.\n\nThis requires a slightly modified [hexbin.js](https://github.com/emeeks/d3-plugins/blob/master/hexbin/hexbin.js) (also in this gist) to work.\n\nThis example has some data pulled from the SF data portal in particular, it's getting a csv of bike thefts from the SFPD incident  data from the past three months.  ", "uid": "mpmckenna8_23751a2094c7db90575a"}, {"code": "<!DOCTYPE html>\n<html class=\"ocks-org do-not-copy\">\n<meta charset=\"utf-8\">\n<title>D3 + Leaflet</title>\n<style>\n\n@import url(//cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.2/leaflet.css);\n\n#map {\n  width: 960px;\n  height: 500px;\n}\n\nsvg {\n  position: relative;\n}\n\n</style>\n\n<h1>Gutters and polys</h1>\n\n<p id=\"map\">\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.2/leaflet.js\"></script>\n<script>\n\nvar map = new L.Map(\"map\", {center: [37.8, -96.9], zoom: 4})\n    .addLayer(new L.TileLayer(\"http://{s}.tile.stamen.com/watercolor/{z}/{x}/{y}.jpg\"));\n\nvar svg = d3.select(map.getPanes().overlayPane).append(\"svg\"),\n    g = svg.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\");\n\n// filters go in defs element\nvar defs = svg.append(\"defs\");\n\nvar filter = defs.append(\"filter\")\n    .attr(\"id\", \"places-blur\")\n    .attr(\"height\", \"150%\");\n\nfilter.append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", 4)\n    .attr(\"result\", \"blur\");\n\nd3.json(\"us-states.json\", function(collection) {\n  var transform = d3.geo.transform({point: projectPoint}),\n      path = d3.geo.path().projection(transform);\n\n  var feature = g.selectAll(\"path\")\n      .data(collection.features)\n    .enter().append(\"path\");\n\n  map.on(\"viewreset\", reset);\n  reset();\n\n  // Reposition the SVG to cover the features.\n  function reset() {\n    var bounds = path.bounds(collection),\n        topLeft = bounds[0],\n        bottomRight = bounds[1];\n\n    svg.attr(\"width\", bottomRight[0] - topLeft[0])\n        .attr(\"height\", bottomRight[1] - topLeft[1])\n        .style(\"left\", topLeft[0] + \"px\")\n        .style(\"top\", topLeft[1] + \"px\");\n\n    g.attr(\"transform\", \"translate(\" + -topLeft[0] + \",\" + -topLeft[1] + \")\");\n\n    feature\n      .attr(\"d\", path)\n      .attr(\"class\",\"mask\")\n      .style(\"filter\",\"url(#places-blur)\")\n      .style(\"stroke\", \"#999\")\n      .style(\"stroke-width\", 0)\n      .style(\"fill-opacity\",0.8) \n  }\n\n  // Use Leaflet to implement a D3 geometric transformation.\n  function projectPoint(x, y) {\n    var point = map.latLngToLayerPoint(new L.LatLng(y, x));\n    this.stream.point(point.x, point.y);\n  }\n});\n\n</script>", "description": "Edge blur filter w/ D3", "created_at": "2014-12-09T17:52:52Z", "updated_at": "2015-11-05T18:41:35Z", "api": ["d3.select", "d3.json", "d3.geo.transform", "d3.geo.path"], "readme": "", "uid": "wboykinm_6a14e910b5738c89e239"}, {"code": "<!doctype html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Line Chart</title>\n<style>\n\n  .axis path,\n  .axis line{\n    fill: none;\n    stroke: black;\n  }\n\n  .line{\n    fill: none;\n    stroke: blue;\n    stroke-width: 2px;\n  }\n\n  .tick text{\n    font-size: 12px;\n  }\n\n  .tick line{\n    opacity: 0.2;\n  }\n\n</style>\n</head>\n<body>\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 100, bottom: 30, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar dataset = [\n  {x: 0, y: 5},\n  {x: 1, y: 8},\n  {x: 2, y: 13},\n  {x: 3, y: 12},\n  {x: 4, y: 16},\n  {x: 5, y: 21},\n  {x: 6, y: 18},\n  {x: 7, y: 23},\n  {x: 8, y: 24},\n  {x: 9, y: 28},\n  {x: 10, y: 35},\n  {x: 11, y: 30},\n  {x: 12, y: 32},\n  {x: 13, y: 36},\n  {x: 14, y: 40},\n  {x: 15, y: 38},\n];\n\nvar xScale = d3.scale.linear()\n    .domain([0, d3.max(dataset, function(d){ return d.x; })])\n    .range([0, width]);\n\nvar yScale = d3.scale.linear()\n    .domain([0, d3.max(dataset, function(d){ return d.y; })])\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\")\n    .innerTickSize(-height)\n    .outerTickSize(0)\n    .tickPadding(10);\n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\")\n    .innerTickSize(-width)\n    .outerTickSize(0)\n    .tickPadding(10);\n\nvar line = d3.svg.line()\n    .x(function(d) { return xScale(d.x); })\n    .y(function(d) { return yScale(d.y); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n\n  svg.append(\"path\")\n      .data([dataset])\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n</script>\n</body>\n</html>", "description": "Line Chart with Grid [D3]", "created_at": "2014-04-20T10:42:21Z", "updated_at": "2016-02-23T09:49:02Z", "api": ["d3.scale.linear", "d3.max", "d3.svg.axis", "d3.svg.line", "d3.select"], "readme": "", "uid": "hunzy_11110940"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.point {\n  fill: #2f225d;\n  stroke: #afa2dc;\n}\n\n.selected {\n  fill: #afa2dc;\n  stroke: #2f225d;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\np {\n  font: 12px sans-serif;\n  margin: 0 0 2px 0;\n  padding: 0;\n}\n\n.clear-button {\n  font: 14px sans-serif;\n  cursor: pointer;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar data = [];\nvar values = [];\nfor (var i = 2; i <= 50; i++) {\n    var val = Math.floor(Math.random() * (50 - 5 + 1) + 5);\n    data.push({index: i, value: val});\n    values.push(val);\n}\n\nvar margin = {top: 20, right: 20, bottom: 60, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([0, 50]);\n\nvar y = d3.scale.linear()\n    .range([height, 0])\n    .domain([0, d3.max(values) + 5]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(11);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\npoints = svg.selectAll(\".point\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"class\", \"point\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"r\", function(d){return Math.floor(Math.random() * (20 - 5 + 1) + 5);})\n    .attr(\"cx\", function(d) { return x(d.index); })\n    .attr(\"cy\", function(d) { return y(d.value); });\n\n</script>", "description": "D3 Brush and Tooltip I", "created_at": "2013-11-24T17:35:37Z", "updated_at": "2015-12-29T06:38:57Z", "api": ["d3.scale.linear", "d3.max", "d3.svg.axis", "d3.select"], "readme": "Example for [Cooperative Brushing and Tooltips in D3](http://wrobstory.github.io/2013/11/D3-brush-and-tooltip.html). \n\nScatterplot only - no tooltips or brush. ", "uid": "wrobstory_7629900"}, {"code": "<html>\n<head>\n  <title>d3.svg.ribbon with Napoleon's March</title>\n  <meta charset=\"utf-8\" />\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"d3.svg.ribbon.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    height: 2000px;\n    width: 2000px;\n  }\n\n</style>\n<body>\n\n<div id=\"viz\">\n  <svg>\n  </svg>\n</div>\n</body>\n  <footer>\n\n<script>\n\ncolorScale = d3.scale.ordinal().range([\"#96abb1\", \"#313746\", \"#b0909d\", \"#687a97\", \"#292014\"])\n\narmy = [\n    /* Group 1 */\n    {lon:24.0,  lat:54.9,  size:340000, dir:1,  group:1},\n    {lon:24.5,  lat:55.0,  size:340000, dir:1,  group:1},\n    {lon:25.5,  lat:54.6,  size:340000, dir:1,  group:1},\n    {lon:26.0,  lat:54.7,  size:320000, dir:1,  group:1},\n    {lon:27.0,  lat:54.8,  size:300000, dir:1,  group:1},\n    {lon:28.0,  lat:54.9,  size:280000, dir:1,  group:1},\n    {lon:28.5,  lat:55.0,  size:240000, dir:1,  group:1},\n    {lon:29.0,  lat:55.1,  size:210000, dir:1,  group:1},\n    {lon:30.0,  lat:55.2,  size:180000, dir:1,  group:1},\n    {lon:30.3,  lat:55.3,  size:175000, dir:1,  group:1},\n    {lon:32.0,  lat:54.8,  size:145000, dir:1,  group:1},\n    {lon:33.2,  lat:54.9,  size:140000, dir:1,  group:1},\n    {lon:34.4,  lat:55.5,  size:127100, dir:1,  group:1},\n    {lon:35.5,  lat:55.4,  size:100000, dir:1,  group:1},\n    {lon:36.0,  lat:55.5,  size:100000, dir:1,  group:1},\n    {lon:37.6,  lat:55.8,  size:100000, dir:1,  group:1},\n    {lon:37.65, lat:55.65, size:100000, dir:-1, group:1},\n    {lon:37.45, lat:55.62, size:98000,  dir:-1, group:1},\n    {lon:37.0,  lat:55.0,  size:97000,  dir:-1, group:1},\n    {lon:36.8,  lat:55.0,  size:96000,  dir:-1, group:1},\n    {lon:35.4,  lat:55.3,  size:87000,  dir:-1, group:1},\n    {lon:34.3,  lat:55.2,  size:55000,  dir:-1, group:1},\n    {lon:33.3,  lat:54.8,  size:37000,  dir:-1, group:1},\n    {lon:32.0,  lat:54.6,  size:24000,  dir:-1, group:1},\n    {lon:30.4,  lat:54.4,  size:20000,  dir:-1, group:1},\n    {lon:29.2,  lat:54.3,  size:20000,  dir:-1, group:1},\n    {lon:29.13, lat:54.29, size:50000,  dir:-1, group:1}, /* joined by group 2 */\n    {lon:28.5,  lat:54.2,  size:50000,  dir:-1, group:1},\n    {lon:28.3,  lat:54.3,  size:48000,  dir:-1, group:1},\n    {lon:26.8,  lat:54.3,  size:12000,  dir:-1, group:1},\n    {lon:26.8,  lat:54.4,  size:14000,  dir:-1, group:1},\n    {lon:25.0,  lat:54.4,  size:8000,   dir:-1, group:1},\n    {lon:24.4,  lat:54.4,  size:4000,   dir:-1, group:1},\n    {lon:24.2,  lat:54.4,  size:4000,   dir:-1, group:1},\n    {lon:24.1,  lat:54.4,  size:4000,   dir:-1, group:1},\n    /* Group 2 */\n    {lon:24.0,  lat:55.1,  size:60000,  dir:1,  group:2},\n    {lon:24.5,  lat:55.2,  size:60000,  dir:1,  group:2},\n    {lon:25.5,  lat:54.7,  size:60000,  dir:1,  group:2},\n    {lon:26.6,  lat:55.7,  size:40000,  dir:1,  group:2},\n    {lon:27.4,  lat:55.6,  size:33000,  dir:1,  group:2},\n    {lon:28.7,  lat:55.5,  size:33000,  dir:1,  group:2},\n    {lon:28.7,  lat:55.5,  size:33000,  dir:-1, group:2},\n    {lon:29.2,  lat:54.29, size:30000,  dir:-1, group:2},\n    /* Group 3 */\n    {lon:24.0,  lat:55.2,  size:22000,  dir:1,  group:3},\n    {lon:24.5,  lat:55.3,  size:22000,  dir:1,  group:3},\n    {lon:24.6,  lat:55.8,  size:6000,   dir:1,  group:3},\n    {lon:24.6,  lat:55.8,  size:6000,   dir:-1, group:3},\n    {lon:24.2,  lat:54.4,  size:6000,   dir:-1, group:3},\n    {lon:24.1,  lat:54.4,  size:6000,   dir:-1, group:3}\n];\n\nprojection = d3.geo.equirectangular().translate([-3300,7800]).scale(8000);\nsizeScale = d3.scale.linear().domain([6000,340000]).range([1,10])\n\nribbon = d3.svg.ribbon()\n  .x(function(d) {return projection([d.lon, d.lat])[0]})\n  .y(function(d) {return projection([d.lon, d.lat])[1]})\n  .r(function(d) {return sizeScale(d.size)});\n\ndrag = d3.behavior.drag().on(\"drag\", function (d) {\n  d.x = d3.event.x;\n  d.y = d3.event.y;\n  redraw();\n});\n\nvar groupNest = d3.nest().key(function (d) {return d.group}).entries(army);\n\nd3.select(\"svg\")\n.selectAll(\"path.minard\")\n.data(groupNest)\n.enter()\n.append(\"path\")\n.attr(\"class\", \"minard\")\n.style(\"fill\", function (d) {return colorScale(d.key)})\n.style(\"stroke\", \"gray\")\n.style(\"stroke-opacity\", 0.15)\n.style(\"stroke-width\", \"2px\")\n.attr(\"d\", function (d) {return ribbon(d.values)})\n\n</script>\n  </footer>\n\n</html>\n", "description": "Napoleon's March with d3.svg.ribbon", "created_at": "2015-08-23T17:34:13Z", "updated_at": "2016-03-16T15:48:05Z", "api": ["d3.svg.line", "d3.scale.ordinal", "d3.geo.equirectangular", "d3.scale.linear", "d3.svg.ribbon", "d3.behavior.drag", "d3.nest", "d3.select"], "readme": "An example of [d3.svg.ribbon](https://github.com/emeeks/d3.svg.ribbon) using Napoleon's March through Russia made famous by Minard's map. Dataset comes from Ben Schmidt's use of it in his excellent [d3.trail layout](https://github.com/bmschmidt/D3-trail).\n\nThe pattern for using d3.svg.ribbon with geodata is simply to factor the projection into the accessors:\n\n```\nprojection = d3.geo.equirectangular().translate([-3300,7800]).scale(8000);\nsizeScale = d3.scale.linear().domain([6000,340000]).range([1,10])\n\nribbon = d3.svg.ribbon()\n  .x(function(d) {return projection([d.lon, d.lat])[0]})\n  .y(function(d) {return projection([d.lon, d.lat])[1]})\n  .r(function(d) {return sizeScale(d.size)});\n```", "uid": "emeeks_a0b5a95c999628547494"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.point {\n  fill: #2f225d;\n  stroke: #afa2dc;\n}\n\n.selected {\n  fill: #afa2dc;\n  stroke: #2f225d;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\np {\n  font: 12px sans-serif;\n  margin: 0 0 2px 0;\n  padding: 0;\n}\n\n.clear-button {\n  font: 14px sans-serif;\n  cursor: pointer;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\nd3.helper = {};\n\nd3.helper.tooltip = function(){\n    var tooltipDiv;\n    var bodyNode = d3.select('body').node();\n\n    function tooltip(selection){\n\n        selection.on('mouseover.tooltip', function(pD, pI){\n            // Clean up lost tooltips\n            d3.select('body').selectAll('div.tooltip').remove();\n            // Append tooltip\n            tooltipDiv = d3.select('body')\n                           .append('div')\n                           .attr('class', 'tooltip')\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px',\n                'background-color': '#d8d5e4',\n                width: '65px',\n                height: '30px',\n                padding: '5px',\n                position: 'absolute',\n                'z-index': 1001,\n                'box-shadow': '0 1px 2px 0 #656565'\n            });\n\n            var first_line = '<p>X-Value: ' + pD.index + '</p>'\n            var second_line = '<p>Y-Value: ' + pD.value + '</p>'\n\n            tooltipDiv.html(first_line + second_line)\n        })\n        .on('mousemove.tooltip', function(pD, pI){\n            // Move tooltip\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px'\n            });\n        })\n        .on('mouseout.tooltip', function(pD, pI){\n            // Remove tooltip\n            tooltipDiv.remove();\n        });\n\n    }\n\n    tooltip.attr = function(_x){\n        if (!arguments.length) return attrs;\n        attrs = _x;\n        return this;\n    };\n\n    tooltip.style = function(_x){\n        if (!arguments.length) return styles;\n        styles = _x;\n        return this;\n    };\n\n    return tooltip;\n};\n\nvar data = [];\nvar values = [];\nfor (var i = 2; i <= 50; i++) {\n    var val = Math.floor(Math.random() * (50 - 5 + 1) + 5);\n    data.push({index: i, value: val});\n    values.push(val);\n}\n\nvar margin = {top: 20, right: 20, bottom: 60, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([0, 50]);\n\nvar y = d3.scale.linear()\n    .range([height, 0])\n    .domain([0, d3.max(values) + 5]);\n\nvar brush = d3.svg.brush()\n    .x(x)\n    .on(\"brush\", brushmove)\n    .on(\"brushend\", brushend);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(11);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"brush\")\n    .call(brush)\n  .selectAll('rect')\n    .attr('height', height);\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height + 20);\n\npoints = svg.selectAll(\".point\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"class\", \"point\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"r\", function(d){return Math.floor(Math.random() * (20 - 5 + 1) + 5);})\n    .attr(\"cx\", function(d) { return x(d.index); })\n    .attr(\"cy\", function(d) { return y(d.value); })\n    .call(d3.helper.tooltip());\n\npoints.on('mousedown', function(){\n  brush_elm = svg.select(\".brush\").node();\n  new_click_event = new Event('mousedown');\n  new_click_event.pageX = d3.event.pageX;\n  new_click_event.clientX = d3.event.clientX;\n  new_click_event.pageY = d3.event.pageY;\n  new_click_event.clientY = d3.event.clientY;\n  brush_elm.dispatchEvent(new_click_event);\n});\n\nfunction brushmove() {\n  var extent = brush.extent();\n  points.classed(\"selected\", function(d) {\n    is_brushed = extent[0] <= d.index && d.index <= extent[1];\n    return is_brushed;\n  });\n}\n\nfunction brushend() {\n  get_button = d3.select(\".clear-button\");\n  if(get_button.empty() === true) {\n    clear_button = svg.append('text')\n      .attr(\"y\", 460)\n      .attr(\"x\", 825)\n      .attr(\"class\", \"clear-button\")\n      .text(\"Clear Brush\");\n  }\n\n  x.domain(brush.extent());\n\n  transition_data();\n  reset_axis();\n\n  points.classed(\"selected\", false);\n  d3.select(\".brush\").call(brush.clear());\n\n  clear_button.on('click', function(){\n    x.domain([0, 50]);\n    transition_data();\n    reset_axis();\n    clear_button.remove();\n  });\n}\n\nfunction transition_data() {\n  svg.selectAll(\".point\")\n    .data(data)\n  .transition()\n    .duration(500)\n    .attr(\"cx\", function(d) { return x(d.index); });\n}\n\nfunction reset_axis() {\n  svg.transition().duration(500)\n   .select(\".x.axis\")\n   .call(xAxis);\n}\n\n\n</script>", "description": "D3 Brush and Tooltip Complete", "created_at": "2013-11-23T07:56:20Z", "updated_at": "2016-03-17T18:35:15Z", "api": ["d3.select", "d3.mouse", "d3.scale.linear", "d3.max", "d3.svg.brush", "d3.svg.axis", "d3.helper.tooltip"], "readme": "Example for [Cooperative Brushing and Tooltips in D3](http://wrobstory.github.io/2013/11/D3-brush-and-tooltip.html). \n\nThe completed chart, with both tooltips and brushing working cooperatively. You can start a brush-zoom on either the background or a data point. ", "uid": "wrobstory_7612013"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n\n    <title>Collapsible Tree Example</title>\n\n    <style>\n\n\t.node circle {\n\t  fill: #fff;\n\t  stroke: steelblue;\n\t  stroke-width: 3px;\n\t}\n\n\t.node text { font: 12px sans-serif; }\n\n\t.link {\n\t  fill: none;\n\t  stroke: #ccc;\n\t  stroke-width: 2px;\n\t}\n\t\n    </style>\n\n  </head>\n\n  <body>\n\n<!-- load the d3.js library -->\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\t\n<script>\n\n// ************** Generate the tree diagram\t *****************\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n\twidth = 960 - margin.right - margin.left,\n\theight = 500 - margin.top - margin.bottom;\n\t\nvar i = 0;\n\nvar tree = d3.layout.tree()\n\t.size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n\t.projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.right + margin.left)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// load the external data\nd3.csv(\"treedata.csv\", function(error, data) {\n\n// *********** Convert flat data into a nice tree ***************\n// create a name: node map\nvar dataMap = data.reduce(function(map, node) {\n\tmap[node.name] = node;\n\treturn map;\n}, {});\n\n// create the tree array\nvar treeData = [];\ndata.forEach(function(node) {\n\t// add to parent\n\tvar parent = dataMap[node.parent];\n\tif (parent) {\n\t\t// create child array if it doesn't exist\n\t\t(parent.children || (parent.children = []))\n\t\t\t// add node to child array\n\t\t\t.push(node);\n\t} else {\n\t\t// parent is null or missing\n\t\ttreeData.push(node);\n\t}\n});\n\n  root = treeData[0];\n  update(root);\n});\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n\t  links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Declare the nodes\u00e2\u20ac\u00a6\n  var node = svg.selectAll(\"g.node\")\n\t  .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter the nodes.\n  var nodeEnter = node.enter().append(\"g\")\n\t  .attr(\"class\", \"node\")\n\t  .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeEnter.append(\"circle\")\n\t  .attr(\"r\", 10)\n\t  .style(\"fill\", \"#fff\");\n\n  nodeEnter.append(\"text\")\n\t  .attr(\"x\", function(d) { \n\t\t  return d.children || d._children ? -13 : 13; })\n\t  .attr(\"dy\", \".35em\")\n\t  .attr(\"text-anchor\", function(d) { \n\t\t  return d.children || d._children ? \"end\" : \"start\"; })\n\t  .text(function(d) { return d.name; })\n\t  .style(\"fill-opacity\", 1);\n\n  // Declare the links\u00e2\u20ac\u00a6\n  var link = svg.selectAll(\"path.link\")\n\t  .data(links, function(d) { return d.target.id; });\n\n  // Enter the links.\n  link.enter().insert(\"path\", \"g\")\n\t  .attr(\"class\", \"link\")\n\t  .attr(\"d\", diagonal);\n\n}\n\n</script>\n\t\n  </body>\n</html>", "description": "d3.js tree from csv", "created_at": "2015-01-16T18:23:43Z", "updated_at": "2016-01-31T14:46:02Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.csv"], "readme": "This is a simple d3.js tree diagram put together in response to a question on [Stack Overflow](http://stackoverflow.com/questions/27912763/creating-a-d3-js-collapsible-tree-from-csv-data)\n\nIt is aimed at providing some exposure to some d3.js functions and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_fa0f16e271cb191ae85f"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.point {\n  fill: #2f225d;\n  stroke: #afa2dc;\n}\n\n.selected {\n  fill: #afa2dc;\n  stroke: #2f225d;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\np {\n  font: 12px sans-serif;\n  margin: 0 0 2px 0;\n  padding: 0;\n}\n\n.clear-button {\n  font: 14px sans-serif;\n  cursor: pointer;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\nd3.helper = {};\n\nd3.helper = {};\n\nd3.helper.tooltip = function(){\n    var tooltipDiv;\n    var bodyNode = d3.select('body').node();\n\n    function tooltip(selection){\n\n        selection.on('mouseover.tooltip', function(pD, pI){\n            // Clean up lost tooltips\n            d3.select('body').selectAll('div.tooltip').remove();\n            // Append tooltip\n            tooltipDiv = d3.select('body')\n                           .append('div')\n                           .attr('class', 'tooltip')\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px',\n                'background-color': '#d8d5e4',\n                width: '65px',\n                height: '30px',\n                padding: '5px',\n                position: 'absolute',\n                'z-index': 1001,\n                'box-shadow': '0 1px 2px 0 #656565'\n            });\n\n            var first_line = '<p>X-Value: ' + pD.index + '</p>'\n            var second_line = '<p>Y-Value: ' + pD.value + '</p>'\n\n            tooltipDiv.html(first_line + second_line)\n        })\n        .on('mousemove.tooltip', function(pD, pI){\n            // Move tooltip\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px'\n            });\n        })\n        .on('mouseout.tooltip', function(pD, pI){\n            // Remove tooltip\n            tooltipDiv.remove();\n        });\n\n    }\n\n    tooltip.attr = function(_x){\n        if (!arguments.length) return attrs;\n        attrs = _x;\n        return this;\n    };\n\n    tooltip.style = function(_x){\n        if (!arguments.length) return styles;\n        styles = _x;\n        return this;\n    };\n\n    return tooltip;\n};\n\nvar data = [];\nvar values = [];\nfor (var i = 2; i <= 50; i++) {\n    var val = Math.floor(Math.random() * (50 - 5 + 1) + 5);\n    data.push({index: i, value: val});\n    values.push(val);\n}\n\nvar margin = {top: 20, right: 20, bottom: 60, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([0, 50]);\n\nvar y = d3.scale.linear()\n    .range([height, 0])\n    .domain([0, d3.max(values) + 5]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(11);\n\nvar brush = d3.svg.brush()\n    .x(x)\n    .on(\"brush\", brushmove)\n    .on(\"brushend\", brushend);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"brush\")\n    .call(brush)\n  .selectAll('rect')\n    .attr('height', height);\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height + 20);\n\npoints = svg.selectAll(\".point\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"class\", \"point\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"r\", function(d){return Math.floor(Math.random() * (20 - 5 + 1) + 5);})\n    .attr(\"cx\", function(d) { return x(d.index); })\n    .attr(\"cy\", function(d) { return y(d.value); })\n    .call(d3.helper.tooltip());\n\nfunction brushmove() {\n  var extent = brush.extent();\n  points.classed(\"selected\", function(d) {\n    is_brushed = extent[0] <= d.index && d.index <= extent[1];\n    return is_brushed;\n  });\n}\n\nfunction brushend() {\n  get_button = d3.select(\".clear-button\");\n  if(get_button.empty() === true) {\n    clear_button = svg.append('text')\n      .attr(\"y\", 460)\n      .attr(\"x\", 825)\n      .attr(\"class\", \"clear-button\")\n      .text(\"Clear Brush\");\n  }\n\n  x.domain(brush.extent());\n\n  transition_data();\n  reset_axis();\n\n  points.classed(\"selected\", false);\n  d3.select(\".brush\").call(brush.clear());\n\n  clear_button.on('click', function(){\n    x.domain([0, 50]);\n    transition_data();\n    reset_axis();\n    clear_button.remove();\n  });\n}\n\nfunction transition_data() {\n  svg.selectAll(\".point\")\n    .data(data)\n  .transition()\n    .duration(500)\n    .attr(\"cx\", function(d) { return x(d.index); });\n}\n\nfunction reset_axis() {\n  svg.transition().duration(500)\n   .select(\".x.axis\")\n   .call(xAxis);\n}\n\n</script>", "description": "D3 Brush and Tooltip IV", "created_at": "2013-11-24T18:38:38Z", "updated_at": "2015-12-29T06:39:15Z", "api": ["d3.select", "d3.mouse", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.svg.brush", "d3.helper.tooltip"], "readme": "Example for [Cooperative Brushing and Tooltips in D3](http://wrobstory.github.io/2013/11/D3-brush-and-tooltip.html). \n\nNote that the brush layer lives behind the data points, and therefore a brush cannot be started on the data point itself, only in the background layer. ", "uid": "wrobstory_7630654"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n\n    <title>Tree Example</title>\n\n    <style>\n\t\n\t.node {\n\t\tcursor: pointer;\n\t}\n\n\t.node circle {\n\t  fill: #fff;\n\t  stroke: steelblue;\n\t  stroke-width: 3px;\n\t}\n\n\t.node text {\n\t  font: 12px sans-serif;\n\t}\n\n\t.link {\n\t  fill: none;\n\t  stroke: #ccc;\n\t  stroke-width: 2px;\n\t}\n\t\n    </style>\n\n  </head>\n\n  <body>\n\n<!-- load the d3.js library -->\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\t\n<script>\n\nvar treeData = [\n  {\n    \"name\": \"Top Level\",\n    \"parent\": \"null\",\n    \"children\": [\n      {\n        \"name\": \"Level 2: A\",\n        \"parent\": \"Top Level\",\n        \"children\": [\n          {\n            \"name\": \"Son of A\",\n            \"parent\": \"Level 2: A\"\n          },\n          {\n            \"name\": \"Daughter of A\",\n            \"parent\": \"Level 2: A\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Level 2: B\",\n        \"parent\": \"Top Level\"\n      }\n    ]\n  }\n];\n\n\n// ************** Generate the tree diagram\t *****************\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n\twidth = 960 - margin.right - margin.left,\n\theight = 500 - margin.top - margin.bottom;\n\t\nvar i = 0,\n\tduration = 750,\n\troot;\n\nvar tree = d3.layout.tree()\n\t.size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n\t.projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.right + margin.left)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nroot = treeData[0];\nroot.x0 = height / 2;\nroot.y0 = 0;\n  \nupdate(root);\n\nd3.select(self.frameElement).style(\"height\", \"500px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n\t  links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\u2026\n  var node = svg.selectAll(\"g.node\")\n\t  .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n\t  .attr(\"class\", \"node\")\n\t  .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n\t  .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n\t  .attr(\"r\", 1e-6)\n\t  .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n\t  .attr(\"x\", function(d) { return d.children || d._children ? -13 : 13; })\n\t  .attr(\"dy\", \".35em\")\n\t  .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n\t  .text(function(d) { return d.name; })\n\t  .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n\t  .duration(duration)\n\t  .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n\t  .attr(\"r\", 10)\n\t  .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n\t  .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n\t  .duration(duration)\n\t  .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n\t  .remove();\n\n  nodeExit.select(\"circle\")\n\t  .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n\t  .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\u2026\n  var link = svg.selectAll(\"path.link\")\n\t  .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n\t  .attr(\"class\", \"link\")\n\t  .attr(\"d\", function(d) {\n\t\tvar o = {x: source.x0, y: source.y0};\n\t\treturn diagonal({source: o, target: o});\n\t  });\n\n  // Transition links to their new position.\n  link.transition()\n\t  .duration(duration)\n\t  .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n\t  .duration(duration)\n\t  .attr(\"d\", function(d) {\n\t\tvar o = {x: source.x, y: source.y};\n\t\treturn diagonal({source: o, target: o});\n\t  })\n\t  .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n\td.x0 = d.x;\n\td.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n\td._children = d.children;\n\td.children = null;\n  } else {\n\td.children = d._children;\n\td._children = null;\n  }\n  update(d);\n}\n\n</script>\n\t\n  </body>\n</html>\n", "description": "Interactive d3.js tree diagram", "created_at": "2014-01-11T18:50:12Z", "updated_at": "2016-01-02T23:18:58Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select"], "readme": "This is a d3.js tree diagram that incldes an interactive element as used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nAny parent node can be clicked on to collapse the portion of the tree below it, on itself. Conversly, it can be clicked on again to regrow.\n\nIt is derived from the Mike Bostock [Collapsible tree example](http://bl.ocks.org/mbostock/4339083) but it is a slightly cut down version.", "uid": "d3noob_8375092"}, {"code": "<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"utf-8\">\n  <title>Dynamic Table</title>\n  <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n  <style>\n\n    body {\n      font: 24px monospace\n    }\n\n    table {\n      margin: 10px;\n      font-size: 24px;\n    }\n\n    td {\n      padding: 5px;\n      border-bottom: 1px solid black;\n    }\n\n    td.update { \n      color: blue;\n    }\n\n    td.enter {\n      color: green;\n    }\n\n    td.exit, tr.exit td {\n      color: red;\n    }\n\n    td.row-header {\n      border-right: 1px solid black;\n      font-weight: bold;\n    }\n\n  </style>\n</head>\n\n<body>\n\n<table>\n</table>\n\n</body>\n\n<script>\n\n\n  ///////////////////////////////////////////\n  // UTILITY FUNCTIONS\n\n  // Make a key-value object\n  var make_key_value = function(k, v) {\n    return { key: k,\n             value: v\n           };\n  };\n\n  // Join a key array with a data array.\n  // Return an array of key-value objects.\n  var merge = function(keys, values) {\n    var l = keys.length;\n    var d = [], v, k;\n    for(var i = 0; i < l; i++) {\n      v = values[i].slice();\n      k = keys[i];\n      d.push( make_key_value( k, v ));\n    }\n    return d;\n  };\n\n  \n  // Shuffles the input array.\n  function shuffle(array) {\n    var m = array.length, t, i;\n    while (m) {\n      i = Math.floor(Math.random() * m--);\n      t = array[m], array[m] = array[i], array[i] = t;\n    }\n    return array;\n  }\n\n  // Returns a random integer between min and max\n  // Using Math.round() will give you a non-uniform distribution!\n  function get_random_int(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  // Resize the array, append random numbers if new_size is larger than array.\n  function update_array(a, new_size) {\n\n    a = a || [];\n\n    if (a.length > new_size) {\n      return a.slice(0, new_size);\n    }\n\n    var delta = new_size - a.length;\n    for(var i = 0; i < delta; i++) {\n      a.push(get_random_int(0, 9));\n    }\n\n    return a;\n  };\n\n\n  ////////////////////////////////////////////////////////////\n  // GENERATE DATA\n  var alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n\n  var letter_to_data = {}; // store row data\n\n  var generate_data = function() {\n    var i, j, a, l;\n    var letters = shuffle(alphabet);\n    var num_cols = get_random_int(3, 10);\n    var num_rows = get_random_int(5, 15); \n\n    var row_data = []\n    for (i = 0; i < num_rows; i++ ) {\n      l = letters[i];\n      a = update_array( letter_to_data[l], num_cols );\n      letter_to_data[l] = a; // store data\n      row_data.push( a );\n    }\n\n    for (i = num_rows; i < letters.length; i++) {\n      delete letter_to_data[i];\n    }\n\n    letters = letters.slice(0, num_rows);\n\n    return merge(letters, row_data);\n  };\n\n  /////////////////////////////////////////////\n  // DEFINE HELPER FUNCTIONS\n  // Extract key from key-value object.\n  var get_key = function(d) { return d && d.key; };\n\n  // Extract data from a key-value object.\n  // Prepend the key so it is the first item in the values array.\n  var extract_row_data = function(d) {\n\n    var values = d.value.slice();\n\n    // Prepend the key\n    values.unshift(d.key); \n    return values;\n\n  };\n\n  // Use data as is.\n  var ident = function(d) { return d; };\n\n\n  /////////////////////////////////////////////\n  // UPDATE THE TABLE\n\n  // Select the table element\n  var table = d3.select('table');\n\n  // Define function to update data\n  var update = function(new_data) {\n\n    var rows = table.selectAll('tr').data(new_data, get_key);\n\n    //////////////////////////////////////////\n    // ROW UPDATE SELECTION\n\n    // Update cells in existing rows.\n    var cells = rows.selectAll('td').data(extract_row_data);\n\n    cells.attr('class', 'update');\n\n    // Cells enter selection\n    cells.enter().append('td')\n      .style('opacity', 0.0)\n      .attr('class', 'enter')\n      .transition()\n      .delay(900)\n      .duration(500)\n      .style('opacity', 1.0);\n\n    cells.text(ident);\n\n    // Cells exit selection\n    cells.exit()\n      .attr('class', 'exit')\n      .transition()\n      .delay(200)\n      .duration(500)\n      .style('opacity', 0.0)\n      .remove();\n\n    //////////////////////////////////////////\n    // ROW ENTER SELECTION\n    // Add new rows\n    var cells_in_new_rows = rows.enter().append('tr')\n                                .selectAll('td')\n                                .data(extract_row_data);\n\n    cells_in_new_rows.enter().append('td')\n      .style('opacity', 0.0)\n      .attr('class', 'enter')\n      .transition()\n      .delay(900)\n      .duration(500)\n      .style('opacity', 1.0);\n\n    cells_in_new_rows.text(ident);\n\n    /////////////////////////////////////////\n    // ROW EXIT SELECTION\n    // Remove old rows\n    rows.exit()\n      .attr('class', 'exit')\n      .transition()\n      .delay(200)\n      .duration(500)\n      .style('opacity', 0.0)\n      .remove();\n\n    table.selectAll('tr').select('td').classed('row-header', true);\n\n  };\n\n  // Generate and display some random table data.\n  update(generate_data());\n\n  setInterval(function() {\n    update(generate_data());\n  }, 3500);\n\n\n</script>\n\n\n</html>", "description": "D3 Dynamic Table  with Nested Data", "created_at": "2014-04-28T20:55:27Z", "updated_at": "2015-08-29T14:00:41Z", "api": ["d3.select"], "readme": "This script is another demonstration of the **update**, **enter**, and **exit** selections in D3. The script also makes use of **key functions** to bind data to each row, and **transitions** to animate opacity and delay the removal of rows. This script demonstrates *nested* data, where an array of values is bounded to each row (`<tr>`), and then a single value is bound to each cell (`<td>`) element in the row.\n\nEach row of the table has a unique letter key, which is displayed as the first cell. The remainder of the row is an array of random digits. At each iteration:\n\n1. A new set of letter keys is randomly selected from the alphabet.\n2. For each letter in the set, a new row with random data will be inserted in the table if the letter is not already in the table.\n3. Any row in the table with a key which is not in the new set is removed. \n4. The number of columns in the table is randomly adjusted. If the new number of columns is larger than the current table, random data is appended to each row. Otherwise, cells are deleted from each row.\n\n\nCells which remain between iterations are colored in blue, new cells are colored in green, and cells which are to be deleted are colored red before removal.", "uid": "LeeMendelowitz_11383724"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\nbody {\n  background: #fcfcfa;\n  height: 500px;\n  position: relative;\n  width: 960px;\n}\n#projection-menu {\n  position: absolute;\n  right: 10px;\n  top: 10px;\n}\n.stroke {\n  fill: none;\n  stroke: #000;\n  stroke-width: 3px;\n}\n.fill {\n  fill: #fff;\n}\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-width: .5px;\n  stroke-opacity: .5;\n}\n.land {\n  fill: #222;\n}\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    rotate = [0,0],\n    graticule = d3.geo.graticule();\n\nvar projection = d3.geo.azimuthalEqualArea()\n     .scale(250)\n     .precision(0.3)\n     .clipAngle(180 - 1e-3)\n     .rotate(rotate);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar drag = d3.behavior.drag()\n    .origin(function() { return {x: rotate[0], y: -rotate[1]}; })\n    .on(\"drag\", function() {\n      rotate[0] = d3.event.x;\n      rotate[1] = -d3.event.y;\n\n      projection.rotate(rotate);\n      path = d3.geo.path().projection(projection);\n      d3.selectAll(\"path\").attr(\"d\", path);\n    });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .call(drag);\n    \nsvg.append(\"defs\").append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\nsvg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"fill\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\nd3.json(\"plate0.json\", function(error, plates) {\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(plates, plates.objects.plates0))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n});\n\n</script>\n</body>\n</html>", "description": "Using d3.behavior.drag with a map", "created_at": "2013-09-05T17:02:36Z", "updated_at": "2015-12-22T09:38:59Z", "api": ["d3.geo.graticule", "d3.geo.azimuthalEqualArea", "d3.geo.path", "d3.behavior.drag", "d3.selectAll", "d3.select", "d3.json"], "readme": "", "uid": "jczaplew_6453048"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>Marvel Characters | Force layout with images</title>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n\n    <style>\n      @import url(http://fonts.googleapis.com/css?family=Source+Code+Pro:400,600);\n      body {font-family: \"Source Code Pro\", Consolas, monaco, monospace; line-height: 160%; font-size: 16px;  margin: 0; }\n      path.link {\n        fill: none;\n        stroke-width: 2px;\n      }\n      .node:not(:hover) .nodetext {\n        display: none;\n      }\n      h1 { font-size: 36px; margin: 10px 0; text-transform: uppercase; font-weight: normal;}\n      h2, h3 { font-size: 18px; margin: 5px 0 ; font-weight: normal;}\n      header {padding: 20px; position: absolute; top: 0; left: 0;}\n      a:link { color: #EE3124; text-decoration: none;}\n      a:visited { color: #EE3124; }\n      a:hover { color: #A4CD39; text-decoration: underline;}\n      a:active { color: #EE3124; }\n    </style>\n</head>\n    \n\n<body>\n    <header>\n      <h1>Marvel Characters</h1>\n      <h2>Click to view their identity</h2>\n      <h3>And link to their web page!</h3>\n    </header>\n    <!-- container for force layout visualisation  -->\n    <section id=\"vis\"></section> \n<script>\n\n// some colour variables\n  var tcBlack = \"#130C0E\";\n\n// rest of vars\nvar w = 960,\n    h = 800,\n    maxNodeSize = 50,\n    x_browser = 20,\n    y_browser = 25,\n    root;\n \nvar vis;\nvar force = d3.layout.force(); \n\nvis = d3.select(\"#vis\").append(\"svg\").attr(\"width\", w).attr(\"height\", h);\n \nd3.json(\"marvel.json\", function(json) {\n \n  root = json;\n  root.fixed = true;\n  root.x = w / 2;\n  root.y = h / 4;\n \n \n        // Build the path\n  var defs = vis.insert(\"svg:defs\")\n      .data([\"end\"]);\n \n \n  defs.enter().append(\"svg:path\")\n      .attr(\"d\", \"M0,-5L10,0L0,5\");\n \n     update();\n});\n \n \n/**\n *   \n */\nfunction update() {\n  var nodes = flatten(root),\n      links = d3.layout.tree().links(nodes);\n \n  // Restart the force layout.\n  force.nodes(nodes)\n        .links(links)\n        .gravity(0.05)\n    .charge(-1500)\n    .linkDistance(100)\n    .friction(0.5)\n    .linkStrength(function(l, i) {return 1; })\n    .size([w, h])\n    .on(\"tick\", tick)\n        .start();\n \n   var path = vis.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n \n    path.enter().insert(\"svg:path\")\n      .attr(\"class\", \"link\")\n      // .attr(\"marker-end\", \"url(#end)\")\n      .style(\"stroke\", \"#eee\");\n \n \n  // Exit any old paths.\n  path.exit().remove();\n \n \n \n  // Update the nodes\u2026\n  var node = vis.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id; });\n \n \n  // Enter any new nodes.\n  var nodeEnter = node.enter().append(\"svg:g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n      .on(\"click\", click)\n      .call(force.drag);\n \n  // Append a circle\n  nodeEnter.append(\"svg:circle\")\n      .attr(\"r\", function(d) { return Math.sqrt(d.size) / 10 || 4.5; })\n      .style(\"fill\", \"#eee\");\n \n   \n  // Append images\n  var images = nodeEnter.append(\"svg:image\")\n        .attr(\"xlink:href\",  function(d) { return d.img;})\n        .attr(\"x\", function(d) { return -25;})\n        .attr(\"y\", function(d) { return -25;})\n        .attr(\"height\", 50)\n        .attr(\"width\", 50);\n  \n  // make the image grow a little on mouse over and add the text details on click\n  var setEvents = images\n          // Append hero text\n          .on( 'click', function (d) {\n              d3.select(\"h1\").html(d.hero); \n              d3.select(\"h2\").html(d.name); \n              d3.select(\"h3\").html (\"Take me to \" + \"<a href='\" + d.link + \"' >\"  + d.hero + \" web page \u21e2\"+ \"</a>\" ); \n           })\n\n          .on( 'mouseenter', function() {\n            // select element in current context\n            d3.select( this )\n              .transition()\n              .attr(\"x\", function(d) { return -60;})\n              .attr(\"y\", function(d) { return -60;})\n              .attr(\"height\", 100)\n              .attr(\"width\", 100);\n          })\n          // set back\n          .on( 'mouseleave', function() {\n            d3.select( this )\n              .transition()\n              .attr(\"x\", function(d) { return -25;})\n              .attr(\"y\", function(d) { return -25;})\n              .attr(\"height\", 50)\n              .attr(\"width\", 50);\n          });\n\n  // Append hero name on roll over next to the node as well\n  nodeEnter.append(\"text\")\n      .attr(\"class\", \"nodetext\")\n      .attr(\"x\", x_browser)\n      .attr(\"y\", y_browser +15)\n      .attr(\"fill\", tcBlack)\n      .text(function(d) { return d.hero; });\n \n \n  // Exit any old nodes.\n  node.exit().remove();\n \n \n  // Re-select for update.\n  path = vis.selectAll(\"path.link\");\n  node = vis.selectAll(\"g.node\");\n \nfunction tick() {\n \n \n    path.attr(\"d\", function(d) {\n \n     var dx = d.target.x - d.source.x,\n           dy = d.target.y - d.source.y,\n           dr = Math.sqrt(dx * dx + dy * dy);\n           return   \"M\" + d.source.x + \",\" \n            + d.source.y \n            + \"A\" + dr + \",\" \n            + dr + \" 0 0,1 \" \n            + d.target.x + \",\" \n            + d.target.y;\n  });\n    node.attr(\"transform\", nodeTransform);    \n  }\n}\n\n \n/**\n * Gives the coordinates of the border for keeping the nodes inside a frame\n * http://bl.ocks.org/mbostock/1129492\n */ \nfunction nodeTransform(d) {\n  d.x =  Math.max(maxNodeSize, Math.min(w - (d.imgwidth/2 || 16), d.x));\n    d.y =  Math.max(maxNodeSize, Math.min(h - (d.imgheight/2 || 16), d.y));\n    return \"translate(\" + d.x + \",\" + d.y + \")\";\n   }\n \n/**\n * Toggle children on click.\n */ \nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n \n  update();\n}\n \n \n/**\n * Returns a list of all nodes under the root.\n */ \nfunction flatten(root) {\n  var nodes = []; \n  var i = 0;\n \n  function recurse(node) {\n    if (node.children) \n      node.children.forEach(recurse);\n    if (!node.id) \n      node.id = ++i;\n    nodes.push(node);\n  }\n \n  recurse(root);\n  return nodes;\n} \n  \n  \n</script>\n\n</body>\n</html>\n", "description": "d3 | Force layout with images", "created_at": "2016-01-07T03:24:48Z", "updated_at": "2016-01-07T03:24:57Z", "api": ["d3.layout.force", "d3.select", "d3.json", "d3.layout.tree"], "readme": "Force layout test/experiment with images\n\nSources:\n- [Force Layout](https://github.com/mbostock/d3/wiki/Force-Layout)\n- [Force-based label placement](http://bl.ocks.org/MoritzStefaner/1377729)\n- [Collapsible force layout with directed paths and images/text in the nodes.](http://bl.ocks.org/djjupa/5653692)\n- [Labeled Force Layout](http://bl.ocks.org/mbostock/950642)\n\n\nforked from <a href='http://bl.ocks.org/eesur/'>eesur</a>'s block: <a href='http://bl.ocks.org/eesur/be2abfb3155a38be4de4'>d3 | Force layout with images</a>", "uid": "renecnielsen_46c782526409787e0d44"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2.5px;\n  shape-rendering: crispEdges;\n}\n .axis line {\n  fill: none;\n  stroke: green;\n  stroke-width: 1.5px;\n}\n\n .axis .major {\n  stroke: blue;\n  stroke-width: 1.5px;\n}\n\n.axis .minor {\n  stroke: red;\n  stroke-width: 0.5px;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(16).tickSubdivide(3).tickSize(-60, -60, 0));\n \n</script>", "description": "d3.js major minor tick style 1", "created_at": "2013-02-01T04:00:20Z", "updated_at": "2015-12-12T01:09:01Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "", "uid": "vjpgo_4689085"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n  </style>\n</head>\n\n<body>\n  <script>\n    var margin = {top: 20, right: 10, bottom: 20, left: 10};\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // Feel free to change or delete any of the code you see!\n    svg.append(\"rect\")\n      .attr({x: 100, y: 10, width: width - 200, height: height - 20})\n      .style({ fill: \"#a72d1a\"})\n      .transition().duration(3000).ease(\"bounce\")\n      .style({ fill: \"#5db9e3\"})\n    \n    console.log(\"you are now rocking with d3\", d3);\n  </script>\n</body>\n", "description": "d3 non-binding api ordinal scale", "created_at": "2015-11-18T07:09:32Z", "updated_at": "2015-11-18T07:09:32Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "hsuttong_c293659a897a3f0f5092"}, {"code": "<!DOCTYPE html>\n<html>\n<meta charset=\"utf-8\">\n\n<!-- Example based on http://bl.ocks.org/mbostock/3887118 -->\n<!-- Tooltip example from http://www.d3noob.org/2013/01/adding-tooltips-to-d3js-graph.html -->\n\n<style>\nbody {\n  font: 11px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.dot {\n  stroke: #000;\n}\n\n.tooltip {\n  position: absolute;\n  width: 200px;\n  height: 28px;\n  pointer-events: none;\n}\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n/* \n * value accessor - returns the value to encode for a given data object.\n * scale - maps value to a visual display encoding, such as a pixel position.\n * map function - maps from data value to display value\n * axis - sets up axis\n */ \n\n// setup x \nvar xValue = function(d) { return d[\"Rushing TD\"];}, // data -> value\n    xScale = d3.scale.linear().range([0, width]), // value -> display\n    xMap = function(d) { return xScale(xValue(d));}, // data -> display\n    xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\n// setup y\nvar yValue = function(d) { return d[\"Passing TD\"];}, // data -> value\n    yScale = d3.scale.linear().range([height, 0]), // value -> display\n    yMap = function(d) { return yScale(yValue(d));}, // data -> display\n    yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\n// setup fill color\nvar cValue = function(d) { return d.Conf;},\n    color = d3.scale.category20();\n\n// add the graph canvas to the body of the webpage\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// add the tooltip area to the webpage\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n// load data\nd3.csv(\"passing-stats-2014.csv\", function(error, data) {\n\n  // change string (from CSV) into number format\n  data.forEach(function(d) {\n    d[\"Passing TD\"] = +d[\"Passing TD\"];\n    d[\"Rushing TD\"] = +d[\"Rushing TD\"];\n//console.log (d.School);\n//console.dir (d);\n  });\n\n  // don't want dots overlapping axis, so add in buffer to data domain\n  xScale.domain([d3.min(data, xValue)-1, d3.max(data, xValue)+1]);\n  yScale.domain([d3.min(data, yValue)-1, d3.max(data, yValue)+1]);\n\n// scales w/o extra padding\n//  xScale.domain([d3.min(data, xValue), d3.max(data, xValue)]);\n//  yScale.domain([d3.min(data, yValue), d3.max(data, yValue)]);\n\n  // x-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Rushing TDs\");\n\n  // y-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Passing TDs\");\n\n  // draw dots\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", xMap)\n      .attr(\"cy\", yMap)\n      .style(\"fill\", function(d) { return color(cValue(d));}) \n      .on(\"mouseover\", function(d) {\n          tooltip.transition()\n               .duration(200)\n               .style(\"opacity\", .9);\n          tooltip.html(d[\"Player\"] + \"<br/> \" + d.School + \"<br/>(\" + xValue(d) \n\t        + \", \" + yValue(d) + \")\")\n               .style(\"left\", (d3.event.pageX + 10) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n\n  // draw legend\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(10,\" + (i+7) * 20 + \")\"; });\n\n  // draw legend colored rectangles\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  // draw legend text\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d;})\n});\n\n</script>\n</body>\n</html>\n", "description": "D3 Scatterplot of 2014 NCAA Passing Statistics", "created_at": "2014-12-15T16:33:03Z", "updated_at": "2015-08-29T14:11:28Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.scale.category20", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "Scatterplot of 2014 NCAA Passing Statistics\n\nData from http://www.sports-reference.com/cfb/years/2014-passing.html\n\nScatterplot based on http://bl.ocks.org/mbostock/3887118, tooltip example from http://www.d3noob.org/2013/01/adding-tooltips-to-d3js-graph.html", "uid": "weiglemc_bdc0474429e6567bc320"}, {"code": "<!DOCTYPE html>\n<html>\n  <head>\n    <title>Institutions Argentina</title>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\"/>\n\n\t\n\t<!--<script src=\"d3.v3.js\"></script>-->\n    <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\t\n\t<style type=\"text/css\">\n\t  body {\n          font: 18px sans-serif;\n      }\n\t  .axis path,\n      .axis line {\n          fill: none;\n          stroke: #000;\n          shape-rendering: crispEdges;\n        }\n\t  .contour-line {\n\t    fill: none;\n\t    stroke: lightblue;\n\t    stroke-width: 1px;\n\t  }\n\t  .event {\n\t    fill: none;\n\t    stroke: green;\n\t    stroke-width: 3px\n\t  }\n\t  .noevent {\n\t    fill: red;\n\t    stroke: red;\n\t  }\n\t</style>\n  </head>\n  <body>\n    <div id=\"chart\"></div>\n    <script>\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 500 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n    \nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([0.15,1.025]);\nvar y = d3.scale.linear()\n    .range([height, 0])\n    .domain([0.5,4.5]);\n    \nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \nsvg.append(\"g\")\n  .attr(\"class\", \"x axis\")\n  .attr(\"transform\", \"translate(0,\" + height + \")\")\n  .call(xAxis)\n .append(\"text\")\n  .attr(\"x\", x(1))\n  .attr(\"dx\", \".71em\")\n  .attr(\"dy\", \"-.5em\")\n  .style(\"text-anchor\", \"end\")\n  .text(\"Balance of parties\");\n  \nsvg.append(\"g\")\n  .attr(\"class\", \"y axis\")\n  .call(yAxis)\n .append(\"text\")\n  .attr(\"transform\", \"rotate(-90)\")\n  .attr(\"y\", 6)\n  .attr(\"dy\", \".71em\")\n  .style(\"text-anchor\", \"end\")\n  .text(\"Effective number of parties\");\n\n//contour lines based on http://vis.supstat.com/2012/11/contour-plots-with-d3-and-r/\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.x); })\n    .y(function(d) { return y(d.y); })\n    .interpolate(\"basis\") //https://github.com/mbostock/d3/wiki/SVG-Shapes#line_interpolate\n    .tension(1);\n\nd3.csv(\"data.csv\", function(error, data) {\n  d3.json(\"contour_lines.json\", function(er,cl) {\n    svg.selectAll(\".contour-line\")\n      .data(cl.map(function(d) {\n        return d3.range(d.x.length).map(function(i) {\n          return {x: d.x[i], y: d.y[i]};\n        });\n      }))\n    .enter().append(\"svg:path\")\n      .attr(\"d\", line)\n      .attr(\"class\",\"contour-line\")\n  })\n  svg.selectAll(\".event\")\n      .data(data)\n    .enter().append(\"circle\")\n       .attr(\"cx\", function(d) {\n          return x(parseFloat(d.balance_of_parties) + parseFloat(d.random1)/2) \n        })\n      .attr(\"cy\", function(d) {\n        return y(parseFloat(d.effective_number_of_parties) + parseFloat(d.random2)*2) \n      })\n      .attr(\"r\", function(d) {\n        return Math.round(parseFloat(d.event_minus_controled)*100 + 1);\n      })\n      .attr(\"class\",\"point noevent\")\n      .filter(function(d) { return (d.event == 1) }) \n        .attr(\"class\",\"point event\")\n        .attr(\"r\", function(d) {\n          return Math.min(30,Math.round(parseFloat(d.event_minus_controled)*100 + 1));\n        })\n      \n})  \n\n    </script>\n  </body>\n</html>\n\t\n", "description": "Scatterplot with Contour Lines (D3 + R)", "created_at": "2014-06-06T16:13:27Z", "updated_at": "2015-08-29T14:02:18Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.select", "d3.svg.line", "d3.csv", "d3.json", "d3.range"], "readme": "", "uid": "michalskop_6cdd572b5f618a11e966"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  margin: auto;\n  padding-top: 40px;\n  position: relative;\n  width: 800px;\n}\n\nbutton {\n  position: absolute;\n  right: 40px;\n  top: 10px;\n}\n\n.bullet { font: 10px sans-serif; }\n.bullet .marker { stroke: #000; stroke-width: 2px; }\n.bullet .tick line { stroke: #666; stroke-width: .5px; }\n.bullet .range.s0 { fill: #eee; }\n.bullet .range.s1 { fill: #ddd; }\n.bullet .range.s2 { fill: #ccc; }\n.bullet .measure.s0 { fill: steelblue; }\n.bullet .title { font-size: 14px; font-weight: bold; }\n.bullet .subtitle { fill: #999; }\n\n</style>\n<button>Update</button>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"bullet.js\"></script>\n<script>\n\nvar margin = {top: 5, right: 40, bottom: 20, left: 120},\n    width = 800 - margin.left - margin.right,\n    height = 50 - margin.top - margin.bottom;\n\nvar chart = d3.bullet()\n    .width(width)\n    .height(height);\n\nd3.json(\"bulletdata.json\", function(error, data) {\n  var svg = d3.select(\"body\").selectAll(\"svg\")\n      .data(data)\n    .enter().append(\"svg\")\n      .attr(\"class\", \"bullet\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .call(chart);\n\n  var title = svg.append(\"g\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"transform\", \"translate(-6,\" + height / 2 + \")\");\n\n  title.append(\"text\")\n      .attr(\"class\", \"title\")\n      .text(function(d) { return d.title; });\n\n  title.append(\"text\")\n      .attr(\"class\", \"subtitle\")\n      .attr(\"dy\", \"1em\")\n      .text(function(d) { return d.subtitle; });\n\n  d3.selectAll(\"button\").on(\"click\", function() {\n    svg.datum(randomize).call(chart.duration(1000));\n  });\n});\n\nfunction randomize(d) {\n  if (!d.randomizer) d.randomizer = randomizer(d);\n  d.markers = d.markers.map(d.randomizer);\n  d.measures = d.measures.map(d.randomizer);\n  return d;\n}\n\nfunction randomizer(d) {\n  var k = d3.max(d.ranges) * .2;\n  return function(d) {\n    return Math.max(0, d + k * (Math.random() - .5));\n  };\n}\n\n</script>\n</body>\n", "description": "Simple d3.js Bullet Chart example", "created_at": "2013-06-28T18:41:53Z", "updated_at": "2015-12-19T02:59:06Z", "api": ["d3.select", "d3.scale.linear", "d3.timer.flush", "d3.bullet", "d3.json", "d3.selectAll", "d3.max"], "readme": "This is a simple example of a [bullet chart](http://www.perceptualedge.com/articles/misc/Bullet_Graph_Design_Spec.pdf) derived from [Mike Bostock's example](http://bl.ocks.org/mbostock/4061961).", "uid": "d3noob_5886992"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.arc {\n  fill-opacity: .2;\n}\n\n.axis .fill {\n  stroke: #aaa;\n  stroke-width: 8px;\n  stroke-linecap: square;\n}\n\n.axis .stroke {\n  stroke: #fff;\n  stroke-width: 12px;\n  stroke-linecap: square;\n}\n\n</style>\n<body>\n<script src=\"http://mbostock.github.com/d3/d3.v2.js?2.8.1\"></script>\n<script src=\"link.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    innerRadius = 40,\n    outerRadius = 240;\n\nvar angle = d3.scale.ordinal().domain(d3.range(4)).rangePoints([0, 2 * Math.PI]),\n    radius = d3.scale.linear().range([innerRadius, outerRadius]),\n    color = d3.scale.category20c().domain(d3.range(20));\n\nvar links = [\n  {source: {x: 0, y0: 0.9, y1: 1.0}, target: {x: 1, y0: 0.5, y1: 1.0}, group:  0},\n  {source: {x: 0, y0: 0.7, y1: 0.9}, target: {x: 1, y0: 0.4, y1: 0.5}, group:  1},\n  {source: {x: 0, y0: 0.4, y1: 0.7}, target: {x: 1, y0: 0.2, y1: 0.4}, group:  2},\n  {source: {x: 0, y0: 0.0, y1: 0.4}, target: {x: 1, y0: 0.0, y1: 0.2}, group:  3},\n  {source: {x: 1, y0: 0.8, y1: 1.0}, target: {x: 2, y0: 0.5, y1: 1.0}, group:  4},\n  {source: {x: 1, y0: 0.5, y1: 0.8}, target: {x: 2, y0: 0.2, y1: 0.5}, group:  5},\n  {source: {x: 1, y0: 0.3, y1: 0.5}, target: {x: 2, y0: 0.1, y1: 0.2}, group:  6},\n  {source: {x: 1, y0: 0.0, y1: 0.3}, target: {x: 2, y0: 0.0, y1: 0.1}, group:  7},\n  {source: {x: 2, y0: 0.8, y1: 1.0}, target: {x: 0, y0: 0.5, y1: 1.0}, group:  8},\n  {source: {x: 2, y0: 0.5, y1: 0.8}, target: {x: 0, y0: 0.2, y1: 0.5}, group:  9},\n  {source: {x: 2, y0: 0.1, y1: 0.5}, target: {x: 0, y0: 0.1, y1: 0.2}, group: 10},\n  {source: {x: 2, y0: 0.0, y1: 0.1}, target: {x: 0, y0: 0.0, y1: 0.1}, group: 11}\n];\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nsvg.selectAll(\".link\")\n    .data(links)\n  .enter().append(\"path\")\n    .attr(\"class\", \"link\")\n    .attr(\"d\", link()\n    .angle(function(d) { return angle(d.x); })\n    .startRadius(function(d) { return radius(d.y0); })\n    .endRadius(function(d) { return radius(d.y1); }))\n    .style(\"fill\", function(d) { return color(d.group); });\n\nsvg.selectAll(\".axis\")\n    .data(d3.range(3))\n  .enter().append(\"g\")\n    .attr(\"class\", \"axis\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + degrees(angle(d)) + \")\"; })\n  .selectAll(\"line\")\n    .data([\"stroke\", \"fill\"])\n  .enter().append(\"line\")\n    .attr(\"class\", function(d) { return d; })\n    .attr(\"x1\", radius.range()[0])\n    .attr(\"x2\", radius.range()[1]);\n\nfunction degrees(radians) {\n  return radians / Math.PI * 180 - 90;\n}\n\n</script>\n", "description": "D3 Hive Plot (Areas) - std expose", "created_at": "2012-08-30T11:21:08Z", "updated_at": "2015-10-09T14:57:57Z", "api": ["d3.scale.ordinal", "d3.range", "d3.scale.linear", "d3.scale.category20c", "d3.select", "d3.expose.call"], "readme": "", "uid": "ZJONSSON_3526579"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.arc {\n  fill-opacity: .2;\n}\n\n.axis .fill {\n  stroke: #aaa;\n  stroke-width: 8px;\n  stroke-linecap: square;\n}\n\n.axis .stroke {\n  stroke: #fff;\n  stroke-width: 12px;\n  stroke-linecap: square;\n}\n\n</style>\n<body>\n<script src=\"http://mbostock.github.com/d3/d3.v2.js?2.8.1\"></script>\n<script src=\"link.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    innerRadius = 40,\n    outerRadius = 240;\n\nvar angle = d3.scale.ordinal().domain(d3.range(4)).rangePoints([0, 2 * Math.PI]),\n    radius = d3.scale.linear().range([innerRadius, outerRadius]),\n    color = d3.scale.category20c().domain(d3.range(20));\n\nvar links = [\n  {source: {x: 0, y0: 0.9, y1: 1.0}, target: {x: 1, y0: 0.5, y1: 1.0}, group:  0},\n  {source: {x: 0, y0: 0.7, y1: 0.9}, target: {x: 1, y0: 0.4, y1: 0.5}, group:  1},\n  {source: {x: 0, y0: 0.4, y1: 0.7}, target: {x: 1, y0: 0.2, y1: 0.4}, group:  2},\n  {source: {x: 0, y0: 0.0, y1: 0.4}, target: {x: 1, y0: 0.0, y1: 0.2}, group:  3},\n  {source: {x: 1, y0: 0.8, y1: 1.0}, target: {x: 2, y0: 0.5, y1: 1.0}, group:  4},\n  {source: {x: 1, y0: 0.5, y1: 0.8}, target: {x: 2, y0: 0.2, y1: 0.5}, group:  5},\n  {source: {x: 1, y0: 0.3, y1: 0.5}, target: {x: 2, y0: 0.1, y1: 0.2}, group:  6},\n  {source: {x: 1, y0: 0.0, y1: 0.3}, target: {x: 2, y0: 0.0, y1: 0.1}, group:  7},\n  {source: {x: 2, y0: 0.8, y1: 1.0}, target: {x: 0, y0: 0.5, y1: 1.0}, group:  8},\n  {source: {x: 2, y0: 0.5, y1: 0.8}, target: {x: 0, y0: 0.2, y1: 0.5}, group:  9},\n  {source: {x: 2, y0: 0.1, y1: 0.5}, target: {x: 0, y0: 0.1, y1: 0.2}, group: 10},\n  {source: {x: 2, y0: 0.0, y1: 0.1}, target: {x: 0, y0: 0.0, y1: 0.1}, group: 11}\n];\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nsvg.selectAll(\".link\")\n    .data(links)\n  .enter().append(\"path\")\n    .attr(\"class\", \"link\")\n    .attr(\"d\", link()\n    .angle(function(d) { return angle(d.x); })\n    .startRadius(function(d) { return radius(d.y0); })\n    .endRadius(function(d) { return radius(d.y1); }))\n    .style(\"fill\", function(d) { return color(d.group); });\n\nsvg.selectAll(\".axis\")\n    .data(d3.range(3))\n  .enter().append(\"g\")\n    .attr(\"class\", \"axis\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + degrees(angle(d)) + \")\"; })\n  .selectAll(\"line\")\n    .data([\"stroke\", \"fill\"])\n  .enter().append(\"line\")\n    .attr(\"class\", function(d) { return d; })\n    .attr(\"x1\", radius.range()[0])\n    .attr(\"x2\", radius.range()[1]);\n\nfunction degrees(radians) {\n  return radians / Math.PI * 180 - 90;\n}\n\n</script>\n", "description": "D3 Hive Plot (Areas) - evil exposure", "created_at": "2012-08-30T18:05:23Z", "updated_at": "2015-10-09T15:57:55Z", "api": ["d3.scale.ordinal", "d3.range", "d3.scale.linear", "d3.scale.category20c", "d3.select"], "readme": "", "uid": "ZJONSSON_3535835"}, {"code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 Array of Tables Demo</title>\n  <!-- Author: Bo Ericsson, bo@boe.net -->\n  <link rel=stylesheet type=text/css href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/css/bootstrap.min.css\" media=\"all\">\n  <style>\n    body {\n      padding: 10px;\n      font-size: 12px;\n    }\n    .well {\n      padding-top: 0px;\n      padding-bottom: 0px;\n      width: 500px;\n    }\n    table {\n      font-size: 10px;\n      line-height: 10px;\n    }\n    td, th {\n      width: 33.3%;\n    }\n    label {\n      margin-bottom: 10px;\n    }\n  </style>\n<body>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js\"></script>\n<script>\n'use strict';\n\n\nvar header = d3.select(\"body\").append(\"div\").attr(\"class\", \"well\");\n\nheader.append(\"h3\").text(\"Vaccine Record\");\n\nvar taskLabel = header.append(\"label\")\n    .attr(\"id\", \"taskLabel\")\n    .html(\"&nbsp;\");\n\nvar currTask = 0;\nvar taskButton = header.append(\"button\")\n    .attr(\"class\", \"btn btn-primary\")\n    .style(\"margin-bottom\", \"20px\")\n    .style(\"width\", \"100%\")\n    .style(\"text-align\", \"left\")\n    .text(\"Start\")\n    .on(\"click\", function() {\n      this.blur();\n      \n      tasks[currTask]();\n      \n     currTask = ++currTask % tasks.length;\n    })\n\n\nvar tableDiv = d3.select(\"body\").append(\"div\").attr(\"id\", \"tableDiv1\");\n\n\nvar data;\nvar initialData = [\n  { table: \"At birth\", rows: [\n      { table: \"Hepatitis B #1\", row: \"Jan 1, 2016\", data: \"Jan 1,2016\", status:\"Administered\" }\n    ]\n  },\n  { table: \"Second Month\", rows: [\n      { table: \"DTAP #1\", row: \"March 8, 2016\", data: \"March8, 2016\", status:\"pending\" },\n      { table: \"PCV #1\", row: \"March8, 2016\", data: \"March8, 2016\", status:\"pending\" },\n      { table: \"IPV #1\", row: \"March8, 2016\", data: \"March8, 2016\", status:\"pending\" }\n    ]\n  },\n  { table: \"Fourth Month\", rows: [\n      { table: \"DTAP #2\", row: \"May 18, 2016\", data: \"May 18, 2016\", status:\"pending\" },\n      { table: \"PCV #2\", row: \"May 18, 2016\", data: \"May 18, 2016\", status:\"pending\" },\n      { table: \"IPV #2\", row: \"May 18, 2016\", data: \"May 18, 2016\", status:\"pending\" }\n    ]\n  },\n  { table: \"Sixth to Fifteenth Month\", rows: [\n      { table: \"DTAP #3\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"PCV #3\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"IPV #3\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"MMR #1\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"Varicella\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"PCV #4\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" }\n    ]\n  }\n]\n\n\nfunction task0() {\n  update([]);\n\n \n  taskButton.text(\"Vaccine Records\");\n}\n\nfunction task1() {\n  data = JSON.parse(JSON.stringify(initialData));\n  update(data);\n\n  taskLabel.text(\"Name: Panace panacea ID: 1234 DOB: Jan 1, 2016  Age: 1 month\");\n  taskButton.text(\"Back\");\n}\n\n\n\nvar tasks = [task0, task1,];\n\n\n\n  \n  \n  \n  \nfunction update(data) {\n\n \n  var divs = tableDiv.selectAll(\"div\")\n      \n      .data(function(d) {\n        return data;\n      }, function(d) { \n      return d.table \n      })\n\n  \n  divs.exit().remove();\n\n \n  var divsEnter = divs.enter().append(\"div\")\n      .attr(\"id\", function(d) { return d.table + \"Div\"; })\n      .attr(\"class\", \"well\")\n \n  divsEnter.append(\"h5\").text(function(d) { return d.table; });\n\n  \n  var tableEnter = divsEnter.append(\"table\")\n      .attr(\"id\", function(d) { return d.table })\n      .attr(\"class\", \"table table-condensed table-striped table-bordered\")\n\n  \n  tableEnter.append(\"thead\")\n    .append(\"tr\")\n      .selectAll(\"th\")\n      .data([\"VACCINE\", \"DUE DATE\", \"ADMINISTERED ON\", \"STATUS\"])\n    .enter().append(\"th\")\n      .text(function(d) { return d; })\n\n \n  tableEnter.append(\"tbody\");\n\n \n  var tr = divs.select(\"table\").select(\"tbody\").selectAll(\"tr\")\n      .data(function(d, i) { return d.rows; }, function(d) { return d.row }); // again we're using key function to disable by-index evaluation\n\n \n\n  \n  tr.enter().append(\"tr\");\n\n  \n  var td = tr.selectAll(\"td\")\n      .data(function(d, i) { return d3.values(d); });\n\n\n  td.enter().append(\"td\");\n\n  \n  td.text(function(d) { return d; })\n};\n\n</script>\n", "description": "D3 Dynamic Array of Tables", "created_at": "2016-04-27T22:11:48Z", "updated_at": "2016-04-27T22:11:48Z", "api": ["d3.select", "d3.values"], "readme": "## D3 Dynamic Array of Tables\n\nDemonstrates the the use of D3 to manage an array of tables. Via a button, the user will cycle through several steps which will mutate the underlying array of arrays, which at each step is fed to the table **update** function. For example, tables are added and removed from the array of tables, individual rows of tables are added and removed, and individual table cells are modified. The **update** function demonstrates the enter, exit and update patterns at the div/table level as well as at the table row level. \n\nFor **bl.ocks.org** users, the script should be viewed in its own window. See the script in action [here](http://bl.ocks.org/boeric/raw/e16ad218bc241dfd2d6e/)\n\nforked from <a href='http://bl.ocks.org/boeric/'>boeric</a>'s block: <a href='http://bl.ocks.org/boeric/e16ad218bc241dfd2d6e'>D3 Dynamic Array of Tables</a>\n\nforked from <a href='http://bl.ocks.org/devssunil/'>devssunil</a>'s block: <a href='http://bl.ocks.org/devssunil/5485fa28d3fdd422930b53ab330f96e3'>D3 Dynamic Array of Tables</a>\n\nforked from <a href='http://bl.ocks.org/devssunil/'>devssunil</a>'s block: <a href='http://bl.ocks.org/devssunil/ce488bb628eb9e4468521b001f027a55'>D3 Dynamic Array of Tables</a>", "uid": "nguyenbq_7988fb7f4cabdf119637e9cf7b186499"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  margin: 0;\n  background:#031536;\n}\n\n.map {\n  position: absolute;\n  overflow: hidden;\n  top:0px;\n  bottom:0px;\n}\n\n.layer {\n  position: absolute;\n}\n\n.tile {\n  position: absolute;\n  width: 256px;\n  height: 256px;\n}\n\n.tile path {\n  fill: none;\n  stroke: #000;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n}\n\n.tile .major_road { stroke: url(#grad2); stroke-width:1.8;}\n.tile .minor_road { stroke: url(#grad3); stroke-width:1.2;}\n.tile .highway { stroke: url(#grad1); stroke-width: 3px; stroke-linecap: round; stroke-linejoin: round; }\n.tile .rail { stroke: url(#grad4); stroke-dasharray:4; stroke-dashoffset:4; stroke-width:1; }\n.tile .path { stroke: url(#grad5); stroke-dasharray:2; stroke-dashoffset:4; stroke-width:0.8; }\n\n.info {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  color:#fff;\n}\n\n</style>\n</head>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/d3.geo.tile.v0.min.js\"></script>\n  <svg>\n    <defs>\n      <linearGradient id='grad1'>\n        <stop offset='0%' stop-color='#E8DDC9'/>\n        <stop offset='100%' stop-color='#E8DDC9' stop-opacity='0' />\n      </linearGradient>\n      <linearGradient id='grad2'>\n        <stop offset='0%' stop-color='#CCB479'/>\n        <stop offset='100%' stop-color='#CCB479' stop-opacity='0' />\n      </linearGradient>\n      <linearGradient id='grad3'>\n        <stop offset='0%' stop-color='#3C80A9'/>\n        <stop offset='100%' stop-color='#3C80A9' stop-opacity='0' />\n      </linearGradient>\n      <linearGradient id='grad4'>\n        <stop offset='0%' stop-color='#7de'/>\n        <stop offset='100%' stop-color='#7de' stop-opacity='0' />\n      </linearGradient>\n      <linearGradient id='grad5'>\n        <stop offset='0%' stop-color='#74DC9B'/>\n        <stop offset='100%' stop-color='#74DC9B' stop-opacity='0' />\n      </linearGradient>\n    </defs>\n  </svg>\n<script>\n\nvar width = Math.max(960, window.innerWidth),\n    height = Math.max(500, window.innerHeight),\n    prefix = prefixMatch([\"webkit\", \"ms\", \"Moz\", \"O\"]);\n\nvar tile = d3.geo.tile()\n    .size([width, height]);\n\nvar projection = d3.geo.mercator()\n    .scale((1 << 23) / 2 / Math.PI)\n    .translate([-width / 2, -height / 2]); // just temporary\n\nvar tileProjection = d3.geo.mercator();\n\nvar tilePath = d3.geo.path()\n    .projection(tileProjection);\n\nvar zoom = d3.behavior.zoom()\n    .scale(projection.scale() * 2 * Math.PI)\n    .scaleExtent([1 << 20, 1 << 23])\n    .translate(projection([-77.045446166, 38.89370499]).map(function(x) { return -x; }))\n    .on(\"zoom\", zoomed);\n\nvar map = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"map\")\n    .style(\"width\", width + \"px\")\n    .style(\"height\", height + \"px\")\n    .call(zoom)\n    .on(\"mousemove\", mousemoved);\n\nvar layer = map.append(\"div\")\n    .attr(\"class\", \"layer\");\n\nvar info = map.append(\"div\")\n    .attr(\"class\", \"info\");\n\nzoomed();\n\nfunction zoomed() {\n  var tiles = tile\n      .scale(zoom.scale())\n      .translate(zoom.translate())\n      ();\n\n  projection\n      .scale(zoom.scale() / 2 / Math.PI)\n      .translate(zoom.translate());\n\n  var image = layer\n      .style(prefix + \"transform\", matrix3d(tiles.scale, tiles.translate))\n    .selectAll(\".tile\")\n      .data(tiles, function(d) { return d; });\n\n  image.exit()\n      .each(function(d) { this._xhr.abort(); })\n      .remove();\n\n  image.enter().append(\"svg\")\n      .attr(\"class\", \"tile\")\n      .style(\"left\", function(d) { return d[0] * 256 + \"px\"; })\n      .style(\"top\", function(d) { return d[1] * 256 + \"px\"; })\n      .each(function(d) {\n        var svg = d3.select(this);\n        this._xhr = d3.json(\"http://\" + [\"a\", \"b\", \"c\"][(d[0] * 31 + d[1]) % 3] + \".tile.openstreetmap.us/vectiles-highroad/\" + d[2] + \"/\" + d[0] + \"/\" + d[1] + \".json\", function(error, json) {\n          var k = Math.pow(2, d[2]) * 256; // size of the world in pixels\n\n          tilePath.projection()\n              .translate([k / 2 - d[0] * 256, k / 2 - d[1] * 256]) // [0\u00b0,0\u00b0] in pixels\n              .scale(k / 2 / Math.PI);\n\n          svg.selectAll(\"path\")\n              .data(json.features.sort(function(a, b) { return a.properties.sort_key - b.properties.sort_key; }))\n              .enter().append(\"path\")\n              .attr(\"class\", function(d) { return d.properties.kind; })\n              .attr(\"d\", tilePath);\n        });\n      });\n}\n\nfunction mousemoved() {\n  info.text(formatLocation(projection.invert(d3.mouse(this)), zoom.scale()));\n}\n\nfunction matrix3d(scale, translate) {\n  var k = scale / 256, r = scale % 1 ? Number : Math.round;\n  return \"matrix3d(\" + [k, 0, 0, 0, 0, k, 0, 0, 0, 0, k, 0, r(translate[0] * scale), r(translate[1] * scale), 0, 1 ] + \")\";\n}\n\nfunction prefixMatch(p) {\n  var i = -1, n = p.length, s = document.body.style;\n  while (++i < n) if (p[i] + \"Transform\" in s) return \"-\" + p[i].toLowerCase() + \"-\";\n  return \"\";\n}\n\nfunction formatLocation(p, k) {\n  var format = d3.format(\".\" + Math.floor(Math.log(k) / 2 - 2) + \"f\");\n  return (p[1] < 0 ? format(-p[1]) + \"\u00b0S\" : format(p[1]) + \"\u00b0N\") + \" \"\n       + (p[0] < 0 ? format(-p[0]) + \"\u00b0W\" : format(p[0]) + \"\u00b0E\");\n}\n\n</script>\n</body>\n</html>", "description": "Vector Tiles in D3, darkened", "created_at": "2013-11-09T18:18:57Z", "updated_at": "2015-12-27T20:59:09Z", "api": ["d3.geo.tile", "d3.geo.mercator", "d3.geo.path", "d3.behavior.zoom", "d3.select", "d3.json", "d3.mouse", "d3.format"], "readme": "Adapting [d3.geo.tile](https://github.com/d3/d3-plugins/tree/master/geo/tile) to show [OpenStreetMap vector tiles](http://openstreetmap.us/~migurski/vector-datasource/). Via Mike Bostock's [example](/mbostock/5616813).", "uid": "wboykinm_7388233"}, {"code": "<!DOCTYPE html>\n<head>\n<meta charset=\"utf-8\">\n<title>Issues Ratings</title>\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line, \n.axis1 path,\n.axis1 line {\n  fill: none;\n  stroke: #E6E7E8;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path, .x.axis1 path {\n  display: none;\n}\n\n.line {\n  fill: none;\n  stroke-width: 1.5px;\n}\n\n.legend-box {\n  cursor: pointer;  \n}\n\n#mouse-tracker {\n  stroke: #E6E7E8;\n  stroke-width: 1px;\n}\n\n.hover-line { \n  stroke: #E6E7E8;\n  fill: none;\n  stroke-width: 1px;\n  left: 10px;\n  shape-rendering: crispEdges;\n  opacity: 1e-6;\n}\n\n.hover-text {\n  stroke: none;\n  font-size: 30px;\n  font-weight: bold;\n  fill: #000000;\n}\n\n.tooltip {\n  font-weight: normal;\n}\n\n.brush .extent {\n  stroke: #FFF;\n  shape-rendering: crispEdges;\n}\n\n</style>\n</head>\n<body>\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 200, bottom: 100, left: 50},\n    margin2 = { top: 430, right: 10, bottom: 20, left: 40 },\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    height2 = 500 - margin2.top - margin2.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\nvar bisectDate = d3.bisector(function(d) { return d.date; }).left;\n\nvar xScale = d3.time.scale()\n    .range([0, width]),\n\n    xScale2 = d3.time.scale()\n    .range([0, width]); // Duplicate xScale for brushing ref later\n\nvar yScale = d3.scale.linear()\n    .range([height, 0]);\n\n// 40 Custom DDV colors \nvar color = d3.scale.ordinal().range([\"#48A36D\",  \"#56AE7C\",  \"#64B98C\", \"#72C39B\", \"#80CEAA\", \"#80CCB3\", \"#7FC9BD\", \"#7FC7C6\", \"#7EC4CF\", \"#7FBBCF\", \"#7FB1CF\", \"#80A8CE\", \"#809ECE\", \"#8897CE\", \"#8F90CD\", \"#9788CD\", \"#9E81CC\", \"#AA81C5\", \"#B681BE\", \"#C280B7\", \"#CE80B0\", \"#D3779F\", \"#D76D8F\", \"#DC647E\", \"#E05A6D\", \"#E16167\", \"#E26962\", \"#E2705C\", \"#E37756\", \"#E38457\", \"#E39158\", \"#E29D58\", \"#E2AA59\", \"#E0B15B\", \"#DFB95C\", \"#DDC05E\", \"#DBC75F\", \"#E3CF6D\", \"#EAD67C\", \"#F2DE8A\"]);  \n\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\"),\n\n    xAxis2 = d3.svg.axis() // xAxis for brush slider\n    .scale(xScale2)\n    .orient(\"bottom\");    \n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\");  \n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return xScale(d.date); })\n    .y(function(d) { return yScale(d.rating); })\n    .defined(function(d) { return d.rating; });  // Hiding line value defaults of 0 for missing data\n\nvar maxY; // Defined later to update yAxis\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom) //height + margin.top + margin.bottom\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Create invisible rect for mouse tracking\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)                                    \n    .attr(\"x\", 0) \n    .attr(\"y\", 0)\n    .attr(\"id\", \"mouse-tracker\")\n    .style(\"fill\", \"white\"); \n\n//for slider part-----------------------------------------------------------------------------------\n  \nvar context = svg.append(\"g\") // Brushing context box container\n    .attr(\"transform\", \"translate(\" + 0 + \",\" + 410 + \")\")\n    .attr(\"class\", \"context\");\n\n//append clip path for lines plotted, hiding those part out of bounds\nsvg.append(\"defs\")\n  .append(\"clipPath\") \n    .attr(\"id\", \"clip\")\n    .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height); \n\n//end slider part----------------------------------------------------------------------------------- \n\nd3.tsv(\"data.tsv\", function(error, data) { \n  color.domain(d3.keys(data[0]).filter(function(key) { // Set the domain of the color ordinal scale to be all the csv headers except \"date\", matching a color to an issue\n    return key !== \"date\"; \n  }));\n\n  data.forEach(function(d) { // Make every date in the csv data a javascript date object format\n    d.date = parseDate(d.date);\n  });\n\n  var categories = color.domain().map(function(name) { // Nest the data into an array of objects with new keys\n\n    return {\n      name: name, // \"name\": the csv headers except date\n      values: data.map(function(d) { // \"values\": which has an array of the dates and ratings\n        return {\n          date: d.date, \n          rating: +(d[name]),\n          };\n      }),\n      visible: (name === \"Unemployment\" ? true : false) // \"visible\": all false except for economy which is true.\n    };\n  });\n\n  xScale.domain(d3.extent(data, function(d) { return d.date; })); // extent = highest and lowest points, domain is data, range is bouding box\n\n  yScale.domain([0, 100\n    //d3.max(categories, function(c) { return d3.max(c.values, function(v) { return v.rating; }); })\n  ]);\n\n  xScale2.domain(xScale.domain()); // Setting a duplicate xdomain for brushing reference later\n \n //for slider part-----------------------------------------------------------------------------------\n\n var brush = d3.svg.brush()//for slider bar at the bottom\n    .x(xScale2) \n    .on(\"brush\", brushed);\n\n  context.append(\"g\") // Create brushing xAxis\n      .attr(\"class\", \"x axis1\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  var contextArea = d3.svg.area() // Set attributes for area chart in brushing context graph\n    .interpolate(\"monotone\")\n    .x(function(d) { return xScale2(d.date); }) // x is scaled to xScale2\n    .y0(height2) // Bottom line begins at height2 (area chart not inverted) \n    .y1(0); // Top line of area, 0 (area chart not inverted)\n\n  //plot the rect as the bar at the bottom\n  context.append(\"path\") // Path is created using svg.area details\n    .attr(\"class\", \"area\")\n    .attr(\"d\", contextArea(categories[0].values)) // pass first categories data .values to area path generator \n    .attr(\"fill\", \"#F1F1F2\");\n    \n  //append the brush for the selection of subsection  \n  context.append(\"g\")\n    .attr(\"class\", \"x brush\")\n    .call(brush)\n    .selectAll(\"rect\")\n    .attr(\"height\", height2) // Make brush rects same height \n      .attr(\"fill\", \"#E6E7E8\");  \n  //end slider part-----------------------------------------------------------------------------------\n\n  // draw line graph\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"x\", -10)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Issues Rating\");\n\n  var issue = svg.selectAll(\".issue\")\n      .data(categories) // Select nested data and append to new svg group elements\n    .enter().append(\"g\")\n      .attr(\"class\", \"issue\");   \n\n  issue.append(\"path\")\n      .attr(\"class\", \"line\")\n      .style(\"pointer-events\", \"none\") // Stop line interferring with cursor\n      .attr(\"id\", function(d) {\n        return \"line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"); // Give line id of line-(insert issue name, with any spaces replaced with no spaces)\n      })\n      .attr(\"d\", function(d) { \n        return d.visible ? line(d.values) : null; // If array key \"visible\" = true then draw line, if not then don't \n      })\n      .attr(\"clip-path\", \"url(#clip)\")//use clip path to make irrelevant part invisible\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  // draw legend\n  var legendSpace = 450 / categories.length; // 450/number of issues (ex. 40)    \n\n  issue.append(\"rect\")\n      .attr(\"width\", 10)\n      .attr(\"height\", 10)                                    \n      .attr(\"x\", width + (margin.right/3) - 15) \n      .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace) - 8; })  // spacing\n      .attr(\"fill\",function(d) {\n        return d.visible ? color(d.name) : \"#F1F1F2\"; // If array key \"visible\" = true then color rect, if not then make it grey \n      })\n      .attr(\"class\", \"legend-box\")\n\n      .on(\"click\", function(d){ // On click make d.visible \n        d.visible = !d.visible; // If array key for this data selection is \"visible\" = true then make it false, if false then make it true\n\n        maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n        yScale.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n        svg.select(\".y.axis\")\n          .transition()\n          .call(yAxis);   \n\n        issue.select(\"path\")\n          .transition()\n          .attr(\"d\", function(d){\n            return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n          })\n\n        issue.select(\"rect\")\n          .transition()\n          .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\";\n        });\n      })\n\n      .on(\"mouseover\", function(d){\n\n        d3.select(this)\n          .transition()\n          .attr(\"fill\", function(d) { return color(d.name); });\n\n        d3.select(\"#line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"))\n          .transition()\n          .style(\"stroke-width\", 2.5);  \n      })\n\n      .on(\"mouseout\", function(d){\n\n        d3.select(this)\n          .transition()\n          .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\";});\n\n        d3.select(\"#line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"))\n          .transition()\n          .style(\"stroke-width\", 1.5);\n      })\n      \n  issue.append(\"text\")\n      .attr(\"x\", width + (margin.right/3)) \n      .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace); })  // (return (11.25/2 =) 5.625) + i * (5.625) \n      .text(function(d) { return d.name; }); \n\n  // Hover line \n  var hoverLineGroup = svg.append(\"g\") \n            .attr(\"class\", \"hover-line\");\n\n  var hoverLine = hoverLineGroup // Create line with basic attributes\n        .append(\"line\")\n            .attr(\"id\", \"hover-line\")\n            .attr(\"x1\", 10).attr(\"x2\", 10) \n            .attr(\"y1\", 0).attr(\"y2\", height + 10)\n            .style(\"pointer-events\", \"none\") // Stop line interferring with cursor\n            .style(\"opacity\", 1e-6); // Set opacity to zero \n\n  var hoverDate = hoverLineGroup\n        .append('text')\n            .attr(\"class\", \"hover-text\")\n            .attr(\"y\", height - (height-40)) // hover date text position\n            .attr(\"x\", width - 150) // hover date text position\n            .style(\"fill\", \"#E6E7E8\");\n\n  var columnNames = d3.keys(data[0]) //grab the key values from your first data row\n                                     //these are the same as your column names\n                  .slice(1); //remove the first column name (`date`);\n\n  var focus = issue.select(\"g\") // create group elements to house tooltip text\n      .data(columnNames) // bind each column name date to each g element\n    .enter().append(\"g\") //create one <g> for each columnName\n      .attr(\"class\", \"focus\"); \n\n  focus.append(\"text\") // http://stackoverflow.com/questions/22064083/d3-js-multi-series-chart-with-y-value-tracking\n        .attr(\"class\", \"tooltip\")\n        .attr(\"x\", width + 20) // position tooltips  \n        .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace); }); // (return (11.25/2 =) 5.625) + i * (5.625) // position tooltips       \n\n  // Add mouseover events for hover line.\n  d3.select(\"#mouse-tracker\") // select chart plot background rect #mouse-tracker\n  .on(\"mousemove\", mousemove) // on mousemove activate mousemove function defined below\n  .on(\"mouseout\", function() {\n      hoverDate\n          .text(null) // on mouseout remove text for hover date\n\n      d3.select(\"#hover-line\")\n          .style(\"opacity\", 1e-6); // On mouse out making line invisible\n  });\n\n  function mousemove() { \n      var mouse_x = d3.mouse(this)[0]; // Finding mouse x position on rect\n      var graph_x = xScale.invert(mouse_x); // \n\n      //var mouse_y = d3.mouse(this)[1]; // Finding mouse y position on rect\n      //var graph_y = yScale.invert(mouse_y);\n      //console.log(graph_x);\n      \n      var format = d3.time.format('%b %Y'); // Format hover date text to show three letter month and full year\n      \n      hoverDate.text(format(graph_x)); // scale mouse position to xScale date and format it to show month and year\n      \n      d3.select(\"#hover-line\") // select hover-line and changing attributes to mouse position\n          .attr(\"x1\", mouse_x) \n          .attr(\"x2\", mouse_x)\n          .style(\"opacity\", 1); // Making line visible\n\n      // Legend tooltips // http://www.d3noob.org/2014/07/my-favourite-tooltip-method-for-line.html\n\n      var x0 = xScale.invert(d3.mouse(this)[0]), /* d3.mouse(this)[0] returns the x position on the screen of the mouse. xScale.invert function is reversing the process that we use to map the domain (date) to range (position on screen). So it takes the position on the screen and converts it into an equivalent date! */\n      i = bisectDate(data, x0, 1), // use our bisectDate function that we declared earlier to find the index of our data array that is close to the mouse cursor\n      /*It takes our data array and the date corresponding to the position of or mouse cursor and returns the index number of the data array which has a date that is higher than the cursor position.*/\n      d0 = data[i - 1],\n      d1 = data[i],\n      /*d0 is the combination of date and rating that is in the data array at the index to the left of the cursor and d1 is the combination of date and close that is in the data array at the index to the right of the cursor. In other words we now have two variables that know the value and date above and below the date that corresponds to the position of the cursor.*/\n      d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n      /*The final line in this segment declares a new array d that is represents the date and close combination that is closest to the cursor. It is using the magic JavaScript short hand for an if statement that is essentially saying if the distance between the mouse cursor and the date and close combination on the left is greater than the distance between the mouse cursor and the date and close combination on the right then d is an array of the date and close on the right of the cursor (d1). Otherwise d is an array of the date and close on the left of the cursor (d0).*/\n\n      //d is now the data row for the date closest to the mouse position\n\n      focus.select(\"text\").text(function(columnName){\n         //because you didn't explictly set any data on the <text>\n         //elements, each one inherits the data from the focus <g>\n\n         return (d[columnName]);\n      });\n  }; \n\n  //for brusher of the slider bar at the bottom\n  function brushed() {\n\n    xScale.domain(brush.empty() ? xScale2.domain() : brush.extent()); // If brush is empty then reset the Xscale domain to default, if not then make it the brush extent \n\n    svg.select(\".x.axis\") // replot xAxis with transition when brush used\n          .transition()\n          .call(xAxis);\n\n    maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n    yScale.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n    \n    svg.select(\".y.axis\") // Redraw yAxis\n      .transition()\n      .call(yAxis);   \n\n    issue.select(\"path\") // Redraw lines based on brush xAxis scale and domain\n      .transition()\n      .attr(\"d\", function(d){\n          return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n      });\n    \n  };      \n\n}); // End Data callback function\n  \n  function findMaxY(data){  // Define function \"findMaxY\"\n    var maxYValues = data.map(function(d) { \n      if (d.visible){\n        return d3.max(d.values, function(value) { // Return max rating value\n          return value.rating; })\n      }\n    });\n    return d3.max(maxYValues);\n  }\n\n</script>\n</html>", "description": "d3.js Multi-series line chart interactive", "created_at": "2014-09-29T11:07:31Z", "updated_at": "2016-04-05T08:51:57Z", "api": ["d3.time.format", "d3.bisector", "d3.time.scale", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.max", "d3.svg.brush", "d3.svg.area", "d3.mouse"], "readme": "Please note, data will be randomised until December 2014. It is based on Ipsos MORI's long term Issues Index survey 1974 - 2014.  ", "uid": "DStruths_9c042e3a6b66048b5bd4"}, {"code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <!-- Author: Bo Ericsson -->\n  <title>Real Time Chart</title>\n  <link rel=stylesheet type=text/css href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css\" media=\"all\">\n  <style>\n  .axis text {\n    font: 10px sans-serif;\n  }\n  .chartTitle {\n    font-size: 12px;\n    font-weight: bold;\n    text-anchor: middle; \n  }\n  .axis .title {\n    font-weight: bold;\n    text-anchor: middle;\n  }\n  .axis {\n    fill: none;\n    stroke: none;\n  }\n  .nav .area {\n    fill: lightgrey;\n    stroke-width: 0px;\n  }\n  .nav .line {\n    fill: none;\n    stroke: darkgrey;\n    stroke-width: 1px;\n  }\n  .viewport {\n    stroke: grey;\n    fill: black;\n    fill-opacity: 0.3;\n  }\n  .viewport .extent {\n    fill: green;\n  }\n  .well {\n    padding-top: 0px;\n    padding-bottom: 0px;\n  }\n  </style>\n<body>\n\n<div style=\"max-width: 600px; max-height: 400px; padding: 10px\">\n\n  <div id=\"viewDiv\"></div>\n\n</div>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js\"></script>\n<script src=\"realTimeChart.js\"></script>\n<script>\n'use strict';\n\n// mean and deviation for time interval\nvar meanMs = 1000, // milliseconds\n    dev = 150;\n\n// define time scale\nvar timeScale = d3.scale.linear()\n    .domain([300, 1700])\n    .range([300, 1700])\n    .clamp(true);\n\n// define value scale\nvar valueScale = d3.scale.linear()\n    .domain([0, 1])\n    .range([30, 95]);\n\n// generate initial data\nvar normal = d3.random.normal(1000, 150);\nvar currMs = new Date().getTime() - 300000 - 4000;\nvar data = d3.range(300).map(function(d, i, arr) {\n  var value = valueScale(Math.random()); // random data\n  //var value = Math.round((d % 60) / 60 * 95); // ramp data\n  var interval = Math.round(timeScale(normal()));\n  currMs += interval;\n  var time = new Date(currMs);\n  var obj = { interval: interval, value: value, time: time, ts: currMs }\n  return obj;\n})\n\n// create the real time chart\nvar chart = realTimeChart()\n    .width(1050)\n    .height(1500)\n    .barWidth(2)\n    .initialData(data);\n\nconsole.log(\"Version: \", chart.version);\nconsole.dir(\"Dir++\");\nconsole.trace();\nconsole.warn(\"warn\")\n\n// invoke the chart\nvar chartDiv = d3.select(\"#viewDiv\").append(\"div\")\n    .attr(\"id\", \"chartDiv\")\n    .call(chart);\n\n// alternative invocation\n//chart(chartDiv); \n\n\n// drive data into the chart roughly every second\n// in a normal use case, real time data would arrive through the network or some other mechanism\nvar d = 0;\nfunction dataGenerator() {\n\n  var timeout = Math.round(timeScale(normal()));\n\n  setTimeout(function() {\n\n    // create new data item\n    var now = new Date();\n    var obj = {\n      value: valueScale(Math.random()), // random data\n      //value: Math.round((d++ % 60) / 60 * 95), // ramp data\n      time: now,\n      color: \"red\",\n      ts: now.getTime(),\n      interval: timeout\n    };\n\n    // send the datum to the chart\n    chart.datum(obj);\n\n    // do forever\n    dataGenerator();\n\n  }, timeout);\n}\n\n// start the data generator\ndataGenerator();\n\n</script>\n", "description": "D3 Based Real Time Chart", "created_at": "2015-11-15T21:32:52Z", "updated_at": "2015-11-15T22:30:34Z", "api": ["d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.svg.line", "d3.svg.brush", "d3.random.normal", "d3.range", "d3.select"], "readme": "## D3 Based Real Time Chart\n\nThe real time chart is a resuable Javascript component that accepts real time data. The chart's time domain is moving with the passage of time, which means that any data placed in the chart eventually will age out and leave the chart. In addition to the main chart, the component also manages a \"focus\" window with a viewport (d3.brush) that can moved and sized to view an arbitrary portion of the time series data. \n\nThe component adheres to the pattern described in [Towards Reusable Chart](http://bost.ocks.org/mike/chart/). \n\nThe following options are currently supported:\n\n- **width** and **height** in pixels (Number)\n- **border** (Boolean)\n- **title**, **xTitle**, **yTitle** (String)\n- **barWidth** in pixels (Number)\n\nFuture options will include:\n\n- **Scale** domain of real time data (currently a domain of [0, 100] is assumed for the y scale)\n- Use of SVG **rects, circles, paths** etc. to represent data (in addition to bars)\n\nUse the component like so:\n\n```\n// create the real time chart\nvar chart = realTimeChart()\n    .title(\"Chart Title\")\n    .yTitle(\"Y Scale\")\n    .xTitle(\"X Scale\")\n    .border(true)\n    .width(600)\n    .height(290)\n    .barWidth(1)\n    .initialData(data);\n\n// invoke the chart\nvar chartDiv = d3.select(\"#viewDiv\").append(\"div\")\n    .attr(\"id\", \"chartDiv\")\n    .call(chart);\n\n// create new data item and inject into chart\nvar now = new Date();\nvar obj = {\n  value: 50\n  time: now,\n  color: \"red\",\n  ts: now.getTime(),\n  interval: timeout\n};\n\n// send the datum to the chart\nchart.datum(obj);\n\n```\n", "uid": "seemantk_3112c37d079d6fdce4be"}, {"code": "<!DOCTYPE html>\n<html style='width: 100%; height:100%;'>\n<head>\n  <script src='http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js'></script>\n  <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n  <script src=\"zui53.js\"></script>\n  <script>\n      function initZUI() {\n          console.log(ZUI53);\n          zui = new ZUI53.Viewport(document.getElementById('zui'));\n          zui.addSurface(new ZUI53.Surfaces.SVG($(\"#linechart\")));\n\n          var pan_tool = new ZUI53.Tools.Pan(zui);\n          zui.toolset.add(pan_tool);\n          pan_tool.attach();\n\n          zui.showBounds({ width: 1000, height: 1000, x: 0, y: 0 });\n\n      }\n\n      function buildSVG() {\n          var margin = { top: 20, right: 20, bottom: 30, left: 50 },\n            width = 960 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n          d3.selectAll(\"#zui\").append(\"svg\")\n            .attr(\"width\", \"100%\")\n            .attr(\"height\", \"100%\")\n            .append(\"g\")\n                .attr(\"id\", \"linechart\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n          drawd3line(width, height);\n      }\n\n      function drawd3line(width, height) {\n          var svg = d3.selectAll(\"#zui\").selectAll(\"#linechart\");\n\n          var parseDate = d3.time.format(\"%Y-%m-%d\").parse,\n               bisectDate = d3.bisector(function (d) { return d.date; }).left;\n\n          var x = d3.time.scale()\n                .range([0, width]);\n\n          var y = d3.scale.linear()\n                .range([height, 0]);\n\n          var xAxis = d3.svg.axis()\n                .scale(x)\n                .orient(\"bottom\");\n\n          var yAxis = d3.svg.axis()\n                .scale(y)\n                .orient(\"left\");\n\n          var line = d3.svg.line()\n                .x(function (d) { return x(d.date); })\n                .y(function (d) { return y(d.cumul); });\n\n          var color = d3.scale.category20();\n\n          d3.csv(\"indexdata.csv\", function (error, data) {\n              data.forEach(function (d) {\n                  d.date = parseDate(d.date);\n                  d.price = +d.price;\n              });\n\n              var indexkeys = d3.keys(d3.nest().key(function (d) { return d.indexname; }).map(data))\n              indexkeys.forEach(function (name) {\n                  //ugly ugly but can't think of the best place to put this transform\n                  //gets cumulative growth by dividing price by first price\n                  var temp = data.filter(function (d) { return d.indexname == name; });\n                  temp.forEach(function (d) { d.cumul = +d.price / temp[0].price });\n              })\n\n\n              indexdata = d3.nest().key(function(d) {return d.indexname;}).entries(data);\n\n              x.domain(d3.extent(data, function (d) { return d.date; }));\n              y.domain(d3.extent(data, function (d) { return d.cumul; }));\n\n              svg.append(\"g\")\n                  .attr(\"class\", \"x axis\")\n                  .attr(\"transform\", \"translate(0,\" + height + \")\")\n                  .call(xAxis);\n\n              svg.append(\"g\")\n                  .attr(\"class\", \"y axis\")\n                  .call(yAxis)\n                .append(\"text\")\n                  .attr(\"transform\", \"rotate(-90)\")\n                  .attr(\"y\", 6)\n                  .attr(\"dy\", \".71em\")\n                  .style(\"text-anchor\", \"end\")\n                  .text(\"Cumulative Growth\");\n\n              var indexGroup = svg.selectAll(\".indexname\")\n                  .data(indexdata)\n                      .enter().append(\"g\")\n                            .attr(\"class\", \"indexname\")\n                            .attr(\"id\", function (d) { return d.key });\n\n              indexGroup.append(\"path\")\n                    .attr(\"class\", \"line\")\n                    .attr(\"d\", function (d) { return line(d.values); })\n                    .attr(\"stroke\", function (d) { return color(d.key); });\n\n             //original ugly way of doing it until I found Mike Bostock's example\n             // var nodes = indexGroup.selectAll()\n             //       .data(function (d) { return d.values; })\n             //           .enter().append(\"g\")\n             //               .attr(\"class\", \"points\")\n             //               .attr(\"transform\", function (d) { return \"translate(\" + x(d.date) + \",\" + y(d.cumul) + \")\"; });\n\n              //nodes.append('circle')\n              //      .attr(\"r\", 10)\n              //      .attr(\"fill\", function (d) { return color(d.indexname); })\n\n             // nodes.append('text')\n             //       .attr(\"text-anchor\", \"middle\")\n             //       .attr(\"dx\", 12)\n             //       .attr(\"dy\", \"-.35em\")\n             //       .text(function (d) { return d.indexname + \"\\n \" + Math.round(d.cumul * 100) / 100; })\n             //       .attr(\"fill\", \"gray\");\n\n              var focus = svg.selectAll(\".focus\")\n                    .data(indexkeys).enter().append(\"g\")\n                          .attr(\"class\", \"focus\")\n                          .attr(\"id\", function (d) { return \"focus-\" + d; })\n                          .style(\"display\", \"none\");\n\n              focus.append(\"circle\")\n                  .attr(\"r\", 4.5);\n\n              focus.append(\"text\")\n                  .attr(\"x\", 9)\n                  .attr(\"dy\", \".35em\");\n\n              svg.append(\"rect\")\n                  .attr(\"class\", \"overlay\")\n                  .attr(\"width\", width)\n                  .attr(\"height\", height)\n                  .on(\"mouseover\", function () { focus.style(\"display\", null); })\n                  .on(\"mouseout\", function () { focus.style(\"display\", \"none\"); })\n                  .on(\"mousemove\", mousemove);\n\n              function mousemove() {\n                  var x0 = x.invert(d3.mouse(this)[0]);\n                  indexkeys.forEach(function (indexname, i1) {\n                      var i = bisectDate(indexdata[i1].values, x0, 1),\n                        d0 = indexdata[i1].values[i - 1],\n                        d1 = indexdata[i1].values[i],\n                        d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n                      d3.select(\"#focus-\" + indexname)\n                        .attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.cumul) + \")\")\n                        .attr(\"fill\", color(indexname));\n                      d3.select(\"#focus-\" + indexname).select(\"text\").text(indexname + \" \" + Math.round(d.cumul*100)/100).attr(\"fill\", color(indexname));\n                  });\n              }\n\n\n          });\n\n          initZUI();\n      }\n  </script>\n    <style>\n\n            body {\n              font: 10px sans-serif;\n            }\n\n            .axis path,\n            .axis line {\n              fill: none;\n              stroke: #000;\n              shape-rendering: crispEdges;\n            }\n\n            .x.axis path {\n              display: none;\n            }\n\n            .line {\n              fill: none;\n              stroke-width: 5px;\n            }\n        \n           /*ugly way before I found Mike Bostock's example\n             .points {opacity: 0;}\n            .points:hover {opacity: 1;}*/\n\n        .overlay {\n            fill: none;\n            pointer-events: all;\n        }\n\n    </style>\n</head>\n<body onload='buildSVG()' style='width:100%; height:100%; margin: 0; padding: 0;'>\n\n<div id='zui'>\n\n</div>\n\n</body>\n</html>", "description": "zui53 and d3 line chart", "created_at": "2013-03-13T03:10:56Z", "updated_at": "2015-12-14T21:09:09Z", "api": ["d3.selectAll", "d3.time.format", "d3.bisector", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.scale.category20", "d3.csv", "d3.keys", "d3.nest", "d3.extent", "d3.mouse", "d3.select"], "readme": "#zui53 Zoom Adaptation of [Mike Bostock's Line Chart](https://gist.github.com/mbostock/3902569)\nI have not seen anyone pair [zui53](https://github.com/florianguenther/zui53) with so I thought I would experiment by adding the zoom and drag functionality to this line chart.  I also wanted to test my skills by using a long form csv dataset with two series.  zui53 zoom and drag does not work in Internet Explorer.  Works best when opened in [full window](http://bl.ocks.org/timelyportfolio/raw/5149102/)\n\nOriginal Readme.md is below\n***\nA [line chart](../3883245) with mouseover so that you can read the *y*-value based on the closest *x*-value. The *x*-value is found using d3.mouse and scale.invert. The *y*-value is then found by bisecting the data.", "uid": "timelyportfolio_5149102"}, {"code": "Using d3-tip to add tooltips to a d3 bar chart.\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.bar {\n  fill: orange;\n}\n\n.bar:hover {\n  fill: orangered ;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.d3-tip {\n  line-height: 1;\n  font-weight: bold;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  border-radius: 2px;\n}\n\n/* Creates a small triangle extender for the tooltip */\n.d3-tip:after {\n  box-sizing: border-box;\n  display: inline;\n  font-size: 10px;\n  width: 100%;\n  line-height: 1;\n  color: rgba(0, 0, 0, 0.8);\n  content: \"\\25BC\";\n  position: absolute;\n  text-align: center;\n}\n\n/* Style northward tooltips differently */\n.d3-tip.n:after {\n  margin: -1px 0 0 0;\n  top: 100%;\n  left: 0;\n}\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js\"></script>\n<script>\n\nvar margin = {top: 40, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatPercent = d3.format(\".0%\");\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(formatPercent);\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Frequency:</strong> <span style='color:red'>\" + d.frequency + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>\n", "description": "Using d3-tip to add tooltips to a d3 bar chart", "created_at": "2016-04-18T12:00:05Z", "updated_at": "2016-04-18T12:00:05Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "How to use [d3-tip](https://github.com/caged/d3-tip) with d3's [simple bar chart example](http://bl.ocks.org/mbostock/3885304).\n\n\nforked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>\n\nforked from <a href='http://bl.ocks.org/wcjohnson11/'>wcjohnson11</a>'s block: <a href='http://bl.ocks.org/wcjohnson11/04feb3139aa6a857d67f756afa6abda1'>Using d3-tip to add tooltips to a d3 bar chart</a>", "uid": "aax951_d7a90cc03d3e1bddffa5569cae11490d"}, {"code": "Using d3-tip to add tooltips to a d3 bar chart.\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.bar {\n  fill: orange;\n}\n\n.bar:hover {\n  fill: orangered ;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.d3-tip {\n  line-height: 1;\n  font-weight: bold;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  border-radius: 2px;\n}\n\n/* Creates a small triangle extender for the tooltip */\n.d3-tip:after {\n  box-sizing: border-box;\n  display: inline;\n  font-size: 10px;\n  width: 100%;\n  line-height: 1;\n  color: rgba(0, 0, 0, 0.8);\n  content: \"\\25BC\";\n  position: absolute;\n  text-align: center;\n}\n\n/* Style northward tooltips differently */\n.d3-tip.n:after {\n  margin: -1px 0 0 0;\n  top: 100%;\n  left: 0;\n}\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js\"></script>\n<script>\n\nvar margin = {top: 40, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatPercent = d3.format(\".0%\");\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(formatPercent);\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Frequency:</strong> <span style='color:red'>\" + d.frequency + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>\n", "description": "Using d3-tip to add tooltips to a d3 bar chart", "created_at": "2016-03-24T14:02:40Z", "updated_at": "2016-03-24T14:02:41Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "How to use [d3-tip](https://github.com/caged/d3-tip) with d3's [simple bar chart example](http://bl.ocks.org/mbostock/3885304).\n\n\nforked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>", "uid": "mansfimx_27edd1f7c316218285e5"}, {"code": "Using d3-tip to add tooltips to a d3 bar chart.\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.bar {\n  fill: green;\n}\n\n.bar:hover {\n  fill: purple ;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.d3-tip {\n  line-height: 1;\n  font-weight: bold;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  border-radius: 2px;\n}\n\n/* Creates a small triangle extender for the tooltip */\n.d3-tip:after {\n  box-sizing: border-box;\n  display: inline;\n  font-size: 10px;\n  width: 100%;\n  line-height: 1;\n  color: rgba(0, 0, 0, 0.8);\n  content: \"\\25BC\";\n  position: absolute;\n  text-align: center;\n}\n\n/* Style northward tooltips differently */\n.d3-tip.n:after {\n  margin: -1px 0 0 0;\n  top: 100%;\n  left: 0;\n}\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js\"></script>\n<script>\n\nvar margin = {top: 40, right: 20, bottom: 50, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatPercent = d3.format(\".0%\");\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(formatPercent);\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Frequency:</strong> <span style='color:red'>\" + d.frequency + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>\n", "description": "Using d3-tip to add tool", "created_at": "2016-04-18T12:07:18Z", "updated_at": "2016-04-18T12:07:18Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "How to use [d3-tip](https://github.com/caged/d3-tip) with d3's [simple bar chart example](http://bl.ocks.org/mbostock/3885304).\n\n\nforked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>\n\nforked from <a href='http://bl.ocks.org/wcjohnson11/'>wcjohnson11</a>'s block: <a href='http://bl.ocks.org/wcjohnson11/04feb3139aa6a857d67f756afa6abda1'>Using d3-tip to add tooltips to a d3 bar chart</a>\n\nforked from <a href='http://bl.ocks.org/aax951/'>aax951</a>'s block: <a href='http://bl.ocks.org/aax951/d7a90cc03d3e1bddffa5569cae11490d'>Using d3-tip to add tool</a>", "uid": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc"}, {"code": "\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-opacity: .5;\n  stroke-width: .5px;\n}\n\n.land {\n  fill: #222;\n}\n\n.boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\ncircle {\n  fill: yellow;\n}\n\n.geopath {\n  fill: green;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script>\n\nvar width = 1200,\n    height = 720;\n\nvar projection = d3.geo.mercator()\n    .scale(8000)\n    .precision(.1)\n    .center([13.320255,52.52831499])\n    .translate([width / 2, height / 2])\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar graticule = d3.geo.graticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\nd3.json(\"world-50m.json\", function(error, world) {\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n});\n\nd3.json(\"stops_berlin.geojson\", function(error, data) {\n\n  // using d3.geo.path() which does all the work for you\n  svg.append(\"path\")\n    .datum(data)\n    .classed(\"geopath\", true)\n    .attr(\"d\", path)\n\n  // or insert your own custom dots by hand\n  svg.append(\"g\")\n    .selectAll(\"g\")\n    .data(data.features)\n    .enter()\n      .append(\"g\")\n      .attr(\"transform\", function(d) { return \"translate(\" + projection(d.geometry.coordinates) + \")\"; })\n      .append(\"circle\")\n      .attr(\"r\", 1)\n\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n  \n</script>\n", "description": "d3.js map with markers", "created_at": "2015-11-20T12:47:57Z", "updated_at": "2015-11-21T12:10:34Z", "api": ["d3.geo.mercator", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.json"], "readme": "Easy example on how to put marker on a d3.js map.\n\nYou got 2 options:\n- using d3.geo.path() which does all the work for you\n- using svg circles and translating them via projection(d.geometry.coordinates)", "uid": "cpietsch_dc76fc25863458a6a83e"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Center on a Point</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    map.addTileLayer(\"examples.map-zgrqqx0w\", \"Base\", \"mapbox\", false);\n    map.centerOn([-0.1275,51.507],\"latlong\",5000);\n    map.addTopoJSONLayer(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\",\"TopoJSON\",\"roads\",\"svg\",\"all\");\n    map.addCSVLayer(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\",\"CSV Points\",\"pinkcircle\",2,\"svg\",\"x\",\"y\");\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Center on a Point - d3.carto.map", "created_at": "2014-07-12T19:46:14Z", "updated_at": "2015-08-29T14:03:54Z", "api": ["d3.carto.map", "d3.select"], "readme": "How to center on a point with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nThe centerOn function can take \"latlong\" coordinates, which are latitude and longitude in XY order, or \"scaled\" coordinates, which are XY coordinates in the scaled space on the map. You can get latlong from d3.geo.centroid() and scaled from d3.geo.path.centroid().", "uid": "emeeks_0fa283f6844b6d768f99"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<head>\n\t<style>\n\n\t.axis {\n\t  font: 10px sans-serif;\n\t}\n\n\t.axis path,\n\t.axis line {\n\t  fill: none;\n\t  stroke: #000;\n\t  shape-rendering: crispEdges;\n\t}\n\n\t</style>\n</head>\n\n<body>\n\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar\tparseDate = d3.time.format(\"%Y-%m\").parse;\n\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], .6);\n\nvar y = d3.scale.linear().range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tick(function(d) {return d.date });\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n\t\t.ticks(0)\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"bar-data.csv\", function(error, data) {\n\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.value = +d.value;\n    });\n\t\n  x.domain(data.map(function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n//       .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"1em\")\n//       .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n   \n\n  svg.selectAll(\"bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .style(\"fill\", \"steelblue\")\n      .attr(\"x\", function(d) { return x(d.date); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); });\n\n});\n\n</script>\n\n</body>\n", "description": "Simple d3.js bar chart", "created_at": "2016-05-16T15:08:10Z", "updated_at": "2016-05-16T15:17:44Z", "api": ["d3.time.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.max"], "readme": "This is a d3.js bar chart as used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is derived from the Mike Bostock's [Bar Chart example](http://bl.ocks.org/mbostock/3885304) but it is a slightly cut down version.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/8952219'>Simple d3.js bar chart</a>", "uid": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>Input text with D3</title> <!-- adapted from http://javadude.wordpress.com/2012/05/17/d3-js-with-dynamic-data/ -->\n    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/d3/3.4.2/d3.js\"></script>\n\n    <style>\n        body {font-family: monospace; line-height: 160%; font-size: 18px; }\n        ul {list-style: none; margin: 0; padding: 0;}\n        li {display: inline-block; min-width: 80px; padding: 10px; background-color: #eee; margin: 0;}\n        input {border: 1px dotted #ccc; background: white; font-family: monospace; padding: 10px 20px; font-size: 18px; margin: 20px 10px 20px 0; color: red;}\n        input:focus { background-color:yellow; outline: none;}\n    </style>\n</head>\n    <body>\n\n        <form name=\"myform\" onSubmit=\"return handleClick()\">\n            <input name=\"Submit\"  type=\"submit\" value=\"Add to list\" >\n            <input onclick=\"this.select()\" type=\"text\" id=\"myVal\" placeholder=\"Add some text&hellip;\">\n        </form>\n\n        <ul></ul>\n \n        <script>\n \n            var dataset = [];\n \n \n            function handleClick(event){\n                console.log(document.getElementById(\"myVal\").value)\n                draw(document.getElementById(\"myVal\").value)\n                return false;\n            }\n           \n \n            function draw(val){\n                d3.select(\"body\").select(\"ul\").append(\"li\");\n                dataset.push(val);\n                var p = d3.select(\"body\").selectAll(\"li\")\n                .data(dataset)\n                .text(function(d,i){return i + \": \" + d;})\n            }\n \n        </script>\n\n\n    </body>\n</html>\n", "description": "Input field dynamic text with D3", "created_at": "2015-12-01T23:41:54Z", "updated_at": "2015-12-01T23:42:05Z", "api": ["d3.select"], "readme": "### Aim\nPull in dynamic data into a d3 visualisation via input box\n\n### Info and sources\nAdapted from [d3.js with Dynamic Data tutorial](http://javadude.wordpress.com/2012/05/17/d3-js-with-dynamic-data/)\n\n\nforked from <a href='http://bl.ocks.org/eesur/'>eesur</a>'s block: <a href='http://bl.ocks.org/eesur/9910343'>Input field dynamic text with D3</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/097db9b7cc475d786ae0'>Input field dynamic text with D3</a>", "uid": "bjtucker_fd3aa6e64d565962f1c1"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n    font: 12px Arial;\n}\n\ntext.shadow {\n  stroke: #fff;\n  stroke-width: 2.5px;\n  opacity: 0.9;\n}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n.grid .tick {\n    stroke: lightgrey;\n    stroke-opacity: 0.7;\n    shape-rendering: crispEdges;\n}\n.grid path {\n          stroke-width: 0;\n}\n\n.area {\n    fill: lightsteelblue;\n      stroke-width: 0;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\nvar margin = {top: 30, right: 20, bottom: 35, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .ticks(5);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(5);\n\nvar area = d3.svg.area()\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.close); });\n\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// function for the x grid lines\nfunction make_x_axis() {\n    return d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\")\n        .ticks(5)\n}\n\n// function for the y grid lines\nfunction make_y_axis() {\n  return d3.svg.axis()\n      .scale(y)\n      .orient(\"left\")\n      .ticks(5)\n}\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the filled area\n    svg.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"area\")\n        .attr(\"d\", area);\n\n    // Draw the x Grid lines\n    svg.append(\"g\")\n        .attr(\"class\", \"grid\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(make_x_axis()\n            .tickSize(-height, 0, 0)\n            .tickFormat(\"\")\n        )\n\n    // Draw the y Grid lines\n    svg.append(\"g\")            \n        .attr(\"class\", \"grid\")\n        .call(make_y_axis()\n            .tickSize(-width, 0, 0)\n            .tickFormat(\"\")\n        )\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"d\", valueline(data));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n    // Add the text label for the X axis\n    svg.append(\"text\")\n        .attr(\"transform\",\n              \"translate(\" + (width/2) + \" ,\" + \n                             (height+margin.bottom) + \")\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Date\");\n\n    // Add the white background to the y axis label for legibility\n    svg.append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"x\", margin.top - (height / 2))\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"class\", \"shadow\")\n        .text(\"Price ($)\");\n\n    // Add the text label for the Y axis\n    svg.append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"x\", margin.top - (height / 2))\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .text(\"Price ($)\");\n\n    // Add the title\n    svg.append(\"text\")\n        .attr(\"x\", (width / 2))     \n        .attr(\"y\", 0 - (margin.top / 2))\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-size\", \"16px\")\n        .style(\"text-decoration\", \"underline\")\n        .text(\"Price vs Date Graph\");\n\n});\n\n</script>\n</body>\n", "description": "d3.js Graph with many features", "created_at": "2014-06-20T21:02:21Z", "updated_at": "2016-03-11T03:25:07Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple d3.js graph](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at exploring some features of d3.js and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_e1aa61856118edfa624d"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the scatterplot\n    svg.selectAll(\"dot\")\n        .data(data)\n      .enter().append(\"circle\")\n        .attr(\"r\", 3.5)\n        .attr(\"cx\", function(d) { return x(d.date); })\n        .attr(\"cy\", function(d) { return y(d.close); });\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>\n", "description": "Simple scatterplot with d3.js", "created_at": "2016-02-24T21:47:59Z", "updated_at": "2016-02-24T21:47:59Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple d3.js graph](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt adds points to a simple line graph to produce a hybrid line / scatterplot graph. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/38744a17f9c0141bcd04'>Simple scatterplot with d3.js</a>\n\nforked from <a href='http://bl.ocks.org/nguyenbq/'>nguyenbq</a>'s block: <a href='http://bl.ocks.org/nguyenbq/a350280a02c8105529d0'>Simple scatterplot with d3.js</a>", "uid": "nguyenbq_85a4c204a61fa6407aed"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Automatic Voronoi</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .voronoi {\n    fill-opacity: .3;\n    stroke: black;\n    stroke-width: 2;\n  }\n\n</style>\n<script>\n      function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    \n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Base\")\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"canvas\")\n    .markerColor(\"black\")\n    .markerSize(1)\n    .x(\"x\")\n    .y(\"y\")\n    .on(\"load\", makeVoronoi)\n    \n    map.addCartoLayer(tileLayer).addCartoLayer(csvLayer);\n    map.setScale(3);\n    \n    function makeVoronoi() {\n      voronoiLayer = map.createVoronoiLayer(csvLayer, .5);\n\n      voronoiLayer\n      .label(\"Voronoi\")\n      .cssClass(\"voronoi\")\n      .on(\"load\", colorVoronoi);\n      \n      map.addCartoLayer(voronoiLayer);\n      \n      function colorVoronoi() {\n      var colorScale = d3.scale.linear().domain([60,80,100]).range([\"green\",\"yellow\",\"red\"])\n        voronoiLayer.g().selectAll(\"path\")\n        .style(\"fill\", function(d) {return colorScale(d.properties.node.rank)});\n      }\n      \n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Automated Voronoi Layer - d3.carto", "created_at": "2014-09-16T11:31:03Z", "updated_at": "2015-08-29T14:06:31Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer", "d3.carto.layer.csv", "d3.scale.linear"], "readme": "Automatic voronoi generation in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** allows for the creation of regions from point data.\n\nThe map.createVoronoiLayer function takes two variable: a point d3.carto.layer (either CSV or XY Array) and a margin (in degrees). It creates a feature carto layer that splits the area of the points into regions.\n\nThis will have issues if you pass point data that has more than one point at the same XY location.", "uid": "emeeks_86da8f19e58ccb668750"}, {"code": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>D3 Level 3</title>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n        <style>\n            svg {\n                font: 10px sans-serif;\n            }\n            .area {\n                fill: steelblue;\n                clip-path: url(#clip);\n            }\n            .axis path,\n            .axis line {\n                fill: none;\n                stroke: #000;\n                shape-rendering: crispEdges;\n            }\n            .brush .extent {\n                stroke: #fff;\n                fill-opacity: .125;\n                shape-rendering: crispEdges;\n            }\n        </style>\n    </head>\n    <body>\n        <button id=\"reset\">Reset</button>\n        <br>\n        <script>\n            var W = 960, H = 500;\n\n            //Setting up Margins\n            var mainMargin = {top: 10, right: 10, left: 70, bottom: 140};\n            var subMargin = {top: 400, right: 10, bottom: 40, left: 70};\n\n            //Widths, Heights\n            var width = W - mainMargin.left - mainMargin.right;\n            var mainHeight = H - mainMargin.top - mainMargin.bottom;\n            var subHeight = H - subMargin.top - subMargin.bottom;\n\n            //Date Parser\n            var parseDate = d3.time.format(\"%b %Y\").parse;\n\n            //Main Chart Scales\n            var mainXScale = d3.time.scale().range([0, width]);\n            var mainYScale = d3.scale.linear().range([mainHeight, 0]);\n\n            //Sub Chart scales\n            var subXScale = d3.time.scale().range([0, width]);\n            var subYScale = d3.scale.linear().range([subHeight, 0]);\n\n            //Main Chart Axes\n            var mainXAxis = d3.svg.axis().scale(mainXScale).orient('bottom');\n            var mainYAxis = d3.svg.axis().scale(mainYScale).orient('left');\n\n            //Sub Chart Axes\n            var subXAxis = d3.svg.axis().scale(subXScale).orient('bottom');\n            var subYAxis = d3.svg.axis().scale(subYScale).orient('left').ticks(2);\n\n            //Area\n            var mainArea = d3.svg.area()\n                    .interpolate('monotone')\n                    .x(function (d) {\n                        return mainXScale(d.date)\n                    })\n                    .y0(mainHeight)\n                    .y1(function (d) {\n                        return mainYScale(d.price)\n                    });\n\n            var subArea = d3.svg.area()\n                    .interpolate('monotone')\n                    .x(function (d) {\n                        return subXScale(d.date)\n                    })\n                    .y0(subHeight)\n                    .y1(function (d) {\n                        return subYScale(d.price)\n                    });\n\n            var svg = d3.select('body').append('svg')\n                    .attr('width', W)\n                    .attr('height', H);\n\n            svg.append('defs')\n                    .append('clipPath')\n                    .attr('id', 'clip')\n                    .append('rect')\n                    .attr('width', width)\n                    .attr('height', mainHeight);\n\n            var main = svg.append('g')\n                    .classed('main', true)\n                    .attr(\"transform\", \"translate(\" + mainMargin.left + \",\" + mainMargin.top + \")\");\n\n            var sub = svg.append('g')\n                    .classed('sub', true)\n                    .attr(\"transform\", \"translate(\" + subMargin.left + \",\" + subMargin.top + \")\");\n\n            var brush = d3.svg.brush()\n                    .x(subXScale)\n                    .on(\"brush\", brushed);\n\n            d3.csv('data.csv', function (d) {\n                d.date = parseDate(d.date);\n                d.price = +d.price;\n                return d;\n            }, function (err, data) {\n                mainXScale.domain(d3.extent(data, function (d) {\n                    return d.date\n                }));\n                mainYScale.domain([0, d3.max(data, function (d) {\n                        return d.price\n                    })]);\n\n                subXScale.domain(mainXScale.domain());\n                subYScale.domain(mainYScale.domain());\n\n                main.append(\"g\")\n                        .classed(\"x axis\", true)\n                        .attr(\"transform\", \"translate(0, \" + mainHeight + \")\")\n                        .call(mainXAxis);\n                main.append(\"g\")\n                        .classed(\"y axis\", true)\n                        .attr(\"transform\", \"translate(0, 0)\")\n                        .call(mainYAxis);\n\n                main.append('path')\n                        .datum(data)\n                        .classed('area', true)\n                        .attr('d', mainArea);\n\n                sub.append(\"g\")\n                        .classed(\"x axis\", true)\n                        .attr(\"transform\", \"translate(0, \" + subHeight + \")\")\n                        .call(subXAxis);\n                sub.append(\"g\")\n                        .classed(\"y axis\", true)\n                        .attr(\"transform\", \"translate(0, 0)\")\n                        .call(subYAxis);\n\n                sub.append('path')\n                        .datum(data)\n                        .classed('area', true)\n                        .attr('d', subArea);\n\n                sub.append(\"g\")\n                        .classed(\"x brush\", true)\n                        .call(brush)\n                        .selectAll(\"rect\")\n                        .attr(\"y\", -6)\n                        .attr(\"height\", subHeight + 7);\n\n                d3.select('#reset').on('click', function () {\n                    mainXScale.domain(subXScale.domain());\n                    main.select('.area').transition().attr('d', mainArea);\n                    main.select('.x.axis').transition().call(mainXAxis);\n                    sub.select('rect.extent').transition().attr('width', 0);\n                })\n            });\n\n            function brushed() {\n                mainXScale.domain(brush.empty() ? subXScale.domain() : brush.extent());\n                main.select('.area').attr('d', mainArea);\n                main.select('.x.axis').call(mainXAxis);\n            }\n        </script>\n    </body>\n</html>\n", "description": "Zoom and Brush in d3", "created_at": "2015-11-19T22:28:51Z", "updated_at": "2015-11-19T22:28:53Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.select", "d3.svg.brush", "d3.csv", "d3.extent", "d3.max"], "readme": "\n\nforked from <a href='http://bl.ocks.org/nivas8292/'>nivas8292</a>'s block: <a href='http://bl.ocks.org/nivas8292/222939d7c74c5de09387'>Zoom and Brush in d3</a>", "uid": "ptvans_461585105bdbc14b4e85"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Orbit Layout Modes</title>\n  <meta charset=\"utf-8\" />\n</head>\n<style>\n\n  #viz, svg {\n    width: 100%;\n    height: 100%;\n  }\n\n  text {\n    pointer-events: none;\n  }\n\n  #buttons {\n    position: fixed;\n    top:0;\n    left:0;\n  }\n\n  circle.ring {\n    fill: none;\n    stroke: black;\n    stroke-width: 1px;\n    stroke-opacity: .15;\n\n  }\n  \n</style>\n<script>\n\n\nfunction makeViz() {\n\n  d3.json(\"d3.json\", function(data) {drawOrbit(data)});\n\n}\n\nfunction drawOrbit(_data) {\n\n  var center = {};\n  var recenter = false;\n\n\n  for (var x=0;x<_data.children.length;x++) {\n    _data.children[x].size = _data.children[x].children ? _data.children[x].children.length : 0;\n  }\n\n  _data.children.sort(function(a,b) {\n        if (a.size > b.size) {\n          return 1;\n        }\n        if (a.size < b.size) {\n          return -1;\n        }\n        return 0;\n  })\n\n\n  sizeScale = d3.scale.linear().domain([0,1,5,10,20]).range([4,6,8,10,12]).clamp(true);\n  colorScale = d3.scale.linear().domain([0,1,2,3,4]).range([\"rgb(161,208,120)\",\"rgb(247,148,72)\",\"rgb(225,203,208)\",\"rgb(174,223,228)\",\"rgb(245,132,102)\"]);\n\n  planetColors = {Mercury: \"gray\", Venus: \"#d6bb87\", Earth: \"#677188\", Mars: \"#7c5541\", Jupiter: \"#a36a3e\", Saturn: \"#e9ba85\", Uranus: \"#73cbf0\", Neptune: \"#6383d1\"}\n\n\n  orbit = d3.layout.orbit().size([800,800])\n  .revolution(customRevolution)\n  .orbitSize(function(d) {return d.depth >= 2 ? 6 : 4})\n  .speed(.25)\n  .mode([35,36,8,3,1])\n  .nodes(_data);\n\n  center = orbit.nodes()[0];\n\n  d3.select(\"svg\")\n.append(\"g\")\n.attr(\"class\", \"viz\")\n.attr(\"transform\", \"translate(50,50)\")\n  .selectAll(\"g.node\").data(orbit.nodes())\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"})\n  .on(\"mouseover\", nodeOver)\n  .on(\"click\", recenter)\n\n  d3.selectAll(\"g.node\")\n  .append(\"circle\")\n  .attr(\"class\", \"satellite\")\n  .attr(\"r\", function(d) {return sizeScale(d.children ? d.children.length : 0)})\n  .style(\"fill\", function(d) {return colorScale(d.depth)})\n  .style(\"stroke\", \"brown\")\n  .style(\"stroke-width\", \"1px\")\n\n  d3.selectAll(\"g.node\").filter(function(d) {return d.depth == 1})\n  .append(\"text\")\n  .text(function(d) {return d.depth == 0 ? \"Sun\" : d.key})\n  .attr(\"y\", 20)\n  .style(\"text-anchor\", \"middle\")\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n  .enter()\n  .insert(\"circle\", \"g\")\n  .attr(\"class\", \"ring\")\n  .attr(\"r\", function(d) {return d.r})\n  .attr(\"cx\", function(d) {return d.x})\n  .attr(\"cy\", function(d) {return d.y})\n\n  orbit.on(\"tick\", orbitTick);\n\n  orbit.start();\n\n  function orbitTick() {\n\n    var newX = 200- center.x;\n    var newY = 200 - center.y;\n\n    d3.select(\"g.viz\")\n    .attr(\"transform\", \"scale(\"+(1 + (center.depth *.1)) +\") translate(\" + newX + \",\" + newY + \")\")\n\n\n    d3.selectAll(\"g.node\")\n      .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"});\n\n    d3.selectAll(\"circle.ring\")\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n\n        d3.selectAll(\"line.visible\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n\n  }\n\n  function changeCenter() {\n        recenter = false;\n        orbit.stop();\n    var newX = 200 - center.x;\n    var newY = 200 - center.y;\n\n    d3.select(\"g.viz\")\n    .transition()\n    .duration(1000)\n    .attr(\"transform\", \"scale(\"+(1 + (center.depth *.1)) +\") translate(\" + newX + \",\" + newY + \")\")\n    .each(\"end\", function() {orbit.start()})\n\n  }\n\n  function customRevolution(d) \n  {\n    if (d.name == \"time\") {\n      return d.depth * .25;\n    }\n    if (d.name == \"geo\") {\n      return -d.depth * .25;      \n    }\n    return d.depth\n  }\n\n  function nodeOver(d) {\n    orbit.stop();\n\n      center = d;\n      changeCenter();\n\n      d3.selectAll(\"text.sat\").remove();\n\n      d3.selectAll(\"line.visible\").remove();\n\n      if (d.children) {\n        var lines = d.children.map(function(p) {return {source: d, target: p}})\n        d3.select(\"g.viz\").selectAll(\"line.visible\")\n        .data(lines)\n        .enter()\n        .insert(\"line\", \"g\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n        .attr(\"class\", \"visible\")\n        .style(\"stroke\", \"rgb(73,106,154)\")\n        .style(\"stroke-width\", 2)\n      }\n\n      if (d.parent) {\n\n        d3.select(\"g.viz\").selectAll(\"line.fake\")\n        .data([{source:d, target: d.parent}])\n        .enter()\n        .insert(\"line\", \"g\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n        .attr(\"class\", \"visible\")\n        .style(\"stroke\", \"rgb(165,127,124)\")\n        .style(\"stroke-width\", 3)\n      }\n\n\n      d3.selectAll(\"g.node\")\n      .filter(function(p) {return p == d || p == d.parent || (d.children ? d.children.indexOf(p) > -1 : false)})\n      .append(\"text\")\n      .text(function(p) {return p.name})\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"sat\")\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", \"white\")\n      .style(\"stroke-width\", 3)\n      .style(\"stroke-opacity\", .7);\n\n      d3.selectAll(\"g.node\")\n      .filter(function(p) {return p == d || p == d.parent || (d.children ? d.children.indexOf(p) > -1 : false)})\n      .append(\"text\")\n      .text(function(p) {return p.name})\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"sat\");\n\n    d3.selectAll(\"g.node > circle\").style(\"stroke\", \"brown\").style(\"stroke-width\", 1);    \n\n    d3.select(this).select(\"circle\").style(\"stroke\", \"black\").style(\"stroke-width\", 3);\n\n  }\n\n\n}\n\n</script>\n<body onload=\"makeViz()\">\n<div id=\"viz\"><svg></svg><div id=\"buttons\"></div></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"d3.layout.orbit.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n</footer>\n</body>\n</html>", "description": "Orbital Layout of D3.js API", "created_at": "2015-11-08T15:00:38Z", "updated_at": "2015-11-08T15:00:38Z", "api": ["d3.dispatch", "d3.rebind", "d3.layout.pie", "d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that visualizes the D3 API.\n\nWhen you mouseover a node, it displays its label and centers the orbit layout on that node. It also draws spokes to children and parents where applicable.", "uid": "wcjohnson11_7a0309cc11757a3e5b3e"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <script src=\"aframe-text-component.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; background-color: white;}\n   \n  </style>\n</head>\n\n\n<body>\n  <a-scene>\n      <!-- Camera with customized cursor -->\n      <a-camera position=\"0 1.8 0\" cursor-visible=\"true\" cursor-scale=\"2\" cursor-color=\"#4CC3D9\" cursor-offset=\"2\" cursor-maxdistance=\"100\" cursor-opacity=\"0.5\" cursor-fuse=\"true\"></a-camera>\n      <a-light color=\"#da47da\" position=\"0 5 0\" type=\"ambient\"></a-light>\n    \t<a-entity camera look-controls wasd-controls></a-entity>\n    \t<a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n    \n      <!-- Sky -->\n      <a-sky color=\"#ecfcf4\"></a-sky>\n  </a-scene>\n  <script>\n\n    \n    // fake data\n    var data = [ 10, 20, 30, 15, 25, 35, 40,\n                45, 50, 70, 100, 120, 130,\n               12, 18, 22, 29, 33, 44, 59, 200]\n    \n    // we scale the height of our bars using d3's linear scale\n    var hscale = d3.scale.linear()\n    \t.domain([0, d3.max(data)])\n    \t.range([0, 3])\n    \n    // we select the scene object just like an svg\n    var scene = d3.select(\"a-scene\")\n    \n    // we use d3's enter/update/exit pattern to draw and bind our dom elements\n    var bars = scene.selectAll(\"a-cube.bar\").data(data)\n    bars.enter().append(\"a-cube\").classed(\"bar\", true)\n\n    // we set attributes on our cubes to determine how they are rendered\n    bars.attr({\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 1 + hscale(d)/2;\n        // lets place the bars all around our camera\n        var radius = 5;\n        var theta = i/data.length * 2 * Math.PI - 3/4*Math.PI\n        var x = radius * Math.cos(theta)\n        var z = radius * Math.sin(theta)\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/data.length)*360 - 45;\n        return x + \" \" + y + \" \" + z\n      },\n      width: function(d) { return 0.5},\n      depth: function(d) { return 0.9},\n      height: function(d) { return hscale(d)},\n      opacity: function(d,i) { return 0.6 + (i/data.length) * 0.4},\n      //metalness: function(d,i) { return i/data.length}\n    })\n    .on(\"click\", function(d,i) {\n      console.log(\"click\", i,d)\n    })\n    .on(\"mouseenter\", function(d,i) {\n      // this event gets fired continuously as long as the cursor\n      // is over the element. we only want trigger our animation the first time\n      if(this.hovering) return;\n      console.log(\"hover\", i,d)\n      this.hovering = true;\n      d3.select(this).transition().duration(1000)\n      .attr({\n        metalness: 0.5,\n        width: 2\n      })\n    })\n    .on(\"mouseleave\", function(d,i) {\n      console.log(\"leave\",i,d)\n      this.hovering = false;\n      d3.select(this).transition()\n      .attr({\n        metalness: 0,\n        width: 0.5\n      })\n    }) \n    \n    \n    var labels = scene.selectAll(\"a-entity.label\").data(data)\n    labels.enter().append(\"a-entity\").classed(\"label\", true)\n    .attr({\n      text: function(d,i){  return \"text: \" + i },\n      material: \"color: #000\"\n    })\n    // we set attributes on our cubes to determine how they are rendered\n    labels.attr({\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 0.3;\n        // lets place the bars all around our camera\n        var radius = 5;\n        var theta = i/data.length * 2 * Math.PI - 3/4*Math.PI - 0.07\n        var x = radius * Math.cos(theta)\n        var z = radius * Math.sin(theta)\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = +45 -(i/data.length)*360;\n        return x + \" \" + y + \" \" + z\n      },\n    })\n    \n    \n    \n  </script>\n</body>\n", "description": "aframe + d3 test: text labels", "created_at": "2015-12-21T19:29:07Z", "updated_at": "2016-01-23T18:41:57Z", "api": ["d3.scale.linear", "d3.max", "d3.select"], "readme": "Testing out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org). use **WASD** keys to \"walk\" around the space.\n\nSince AFrame works with DOM elements, you can use d3's selection API to generate and modify 3D elements, as well as handle \"mouse\" events (including the VR friendly \"fuse cursor\") as if it was SVG.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/8be32e6f1f32920ba841'>aframe + d3 test</a>", "uid": "enjalot_1fd196cd99f8d58a56d3"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.point {\n  fill: #2f225d;\n  stroke: #afa2dc;\n}\n\n.selected {\n  fill: #afa2dc;\n  stroke: #2f225d;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\np {\n  font: 12px sans-serif;\n  margin: 0 0 2px 0;\n  padding: 0;\n}\n\n.clear-button {\n  font: 14px sans-serif;\n  cursor: pointer;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\nd3.helper = {};\n\nd3.helper = {};\n\nd3.helper.tooltip = function(){\n    var tooltipDiv;\n    var bodyNode = d3.select('body').node();\n\n    function tooltip(selection){\n\n        selection.on('mouseover.tooltip', function(pD, pI){\n            // Clean up lost tooltips\n            d3.select('body').selectAll('div.tooltip').remove();\n            // Append tooltip\n            tooltipDiv = d3.select('body')\n                           .append('div')\n                           .attr('class', 'tooltip')\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px',\n                'background-color': '#d8d5e4',\n                width: '65px',\n                height: '30px',\n                padding: '5px',\n                position: 'absolute',\n                'z-index': 1001,\n                'box-shadow': '0 1px 2px 0 #656565'\n            });\n\n            var first_line = '<p>X-Value: ' + pD.index + '</p>'\n            var second_line = '<p>Y-Value: ' + pD.value + '</p>'\n\n            tooltipDiv.html(first_line + second_line)\n        })\n        .on('mousemove.tooltip', function(pD, pI){\n            // Move tooltip\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px'\n            });\n        })\n        .on('mouseout.tooltip', function(pD, pI){\n            // Remove tooltip\n            tooltipDiv.remove();\n        });\n\n    }\n\n    tooltip.attr = function(_x){\n        if (!arguments.length) return attrs;\n        attrs = _x;\n        return this;\n    };\n\n    tooltip.style = function(_x){\n        if (!arguments.length) return styles;\n        styles = _x;\n        return this;\n    };\n\n    return tooltip;\n};\n\nvar data = [];\nvar values = [];\nfor (var i = 2; i <= 50; i++) {\n    var val = Math.floor(Math.random() * (50 - 5 + 1) + 5);\n    data.push({index: i, value: val});\n    values.push(val);\n}\n\nvar margin = {top: 20, right: 20, bottom: 60, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([0, 50]);\n\nvar y = d3.scale.linear()\n    .range([height, 0])\n    .domain([0, d3.max(values) + 5]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(11);\n\nvar brush = d3.svg.brush()\n    .x(x)\n    .on(\"brush\", brushmove)\n    .on(\"brushend\", brushend);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\npoints = svg.selectAll(\".point\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"class\", \"point\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"r\", function(d){return Math.floor(Math.random() * (20 - 5 + 1) + 5);})\n    .attr(\"cx\", function(d) { return x(d.index); })\n    .attr(\"cy\", function(d) { return y(d.value); })\n    .call(d3.helper.tooltip());\n\nsvg.append(\"g\")\n    .attr(\"class\", \"brush\")\n    .call(brush)\n  .selectAll('rect')\n    .attr('height', height);\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height + 20);\n\nfunction brushmove() {\n  var extent = brush.extent();\n  points.classed(\"selected\", function(d) {\n    is_brushed = extent[0] <= d.index && d.index <= extent[1];\n    return is_brushed;\n  });\n}\n\nfunction brushend() {\n  get_button = d3.select(\".clear-button\");\n  if(get_button.empty() === true) {\n    clear_button = svg.append('text')\n      .attr(\"y\", 460)\n      .attr(\"x\", 825)\n      .attr(\"class\", \"clear-button\")\n      .text(\"Clear Brush\");\n  }\n\n  x.domain(brush.extent());\n\n  transition_data();\n  reset_axis();\n\n  points.classed(\"selected\", false);\n  d3.select(\".brush\").call(brush.clear());\n\n  clear_button.on('click', function(){\n    x.domain([0, 50]);\n    transition_data();\n    reset_axis();\n    clear_button.remove();\n  });\n}\n\nfunction transition_data() {\n  svg.selectAll(\".point\")\n    .data(data)\n  .transition()\n    .duration(500)\n    .attr(\"cx\", function(d) { return x(d.index); });\n}\n\nfunction reset_axis() {\n  svg.transition().duration(500)\n   .select(\".x.axis\")\n   .call(xAxis);\n}\n\n</script>", "description": "D3 Brush and Tooltip III", "created_at": "2013-11-24T18:19:33Z", "updated_at": "2015-12-29T06:39:08Z", "api": ["d3.select", "d3.mouse", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.svg.brush", "d3.helper.tooltip"], "readme": "Example for [Cooperative Brushing and Tooltips in D3](http://wrobstory.github.io/2013/11/D3-brush-and-tooltip.html). \n\nNote that the brush layer is appended *after* the data, and therefore mouseover events do not trigger the tooltip. Only when you start brushing do the tooltips appear. ", "uid": "wrobstory_7630406"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.bar:hover {\n  fill: brown;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path {\n  display: none;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n// Adapted from http://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n\nvar randomColor = (function(){\n  var golden_ratio_conjugate = 0.618033988749895;\n  var h = Math.random();\n\n  var hslToRgb = function (h, s, l){\n      var r, g, b;\n\n      if(s == 0){\n          r = g = b = l; // achromatic\n      }else{\n          function hue2rgb(p, q, t){\n              if(t < 0) t += 1;\n              if(t > 1) t -= 1;\n              if(t < 1/6) return p + (q - p) * 6 * t;\n              if(t < 1/2) return q;\n              if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n              return p;\n          }\n\n          var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n          var p = 2 * l - q;\n          r = hue2rgb(p, q, h + 1/3);\n          g = hue2rgb(p, q, h);\n          b = hue2rgb(p, q, h - 1/3);\n      }\n\n      return '#'+Math.round(r * 255).toString(16)+Math.round(g * 255).toString(16)+Math.round(b * 255).toString(16);\n  };\n  \n  return function(){\n    h += golden_ratio_conjugate;\n    h %= 1;\n    return hslToRgb(h, 0.5, 0.60);\n  };\n})();\n</script>\n\n<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\ndata = [\n  {letter: \"A\", frequency: 0.08167},\n  {letter: \"B\", frequency: 0.01492},\n  {letter: \"C\", frequency: 0.02782},\n  {letter: \"D\", frequency: 0.04253},\n  {letter: \"E\", frequency: 0.12702},\n  {letter: \"F\", frequency: 0.02288},\n  {letter: \"G\", frequency: 0.02015},\n  {letter: \"H\", frequency: 0.06094},\n  {letter: \"I\", frequency: 0.06966},\n  {letter: \"J\", frequency: 0.00153},\n  {letter: \"K\", frequency: 0.00772},\n  {letter: \"L\", frequency: 0.04025},\n  {letter: \"M\", frequency: 0.02406},\n  {letter: \"N\", frequency: 0.06749},\n  {letter: \"O\", frequency: 0.07507},\n  {letter: \"P\", frequency: 0.01929},\n  {letter: \"Q\", frequency: 0.00095},\n  {letter: \"R\", frequency: 0.05987},\n  {letter: \"S\", frequency: 0.06327},\n  {letter: \"T\", frequency: 0.09056},\n  {letter: \"U\", frequency: 0.02758},\n  {letter: \"V\", frequency: 0.00978},\n  {letter: \"W\", frequency: 0.02360},\n  {letter: \"X\", frequency: 0.00150},\n  {letter: \"Y\", frequency: 0.01974},\n  {letter: \"Z\", frequency: 0.00074}\n];\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); })\n      .style({fill: randomColor});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>\n\n</body>\n</html>", "description": "D3 with random color generator", "created_at": "2014-06-10T04:27:16Z", "updated_at": "2015-08-29T14:02:25Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.max"], "readme": "", "uid": "jdarling_06019d16cb5fd6795edf"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Improved Canvas Rendering - d3.carto</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .region {\n    stroke: white;\n  }\n  \n</style>\n<script>\n\n  function makeSomeMaps() {\n    pathSource = 0;\n\n    map = d3.carto.map();\n    \n    var regionColor = [\"lightgray\",\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"];\n    var colorScale = d3.scale.linear().domain([0,5,26]).range([\"green\",\"yellow\", \"red\"])\n    var sizeScale = d3.scale.linear().domain([50,1000]).range([1,6])\n\n    d3.select(\"#map\").call(map);\n    map.mode(\"globe\");\n    map.zoom().scale(350);\n\n//    map.centerOn([-88,39],\"latlong\");\n//    map.setScale(2);\n\n    wcLayer = d3.carto.layer.tile();\n    wcLayer\n    .tileType(\"mapbox\")\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Base\")\n    .visibility(true)\n\n    regionLayer = d3.carto.layer.geojson();\n    regionLayer\n    .path(\"ecoregions.json\")\n    .label(\"Regions\")\n    .cssClass(\"region\")\n    .renderMode(\"canvas\")\n    .markerColor(function(d) {return regionColor[d.a]})\n    .clickableFeatures(true);\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"all_sites.csv\")\n    .label(\"Cities\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"canvas\")\n    .markerSize(function(d) {return sizeScale(d.pop)})\n    .markerColor(function(d) {return colorScale(d.capacity)})\n    .x(function(d) {return d.xcoord})\n    .y(function(d) {return d.ycoord});\n    \n    map.addCartoLayer(wcLayer).addCartoLayer(regionLayer).addCartoLayer(csvLayer);\n    map.refresh();\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\">\n</div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>\n", "description": "Styling Canvas Elements - d3.carto", "created_at": "2014-09-09T20:07:50Z", "updated_at": "2015-08-29T14:06:16Z", "api": ["d3.carto.map", "d3.scale.linear", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.csv"], "readme": "Canvas element styling with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** does not use d3.selectAll like [SVG element styling](http://bl.ocks.org/emeeks/f8c0220c54ec8347ea95) because these aren't SVG elements. Here we see 6000+ cities between 50k and 1m population each styled based on various attributes.\n\nThis relies on using cartoLayer.markerColor() and cartoLayer.markerSize() and setting them to function based on the data. If you don't set markerColor, then it will rely on CSS styling of the associated class.\n\n[This example is also available in transform mode](http://bl.ocks.org/emeeks/e6f72fbca42e77be0eb3).", "uid": "emeeks_aea3c7fc1acc0eca4d44"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2.5px;\n  shape-rendering: crispEdges;\n}\n .axis line {\n  fill: none;\n  stroke: black;\n  stroke-width: 1.6px;\n}\n\n.axis .minor {\n  stroke: black;\n  stroke-width: 0.4px;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.scale.linear()\n    .domain([0, 1000])\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(5).tickSubdivide(1).tickSize(-60, -20, 0));\n  \n  svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"top\").ticks(5).tickSubdivide(10).tickSize(-60, -30, 0));\n  \n\n</script>", "description": "d3.js major minor tick style 3", "created_at": "2016-02-18T16:23:39Z", "updated_at": "2016-02-18T16:23:39Z", "api": ["d3.scale.linear", "d3.select", "d3.svg.axis"], "readme": "\n\nforked from <a href='http://bl.ocks.org/vjpgo/'>vjpgo</a>'s block: <a href='http://bl.ocks.org/vjpgo/4689130'>d3.js major minor tick style 3</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/60e84ea5cdffa49356e4'>d3.js major minor tick style 3</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/384dd445a6a7ae9f6086'>d3.js major minor tick style 3</a>", "uid": "ashtonburg_4384949715de645a77ef"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2.5px;\n  shape-rendering: crispEdges;\n}\n .axis line {\n  fill: none;\n  stroke: green;\n  stroke-width: 1.6px;\n}\n\n.axis .minor {\n  stroke: red;\n  stroke-width: 0.4px;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(16).tickSubdivide(3).tickSize(-60, -60, 0));\n \n</script>", "description": "d3.js major minor tick style 3", "created_at": "2016-02-18T15:47:08Z", "updated_at": "2016-02-18T15:47:08Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "\n\nforked from <a href='http://bl.ocks.org/vjpgo/'>vjpgo</a>'s block: <a href='http://bl.ocks.org/vjpgo/4689130'>d3.js major minor tick style 3</a>", "uid": "ashtonburg_60e84ea5cdffa49356e4"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\nvar width = 600,\n    height = 500,\n    radius = 240,\n    radial_speed = 500;\n\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius)\n    .innerRadius(radius - 130);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.Porcentaje; })\n    .startAngle(-1*Math.PI/2)\n    .endAngle(Math.PI/2);    \n\n\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.csv(\"https://cdn.rawgit.com/rveciana/5919944/raw//encuesta.csv\", function(d){\n\n\n    var g = svg.selectAll(\".arc\")\n      .data(pie(d))\n        .enter().append(\"g\")\n        .attr(\"class\", \"arc\");\n\n    var path = g.append(\"path\")\n      .attr(\"d\", function(d) {\n            e = d3.svg.arc()\n            .outerRadius(radius)\n            .innerRadius(radius - 130);\n            e.startAngle = d.startAngle;\n            e.endAngle = e.startAngle; \n\n            this._current = e;\n            return arc(e);\n        })\n      .style(\"fill\", function(d) { return d3.rgb(d.data.Color); });\n      \n    delay = 0;\n    path\n        .transition()\n        .delay(function(d){\n            cur_delay = delay;\n            delay += radial_speed * (d.endAngle - this._current.endAngle);\n            return cur_delay;\n        })\n        .duration(function(d){\n            return radial_speed * (d.endAngle - this._current.endAngle);\n        })\n\n        .ease('linear')\n        .attrTween(\"d\", function (d) {\n            var i  = d3.interpolate(this._current, d);\n            \n            return function(t) {\n                return arc(i(t));\n            };\n        });\n\n    \n    });\n\n</script>", "description": "JSL 2015: Pie layout animado", "created_at": "2015-02-11T08:45:59Z", "updated_at": "2015-08-29T14:15:14Z", "api": ["d3.svg.arc", "d3.layout.pie", "d3.select", "d3.csv", "d3.rgb", "d3.interpolate"], "readme": "Quinto ejemplo del taller *Mapas web interactivos con D3.js* en el programa de las [9as Jornadas SIG Libre ](http://www.sigte.udg.edu/jornadassiglibre/programa/talleres/).\n \nEn este ejemplo se a\u00f1ade una animaci\u00f3n [al ejemplo anterior](http://bl.ocks.org/rveciana/20f120d7ab0580f9a8c5) al layout de forma que los sectores se dibujan de forma consecutiva.\n \nLos datos son de la encuesta GAD3, del 9-13 de enero de 2015. Fuente: [Wikipedia](http://es.wikipedia.org/wiki/Anexo:Sondeos_de_intenci%C3%B3n_de_voto_para_las_elecciones_generales_de_Espa%C3%B1a_de_2015) ", "uid": "rveciana_4affa5bdb5e8c87ea5e5"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.states {\n  fill: #ccc;\n  stroke: #fff;\n}\n\n.symbol {\n  fill: steelblue;\n  fill-opacity: .8;\n  stroke: #fff;\n}\n\n.tooltip{ background-color:rgba(68,136,187,0.5);;\n          margin: 10px;\n          height: 50px;\n          width: 150px;\n          padding-left: 10px; \n          padding-top: 10px;\n    -webkit-border-radius:10px;\n    -moz-border-radius:10px;\n    border-radius:10px;\n        }\n</style>\n<body>\n<button type=\"button\" id=\"change\">Change</button>\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v0.min.js\"></script>\n<script src=\"http://d3js.org/queue.v1.min.js\"></script>\n<script type=\"text/javascript\" src=\"tooltip.js\"></script>\n\n\n<script>\nvar width = 960,\n    height = 500;\nvar states, points;\n\n\nvar radius = d3.scale.sqrt()\n    .domain([0, 1e6])\n    .range([0, 10]);\n\nvar projection = d3.geo.mercator()\n    .center([-97, 37])\n    .scale(4000 / 2 / Math.PI)\n    .translate([width / 2, height / 2]);\n\n\nvar path = d3.geo.path()\n.projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nqueue()\n    .defer(d3.json, \"https://cdn.rawgit.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/us.json\")\n    .defer(d3.json, \"https://cdn.rawgit.com/mbostock/3750900/raw/us-state-centroids.json\")\n    .await(ready);\n\n\nfunction ready(error, us, centroid) {\nstates = svg.append(\"path\")\n      .attr(\"class\", \"states\")\n      .datum(topojson.object(us, us.objects.states))\n      .attr(\"d\", path);\n\n    points =  svg.selectAll(\".symbol\")\n      .data(centroid.features.sort(function(a, b) { return b.properties.population - a.properties.population; }))\n    .enter().append(\"path\")\n      .attr(\"class\", \"symbol\")\n      .attr(\"d\", path.pointRadius(function(d) { if(d.properties) { return radius(d.properties.population);} else {return;} }))\n      .call(d3.helper.tooltip(\n        function(d, i){\n          return \"<b>\"+d.properties.name + \"</b><br/>pop: \"+d.properties.population;\n        }\n        ));\n};\n\nd3.select(\"#change\").on(\"click\", function() {\n  projection = d3.geo.albers();\n  path.projection(projection);\n  states.transition()\n      .duration(10000)\n      .attr(\"d\", path);\n  points.transition()\n      .duration(3000)\n      .attr(\"d\", path);\n});\n\n\n</script>\n\n", "description": "D3 tutorial V: Adding tooltips", "created_at": "2016-04-07T15:42:17Z", "updated_at": "2016-04-07T15:45:03Z", "api": ["d3.scale.sqrt", "d3.geo.mercator", "d3.geo.path", "d3.select", "d3.helper.tooltip", "d3.geo.albers", "d3.mouse"], "readme": "This example belongs to [the presentation](rveciana.github.com/geoexamples/geoinquiets/d3js/index_en.html) made to the [OSGeo](http://www.osgeo.org/) local group in Barcelona [Geoinquiets](http://www.geoinquiets.cat/)\nThe example is an adaptation from [Mike Bostock](http://bost.ocks.org/mike/)'s [Symbol Map example](http://bl.ocks.org/mbostock/4342045)\n\nForked from <a href='http://bl.ocks.org/rveciana/'>rveciana</a>'s block: <a href='http://bl.ocks.org/rveciana/5181105'>D3 tutorial V: Adding tooltips</a> in order to retrieve relevant gist files via `rawgit`.", "uid": "espinielli_4d17fa15a7a5084e217992f985fba484"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n    circle {\n      opacity: 0.5;\n      fill: yellow\n        ;\n    }\n       \n  </style>\n</head>\n\n<body> \n  <svg>\n\t</svg>\n\n  <script>\n    var width = 960;\n    var height = 500;\n\n    var svg = d3.select('svg');\n    \n    for(var i = 0; i < 80; i++) {\n      span = Math.random() * width;\n      \n      var data = {\n        x: Math.random() * span,\n      \ty: Math.random() * height,\n      \tradius: 2,\n        span: span\n      };\n      \n      // each cicle gets a different span value\n      svg.append('circle')\n      // datum bind a closure of the current variables.\n      \t\t.datum(data);\n    }\n    \n    // new value for width doesn't affect bound data\n    width = 2000000;\n    \n    // the last value from the for loop\n    console.log(data);\n    \n    // mutate the circles' visual appearance\n    svg.selectAll('circle')\n      \t.attr('cx', function(jon) {\n      \t\tconsole.log(jon);\n      \t\treturn jon.x;\n    \t\t})\n      \t.attr('cy', function(d) {\n      \t\treturn d.y;\n    \t\t})\n      \t.attr('r', function(d) {\n      \t\treturn d.radius;\n    \t\t});\n    \n    console.log(d3.selectAll('circle'));\n  </script>\n</body>\n", "description": "Foundations of D3: Data Binding Scope", "created_at": "2016-02-26T03:29:23Z", "updated_at": "2016-02-26T03:29:23Z", "api": ["d3.select", "d3.selectAll"], "readme": "## A Lesson in Binding Data\n\nIn an effort incrementally introduce complexity, data is bound one `datum` at a time with a `for` loop to blend the **declarative/functional** paradigm of D3 and the **imperative/procedural** paradigm of standard Javascript.\n\nIn this example we can see how D3's data binding functions (`data()` and `datum()`) create a closure encapsulating the state of variables at the time the data is bound.\n\n---\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/Jay-Oh-eN/'>Jay-Oh-eN</a>'s block: <a href='http://bl.ocks.org/Jay-Oh-eN/522d3842f27e2581f0d9'>Foundations of D3: Data Binding Scope</a>\n\nforked from <a href='http://bl.ocks.org/margeigh/'>margeigh</a>'s block: <a href='http://bl.ocks.org/margeigh/9d0251925a6bf6409533'>Foundations of D3: Data Binding Scope</a>", "uid": "margeigh_201b1e8e5a25dfcf76d4"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n    circle {\n      opacity: 0.5;\n      fill: #59009d;\n    }\n  </style>\n</head>\n\n<body> \n  <svg>\n\t</svg>\n\n  <script>\n    var width = 960;\n    var height = 500;\n\n    var svg = d3.select('svg');\n    \n    for(var i = 0; i < 1389; i++) {\n      span = Math.random() * width;\n      \n      var data = {\n        x: Math.random() * span,\n      \ty: Math.random() * height,\n      \tradius : Math.random() * 10 + 1,\n        span: span\n      };\n      \n      // each cicle gets a different span value\n      svg.append('circle')\n      // datum bind a closure of the current variables.\n      \t\t.datum(data);\n    }\n    \n    // new value for width doesn't affect bound data\n    width = 2000000;\n    \n    // the last value from the for loop\n    console.log(data);\n    \n    // mutate the circles' visual appearance\n    svg.selectAll('circle')\n      \t.attr('cx', function(jon) {\n      \t\tconsole.log(jon);\n      \t\treturn jon.x;\n    \t\t})\n      \t.attr('cy', function(d) {\n      \t\treturn d.y;\n    \t\t})\n      \t.attr('r', function(d) {\n      \t\treturn d.radius;\n    \t\t});\n    \n    console.log(d3.selectAll('circle'));\n  </script>\n</body>\n", "description": "Foundations of D3: Data Binding Scope", "created_at": "2015-12-09T01:05:50Z", "updated_at": "2015-12-09T20:30:44Z", "api": ["d3.select", "d3.selectAll"], "readme": "## A Lesson in Binding Data\n\nIn an effort incrementally introduce complexity, data is bound one `datum` at a time with a `for` loop to blend the **declarative/functional** paradigm of D3 and the **imperative/procedural** paradigm of standard Javascript.\n\nIn this example we can see how D3's data binding functions (`data()` and `datum()`) create a closure encapsulating the state of variables at the time the data is bound.\n\n---\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "Jay-Oh-eN_522d3842f27e2581f0d9"}, {"code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 Array of Tables Demo</title>\n  <!-- Author: Bo Ericsson, bo@boe.net -->\n  <link rel=stylesheet type=text/css href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/css/bootstrap.min.css\" media=\"all\">\n  <style>\n    body {\n      padding: 10px;\n      font-size: 12px;\n    }\n    .well {\n      padding-top: 0px;\n      padding-bottom: 0px;\n      width: 500px;\n    }\n    table {\n      font-size: 10px;\n      line-height: 10px;\n    }\n    td, th {\n      width: 33.3%;\n    }\n    label {\n      margin-bottom: 10px;\n    }\n  </style>\n<body>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js\"></script>\n<script>\n'use strict';\n\n// title div with label and button\nvar header = d3.select(\"body\").append(\"div\").attr(\"class\", \"well\");\n\nheader.append(\"h3\").text(\"Vaccine Record\");\n\nvar taskLabel = header.append(\"label\")\n    .attr(\"id\", \"taskLabel\")\n    .html(\"&nbsp;\");\n\nvar currTask =1;\nvar taskButton = header.append(\"button\")\n    .attr(\"class\", \"btn btn-primary\")\n    .style(\"margin-bottom\", \"20px\")\n    .style(\"width\", \"100%\")\n    .style(\"text-align\", \"left\")\n    .text(\"Start\")\n    .on(\"click\", function() {\n      this.blur();\n      // execute the task\n      tasks[currTask]();\n      // next task\n      currTask = ++currTask % tasks.length;\n    })\n\n// container for array of tables\nvar tableDiv = d3.select(\"body\").append(\"div\").attr(\"id\", \"tableDiv1\");\n\n// initial data\nvar data;\nvar initialData = [\n  { table: \"At birth\", rows: [\n      { table: \"Hepatitis B #1\", row: \"Jan 1, 2016\", data: \"Jan 1,2016\", status:\"Administered\" }\n    ]\n  },\n  { table: \"Second Month\", rows: [\n      { table: \"DTAP #1\", row: \"March 8, 2016\", data: \"March8, 2016\", status:\"pending\" },\n      { table: \"PCV #1\", row: \"March8, 2016\", data: \"March8, 2016\", status:\"pending\" },\n      { table: \"IPV #1\", row: \"March8, 2016\", data: \"March8, 2016\", status:\"pending\" }\n    ]\n  },\n  { table: \"Fourth Month\", rows: [\n      { table: \"DTAP #2\", row: \"May 18, 2016\", data: \"May 18, 2016\", status:\"pending\" },\n      { table: \"PCV #2\", row: \"May 18, 2016\", data: \"May 18, 2016\", status:\"pending\" },\n      { table: \"IPV #2\", row: \"May 18, 2016\", data: \"May 18, 2016\", status:\"pending\" }\n    ]\n  },\n  { table: \"Sixth to Fifteenth Month\", rows: [\n      { table: \"DTAP #3\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"PCV #3\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"IPV #3\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"MMR #1\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"Varicella\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"PCV #4\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" }\n    ]\n  }\n]\n\n// tasks\nfunction task0() {\n  update([]);\n\n  taskLabel.html(\"Cleared any existing tables\");\n  taskButton.text(\"Next step: Initial load of vaccine tables\");\n}\n\nfunction task1() {\n  data = JSON.parse(JSON.stringify(initialData));\n  update(data);\n\n  taskLabel.text(\"Name: Panace panacea ID: 1234 DOB: Jan 1, 2016  Age: 1 month\");\n  taskButton.text(\"Restart\");\n}\n\n\n\n\n\n// task list\nvar tasks = [task0, task1,];\n\n\n// function in charge of the array of tables (is called from the tasks defined above)\nfunction update(data) {\n\n  // get all divs in the table div \n  var divs = tableDiv.selectAll(\"div\")\n      // after .data() is executed below, divs becomes a d3 update selection\n      //.data(data, function(d) { return d.table }) // key function to disable default by-index evaluation\n      .data(function(d) {\n        return data;\n      }, function(d) { \n      return d.table \n      }) // key function to disable default by-index evaluation\n\n  // for any deleted table, remove its div and contents (by using the exit function of the update selection)\n  //divs.exit().remove();\n\n  // add new div(s); define divsEnter (all new divs), add each div and set id and class\n  var divsEnter = divs.enter().append(\"div\")\n      .attr(\"id\", function(d) { return d.table + \"Div\"; })\n      .attr(\"class\", \"well\")\n\n  // add title h5 in new div(s)\n  divsEnter.append(\"h5\").text(function(d) { return d.table; });\n\n  // add table(s) in new div(s)\n  var tableEnter = divsEnter.append(\"table\")\n      .attr(\"id\", function(d) { return d.table })\n      .attr(\"class\", \"table table-condensed table-striped table-bordered\")\n\n  // append table head in new table(s) in new div(s)\n  tableEnter.append(\"thead\")\n    .append(\"tr\")\n      .selectAll(\"th\")\n      .data([\"VACCINE\", \"DUE DATE\", \"ADMINISTERED ON\", \"STATUS\"])\n    .enter().append(\"th\")\n      .text(function(d) { return d; })\n\n  // append table body in new table(s) in new divs(s)\n  tableEnter.append(\"tbody\");\n\n  // select all tr elements in the divs update selection\n  var tr = divs.select(\"table\").select(\"tbody\").selectAll(\"tr\")\n      .data(function(d, i) { return d.rows; }, function(d) { return d.row }); // again we're using key function to disable by-index evaluation\n\n  // remove rows for missing data items\n  //tr.exit().remove();\n\n  // add rows for new data items\n  tr.enter().append(\"tr\");\n\n  // bind data to table cells\n  var td = tr.selectAll(\"td\")\n      .data(function(d, i) { return d3.values(d); });\n\n  // add new cells\n  td.enter().append(\"td\");\n\n  // update contents of table cells\n  td.text(function(d) { return d; })\n}\n\n\n</script>\n", "description": "D3 Dynamic Array of Tables", "created_at": "2016-04-26T15:45:43Z", "updated_at": "2016-04-26T16:12:33Z", "api": ["d3.select", "d3.values"], "readme": "## D3 Dynamic Array of Tables\n\nDemonstrates the the use of D3 to manage an array of tables. Via a button, the user will cycle through several steps which will mutate the underlying array of arrays, which at each step is fed to the table **update** function. For example, tables are added and removed from the array of tables, individual rows of tables are added and removed, and individual table cells are modified. The **update** function demonstrates the enter, exit and update patterns at the div/table level as well as at the table row level. \n\nFor **bl.ocks.org** users, the script should be viewed in its own window. See the script in action [here](http://bl.ocks.org/boeric/raw/e16ad218bc241dfd2d6e/)\n\nforked from <a href='http://bl.ocks.org/boeric/'>boeric</a>'s block: <a href='http://bl.ocks.org/boeric/e16ad218bc241dfd2d6e'>D3 Dynamic Array of Tables</a>\n\nforked from <a href='http://bl.ocks.org/devssunil/'>devssunil</a>'s block: <a href='http://bl.ocks.org/devssunil/5485fa28d3fdd422930b53ab330f96e3'>D3 Dynamic Array of Tables</a>", "uid": "devssunil_ce488bb628eb9e4468521b001f027a55"}, {"code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <!-- Author: Bo Ericsson -->\n  <title>Real Time Chart</title>\n  <link rel=stylesheet type=text/css href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css\" media=\"all\">\n  <style>\n  .axis text {\n    font: 10px sans-serif;\n  }\n  .chartTitle {\n    font-size: 12px;\n    font-weight: bold;\n    text-anchor: middle; \n  }\n  .axis .title {\n    font-weight: bold;\n    text-anchor: middle;\n  }\n  .axis path,\n  .axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n  }\n  .x.axis path {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n  }\n  .nav .area {\n    fill: lightgrey;\n    stroke-width: 0px;\n  }\n  .nav .line {\n    fill: none;\n    stroke: darkgrey;\n    stroke-width: 1px;\n  }\n  .viewport {\n    stroke: grey;\n    fill: black;\n    fill-opacity: 0.3;\n  }\n  .viewport .extent {\n    fill: green;\n  }\n  .well {\n    padding-top: 0px;\n    padding-bottom: 0px;\n  }\n  </style>\n<body>\n\n<div style=\"max-width: 600px; max-height: 400px; padding: 10px\">\n\n  <div class=\"well\">\n    <h4>D3 Based Real Time Chart \n  </div>\n\n  <div id=\"viewDiv\"></div>\n\n</div>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js\"></script>\n<script src=\"realTimeChart.js\"></script>\n<script>\n'use strict';\n\n// mean and deviation for time interval\nvar meanMs = 1000, // milliseconds\n    dev = 150;\n\n// define time scale\nvar timeScale = d3.scale.linear()\n    .domain([300, 1700])\n    .range([300, 1700])\n    .clamp(true);\n\n// define value scale\nvar valueScale = d3.scale.linear()\n    .domain([0, 1])\n    .range([30, 95]);\n\n// generate initial data\nvar normal = d3.random.normal(1000, 150);\nvar currMs = new Date().getTime() - 300000 - 4000;\nvar data = d3.range(300).map(function(d, i, arr) {\n  var value = valueScale(Math.random()); // random data\n  //var value = Math.round((d % 60) / 60 * 95); // ramp data\n  var interval = Math.round(timeScale(normal()));\n  currMs += interval;\n  var time = new Date(currMs);\n  var obj = { interval: interval, value: value, time: time, ts: currMs }\n  return obj;\n})\n\n// create the real time chart\nvar chart = realTimeChart()\n    .title(\"Chart Title\")\n    .yTitle(\"Y Scale\")\n    .xTitle(\"X Scale\")\n    .border(true)\n    .width(600)\n    .height(290)\n    .barWidth(1)\n    .initialData(data);\n\nconsole.log(\"Version: \", chart.version);\nconsole.dir(\"Dir++\");\nconsole.trace();\nconsole.warn(\"warn\")\n\n// invoke the chart\nvar chartDiv = d3.select(\"#viewDiv\").append(\"div\")\n    .attr(\"id\", \"chartDiv\")\n    .call(chart);\n\n// alternative invocation\n//chart(chartDiv); \n\n\n// drive data into the chart roughly every second\n// in a normal use case, real time data would arrive through the network or some other mechanism\nvar d = 0;\nfunction dataGenerator() {\n\n  var timeout = Math.round(timeScale(normal()));\n\n  setTimeout(function() {\n\n    // create new data item\n    var now = new Date();\n    var obj = {\n      value: valueScale(Math.random()), // random data\n      //value: Math.round((d++ % 60) / 60 * 95), // ramp data\n      time: now,\n      color: \"red\",\n      ts: now.getTime(),\n      interval: timeout\n    };\n\n    // send the datum to the chart\n    chart.datum(obj);\n\n    // do forever\n    dataGenerator();\n\n  }, timeout);\n}\n\n// start the data generator\ndataGenerator();\n\n</script>\n", "description": "D3 Based Real Time Chart", "created_at": "2015-09-27T02:46:29Z", "updated_at": "2015-11-15T21:32:52Z", "api": ["d3.scale.linear", "d3.random.normal", "d3.range", "d3.select", "d3.time.scale", "d3.svg.axis", "d3.svg.area", "d3.svg.line", "d3.svg.brush"], "readme": "## D3 Based Real Time Chart\n\nThe real time chart is a resuable Javascript component that accepts real time data. The chart's time domain is moving with the passage of time, which means that any data placed in the chart eventually will age out and leave the chart. In addition to the main chart, the component also manages a \"focus\" window with a viewport (d3.brush) that can moved and sized to view an arbitrary portion of the time series data. \n\nThe component adheres to the pattern described in [Towards Reusable Chart](http://bost.ocks.org/mike/chart/). \n\nThe following options are currently supported:\n\n- **width** and **height** in pixels (Number)\n- **border** (Boolean)\n- **title**, **xTitle**, **yTitle** (String)\n- **barWidth** in pixels (Number)\n\nFuture options will include:\n\n- **Scale** domain of real time data (currently a domain of [0, 100] is assumed for the y scale)\n- Use of SVG **rects, circles, paths** etc. to represent data (in addition to bars)\n\nUse the component like so:\n\n```\n// create the real time chart\nvar chart = realTimeChart()\n    .title(\"Chart Title\")\n    .yTitle(\"Y Scale\")\n    .xTitle(\"X Scale\")\n    .border(true)\n    .width(600)\n    .height(290)\n    .barWidth(1)\n    .initialData(data);\n\n// invoke the chart\nvar chartDiv = d3.select(\"#viewDiv\").append(\"div\")\n    .attr(\"id\", \"chartDiv\")\n    .call(chart);\n\n// create new data item and inject into chart\nvar now = new Date();\nvar obj = {\n  value: 50\n  time: now,\n  color: \"red\",\n  ts: now.getTime(),\n  interval: timeout\n};\n\n// send the datum to the chart\nchart.datum(obj);\n\n```\n", "uid": "boeric_3b57a788a4b96e1af211"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n  </style>\n</head>\n\n<body>\n  <script>\n    var margin = {top: 20, right: 10, bottom: 20, left: 10};\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar dataset = [ 5, 10, 13, 25];\nvar w = 400;\nvar h = 400;\n    \nd3.xml(\"star1.xml\", \"image/svg+xml\", function(xml) {\t\n  var importedNode = document.importNode(xml.documentElement, true);\n  svg.selectAll(\"g\")\n    .data(dataset)\n    .enter()\n    .append(\"g\")\n    .attr(\"transform\", function(d, i){ \n        return \"translate(\" + (i * (w / dataset.length)) + \",\" \n            + (h - 80) + \")\"\n            +\"scale(\"+ 0.3 +\")\";\n    })\n    .each(function(d, i){ \n    \t//Add new star\n        var star = this.appendChild(importedNode.cloneNode(true)); \n        d3.select(star)\n        \t.select(\".st0\")\n        \t.style(\"fill\", function() {\n        \t\tif (i % 2 == 0) {\n        \t\t\treturn \"blue\";\n        \t\t} else {\n        \t\t\treturn \"red\";\n        \t\t}\n        \t})\n    \t.on(\"click\", function() {\n    \t\tconsole.log(\"Hello There \" + i);\n    \t})\n        \n        \n        \t\n    })\n    .transition()\n    .duration(2000)\n    .attr(\"transform\", function(d, i){ \n        return \"translate(\" + (i * (w / dataset.length)) + \",\" \n            + (h - d*4 - (w / dataset.length)) + \")\"\n            +\"scale(\"+ 0.3 +\")\";\n    });\n\n});\n  </script>\n</body>\n", "description": "Adobe SVG to D3 w/ Mods", "created_at": "2015-10-17T23:21:14Z", "updated_at": "2015-10-17T23:21:30Z", "api": ["d3.select", "d3.xml"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nThis is an example of a graphic created in Adobe Illustrator and imported into a D3 based page. This is a followup of an earlier block \"Adobe SVG to D3\". The earlier block explains more about the mechanics of bringing in a new SVG element.  \n\nThis block creates four copies of the original star graphic SVG and shows how to access each one as if it were a D3 based SVG element. The styling colors are changed and the movement of each is distinct as well as capturing mouse events for each SVG.\n\nThis graphic although simple is a good example of one that you would not want to have to code the path yourself. Very easy to do in Adobe Illustrator but very painfull to get right if you were trying to code it manually. \n", "uid": "jhellier_26fdb3c8ebd5dcb9a143"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  margin: auto;\n  position: relative;\n  width: 960px;\n}\n\ntext {\n  font: 10px sans-serif;\n}\n\nform {\n  position: absolute;\n  right: 10px;\n  top: 10px;\n}\n\n</style>\n<form>\n  <label><input type=\"radio\" name=\"dataset\" value=\"apples\" checked> Apples</label>\n  <label><input type=\"radio\" name=\"dataset\" value=\"oranges\"> Oranges</label>\n</form>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.category20();\n\nvar pie = d3.layout.pie()\n    .value(function(d) { return d.apples; })\n    .sort(null);\n\nvar arc = d3.svg.arc()\n    .innerRadius(radius - 100)\n    .outerRadius(radius - 20);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  var path = svg.datum(data).selectAll(\"path\")\n      .data(pie)\n    .enter().append(\"path\")\n      .attr(\"fill\", function(d, i) { return color(i); })\n      .attr(\"d\", arc);\n\n  d3.selectAll(\"input\")\n      .on(\"change\", change);\n\n  var timeout = setTimeout(function() {\n    d3.select(\"input[value=\\\"oranges\\\"]\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    var value = this.value;\n    clearTimeout(timeout);\n    pie.value(function(d) { return d[value]; }); // change the value function\n    path = path.data(pie); // compute the new angles\n    path.attr(\"d\", arc); // redraw the arcs\n  }\n});\n\nfunction type(d) {\n  d.apples = +d.apples;\n  d.oranges = +d.oranges;\n  return d;\n}\n\n</script>\n", "description": "Pie Chart Update, I", "created_at": "2011-11-07T22:23:54Z", "updated_at": "2016-02-09T00:49:17Z", "api": ["d3.scale.category20", "d3.layout.pie", "d3.svg.arc", "d3.select", "d3.tsv", "d3.selectAll"], "readme": "This variation of a [donut chart](/mbostock/3887193) demonstrates how to update values. Clicking on the radio buttons changes the displayed metric.\n\nNext: [Animation](/mbostock/1346410)", "uid": "mbostock_1346395"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  margin: auto;\n  position: relative;\n  width: 960px;\n}\n\ntext {\n  font: 10px sans-serif;\n}\n\nform {\n  position: absolute;\n  right: 10px;\n  top: 10px;\n}\n\ninput {\n  margin: 0 7px;\n}\n\n</style>\n<form></form>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.category20();\n\nvar pie = d3.layout.pie()\n    .value(function(d) { return d.count; })\n    .sort(null);\n\nvar arc = d3.svg.arc()\n    .innerRadius(radius - 100)\n    .outerRadius(radius - 20);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nvar path = svg.selectAll(\"path\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  var regionsByFruit = d3.nest()\n      .key(function(d) { return d.fruit; })\n      .entries(data);\n\n  var label = d3.select(\"form\").selectAll(\"label\")\n      .data(regionsByFruit)\n    .enter().append(\"label\");\n\n  label.append(\"input\")\n      .attr(\"type\", \"radio\")\n      .attr(\"name\", \"fruit\")\n      .attr(\"value\", function(d) { return d.key; })\n      .on(\"change\", change)\n    .filter(function(d, i) { return !i; })\n      .each(change)\n      .property(\"checked\", true);\n\n  label.append(\"span\")\n      .text(function(d) { return d.key; });\n\n  function change(region) {\n    path = path.data(pie(region.values), function(d) { return d.data.region; });\n    path.enter().append(\"path\").attr(\"fill\", function(d) { return color(d.data.region); });\n    path.exit().remove();\n    path.attr(\"d\", arc);\n  }\n});\n\nfunction type(d) {\n  d.count = +d.count;\n  return d;\n}\n\n</script>\n", "description": "Pie Chart Update, IV", "created_at": "2013-05-30T23:06:16Z", "updated_at": "2016-02-09T02:04:47Z", "api": ["d3.scale.category20", "d3.layout.pie", "d3.svg.arc", "d3.select", "d3.tsv", "d3.nest"], "readme": "This example demonstrates using a data-join with a key function to update a pie chart.\n\nNext: [Animated Data-Join](/mbostock/5682158)<br>\nPrevious: [Missing Data](/mbostock/5681842)\n", "uid": "mbostock_5681974"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.states {\n  fill: #ccc;\n  stroke: #fff;\n}\n</style>\n<body>\n<button type=\"button\" id=\"change\">Change</button>\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v0.min.js\"></script>\n\n<script>\nvar width = 960,\n    height = 500;\nvar states;\nvar projection = d3.geo.mercator()\n    .center([-97,37])\n    .scale(4000 / 2 / Math.PI)\n    .translate([width / 2, height / 2]);\n\n\nvar path = d3.geo.path()\n.projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"/mbostock/raw/4090846/us.json\", function(error, us) {\n   states = svg.append(\"path\")\n      .attr(\"class\", \"states\")\n      .datum(topojson.object(us, us.objects.states))\n      .attr(\"d\", path);\n\n  \n});\n\nd3.select(\"#change\").on(\"click\", function() {\n  projection = d3.geo.albers();\npath.projection(projection);\nstates.transition()\n      .duration(10000)\n      .attr(\"d\", path);\n});\n\n\n</script>\n\n", "description": "D3 tutorial III: Projection transition", "created_at": "2013-03-17T10:45:38Z", "updated_at": "2015-12-15T01:38:58Z", "api": ["d3.geo.mercator", "d3.geo.path", "d3.select", "d3.json", "d3.geo.albers"], "readme": "This example belongs to [the presentation](rveciana.github.com/geoexamples/geoinquiets/d3js/index_en.html) made to the [OSGeo](http://www.osgeo.org/) local group in Barcelona [Geoinquiets](http://www.geoinquiets.cat/)\nThe example is an adaptation from [Mike Bostock](http://bost.ocks.org/mike/)'s [Symbol Map example](http://bl.ocks.org/mbostock/4342045)", "uid": "rveciana_5181026"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.states {\n  fill: #ccc;\n  stroke: #fff;\n}\n\n.symbol {\n  fill: steelblue;\n  fill-opacity: .8;\n  stroke: #fff;\n}\n\n</style>\n<body>\n<button type=\"button\" id=\"change\">Change</button>\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v0.min.js\"></script>\n<script src=\"http://d3js.org/queue.v1.min.js\"></script>\n\n\n<script>\nvar width = 960,\n    height = 500;\nvar states, points;\n\n\nvar radius = d3.scale.sqrt()\n    .domain([0, 1e6])\n    .range([0, 10]);\n\nvar projection = d3.geo.mercator()\n    .center([-97,37])\n    .scale(4000 / 2 / Math.PI)\n    .translate([width / 2, height / 2]);\n\n\nvar path = d3.geo.path()\n.projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nqueue()\n    .defer(d3.json, \"/mbostock/raw/4090846/us.json\")\n    .defer(d3.json, \"/mbostock/raw/3750900/us-state-centroids.json\")\n    .await(ready);\n\n\nfunction ready(error, us, centroid) {\nstates = svg.append(\"path\")\n      .attr(\"class\", \"states\")\n      .datum(topojson.object(us, us.objects.states))\n      .attr(\"d\", path);\n\n    points =  svg.selectAll(\".symbol\")\n      .data(centroid.features.sort(function(a, b) { return b.properties.population - a.properties.population; }))\n    .enter().append(\"path\")\n      .attr(\"class\", \"symbol\")\n      .attr(\"d\", path.pointRadius(function(d) { if(d.properties) { return radius(d.properties.population);} else {return;} }));\n};\n\nd3.select(\"#change\").on(\"click\", function() {\n  projection = d3.geo.albers();\n  path.projection(projection);\n  states.transition()\n      .duration(10000)\n      .attr(\"d\", path);\n  points.transition()\n      .duration(3000)\n      .attr(\"d\", path);\n});\n\n\n</script>\n\n", "description": "D3 tutorial IV: Adding points", "created_at": "2013-03-17T11:10:04Z", "updated_at": "2015-12-15T01:39:01Z", "api": ["d3.scale.sqrt", "d3.geo.mercator", "d3.geo.path", "d3.select", "d3.geo.albers"], "readme": "This example belongs to [the presentation](rveciana.github.com/geoexamples/geoinquiets/d3js/index_en.html) made to the [OSGeo](http://www.osgeo.org/) local group in Barcelona [Geoinquiets](http://www.geoinquiets.cat/)\nThe example is an adaptation from [Mike Bostock](http://bost.ocks.org/mike/)'s [Symbol Map example](http://bl.ocks.org/mbostock/4342045)", "uid": "rveciana_5181095"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\ncircle {\n  fill: rgb(31, 119, 180);\n  fill-opacity: .25;\n  stroke: rgb(31, 119, 180);\n  stroke-width: 1px;\n}\n\n.leaf circle {\n  fill: #ff7f0e;\n  fill-opacity: 1;\n}\n\ntext {\n  font: 10px sans-serif;\n}\n\n</style>\n<body>\n<script src=\"d3.min.js\"></script>\n<script>\n\nvar diameter = 500,\n    format = d3.format(\",d\");\n\nvar pack = d3.layout.pack()\n    .margin(10)\n    .size([diameter - 4, diameter - 4])\n    .value(function(d) { return d.size; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(2,2)\");\n\nd3.json(\"flare.json\", function(error, root) {\n  if (error) throw error;\n\n  var node = svg.datum(root).selectAll(\".node\")\n      .data(pack.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return d.children ? \"node\" : \"leaf node\"; })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"title\")\n      .text(function(d) { return d.name + (d.children ? \"\" : \": \" + format(d.size)); });\n\n  node.append(\"circle\")\n      .attr(\"r\", function(d) { return d.r; });\n\n  node.filter(function(d) { return !d.children; }).append(\"text\")\n      .attr(\"dy\", \".3em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.name.substring(0, d.r / 3); });\n});\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n</script>\n", "description": "D3 pack layout margin demo", "created_at": "2015-08-27T04:00:32Z", "updated_at": "2015-08-27T04:04:50Z", "api": ["d3.format", "d3.layout.pack", "d3.select", "d3.json"], "readme": "", "uid": "larskotthoff_085bb57f710aa417af41"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.bar {\n  fill: steelblue;\n}\n\n.bar:hover {\n  fill: brown;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path {\n  display: none;\n}\n\n</style>\n<body>\n<script src=\"d3.v3.min.js\"></script>\n<script>\n\n// Mike Bostock \"margin conventions\"\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// D3 scales = just math\n// x is a function that transforms from \"domain\" (data) into \"range\" (usual pixels)\n// domain gets set after the data loads\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\n// D3 Axis - renders a d3 scale in SVG\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\n// create an SVG element (appended to body)\n// set size\n// add a \"g\" element (think \"group\")\n// annoying d3 gotcha - the 'svg' variable here is a 'g' element\n// the final line sets the transform on <g>, not on <svg>\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n  .append(\"text\") // just for the title (ticks are automatic)\n    .attr(\"transform\", \"rotate(-90)\") // rotate the text!\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"Frequency\");\n\n// d3.tsv is a wrapper around XMLHTTPRequest, returns array of arrays (?) for a TSV file\n// type function transforms strings to numbers, dates, etc.\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  replay(data);\n});\n\nfunction type(d) {\n  // + coerces to a Number from a String (or anything)\n  d.frequency = +d.frequency;\n  return d;\n}\n\nfunction replay(data) {\n  var slices = [];\n  for (var i = 0; i < data.length; i++) {\n    slices.push(data.slice(0, i+1));\n  }\n  slices.forEach(function(slice, index){\n    setTimeout(function(){\n      draw(slice);\n    }, index * 300);\n  });\n}\n\nfunction draw(data) {\n  // measure the domain (for x, unique letters) (for y [0,maxFrequency])\n  // now the scales are finished and usable\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  // another g element, this time to move the origin to the bottom of the svg element\n  // someSelection.call(thing) is roughly equivalent to thing(someSelection[i])\n  //   for everything in the selection\\\n  // the end result is g populated with text and lines!\n  svg.select('.x.axis').transition().duration(300).call(xAxis);\n\n  // same for yAxis but with more transform and a title\n  svg.select(\".y.axis\").transition().duration(300).call(yAxis)\n\n  // THIS IS THE ACTUAL WORK!\n  var bars = svg.selectAll(\".bar\").data(data, function(d) { return d.letter; }) // (data) is an array/iterable thing, second argument is an ID generator function\n\n  bars.exit()\n    .transition()\n      .duration(300)\n    .attr(\"y\", y(0))\n    .attr(\"height\", height - y(0))\n    .style('fill-opacity', 1e-6)\n    .remove();\n\n  // data that needs DOM = enter() (a set/selection, not an event!)\n  bars.enter().append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"y\", y(0))\n    .attr(\"height\", height - y(0));\n\n  // the \"UPDATE\" set:\n  bars.transition().duration(300).attr(\"x\", function(d) { return x(d.letter); }) // (d) is one item from the data array, x is the scale object from above\n    .attr(\"width\", x.rangeBand()) // constant, so no callback function(d) here\n    .attr(\"y\", function(d) { return y(d.frequency); })\n    .attr(\"height\", function(d) { return height - y(d.frequency); }); // flip the height, because y's domain is bottom up, but SVG renders top down\n\n}\n\n</script>\n", "description": "D3 Bar Chart Update Pattern", "created_at": "2014-08-29T23:07:06Z", "updated_at": "2016-04-21T08:36:44Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This animated bar chart is adapted from [Mike Bostock's sample bar chart](http://bl.ocks.org/mbostock/3885304) to allow redrawing and animated transitions.\n", "uid": "RandomEtc_cff3610e7dd47bef2d01"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Canvas image zoom</title>\n<style>\nbody {\n  position: relative;\n}\n\nsvg,\ncanvas {\n    position: absolute;\n}\n\n.axis text {\n    font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<body>\n<script>\n\nvar imageObj = new Image();\nimageObj.src = \"http://www.html5canvastutorials.com/demos/assets/darth-vader.jpg\";\n\nvar margin = {top: 20, right: 10, bottom: 20, left: 60},\n    width = imageObj.width,\n    height = imageObj.height;\n\nvar ctx;\n\nvar x = d3.scale.linear()\n    .domain([0, imageObj.width])\n    .range([0, width]);\n\n\nvar y = d3.scale.linear()\n    .domain([0, imageObj.height])\n    .range([height, 0]);\n\nvar xmin = x.domain()[0];\nvar xmax = x.domain()[1];\nvar ymin = y.domain()[0];\nvar ymax = y.domain()[1];\n    \nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n    \nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n    \nvar zoom = d3.behavior.zoom()\n        .x(x)\n        .y(y)\n        .scaleExtent([1, 10])\n        .on(\"zoom\", refresh);\n\n// Canvas is drawn first, and then SVG over the top.\nvar canvas = d3.select(\"body\").append(\"canvas\")\n        .attr(\"width\", imageObj.width)\n        .attr(\"height\", imageObj.height)\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        .style(\"left\", margin.left + \"px\")\n        .style(\"top\", margin.top + \"px\")\n        .style(\"width\", width + \"px\")\n        .style(\"height\", height + \"px\")\n        .style(\"position\", \"absolute\")\n        .call(drawImage);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// We make an invisible rectangle to intercept mouse events for zooming.\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .style(\"fill\", \"000\")\n    .style(\"opacity\", 1e-6)\n    .call(zoom);\n\nsvg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .call(removeZero);\n\nsvg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis)\n        .call(removeZero);\n\nfunction drawImage(canvas) {\n    ctx = canvas.node().getContext(\"2d\");\n    ctx.drawImage(imageObj, 0, 0);\n}\n\n// Keep an eye out for \"translateExtent\" or \"xExtent\" methods that may be\n// added at some point to bound the limits of zooming and panning. Until then,\n// this works.\nfunction refresh() {\n    var t = zoom.translate();\n    var s = zoom.scale();\n    var tx = t[0],\n        ty = t[1];\n    var xdom = x.domain();\n    var reset_s = 0;\n    if ((xdom[1] - xdom[0]) >= (xmax - xmin)) {\n        zoom.x(x.domain([xmin, xmax]));\n        xdom = x.domain();\n        reset_s = 1;\n    }\n    var ydom = y.domain();\n    if ((ydom[1] - ydom[0]) >= (ymax - ymin)) {\n        zoom.y(y.domain([ymin, ymax]));\n        ydom = y.domain();\n        reset_s += 1;\n    }\n    if (reset_s == 2) { // Both axes are full resolution. Reset.\n        zoom.scale(1);\n        tx = 0;\n        ty = 0;\n    }\n    else {\n        if (xdom[0] < xmin) {\n            tx = 0;\n            x.domain([xmin, xdom[1] - xdom[0] + xmin]);\n            xdom = x.domain();\n        }\n        if (xdom[1] > xmax) {\n            xdom[0] -= xdom[1] - xmax;\n            tx = -xdom[0]*width/(xmax-xmin)*s;\n            x.domain([xdom[0], xmax]);\n        }\n        if (ydom[0] < ymin) {\n            y.domain([ymin, ydom[1] - ydom[0] + ymin]);\n            ydom = y.domain();\n            ty = -(ymax-ydom[1])*height/(ymax-ymin)*s;\n        }\n        if (ydom[1] > ymax) {\n            ydom[0] -= ydom[1] - ymax;\n            ty = 0;\n            y.domain([ydom[0], ymax]);\n        }\n    }\n    // Reset (possibly) if hit an edge so that next focus event starts correctly.\n    zoom.translate([tx, ty]);\n\n    ctx.drawImage(imageObj, \n        tx*imageObj.width/width, ty*imageObj.height/height,\n        imageObj.width*s, imageObj.height*s);\n    svg.select(\".x.axis\").call(xAxis).call(removeZero);\n    svg.select(\".y.axis\").call(yAxis).call(removeZero);\n}\n\nfunction removeZero(axis) {\n    axis.selectAll(\"g\").filter(function(d) { return !d; }).remove();\n}\n\n</script>\n", "description": "D3 Constrained Zoom Canvas Image", "created_at": "2013-12-19T22:07:12Z", "updated_at": "2016-03-18T23:52:37Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.behavior.zoom", "d3.select"], "readme": "Implements constrained zooming of an image put onto an HTML5 Canvas.", "uid": "tommct_8047063"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  background: #fcfcfa;\n}\n\n.stroke {\n  fill: none;\n  stroke: #000;\n  stroke-width: 3px;\n}\n\n.fill {\n  fill: #fff;\n}\n\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-width: .5px;\n  stroke-opacity: .5;\n}\n\n.land {\n  fill: #222;\n}\n\n.boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 960;\n\nvar projection = d3.geo.azimuthalEquidistant()\n    .scale(150)\n    .translate([width / 2, height / 2])\n    .clipAngle(180 - 1e-3)\n    .precision(.1)\n    .center([-120,35]);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar graticule = d3.geo.graticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"defs\").append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\nsvg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"fill\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\nmapdat = \"http://bl.ocks.org/mbostock/raw/4090846/world-50m.json\"\n\nd3.json(\"http://bl.ocks.org/mbostock/raw/4090846/world-50m.json\", function(error, world) {\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n</script>", "description": "Start of Olympic D3 map hack", "created_at": "2014-02-08T00:09:22Z", "updated_at": "2015-08-29T13:56:10Z", "api": ["d3.geo.azimuthalEquidistant", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.json"], "readme": "This is pretty much just stealing http://bl.ocks.org/mbostock/3757110 which I want to hack to make some visualizations around the black sea (Sochi) region highlighting non-olympic news.", "uid": "mpmckenna8_8874545"}, {"code": "Using d3-tip to add tooltips to a d3 bar chart.\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.bar {\n  fill: orange;\n}\n\n.bar:hover {\n  fill: orangered ;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.d3-tip {\n  line-height: 1;\n  font-weight: bold;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  border-radius: 2px;\n}\n\n/* Creates a small triangle extender for the tooltip */\n.d3-tip:after {\n  box-sizing: border-box;\n  display: inline;\n  font-size: 10px;\n  width: 100%;\n  line-height: 1;\n  color: rgba(0, 0, 0, 0.8);\n  content: \"\\25BC\";\n  position: absolute;\n  text-align: center;\n}\n\n/* Style northward tooltips differently */\n.d3-tip.n:after {\n  margin: -1px 0 0 0;\n  top: 100%;\n  left: 0;\n}\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js\"></script>\n<script>\n\nvar margin = {top: 40, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatPercent = d3.format(\".0%\");\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(formatPercent);\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Frequency:</strong> <span style='color:red'>\" + d.frequency + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>\n", "description": "Using d3-tip to add tooltips to a d3 bar chart", "created_at": "2016-04-04T18:50:08Z", "updated_at": "2016-04-04T18:50:08Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "How to use [d3-tip](https://github.com/caged/d3-tip) with d3's [simple bar chart example](http://bl.ocks.org/mbostock/3885304).\n\n\nforked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>", "uid": "scresawn_3bbeb8116590df58f95ee3db7f728e5e"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js\"></script>\n  <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n</head>\n<body ng-app=\"myApp\" ng-controller=\"MainCtrl\">\n  <donut-chart data=\"donutData1\"></donut-chart>\n  <donut-chart data=\"donutData2\"></donut-chart>\n  <script>\nvar myApp = angular.module('myApp', []);\n \nmyApp.controller('MainCtrl', function($scope){\n  d3.json('donut-data.json', function(err, data){\n    if(err){ throw err; }\n    $scope.donutData1 = data;\n    $scope.$apply();\n  });\n  $scope.donutData2 = [74, 56, 29, 11, 62];\n});\n \nmyApp.directive('donutChart', function(){\n  function link(scope, el, attr){\n    var color = d3.scale.category10();\n    var width = 200;\n    var height = 200;\n    var min = Math.min(width, height);\n    var svg = d3.select(el[0]).append('svg');\n    var pie = d3.layout.pie().sort(null);\n    var arc = d3.svg.arc()\n      .outerRadius(min / 2 * 0.9)\n      .innerRadius(min / 2 * 0.5);\n \n    svg.attr({width: width, height: height});\n \n    // center the donut chart\n    var g = svg.append('g')\n      .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');\n    \n    // add the <path>s for each arc slice\n    var arcs = g.selectAll('path');\n \n    scope.$watch('data', function(data){\n      if(!data){ return; }\n      arcs = arcs.data(pie(data));\n      arcs.exit().remove();\n      arcs.enter().append('path')\n        .style('stroke', 'white')\n        .attr('fill', function(d, i){ return color(i) });\n      // update all the arcs (not just the ones that might have been added)\n      arcs.attr('d', arc);\n    }, true);\n  }\n  return {\n    link: link,\n    restrict: 'E',\n    scope: { data: '=' }\n  };\n});\n  </script>\n</body>\n</html>", "description": "Loading data into Angular, Part III", "created_at": "2014-03-14T19:20:19Z", "updated_at": "2015-08-29T13:57:22Z", "api": ["d3.json", "d3.scale.category10", "d3.select", "d3.layout.pie", "d3.svg.arc"], "readme": "This is a code excerpt from the book, D3 on Angular. http://leanpub.com/d3angularjs", "uid": "vicapow_9554848"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://libs.cartocdn.com/cartodb.js/v2/cartodb.js\"></script>\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\nsvg {\n  padding: 10px 0 0 10px;\n}\n\n.arc {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script>\n\nvar radius = 64,\n    padding = 10;\n\n\nvar first_layer = 'unemploy_annual';\n\nvar sql = new cartodb.SQL({ user: 'wdbassetmap', format: 'json', dp: 5});\n\n// var color = d3.scale.ordinal()\n//     .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar color = d3.scale.linear()\n    .domain([0, 0.03, 0.05, 0.07, 0.10, 0.14, 0.25])\n    .range([\"916D80\",\"B64880\",\"#C83680\", \"#DA2480\", \"#EC1280\", \"#FF0080\", \"red\"])\n    .interpolate(d3.interpolateLab);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius)\n    .innerRadius(radius - 30);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { \n      //return d.val; \n      return 40\n    });\n\nsql.execute(\"SELECT name, jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec FROM {{table_name}}\", {table_name: first_layer})\n  .done(function(collection) {\n  var data = collection.rows;\n\n  // color.domain(d3.keys(data[0]).filter(function(key) { \n  //   return key !== \"name\"; }));\n\n  var months = [];\n  d3.keys(data[0]).forEach(function(v){\n    if (v !== \"name\") months.push(v)\n  });\n\n  data.forEach(function(d) {\n    d.ages = d3.values(months).map(function(name) {\n      //console.log(d, name)\n      return {name: name, val: +d[name]};\n    });\n  });\n\n  var legend = d3.select(\"body\").append(\"svg\")\n      .attr(\"class\", \"legend\")\n      .attr(\"width\", radius * 2)\n      .attr(\"height\", radius * 2)\n    .selectAll(\"g\")\n      .data(color.domain().slice().reverse())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d; });\n\n  var svg = d3.select(\"body\").selectAll(\".pie\")\n      .data(data)\n    .enter().append(\"svg\")\n      .attr(\"class\", \"pie\")\n      .attr(\"width\", radius * 2)\n      .attr(\"height\", radius * 2)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");\n\n  svg.selectAll(\".arc\")\n      .data(function(d) { return pie(d.ages); })\n    .enter().append(\"path\")\n      .attr(\"class\", \"arc\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { \n        return color(d.data.val); });\n\n  svg.append(\"text\")\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.name; });\n\n});\n\n</script>", "description": "Regional breakdowns by month (CartoDB + D3)", "created_at": "2013-01-23T05:29:58Z", "updated_at": "2015-12-11T12:39:00Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.arc", "d3.layout.pie", "d3.keys", "d3.values", "d3.select"], "readme": "", "uid": "andrewxhill_4602320"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js\"></script>\n  <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n</head>\n<body ng-app=\"myApp\" ng-controller=\"MainCtrl\">\n  <donut-chart data=\"data\"></donut-chart>\n  <script>\nvar myApp = angular.module('myApp', []);\n\nmyApp.controller('MainCtrl', function($scope){\n  d3.json('donut-data.json', function(err, data){\n    if(err){ throw err; }\n    $scope.data = data;\n    $scope.$apply();\n  });\n});\n\nmyApp.directive('donutChart', function(){\n  function link(scope, el, attr){\n    var color = d3.scale.category10();\n    var width = 200;\n    var height = 200;\n    var min = Math.min(width, height);\n    var svg = d3.select(el[0]).append('svg');\n    var pie = d3.layout.pie().sort(null);\n    var arc = d3.svg.arc()\n      .outerRadius(min / 2 * 0.9)\n      .innerRadius(min / 2 * 0.5);\n\n    svg.attr({width: width, height: height});\n\n    // center the donut chart\n    var g = svg.append('g')\n      .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');\n    \n    // add the <path>s for each arc slice\n    var arcs = g.selectAll('path');\n\n    scope.$watch('data', function(data){\n      if(!data){ return; }\n      arcs = arcs.data(pie(data));\n      arcs.exit().remove();\n      arcs.enter().append('path')\n        .style('stroke', 'white')\n        .attr('fill', function(d, i){ return color(i) });\n      // update all the arcs (not just the ones that might have been added)\n      arcs.attr('d', arc);\n    }, true);\n  }\n  return {\n    link: link,\n    restrict: 'E',\n    scope: { data: '=' }\n  };\n});\n  </script>\n</body>\n</html>", "description": "Loading data into Angular, Part II", "created_at": "2014-03-13T20:23:44Z", "updated_at": "2015-08-29T13:57:21Z", "api": ["d3.json", "d3.scale.category10", "d3.select", "d3.layout.pie", "d3.svg.arc"], "readme": "This is a code excerpt from the book, D3 on Angular. http://leanpub.com/d3angularjs", "uid": "vicapow_9536234"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-width: .5px;\n  stroke-opacity: .5;\n}\n\n.land {\n  fill: #222;\n}\n\n.boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 960;\n\n    \n\nvar projection = d3.geo.gnomonic()\n    .clipAngle(90 - 1e-3)\n    .scale(150)\n    .translate([width/2, height / 2])\n    .precision(.1)\n    // rotate([yaw, pitch, roll]) or long lat and roll\n    .rotate([100,90,-190])\n  //  .center([-240,20])\n\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar graticule = d3.geo.graticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\nd3.json(\"/mpmckenna8/raw/9965876/world-50m.json\", function(error, world) {\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n\n\n\n\n        d3.selectAll('path')\n        .transition()\n        .duration(5000)\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")scale(\"+.3 + \")translate(\" + -600 + \",\" + -500 + \")\")\n          .style(\"stroke-width\", 4 + \"px\")\n          .style(\"stroke\", \"pink\");\n\n          d3.selectAll('.land')\n            .transition()\n            .delay(6999)\n            .duration(6999)\n            .style(\"fill\",\"lawngreen\");\n\n        d3.selectAll('svg')\n          .on('click', function(){\n            console.log('flip should have changed');\n\n            flip = 1\n            d3.selectAll('path')\n            .transition()\n            .duration(1000)\n            //couldn't get this part to do anything fun like change the zoom to anythin back to 1, click to see\n           .attr(\"transform\", \"translate(\" - width / 2 + \",\" -height / 2 + \")scale(\"+4 +\")\")\n              .style(\"stroke-width\", 4 + \"px\")\n              .style(\"stroke\", \"orange\");\n          })\n\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\nd3.select('svg')\n  .style('background', 'green')\n  .transition()\n  .delay(4000)\n  .duration(3000)\n    .style('background', 'blue')\n\n\n\n\n\n\n</script>", "description": "Basic d3 Animations gnomic south pole", "created_at": "2014-06-06T05:55:07Z", "updated_at": "2015-08-29T14:02:17Z", "api": ["d3.geo.gnomonic", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.json", "d3.selectAll"], "readme": "Experimenting with transformations and d3 geo stuff in general.  I like the way the north pole ", "uid": "mpmckenna8_434839f120c552ad0048"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n\n    <title>Collapsible Tree Example</title>\n\n    <style>\n\n\t.node circle {\n\t  fill: #fff;\n\t  stroke: steelblue;\n\t  stroke-width: 3px;\n\t}\n\n\t.node text { font: 12px sans-serif; }\n\n\t.link {\n\t  fill: none;\n\t  stroke: #ccc;\n\t  stroke-width: 2px;\n\t}\n\t\n    </style>\n\n  </head>\n\n  <body>\n\n<!-- load the d3.js library -->\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\t\n<script>\n\nvar treeData = [\n  {\n    \"name\": \"Top Level\",\n    \"parent\": \"null\",\n    \"children\": [\n      {\n        \"name\": \"Level 2: A\",\n        \"parent\": \"Top Level\",\n        \"children\": [\n          {\n            \"name\": \"Son of A\",\n            \"parent\": \"Level 2: A\"\n          },\n          {\n            \"name\": \"Daughter of A\",\n            \"parent\": \"Level 2: A\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Level 2: B\",\n        \"parent\": \"Top Level\"\n      }\n    ]\n  }\n];\n\n// ************** Generate the tree diagram\t *****************\nvar margin = {top: 40, right: 120, bottom: 20, left: 120},\n\twidth = 960 - margin.right - margin.left,\n\theight = 500 - margin.top - margin.bottom;\n\t\nvar i = 0;\n\nvar tree = d3.layout.tree()\n\t.size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n\t.projection(function(d) { return [d.x, d.y]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.right + margin.left)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nroot = treeData[0];\n  \nupdate(root);\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n\t  links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 100; });\n\n  // Declare the nodes\u2026\n  var node = svg.selectAll(\"g.node\")\n\t  .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter the nodes.\n  var nodeEnter = node.enter().append(\"g\")\n\t  .attr(\"class\", \"node\")\n\t  .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  nodeEnter.append(\"circle\")\n\t  .attr(\"r\", 10)\n\t  .style(\"fill\", \"#fff\");\n\n  nodeEnter.append(\"text\")\n\t  .attr(\"y\", function(d) { \n\t\t  return d.children || d._children ? -18 : 18; })\n\t  .attr(\"dy\", \".35em\")\n\t  .attr(\"text-anchor\", \"middle\")\n\t  .text(function(d) { return d.name; })\n\t  .style(\"fill-opacity\", 1);\n\n  // Declare the links\u2026\n  var link = svg.selectAll(\"path.link\")\n\t  .data(links, function(d) { return d.target.id; });\n\n  // Enter the links.\n  link.enter().insert(\"path\", \"g\")\n\t  .attr(\"class\", \"link\")\n\t  .attr(\"d\", diagonal);\n\n}\n\n</script>\n\t\n  </body>\n</html>\n", "description": "Simple vertical d3.js tree diagram ", "created_at": "2014-01-08T23:42:30Z", "updated_at": "2016-01-18T19:46:00Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select"], "readme": "This is a simple d3.js tree diagram, arranged so that the tree is vertical, as used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is derived from the Mike Bostock [Collapsible tree example](http://bl.ocks.org/mbostock/4339083) but it is a VERY cut down version without the ability to update (collapse).", "uid": "d3noob_8326869"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n \nbody { font: 12px Arial;}\n \npath { \n  stroke: steelblue;\n  stroke-width: 2;\n  fill: none;\n}\n \n.axis path,\n.axis line {\n\tfill: none;\n\tstroke: grey;\n\tstroke-width: 1;\n\tshape-rendering: crispEdges;\n}\n \n</style>\n<body>\n \n<!-- load the d3.js library -->\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n \n<script>\n \n// Set the dimensions of the canvas / graph\nvar\tmargin = {top: 30, right: 20, bottom: 30, left: 50},\n\twidth = 600 - margin.left - margin.right,\n\theight = 270 - margin.top - margin.bottom;\n \n// Parse the date / time\nvar\tparseDate = d3.time.format(\"%d-%b-%y\").parse;\n \n// Set the ranges\nvar\tx = d3.time.scale().range([0, width]);\nvar\ty = d3.scale.linear().range([height, 0]);\n \n// Define the axes\nvar\txAxis = d3.svg.axis().scale(x)\n\t.orient(\"bottom\").ticks(5);\n \nvar\tyAxis = d3.svg.axis().scale(y)\n\t.orient(\"left\").ticks(5);\n \n// Define the line\nvar\tvalueline = d3.svg.line()\n\t.x(function(d) { return x(d.date); })\n\t.y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar\tsvg = d3.select(\"body\")\n\t.append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t.append(\"g\")\n\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n\tdata.forEach(function(d) {\n\t\td.date = parseDate(d.date);\n\t\td.close = +d.close;\n\t});\n \n\t// Scale the range of the data\n\tx.domain(d3.extent(data, function(d) { return d.date; }));\n\ty.domain([0, d3.max(data, function(d) { return d.close; })]);\n \n\t// Add the valueline path.\n\tsvg.append(\"path\")\t\n\t\t.attr(\"class\", \"line\")\n\t\t.attr(\"d\", valueline(data));\n \n\t// Add the X Axis\n\tsvg.append(\"g\")\t\t\n\t\t.attr(\"class\", \"x axis\")\n\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t.call(xAxis);\n \n\t// Add the Y Axis\n\tsvg.append(\"g\")\t\t\n\t\t.attr(\"class\", \"y axis\")\n\t\t.call(yAxis);\n \n});\n \n</script>\n</body>", "description": "Simple line graph in d3.js", "created_at": "2012-12-30T19:02:34Z", "updated_at": "2016-04-25T20:47:55Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a simple line graph designed to allow investigation of aspects of using d3.js and is used as a teaching aid.\n\nIt is the baseline example graph used in the [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks) book.\n\nEdit: June 2014\n\nI am going through a process of updating the code resources for the book and the latest (but not particularly different) example of this graph is [here](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5).", "uid": "d3noob_4414436"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2.5px;\n  shape-rendering: crispEdges;\n}\n .axis line {\n  fill: none;\n  stroke: black;\n  stroke-width: 1.6px;\n}\n\n.axis .minor {\n  stroke: black;\n  stroke-width: 0.4px;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.scale.linear()\n    .domain([0, 1000])\n    .range([0, width]);\n  \n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(5).tickSubdivide(1).tickSize(-60, -20, 0));\n  \n  svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"top\").ticks(5).tickSubdivide(10).tickSize(-60, -30, 0));\n  \n\n</script>", "description": "d3.js major minor tick style 3", "created_at": "2016-02-18T16:23:42Z", "updated_at": "2016-02-18T17:14:02Z", "api": ["d3.scale.linear", "d3.select", "d3.svg.axis"], "readme": "\n\nforked from <a href='http://bl.ocks.org/vjpgo/'>vjpgo</a>'s block: <a href='http://bl.ocks.org/vjpgo/4689130'>d3.js major minor tick style 3</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/60e84ea5cdffa49356e4'>d3.js major minor tick style 3</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/384dd445a6a7ae9f6086'>d3.js major minor tick style 3</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/4384949715de645a77ef'>d3.js major minor tick style 3</a>", "uid": "ashtonburg_40448d691c1cc22dd00b"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.arc text {\n  font: 10px sans-serif;\n  text-anchor: middle;\n}\n\n.arc path {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(0);\n\nvar labelArc = d3.svg.arc()\n    .outerRadius(radius - 40)\n    .innerRadius(radius - 40);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.population; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.csv(\"genes.json\", type, function(error, data) {\n  if (error) throw error;\n\n  var g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.data.age); });\n\n  g.append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + labelArc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.data.age; });\n});\n\nfunction type(d) {\n  d.population = +d.population;\n  return d;\n}\n\n</script>", "description": "final exam question 2", "created_at": "2016-05-05T13:31:50Z", "updated_at": "2016-05-05T13:31:52Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.csv"], "readme": "Without modifying the information in genes.json, use D3 to construct a pie chart that shows the relative fraction of genes in the forward and reverse directions. Your code must dynamically generate the pie chart from the data. In other words, if I modify the genes.json data file, the pie chart must update automatically. (15 points)\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/53fe9d373ca3b3e20632f69c5169a59d'>final exam question 2</a>", "uid": "BrandonStroud_7ce7b3a39db39051cde54e15a4c25c2d"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\npath {\n  fill: #ccc;\n  stroke: #333;\n  stroke-width: 1.5px;\n  transition: fill 250ms linear;\n  transition-delay: 150ms;\n}\n\npath:hover {\n  fill: #999;\n  stroke: #000;\n  transition-delay: 0;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nd3.csv(\"universities_data.csv\", function(data) {\n    data.forEach(function(d) {\n      d.Females = +d.Females;\n      d.Males = +d.Males;\n      d.Total = +d.Total;\n      d.Year = +d.Year;\n    });\n\n    var width = 960,\n        height = 500;\n\n    var outerRadius = height / 2 - 20,\n        innerRadius = outerRadius / 3,\n        cornerRadius = 10;\n\n    var pie = d3.layout.pie()\n        .value(function(d) { return d.Total; })\n        .padAngle(.02);\n\n    var arc = d3.svg.arc()\n        .padRadius(outerRadius)\n        .innerRadius(innerRadius);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n    svg.selectAll(\"path\")\n        .data(pie(data))\n      .enter().append(\"path\")\n        .each(function(d) { d.outerRadius = outerRadius - 20; })\n        .attr(\"d\", arc)\n        .on(\"mouseover\", arcTween(outerRadius, 0))\n        .on(\"mouseout\", arcTween(outerRadius - 20, 150));\n\n    function arcTween(outerRadius, delay) {\n      return function() {\n        d3.select(this).transition().delay(delay).attrTween(\"d\", function(d) {\n          var i = d3.interpolate(d.outerRadius, outerRadius);\n          return function(t) { d.outerRadius = i(t); return arc(d); };\n        });\n      };\n    }\n});\n\n</script>", "description": "Pie layout", "created_at": "2015-05-24T11:23:46Z", "updated_at": "2015-08-29T14:21:48Z", "api": ["d3.csv", "d3.layout.pie", "d3.svg.arc", "d3.select", "d3.interpolate"], "readme": "", "uid": "peterssonjonas_920d9352f2b9fde14e1c"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2.5px;\n  shape-rendering: crispEdges;\n}\n .axis line {\n  fill: none;\n  stroke: green;\n  stroke-width: 1.6px;\n}\n\n.axis .minor {\n  stroke: red;\n  stroke-width: 0.4px;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 1000 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.scale.linear()\n    .domain([0,6000])\n    .range([0, width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickValues(x.domain().filter(function(i) { return (i % 2 ==0); }))\n    .orient(\"bottom\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \n  svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(xAxis);\n\n \n</script>", "description": "d3.js major minor tick style 3", "created_at": "2016-02-18T17:10:13Z", "updated_at": "2016-02-18T17:10:14Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.select"], "readme": "\n\nforked from <a href='http://bl.ocks.org/vjpgo/'>vjpgo</a>'s block: <a href='http://bl.ocks.org/vjpgo/4689130'>d3.js major minor tick style 3</a>", "uid": "zaccagbj_dd67a952700b2f2dcf89"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.bar {\n  fill: steelblue;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.legend line {\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(radius - 100);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.pop; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n\nvar tooltip = svg.append('g')\n    .attr('transform', 'translate(' + 0 + ',' + 0 + ')')\n    .append('text')\n    .attr('text-anchor', 'middle');\n\n    svg\n        .on('mouseover', function() {\n            var d = d3.select(d3.event.target);\n            if (d) d = d.data()[0];\n            if (d && d.data && d.data.Economy) tooltip.text(d.data.Economy + ': ' +\n                d3.format(',')(d.data.pop) + ' (' + (100 * d.data.pop / total).toFixed(1) + '%)');\n        })\n        .on('mouseout', function() {\n            tooltip.text('');\n        })\n\n\nd3.csv(\"pop.csv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.pop = +(d.pop.replace(/\\,/g, '')) * 1000;\n  });\n\n  total = data.reduce(function(mem, d) {\n      return mem + d.pop;\n  }, 0);\n\n  var g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr('title', function(d) { return d.data.Country; })\n      .attr(\"class\", \"arc\");\n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.data.Country); });\n\n  g.append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) {\n          return (d.endAngle - d.startAngle > 0.1) ? d.data.Country : '';\n      });\n\n});\n\n</script>\n", "description": "Country Populations", "created_at": "2012-11-30T23:35:43Z", "updated_at": "2015-10-13T10:07:59Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.format", "d3.csv"], "readme": "[Data from the World Bank](http://data.worldbank.org/data-catalog) ([download](http://databank.worldbank.org/databank/download/POP.csv)). Uses [d3js](http://d3js.org/).", "uid": "tmcw_4179511"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n    circle {\n      opacity: 0.5;\n      fill: yellow\n        ;\n    }\n  </style>\n</head>\n\n<body> \n  <svg>\n\t</svg>\n\n  <script>\n    var width = 960;\n    var height = 500;\n\n    var svg = d3.select('svg');\n    \n    for(var i = 0; i < 80; i++) {\n      span = Math.random() * width;\n      \n      var data = {\n        x: Math.random() * span,\n      \ty: Math.random() * height,\n      \tradius: 2,\n        span: span\n      };\n      \n      // each cicle gets a different span value\n      svg.append('circle')\n      // datum bind a closure of the current variables.\n      \t\t.datum(data);\n    }\n    \n    // new value for width doesn't affect bound data\n    width = 2000000;\n    \n    // the last value from the for loop\n    console.log(data);\n    \n    // mutate the circles' visual appearance\n    svg.selectAll('circle')\n      \t.attr('cx', function(jon) {\n      \t\tconsole.log(jon);\n      \t\treturn jon.x;\n    \t\t})\n      \t.attr('cy', function(d) {\n      \t\treturn d.y;\n    \t\t})\n      \t.attr('r', function(d) {\n      \t\treturn d.radius;\n    \t\t});\n    \n    console.log(d3.selectAll('circle'));\n  </script>\n</body>\n", "description": "Foundations of D3: Data Binding Scope", "created_at": "2016-02-26T03:26:04Z", "updated_at": "2016-02-26T03:26:04Z", "api": ["d3.select", "d3.selectAll"], "readme": "## A Lesson in Binding Data\n\nIn an effort incrementally introduce complexity, data is bound one `datum` at a time with a `for` loop to blend the **declarative/functional** paradigm of D3 and the **imperative/procedural** paradigm of standard Javascript.\n\nIn this example we can see how D3's data binding functions (`data()` and `datum()`) create a closure encapsulating the state of variables at the time the data is bound.\n\n---\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/Jay-Oh-eN/'>Jay-Oh-eN</a>'s block: <a href='http://bl.ocks.org/Jay-Oh-eN/522d3842f27e2581f0d9'>Foundations of D3: Data Binding Scope</a>", "uid": "margeigh_9d0251925a6bf6409533"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n    circle {\n      opacity: 0.5;\n      fill: yellow\n        \n        ;\n    }\n       \n  </style>\n</head>\n\n<body> \n  <svg>\n\t</svg>\n\n  <script>\n    var width = 960;\n    var height = 500;\n\n    var svg = d3.select('svg');\n    \n    for(var i = 0; i < 80; i++) {\n      span = Math.random() * width;\n      \n      var data = {\n        x: Math.random() * span,\n      \ty: Math.random() * height,\n      \tradius: 2,\n        span: span\n      };\n      \n      // each cicle gets a different span value\n      svg.append('circle')\n      \n      // datum bind a closure of the current variables.\n      \t\t.datum(data);\n    }\n    \n    // new value for width doesn't affect bound data\n    width = 2000000;\n    \n    // the last value from the for loop\n    console.log(data);\n    \n    // mutate the circles' visual appearance\n    svg.select('circle')\n      \t.attr('cx', function(jon) {\n      \t\tconsole.log(jon);\n      \t\treturn jon.x;\n    \t\t})\n      \t.attr('cy', function(d) {\n      \t\treturn d.y;\n    \t\t})\n      \t.attr('r', function(d) {\n      \t\treturn d.radius;\n    \t\t})\n    \n    console.log(d3.selectAll('circle'));\n  </script>\n</body>\n", "description": "Foundations of D3: Data Binding Scope", "created_at": "2016-02-26T03:41:33Z", "updated_at": "2016-02-26T03:41:33Z", "api": ["d3.select", "d3.selectAll"], "readme": "## A Lesson in Binding Data\n\nIn an effort incrementally introduce complexity, data is bound one `datum` at a time with a `for` loop to blend the **declarative/functional** paradigm of D3 and the **imperative/procedural** paradigm of standard Javascript.\n\nIn this example we can see how D3's data binding functions (`data()` and `datum()`) create a closure encapsulating the state of variables at the time the data is bound.\n\n---\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/Jay-Oh-eN/'>Jay-Oh-eN</a>'s block: <a href='http://bl.ocks.org/Jay-Oh-eN/522d3842f27e2581f0d9'>Foundations of D3: Data Binding Scope</a>\n\nforked from <a href='http://bl.ocks.org/margeigh/'>margeigh</a>'s block: <a href='http://bl.ocks.org/margeigh/9d0251925a6bf6409533'>Foundations of D3: Data Binding Scope</a>\n\nforked from <a href='http://bl.ocks.org/margeigh/'>margeigh</a>'s block: <a href='http://bl.ocks.org/margeigh/201b1e8e5a25dfcf76d4'>Foundations of D3: Data Binding Scope</a>\n\nforked from <a href='http://bl.ocks.org/margeigh/'>margeigh</a>'s block: <a href='http://bl.ocks.org/margeigh/26b6602160cd14c7e143'>Foundations of D3: Data Binding Scope</a>", "uid": "margeigh_5cc8033ab729fbd9a4c9"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nsvg {\n  font: 10px sans-serif;\n}\n\n.area {\n  fill: steelblue;\n  clip-path: url(#clip);\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n  var margin = { top: 10, right: 10, bottom: 100, left: 40 },\n      margin2 = { top: 430, right: 10, bottom: 20, left: 40 },\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom,\n      height2 = 500 - margin2.top - margin2.bottom;\n\n  var parseDate = d3.time.format(\"%b %Y\").parse;\n\n  var x = d3.time.scale().range([0, width]),\n      x2 = d3.time.scale().range([0, width]),\n      y = d3.scale.linear().range([height, 0]),\n      y2 = d3.scale.linear().range([height2, 0]);\n\n  var xAxis = d3.svg.axis().scale(x).orient(\"bottom\"),\n      xAxis2 = d3.svg.axis().scale(x2).orient(\"bottom\"),\n      yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\n  var brush = d3.svg.brush()\n      .x(x2)\n      .on(\"brush\", brushed);\n\n  var area = d3.svg.area()\n      .interpolate(\"monotone\")\n      .x(function (d) { return x(d.date); })\n      .y0(height)\n      .y1(function (d) { return y(d.price); });\n\n  var area2 = d3.svg.area()\n      .interpolate(\"monotone\")\n      .x(function (d) { return x2(d.date); })\n      .y0(height2)\n      .y1(function (d) { return y2(d.price); });\n\n\n\n  // make some buttons to drive our zoom\n  d3.select(\"body\").append(\"div\")\n    .attr(\"id\",\"btnDiv\")\n    .style('font-size','75%')\n    .style(\"width\",\"250px\")\n    .style(\"position\",\"absolute\")\n    .style(\"left\",\"5%\")\n    .style(\"top\",\"200px\")\n\n  d3.select(\"#btnDiv\")[0][0].innerHTML = [\n    '<h3>Buttons To Drive Our Zoom</h3>',\n    '<p>push a button and watch the brush react</p>',\n    '<ul>',\n    '<li>note: deliberately slowed down so each step can be seen and demonstrate how to inject transition</li>',\n    '<li>also, play with the brush after drawn to see how it acts as if we drew with our mouse</li>',\n    '</ul>'\n  ].join('\\n')\n  \n\n  var btns = d3.select(\"#btnDiv\").selectAll(\"button\").data([2001, 2002, 2003, 2004])\n\n  btns = btns.enter().append(\"button\").style(\"display\",\"inline-block\")\n\n  // fill the buttons with the year from the data assigned to them\n  btns.each(function (d) {\n    this.innerText = d;\n  })\n\n  btns.on(\"click\", drawBrush);\n\n  function drawBrush() {\n    // our year will this.innerText\n    console.log(this.innerText)\n\n    // define our brush extent to be begin and end of the year\n    brush.extent([new Date(this.innerText + '-01-01'), new Date(this.innerText + '-12-31')])\n\n    // now draw the brush to match our extent\n    // use transition to slow it down so we can see what is happening\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush(d3.select(\".brush\").transition());\n\n    // now fire the brushstart, brushmove, and brushend events\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush.event(d3.select(\".brush\").transition().delay(1000))\n  }\n\n\n  var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom);\n\n  svg.append(\"defs\").append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n  var focus = svg.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  var context = svg.append(\"g\")\n      .attr(\"class\", \"context\")\n      .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\n  d3.csv(\"sp500.csv\", type, function (error, data) {\n    x.domain(d3.extent(data.map(function (d) { return d.date; })));\n    y.domain([0, d3.max(data.map(function (d) { return d.price; }))]);\n    x2.domain(x.domain());\n    y2.domain(y.domain());\n\n    focus.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"area\")\n        .attr(\"d\", area);\n\n    focus.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    focus.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n    context.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"area\")\n        .attr(\"d\", area2);\n\n    context.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n        .call(xAxis2);\n\n    context.append(\"g\")\n        .attr(\"class\", \"x brush\")\n        .call(brush)\n      .selectAll(\"rect\")\n        .attr(\"y\", -6)\n        .attr(\"height\", height2 + 7);\n  });\n\n  function brushed() {\n    x.domain(brush.empty() ? x2.domain() : brush.extent());\n    focus.select(\".area\").attr(\"d\", area);\n    focus.select(\".x.axis\").call(xAxis);\n  }\n\n  function type(d) {\n    d.date = parseDate(d.date);\n    d.price = +d.price;\n    return d;\n  }\n\n</script>\n</body>", "description": "demo programmatic control of a d3 brush", "created_at": "2016-02-10T12:44:41Z", "updated_at": "2016-02-10T12:44:42Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.brush", "d3.svg.area", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "# Programmatically Control a d3 brush\nForked from Mike Bostock's [focus+context zoom gist](https://gist.github.com/mbostock/1667367) to demonstrate how we can drive a d3 brush with code.\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>anybody know how to brush with code in <a href=\"https://twitter.com/hashtag/d3js?src=hash\">#d3js</a>?</p>&mdash; klr (@timelyportfolio) <a href=\"https://twitter.com/timelyportfolio/status/509701031585148928\">September 10, 2014</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nSo I found [this discussion](https://groups.google.com/forum/#!topic/d3-js/vNaR-vJ9hMg), but I could not find an example demonstrating the steps proposed by Athan Reines.\n\n<pre>\nFor auto-redraw such that the focus of a 1D brush matches the graphed domain, you need to do as follows:\n\n(1) Apply the brush scale to the graphed domain (i.e., the brush extent) --> store in var brushExtent; (units: pixels)\n(2) Within the brush element (class='brush'), select the <rect> with class='extent'.\n(3) If the brush is horizontal (i.e., for the x-axis), set the 'x' attribute to the first value in brushExtent. This moves the start position of the focus <rect> to match the graphed domain. If the brush is vertical (i.e., for the y-axis), set the 'y' attribute to the second value in brushExtent.\n(4) Next, set the 'width' attribute of the extent to brushExtent[1] - brushExtent[0]. The end of the brush focus is brushExtent[1], but the length of the focus is this minus the offset introduced by brushExtent[0]. (If a y-axis brush, switch [0] and [1]).\n\n(*) The extent should now programmatically match the graphed domain.\n\nI use this procedure as part of a resize function. Hope this works. \n\n-KG\n</pre>\n\nI do not follow the steps exactly.  Here is the code that drives our brush when a button is clicked.\n\n```\n  function drawBrush() {\n    // our year will this.innerText\n    console.log(this.innerText)\n\n    // define our brush extent to be begin and end of the year\n    brush.extent([new Date(this.innerText + '-01-01'), new Date(this.innerText + '-12-31')])\n\n    // now draw the brush to match our extent\n    // use transition to slow it down so we can see what is happening\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush(d3.select(\".brush\").transition());\n\n    // now fire the brushstart, brushmove, and brushend events\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush.event(d3.select(\".brush\").transition().delay(1000))\n  }\n```\n\n<hr/>\n### Original Readme.md\nThis examples demonstrates how to use D3's brush component to implement focus + context zooming. Click and drag in the small chart below to pan or zoom.\n\nforked from <a href='http://bl.ocks.org/timelyportfolio/'>timelyportfolio</a>'s block: <a href='http://bl.ocks.org/timelyportfolio/5c136de85de1c2abb6fc'>demo programmatic control of a d3 brush</a>", "uid": "renecnielsen_6ec52e5a9b88f7ca86ca"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nsvg {\n  font: 10px sans-serif;\n}\n\n.area {\n  fill: steelblue;\n  clip-path: url(#clip);\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n  var margin = { top: 10, right: 10, bottom: 100, left: 40 },\n      margin2 = { top: 430, right: 10, bottom: 20, left: 40 },\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom,\n      height2 = 500 - margin2.top - margin2.bottom;\n\n  var parseDate = d3.time.format(\"%b %Y\").parse;\n\n  var x = d3.time.scale().range([0, width]),\n      x2 = d3.time.scale().range([0, width]),\n      y = d3.scale.linear().range([height, 0]),\n      y2 = d3.scale.linear().range([height2, 0]);\n\n  var xAxis = d3.svg.axis().scale(x).orient(\"bottom\"),\n      xAxis2 = d3.svg.axis().scale(x2).orient(\"bottom\"),\n      yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\n  var brush = d3.svg.brush()\n      .x(x2)\n      .on(\"brush\", brushed);\n\n  var area = d3.svg.area()\n      .interpolate(\"monotone\")\n      .x(function (d) { return x(d.date); })\n      .y0(height)\n      .y1(function (d) { return y(d.price); });\n\n  var area2 = d3.svg.area()\n      .interpolate(\"monotone\")\n      .x(function (d) { return x2(d.date); })\n      .y0(height2)\n      .y1(function (d) { return y2(d.price); });\n\n\n\n  // make some buttons to drive our zoom\n  d3.select(\"body\").append(\"div\")\n    .attr(\"id\",\"btnDiv\")\n    .style('font-size','75%')\n    .style(\"width\",\"250px\")\n    .style(\"position\",\"absolute\")\n    .style(\"left\",\"5%\")\n    .style(\"top\",\"200px\")\n\n  d3.select(\"#btnDiv\")[0][0].innerHTML = [\n    '<h3>Buttons To Drive Our Zoom</h3>',\n    '<p>push a button and watch the brush react</p>',\n    '<ul>',\n    '<li>note: deliberately slowed down so each step can be seen and demonstrate how to inject transition</li>',\n    '<li>also, play with the brush after drawn to see how it acts as if we drew with our mouse</li>',\n    '</ul>'\n  ].join('\\n')\n  \n\n  var btns = d3.select(\"#btnDiv\").selectAll(\"button\").data([2001, 2002, 2003, 2004])\n\n  btns = btns.enter().append(\"button\").style(\"display\",\"inline-block\")\n\n  // fill the buttons with the year from the data assigned to them\n  btns.each(function (d) {\n    this.innerText = d;\n  })\n\n  btns.on(\"click\", drawBrush);\n\n  function drawBrush() {\n    // our year will this.innerText\n    console.log(this.innerText)\n\n    // define our brush extent to be begin and end of the year\n    brush.extent([new Date(this.innerText + '-01-01'), new Date(this.innerText + '-12-31')])\n\n    // now draw the brush to match our extent\n    // use transition to slow it down so we can see what is happening\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush(d3.select(\".brush\").transition());\n\n    // now fire the brushstart, brushmove, and brushend events\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush.event(d3.select(\".brush\").transition().delay(1000))\n  }\n\n\n  var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom);\n\n  svg.append(\"defs\").append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n  var focus = svg.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  var context = svg.append(\"g\")\n      .attr(\"class\", \"context\")\n      .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\n  d3.csv(\"sp500.csv\", type, function (error, data) {\n    x.domain(d3.extent(data.map(function (d) { return d.date; })));\n    y.domain([0, d3.max(data.map(function (d) { return d.price; }))]);\n    x2.domain(x.domain());\n    y2.domain(y.domain());\n\n    focus.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"area\")\n        .attr(\"d\", area);\n\n    focus.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    focus.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n    context.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"area\")\n        .attr(\"d\", area2);\n\n    context.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n        .call(xAxis2);\n\n    context.append(\"g\")\n        .attr(\"class\", \"x brush\")\n        .call(brush)\n      .selectAll(\"rect\")\n        .attr(\"y\", -6)\n        .attr(\"height\", height2 + 7);\n  });\n\n  function brushed() {\n    x.domain(brush.empty() ? x2.domain() : brush.extent());\n    focus.select(\".area\").attr(\"d\", area);\n    focus.select(\".x.axis\").call(xAxis);\n  }\n\n  function type(d) {\n    d.date = parseDate(d.date);\n    d.price = +d.price;\n    return d;\n  }\n\n</script>\n</body>", "description": "demo programmatic control of a d3 brush", "created_at": "2014-09-10T19:06:52Z", "updated_at": "2016-04-26T10:57:54Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.brush", "d3.svg.area", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "# Programmatically Control a d3 brush\nForked from Mike Bostock's [focus+context zoom gist](https://gist.github.com/mbostock/1667367) to demonstrate how we can drive a d3 brush with code.\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>anybody know how to brush with code in <a href=\"https://twitter.com/hashtag/d3js?src=hash\">#d3js</a>?</p>&mdash; klr (@timelyportfolio) <a href=\"https://twitter.com/timelyportfolio/status/509701031585148928\">September 10, 2014</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nSo I found [this discussion](https://groups.google.com/forum/#!topic/d3-js/vNaR-vJ9hMg), but I could not find an example demonstrating the steps proposed by Athan Reines.\n\n<pre>\nFor auto-redraw such that the focus of a 1D brush matches the graphed domain, you need to do as follows:\n\n(1) Apply the brush scale to the graphed domain (i.e., the brush extent) --> store in var brushExtent; (units: pixels)\n(2) Within the brush element (class='brush'), select the <rect> with class='extent'.\n(3) If the brush is horizontal (i.e., for the x-axis), set the 'x' attribute to the first value in brushExtent. This moves the start position of the focus <rect> to match the graphed domain. If the brush is vertical (i.e., for the y-axis), set the 'y' attribute to the second value in brushExtent.\n(4) Next, set the 'width' attribute of the extent to brushExtent[1] - brushExtent[0]. The end of the brush focus is brushExtent[1], but the length of the focus is this minus the offset introduced by brushExtent[0]. (If a y-axis brush, switch [0] and [1]).\n\n(*) The extent should now programmatically match the graphed domain.\n\nI use this procedure as part of a resize function. Hope this works. \n\n-KG\n</pre>\n\nI do not follow the steps exactly.  Here is the code that drives our brush when a button is clicked.\n\n```\n  function drawBrush() {\n    // our year will this.innerText\n    console.log(this.innerText)\n\n    // define our brush extent to be begin and end of the year\n    brush.extent([new Date(this.innerText + '-01-01'), new Date(this.innerText + '-12-31')])\n\n    // now draw the brush to match our extent\n    // use transition to slow it down so we can see what is happening\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush(d3.select(\".brush\").transition());\n\n    // now fire the brushstart, brushmove, and brushend events\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush.event(d3.select(\".brush\").transition().delay(1000))\n  }\n```\n\n<hr/>\n### Original Readme.md\nThis examples demonstrates how to use D3's brush component to implement focus + context zooming. Click and drag in the small chart below to pan or zoom.", "uid": "timelyportfolio_5c136de85de1c2abb6fc"}, {"code": "<!DOCTYPE html>\n\n<head>\n  <title>Difference Chart</title>\n</head>\n<meta charset=\"utf-8\">\n<style>\n\nsvg{\n  background-color: #eee;\n  margin-top: 20px;\n}\n\npath.domain {\n  fill: none;\n}\n\ng.tick > line {\n  stroke: white;\n  stroke-width: 1px;\n}\n\n</style>\n<body>\n<div id=\"viz\"></div>\n</body>\n\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 500,\n    height = 500;\n\nxScale = d3.scale.linear().domain([0,10]).range([40,760]);\nyScale = d3.scale.linear().domain([0,10]).range([60,830]);\n\nsvg = d3.select('#viz')\n    .append('svg')\n    .attr({width: width, height: height});\n\n  svg.append(\"g\").attr(\"class\",\"linechart\");\n\n  linechart = d3.select(\"g.linechart\");\n\nd3.json(\"bush_obama.json\", createLineChart);\n\nfunction createLineChart(data) {\n\n  data.forEach(function(d) {\n    d.b_a = parseInt(d.b_a);\n    d.o_a = parseInt(d.o_a);\n  });\n\n  b_aExtent = d3.extent(data, function(d) {return d.b_a});\n  o_aExtent = d3.extent(data, function(d) {return d.o_a});\n\n  chartExtent = ([Math.min(b_aExtent[0],o_aExtent[0]) - 5, Math.max(b_aExtent[1],o_aExtent[1]) + 5]);\n\n  xScale = d3.scale.linear().domain([data.length, 0]).range([20,480]);\n  yScale = d3.scale.linear().domain(chartExtent).range([480,20]);\n\n  var axis = d3.svg.axis().scale(yScale)\n    .orient(\"right\")\n    .ticks(8)\n    .tickSize(-460)\n    .tickSubdivide(true);\n\n  b_aLine = d3.svg.line().x(function(d,i) {return xScale(i)}).y(function(d) {return yScale(d.b_a)}).interpolate(\"linear\");\n  o_aLine = d3.svg.line().x(function(d,i) {return xScale(i)}).y(function(d) {return yScale(d.o_a)}).interpolate(\"linear\");\n\n  b_aDifference = d3.svg.area().x(function(d,i) {return xScale(i)})\n  .y(function(d) {return yScale(Math.max(d.b_a,d.o_a))})\n  .y0(function(d) {return yScale(d.o_a)})\n  .interpolate(\"linear\");\n  \n  o_aDifference = d3.svg.area().x(function(d,i) {return xScale(i)})\n  .y(function(d) {return yScale(Math.max(d.o_a,d.b_a))})\n  .y0(function(d) {return yScale(d.b_a)})\n  .interpolate(\"linear\");\n\n  linechart.append(\"g\").attr(\"transform\", \"translate(480,0)\").call(axis);\n\n  linechart.append(\"path\")\n  .style(\"fill\", \"green\")\n  .style(\"fill-opacity\", .5)\n  .attr(\"class\", \"difference\")\n  .attr(\"d\", b_aDifference(data))\n\n  linechart.append(\"path\")\n  .style(\"fill\", \"red\")\n  .style(\"fill-opacity\", .5)\n  .attr(\"class\", \"difference\")\n  .attr(\"d\", o_aDifference(data))\n\n  linechart.append(\"path\")\n  .style(\"fill\", \"none\")\n  .style(\"stroke-width\", \"1px\")\n  .style(\"stroke\", \"darkgreen\")\n  .attr(\"class\", \"line\")\n  .attr(\"d\", b_aLine(data))\n\n  linechart.append(\"path\")\n  .style(\"fill\", \"none\")\n  .style(\"stroke-width\", \"1px\")\n  .style(\"stroke\", \"darkred\")\n  .attr(\"class\", \"line\")\n  .attr(\"d\", o_aLine(data))\n}\n\n</script>", "description": "Simple Difference Chart with d3.svg.area", "created_at": "2015-09-08T07:51:33Z", "updated_at": "2015-09-08T07:51:33Z", "api": ["d3.scale.linear", "d3.select", "d3.json", "d3.extent", "d3.svg.axis", "d3.svg.line", "d3.svg.area"], "readme": "A difference chart of presidential approval ratings of the Obama and Bush (43) administrations. Difference charts graphically encode the variance between two time series (typically) coloring the variance to indicate which time series has a higher value during that period. All the examples I've seen of difference charts in D3 use clipping or convoluted mechanisms to create the difference area.\n\nHere's an example that just uses d3.svg.area and defines the y value as the maximum of the two time series points at that position and the y0 value as whichever time series you're using as the baseline. To give the chart the expected outlines, d3.svg.line is used to draw each time series on top of the difference areas.\n\nThis chart was used in my [exploration of figure/ground and metastability in data visualization](http://emeeks.github.io/gestaltdataviz/section4.html).\n\nforked from <a href='http://bl.ocks.org/emeeks/'>emeeks</a>'s block: <a href='http://bl.ocks.org/emeeks/02d6acaed240ba0a504e'>Simple Difference Chart with d3.svg.area</a>", "uid": "renecnielsen_b377db6afcc346d63929"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  margin: auto;\n  position: relative;\n  width: 960px;\n}\n\ntext {\n  font: 10px sans-serif;\n}\n\nform {\n  position: absolute;\n  right: 10px;\n  top: 10px;\n}\n\n</style>\n<form>\n  <label><input type=\"radio\" name=\"dataset\" value=\"apples\" checked> Apples</label>\n  <label><input type=\"radio\" name=\"dataset\" value=\"oranges\"> Oranges</label>\n</form>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\nvar color = d3.scale.category20();\n\nvar pie = d3.layout.pie()\n    .value(function(d) { return d.apples; })\n    .sort(null);\n\nvar arc = d3.svg.arc()\n    .innerRadius(radius - 100)\n    .outerRadius(radius - 20);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  var path = svg.datum(data).selectAll(\"path\")\n      .data(pie)\n    .enter().append(\"path\")\n      .attr(\"fill\", function(d, i) { return color(i); })\n      .attr(\"d\", arc);\n\n  d3.selectAll(\"input\")\n      .on(\"change\", change);\n\n  var timeout = setTimeout(function() {\n    d3.select(\"input[value=\\\"oranges\\\"]\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    var value = this.value;\n    clearTimeout(timeout);\n    pie.value(function(d) { return d[value]; }); // change the value function\n    path = path.data(pie); // compute the new angles\n    path.attr(\"d\", arc); // redraw the arcs\n  }\n});\n\nfunction type(d) {\n  d.apples = +d.apples;\n  d.oranges = +d.oranges;\n  return d;\n}\n\n</script>\n", "description": "Pie Chart Update, I", "created_at": "2016-05-12T18:05:08Z", "updated_at": "2016-05-12T18:05:09Z", "api": ["d3.scale.category20", "d3.layout.pie", "d3.svg.arc", "d3.select", "d3.tsv", "d3.selectAll"], "readme": "This variation of a [donut chart](/mbostock/3887193) demonstrates how to update values. Clicking on the radio buttons changes the displayed metric.\n\nNext: [Animation](/mbostock/1346410)\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1346395'>Pie Chart Update, I</a>", "uid": "scresawn_e8b21fc35bbc9189d031b9fdfb2b9b4c"}, {"code": "<!DOCTYPE html>\n<head>\n<meta charset=\"utf-8\">\n<title>Issues Ratings</title>\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line, \n.axis1 path,\n.axis1 line {\n  fill: none;\n  stroke: #E6E7E8;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path, .x.axis1 path {\n  display: none;\n}\n\n.line {\n  fill: none;\n  stroke-width: 1.5px;\n}\n\n.legend-box {\n  cursor: pointer;  \n}\n\n#mouse-tracker {\n  stroke: #E6E7E8;\n  stroke-width: 1px;\n}\n\n.hover-line { \n  stroke: #E6E7E8;\n  fill: none;\n  stroke-width: 1px;\n  left: 10px;\n  shape-rendering: crispEdges;\n  opacity: 1e-6;\n}\n\n.hover-text {\n  stroke: none;\n  font-size: 30px;\n  font-weight: bold;\n  fill: #000000;\n}\n\n.tooltip {\n  font-weight: normal;\n}\n\n.brush .extent {\n  stroke: #FFF;\n  shape-rendering: crispEdges;\n}\n\n</style>\n</head>\n<body>\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 200, bottom: 100, left: 50},\n    margin2 = { top: 430, right: 10, bottom: 20, left: 40 },\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    height2 = 500 - margin2.top - margin2.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\nvar bisectDate = d3.bisector(function(d) { return d.date; }).left;\n\nvar xScale = d3.time.scale()\n    .range([0, width]),\n\n    xScale2 = d3.time.scale()\n    .range([0, width]); // Duplicate xScale for brushing ref later\n\nvar yScale = d3.scale.linear()\n    .range([height, 0]);\n\n// 40 Custom DDV colors \nvar color = d3.scale.ordinal().range([\"#48A36D\",  \"#56AE7C\",  \"#64B98C\", \"#72C39B\", \"#80CEAA\", \"#80CCB3\", \"#7FC9BD\", \"#7FC7C6\", \"#7EC4CF\", \"#7FBBCF\", \"#7FB1CF\", \"#80A8CE\", \"#809ECE\", \"#8897CE\", \"#8F90CD\", \"#9788CD\", \"#9E81CC\", \"#AA81C5\", \"#B681BE\", \"#C280B7\", \"#CE80B0\", \"#D3779F\", \"#D76D8F\", \"#DC647E\", \"#E05A6D\", \"#E16167\", \"#E26962\", \"#E2705C\", \"#E37756\", \"#E38457\", \"#E39158\", \"#E29D58\", \"#E2AA59\", \"#E0B15B\", \"#DFB95C\", \"#DDC05E\", \"#DBC75F\", \"#E3CF6D\", \"#EAD67C\", \"#F2DE8A\"]);  \n\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\"),\n\n    xAxis2 = d3.svg.axis() // xAxis for brush slider\n    .scale(xScale2)\n    .orient(\"bottom\");    \n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\");  \n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return xScale(d.date); })\n    .y(function(d) { return yScale(d.rating); })\n    .defined(function(d) { return d.rating; });  // Hiding line value defaults of 0 for missing data\n\nvar maxY; // Defined later to update yAxis\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom) //height + margin.top + margin.bottom\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Create invisible rect for mouse tracking\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)                                    \n    .attr(\"x\", 0) \n    .attr(\"y\", 0)\n    .attr(\"id\", \"mouse-tracker\")\n    .style(\"fill\", \"white\"); \n\n//for slider part-----------------------------------------------------------------------------------\n  \nvar context = svg.append(\"g\") // Brushing context box container\n    .attr(\"transform\", \"translate(\" + 0 + \",\" + 410 + \")\")\n    .attr(\"class\", \"context\");\n\n//append clip path for lines plotted, hiding those part out of bounds\nsvg.append(\"defs\")\n  .append(\"clipPath\") \n    .attr(\"id\", \"clip\")\n    .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height); \n\n//end slider part----------------------------------------------------------------------------------- \n\nd3.tsv(\"data.tsv\", function(error, data) { \n  color.domain(d3.keys(data[0]).filter(function(key) { // Set the domain of the color ordinal scale to be all the csv headers except \"date\", matching a color to an issue\n    return key !== \"date\"; \n  }));\n\n  data.forEach(function(d) { // Make every date in the csv data a javascript date object format\n    d.date = parseDate(d.date);\n  });\n\n  var categories = color.domain().map(function(name) { // Nest the data into an array of objects with new keys\n\n    return {\n      name: name, // \"name\": the csv headers except date\n      values: data.map(function(d) { // \"values\": which has an array of the dates and ratings\n        return {\n          date: d.date, \n          rating: +(d[name]),\n          };\n      }),\n      visible: (name === \"Unemployment\" ? true : false) // \"visible\": all false except for economy which is true.\n    };\n  });\n\n  xScale.domain(d3.extent(data, function(d) { return d.date; })); // extent = highest and lowest points, domain is data, range is bouding box\n\n  yScale.domain([0, 100\n    //d3.max(categories, function(c) { return d3.max(c.values, function(v) { return v.rating; }); })\n  ]);\n\n  xScale2.domain(xScale.domain()); // Setting a duplicate xdomain for brushing reference later\n \n //for slider part-----------------------------------------------------------------------------------\n\n var brush = d3.svg.brush()//for slider bar at the bottom\n    .x(xScale2) \n    .on(\"brush\", brushed);\n\n  context.append(\"g\") // Create brushing xAxis\n      .attr(\"class\", \"x axis1\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  var contextArea = d3.svg.area() // Set attributes for area chart in brushing context graph\n    .interpolate(\"monotone\")\n    .x(function(d) { return xScale2(d.date); }) // x is scaled to xScale2\n    .y0(height2) // Bottom line begins at height2 (area chart not inverted) \n    .y1(0); // Top line of area, 0 (area chart not inverted)\n\n  //plot the rect as the bar at the bottom\n  context.append(\"path\") // Path is created using svg.area details\n    .attr(\"class\", \"area\")\n    .attr(\"d\", contextArea(categories[0].values)) // pass first categories data .values to area path generator \n    .attr(\"fill\", \"#F1F1F2\");\n    \n  //append the brush for the selection of subsection  \n  context.append(\"g\")\n    .attr(\"class\", \"x brush\")\n    .call(brush)\n    .selectAll(\"rect\")\n    .attr(\"height\", height2) // Make brush rects same height \n      .attr(\"fill\", \"#E6E7E8\");  \n  //end slider part-----------------------------------------------------------------------------------\n\n  // draw line graph\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"x\", -10)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Issues Rating\");\n\n  var issue = svg.selectAll(\".issue\")\n      .data(categories) // Select nested data and append to new svg group elements\n    .enter().append(\"g\")\n      .attr(\"class\", \"issue\");   \n\n  issue.append(\"path\")\n      .attr(\"class\", \"line\")\n      .style(\"pointer-events\", \"none\") // Stop line interferring with cursor\n      .attr(\"id\", function(d) {\n        return \"line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"); // Give line id of line-(insert issue name, with any spaces replaced with no spaces)\n      })\n      .attr(\"d\", function(d) { \n        return d.visible ? line(d.values) : null; // If array key \"visible\" = true then draw line, if not then don't \n      })\n      .attr(\"clip-path\", \"url(#clip)\")//use clip path to make irrelevant part invisible\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  // draw legend\n  var legendSpace = 450 / categories.length; // 450/number of issues (ex. 40)    \n\n  issue.append(\"rect\")\n      .attr(\"width\", 10)\n      .attr(\"height\", 10)                                    \n      .attr(\"x\", width + (margin.right/3) - 15) \n      .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace) - 8; })  // spacing\n      .attr(\"fill\",function(d) {\n        return d.visible ? color(d.name) : \"#F1F1F2\"; // If array key \"visible\" = true then color rect, if not then make it grey \n      })\n      .attr(\"class\", \"legend-box\")\n\n      .on(\"click\", function(d){ // On click make d.visible \n        d.visible = !d.visible; // If array key for this data selection is \"visible\" = true then make it false, if false then make it true\n\n        maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n        yScale.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n        svg.select(\".y.axis\")\n          .transition()\n          .call(yAxis);   \n\n        issue.select(\"path\")\n          .transition()\n          .attr(\"d\", function(d){\n            return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n          })\n\n        issue.select(\"rect\")\n          .transition()\n          .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\";\n        });\n      })\n\n      .on(\"mouseover\", function(d){\n\n        d3.select(this)\n          .transition()\n          .attr(\"fill\", function(d) { return color(d.name); });\n\n        d3.select(\"#line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"))\n          .transition()\n          .style(\"stroke-width\", 2.5);  \n      })\n\n      .on(\"mouseout\", function(d){\n\n        d3.select(this)\n          .transition()\n          .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\";});\n\n        d3.select(\"#line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"))\n          .transition()\n          .style(\"stroke-width\", 1.5);\n      })\n      \n  issue.append(\"text\")\n      .attr(\"x\", width + (margin.right/3)) \n      .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace); })  // (return (11.25/2 =) 5.625) + i * (5.625) \n      .text(function(d) { return d.name; }); \n\n  // Hover line \n  var hoverLineGroup = svg.append(\"g\") \n            .attr(\"class\", \"hover-line\");\n\n  var hoverLine = hoverLineGroup // Create line with basic attributes\n        .append(\"line\")\n            .attr(\"id\", \"hover-line\")\n            .attr(\"x1\", 10).attr(\"x2\", 10) \n            .attr(\"y1\", 0).attr(\"y2\", height + 10)\n            .style(\"pointer-events\", \"none\") // Stop line interferring with cursor\n            .style(\"opacity\", 1e-6); // Set opacity to zero \n\n  var hoverDate = hoverLineGroup\n        .append('text')\n            .attr(\"class\", \"hover-text\")\n            .attr(\"y\", height - (height-40)) // hover date text position\n            .attr(\"x\", width - 150) // hover date text position\n            .style(\"fill\", \"#E6E7E8\");\n\n  var columnNames = d3.keys(data[0]) //grab the key values from your first data row\n                                     //these are the same as your column names\n                  .slice(1); //remove the first column name (`date`);\n\n  var focus = issue.select(\"g\") // create group elements to house tooltip text\n      .data(columnNames) // bind each column name date to each g element\n    .enter().append(\"g\") //create one <g> for each columnName\n      .attr(\"class\", \"focus\"); \n\n  focus.append(\"text\") // http://stackoverflow.com/questions/22064083/d3-js-multi-series-chart-with-y-value-tracking\n        .attr(\"class\", \"tooltip\")\n        .attr(\"x\", width + 20) // position tooltips  \n        .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace); }); // (return (11.25/2 =) 5.625) + i * (5.625) // position tooltips       \n\n  // Add mouseover events for hover line.\n  d3.select(\"#mouse-tracker\") // select chart plot background rect #mouse-tracker\n  .on(\"mousemove\", mousemove) // on mousemove activate mousemove function defined below\n  .on(\"mouseout\", function() {\n      hoverDate\n          .text(null) // on mouseout remove text for hover date\n\n      d3.select(\"#hover-line\")\n          .style(\"opacity\", 1e-6); // On mouse out making line invisible\n  });\n\n  function mousemove() { \n      var mouse_x = d3.mouse(this)[0]; // Finding mouse x position on rect\n      var graph_x = xScale.invert(mouse_x); // \n\n      //var mouse_y = d3.mouse(this)[1]; // Finding mouse y position on rect\n      //var graph_y = yScale.invert(mouse_y);\n      //console.log(graph_x);\n      \n      var format = d3.time.format('%b %Y'); // Format hover date text to show three letter month and full year\n      \n      hoverDate.text(format(graph_x)); // scale mouse position to xScale date and format it to show month and year\n      \n      d3.select(\"#hover-line\") // select hover-line and changing attributes to mouse position\n          .attr(\"x1\", mouse_x) \n          .attr(\"x2\", mouse_x)\n          .style(\"opacity\", 1); // Making line visible\n\n      // Legend tooltips // http://www.d3noob.org/2014/07/my-favourite-tooltip-method-for-line.html\n\n      var x0 = xScale.invert(d3.mouse(this)[0]), /* d3.mouse(this)[0] returns the x position on the screen of the mouse. xScale.invert function is reversing the process that we use to map the domain (date) to range (position on screen). So it takes the position on the screen and converts it into an equivalent date! */\n      i = bisectDate(data, x0, 1), // use our bisectDate function that we declared earlier to find the index of our data array that is close to the mouse cursor\n      /*It takes our data array and the date corresponding to the position of or mouse cursor and returns the index number of the data array which has a date that is higher than the cursor position.*/\n      d0 = data[i - 1],\n      d1 = data[i],\n      /*d0 is the combination of date and rating that is in the data array at the index to the left of the cursor and d1 is the combination of date and close that is in the data array at the index to the right of the cursor. In other words we now have two variables that know the value and date above and below the date that corresponds to the position of the cursor.*/\n      d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n      /*The final line in this segment declares a new array d that is represents the date and close combination that is closest to the cursor. It is using the magic JavaScript short hand for an if statement that is essentially saying if the distance between the mouse cursor and the date and close combination on the left is greater than the distance between the mouse cursor and the date and close combination on the right then d is an array of the date and close on the right of the cursor (d1). Otherwise d is an array of the date and close on the left of the cursor (d0).*/\n\n      //d is now the data row for the date closest to the mouse position\n\n      focus.select(\"text\").text(function(columnName){\n         //because you didn't explictly set any data on the <text>\n         //elements, each one inherits the data from the focus <g>\n\n         return (d[columnName]);\n      });\n  }; \n\n  //for brusher of the slider bar at the bottom\n  function brushed() {\n\n    xScale.domain(brush.empty() ? xScale2.domain() : brush.extent()); // If brush is empty then reset the Xscale domain to default, if not then make it the brush extent \n\n    svg.select(\".x.axis\") // replot xAxis with transition when brush used\n          .transition()\n          .call(xAxis);\n\n    maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n    yScale.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n    \n    svg.select(\".y.axis\") // Redraw yAxis\n      .transition()\n      .call(yAxis);   \n\n    issue.select(\"path\") // Redraw lines based on brush xAxis scale and domain\n      .transition()\n      .attr(\"d\", function(d){\n          return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n      });\n    \n  };      \n\n}); // End Data callback function\n  \n  function findMaxY(data){  // Define function \"findMaxY\"\n    var maxYValues = data.map(function(d) { \n      if (d.visible){\n        return d3.max(d.values, function(value) { // Return max rating value\n          return value.rating; })\n      }\n    });\n    return d3.max(maxYValues);\n  }\n\n</script>\n</html>", "description": "d3.js Multi-series line chart interactive", "created_at": "2016-02-24T16:16:20Z", "updated_at": "2016-02-24T16:16:20Z", "api": ["d3.time.format", "d3.bisector", "d3.time.scale", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.max", "d3.svg.brush", "d3.svg.area", "d3.mouse"], "readme": "Please note, data will be randomised until December 2014. It is based on Ipsos MORI's long term Issues Index survey 1974 - 2014.  \n\nforked from <a href='http://bl.ocks.org/DStruths/'>DStruths</a>'s block: <a href='http://bl.ocks.org/DStruths/9c042e3a6b66048b5bd4'>d3.js Multi-series line chart interactive</a>", "uid": "renecnielsen_777884b900d913917ec3"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.node {\n  cursor: pointer;\n}\n\n.node circle {\n  fill: #fff;\n  stroke: steelblue;\n  stroke-width: 1.5px;\n}\n\n.node text {\n  font: 10px sans-serif;\n}\n\n.link {\n  fill: none;\n  stroke: #ccc;\n  stroke-width: 1.5px;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 180},\n    width = 960 - margin.right - margin.left,\n    height = 480 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"/ajschumacher/raw/65eda1df2b0dd2cf616f/structure.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"480px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\u2026\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\u2026\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>\n", "description": "Interactive D3 view of sklearn decision tree", "created_at": "2015-12-02T02:24:35Z", "updated_at": "2015-12-02T02:24:36Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "This is Bostock's [interactive Reingold-Tilford Tree](http://bl.ocks.org/mbostock/4339083) with data representing the rules of a simple [sklearn decision tree](http://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier). Click on nodes to expand or collapse.\n\nFor more, see the [complete write-up](http://planspace.org/20151129-see_sklearn_trees_with_d3/).\n\n\nforked from <a href='http://bl.ocks.org/ajschumacher/'>ajschumacher</a>'s block: <a href='http://bl.ocks.org/ajschumacher/65eda1df2b0dd2cf616f'>Interactive D3 view of sklearn decision tree</a>", "uid": "renecnielsen_f11624fe14195cf8a1c5"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n  background: #333;\n}\n\n.arc path {\n  stroke: #fff;\n    stroke-width: 2px;\n}\n\n.arc grid {\n    stroke: #fff;\n    stroke-width: 1;\n    stroke-dasharray: 5,5;\n}\n\n.arc text {\n    fill:#fff;\n    font-size:12px;\n    font-weight:bold;\n}\n\n.arc line {\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2 - 10,\n    numTicks = 5,\n    sdat = [];\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar arc = d3.svg.arc()\n    .outerRadius(function(d) { return 50 + (radius - 50) * d.data.percent / 100; })\n    .innerRadius(20);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { return d.population; });\n\nvar grid = d3.svg.area.radial()\n    .radius(150);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nfor (i=0; i<=numTicks; i++) {\n    sdat[i] = 20 + ((radius/numTicks) * i);\n}\n\nd3.csv(\"data.csv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.population = +d.population;\n    d.percent = d.percent;\n  });\n\n  var g = svg.selectAll(\".arc\")\n      .data(pie(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n    g.append(\"path\")\n        .attr(\"d\", arc)\n        .style(\"fill\", function(d) { return color(d.data.age); });\n\n    g.append(\"text\")\n        .attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; })\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"middle\")\n        .text(function(d) { return d.data.age; });\n\n    addCircleAxes();\n});\n\naddCircleAxes = function() {\n    var circleAxes, i;\n        \n    svg.selectAll('.circle-ticks').remove();\n        \n    circleAxes = svg.selectAll('.circle-ticks')\n      .data(sdat)\n      .enter().append('svg:g')\n      .attr(\"class\", \"circle-ticks\");\n\n    circleAxes.append(\"svg:circle\")\n      .attr(\"r\", String)\n      .attr(\"class\", \"circle\")\n      .style(\"stroke\", \"#CCC\")\n      .style(\"opacity\", 0.5)\n      .style(\"fill\", \"none\");\n\n    circleAxes.append(\"svg:text\")\n      .attr(\"text-anchor\", \"center\")\n      .attr(\"dy\", function(d) { return d - 5 })\n      .style(\"fill\", \"#fff\")\n      .text(function(d,i) { return i * (100/numTicks) });\n\n};\n\n</script>", "description": "D3 Pie charts with grid lines", "created_at": "2012-11-01T14:58:28Z", "updated_at": "2015-10-12T07:48:06Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.svg.area.radial", "d3.select", "d3.csv"], "readme": "", "uid": "mccannf_3994129"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n\t<link href='https://fonts.googleapis.com/css?family=Lato:400,300,700' rel='stylesheet' type='text/css'>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width:100%; height: 100%;}\n    * {font-family:'Lato';}\n    h1 {text-align: center;}\n    #chart {margin: auto; width: 400px}\n    .donut-total {color: #e75544; font: 300 60px 'Lato'; text-align: center; position: absolute; left: 0; right:0; top: 135px;}\n    .desc { color: #1D1D1D; font-size: 18px; display: block;}\n  </style>\n</head>\n\n<body>\n  <h1>Bears</h1>\n  <div id=\"chart\">\n  </div>\n  <script>\n    var data = [\n      {\n        name: 'Average Bears',\n        percentage: 65\n      },\n      {\n        name: 'Less Bears',\n        percentage: 15\n      },\n      {\n        name: 'Lotsa Bears',\n        percentage: 15\n      }\n   ]\n\n    var width  = 400,\n        height = width;\n\n    var chart = d3.select(\"#chart\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + ((width/2)) + \",\" + ((height/2)) + \")\");\n\n    var radius = Math.min(width, height) / 2;\n\n    var color = d3.scale.ordinal()\n      .range([\"#ef5030\", \"#96ccab\", \"#1b374c\"]);\n\n    var arc = d3.svg.arc()\n      .outerRadius(radius)\n      .innerRadius(radius - 100);\n\n    var pie = d3.layout.pie()\n      .sort(null)\n      .startAngle(2.5*Math.PI)\n      .endAngle(4.5*Math.PI)\n      .value(function(d) { return d.percentage; });\n\n    var g = chart.selectAll(\".arc\")\n      .data(pie(data))\n    \t.enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n    g.append(\"path\")\n      .attr(\"fill\", function(d, i) { return color(i); })\n      .transition()\n      .ease(\"exp-ease-in-out\")\n      .duration(1500)\n      .attrTween(\"d\", tweenPie);\n\n    function tweenPie(b) {\n      var i = d3.interpolate({startAngle: 4.5*Math.PI, endAngle: 4.5*Math.PI}, b);\n      return function(t) { return arc(i(t)); };\n    }\n  </script>\n</body>\n", "description": "fresh block", "created_at": "2016-05-16T22:22:43Z", "updated_at": "2016-05-16T22:22:43Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.interpolate"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "thejenbo_23fa4ac201737159924df484bf9b7d29"}, {"code": "<html>\n  <head>\n    <title>Blocks Graph - Readme Mentions</title>\n    <meta charset='utf-8' />\n    <script src='http://d3js.org/d3.v3.min.js'></script>\n    <script src='https://npmcdn.com/babel-core@5.8.34/browser.min.js'></script>\n    <script src='jsLouvain.js'></script>\n  </head>\n    <body>\n      <script>\n/* Make the vis fill the page using CSS. */\nd3.select('body')\n  .style({\n    margin: 0,\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  });\n\nd3.select('body').append('div')\n  .attr('id', 'viz')\n  .style({\n    float: 'left',\n    width: '70%',\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  })\n\nd3.select('body').append('div')\n  .attr('id', 'detail')\n  .style({\n    float: 'right',\n    width: '30%',\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: '70%'\n  }) \n\n// Extract the width and height that was computed by CSS.\nconst vizDiv = document.getElementById('viz');\nconst width = vizDiv.clientWidth;\nconst height = vizDiv.clientHeight;\nconst minSide = d3.min([width, height]);\nconst xOffset = (width - minSide) / 2;\nconst yOffset = (height - minSide) / 2;\n\nconst detailDiv = document.getElementById('detail');\nconst detailHeight = detailDiv.clientHeight;\nconst detailWidth = detailDiv.clientWidth;\n\nconst detailSVG = d3.select(detailDiv)\n  .append('svg')\n  .attr('width', detailDiv.clientWidth)    \n  .attr('height', detailDiv.clientHeight);\n\nlet cardsOnPage = [];\nlet cardsDisplayed = [];\n\nconst nodeHash = {};\n\n// Use the extracted size to set the size of a Canvas element\nd3.select(vizDiv).append('canvas')\n  .attr('width', width)\n  .attr('height', height)\n  .style('position', 'absolute');\n\n// Use the extracted size to set the size of a SVG element\nd3.select(vizDiv).append('svg')\n  .attr('width', width)\n  .attr('height', height)\n  .classed('main', true)\n  .style('position', 'absolute');\n\n\nd3.json('readme-blocks-graph.json', function (error, data) {\n        \tcreateNetwork(error, data);\n        });\n\n// remove thumbnails url data loading for now\n// queue()\n//   .defer(d3.json, 'readme-blocks-graph.json')\n//   .defer(d3.json, 'thumbnailsHash.json')\n//   .await((error, data1, data2) => createNetwork(error, data1, data2));\n\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\nfunction createNetwork(error, graphContainer) {\n  console.log('graphContainer', graphContainer);\n  const nodes = [];\n  const edges = [];\n  const edgelist = graphContainer.graph.edges;\n  const nodelist = graphContainer.graph.nodes;\n\n  edgelist.forEach(edge => {\n    if (!nodeHash[edge.source]) {\n      nodeHash[edge.source] = {\n        id: edge.source,\n        label: edge.source\n      };\n      nodes.push(nodeHash[edge.source]);\n    }\n    if (!nodeHash[edge.target]) {\n      nodeHash[edge.target] = {\n        id: edge.target,\n        label: edge.target\n      };\n      nodes.push(nodeHash[edge.target]);\n    }\n    if (edge /* .weight == 5 */) {\n      edges.push({\n        id: `${nodeHash[edge.source].id}-${nodeHash[edge.target].id}`,\n        source: nodeHash[edge.source],\n        target: nodeHash[edge.target],\n        weight: 1 /* edge.weight */\n      });\n    }\n  });\n\n  // get some attributes from the nodelist (calculated elsewhere)\n  // and store them in the nodeHash\n  nodelist.forEach(node => {\n    if (nodeHash[node.id]) {\n      nodeHash[node.id].user = node.user;\n      nodeHash[node.id].createdAt = node.createdAt;\n      nodeHash[node.id].updatedAt = node.updatedAt;\n      nodeHash[node.id].description = node.description;\n    }\n  });\n\n  // take the attributes now in the nodeHash\n  // and hang them on the nodes (calculated here from the edgelist)\n  nodes.forEach(node => {\n    if (nodeHash[node.id]) {\n      node.user = nodeHash[node.id].user;\n      node.createdAt = nodeHash[node.id].createdAt;\n      node.updatedAt = nodeHash[node.id].updatedAt;\n      node.description = nodeHash[node.id].description;\n    }\n  });\n\n  console.log('nodes', nodes);\n  console.log('edges', edges);\n  console.log('nodeHash', nodeHash);\n\n  createForceNetwork(nodes, edges);\n}\n\nfunction modularityCensus(nodes, edges /* , moduleHash */) {\n  edges.forEach(edge => {\n    if (edge.source.module !== edge.target.module) {\n      edge.border = true;\n    } else {\n      edge.border = false;\n    }\n  });\n  nodes.forEach(node => {\n    const theseEdges = edges.filter(d => d.source === node || d.target === node);\n\n    const theseSourceModules = theseEdges.map(d => d.source.module).filter(onlyUnique);\n    const theseTargetModules = theseEdges.map(d => d.target.module).filter(onlyUnique);\n\n    if (theseSourceModules.length > 1 || theseTargetModules.length > 1) {\n      node.border = true;\n    } else {\n      node.border = false;\n    }\n  });\n}\n\nfunction createForceNetwork(nodes, edges) {\n  // create a network from an edgelist\n  // var colors = d3.scale.ordinal().domain([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]).range(['#996666', '#66CCCC', '#FFFF99', '#CC9999', '#666633', '#993300', '#999966', '#660000', '#996699', '#cc6633', '#ff9966', '#339999', '#6699cc', '#ffcc66', '#ff6600', '#00ccccc']);\n  const colors = d3.scale.category20();\n\n  const nodeData = nodes.map(d => d.id);\n  const edgeData = edges.map(function (d) {\n    return {\n      source: d.source.id,\n      target: d.target.id,\n      weight: 1\n    };\n  });\n\n  console.log('nodeData for jLouvain', nodeData, 'nodes', nodeData.length);\n  console.log('edgeData for jLouvain', edgeData, 'edges', edgeData.length);\n\n  const community = jLouvain().nodes(nodeData).edges(edgeData);\n  const result = community();\n\n  console.log('jLouvain result', result);\n\n  nodes.forEach(node => {\n    node.module = result[node.id];\n    // console.log('node.module', node.module)\n  });\n\n  modularityCensus(nodes, edges, result);\n\n  const force = d3.layout.force().nodes(nodes).links(edges)\n    .size([minSide, minSide]) // make a square  // minSide, minSide\n    .charge(-100)\n    .chargeDistance(100)\n    .linkStrength(2)\n    .linkDistance(1)\n    .gravity(0.07);\n\n  const nodeEnter = d3.select('svg.main').selectAll('g.node')\n    .data(nodes, d => d.id)\n    .enter();\n\n  nodeEnter\n    .append('a')\n      .attr('xlink:href', d => `http://bl.ocks.org/${d.user}/${d.id}`)\n      .attr('target', '_blank')\n      .attr('id', d => d.id)\n      // .attr('target', '_blank')\n    .append('circle')\n      .attr('r', 3)\n      .attr('class', 'foreground')\n      .style('fill', d => colors(d.module))\n      .style('stroke-width', d => {\n        if (d.border) return '3px';\n        return '1px';\n      })\n      .on('mouseover', d => nodeMouseover(d))\n      .on('mouseout', () => nodeMouseout());\n\n      /*\n        // draw labels over nodes\n        nodeEnter.append('text')\n        .style('text-anchor', 'middle')\n        .attr('y', 3)\n        .style('stroke-width', '1px')\n        .style('stroke-opacity', 0.75)\n        .style('stroke', 'white')\n        .style('font-size', '8px')\n        .text(function (d) {return d.id})\n        .style('pointer-events', 'none')\n\n        nodeEnter.append('text')\n        .style('text-anchor', 'middle')\n        .attr('y', 3)\n        .style('font-size', '8px')\n        .text(function (d) {return d.id})\n        .style('pointer-events', 'none')\n      */\n  \n  force.start();\n\n  for (let i = 0; i < 200; i++) {\n    force.tick();\n  }\n\n  // draw the network at each tick\n  // force.on('tick', updateNetwork);\n\n  // after 200 iterations, we say the network \n  // has stabilized and we stop the \n  // force layout physics simulation\n  force.stop();\n\n  // now we draw the network\n  updateNetwork(edges);\n  // drawVoronoiOverlay();\n\n  function updateNetwork(edgesToUpdate) {\n    // // draw the links\n    // d3.select('svg.main').selectAll('line')\n    //   .attr('x1', d => d.source.x)\n    //   .attr('y1', d => d.source.y)\n    //   .attr('x2', d => d.target.x)\n    //   .attr('y2', d => d.target.y)\n    //   .attr('transform', 'translate(' + xOffset + ',' + yOffset +')');\n\n    const context = d3.select('canvas').node().getContext('2d');\n    context.clearRect(0, 0, width, height);\n    context.translate(xOffset, yOffset);\n\n    // draw links (or edges, if you prefer)\n    context.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n    context.beginPath();\n    edgesToUpdate.forEach(d => {\n      context.moveTo(d.source.x, d.source.y);\n      context.lineTo(d.target.x, d.target.y);\n    });\n    context.stroke();\n\n    // draw the nodes\n    d3.select('svg.main').selectAll('circle')\n      .attr('cx', d => d.x)\n      .attr('cy', d => d.y)\n      .attr('transform', `translate(${xOffset}, ${yOffset})`);\n  }\n\n  function drawVoronoiOverlay() {\n    const rawPoints = [];\n    nodes.forEach(d => {\n      rawPoints.push({\n        x: d.x,\n        y: d.y,\n        id: d.id,\n        user: d.user,\n        description: d.description\n      });\n    });\n\n    const voronoi = d3.geom.voronoi();\n\n    voronoi\n      .x(d => d.x)\n      .y(d => d.y)\n      .clipExtent([[-10 - xOffset, -10 - yOffset], [width + 10, height + 10]]);\n\n    voronoiData = voronoi(rawPoints);\n    voronoiData = voronoiData.map(function (d, i) {\n      return {\n        coordinates: d,\n        data: rawPoints[i]\n      };\n    });\n\n    console.log('voronoiData', voronoiData);\n\n    const voronoiPaths = d3.select('svg.main').selectAll('path.voronoi')\n      .data(voronoiData)\n      .enter()\n      .insert('path')\n    .attr('class', 'voronoi')\n      .style('stroke', 'none')\n      .style('stroke-width', '1px')\n      .style('fill', 'white')\n      .style('fill-opacity', 0)\n      .attr('d', d => `M${d.coordinates.join('L')}Z`)\n      .attr('transform', `translate(${xOffset}, ${yOffset})`);\n\n    voronoiPaths\n      .on('mouseover', d => nodeMouseover(d))\n      .on('click', d => nodeClick(d))\n      .on('mouseout', () => nodeMouseout());\n  }\n\n  function nodeMouseover(d) {\n    console.log('nodeHash', nodeHash);\n    // allow nodeMousever to be called in different contexts\n    // either from the node circle or from the Voronoi path\n    let id;\n    let user;\n    let description;\n    const dH = 30;\n    if (typeof d.data === 'undefined') {\n      id = d.id;\n      user = nodeHash[d.id].user;\n      description = nodeHash[d.id].description;\n    }\n    else {\n      id = d.data.id;\n      user = d.data.user;\n      d.data.description;\n    }     \n    const blockUrl = `http://bl.ocks.org/${user}/${id}`\n\n    // generate nice text to display on the small canvas below the thumbnail image\n    let blockTitleText;\n    if (\n      ['undefined', 'null'].indexOf(String(user)) === -1  && \n      ['undefined', 'null'].indexOf(String(description)) === -1\n    ) {\n      blockTitleText = `${user} | ${description}`\n    } \n    if (\n      ['undefined', 'null'].indexOf(String(user)) === -1  && \n      ['undefined', 'null'].indexOf(String(description)) > -1\n    ) {\n      blockTitleText = user;\n    }\n    if (\n      ['undefined', 'null'].indexOf(String(user)) > -1  && \n      ['undefined', 'null'].indexOf(String(description)) === -1\n    ) {\n      blockTitleText = description;\n    }\n    if (\n      ['undefined', 'null'].indexOf(String(user)) > -1  && \n      ['undefined', 'null'].indexOf(String(description)) > -1\n    ) {\n      blockTitleText = '';\n    }\n\n    console.log(blockUrl);\n    console.log(blockTitleText);\n    \n   // const cardDiv = d3.select(detailDiv).append('div')\n   //     .attr('id', `card${id}`)\n   //     .append('a')\n   //     .attr('xlink:href', d => `http://bl.ocks.org/${user}/${id}`)\n   //     .innerHTML(blockTitleText);\n\n    //if (cardsDisplayed.length > 10) {\n    //  d3.selectAll('.cards')\n    //    .attr('transform', `translate(0,${15 * (cardsOnPage.length-1)})`);\n    //}\n\n    // draw a rectangle\n    const detailG = detailSVG.append('a')\n      .attr('xlink:href', blockUrl)\n      .attr('target', '_blank')\n      .attr('id', `card${id}`)\n      .classed('cards', true)\n      .append('rect')\n      //.classed('cards', true)\n      .attr('id', `card${id}`) \n      .attr('x', 0)\n      .attr('y', 5 + dH * cardsOnPage.length)\n      .attr('height', dH)\n      .attr('width', detailDiv.clientWidth)\n      .style('stroke-width', 1)\n      .style('stroke', 'white')\n      .style('fill', 'lightgray')\n      .style('fill-opacity', .4)\n      .attr('rx', 4)\n      .attr('ry', 4);\n    \n    // draw text on the screen\n    detailSVG.append('text')\n      .attr('x', 10)\n      .attr('y', 5 + dH * cardsOnPage.length)\n      .classed('cards', true)\n      .attr('id', `card${id}`)\n      .style('fill', 'black')\n      .style('font-size', '16px')\n      .attr('dy', '20px')\n      .attr('text-anchor', 'start')\n      .style('pointer-events', 'none')\n      .text(blockTitleText);\n\n    console.log('cardsOnPage', cardsOnPage);\n    console.log('cardsOnPage.length', cardsOnPage.length);\n    if (false/*cardsDisplayed.length > 10*/) {\n      const lastCardId = cardsOnPage[cardsOnPage.length - 1];\n      const firstCardId = cardsOnPage[0];\n\n      const cardSelector = `div#card${firstCardId}`.replace(/[,.]/g, '');\n      d3.select(cardSelector)\n        .remove();\n\n      // d3.selectAll('.cards')\n      //   .attr('transform', `translate(0,-15)`);\n\n      //cardsOnPage.pop();\n      cardsOnPage.shift();\n      //if(cardsOnPage.indexOf(id) > -1) cardsOnPage = removeByValue(cardsOnPage, id);\n    }\n\n    cardsOnPage.push(id);\n    cardsDisplayed.push(id);\n\n    d3.select(vizDiv).select('svg').append('text')\n      .attr('x', 100)\n      .attr('y', 100)\n      .classed('titleText', true)\n      .style('fill', 'black')\n      .style('fill-opacity', 0.8)\n      .style('font-size', '60px')\n      .style('font-weight', 600)\n      .attr('dy', '0px')\n      .attr('text-anchor', 'start')\n      .style('pointer-events', 'none')\n      .text(blockTitleText);\n  }\n\n  function nodeMouseout() {\n    d3.selectAll('.titleText')\n      .remove();\n  }\n\n  // http://stackoverflow.com/a/11223909/1732222\n  function ImageExist(url) \n  {\n     var img = new Image();\n     img.src = url;\n     return img.height != 0;\n  }\n\n  // http://stackoverflow.com/a/3955096/1732222\n  function removeByValue(arr) {\n    var what, a = arguments, L = a.length, ax;\n    while (L > 1 && arr.length) {\n        what = a[--L];\n        while ((ax= arr.indexOf(what)) !== -1) {\n            arr.splice(ax, 1);\n        }\n    }\n    return arr;\n  }\n\n  function nodeClick(d) {\n    const user = d.data.user;\n    const id = d.data.id;\n    const blockUrl = `http://bl.ocks.org/${user}/${id}`\n    openInNewTab(blockUrl);\n  }\n\n  // http://stackoverflow.com/a/11384018/1732222\n  function openInNewTab(url) {\n    const win = window.open(url, '_blank');\n    win.focus();\n  }\n}\n    </script>\n  </body>\n</html>", "description": "Blocks Graph IV - d3.oakland talk", "created_at": "2016-05-11T07:10:39Z", "updated_at": "2016-05-11T17:36:24Z", "api": ["d3.select", "d3.min", "d3.json", "d3.scale.ordinal", "d3.scale.category20", "d3.layout.force", "d3.geom.voronoi", "d3.selectAll"], "readme": "an updated look at `README.md` files from [bl.ocks.org](http://bl.ocks.org/) that contain links to other bl.ocks. These data gathered in early May 2016.\n\nclick on a node to view that bl.ock  \n\ncommunity detection done with the [jLouvain](https://github.com/upphiminn/jLouvain) library\n\nsource data and scripts used to generate the graph data are at [this repository](https://github.com/micahstubbs/readme-vis)\n\na lineage of bl.ocks that informed this idea:\n\n* [Adding links to objects](http://bl.ocks.org/d3noob/8150631) from [d3noob](http://bl.ocks.org/d3noob)\n* [Canvas Links + SVG Nodes](http://bl.ocks.org/micahstubbs/5246b8a643393f0753a11b98129a3237) from [micahstubbs](http://bl.ocks.org/micahstubbs)\n* [Blocks Graph I Readme Mentions](http://bl.ocks.org/micahstubbs/8a173cfcb9171627c7f1) from [micahstubbs](http://bl.ocks.org/micahstubbs)\n* [all the blocks](http://bl.ocks.org/enjalot/6ac67b0d8ed673c9aa61) from [enjalot](http://bl.ocks.org/enjalot)\n* [Networks - Graphs 7](http://bl.ocks.org/emeeks/f2f6883ac7c965d09b90) from [emeeks](http://bl.ocks.org/emeeks)\n* [Blocks Graph](http://bl.ocks.org/curran/1da93bab4cdc708f41ae) from [curran](http://bl.ocks.org/curran)\n* [Blocks Graph Edges Only](http://bl.ocks.org/curran/daf6bc9db8b0a28e3973) from [curran](http://bl.ocks.org/curran)\n* [Blocks Graph with Links](http://bl.ocks.org/curran/be4a45ec74357e7d9b10) from [curran](http://bl.ocks.org/curran)\n* [Dynamic Size](http://bl.ocks.org/curran/db1e524cae5e4344b2e6) from [curran](http://bl.ocks.org/curran)\n* [Ch. 11, Fig. 10 - D3.js in Action](http://bl.ocks.org/emeeks/e330141d1279c6115a3a) from [emeeks](http://bl.ocks.org/emeeks)\n\n\n", "uid": "micahstubbs_948378950dd7b3e31e8cda3b33ebbcc8"}, {"code": "<!doctype html>\n\n<html>\n  <style>\n    line {\n      cursor: -webkit-grab;\n    }\n  </style>\n  <body>\n   <div id=\"chart\"></div>\n  <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n  <script>\n\n d3.json(\"genes.json\", function(error, json) {if (error) return       console.warn(error);\n    var myData = json;\n\tconsole.log(myData);\n//Object that stores gene directions\n\tvar directiontally = {forwardtally:0,backtally:0};\n//For loop for retrieving/tallying gene direction\n\tfor(i=0;i<myData[0].genes.length;i++){\n  \tif(myData[0].genes[i].direction == \"reverse\"){\n    \tdirectiontally.backtally++;\n  \t}\n  \telse{\n   \t directiontally.forwardtally++;\n  \t}\n\t}\nconsole.log(directiontally);\nvar w = 400;\nvar h = 400;\nvar r = h/2;\nvar color = d3.scale.category20c();\n var vis = d3.select('#chart').append(\"svg:svg\").data(directiontally).attr(\"width\", w).attr(\"height\", h).append(\"svg:g\").attr(\"transform\", \"translate(\" + r + \",\" + r + \")\");\nvar pie = d3.layout.pie().value(function(d){return d.backtally;});\n\n// declare an arc generator function\nvar arc = d3.svg.arc().outerRadius(r);\n\n// select paths, use arc generator to draw\nvar arcs = vis.selectAll(\"g.slice\").data(pie).enter().append(\"svg:g\").attr(\"class\", \"slice\");\narcs.append(\"svg:path\")\n    .attr(\"fill\", function(d, i){\n        return color(\"black\");\n    })\n    .attr(\"d\", function (d) {\n        // log the result of the arc generator to show how cool it is :)\n        console.log(arc(d));\n        return arc(d);\n    });})\n    </script>\n", "description": "final exam question 2", "created_at": "2016-05-05T13:04:14Z", "updated_at": "2016-05-05T14:07:54Z", "api": ["d3.json", "d3.scale.category20c", "d3.select", "d3.layout.pie", "d3.svg.arc"], "readme": "Without modifying the information in genes.json, use D3 to construct a pie chart that shows the relative fraction of genes in the forward and reverse directions. Your code must dynamically generate the pie chart from the data. In other words, if I modify the genes.json data file, the pie chart must update automatically. (15 points)\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/53fe9d373ca3b3e20632f69c5169a59d'>final exam question 2</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/0e47490515380fe464762d02a8550f6e'>final exam question 2</a>", "uid": "Wanagram_25b5c971f841abdd8ab9e7af2ea653e3"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://libs.cartocdn.com/cartodb.js/v2/cartodb.js\"></script>\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\nsvg {\n  padding: 10px 0 0 10px;\n}\n\n.arc {\n}\n\n</style>\n<body>\n<script>\n\nvar radius = 48,\n    padding = 10;\n\n\nvar first_layer = 'unemploy_annual';\n\nvar sql = new cartodb.SQL({ user: 'wdbassetmap', format: 'json', dp: 5});\n\n// var color = d3.scale.ordinal()\n//     .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar color = d3.scale.linear()\n    .domain([0, 0.03, 0.05, 0.07, 0.10, 0.14, 0.25])\n    .range([\"916D80\",\"B64880\",\"#C83680\", \"#DA2480\", \"#EC1280\", \"#FF0080\", \"red\"])\n    .interpolate(d3.interpolateLab);\n\nvar arc = d3.svg.arc()\n    .outerRadius(radius)\n    .innerRadius(radius - 24);\n\nvar pie = d3.layout.pie()\n    .sort(null)\n    .value(function(d) { \n      //return d.val; \n      return 40\n    });\n\nsql.execute(\"SELECT name, jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec FROM {{table_name}}\", {table_name: first_layer})\n  .done(function(collection) {\n  var data = collection.rows;\n\n  // color.domain(d3.keys(data[0]).filter(function(key) { \n  //   return key !== \"name\"; }));\n\n  var months = [];\n  d3.keys(data[0]).forEach(function(v){\n    if (v !== \"name\") {\n        months.push(v);\n    }\n  });\n\n  data.forEach(function(d) {\n    d.ages = d3.values(months).map(function(name) {\n      //console.log(d, name)\n      return {name: name, val: +d[name]};\n    });\n  });\n\n  var legend = d3.select(\"body\").append(\"svg\")\n      .attr(\"class\", \"legend\")\n      .attr(\"width\", radius * 2)\n      .attr(\"height\", radius * 2)\n    .selectAll(\"g\")\n      .data(color.domain().slice().reverse())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 14 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"width\", 12)\n      .attr(\"height\", 12)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", 18)\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d; });\n\n  var svg = d3.select(\"body\").selectAll(\".pie\")\n      .data(data)\n    .enter().append(\"svg\")\n      .attr(\"class\", \"pie\")\n      .attr(\"width\", radius * 2)\n      .attr(\"height\", radius * 2)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");\n\n  svg.selectAll(\".arc\")\n      .data(function(d) { return pie(d.ages); })\n    .enter().append(\"path\")\n      .attr(\"class\", \"arc\")\n      .attr(\"d\", arc)\n      .style(\"stroke\", \"#fff\")\n      .style(\"fill\", function(d) { \n        return color(d.data.val); })\n      .on(\"mouseover\", function() {\n        d3.select(this)\n          .style('stroke', d3.select(this).style(\"fill\"));\n      })\n      .on(\"mouseout\", function() {\n        d3.select(this)\n          .style('stroke', \"#fff\")\n      })\n      .append(\"svg:title\")\n        .text(function(d) { \n          var label = d.data.name + \": \" + d.data.val; \n          return label.charAt(0).toUpperCase() + label.slice(1);\n        })\n\n  svg.append(\"text\")\n      .attr(\"dy\", \".284em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.name; });\n\n});\n\n</script>", "description": "Regional breakdowns by month (CartoDB + D3)", "created_at": "2013-01-23T19:32:02Z", "updated_at": "2015-12-11T14:08:53Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.arc", "d3.layout.pie", "d3.keys", "d3.values", "d3.select"], "readme": "", "uid": "andrewxhill_4611969"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>Input text with D3</title> <!-- adapted from http://javadude.wordpress.com/2012/05/17/d3-js-with-dynamic-data/ -->\n    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/d3/3.4.2/d3.js\"></script>\n\n    <style>\n        body {font-family: monospace; line-height: 160%; font-size: 18px; }\n        ul {list-style: none; margin: 0; padding: 0;}\n        li {display: inline-block; min-width: 80px; padding: 10px; background-color: #eee; margin: 0;}\n        input {border: 1px dotted #ccc; background: white; font-family: monospace; padding: 10px 20px; font-size: 18px; margin: 20px 10px 20px 0; color: red;}\n        input:focus { background-color:yellow; outline: none;}\n    </style>\n</head>\n    <body>\n\n        <form name=\"myform\" onSubmit=\"return handleClick()\">\n            <input name=\"Submit\"  type=\"submit\" value=\"Add to list\" >\n            <input type=\"text\" id=\"myVal\" placeholder=\"Add some text&hellip;\">\n        </form>\n\n        <ul></ul>\n \n        <script>\n \n            var dataset = [];\n \n \n            function handleClick(event){\n                console.log(document.getElementById(\"myVal\").value)\n                draw(document.getElementById(\"myVal\").value)\n                return false;\n            }\n \n            function draw(val){\n                d3.select(\"body\").select(\"ul\").append(\"li\");\n                dataset.push(val);\n                var p = d3.select(\"body\").selectAll(\"li\")\n                .data(dataset)\n                .text(function(d,i){return i + \": \" + d;})\n            }\n \n        </script>\n\n\n    </body>\n</html>\n", "description": "Input field dynamic text with D3", "created_at": "2014-04-01T08:44:34Z", "updated_at": "2015-08-29T13:57:58Z", "api": ["d3.select"], "readme": "### Aim\nPull in dynamic data into a d3 visualisation via input box\n\n### Info and sources\nAdapted from [d3.js with Dynamic Data tutorial](http://javadude.wordpress.com/2012/05/17/d3-js-with-dynamic-data/)\n", "uid": "eesur_9910343"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.paths--straight {\n  fill: none;\n  stroke: #777;\n}\n\n.paths--round {\n  fill: #ccc;\n  stroke: #000;\n  stroke-width: 1.5px;\n  stroke-linejoin: round;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar data = [1, 1, 2, 3, 5, 8, 13, 21];\n\nvar width = 960,\n    height = 500,\n    outerRadius = height / 2 - 30,\n    innerRadius = outerRadius / 3;\n\nvar pie = d3.layout.pie()\n    .padAngle(.03);\n\nvar arc = d3.svg.arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nvar straightPath = svg.append(\"g\")\n    .attr(\"class\", \"paths--straight\")\n  .selectAll(\"path\")\n    .data(data)\n  .enter().append(\"path\");\n\nvar roundPath = svg.append(\"g\")\n    .attr(\"class\", \"paths--round\")\n  .selectAll(\"path\")\n    .data(data)\n  .enter().append(\"path\");\n\nvar ease = d3.ease(\"cubic-in-out\"),\n    duration = 2500;\n\nd3.timer(function(elapsed) {\n  var t = ease(1 - Math.abs((elapsed % duration) / duration - .5) * 2),\n      arcs = pie(data);\n\n  straightPath.data(arcs).attr(\"d\", arc.cornerRadius(0));\n  roundPath.data(arcs).attr(\"d\", arc.cornerRadius((outerRadius - innerRadius) / 2 * t));\n});\n\n</script>\n", "description": "Arc Corners III", "created_at": "2014-11-20T03:34:13Z", "updated_at": "2016-02-09T01:52:09Z", "api": ["d3.layout.pie", "d3.svg.arc", "d3.select", "d3.ease", "d3.timer"], "readme": "", "uid": "mbostock_b7671cb38efdfa5da3af"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\npath {\n  fill: #ccc;\n  stroke: #333;\n  stroke-width: 1.5px;\n  transition: fill 250ms linear;\n  transition-delay: 150ms;\n}\n\npath:hover {\n  fill: #999;\n  stroke: #000;\n  transition-delay: 0;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar data = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89];\n\nvar width = 960,\n    height = 500;\n\nvar outerRadius = height / 2 - 20,\n    innerRadius = outerRadius / 3,\n    cornerRadius = 10;\n\nvar pie = d3.layout.pie()\n    .padAngle(.02);\n\nvar arc = d3.svg.arc()\n    .padRadius(outerRadius)\n    .innerRadius(innerRadius);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nsvg.selectAll(\"path\")\n    .data(pie(data))\n  .enter().append(\"path\")\n    .each(function(d) { d.outerRadius = outerRadius - 20; })\n    .attr(\"d\", arc)\n    .on(\"mouseover\", arcTween(outerRadius, 0))\n    .on(\"mouseout\", arcTween(outerRadius - 20, 150));\n\nfunction arcTween(outerRadius, delay) {\n  return function() {\n    d3.select(this).transition().delay(delay).attrTween(\"d\", function(d) {\n      var i = d3.interpolate(d.outerRadius, outerRadius);\n      return function(t) { d.outerRadius = i(t); return arc(d); };\n    });\n  };\n}\n\n</script>\n", "description": "Extending Arcs", "created_at": "2014-12-01T19:49:51Z", "updated_at": "2016-02-09T01:52:01Z", "api": ["d3.layout.pie", "d3.svg.arc", "d3.select", "d3.interpolate"], "readme": "On hover, these arcs extend outward slightly and darken. Increasing the outer radius of the hovered arc temporarily exaggerates its area, but is useful for emphasis.\n\nNote that the padding between adjacent arcs remains constant when arcs extend or contract. This is achieved by specifying an explicit arc.padRadius that is the same for all arcs, rather than relying on the default behavior which depends on the arc\u2019s inner and outer radii.\n", "uid": "mbostock_32bd93b1cc0fbccc9bf9"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://code.jquery.com/jquery-2.1.4.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\" charset=\"utf-8\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width:100%; height: 100% }\n  </style>\n</head>\n\n<body>\n  <div id=\"chart\"></div>\n  <script>\n    var w = 400;\n    var h = 400;\n    var r = h/2;\n    var color = d3.scale.category20c();\n\n    var data = [{\"label\":\"Category A\", \"value\":20}, \n                  {\"label\":\"Category B\", \"value\":50}, \n                  {\"label\":\"Category C\", \"value\":30}];\n\n\n    var vis = d3.select('#chart').append(\"svg:svg\").data([data]).attr(\"width\", w).attr(\"height\", h).append(\"svg:g\").attr(\"transform\", \"translate(\" + r + \",\" + r + \")\");\n    var pie = d3.layout.pie().value(function(d){return d.value;});\n\n    // declare an arc generator function\n    var arc = d3.svg.arc().outerRadius(r);\n\n    // select paths, use arc generator to draw\n    var arcs = vis.selectAll(\"g.slice\").data(pie).enter().append(\"svg:g\").attr(\"class\", \"slice\");\n    arcs.append(\"svg:path\")\n        .attr(\"fill\", function(d, i){\n            return color(i);\n        })\n        .attr(\"d\", function (d) {\n            // log the result of the arc generator to show how cool it is :)\n            console.log(arc(d));\n            return arc(d);\n        });\n\n    // add the text\n    arcs.append(\"svg:text\").attr(\"transform\", function(d){\n          d.innerRadius = 0;\n          d.outerRadius = r;\n        return \"translate(\" + arc.centroid(d) + \")\";}).attr(\"text-anchor\", \"middle\").text( function(d, i) {\n        return data[i].label;}\n        );\n</script>\n</body>\n", "description": "fresh block", "created_at": "2016-05-05T13:44:05Z", "updated_at": "2016-05-05T13:52:45Z", "api": ["d3.scale.category20c", "d3.select", "d3.layout.pie", "d3.svg.arc"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "nguyenbq_5dbada613a19ead4c19d585b3599f507"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2.5px;\n  shape-rendering: crispEdges;\n}\n .axis line {\n  fill: none;\n  stroke: green;\n  stroke-width: 1.6px;\n}\n\n.axis .minor {\n  stroke: red;\n  stroke-width: 0.4px;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(16).tickSubdivide(3).tickSize(-60, -60, 0));\n \n</script>", "description": "d3.js major minor tick style 3", "created_at": "2013-02-01T04:08:17Z", "updated_at": "2016-02-18T15:34:44Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "", "uid": "vjpgo_4689130"}, {"code": "<!doctype HTML>\n<meta charset = 'utf-8'>\n<html>\n  <head>\n    <link rel='stylesheet' href='http://timelyportfolio.github.io/rCharts_d3_sankey//css/sankey.css'>\n    \n    <script src='http://timelyportfolio.github.io/rCharts_d3_sankey//js/d3.v3.js' type='text/javascript'></script>\n    <script src='http://timelyportfolio.github.io/rCharts_d3_sankey//js/sankey.js' type='text/javascript'></script>\n    \n    <style>\n    .rChart {\n      display: block;\n      margin-left: auto; \n      margin-right: auto;\n      width: 960px;\n      height: 500px;\n    }  \n    </style>\n    \n  </head>\n  <body >\n    \n    <div id = 'chart21541f297cdc' class = 'rChart rCharts_d3_sankey'></div>    \n    \ufeff<!--Attribution:\nMike Bostock https://github.com/d3/d3-plugins/tree/master/sankey\nMike Bostock http://bost.ocks.org/mike/sankey/\n-->\n\n<script>\n(function(){\nvar params = {\n \"dom\": \"chart21541f297cdc\",\n\"width\":    960,\n\"height\":    500,\n\"data\": {\n \"source\": [ \"area\", \"bar chart\", \"bar chart\", \"block matrix\", \"blog post\", \"blog post\", \"bump chart\", \"cal-heatmap\", \"calendar heatmap\", \"choropleth map\", \"combination\", \"combination\", \"correlation matrix\", \"cumulative line\", \"custom\", \"d3\", \"d3\", \"d3\", \"d3\", \"d3\", \"dashboard\", \"dashifyr\", \"datamaps\", \"datatables\", \"dimple\", \"dimple\", \"dimple\", \"dimple\", \"dimple\", \"dygraphs\", \"error bar\", \"gallery\", \"gallery\", \"heat map\", \"highcharts\", \"highcharts\", \"highcharts\", \"highcharts\", \"horizon\", \"horizon\", \"leaflet\", \"line chart\", \"line chart\", \"line chart\", \"map\", \"morris\", \"morris\", \"multiple\", \"multiple\", \"multiple\", \"multiple\", \"nvd3\", \"nvd3\", \"nvd3\", \"parallel coordinates\", \"parallel coordinates\", \"parcoords\", \"polychart\", \"polychart\", \"polychart\", \"polychart\", \"rickshaw\", \"rickshaw\", \"sankey\", \"sankey\", \"sankey\", \"scatter\", \"scatter\", \"scatterplot\", \"shinyapp\", \"standalone visualization\", \"standalone visualization\", \"standalone visualization\", \"standalone visualization\", \"standalone visualization\", \"standalone visualization\", \"standalone visualization\", \"table\", \"timeline\", \"timelinejs\", \"tutorial\", \"tutorial\" ],\n\"target\": [ \"standalone visualization\", \"blog post\", \"standalone visualization\", \"standalone visualization\", \"Kyle Walker\", \"TimelyPortfolio\", \"standalone visualization\", \"calendar heatmap\", \"standalone visualization\", \"standalone visualization\", \"multiple\", \"scatterplot\", \"standalone visualization\", \"tutorial\", \"standalone visualization\", \"cumulative line\", \"custom\", \"error bar\", \"horizon\", \"sankey\", \"shinyapp\", \"dashboard\", \"choropleth map\", \"table\", \"bar chart\", \"block matrix\", \"multiple\", \"scatter\", \"scatterplot\", \"line chart\", \"standalone visualization\", \"TimelyPortfolio\", \"Vivek Patil\", \"standalone visualization\", \"area\", \"bar chart\", \"line chart\", \"scatterplot\", \"standalone visualization\", \"tutorial\", \"map\", \"blog post\", \"standalone visualization\", \"tutorial\", \"shinyapp\", \"line chart\", \"multiple\", \"gallery\", \"shinyapp\", \"standalone visualization\", \"tutorial\", \"bar chart\", \"line chart\", \"scatterplot\", \"standalone visualization\", \"tutorial\", \"parallel coordinates\", \"correlation matrix\", \"heat map\", \"multiple\", \"scatterplot\", \"bump chart\", \"multiple\", \"blog post\", \"standalone visualization\", \"tutorial\", \"standalone visualization\", \"tutorial\", \"standalone visualization\", \"Ramnath Vaidyanathan\", \"Alex Bresler\", \"Ian Dunham\", \"pssGuy\", \"Ramnath Vaidyanathan\", \"Thomas Reinholdsson\", \"TimelyPortfolio\", \"Vivek Patil\", \"standalone visualization\", \"standalone visualization\", \"timeline\", \"Ramnath Vaidyanathan\", \"TimelyPortfolio\" ],\n\"value\": [ 2, 2, 5, 1, 3, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 5, 1, 1, 1, 4, 4, 1, 3, 2, 1, 2, 1, 3, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 4, 1, 1, 5, 2, 1, 1, 1, 1, 2, 1, 1, 4, 1, 1, 1, 1, 3, 1, 1, 1, 5, 3, 2, 1, 2, 8, 2, 15, 6, 4, 2, 2, 2, 9 ] \n},\n\"nodeWidth\":     15,\n\"nodePadding\":     10,\n\"layout\":     32,\n\"id\": \"chart21541f297cdc\" \n};\n\nparams.units ? units = \" \" + params.units : units = \"\";\n\n//hard code these now but eventually make available\nvar formatNumber = d3.format(\"0,.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + units; },\n    color = d3.scale.category20();\n\nif(params.labelFormat){\n  formatNumber = d3.format(\".2%\");\n}\n\nvar svg = d3.select('#' + params.id).append(\"svg\")\n    .attr(\"width\", params.width)\n    .attr(\"height\", params.height);\n    \nvar sankey = d3.sankey()\n    .nodeWidth(params.nodeWidth)\n    .nodePadding(params.nodePadding)\n    .layout(params.layout)\n    .size([params.width,params.height]);\n    \nvar path = sankey.link();\n    \nvar data = params.data,\n    links = [],\n    nodes = [];\n    \n//get all source and target into nodes\n//will reduce to unique in the next step\n//also get links in object form\ndata.source.forEach(function (d, i) {\n    nodes.push({ \"name\": data.source[i] });\n    nodes.push({ \"name\": data.target[i] });\n    links.push({ \"source\": data.source[i], \"target\": data.target[i], \"value\": +data.value[i] });\n}); \n\n//now get nodes based on links data\n//thanks Mike Bostock https://groups.google.com/d/msg/d3-js/pl297cFtIQk/Eso4q_eBu1IJ\n//this handy little function returns only the distinct / unique nodes\nnodes = d3.keys(d3.nest()\n                .key(function (d) { return d.name; })\n                .map(nodes));\n\n//it appears d3 with force layout wants a numeric source and target\n//so loop through each link replacing the text with its index from node\nlinks.forEach(function (d, i) {\n    links[i].source = nodes.indexOf(links[i].source);\n    links[i].target = nodes.indexOf(links[i].target);\n});\n\n//now loop through each nodes to make nodes an array of objects rather than an array of strings\nnodes.forEach(function (d, i) {\n    nodes[i] = { \"name\": d };\n});\n\nsankey\n  .nodes(nodes)\n  .links(links)\n  .layout(params.layout);\n  \nvar link = svg.append(\"g\").selectAll(\".link\")\n  .data(links)\n.enter().append(\"path\")\n  .attr(\"class\", \"link\")\n  .attr(\"d\", path)\n  .style(\"stroke-width\", function (d) { return Math.max(1, d.dy); })\n  .sort(function (a, b) { return b.dy - a.dy; });\n\nlink.append(\"title\")\n  .text(function (d) { return d.source.name + \" \u2192 \" + d.target.name + \"\\n\" + format(d.value); });\n\nvar node = svg.append(\"g\").selectAll(\".node\")\n  .data(nodes)\n.enter().append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function (d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n.call(d3.behavior.drag()\n  .origin(function (d) { return d; })\n  .on(\"dragstart\", function () { this.parentNode.appendChild(this); })\n  .on(\"drag\", dragmove));\n\nnode.append(\"rect\")\n  .attr(\"height\", function (d) { return d.dy; })\n  .attr(\"width\", sankey.nodeWidth())\n  .style(\"fill\", function (d) { return d.color = color(d.name.replace(/ .*/, \"\")); })\n  .style(\"stroke\", function (d) { return d3.rgb(d.color).darker(2); })\n.append(\"title\")\n  .text(function (d) { return d.name + \"\\n\" + format(d.value); });\n\nnode.append(\"text\")\n  .attr(\"x\", -6)\n  .attr(\"y\", function (d) { return d.dy / 2; })\n  .attr(\"dy\", \".35em\")\n  .attr(\"text-anchor\", \"end\")\n  .attr(\"transform\", null)\n  .text(function (d) { return d.name; })\n.filter(function (d) { return d.x < params.width / 2; })\n  .attr(\"x\", 6 + sankey.nodeWidth())\n  .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \n        \"translate(\" + (\n                   d.x = Math.max(0, Math.min(params.width - d.dx, d3.event.x))\n                ) + \",\" + (\n                   d.y = Math.max(0, Math.min(params.height - d.dy, d3.event.y))\n                ) + \")\");\n        sankey.relayout();\n        link.attr(\"d\", path);\n  }\n})();\n</script>\n    \n    \n    <script>\n    // to be specific in case you have more than one chart\n    d3.selectAll('#chart21541f297cdc svg path.link')\n      .style('stroke', function(d){\n        //here we will use the source color\n        //if you want target then sub target for source\n        //or if you want something other than gray\n        //supply a constant\n        //or use a categorical scale or gradient\n        return d.source.color;\n      })\n     //note no changes were made to opacity\n     //to do uncomment below but will affect mouseover\n     //so will need to define mouseover and mouseout\n     //happy to show how to do this also\n     // .style('stroke-opacity', .7) \n    </script>\n        \n  </body>\n</html>\n", "description": "color your d3 sankey using rCharts", "created_at": "2014-08-21T01:33:44Z", "updated_at": "2015-08-29T14:05:29Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.keys", "d3.nest", "d3.behavior.drag", "d3.rgb", "d3.selectAll"], "readme": "", "uid": "timelyportfolio_79350d7475a5709b051e"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 70, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(10)\n    .tickFormat(d3.time.format(\"%Y-%m-%d\")); // tickFormat\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .selectAll(\"text\")\t\n            .style(\"text-anchor\", \"end\")\n            .attr(\"dx\", \"-.8em\")\n            .attr(\"dy\", \".15em\")\n            .attr(\"transform\", function(d) {\n                return \"rotate(-65)\" \n                });\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>\n", "description": "d3.js graph with rotated axis text", "created_at": "2014-06-21T19:02:26Z", "updated_at": "2015-08-29T14:02:52Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple d3.js graph](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt demonstrates the rotation of the x axis text along with the formatting of that text in a non-standard manner. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_ccdcb7673cdb3a796e13"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n    font: 12px Arial;\n}\n\ntext.shadow {\n  stroke: #fff;\n  stroke-width: 2.5px;\n  opacity: 0.9;\n}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n.grid .tick {\n    stroke: lightgrey;\n    stroke-opacity: 0.7;\n    shape-rendering: crispEdges;\n}\n.grid path {\n          stroke-width: 0;\n}\n\n.area {\n    fill: lightsteelblue;\n      stroke-width: 0;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\nvar margin = {top: 30, right: 20, bottom: 35, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .ticks(5);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(5);\n\nvar area = d3.svg.area()\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.close); });\n\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// function for the x grid lines\nfunction make_x_axis() {\n    return d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\")\n        .ticks(5)\n}\n\n// function for the y grid lines\nfunction make_y_axis() {\n  return d3.svg.axis()\n      .scale(y)\n      .orient(\"left\")\n      .ticks(5)\n}\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the filled area\n    svg.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"area\")\n        .attr(\"d\", area);\n\n    // Draw the x Grid lines\n    svg.append(\"g\")\n        .attr(\"class\", \"grid\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(make_x_axis()\n            .tickSize(-height, 0, 0)\n            .tickFormat(\"\")\n        )\n\n    // Draw the y Grid lines\n    svg.append(\"g\")            \n        .attr(\"class\", \"grid\")\n        .call(make_y_axis()\n            .tickSize(-width, 0, 0)\n            .tickFormat(\"\")\n        )\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"d\", valueline(data));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n    // Add the text label for the X axis\n    svg.append(\"text\")\n        .attr(\"transform\",\n              \"translate(\" + (width/2) + \" ,\" + \n                             (height+margin.bottom) + \")\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Date\");\n\n    // Add the white background to the y axis label for legibility\n    svg.append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"x\", margin.top - (height / 2))\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"class\", \"shadow\")\n        .text(\"Price ($)\");\n\n    // Add the text label for the Y axis\n    svg.append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"x\", margin.top - (height / 2))\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .text(\"Price ($)\");\n\n    // Add the title\n    svg.append(\"text\")\n        .attr(\"x\", (width / 2))     \n        .attr(\"y\", 0 - (margin.top / 2))\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-size\", \"16px\")\n        .style(\"text-decoration\", \"underline\")\n        .text(\"Price vs Date Graph\");\n\n});\n\n</script>\n</body>\n", "description": "d3.js Graph with many features", "created_at": "2016-03-03T13:24:57Z", "updated_at": "2016-03-03T13:24:59Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple d3.js graph](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at exploring some features of d3.js and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/e1aa61856118edfa624d'>d3.js Graph with many features</a>", "uid": "MattDionis_e612bc8d7c7857f2c5ca"}, {"code": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\n    <style type=\"text/css\">\nsvg {\n  border: solid 1px #aaa;\n}\n\n#checks {\n  margin: 10px;\n}\n    </style>\n  </head>\n  <body>\n    <script type=\"text/javascript\" src=\"http://mbostock.github.com/d3/d3.js\"></script>\n    <script type=\"text/javascript\" src=\"dragrect.js\"></script>\n    <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\" type=\"text/javascript\"></script>\n    <div id=\"checks\">\n    \tX-axis:<input type=\"checkbox\" id=\"xChecked\" checked/>\n    \tY-axis:<input type=\"checkbox\" id=\"yChecked\" checked/>\n    </div>\n\n    <script>\n$('#xChecked').click(function() {\n    isXChecked = !isXChecked;\n     dragbarleft \n        .attr(\"fill-opacity\", (isXChecked ? 0.5 : 0))\n        .attr(\"cursor\", (isXChecked ? \"ew-resize\" : \"move\"));\n     dragbarright \n        .attr(\"fill-opacity\", (isXChecked ? 0.5 : 0))\n        .attr(\"cursor\", (isXChecked ? \"ew-resize\" : \"move\"));\n});\n\n$('#yChecked').click(function() {\n    isYChecked = !isYChecked;\n     dragbartop \n        .attr(\"fill-opacity\", (isYChecked ? 0.5 : 0))\n        .attr(\"cursor\", (isYChecked ? \"ns-resize\" : \"move\"));\n     dragbarbottom \n        .attr(\"fill-opacity\", (isYChecked ? 0.5 : 0))\n        .attr(\"cursor\", (isYChecked ? \"ns-resize\" : \"move\"));\n});\n    </script>\n  </body>\n</html>", "description": "D3 Drag Rectangle with drag handles", "created_at": "2015-08-09T12:07:00Z", "updated_at": "2015-08-29T14:27:00Z", "api": ["d3.behavior.drag", "d3.select"], "readme": "", "uid": "cool-Blue_7664b7e95a5ce73b3ef9"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<div id=\"option\">\n    <input name=\"updateButton\" \n           type=\"button\" \n           value=\"Update\" \n           onclick=\"updateData()\" />\n</div>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n// ** Update data section (Called from the onclick)\nfunction updateData() {\n\n    // Get the data again\n    d3.csv(\"data-alt.csv\", function(error, data) {\n       \tdata.forEach(function(d) {\n\t    \td.date = parseDate(d.date);\n\t    \td.close = +d.close;\n\t    });\n\n    \t// Scale the range of the data again \n    \tx.domain(d3.extent(data, function(d) { return d.date; }));\n\t    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Select the section we want to apply our changes to\n    var svg = d3.select(\"body\").transition();\n\n    // Make the changes\n        svg.select(\".line\")   // change the line\n            .duration(750)\n            .attr(\"d\", valueline(data));\n        svg.select(\".x.axis\") // change the x axis\n            .duration(750)\n            .call(xAxis);\n        svg.select(\".y.axis\") // change the y axis\n            .duration(750)\n            .call(yAxis);\n\n    });\n}\n\n</script>\n</body>\n", "description": "Update d3.js data with button press", "created_at": "2016-05-02T12:31:28Z", "updated_at": "2016-05-02T12:31:28Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple d3.js graph](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt demonstrates the loading of new data and updating a graph on a button press. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/7030f35b72de721622b8'>Update d3.js data with button press</a>", "uid": "CBasis_89ebe7ca1e76681f7abcfd244249575c"}, {"code": "<html>\n<head>\n  <title>D3 in Action Chapter 5 - Example 8</title>\n  <meta charset=\"utf-8\" />\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n</head>\n<style>\n  svg {\n    height: 500px;\n    width: 500px;\n    border: 1px solid gray;\n  }\n  \n</style>\n<body>\n\n<div id=\"viz\">\n  <svg>\n  </svg>\n</div>\n</body>\n  <footer>\n    \n<script>\n    d3.json(\"tweets.json\",function(error,data) {dataViz(data.tweets)});\n\n    function dataViz(incData) {\n\n      nestedTweets = d3.nest()\n      .key(function (el) {return el.user})\n      .entries(incData);\n\n      packableTweets = {id: \"root\", values: nestedTweets}\n\n      var depthScale = d3.scale.category10([0,1,2]);\n\n      treeChart = d3.layout.tree();\n      treeChart.size([200,200])\n      .children(function(d) {return d.values});\n\n      var linkGenerator = d3.svg.diagonal.radial()\n      .projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });\n  \n      d3.select(\"svg\")\n      .append(\"g\")\n      .attr(\"class\", \"treeG\")\n      .selectAll(\"g\")\n      .data(treeChart(packableTweets))\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n      \n      d3.selectAll(\"g.node\")\n      .append(\"circle\")\n      .attr(\"r\", 10)\n      .style(\"fill\", function(d) {return depthScale(d.depth)})\n      .style(\"stroke\", \"white\")\n      .style(\"stroke-width\", \"2px\");\n      \n      d3.selectAll(\"g.node\")\n      .append(\"text\")\n      .text(function(d) {return d.id || d.key || d.content})\n      \n      d3.select(\"g.treeG\").selectAll(\"path\")\n      .data(treeChart.links(treeChart(packableTweets)))\n      .enter().insert(\"path\",\"g\")\n      .attr(\"d\", linkGenerator)\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", \"2px\");\n      \n      treeZoom = d3.behavior.zoom();\n      treeZoom.on(\"zoom\", zoomed);\n      d3.select(\"svg\").call(treeZoom)\n      \n      function zoomed() {\n        var zoomTranslate = treeZoom.translate();\n        d3.select(\"g.treeG\").attr(\"transform\", \"translate(\"+zoomTranslate[0]+\",\"+zoomTranslate[1]+\")\")\n      }\n    }\n</script>\n  </footer>\n\n</html>\n", "description": "Ch. 5, Fig. 17 - D3.js in Action", "created_at": "2014-11-17T16:25:29Z", "updated_at": "2016-03-18T03:33:53Z", "api": ["d3.json", "d3.nest", "d3.scale.category10", "d3.layout.tree", "d3.svg.diagonal.radial", "d3.select", "d3.selectAll", "d3.behavior.zoom"], "readme": "This is the code for Chapter 5, Figure 17 from [D3.js in Action](http://manning.com/meeks/) that shows how to use **d3.svg.diagonal.radial()** and its **.projection()** function to create circular dendrograms. This also implements **d3.behavior.zoom()** so that you can pan the canvas by dragging.", "uid": "emeeks_aa5c8f08ad0900669917"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>D3.js: Panning with mouse wheel</title>\n<style>\n\n.overlay {\n  fill: none;\n  pointer-events: all;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500;\n\nvar randomX = d3.random.normal(width / 2, 80),\n    randomY = d3.random.normal(height / 2, 80);\n\nvar data = d3.range(2000).map(function() {\n  return [\n    randomX(),\n    randomY()\n  ];\n});\nvar zoomer = d3.behavior.zoom()\n  .on(\"zoom\", zoom)\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .call(zoomer)\n      .on(\"wheel.zoom\",pan)          \n  .append(\"g\");\n\nsvg.append(\"rect\")\n    .attr(\"class\", \"overlay\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"circle\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"r\", 2.5)\n    .attr(\"transform\", function(d) { return \"translate(\" + d + \")\"; });\n\nfunction zoom() {\n    console.log(d3.select(this))\n  svg.attr(\"transform\", \"translate(\" + d3.event.translate + \")scale(\" + d3.event.scale + \")\");\n}\n\nfunction pan() {\n    current_translate = d3.transform(svg.attr(\"transform\")).translate;\n    dx = d3.event.wheelDeltaX + current_translate[0];\n    dy = d3.event.wheelDeltaY + current_translate[1];\n    \n  svg.attr(\"transform\", \"translate(\" + [dx,dy] + \")\");\n  d3.event.stopPropagation();\n}\n\n</script>", "description": "D3.js: Panning with mouse wheel", "created_at": "2015-02-20T01:49:26Z", "updated_at": "2015-08-29T14:15:47Z", "api": ["d3.random.normal", "d3.range", "d3.behavior.zoom", "d3.select", "d3.transform", "d3.event.stopPropagation"], "readme": "This example demonstrate how to remap D3 events. MouseWheel event is used to pan the chart in x and y directions. This example was created as an answer to [this SO question](http://stackoverflow.com/questions/28603796/d3-remap-mousewheel-to-be-panning-gesture-instead-of-zoom-gesture) (Refer to it for detailed explanation).", "uid": "ahmohamed_82ac20ccc949470e3206"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<style>\n\n.map {\n  fill: none;\n  stroke: #777;\n  stroke-opacity: .5;\n  stroke-width: .5px;\n}\n\n.land {\n  fill: #999;\n}\n\n.boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n\n</style>\n\n\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"pathlayout.js\"></script>\n<script>\nvar width = 600,\n    height = 500;\n\nvar projection = d3.geo.mercator()\n    .scale(5*(width + 1) / 2 / Math.PI)\n    .translate([width / 2, height / 2])\n    .rotate([-125, -15, 0])\n    .precision(.1);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nd3.json(\"/mbostock/raw/4090846/world-50m.json\", function(error, world) {\nd3.json(\"track.json\", function(error, track) {\n\n    var color_scale = d3.scale.quantile().domain([1, 5]).range(colorbrewer.YlOrRd[5]);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var filter = svg.append(\"defs\")\n        .append(\"filter\")\n        .attr(\"id\", \"drop-shadow\")\n        .attr(\"height\", \"130%\");\n    filter.append(\"feGaussianBlur\")\n        .attr(\"in\", \"SourceAlpha\")\n        .attr(\"stdDeviation\", 5)\n        .attr(\"result\", \"blur\");\n\n     filter.append(\"feOffset\")\n        .attr(\"in\", \"blur\")\n        .attr(\"dx\", 5)\n        .attr(\"dy\", 5)\n        .attr(\"result\", \"offsetBlur\");\n\n    var feMerge = filter.append(\"feMerge\");\n\n    feMerge.append(\"feMergeNode\")\n        .attr(\"in\", \"offsetBlur\")\n    feMerge.append(\"feMergeNode\")\n        .attr(\"in\", \"SourceGraphic\");\n\n    svg.insert(\"path\", \".map\")\n        .datum(topojson.feature(world, world.objects.land))\n        .attr(\"class\", \"land\")\n        .attr(\"d\", path)\n        .style(\"filter\", \"url(#drop-shadow)\");\n\n    svg.insert(\"path\", \".map\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n\n\n    var dateText = svg.append(\"text\")\n      .attr(\"id\", \"dataTitle\")\n      .text(\"2013/11/\"+track[0].day + \" \" + track[0].hour + \":00 class: \" + track[0].class)\n      .attr(\"x\", 70)\n      .attr(\"y\", 20)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"20px\")\n      .attr(\"fill\", color_scale(track[0].class));\n    \n    /* The trail is inserted here */\n    var trail = d3.layout.trail()\n        .positioner(function(d) {return projection([d.lon,d.lat]);})\n        .coordType('xy');\n\n    var trail_layout = trail.data(track).layout();\n\n    var hayan_trail = svg.selectAll(\"line\").data(trail_layout);\n\n    hayan_trail.enter()\n        .append('line')\n        .attr(\"x1\",function(d) {return d.x1}) \n        .attr(\"x2\",function(d) {return d.x1})\n        .attr(\"y1\",function(d) {return d.y1}) \n        .attr(\"y2\",function(d) {return d.y1}) \n        .attr(\"class\",\"line\")\n        .style(\"stroke-width\",5)\n        .attr(\"stroke\", function(d){return color_scale(d.class);})\n        .transition()\n        .ease(\"linear\")\n        .delay(function(d,i) {return i*1000})\n        .duration(1000)\n        .attr(\"x2\",function(d) {return d.x2})\n        .attr(\"y2\",function(d) {return d.y2});\n\n\n    var icon = svg.append(\"path\")\n    .attr(\"d\",\"m 20,-42 c -21.61358,0.19629 -34.308391,10.76213 -41.46346,18.0657 -7.155097,7.3036 -11.451337,17.59059 -11.599112,26.13277 0,14.45439 9.037059,26.79801 21.767213,31.69368 -14.965519,10.64929 -25.578236,6.78076 -37.671451,7.85549 C -4.429787,54.20699 14.03,37.263 23.12144,28.41572 32.2133,19.56854 34.6802,10.79063 34.82941,2.19847 c 0,-14.45219 -9.03405,-26.79679 -21.76113,-31.69364 14.90401,-10.54656 25.48889,-6.69889 37.55061,-7.77104 C 38.78869,-40.57565 29.11666,-41.95733 21.03853,-42 20.68954,-42.0105 20.34303,-42.0105 20,-42 z M 0.82306,-7.46851 c 4.72694,0 8.56186,4.27392 8.56186,9.54602 0,5.2725 -3.83492,9.54651 -8.56186,9.54651 -4.726719,0 -8.555958,-4.27401 -8.555958,-9.54651 0,-5.2721 3.829239,-9.54602 8.555958,-9.54602 z\")\n    .attr(\"class\",\"icon\")\n    .attr(\"transform\", \"translate(\" + projection([track[0].lon, track[0].lat])[0] + \",\" + projection([track[0].lon, track[0].lat])[1] + \"), scale(\"+(0.15*track[0].class)+\")\")\n    .attr(\"fill\", color_scale(track[0].class));\n\n\n    track.forEach(function(d, i){\n        icon.transition()\n        .ease(\"linear\")\n        .delay(i*1000)\n        .duration(1000)\n        .attr(\"transform\", \"translate(\" + projection([d.lon, d.lat])[0] + \",\" + projection([d.lon, d.lat])[1] + \"), scale(\"+(0.15*d.class)+\"), rotate(\"+(i*15)+\")\")\n        .attr(\"fill\", color_scale(d.class));\n\n        dateText\n        .transition()\n        .ease(\"linear\")\n        .delay(i*1000)\n        .duration(1000)\n        .text(\"2013/11/\"+ d.day + \" \" + d.hour + \":00 class: \" + d.class)\n        .attr(\"fill\", color_scale(d.class));\n    });\n\n\n    });\n\n  \n\n});\n</script>", "description": "D3 Trail Layout animated map with icon", "created_at": "2014-07-07T18:32:15Z", "updated_at": "2015-08-29T14:03:37Z", "api": ["d3.geo.mercator", "d3.geo.path", "d3.json", "d3.scale.quantile", "d3.select", "d3.layout.trail"], "readme": "This an example using the [D3 trail layout](https://github.com/bmschmidt/D3-trail) made by [Benjamin Schmidt](https://github.com/bmschmidt).\n\nThe final example, with the typhoon icon moving along the path and the date for each frame shown.\n\nThere is a blog entry explaining this example at [GeoExamples](http://geoexamples.blogspot.com/2014/07/using-d3-trail-layout-to-draw-hayian.html)", "uid": "rveciana_9433ecc1ec82317dcd76"}] }