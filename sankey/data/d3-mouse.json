{"nodes": [{"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>D3.js: Panning with mouse wheel</title>\n<style>\n\n.overlay {\n  fill: none;\n  pointer-events: all;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500;\n\nvar randomX = d3.random.normal(width / 2, 80),\n    randomY = d3.random.normal(height / 2, 80);\n\nvar data = d3.range(2000).map(function() {\n  return [\n    randomX(),\n    randomY()\n  ];\n});\nvar zoomer = d3.behavior.zoom()\n  .on(\"zoom\", zoom)\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .call(zoomer)\n      .on(\"wheel.zoom\",pan)          \n  .append(\"g\");\n\nsvg.append(\"rect\")\n    .attr(\"class\", \"overlay\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"circle\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"r\", 2.5)\n    .attr(\"transform\", function(d) { return \"translate(\" + d + \")\"; });\n\nfunction zoom() {\n    console.log(d3.select(this))\n  svg.attr(\"transform\", \"translate(\" + d3.event.translate + \")scale(\" + d3.event.scale + \")\");\n}\n\nfunction pan() {\n    current_translate = d3.transform(svg.attr(\"transform\")).translate;\n    dx = d3.event.wheelDeltaX + current_translate[0];\n    dy = d3.event.wheelDeltaY + current_translate[1];\n    \n  svg.attr(\"transform\", \"translate(\" + [dx,dy] + \")\");\n  d3.event.stopPropagation();\n}\n\n</script>", "description": "D3.js: Panning with mouse wheel", "created_at": "2015-02-20T01:49:26Z", "updated_at": "2015-08-29T14:15:47Z", "api": ["d3.random.normal", "d3.range", "d3.behavior.zoom", "d3.select", "d3.transform", "d3.event.stopPropagation"], "readme": "This example demonstrate how to remap D3 events. MouseWheel event is used to pan the chart in x and y directions. This example was created as an answer to [this SO question](http://stackoverflow.com/questions/28603796/d3-remap-mousewheel-to-be-panning-gesture-instead-of-zoom-gesture) (Refer to it for detailed explanation).", "uid": "ahmohamed_82ac20ccc949470e3206"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n\tbody { font: 12px Arial;}\n\n\tpath { \n\t\tstroke: steelblue;\n\t\tstroke-width: 2;\n\t\tfill: none;\n\t}\n\n\t.axis path,\n\t.axis line {\n\t\tfill: none;\n\t\tstroke: grey;\n\t\tstroke-width: 1;\n\t\tshape-rendering: crispEdges;\n\t}\n\n\t.legend {\n\t\tfont-size: 16px;         \n\t\tfont-weight: bold;         \n\t\ttext-anchor: start;\n\t\t}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\nvar\tmargin = {top: 30, right: 40, bottom: 70, left: 50}, \n\twidth = 600 - margin.left - margin.right,\n\theight = 300 - margin.top - margin.bottom;\n\nvar\tparseDate = d3.time.format(\"%d-%b-%y\").parse;\n\nvar\tx = d3.time.scale().range([0, width]);\nvar\ty0 = d3.scale.linear().range([height, 0]);\nvar\ty1 = d3.scale.linear().range([height, 0]);\t\n\nvar\txAxis = d3.svg.axis().scale(x)\n\t.orient(\"bottom\").ticks(5);\n\nvar\tyAxisLeft = d3.svg.axis().scale(y0)\n\t.orient(\"left\").ticks(5);\n\nvar\tyAxisRight = d3.svg.axis().scale(y1)\n\t.orient(\"right\").ticks(5);\t\t\n\nvar\tvalueline = d3.svg.line()\n\t.x(function(d) { return x(d.date); })\n\t.y(function(d) { return y0(d.close); });\t\n    \nvar\tvalueline2 = d3.svg.line()\n\t.x(function(d) { return x(d.date); })\n\t.y(function(d) { return y1(d.open); });\n  \nvar\tsvg = d3.select(\"body\")\n\t.append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t.append(\"g\")\n\t\t.attr(\"transform\", \n\t\t      \"translate(\" + margin.left + \",\" + margin.top + \")\");\nvar data = [\n{\"date\":\"9-Apr-12\",\"close\":436,\"open\":9.04},\n{\"date\":\"7-Apr-12\",\"close\":221,\"open\":4.02},\n{\"date\":\"5-Apr-12\",\"close\":113,\"open\":9.02},\n{\"date\":\"4-Apr-12\",\"close\":64,\"open\":32.05},\n{\"date\":\"3-Apr-12\",\"close\":29,\"open\":46.03},\n{\"date\":\"2-Apr-12\",\"close\":18,\"open\":51.03}\n];\n\n// Get the data\ndata.forEach(function(d) {\n\td.date = parseDate(d.date);\n\td.close = +d.close;\n\td.open = +d.open;\n});\n\n// Scale the range of the data\nx.domain(d3.extent(data, function(d) { return d.date; }));\ny0.domain([0, d3.max(data, function(d) { \n\treturn Math.max(d.close); })]);\ny1.domain([0, d3.max(data, function(d) { \n\treturn Math.max(d.open); })]);\n\nsvg.append(\"path\")\n\t.attr(\"class\", \"line\")\n\t.attr(\"id\", \"blueLine\")\n\t.attr(\"d\", valueline(data));\n\nsvg.append(\"path\")\n\t.attr(\"class\", \"line\")\n\t.style(\"stroke\", \"red\")\n\t.attr(\"id\", \"redLine\")\n\t.attr(\"d\", valueline2(data));\n\nsvg.append(\"g\")\t\n\t.attr(\"class\", \"x axis\")\n\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t.call(xAxis);\n\n// edit the Y Axis Left\nsvg.append(\"g\")\t\n\t.attr(\"class\", \"y axis\")\n\t.style(\"fill\", \"steelblue\")\n\t.attr(\"id\", \"blueAxis\")\n\t.call(yAxisLeft);\n\nsvg.append(\"g\")\n\t.attr(\"class\", \"y axis\")\n\t.attr(\"transform\", \"translate(\" + width + \" ,0)\")\n\t.style(\"fill\", \"red\")\n\t.attr(\"id\", \"redAxis\")\n\t.call(yAxisRight);\n\n// Add the blue line title\nsvg.append(\"text\")\n\t.attr(\"x\", 0)             \n\t.attr(\"y\", height + margin.top + 10)    \n\t.attr(\"class\", \"legend\")\n\t.style(\"fill\", \"steelblue\")         \n\t.on(\"click\", function(){\n\t\t// Determine if current line is visible\n\t\tvar active   = blueLine.active ? false : true,\n\t\t  newOpacity = active ? 0 : 1;\n\t\t// Hide or show the elements\n\t\td3.select(\"#blueLine\").style(\"opacity\", newOpacity);\n\t\td3.select(\"#blueAxis\").style(\"opacity\", newOpacity);\n\t\t// Update whether or not the elements are active\n\t\tblueLine.active = active;\n\t})\n\t.text(\"Blue Line\");\n\n// Add the red line title\nsvg.append(\"text\")\n\t.attr(\"x\", 0)             \n\t.attr(\"y\", height + margin.top + 30)    \n\t.attr(\"class\", \"legend\")\n\t.style(\"fill\", \"red\")         \n\t.on(\"click\", function(){\n\t\t// Determine if current line is visible\n\t\tvar active   = redLine.active ? false : true ,\n\t\t  newOpacity = active ? 0 : 1;\n\t\t// Hide or show the elements\n\t\td3.select(\"#redLine\").style(\"opacity\", newOpacity);\n\t\td3.select(\"#redAxis\").style(\"opacity\", newOpacity);\n\t\t// Update whether or not the elements are active\n\t\tredLine.active = active;\n\t})\n\t.text(\"Red Line\");\n\n</script>\n</body>\n", "description": "Show / hide elements on mouse click with d3.js", "created_at": "2014-05-09T09:05:41Z", "updated_at": "2016-06-01T22:08:59Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.extent", "d3.max"], "readme": "This is a relativly straight forward graph with two lines. Each line and it's corresponding Y axis can be toggled on and off by clicking on the text labels at the bottom of the graph.\n\nThis example is based on the explanation given by 'mdml' in response to a [Stack Overflow question](http://stackoverflow.com/questions/20249215/how-to-display-and-hide-links-and-nodes-when-clicking-on-a-node-in-d3-javascript) on showing and hiding links and nodes.\n \nIt is used as an example of showing and hiding an element in d3.js using a separate element and described in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from [Leanpub](https://leanpub.com/D3-Tips-and-Tricks).", "uid": "d3noob_5d621a60e2d1d02086bf"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n\tbody { font: 12px Arial;}\n\n\tpath { \n\t\tstroke: steelblue;\n\t\tstroke-width: 2;\n\t\tfill: none;\n\t}\n\n\t.axis path,\n\t.axis line {\n\t\tfill: none;\n\t\tstroke: grey;\n\t\tstroke-width: 1;\n\t\tshape-rendering: crispEdges;\n\t}\n\n\t.legend {\n\t\tfont-size: 16px;         \n\t\tfont-weight: bold;         \n\t\ttext-anchor: start;\n\t\t}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\nvar\tmargin = {top: 30, right: 40, bottom: 70, left: 50}, \n\twidth = 600 - margin.left - margin.right,\n\theight = 300 - margin.top - margin.bottom;\n\nvar\tparseDate = d3.time.format(\"%d-%b-%y\").parse;\n\nvar\tx = d3.time.scale().range([0, width]);\nvar\ty0 = d3.scale.linear().range([height, 0]);\nvar\ty1 = d3.scale.linear().range([height, 0]);\t\n\nvar\txAxis = d3.svg.axis().scale(x)\n\t.orient(\"bottom\").ticks(5);\n\nvar\tyAxisLeft = d3.svg.axis().scale(y0)\n\t.orient(\"left\").ticks(5);\n\nvar\tyAxisRight = d3.svg.axis().scale(y1)\n\t.orient(\"right\").ticks(5);\t\t\n\nvar\tvalueline = d3.svg.line()\n\t.x(function(d) { return x(d.date); })\n\t.y(function(d) { return y0(d.close); });\t\n    \nvar\tvalueline2 = d3.svg.line()\n\t.x(function(d) { return x(d.date); })\n\t.y(function(d) { return y1(d.open); });\n  \nvar\tsvg = d3.select(\"body\")\n\t.append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t.append(\"g\")\n\t\t.attr(\"transform\", \n\t\t      \"translate(\" + margin.left + \",\" + margin.top + \")\");\nvar data = [\n{\"date\":\"9-Apr-12\",\"close\":436,\"open\":9.04},\n{\"date\":\"7-Apr-12\",\"close\":221,\"open\":4.02},\n{\"date\":\"5-Apr-12\",\"close\":113,\"open\":9.02},\n{\"date\":\"4-Apr-12\",\"close\":64,\"open\":32.05},\n{\"date\":\"3-Apr-12\",\"close\":29,\"open\":46.03},\n{\"date\":\"2-Apr-12\",\"close\":18,\"open\":51.03}\n];\n\n// Get the data\ndata.forEach(function(d) {\n\td.date = parseDate(d.date);\n\td.close = +d.close;\n\td.open = +d.open;\n});\n\n// Scale the range of the data\nx.domain(d3.extent(data, function(d) { return d.date; }));\ny0.domain([0, d3.max(data, function(d) { \n\treturn Math.max(d.close); })]);\ny1.domain([0, d3.max(data, function(d) { \n\treturn Math.max(d.open); })]);\n\nsvg.append(\"path\")\n\t.attr(\"class\", \"line\")\n\t.attr(\"id\", \"blueLine\")\n\t.attr(\"d\", valueline(data));\n\nsvg.append(\"path\")\n\t.attr(\"class\", \"line\")\n\t.style(\"stroke\", \"red\")\n\t.attr(\"id\", \"redLine\")\n\t.attr(\"d\", valueline2(data));\n\nsvg.append(\"g\")\t\n\t.attr(\"class\", \"x axis\")\n\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t.call(xAxis);\n\n// edit the Y Axis Left\nsvg.append(\"g\")\t\n\t.attr(\"class\", \"y axis\")\n\t.style(\"fill\", \"steelblue\")\n\t.attr(\"id\", \"blueAxis\")\n\t.call(yAxisLeft);\n\nsvg.append(\"g\")\n\t.attr(\"class\", \"y axis\")\n\t.attr(\"transform\", \"translate(\" + width + \" ,0)\")\n\t.style(\"fill\", \"red\")\n\t.attr(\"id\", \"redAxis\")\n\t.call(yAxisRight);\n\n// Add the blue line title\nsvg.append(\"text\")\n\t.attr(\"x\", 0)             \n\t.attr(\"y\", height + margin.top + 10)    \n\t.attr(\"class\", \"legend\")\n\t.style(\"fill\", \"steelblue\")         \n\t.on(\"click\", function(){\n\t\t// Determine if current line is visible\n\t\tvar active   = blueLine.active ? false : true,\n\t\t  newOpacity = active ? 0 : 1;\n\t\t// Hide or show the elements\n\t\td3.select(\"#blueLine\").style(\"opacity\", newOpacity);\n\t\td3.select(\"#blueAxis\").style(\"opacity\", newOpacity);\n\t\t// Update whether or not the elements are active\n\t\tblueLine.active = active;\n\t})\n\t.text(\"Blue Line\");\n\n// Add the red line title\nsvg.append(\"text\")\n\t.attr(\"x\", 0)             \n\t.attr(\"y\", height + margin.top + 30)    \n\t.attr(\"class\", \"legend\")\n\t.style(\"fill\", \"red\")         \n\t.on(\"click\", function(){\n\t\t// Determine if current line is visible\n\t\tvar active   = redLine.active ? false : true ,\n\t\t  newOpacity = active ? 0 : 1;\n\t\t// Hide or show the elements\n\t\td3.select(\"#redLine\").style(\"opacity\", newOpacity);\n\t\td3.select(\"#redAxis\").style(\"opacity\", newOpacity);\n\t\t// Update whether or not the elements are active\n\t\tredLine.active = active;\n\t})\n\t.text(\"Red Line\");\n\n</script>\n</body>\n", "description": "Show / hide elements on mouse click with d3.js", "created_at": "2016-05-22T22:05:25Z", "updated_at": "2016-05-22T22:05:25Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.extent", "d3.max"], "readme": "This is a relativly straight forward graph with two lines. Each line and it's corresponding Y axis can be toggled on and off by clicking on the text labels at the bottom of the graph.\n\nThis example is based on the explanation given by 'mdml' in response to a [Stack Overflow question](http://stackoverflow.com/questions/20249215/how-to-display-and-hide-links-and-nodes-when-clicking-on-a-node-in-d3-javascript) on showing and hiding links and nodes.\n \nIt is used as an example of showing and hiding an element in d3.js using a separate element and described in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from [Leanpub](https://leanpub.com/D3-Tips-and-Tricks).\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/5d621a60e2d1d02086bf'>Show / hide elements on mouse click with d3.js</a>", "uid": "emilyinamillion_29e916ccb9b281716aeb52e943c6d25c"}, {"code": "<!doctype html>\n<html lang=\"en\">\n<head lang=en>\n<meta charset=\"utf-8\">\n<title>D3: Dotted Path Following the Mouse</title>\n<style>\n\nsvg {\n  background: #ddd;\n  font: 10px sans-serif;\n}\n\n.line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 1.5px;\n  stroke-dasharray: 2,5;\n}\n\n</style>\n</head>\n\n<body>\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar margin = {top: 10, right: 10, bottom: 20, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n\nvar npoints = 100;\nvar ptdata = [];\n\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d, i) { return d[0]; })\n    .y(function(d, i) { return d[1]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar svgagain = d3.select(\"body\").select(\"svg\")\n    .on(\"mousemove\", function() { var pt = d3.mouse(this); tick(pt); });\n\n\n\nvar path = svg.append(\"g\")\n  .append(\"path\")\n    .data([ptdata])\n    .attr(\"class\", \"line\")\n    .attr(\"d\", line);\n\nfunction tick(pt) {\n\n  // push a new data point onto the back\n  ptdata.push(pt);\n\n  // Redraw the path:\n  path\n      .attr(\"d\", function(d) { return line(d);})\n\n\n  // If more than 100 points, drop the old data pt off the front\n  if (ptdata.length > npoints) {\n\t  ptdata.shift();\n  }\n}\n</script>\n</body>\n</html>\n\n\n\n\n", "description": "Dotted Path Following the Mouse", "created_at": "2013-05-28T11:01:56Z", "updated_at": "2015-12-17T19:39:17Z", "api": ["d3.svg.line", "d3.select", "d3.mouse"], "readme": "Dotted Path Following the Mouse\n\nBit of a simple variation of [Mike Bostock's Spline Transition](http://bl.ocks.org/mbostock/1642989).\n\nThe idea is to have a dotted line of x-points long follow the mouse around, and trail behind it. Essentially the code creates and appends a path element, then on every mouse move adds a new point to the list of points, drops an old point, and updates the path.\n\nSimples!\n\n\n\n", "uid": "cloudshapes_5661984"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  margin: 0;\n  padding: 0;\n  font: 12px sans-serif;\n}\n\npath,\nline {\n  shape-rendering: crispEdges;\n}\n\ndiv,\nsvg,\ncanvas {\n  position: absolute;\n}\n\nsvg {\n  pointer-events: none;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 1px;\n}\n\ncircle {\n  stroke-width: 4px;\n  stroke: #000;\n  fill: none;\n}\n\n.hidden {\n  display: none;\n}\n\n</style>\n<body>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.17/d3.min.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 10, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \" \" + margin.top + \")\");\n\nvar x = d3.scale.linear()\n  .range([0, width]);\n\nvar y = d3.scale.linear()\n  .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n  .scale(x)\n  .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n  .scale(y)\n  .orient(\"left\");\n\nvar xg = svg.append(\"g\")\n  .attr(\"class\", \"x axis\")\n  .attr(\"transform\", \"translate(0,\" + height + \")\");\n\nvar yg = svg.append(\"g\")\n  .attr(\"class\", \"y axis\");\n\nvar chartArea = d3.select(\"body\").append(\"div\")\n  .style(\"left\", margin.left + \"px\")\n  .style(\"top\", margin.top + \"px\");\n\nvar canvas = chartArea.append(\"canvas\")\n  .attr(\"width\", width)\n  .attr(\"height\", height);\n\nvar offscreen = d3.select(document.createElement(\"canvas\"))\n  .attr(\"width\", width)\n  .attr(\"height\", height)\n\nvar context = canvas.node().getContext(\"2d\"),\n    picker = offscreen.node().getContext(\"2d\");\n\ncontext.fillStyle = \"#f0f\";\n\n// Layer on top of canvas, example of selection details\nvar highlight = chartArea.append(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height)\n    .append(\"circle\")\n      .attr(\"r\", 7)\n      .classed(\"hidden\", true);\n\nredraw();\n\nfunction redraw() {\n\n  // Randomize the scale\n  var scale = 1 + Math.floor(Math.random() * 10);\n\n  // Redraw axes\n  x.domain([0, scale]);\n  y.domain([0, scale]);\n  xg.call(xAxis);\n  yg.call(yAxis);\n\n  var points = randomPoints(scale),\n      colors = {};\n\n  // Update canvas\n  context.clearRect(0, 0, width, height);\n  picker.clearRect(0, 0, width, height);\n\n  points.forEach(function(p,i){\n\n    // Space out the colors a bit\n    var color = getColor(i * 1000 + 1);\n    colors[color] = p;\n    picker.fillStyle = \"rgb(\" + color + \")\";\n\n    context.beginPath();\n    picker.beginPath();\n\n    context.arc(x(p[0]), y(p[1]), 5, 0, 2 * Math.PI);\n    picker.arc(x(p[0]), y(p[1]), 5, 0, 2 * Math.PI);\n\n    context.fill();\n    picker.fill();\n\n  });\n\n  canvas.on(\"mousemove\",function(){\n\n    var xy = d3.mouse(this);\n\n    // Get pixel from offscreen canvas\n    var color = picker.getImageData(xy[0], xy[1], 1, 1).data;\n        selected = colors[color.slice(0,3).toString()];\n\n    highlight.classed(\"hidden\", !selected);\n\n    // If it matches a point, highlight it\n    if (selected) {\n\n      highlight.attr(\"cx\", x(selected[0]))\n        .attr(\"cy\", y(selected[1]));\n    }\n\n  });\n\n}\n\nfunction randomPoints(scale) {\n\n  // Get points\n  return d3.range(1000).map(function(d){\n\n    return [\n      Math.random() * scale,\n      Math.random() * scale\n    ];\n\n  });\n\n}\n\nfunction getColor(i) {\n  return (i % 256) + \",\" + (Math.floor(i / 256) % 256) + \",\" + (Math.floor(i / 65536) % 256);\n}\n\n</script>\n", "description": "Canvas scatterplot with mouse events", "created_at": "2016-05-18T19:08:44Z", "updated_at": "2016-05-20T11:05:25Z", "api": ["d3.select", "d3.scale.linear", "d3.svg.axis", "d3.mouse", "d3.range"], "readme": "Canvas scatterplot w/ colorpicking for mouse events. Renders lots of dots on a `<canvas>` for speed, but uses a hidden canvas with a color-to-data dictionary to get the value under a mouse event. Hover over some dots.\n\nUsing nonrectangular shapes creates the chance of weirdness from antialiasing when triggered on the very edge of a shape. If you wanted to prevent them entirely you could verify that the resulting data center point is within `r` pixels of the current mouse position or you could sample additional pixels near the event.\n\nThis approach handles layer order and weird shapes, but if your points are all tiny dots, a [quadtree approach](https://bl.ocks.org/veltman/1b43f61887e89c371f1c8c73341540a3) is probably faster and more effective.\n\nSee also: [Needles, Haystacks, and the Canvas API](https://bocoup.com/weblog/2d-picking-in-canvas), [WebGL Beginner's Guide - Picking](http://voxelent.com/html/beginners-guide/chapter_8/ch8_Picking.html)\n", "uid": "veltman_f539d97e922b918d47e2b2d1a8bcd2dd"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.line {\n  fill: none;\n  stroke: steelblue;\n  stroke-width: 1.5px;\n}\n\n.overlay {\n  fill: none;\n  pointer-events: all;\n}\n\n.focus circle {\n  fill: none;\n  stroke: steelblue;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 50, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse,\n    bisectDate = d3.bisector(function(d) { return d.date; }).left,\n    formatValue = d3.format(\",.2f\"),\n    formatCurrency = function(d) { return \"$\" + formatValue(d); };\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.close = +d.close;\n  });\n\n  data.sort(function(a, b) {\n    return a.date - b.date;\n  });\n\n  x.domain([data[0].date, data[data.length - 1].date]);\n  y.domain(d3.extent(data, function(d) { return d.close; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Price ($)\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  var focus = svg.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .style(\"display\", \"none\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  focus.append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dy\", \".35em\");\n\n  svg.append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"mouseover\", function() { focus.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        i = bisectDate(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n    focus.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.close) + \")\");\n    focus.select(\"text\").text(formatCurrency(d.close));\n  }\n});\n\n</script>\n", "description": "X-Value Mouseover", "created_at": "2012-10-16T22:47:58Z", "updated_at": "2016-02-09T01:41:48Z", "api": ["d3.time.format", "d3.bisector", "d3.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.mouse"], "readme": "A [line chart](../3883245) with mouseover so that you can read the *y*-value based on the closest *x*-value. The *x*-value is found using d3.mouse and scale.invert. The *y*-value is then found by bisecting the data.", "uid": "mbostock_3902569"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; background-color: white;}\n   \n  </style>\n</head>\n\n<body>\n  <a-scene>\n      <!-- Camera with customized cursor -->\n      <a-camera position=\"0 1.8 0\" cursor-visible=\"true\" cursor-scale=\"2\" cursor-color=\"#4CC3D9\" cursor-offset=\"2\" cursor-maxdistance=\"100\" cursor-opacity=\"0.5\" cursor-fuse=\"true\"></a-camera>\n      <a-light color=\"#da47da\" position=\"0 5 0\" type=\"ambient\"></a-light>\n    \t<a-entity camera look-controls wasd-controls></a-entity>\n    \t<a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n      <!-- Sky -->\n      <a-sky color=\"#c8f8e0\"></a-sky>\n  </a-scene>\n  <script>\n    \n    // fake data\n    var data = [ 10, 20, 30, 15, 25, 35, 40,\n                45, 50, 70, 100, 120, 130,\n               12, 18, 22, 29, 33, 44, 59, 200]\n    \n    // we scale the height of our bars using d3's linear scale\n    var hscale = d3.scale.linear()\n    \t.domain([0, d3.max(data)])\n    \t.range([0, 3])\n    \n    // we select the scene object just like an svg\n    var scene = d3.select(\"a-scene\")\n    \n    // we use d3's enter/update/exit pattern to draw and bind our dom elements\n    var bars = scene.selectAll(\"a-cube.bar\").data(data)\n    bars.enter().append(\"a-cube\").classed(\"bar\", true)\n    // we set attributes on our cubes to determine how they are rendered\n    bars.attr({\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 1 + hscale(d)/2;\n        // lets place the bars all around our camera\n        var radius = 5;\n        //var x = i - data.length/2;\n        var x = radius * Math.cos(i/data.length * 2 * Math.PI)\n        var z = radius * Math.sin(i/data.length * 2 * Math.PI)\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/data.length)*360;\n        return x + \" \" + y + \" \" + z\n      },\n      width: function(d) { return 0.5},\n      depth: function(d) { return 0.9},\n      height: function(d) { return hscale(d)},\n      opacity: function(d,i) { return 0.6 + (i/data.length) * 0.4},\n      //metalness: function(d,i) { return i/data.length}\n    })\n    .on(\"click\", function(d,i) {\n      console.log(\"click\", i,d)\n    })\n    .on(\"mouseenter\", function(d,i) {\n      // this event gets fired continuously as long as the cursor\n      // is over the element. we only want trigger our animation the first time\n      if(this.hovering) return;\n      console.log(\"hover\", i,d)\n      this.hovering = true;\n      d3.select(this).transition().duration(1000)\n      .attr({\n        metalness: 0.5,\n        width: 2\n      })\n    })\n    .on(\"mouseleave\", function(d,i) {\n      console.log(\"leave\",i,d)\n      this.hovering = false;\n      d3.select(this).transition()\n      .attr({\n        metalness: 0,\n        width: 0.5\n      })\n    })    \n    \n  </script>\n</body>\n", "description": "aframe + d3 test", "created_at": "2015-12-18T18:15:55Z", "updated_at": "2015-12-19T06:57:36Z", "api": ["d3.scale.linear", "d3.max", "d3.select"], "readme": "Testing out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org).\n\nSince AFrame works with DOM elements, you can use d3's selection API to generate and modify 3D elements, as well as handle \"mouse\" events (including the VR friendly \"fuse cursor\") as if it was SVG.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "enjalot_8be32e6f1f32920ba841"}, {"code": "<html>\n<head>\n  <title>D3 in Action Chapter 7 - Example 5</title>\n  <meta charset=\"utf-8\" />\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n<script src=\"https://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"https://d3js.org/queue.v1.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"https://d3js.org/colorbrewer.v1.min.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    height: 500px;\n    width: 500px;\n    border: 1px solid gray;\n  }\n  \n  .countries {\n    fill: red;\n    fill-opacity: .5;\n    stroke: black;\n    stroke-width: 1px;\n  }\n\n</style>\n<body>\n\n<div id=\"viz\">\n  <svg>\n  </svg>\n</div>\n<div id=\"controls\" />\n</body>\n  <footer>\n    \n<script>\n     queue()\n    .defer(d3.json, \"world.geojson\")\n    .defer(d3.csv, \"cities.csv\")\n    .await(function(error, file1, file2) { createMap(file1, file2); });\n    \n  function createMap(countries, cities) {\n    expData = countries;\n    width = 500;\n    height = 500;\n    projection = d3.geo.orthographic()\n    .scale(200)\n    .translate([width / 2, height / 2])\n    .clipAngle(90);\n    geoPath = d3.geo.path().projection(projection);\n    \n    var mapZoom = d3.behavior.zoom().translate(projection.translate()).scale(projection.scale()).on(\"zoom\", zoomed);\n    d3.select(\"svg\").call(mapZoom);\n    \n    var rotateScale = d3.scale.linear()\n    .domain([0, width])\n    .range([-180, 180]);\n    \n    d3.select(\"svg\").on(\"mousedown\", startRotating).on(\"mouseup\", stopRotating);\n    \n    function startRotating() {\n    d3.select(\"svg\").on(\"mousemove\", function() {\n  var p = d3.mouse(this);\n  projection.rotate([rotateScale(p[0]), 0]);\n  zoomed();\n});\n    }\n\n    function stopRotating() {\n      d3.select(\"svg\").on(\"mousemove\", null);\n}    \n    function zoomed() {\n      var currentRotate = projection.rotate()[0];\n      projection.scale(mapZoom.scale());\n      d3.selectAll(\"path.graticule\").attr(\"d\", geoPath);\n      d3.selectAll(\"path.countries\").attr(\"d\", geoPath);\n      \n      d3.selectAll(\"circle.cities\")\n      .attr(\"cx\", function(d) {return projection([d.y,d.x])[0]})\n      .attr(\"cy\", function(d) {return projection([d.y,d.x])[1]})\n      .style(\"display\", function(d) {return parseInt(d.y) + currentRotate < 90 && parseInt(d.y) + currentRotate > -90 ? \"block\" : \"none\"})\n    }\n    \n    function zoomButton(zoomDirection) {\n      if (zoomDirection == \"in\") {\n        var newZoom = mapZoom.scale() * 1.5;\n        var newX = ((mapZoom.translate()[0] - (width / 2)) * 1.5) + width / 2;\n        var newY = ((mapZoom.translate()[1] - (height / 2)) * 1.5) + height / 2;\n  }\n  else if (zoomDirection == \"out\") {\n      var newZoom = mapZoom.scale() * .75;\n      var newX = ((mapZoom.translate()[0] - (width / 2)) * .75) + width / 2;\n      var newY = ((mapZoom.translate()[1] - (height / 2)) * .75) + height / 2;    \n  }\n\n  mapZoom.scale(newZoom).translate([newX,newY])\n  zoomed();\n}\n\nd3.select(\"#controls\").append(\"button\").on(\"click\", function () {zoomButton(\"in\")}).html(\"Zoom In\");\nd3.select(\"#controls\").append(\"button\").on(\"click\", function () {zoomButton(\"out\")}).html(\"Zoom Out\");\n\n    featureSize = d3.extent(countries.features, function(d) {return geoPath.area(d)});\n    countryColor = d3.scale.quantize().domain(featureSize).range(colorbrewer.Reds[7]);\n\n    var graticule = d3.geo.graticule();\n    \n    d3.select(\"svg\").append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule line\")\n    .attr(\"d\", geoPath)\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", \"lightgray\")\n    .style(\"stroke-width\", \"1px\");\n\n    d3.select(\"svg\").selectAll(\"path.countries\").data(countries.features)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", geoPath)\n    .attr(\"class\", \"countries\")\n    .style(\"fill\", function(d) {return countryColor(geoPath.area(d))})\n    .style(\"stroke-width\", 1)\n    .style(\"stroke\", \"black\")\n    .style(\"opacity\", .5)\n    .on(\"mouseover\", centerBounds)\n    .on(\"mouseout\", clearCenterBounds)\n\n    d3.select(\"svg\").selectAll(\"circle\").data(cities)\n    .enter()\n    .append(\"circle\")\n    .attr(\"class\", \"cities\")\n    .style(\"fill\", \"black\")\n    .style(\"stroke\", \"white\")\n    .style(\"stroke-width\", 1)\n    .attr(\"r\", 3)\n    .attr(\"cx\", function(d) {return projection([d.y,d.x])[0]})\n    .attr(\"cy\", function(d) {return projection([d.y,d.x])[1]})\n    \n    function centerBounds(d,i) {\n      thisBounds = geoPath.bounds(d);\n      thisCenter = geoPath.centroid(d);\n      d3.select(\"svg\")\n      .append(\"rect\")\n      .attr(\"class\", \"bbox\")\n      .attr(\"x\", thisBounds[0][0])\n      .attr(\"y\", thisBounds[0][1])\n      .attr(\"width\", thisBounds[1][0] - thisBounds[0][0])\n      .attr(\"height\", thisBounds[1][1] - thisBounds[0][1])\n      .style(\"fill\", \"none\")\n      .style(\"stroke-dasharray\", \"5 5\")\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", 2)\n      .style(\"pointer-events\", \"none\")\n      \n      d3.select(\"svg\")\n      .append(\"circle\")\n      .attr(\"class\", \"centroid\")\n      .attr(\"r\", 5)\n      .attr(\"cx\", thisCenter[0]).attr(\"cy\", thisCenter[1])\n      .style(\"pointer-events\", \"none\")\n    }\n    function clearCenterBounds() {\n      d3.selectAll(\"circle.centroid\").remove();\n      d3.selectAll(\"rect.bbox\").remove();\n    }\n  }\n  \n</script>\n  </footer>\n\n</html>\n", "description": "Ch. 7 Fig. 12 - D3.js in Action", "created_at": "2014-11-18T04:59:09Z", "updated_at": "2016-03-17T16:23:29Z", "api": ["d3.geo.orthographic", "d3.geo.path", "d3.behavior.zoom", "d3.select", "d3.scale.linear", "d3.mouse", "d3.selectAll", "d3.extent", "d3.scale.quantize", "d3.geo.graticule"], "readme": "This is the code for Chapter 7, Figure 12 from [D3.js in Action](http://manning.com/meeks/) showing how to create a globe using the **d3.geo.orthographic()** projection as well as a modified zoom that changes the rotate of the projection based on mouse behavior.", "uid": "emeeks_b3db5feea1bd13611b20"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.line {\n  fill: none;\n  stroke: steelblue;\n  stroke-width: 1.5px;\n}\n\n.overlay {\n  fill: none;\n  pointer-events: all;\n}\n\n.focus circle {\n  fill: none;\n  stroke: steelblue;\n}\n\n</style>\n<body>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 50, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse,\n    bisectDate = d3.bisector(function(d) { return d.date; }).left,\n    formatValue = d3.format(\",.2f\"),\n    formatCurrency = function(d) { return \"$\" + formatValue(d); };\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.time.scale()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"top\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .y(function(d) { return y(d.date); })\n    .x(function(d) { return x(d.close); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.close = +d.close;\n  });\n\n  data.sort(function(a, b) {\n    return a.date - b.date;\n  });\n\n  y.domain([data[0].date, data[data.length - 1].date]);\n  x.domain(d3.extent(data, function(d) { return d.close; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Price ($)\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  var focus = svg.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .style(\"display\", \"none\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  focus.append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dy\", \".35em\");\n\n  svg.append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"mouseover\", function() { focus.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        i = bisectDate(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n    focus.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.close) + \")\");\n    focus.select(\"text\").text(formatCurrency(d.close));\n  }\n});\n\n</script>\n", "description": null, "created_at": "2015-07-19T18:40:26Z", "updated_at": "2015-08-29T14:25:18Z", "api": ["d3.time.format", "d3.bisector", "d3.format", "d3.scale.linear", "d3.time.scale", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.mouse"], "readme": "A [line chart](../3883245) with mouseover so that you can read the *y*-value based on the closest *x*-value. The *x*-value is found using d3.mouse and scale.invert. The *y*-value is then found by bisecting the data.", "uid": "trinary_b1a5f453c51231cd7bb5"}, {"code": "<html>\n<head>\n  <title>D3 in Action Chapter 7 - Example 5</title>\n  <meta charset=\"utf-8\" />\n<script src=\"http://d3js.org/d3.v3.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"http://d3js.org/queue.v1.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    height: 500px;\n    width: 500px;\n    border: 1px solid gray;\n  }\n  \n  .countries {\n    fill: red;\n    fill-opacity: .5;\n    stroke: black;\n    stroke-width: 1px;\n  }\n\n</style>\n<body>\n\n<div id=\"viz\">\n  <svg>\n  </svg>\n</div>\n<div id=\"controls\" />\n</body>\n  <footer>\n    \n<script>\n     queue()\n    .defer(d3.json, \"world.geojson\")\n    .defer(d3.csv, \"cities.csv\")\n    .await(function(error, file1, file2) { createMap(file1, file2); });\n    \n  function createMap(countries, cities) {\n    expData = countries;\n    width = 500;\n    height = 500;\n    projection = d3.geo.orthographic()\n    .scale(200)\n    .translate([width / 2, height / 2])\n    .clipAngle(90);\n    geoPath = d3.geo.path().projection(projection);\n    \n    var mapZoom = d3.behavior.zoom().translate(projection.translate()).scale(projection.scale()).on(\"zoom\", zoomed);\n    d3.select(\"svg\").call(mapZoom);\n    \n    var rotateScale = d3.scale.linear()\n    .domain([0, width])\n    .range([-180, 180]);\n    \n    d3.select(\"svg\").on(\"mousedown\", startRotating).on(\"mouseup\", stopRotating);\n    \n    function startRotating() {\n    d3.select(\"svg\").on(\"mousemove\", function() {\n  var p = d3.mouse(this);\n  projection.rotate([rotateScale(p[0]), 0]);\n  zoomed();\n});\n    }\n\n    function stopRotating() {\n      d3.select(\"svg\").on(\"mousemove\", null);\n}    \n    function zoomed() {\n      var currentRotate = projection.rotate()[0];\n      projection.scale(mapZoom.scale());\n      d3.selectAll(\"path.graticule\").attr(\"d\", geoPath);\n      d3.selectAll(\"path.countries\").attr(\"d\", geoPath);\n      \n      d3.selectAll(\"circle.cities\")\n      .attr(\"cx\", function(d) {return projection([d.y,d.x])[0]})\n      .attr(\"cy\", function(d) {return projection([d.y,d.x])[1]})\n      .style(\"display\", function(d) {return parseInt(d.y) + currentRotate < 90 && parseInt(d.y) + currentRotate > -90 ? \"block\" : \"none\"})\n    }\n    \n    function zoomButton(zoomDirection) {\n      if (zoomDirection == \"in\") {\n        var newZoom = mapZoom.scale() * 1.5;\n        var newX = ((mapZoom.translate()[0] - (width / 2)) * 1.5) + width / 2;\n        var newY = ((mapZoom.translate()[1] - (height / 2)) * 1.5) + height / 2;\n  }\n  else if (zoomDirection == \"out\") {\n      var newZoom = mapZoom.scale() * .75;\n      var newX = ((mapZoom.translate()[0] - (width / 2)) * .75) + width / 2;\n      var newY = ((mapZoom.translate()[1] - (height / 2)) * .75) + height / 2;    \n  }\n\n  mapZoom.scale(newZoom).translate([newX,newY])\n  zoomed();\n}\n\nd3.select(\"#controls\").append(\"button\").on(\"click\", function () {zoomButton(\"in\")}).html(\"Zoom In\");\nd3.select(\"#controls\").append(\"button\").on(\"click\", function () {zoomButton(\"out\")}).html(\"Zoom Out\");\n\n    featureSize = d3.extent(countries.features, function(d) {return geoPath.area(d)});\n    countryColor = d3.scale.quantize().domain(featureSize).range(colorbrewer.Reds[7]);\n\n    var graticule = d3.geo.graticule();\n    \n    d3.select(\"svg\").append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule line\")\n    .attr(\"d\", geoPath)\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", \"lightgray\")\n    .style(\"stroke-width\", \"1px\");\n\n    d3.select(\"svg\").selectAll(\"path.countries\").data(countries.features)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", geoPath)\n    .attr(\"class\", \"countries\")\n    .style(\"fill\", function(d) {return countryColor(geoPath.area(d))})\n    .style(\"stroke-width\", 1)\n    .style(\"stroke\", \"black\")\n    .style(\"opacity\", .5)\n    .on(\"mouseover\", centerBounds)\n    .on(\"mouseout\", clearCenterBounds)\n\n    d3.select(\"svg\").selectAll(\"circle\").data(cities)\n    .enter()\n    .append(\"circle\")\n    .attr(\"class\", \"cities\")\n    .style(\"fill\", \"black\")\n    .style(\"stroke\", \"white\")\n    .style(\"stroke-width\", 1)\n    .attr(\"r\", 3)\n    .attr(\"cx\", function(d) {return projection([d.y,d.x])[0]})\n    .attr(\"cy\", function(d) {return projection([d.y,d.x])[1]})\n    \n    function centerBounds(d,i) {\n      thisBounds = geoPath.bounds(d);\n      thisCenter = geoPath.centroid(d);\n      d3.select(\"svg\")\n      .append(\"rect\")\n      .attr(\"class\", \"bbox\")\n      .attr(\"x\", thisBounds[0][0])\n      .attr(\"y\", thisBounds[0][1])\n      .attr(\"width\", thisBounds[1][0] - thisBounds[0][0])\n      .attr(\"height\", thisBounds[1][1] - thisBounds[0][1])\n      .style(\"fill\", \"none\")\n      .style(\"stroke-dasharray\", \"5 5\")\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", 2)\n      .style(\"pointer-events\", \"none\")\n      \n      d3.select(\"svg\")\n      .append(\"circle\")\n      .attr(\"class\", \"centroid\")\n      .attr(\"r\", 5)\n      .attr(\"cx\", thisCenter[0]).attr(\"cy\", thisCenter[1])\n      .style(\"pointer-events\", \"none\")\n    }\n    function clearCenterBounds() {\n      d3.selectAll(\"circle.centroid\").remove();\n      d3.selectAll(\"rect.bbox\").remove();\n    }\n  }\n  \n</script>\n  </footer>\n\n</html>\n", "description": "Ch. 7 Fig. 12 - D3.js in Action", "created_at": "2015-11-08T19:01:52Z", "updated_at": "2015-11-08T19:01:53Z", "api": ["d3.geo.orthographic", "d3.geo.path", "d3.behavior.zoom", "d3.select", "d3.scale.linear", "d3.mouse", "d3.selectAll", "d3.extent", "d3.scale.quantize", "d3.geo.graticule"], "readme": "This is the code for Chapter 7, Figure 12 from [D3.js in Action](http://manning.com/meeks/) showing how to create a globe using the **d3.geo.orthographic()** projection as well as a modified zoom that changes the rotate of the projection based on mouse behavior.", "uid": "scottkildall_fae5e4b640e78b12fe14"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <script src=\"aframe-text-component.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; background-color: white;}\n   \n  </style>\n</head>\n\n\n<body>\n  <a-scene>\n      <!-- Camera with customized cursor -->\n      <a-camera position=\"0 1.8 0\" cursor-visible=\"true\" cursor-scale=\"2\" cursor-color=\"#4CC3D9\" cursor-offset=\"2\" cursor-maxdistance=\"100\" cursor-opacity=\"0.5\" cursor-fuse=\"true\"></a-camera>\n      <a-light color=\"#da47da\" position=\"0 5 0\" type=\"ambient\"></a-light>\n    \t<a-entity camera look-controls wasd-controls></a-entity>\n    \t<a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n    \n      <!-- Sky -->\n      <a-sky color=\"#ecfcf4\"></a-sky>\n  </a-scene>\n  <script>\n\n    \n    // fake data\n    var data = [ 10, 20, 30, 15, 25, 35, 40,\n                45, 50, 70, 100, 120, 130,\n               12, 18, 22, 29, 33, 44, 59, 200]\n    \n    // we scale the height of our bars using d3's linear scale\n    var hscale = d3.scale.linear()\n    \t.domain([0, d3.max(data)])\n    \t.range([0, 3])\n    \n    // we select the scene object just like an svg\n    var scene = d3.select(\"a-scene\")\n    \n    // we use d3's enter/update/exit pattern to draw and bind our dom elements\n    var bars = scene.selectAll(\"a-cube.bar\").data(data)\n    bars.enter().append(\"a-cube\").classed(\"bar\", true)\n\n    // we set attributes on our cubes to determine how they are rendered\n    bars.attr({\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 1 + hscale(d)/2;\n        // lets place the bars all around our camera\n        var radius = 5;\n        var theta = i/data.length * 2 * Math.PI - 3/4*Math.PI\n        var x = radius * Math.cos(theta)\n        var z = radius * Math.sin(theta)\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/data.length)*360 - 45;\n        return x + \" \" + y + \" \" + z\n      },\n      width: function(d) { return 0.5},\n      depth: function(d) { return 0.9},\n      height: function(d) { return hscale(d)},\n      opacity: function(d,i) { return 0.6 + (i/data.length) * 0.4},\n      //metalness: function(d,i) { return i/data.length}\n    })\n    .on(\"click\", function(d,i) {\n      console.log(\"click\", i,d)\n    })\n    .on(\"mouseenter\", function(d,i) {\n      // this event gets fired continuously as long as the cursor\n      // is over the element. we only want trigger our animation the first time\n      if(this.hovering) return;\n      console.log(\"hover\", i,d)\n      this.hovering = true;\n      d3.select(this).transition().duration(1000)\n      .attr({\n        metalness: 0.5,\n        width: 2\n      })\n    })\n    .on(\"mouseleave\", function(d,i) {\n      console.log(\"leave\",i,d)\n      this.hovering = false;\n      d3.select(this).transition()\n      .attr({\n        metalness: 0,\n        width: 0.5\n      })\n    }) \n    \n    \n    var labels = scene.selectAll(\"a-entity.label\").data(data)\n    labels.enter().append(\"a-entity\").classed(\"label\", true)\n    .attr({\n      text: function(d,i){  return \"text: \" + i },\n      material: \"color: #000\"\n    })\n    // we set attributes on our cubes to determine how they are rendered\n    labels.attr({\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 0.3;\n        // lets place the bars all around our camera\n        var radius = 5;\n        var theta = i/data.length * 2 * Math.PI - 3/4*Math.PI - 0.07\n        var x = radius * Math.cos(theta)\n        var z = radius * Math.sin(theta)\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = +45 -(i/data.length)*360;\n        return x + \" \" + y + \" \" + z\n      },\n    })\n    \n    \n    \n  </script>\n</body>\n", "description": "aframe + d3 test: text labels", "created_at": "2015-12-21T19:29:07Z", "updated_at": "2016-01-23T18:41:57Z", "api": ["d3.scale.linear", "d3.max", "d3.select"], "readme": "Testing out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org). use **WASD** keys to \"walk\" around the space.\n\nSince AFrame works with DOM elements, you can use d3's selection API to generate and modify 3D elements, as well as handle \"mouse\" events (including the VR friendly \"fuse cursor\") as if it was SVG.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/8be32e6f1f32920ba841'>aframe + d3 test</a>", "uid": "enjalot_1fd196cd99f8d58a56d3"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Zoom by Rectangle</title>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.1\"></script>\n<style>\n\nbody {\n  font-family: sans-serif;\n}\n\n.noselect {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\nsvg {\n  font: 10px sans-serif;\n  shape-rendering: crispEdges;\n}\n\nrect {\n  fill: #ddd;\n}\n\nrect.zoom {\n  stroke: steelblue;\n  fill-opacity: 0.5;\n}\n\n.axis path, .axis line {\n  fill: none;\n  stroke: #fff;\n}\n\n</style>\n<p><label for=\"zoom-rect\"><input type=\"checkbox\" id=\"zoom-rect\"> zoom by rectangle</label>\n<script>\n\nvar margin = {top: 0, right: 12, bottom: 12, left: 36},\n    width = 960 - margin.left - margin.right,\n    height = 430 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .domain([-width / 2, width / 2])\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .domain([-height / 2, height / 2])\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tickSize(-height);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(5)\n    .tickSize(-width);\n\nvar zoom = d3.behavior.zoom().x(x).y(y).on(\"zoom\", refresh);\n\nvar zoomRect = false;\n\nd3.select(\"#zoom-rect\").on(\"change\", function() {\n      zoomRect = this.checked;\n    });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    .call(zoom)\n  .append(\"g\")\n    .on(\"mousedown\", function() {\n      if (!zoomRect) return;\n      var e = this,\n          origin = d3.mouse(e),\n          rect = svg.append(\"rect\").attr(\"class\", \"zoom\");\n      d3.select(\"body\").classed(\"noselect\", true);\n      origin[0] = Math.max(0, Math.min(width, origin[0]));\n      origin[1] = Math.max(0, Math.min(height, origin[1]));\n      d3.select(window)\n          .on(\"mousemove.zoomRect\", function() {\n            var m = d3.mouse(e);\n            m[0] = Math.max(0, Math.min(width, m[0]));\n            m[1] = Math.max(0, Math.min(height, m[1]));\n            rect.attr(\"x\", Math.min(origin[0], m[0]))\n                .attr(\"y\", Math.min(origin[1], m[1]))\n                .attr(\"width\", Math.abs(m[0] - origin[0]))\n                .attr(\"height\", Math.abs(m[1] - origin[1]));\n          })\n          .on(\"mouseup.zoomRect\", function() {\n            d3.select(window).on(\"mousemove.zoomRect\", null).on(\"mouseup.zoomRect\", null);\n            d3.select(\"body\").classed(\"noselect\", false);\n            var m = d3.mouse(e);\n            m[0] = Math.max(0, Math.min(width, m[0]));\n            m[1] = Math.max(0, Math.min(height, m[1]));\n            if (m[0] !== origin[0] && m[1] !== origin[1]) {\n              zoom.x(x.domain([origin[0], m[0]].map(x.invert).sort()))\n                  .y(y.domain([origin[1], m[1]].map(y.invert).sort()));\n            }\n            rect.remove();\n            refresh();\n          }, true);\n      d3.event.stopPropagation();\n    });\n\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\nfunction refresh() {\n  svg.select(\".x.axis\").call(xAxis);\n  svg.select(\".y.axis\").call(yAxis);\n}\n\n</script>\n", "description": "Zoom by Rectangle", "created_at": "2012-09-10T09:34:20Z", "updated_at": "2016-03-26T06:34:42Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.behavior.zoom", "d3.select", "d3.mouse", "d3.event.stopPropagation"], "readme": "An example of setting x- and y-scale domains (zooming) by selecting a\nrectangular region using the mouse.  The original question required that it\nwork in tandem with `d3.behavior.zoom` for panning, hence the checkbox for\nswitching on the \u201czoom by rectangle\u201d mode.\n", "uid": "jasondavies_3689931"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<link href='http://fonts.googleapis.com/css?family=Oswald:400,700,300' rel='stylesheet' type='text/css'>\n<style>\n\n.node {\n  stroke: none;\n  stroke-width: 1px;\n  fill: #00aeef;\n}\n\n.link {\n  stroke: #5d6263;\n  stroke-opacity: .5;\n}\n\n.label {\n  fill: #00447c;\n  font-family: Oswald;\n  cursor: default;\n  stroke: #ffffff;\n  stroke-width: 0.7;\n  font-weight: 700;\n  text-anchor: middle;\n  alignment-baseline: middle;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 600,\nheight = 600;\n\n// var color = d3.scale.category20();\n\nvar force = d3.layout.force()\n.charge(-120)\n.linkDistance(350)\n.size([width, height]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n.attr(\"width\", width)\n.attr(\"height\", height);\n\nd3.json(\"data.json\", function(error, graph) {\n  force\n  .nodes(graph.nodes)\n  .links(graph.links)\n  .start();\n\n  var link = svg.selectAll(\".link\")\n  .data(graph.links)\n  .enter().append(\"line\")\n  .attr(\"class\", \"link\")\n  .style(\"stroke-width\", function(d) { return Math.sqrt(d.weight); });\n\n  // Create the groups under svg\n  var gnodes = svg.selectAll('g.gnode')\n  .data(graph.nodes)\n  .enter()\n  .append('g')\n  .classed('gnode', true)\n  .on(\"mouseover\", mouseover)\n  .on(\"mouseout\", mouseout)\n  .call(force.drag);\n\n  var node = gnodes.append(\"circle\")\n  .attr(\"class\", \"node\")\n  .attr(\"r\", 15)\n  //.style(\"fill\", function(d) { return color(d.group); })\n  ;\n\n  // Append the labels to each group\n  var labels = gnodes.append(\"text\")\n  .text(function(d) { return d.id; })\n  .attr(\"class\", \"label\");\n\n  // node.append(\"title\")\n  // .text(function(d) { return d.id; });\n\n  force.on(\"tick\", function() {\n    link.attr(\"x1\", function(d) { return d.source.x; })\n    .attr(\"y1\", function(d) { return d.source.y; })\n    .attr(\"x2\", function(d) { return d.target.x; })\n    .attr(\"y2\", function(d) { return d.target.y; });\n\n    // Translate the groups\n    gnodes.attr(\"transform\", function(d) {\n      return 'translate(' + [d.x, d.y] + ')';\n    });\n\n    gnodes.attr(\"cx\", function(d) { return d.x; })\n    .attr(\"cy\", function(d) { return d.y; });\n  });\n\n\n});\n\nfunction mouseover() {\n  d3.select(this).select(\"circle\").transition()\n  .duration(350)\n  .attr(\"r\", 20);\n}\n\nfunction mouseout() {\n  d3.select(this).select(\"circle\").transition()\n  .duration(350)\n  .attr(\"r\" , 15);\n}\n\n</script>", "description": "Force-Directed Graph", "created_at": "2014-03-31T23:44:18Z", "updated_at": "2015-08-29T13:57:58Z", "api": ["d3.scale.category20", "d3.layout.force", "d3.select", "d3.json"], "readme": "This simple force-directed graph shows a small network of 12 people as nodes. Edges are weigted.\n\nData created using [NetworkX](https://networkx.github.io/), and exported using [node_link_data](https://networkx.github.io/documentation/latest/reference/readwrite.json_graph.html) with default attrs.\n\nVisualization based on Mike Bostock's [Force-Directed Graph](/mbostock/4062045), with added labels and mouse-over resizing of nodes. [Label-circle grouping idea by Pablo Navarro seen on Stack Overflow](http://stackoverflow.com/questions/18164230/add-text-label-to-d3-node-in-force-directed-graph-and-resize-on-hover), and mouse-over resizing of nodes seen in a [Fiddle by Aditya](http://jsfiddle.net/draditya91/RRUzZ/3/).", "uid": "renecnielsen_9904859"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.bar {\n  fill: steelblue;\n}\n\n.bar:hover {\n  fill: brown;\n}\n\n.axis {\n  font: 9px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path {\n  stroke:black;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 1100 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .4);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"./data_vsvzs.csv\", type, function(error, data) {\n  x.domain(data.map(function(d) { return d.country; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Centenarians per 100,000 of Population\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.country); })\n      .attr(\"width\", x.rangeBand()+ 5)\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); })\n\n});\n\nfunction type(d) {\n  d.frequency = +d.number_per_100_000_of_the_population; //makin it a num\n  return d;\n}\n\n\n</script>\n\n", "description": "Column chart w/ bar labels - Centenarians per 100,000 people by country", "created_at": "2014-02-23T23:51:43Z", "updated_at": "2015-08-29T13:56:41Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.max"], "readme": "#  Centenarians per 100,000 People by Country\n\n\nCountries with the requisite data to calculate approximate centenarians per 100,000 people according to the Guardian Datablog's sources. See: http://www.theguardian.com/news/datablog/2013/sep/27/super-old-how-many-centena and make a better visualization!\n\nThis was my first d3.js usage of Tool tips. Keep your pointer/mouse thing over a bar to check em out.\n\n", "uid": "mpmckenna8_9179084"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.line {\n  fill: none;\n  stroke: steelblue;\n  stroke-width: 1.5px;\n}\n\n.overlay {\n  fill: none;\n  pointer-events: all;\n}\n\n.focus {\n  opacity: 0.7;\n}\n\n.focus circle {\n  fill: none;\n  stroke: black;\n}\n\n.focus line {\n  fill: none;\n  stroke: black;\n  stroke-width: 1.5px;\n  stroke-dasharray: 3 3;\n}\n\n\n</style>\n<body>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 50, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse,\n    bisectDate = d3.bisector(function(d) { return d.date; }).left,\n    formatValue = d3.format(\",.2f\"),\n    formatCurrency = function(d) { return \"$\" + formatValue(d); };\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.close = +d.close;\n  });\n\n  data.sort(function(a, b) {\n    return a.date - b.date;\n  });\n\n  x.domain([data[0].date, data[data.length - 1].date]);\n  y.domain(d3.extent(data, function(d) { return d.close; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Price ($)\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  var focus = svg.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .style(\"display\", \"none\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  focus.append(\"line\")\n      .classed(\"x\", true)\n\n  focus.append(\"line\")\n      .classed(\"y\", true)\n\n  focus.append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dy\", \".35em\");\n\n  svg.append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"mouseover\", function() { focus.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        i = bisectDate(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n    focus.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.close) + \")\");\n    focus.select(\"line.x\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", -x(d.date))\n        .attr(\"y1\", 0)\n        .attr(\"y2\", 0)\n    focus.select(\"line.y\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", 0)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", height - y(d.close))\n    focus.select(\"text\").text(formatCurrency(d.close));\n  }\n});\n\n</script>\n", "description": "X-Value Mouseover with Droplines", "created_at": "2015-09-26T22:43:39Z", "updated_at": "2016-03-12T22:47:43Z", "api": ["d3.time.format", "d3.bisector", "d3.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.mouse"], "readme": "forked this [bl.ock](http://bl.ocks.org/mbostock/3902569) and added droplines from the focus point on the series line to the x and y axes.\n\n---\n\nA [line chart](../3883245) with mouseover so that you can read the *y*-value based on the closest *x*-value. The *x*-value is found using d3.mouse and scale.invert. The *y*-value is then found by bisecting the data.", "uid": "micahstubbs_d9f3cd0d926af7a5a1a8"}, {"code": "<html>\n<head>\n  <title>D3 in Action Chapter 7 - Example 5</title>\n  <meta charset=\"utf-8\" />\n<script src=\"http://d3js.org/d3.v3.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"http://d3js.org/queue.v1.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    border: 1px solid gray;\n  }\n  \n  .countries {\n    fill: red;\n    fill-opacity: .5;\n    stroke: black;\n    stroke-width: 1px;\n  }\n\n</style>\n<body>\n\n<div id=\"viz\">\n</div>\n<div id=\"controls\" />\n</body>\n  <footer>\n    \n<script>\n  \n  var width = 800;\n  var height = 500;\n  d3.select(\"#viz\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n  \n     queue()\n    .defer(d3.json, \"world.geojson\")\n    .defer(d3.csv, \"cities.csv\")\n    .await(function(error, file1, file2) { createMap(file1, file2); });\n    \n  function createMap(countries, cities) {\n    expData = countries;\n    projection = d3.geo.orthographic()\n    .scale((Math.min(width,height) / 2))\n    .translate([width / 2, height / 2])\n    .clipAngle(90);\n    geoPath = d3.geo.path().projection(projection);\n    \n    var mapZoom = d3.behavior.zoom().translate(projection.translate()).scale(projection.scale()).on(\"zoom\", zoomed);\n    \n    d3.select(\"svg\").call(mapZoom);\n    \n    var rotateScale = d3.scale.linear()\n    .domain([0, width])\n    .range([0, 180]);\n    var currentRotation = projection.rotate();\n    \n    d3.select(\"svg\").on(\"mousedown\", startRotating).on(\"mouseup\", stopRotating);\n    \n    function startRotating() {\n      var pStart = d3.mouse(this);\n      var currentLat = (currentRotation[1] + 360) % 360;\n      var xFactor = (currentLat > 90 && currentLat < 270) ? -1.0 : 1.0;\n      d3.select(\"svg\").on(\"mousemove\", function() {\n        var p = d3.mouse(this);\n        projection.rotate([\n          currentRotation[0] + xFactor * (rotateScale(p[0] - pStart[0])),\n          currentRotation[1] + rotateScale(pStart[1] - p[1])]);\n        zoomed();\n      });\n    }\n\n    function stopRotating() {\n      currentRotation = projection.rotate();\n      console.log(currentRotation);\n      d3.select(\"svg\").on(\"mousemove\", null);\n\t\t}    \n    function zoomed() {\n      var currentRotate = projection.rotate()[0];\n      projection.scale(mapZoom.scale());\n      d3.selectAll(\"path.graticule\").attr(\"d\", geoPath);\n      d3.selectAll(\"path.countries\").attr(\"d\", geoPath);\n    }\n    \n    function zoomButton(zoomDirection) {\n      if (zoomDirection == \"in\") {\n        var newZoom = mapZoom.scale() * 1.5;\n        var newX = ((mapZoom.translate()[0] - (width / 2)) * 1.5) + width / 2;\n        var newY = ((mapZoom.translate()[1] - (height / 2)) * 1.5) + height / 2;\n      }\n      else if (zoomDirection == \"out\") {\n        var newZoom = mapZoom.scale() * .75;\n        var newX = ((mapZoom.translate()[0] - (width / 2)) * .75) + width / 2;\n        var newY = ((mapZoom.translate()[1] - (height / 2)) * .75) + height / 2;    \n      }\n\n      mapZoom.scale(newZoom).translate([newX,newY])\n      zoomed();\n    }\n}\n\n</script>\n  </footer>\n\n</html>\n", "description": "Globe pan", "created_at": "2015-11-08T19:01:09Z", "updated_at": "2015-11-08T19:48:51Z", "api": ["d3.select", "d3.geo.orthographic", "d3.geo.path", "d3.behavior.zoom", "d3.scale.linear", "d3.mouse", "d3.selectAll"], "readme": "This is the code for Chapter 7, Figure 12 from [D3.js in Action](http://manning.com/meeks/) showing how to create a globe using the **d3.geo.orthographic()** projection as well as a modified zoom that changes the rotate of the projection based on mouse behavior.", "uid": "everett-wetchler_cfbdd529c138f98f65c4"}, {"code": "<html>\n<head>\n  <title>D3 in Action Chapter 7 - Example 5</title>\n  <meta charset=\"utf-8\" />\n<script src=\"http://d3js.org/d3.v3.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"http://d3js.org/queue.v1.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    border: 1px solid gray;\n  }\n  \n  .countries {\n    fill: red;\n    fill-opacity: .5;\n    stroke: black;\n    stroke-width: 1px;\n  }\n\n</style>\n<body>\n\n<div id=\"viz\">\n</div>\n<div id=\"controls\" />\n</body>\n  <footer>\n    \n<script>\n  \n  var width = 800;\n  var height = 500;\n  d3.select(\"#viz\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n  \n     queue()\n    .defer(d3.json, \"world.geojson\")\n    .defer(d3.csv, \"cities.csv\")\n    .await(function(error, file1, file2) { createMap(file1, file2); });\n    \n  function createMap(countries, cities) {\n    expData = countries;\n    projection = d3.geo.orthographic()\n    .scale((Math.min(width,height) / 2))\n    .translate([width / 2, height / 2])\n    .clipAngle(90);\n    geoPath = d3.geo.path().projection(projection);\n    \n    var mapZoom = d3.behavior.zoom().translate(projection.translate()).scale(projection.scale()).on(\"zoom\", zoomed);\n    d3.select(\"svg\").call(mapZoom);\n    \n    var rotateScale = d3.scale.linear()\n    .domain([0, width])\n    .range([0, 180]);\n    var currentRotation = projection.rotate();\n    \n    d3.select(\"svg\").on(\"mousedown\", startRotating).on(\"mouseup\", stopRotating);\n    \n    function startRotating() {\n      var pStart = d3.mouse(this);\n      var currentLat = (currentRotation[1] + 360) % 360;\n      var xFactor = (currentLat > 90 && currentLat < 270) ? -1.0 : 1.0;\n      d3.select(\"svg\").on(\"mousemove\", function() {\n        var p = d3.mouse(this);\n        projection.rotate([\n          currentRotation[0] + xFactor * (rotateScale(p[0] - pStart[0])),\n          currentRotation[1] + rotateScale(pStart[1] - p[1])]);\n        zoomed();\n      });\n    }\n\n    function stopRotating() {\n      currentRotation = projection.rotate();\n      console.log(currentRotation);\n      d3.select(\"svg\").on(\"mousemove\", null);\n}    \n    function zoomed() {\n      var currentRotate = projection.rotate()[0];\n      projection.scale(mapZoom.scale());\n      d3.selectAll(\"path.graticule\").attr(\"d\", geoPath);\n      d3.selectAll(\"path.countries\").attr(\"d\", geoPath);\n      \n      d3.selectAll(\"circle.cities\")\n      .attr(\"cx\", function(d) {return projection([d.y,d.x])[0]})\n      .attr(\"cy\", function(d) {return projection([d.y,d.x])[1]})\n      .style(\"display\", function(d) {return parseInt(d.y) + currentRotate < 90 && parseInt(d.y) + currentRotate > -90 ? \"block\" : \"none\"})\n    }\n    \n    function zoomButton(zoomDirection) {\n      if (zoomDirection == \"in\") {\n        var newZoom = mapZoom.scale() * 1.5;\n        var newX = ((mapZoom.translate()[0] - (width / 2)) * 1.5) + width / 2;\n        var newY = ((mapZoom.translate()[1] - (height / 2)) * 1.5) + height / 2;\n  }\n  else if (zoomDirection == \"out\") {\n      var newZoom = mapZoom.scale() * .75;\n      var newX = ((mapZoom.translate()[0] - (width / 2)) * .75) + width / 2;\n      var newY = ((mapZoom.translate()[1] - (height / 2)) * .75) + height / 2;    \n  }\n\n  mapZoom.scale(newZoom).translate([newX,newY])\n  zoomed();\n}\n\nd3.select(\"#controls\").append(\"button\").on(\"click\", function () {zoomButton(\"in\")}).html(\"Zoom In\");\nd3.select(\"#controls\").append(\"button\").on(\"click\", function () {zoomButton(\"out\")}).html(\"Zoom Out\");\n\n    featureSize = d3.extent(countries.features, function(d) {return geoPath.area(d)});\n    countryColor = d3.scale.quantize().domain(featureSize).range(colorbrewer.Reds[7]);\n\n    var graticule = d3.geo.graticule();\n    \n    d3.select(\"svg\").append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule line\")\n    .attr(\"d\", geoPath)\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", \"lightgray\")\n    .style(\"stroke-width\", \"1px\");\n\n    d3.select(\"svg\").selectAll(\"path.countries\").data(countries.features)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", geoPath)\n    .attr(\"class\", \"countries\")\n    .style(\"fill\", function(d) {return countryColor(geoPath.area(d))})\n    .style(\"stroke-width\", 1)\n    .style(\"stroke\", \"black\")\n    .style(\"opacity\", .5)\n    .on(\"mouseover\", centerBounds)\n    .on(\"mouseout\", clearCenterBounds)\n\n    d3.select(\"svg\").selectAll(\"circle\").data(cities)\n    .enter()\n    .append(\"circle\")\n    .attr(\"class\", \"cities\")\n    .style(\"fill\", \"black\")\n    .style(\"stroke\", \"white\")\n    .style(\"stroke-width\", 1)\n    .attr(\"r\", 3)\n    .attr(\"cx\", function(d) {return projection([d.y,d.x])[0]})\n    .attr(\"cy\", function(d) {return projection([d.y,d.x])[1]})\n    \n    function centerBounds(d,i) {\n      thisBounds = geoPath.bounds(d);\n      thisCenter = geoPath.centroid(d);\n      d3.select(\"svg\")\n      .append(\"rect\")\n      .attr(\"class\", \"bbox\")\n      .attr(\"x\", thisBounds[0][0])\n      .attr(\"y\", thisBounds[0][1])\n      .attr(\"width\", thisBounds[1][0] - thisBounds[0][0])\n      .attr(\"height\", thisBounds[1][1] - thisBounds[0][1])\n      .style(\"fill\", \"none\")\n      .style(\"stroke-dasharray\", \"5 5\")\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", 2)\n      .style(\"pointer-events\", \"none\")\n      \n      d3.select(\"svg\")\n      .append(\"circle\")\n      .attr(\"class\", \"centroid\")\n      .attr(\"r\", 5)\n      .attr(\"cx\", thisCenter[0]).attr(\"cy\", thisCenter[1])\n      .style(\"pointer-events\", \"none\")\n    }\n    function clearCenterBounds() {\n      d3.selectAll(\"circle.centroid\").remove();\n      d3.selectAll(\"rect.bbox\").remove();\n    }\n  }\n  \n</script>\n  </footer>\n\n</html>\n", "description": "Globe pan 2", "created_at": "2015-11-08T19:45:08Z", "updated_at": "2015-11-08T19:45:16Z", "api": ["d3.select", "d3.geo.orthographic", "d3.geo.path", "d3.behavior.zoom", "d3.scale.linear", "d3.mouse", "d3.selectAll", "d3.extent", "d3.scale.quantize", "d3.geo.graticule"], "readme": "This is the code for Chapter 7, Figure 12 from [D3.js in Action](http://manning.com/meeks/) showing how to create a globe using the **d3.geo.orthographic()** projection as well as a modified zoom that changes the rotate of the projection based on mouse behavior.", "uid": "everett-wetchler_b9a20341f395466b0b5e"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <script src=\"aframe-text-component.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; background-color: white;\n    }\n    .a-canvas {\n      height: calc(100% - 120px) !important;\n    }\n    .a-enter-vr {\n      bottom: 140px;\n    }\n    #hud {\n      position: absolute;\n      bottom: 0;\n      height: 120px;\n      width: 100%;\n    }\n    svg#path2d {\n      position:absolute;\n      left:0;\n      bottom: 0;\n      height: 120px;\n      width: 300px;\n    }\n  </style>\n</head>\n\n\n<body>\n  <div id=\"scene\">\n  <a-scene>\n      <!-- Camera with customized cursor -->\n      \n      <a-light color=\"#da47da\" position=\"0 5 0\" type=\"ambient\"></a-light>\n      <a-entity id=\"vehicle\">\n        <a-entity id=\"camera\" camera look-controls wasd-controls></a-entity>\n      </a-entity>\n    \t<a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n    \n      <!-- Sky -->\n      <a-sky color=\"#ecfcf4\"></a-sky>\n  </a-scene>\n  </div>\n  <div id=\"hud\">\n    <svg id=\"path2d\"><svg>\n  </div>\n    \n  <script>\n    // fake data\n    var data = [ 10, 20, 30, 15, 25, 35, 40,\n                45, 50, 70, 100, 120, 130,\n               12, 18, 22, 29, 33, 44, 59, 200, 10]\n    \n    // we scale the height of our bars using d3's linear scale\n    var height3d = 3;\n    var hscale = d3.scale.linear()\n    \t.domain([0, d3.max(data)])\n    \t.range([0, height3d])\n    \n    function xz(i) {\n        // lets place the bars all around our camera\n        var radius = 5;\n        var theta = i/data.length * 2 * Math.PI - 3/4*Math.PI\n        var x = radius * Math.cos(theta)\n        var z = radius * Math.sin(theta)\n        return {x:x,  z:z}\n    }\n    \n    var toDomain = d3.scale.linear()\n        .domain([0, 1]).range(hscale.domain())\n    \n    var camera = d3.select(\"#vehicle\")\n    .attr(\"position\", \"0 1 0\")\n    .attr(\"rotation\", \"0 45 0\")\n    \n    // 2d line\n    var height2d = 100;\n    var width2d = 300;\n    \n    var yscale = d3.scale.linear()\n    .domain([0, d3.max(data)])\n    .range([height2d,0])\n\t\tvar line = d3.svg.line()\n    .x(function(d,i) {\n      return width2d * i/data.length;\n    })\n    .y(function(d,i) {\n      return yscale(d);\n    })\n    //.interpolate(\"basis\")\n    .interpolate(\"cardinal\")\n    \n    var svg = d3.select(\"svg#path2d\")\n    \n    svg.selectAll(\"rect.bar2d\").data(data)\n    .enter().append(\"rect\").classed(\"bar2d\", true)\n    .attr({\n      x: function(d,i) { return i/data.length * width2d - width2d/data.length/4},\n      y: function(d,i) { \n        return yscale(d) \n      },\n      width: width2d/data.length/2,\n      height: function(d,i) { \n        return height2d - yscale(d)\n      },\n      \"fill-opacity\": 0.1\n    })\n    var path2d = svg.append(\"path\").attr({\n      d: line(data),\n      fill: \"none\",\n      stroke: \"#111\",\n      \"stroke-width\": 3\n    })\n    \n    var playHead = svg.append(\"line\")\n    .classed(\"play-head\", true)\n    .attr({\n      stroke: \"#f11\",\n      y1: 0,\n      y2: height2d,\n    })\n    \n    var path = path2d.node()\n    var totalLength = path.getTotalLength();\n    \n    var trackn2d = 200;\n    var track2ddata = d3.range(trackn2d).map(function(d,i) {\n      var t = i/trackn2d;\n      var p = path.getPointAtLength(t*totalLength)\n      var x = p.x //t * width2d - width2d/trackn2d/4\n      var y = 1 + height2d - p.y/height2d * height2d;\n      \n      return {x: x, y: y}\n    })\n    svg.selectAll(\"rect.track2d\").data(track2ddata)\n    .enter().append(\"rect\").classed(\"track2d\", true)\n    .attr({\n      x: function(d,i) { return d.x},\n      y: function(d,i) { \n        return height2d - d.y\n      },\n      width: width2d/trackn2d/2,\n      height: function(d,i) { \n        return d.y\n      },\n      \"fill-opacity\": 0.3,\n      fill: \"blue\"\n    })\n    \n    // we select the scene object just like an svg\n    var scene = d3.select(\"a-scene\")\n    \n    // visualize the camera tracks\n    var track = function(t) {\n      //var y = 1.5 + hscale(data[Math.round(t * data.length)])\n      var p2d = path.getPointAtLength(t*totalLength)\n      var y = 1.3 + height3d -  p2d.y/height2d * height3d;\n\t\t\t//console.log(t, t*totalLength, y)\n      var tx = p2d.x/width2d\n      var p = xz(tx*data.length);\n      return {x: p.x, y: y, z: p.z}\n    }\n    \n    var tracknum = 200;\n    var trackdata = d3.range(tracknum).map(function(i) {\n      var p = track(i/tracknum)\n      return p\n    })\n    var tracks = scene.selectAll(\"a-cube.track\").data(trackdata)\n    tracks.enter().append(\"a-cube\").classed(\"track\", true)\n    tracks.attr({\n\t\t\tposition: function(d,i) { return d.x + \" \" + d.y + \" \" + d.z},\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/tracknum)*360;\n        return x + \" \" + y + \" \" + z\n      },\n      width: 0.05,\n      height: 0.05,\n      depth: 0.5,\n      opacity: 0.1\n    })\n    ////\n    \n\n    d3.timer(function(elapsed) {\n\n      dt = (elapsed * 0.0005 % 10) / 10;\n      var p = track(dt);\n      //var p = xz(dt*data.length)\n      //var y = 1.5 + hscale(data[Math.floor(dt * data.length)])\n      //var y = 1.5 + path.getPointAtLength(dt*totalLength).y/100;\n      p.y += 0.5;\n      \n      var r = {\n        x: 0,\n        y: -dt*360 - 45,\n        z: 0\n      }\n      camera.attr({\n        position: p.x + \" \" + p.y + \" \" + p.z,\n        rotation: r.x + \" \" + r.y + \" \" + r.z\n      })\n      \n      playHead.attr({\n        x1: dt*100,\n        x2: dt*100,\n        y1: 0,\n        y2: 100\n      })\n    })\n\n    \n    // we use d3's enter/update/exit pattern to draw and bind our dom elements\n    var bars = scene.selectAll(\"a-cube.bar\").data(data)\n    bars.enter().append(\"a-cube\").classed(\"bar\", true)\n\n    // we set attributes on our cubes to determine how they are rendered\n    bars.attr({\n      position: function(d,i) {\n        var y = 1 + hscale(d)/2;\n        var p = xz(i);\n        return p.x + \" \" + y + \" \" + p.z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/data.length)*360 - 45;\n        return x + \" \" + y + \" \" + z\n      },\n      width: function(d) { return 0.5},\n      depth: function(d) { return 0.9},\n      height: function(d) { return hscale(d)},\n      opacity: function(d,i) { return 0.6 + (i/data.length) * 0.4},\n      //metalness: function(d,i) { return i/data.length}\n    })\n    .on(\"click\", function(d,i) {\n      console.log(\"click\", i,d)\n    })\n    .on(\"mouseenter\", function(d,i) {\n      // this event gets fired continuously as long as the cursor\n      // is over the element. we only want trigger our animation the first time\n      if(this.hovering) return;\n      console.log(\"hover\", i,d)\n      this.hovering = true;\n      d3.select(this).transition().duration(1000)\n      .attr({\n        metalness: 0.5,\n        width: 2\n      })\n    })\n    .on(\"mouseleave\", function(d,i) {\n      console.log(\"leave\",i,d)\n      this.hovering = false;\n      d3.select(this).transition()\n      .attr({\n        metalness: 0,\n        width: 0.5\n      })\n    }) \n    \n    \n    var labels = scene.selectAll(\"a-entity.label\").data(data)\n    labels.enter().append(\"a-entity\").classed(\"label\", true)\n    .attr({\n      text: function(d,i){  return \"text: \" + i },\n      material: \"color: #000\",\n      size: 3\n    })\n    labels.attr({\n\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 0.3;\n        // lets place the bars all around our camera\n        var radius = 5;\n        var theta = i/data.length * 2 * Math.PI - 3/4*Math.PI - 0.07\n        var x = radius * Math.cos(theta)\n        var z = radius * Math.sin(theta)\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = +45 -(i/data.length)*360;\n        return x + \" \" + y + \" \" + z\n      },\n    })\n    \n    \n    \n  </script>\n</body>\n", "description": "aframe + d3 test: camera", "created_at": "2015-12-21T21:32:17Z", "updated_at": "2015-12-24T17:34:14Z", "api": ["d3.scale.linear", "d3.max", "d3.select", "d3.svg.line", "d3.range", "d3.timer"], "readme": "Testing out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org). use **WASD** keys to \"walk\" around the space.\n\nSince AFrame works with DOM elements, you can use d3's selection API to generate and modify 3D elements, as well as handle \"mouse\" events (including the VR friendly \"fuse cursor\") as if it was SVG.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/8be32e6f1f32920ba841'>aframe + d3 test</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/1fd196cd99f8d58a56d3'>aframe + d3 test: text labels</a>", "uid": "enjalot_ce9a88c24e5e11563e06"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; background-color: white;}\n   \n  </style>\n</head>\n\n<body>\n  <a-scene>\n      <!-- Camera with customized cursor -->\n      <a-camera position=\"0 1.8 0\" cursor-visible=\"true\" cursor-scale=\"2\" cursor-color=\"#4CC3D9\" cursor-offset=\"2\" cursor-maxdistance=\"100\" cursor-opacity=\"0.5\" cursor-fuse=\"true\"></a-camera>\n      <a-light color=\"#da47da\" position=\"0 5 0\" type=\"ambient\"></a-light>\n    \t<a-entity camera look-controls wasd-controls></a-entity>\n    \t<a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n      <!-- Sky -->\n      <a-sky color=\"#c8f8e0\"></a-sky>\n  </a-scene>\n  <script>\n    \n    // fake data\n    var data = [ 10, 20, 30, 15, 25, 35, 40,\n                45, 50, 70, 100, 120, 130,\n               12, 18, 22, 29, 33, 44, 59, 200]\n    \n    // we scale the height of our bars using d3's linear scale\n    var hscale = d3.scale.linear()\n    \t.domain([0, d3.max(data)])\n    \t.range([0, 3])\n    \n    // we select the scene object just like an svg\n    var scene = d3.select(\"a-scene\")\n    \n    // we use d3's enter/update/exit pattern to draw and bind our dom elements\n    var bars = scene.selectAll(\"a-cube.bar\").data(data)\n    bars.enter().append(\"a-cube\").classed(\"bar\", true)\n    // we set attributes on our cubes to determine how they are rendered\n    bars.attr({\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 1 + hscale(d)/2;\n        // lets place the bars all around our camera\n        var radius = 5;\n        //var x = i - data.length/2;\n        var x = radius * Math.cos(i/data.length * 2 * Math.PI)\n        var z = radius * Math.sin(i/data.length * 2 * Math.PI)\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/data.length)*360;\n        return x + \" \" + y + \" \" + z\n      },\n      width: function(d) { return 0.5},\n      depth: function(d) { return 0.9},\n      height: function(d) { return hscale(d)},\n      opacity: function(d,i) { return 0.6 + (i/data.length) * 0.4},\n      //metalness: function(d,i) { return i/data.length}\n    })\n    .on(\"click\", function(d,i) {\n      console.log(\"click\", i,d)\n    })\n    .on(\"mouseenter\", function(d,i) {\n      // this event gets fired continuously as long as the cursor\n      // is over the element. we only want trigger our animation the first time\n      if(this.hovering) return;\n      console.log(\"hover\", i,d)\n      this.hovering = true;\n      d3.select(this).transition().duration(1000)\n      .attr({\n        metalness: 0.5,\n        width: 2\n      })\n    })\n    .on(\"mouseleave\", function(d,i) {\n      console.log(\"leave\",i,d)\n      this.hovering = false;\n      d3.select(this).transition()\n      .attr({\n        metalness: 0,\n        width: 0.5\n      })\n    })    \n    \n  </script>\n</body>\n", "description": "aframe + d3 test_next project", "created_at": "2015-12-21T20:11:57Z", "updated_at": "2015-12-21T20:12:06Z", "api": ["d3.scale.linear", "d3.max", "d3.select"], "readme": "Testing out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org).\n\nSince AFrame works with DOM elements, you can use d3's selection API to generate and modify 3D elements, as well as handle \"mouse\" events (including the VR friendly \"fuse cursor\") as if it was SVG.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/8be32e6f1f32920ba841'>aframe + d3 test</a>", "uid": "malcolm-decuire_9f8e98a2481f61287ca3"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  width: 960px;\n  margin: auto;\n  position: relative;\n}\n\nsvg {\n  font: 11px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.axis--y path {\n  display: none;\n}\n\n.cities {\n  fill: none;\n  stroke: #aaa;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  stroke-width: 1.5px;\n}\n\n.city--hover {\n  stroke: #000;\n}\n\n.focus text {\n  text-anchor: middle;\n  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;\n}\n\n.voronoi path {\n  fill: none;\n  pointer-events: all;\n}\n\n.voronoi--show path {\n  stroke: red;\n  stroke-opacity: .2;\n}\n\n#form {\n  position: absolute;\n  top: 20px;\n  right: 30px;\n}\n\n</style>\n<label id=\"form\" for=\"show-voronoi\">\n  Show Voronoi\n  <input type=\"checkbox\" id=\"show-voronoi\" disabled>\n</label>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar months,\n    monthFormat = d3.time.format(\"%Y-%m\");\n\nvar margin = {top: 20, right: 30, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar voronoi = d3.geom.voronoi()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); })\n    .clipExtent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]]);\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"unemployment.tsv\", type, function(error, cities) {\n  x.domain(d3.extent(months));\n  y.domain([0, d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\"));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .ticks(10, \"%\"))\n    .append(\"text\")\n      .attr(\"x\", 4)\n      .attr(\"dy\", \".32em\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Unemployment Rate\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"cities\")\n    .selectAll(\"path\")\n      .data(cities)\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { d.line = this; return line(d.values); });\n\n  var focus = svg.append(\"g\")\n      .attr(\"transform\", \"translate(-100,-100)\")\n      .attr(\"class\", \"focus\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 3.5);\n\n  focus.append(\"text\")\n      .attr(\"y\", -10);\n\n  var voronoiGroup = svg.append(\"g\")\n      .attr(\"class\", \"voronoi\");\n\n  voronoiGroup.selectAll(\"path\")\n      .data(voronoi(d3.nest()\n          .key(function(d) { return x(d.date) + \",\" + y(d.value); })\n          .rollup(function(v) { return v[0]; })\n          .entries(d3.merge(cities.map(function(d) { return d.values; })))\n          .map(function(d) { return d.values; })))\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; })\n      .datum(function(d) { return d.point; })\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout);\n\n  d3.select(\"#show-voronoi\")\n      .property(\"disabled\", false)\n      .on(\"change\", function() { voronoiGroup.classed(\"voronoi--show\", this.checked); });\n\n  function mouseover(d) {\n    d3.select(d.city.line).classed(\"city--hover\", true);\n    d.city.line.parentNode.appendChild(d.city.line);\n    focus.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.value) + \")\");\n    focus.select(\"text\").text(d.city.name);\n  }\n\n  function mouseout(d) {\n    d3.select(d.city.line).classed(\"city--hover\", false);\n    focus.attr(\"transform\", \"translate(-100,-100)\");\n  }\n});\n\nfunction type(d, i) {\n  if (!i) months = Object.keys(d).map(monthFormat.parse).filter(Number);\n  var city = {\n    name: d.name.replace(/ (msa|necta div|met necta|met div)$/i, \"\"),\n    values: null\n  };\n  city.values = months.map(function(m) {\n    return {\n      city: city,\n      date: m,\n      value: d[monthFormat(m)] / 100\n    };\n  });\n  return city;\n}\n\n</script>\n", "description": "Multi-Line Voronoi", "created_at": "2013-12-19T01:50:19Z", "updated_at": "2016-02-09T01:59:01Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.geom.voronoi", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.max", "d3.svg.axis", "d3.nest", "d3.merge"], "readme": "This [multi-line chart](/mbostock/3884955) uses an invisible [Voronoi tessellation](/mbostock/4060366) to handle mouseover; the closest point to the mouse on any line is highlighted. Click the checkbox in the top-right to toggle the visibility of the Voronoi overlay.\n\nNote that because d3.geom.voronoi does not handle coincident points (and this data from the government comes pre-rounded to a tenth of a degree), d3.nest is used to collapse coincident points before constructing the Voronoi.\n", "uid": "mbostock_8033015"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; background-color: white;}\n  </style>\n</head>\n\n<body>\n  <a-scene>\n      <!-- Camera with customized cursor -->\n      <a-camera position=\"0 1.8 0\" cursor-visible=\"true\" cursor-scale=\"2\" cursor-color=\"#4CC3D9\" cursor-offset=\"2\" cursor-maxdistance=\"100\" cursor-opacity=\"0.5\" cursor-fuse=\"true\"></a-camera>\n      <a-light color=\"#da47da\" position=\"0 5 0\" type=\"ambient\"></a-light>\n    \t<a-entity camera look-controls wasd-controls></a-entity>\n    \t<a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n      <!-- Sky -->\n      <a-sky color=\"#c8f8e0\"></a-sky>\n  </a-scene>\n  <script>\n    \nvar scene = d3.select(\"a-scene\");\n    \nvar color = d3.scale.category20();\n\n    // see https://github.com/d3/d3/wiki/Force-Layout for params\nvar force = d3.layout.force()\n    .charge(-120)\n    .linkDistance(30);\n\nd3.json(\"miserables.json\", function(error, graph) {\n  if (error) throw error;\n\n  force\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .start();\n\n  var link = scene.selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"a-entity\")\n      .attr(\"class\", \"link\")\n      .attr(\"geometry\", \"primitive: cylinder\")\n      .attr(\"material\", \"side: double\")\n      .attr(\"openEnded\", \"true\")\n      .attr(\"radius\", function(d) { return Math.sqrt(d.value); });\n\n  var node = scene.selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"a-sphere\")\n      .attr(\"class\", \"node\")\n      .attr(\"r\", 5)\n      .style(\"fill\", function(d) { return color(d.group); })\n      .call(force.drag);\n  // https://aframe.io/docs/components/geometry.html#Tube\n\n  node.append(\"circle\")\n      .text(function(d) { return d.name; });\n\n  force.on(\"tick\", function() {\n    link.attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; })\n        .attr(\"position\", function(d) { return d.source.x+\" \" +d.target.y+\" -5\"; });;\n\n    node.attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; })\n        .attr(\"position\", function(d) { return d.x+\" \" +d.y+\" -5\"; });\n  });\n});\n\n  </script>\n</body>\n", "description": "VR graph", "created_at": "2016-05-22T15:58:10Z", "updated_at": "2016-05-22T16:41:12Z", "api": ["d3.select", "d3.scale.category20", "d3.layout.force", "d3.json"], "readme": "Testing out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org).\n\nSince AFrame works with DOM elements, you can use d3's selection API to generate and modify 3D elements, as well as handle \"mouse\" events (including the VR friendly \"fuse cursor\") as if it was SVG.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/8be32e6f1f32920ba841'>aframe + d3 test</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/2b3d47f42279357aa86f00c69ccf74ed'>VR graph</a>", "uid": "Utopiah_fec8aa2c70a72bcd5f2a81e1b48cc978"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  width: 960px;\n  margin: auto;\n  position: relative;\n}\n\nsvg {\n  font: 11px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.axis--y path {\n  display: none;\n}\n\n.cities {\n  fill: none;\n  stroke: #aaa;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  stroke-width: 1.5px;\n}\n\n.city--hover {\n  stroke: #000;\n}\n\n.focus text {\n  text-anchor: middle;\n  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;\n}\n\n.voronoi path {\n  fill: none;\n  pointer-events: all;\n}\n\n.voronoi--show path {\n  stroke: red;\n  stroke-opacity: .2;\n}\n\n#form {\n  position: absolute;\n  top: 20px;\n  right: 30px;\n}\n\n</style>\n<label id=\"form\" for=\"show-voronoi\">\n  Show Voronoi\n  <input type=\"checkbox\" id=\"show-voronoi\" disabled>\n</label>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar months,\n    monthFormat = d3.time.format(\"%Y-%m\");\n\nvar margin = {top: 20, right: 30, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category20();\n\nvar voronoi = d3.geom.voronoi()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); })\n    .clipExtent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]]);\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"unemployment.tsv\", type, function(error, cities) {\n  x.domain(d3.extent(months));\n  y.domain([0, d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\"));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .ticks(10, \"%\"))\n    .append(\"text\")\n      .attr(\"x\", 4)\n      .attr(\"dy\", \".32em\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Unemployment Rate\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"cities\")\n    .selectAll(\"path\")\n      .data(cities)\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { d.line = this; return line(d.values); });\n\n  var focus = svg.append(\"g\")\n      .attr(\"transform\", \"translate(-100,-100)\")\n      .attr(\"class\", \"focus\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 3.5);\n\n  focus.append(\"text\")\n      .attr(\"y\", -10);\n\n  var voronoiGroup = svg.append(\"g\")\n      .attr(\"class\", \"voronoi\");\n\n  voronoiGroup.selectAll(\"path\")\n      .data(voronoi(d3.nest()\n          .key(function(d) { return x(d.date) + \",\" + y(d.value); })\n          .rollup(function(v) { return v[0]; })\n          .entries(d3.merge(cities.map(function(d) { return d.values; })))\n          .map(function(d) { return d.values; })))\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; })\n      .datum(function(d) { return d.point; })\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout);\n\n  d3.select(\"#show-voronoi\")\n      .property(\"disabled\", false)\n      .on(\"change\", function() { voronoiGroup.classed(\"voronoi--show\", this.checked); });\n\n  function mouseover(d) {\n    d3.select(d.city.line).classed(\"city--hover\", true);\n    d.city.line.parentNode.appendChild(d.city.line);\n    focus.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.value) + \")\");\n    focus.select(\"text\").text(d.city.name);\n  }\n\n  function mouseout(d) {\n    d3.select(d.city.line).classed(\"city--hover\", false);\n    focus.attr(\"transform\", \"translate(-100,-100)\");\n  }\n});\n\nfunction type(d, i) {\n  if (!i) months = Object.keys(d).map(monthFormat.parse).filter(Number);\n  var city = {\n    name: d.name.replace(/ (msa|necta div|met necta|met div)$/i, \"\"),\n    values: null\n  };\n  city.values = months.map(function(m) {\n    return {\n      city: city,\n      date: m,\n      value: d[monthFormat(m)] / 100\n    };\n  });\n  return city;\n}\n\n</script>\n", "description": null, "created_at": "2014-04-25T16:47:57Z", "updated_at": "2015-08-29T14:00:32Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category20", "d3.geom.voronoi", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.max", "d3.svg.axis", "d3.nest", "d3.merge"], "readme": "This [multi-line chart](/mbostock/3884955) uses an invisible [Voronoi tessellation](/mbostock/4060366) to handle mouseover; the closest point to the mouse on any line is highlighted. Click the checkbox in the top-right to toggle the visibility of the Voronoi overlay.\n\nNote that because d3.geom.voronoi does not handle coincident points (and this data from the government comes pre-rounded to a tenth of a degree), d3.nest is used to collapse coincident points before constructing the Voronoi.\n", "uid": "erlenstar_11295915"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.point {\n  fill: steelblue;\n  stroke: #000;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  // Coerce the data to numbers.\n  data.forEach(function(d) {\n    d.x = +d.x;\n    d.y = +d.y;\n  });\n\n  // Compute the scales\u2019 domains.\n  x.domain(d3.extent(data, function(d) { return d.x; })).nice();\n  y.domain(d3.extent(data, function(d) { return d.y; })).nice();\n\n  // Add the x-axis.\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n  // Add the y-axis.\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(d3.svg.axis().scale(y).orient(\"left\"));\n\n  // Add the points!\n  svg.selectAll(\".point\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"point\")\n      .attr(\"r\", 4.5)\n      .attr(\"cx\", function(d) { return x(d.x); })\n      .attr(\"cy\", function(d) { return y(d.y); });\n});\n\n</script>\n", "description": "d3.tsv", "created_at": "2012-08-09T17:06:48Z", "updated_at": "2016-03-29T01:11:27Z", "api": ["d3.scale.linear", "d3.select", "d3.tsv", "d3.extent", "d3.svg.axis"], "readme": "D3 2.10 adds support for [tab-separated values](http://en.wikipedia.org/wiki/Tab-separated_values) via d3.tsv. Similar to the previous d3.csv method, this makes it easy to load and parse TSV files.\n\n```javascript\nd3.tsv(\"data.tsv\", function(data) {\n  console.log(data[0].x);\n});\n```\n", "uid": "mbostock_3305937"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - d3.carto.layer.alias</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    tileLayer = d3.carto.layer.tile();\n    tileLayer\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\")\n    .on(\"load\", recenter);\n\n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoBorders\")\n    .cssClass(\"countryborders\")\n    .renderMode(\"canvas\")\n    .on(\"load\", createFeatureLayer);\n    \n    topojsonLayer = d3.carto.layer.topojson();\n    topojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n    .label(\"TopoRoutes\")\n    .cssClass(\"roads\")\n    .renderMode(\"svg\")\n    .on(\"load\", function() {console.log(\"load topojson\")});\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .type(\"csv\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(3)\n    .x(\"x\")\n    .y(\"y\")\n    .on(\"load\", changeMarkers);\n\n    map.addCartoLayer(tileLayer);\n    map.addCartoLayer(topojsonLayer);\n    map.addCartoLayer(geojsonLayer);\n    map.addCartoLayer(csvLayer);\n\n    function recenter() {\n      map.centerOn([-0.1275,51.507],\"latlong\",5000);\n    }\n\n    function changeMarkers() {\n          csvLayer.g().selectAll(\"circle\").remove();\n\n          csvLayer.g().selectAll(\"g.marker\")\n            .append(\"rect\")\n            .attr(\"class\", \"bluesquare\")\n            .attr(\"height\", 5)\n            .attr(\"width\",5)\n            .attr(\"x\",-2.5)\n            .attr(\"y\",-2.5);\n    }\n    \n    function createFeatureLayer() {\n      var featuresArray = [];\n      var mapLayers = map.layers();\n      mapLayers.forEach(function (layer) {\n        if (layer.label() == \"GeoBorders\") {\n          featuresArray = layer.features();\n        }\n      })\n     shortNameCountries = featuresArray.filter(function(d) {return d.properties.name.length < 7})\n\n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(shortNameCountries)\n    .label(\"Feature Array\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\")\n    .on(\"load\", function(){console.log(\"load featurearray\")}); \n    \n    map.addCartoLayer(featureLayer);\n\n    }\n\n  }\n\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "d3.carto.layer.alias - d3.carto.map", "created_at": "2014-07-15T23:13:03Z", "updated_at": "2015-08-29T14:04:00Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.carto.layer.featureArray"], "readme": "Using d3.carto.layer with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nEach d3.carto.layer is defined and then added to the map using map.addCartoLayer. You can access the added layers using map.layers(). Each layer fires a \"load\" event once successfully added to the map.\n\nThis example uses d3.carto.layer.layerType() aliases like d3.carto.layer.tile() and d3.carto.layer.topojson().", "uid": "emeeks_37c28b6ff0e01f69b4cd"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <script src='http://api.tiles.mapbox.com/mapbox.js/v0.6.4/mapbox.js'></script>\n  <script src='http://d3js.org/d3.v2.min.js?2.9.3'></script>\n  <link\n      href='http://api.tiles.mapbox.com/mapbox.js/v0.6.4/mapbox.css'\n      rel='stylesheet' />\n  <style>\n    body { margin:0; padding:0; }\n    #map { position:absolute; top:0; bottom:0; width:100%; }\n    .d3-vec { position:absolute; }\n    path {\n      fill: #000;\n      fill-opacity: .2;\n      stroke: #fff;\n      stroke-width: 1.5px;\n    }\n\n    path:hover {\n      fill: brown;\n      fill-opacity: .7;\n    }\n  </style>\n</head>\n<body>\n<div id='map'></div>\n<script>\n  function folly() {\n      var f = {}, bounds, feature;\n      var div = d3.select(document.body)\n          .append(\"div\")\n          .attr('class', 'd3-vec'),\n      svg = div.append('svg'),\n      g = svg.append(\"g\");\n\n      f.parent = div.node();\n\n      // Use Leaflet to implement a D3 geographic projection.\n      f.project = function(x) {\n        var point = f.map.locationPoint({ lat: x[1], lon: x[0] });\n        return [point.x, point.y];\n      }\n\n      // Reposition the SVG to cover the features.\n      f.draw = function() {\n        var bounds = f.map.extent(),\n            bl = bounds.southWest(),\n            tr = bounds.northEast();\n        var bottomLeft = f.project([bl.lon, bl.lat]),\n            topRight = f.project([tr.lon, tr.lat]);\n\n        svg.attr(\"width\", topRight[0] - bottomLeft[0])\n            .attr(\"height\", bottomLeft[1] - topRight[1])\n            .style(\"margin-left\", bottomLeft[0] + \"px\")\n            .style(\"margin-top\", topRight[1] + \"px\");\n\n        g.attr(\"transform\", \"translate(\" + -bottomLeft[0] + \",\" + -topRight[1] + \")\");\n\n        path = d3.geo.path().projection(f.project);\n\n        feature.attr(\"d\", path);\n      }\n\n      f.data = function(collection) {\n          bounds = d3.geo.bounds(collection);\n          feature = g.selectAll(\"path\")\n              .data(collection.features)\n              .enter().append(\"path\");\n          return f;\n      };\n\n      return f;\n  }\n  mapbox.auto('map', 'examples.map-vyofok3q', function(map) {\n      d3.json(\"us-states.json\", function(collection) {\n          var l = folly().data(collection);\n          map.addLayer(l);\n          map.zoom(4).center({ lat: 37, lon: -90 });\n      });\n  });\n</script>\n</body>\n</html>\n", "description": "MapBox + d3", "created_at": "2012-08-22T14:31:03Z", "updated_at": "2016-01-05T17:12:07Z", "api": ["d3.select", "d3.geo.path", "d3.geo.bounds", "d3.json"], "readme": "", "uid": "tmcw_3426132"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.8/d3.min.js\"></script>\n  <style>\n    circle {\n      opacity: 0.2;\n    }\n    body {\n        font-family: futura;\n    }\n    h2.title {\n      color: black;\n      text-align: center;\n    }\n    .axis {\n      font-family: arial;\n      font-size: 0.7em;\n    }\n    text {\n      fill: black;\n    }\n    .label {\n      font-size: 2em;\n    }\n    path {\n      fill: none;\n      stroke: black;\n      stroke-width: 1px;\n    }\n    .tick {\n      fill: none;\n      stroke: black;\n    }\n    .line {\n      fill: none;\n      stroke: #4eb0bb;\n      stroke-width: 1px;\n    }\n  </style>\n  <script>\n    function draw(data) {\n    \"use strict\";\n\n    /*\n        D3.js setup code\n    */\n\n    // set margins according to Mike Bostock's margin conventions\n    // http://bl.ocks.org/mbostock/3019563\n    var margin = {top: 25, right: 40, bottom: 150, left: 75};\n    \n    // set height and width of chart\n    var width = 700 - margin.left - margin.right,\n        height = 800 - margin.top - margin.bottom;\n    \n    // specify the radius of our circles and the\n    // column we want to plot\n    var radius = 3,\n        field = 'San Francisco',\n        x_field = \"number_of_reviews\",\n        y_field = \"availability_365\";\n  \n    // Append the title for the graph\n    d3.select(\"body\")\n        .append(\"h2\")\n        .text(field + \" Listings\")\n        .attr('class', 'title');\n    \n    // append the SVG tag with height and width to accommodate for margins\n    var svg = d3.select(\"body\")\n                .append(\"svg\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                .append('g')\n                    .attr('class','chart')\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    // remove missing values\n    data = data.filter(function(d) {\n      return d[y_field];\n    });\n\n    // bind our data to svg circles for the scatter plot\n    svg.selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n      \n      // maximum price\n      var max_y = d3.max(data, function(d) {\n          return +d[y_field];\n//         \treturn 10000;\n      });\n\n      // get min/max review count\n      var review_extent = d3.extent(data, function(d){\n          return +d[x_field];\n      });\n\n      // Create x-axis scale mapping dates -> pixels\n      var review_scale = d3.scale.linear()\n          .range([0, width])\n          .domain(review_extent);\n\n      // Create y-axis scale mapping price -> pixels\n      var measure_scale = d3.scale.linear()\n          .range([height, 0])\n          .domain([0, max_y]);\n//       \t\t.domain([0, 10000]);\n\n      // Create D3 axis object from time_scale for the x-axis\n      var x_axis = d3.svg.axis()\n          .scale(review_scale);\n\n      // Create D3 axis object from measure_scale for the y-axis\n      var measure_axis = d3.svg.axis()\n          .scale(measure_scale)\n          .orient(\"left\");\n\n      // Append SVG to page corresponding to the D3 x-axis\n      svg.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', \"translate(0,\" + height + \")\")\n          .call(x_axis);\n\n      // Append SVG to page corresponding to the D3 y-axis\n      svg.append('g')\n          .attr('class', 'y axis')\n          .call(measure_axis);\n\n      // add label to y-axis\n      d3.select(\".y.axis\")\n          .append(\"text\")\n          .attr('class', 'label')\n          .text(\"Price (dollar/sq-ft)\")\n          .attr(\"transform\", \"rotate(-90, -50, 0) translate(-450)\");\n\n      // based on the data bound to each svg circle,\n      // change its center-x (cx) and center-y (cy)\n      // coordinates\n      d3.selectAll('circle')\n          .attr('cx', function(d) {\n              return review_scale(+d[x_field]);\n          })\n          .attr('cy', function(d) {\n              return measure_scale(+d[y_field]);\n          })\n          .attr('r', function(d) {\n            return 2;\n          })\n          .style('fill', function(d) {\n            switch (d['room_type']) {\n              case 'Entire home/apt':\n                return 'red';\n              case 'Private room':\n                return 'green'\n              case 'Shared room':\n                return 'blue';\n              default:\n                return 'gray';\n            }\n          });\n    }\n  </script>\n</head>\n  <body>\n    <script>\n      /*\n      Use D3 to load the CSV file and pass\n      the contents of it to the draw function.\n      */\n      d3.csv(\"http://jay-oh-en.github.io/interactive-data-viz/data/airbnb/listings.csv\", draw);\n    </script>\n  </body>\n</html>", "description": "AirBnB D3", "created_at": "2015-12-11T01:33:50Z", "updated_at": "2015-12-11T01:33:50Z", "api": ["d3.select", "d3.max", "d3.extent", "d3.scale.linear", "d3.svg.axis", "d3.selectAll", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "balajikvijayan_f7b24a7a56e5caa479d2"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  width: 960px;\n  margin: auto;\n  position: relative;\n}\n\nsvg {\n  font: 11px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.axis--y path {\n  display: none;\n}\n\n.cities {\n  fill: none;\n  stroke: #aaa;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  stroke-width: 1.5px;\n}\n\n.city--hover {\n  stroke: #000;\n}\n\n.focus text {\n  text-anchor: middle;\n  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;\n}\n\n.voronoi path {\n  fill: none;\n  pointer-events: all;\n}\n\n.voronoi--show path {\n  stroke: red;\n  stroke-opacity: .2;\n}\n\n#form {\n  position: absolute;\n  top: 20px;\n  right: 30px;\n}\n\n</style>\n<label id=\"form\" for=\"show-voronoi\">\n  Show Voronoi\n  <input type=\"checkbox\" id=\"show-voronoi\" disabled>\n</label>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar months,\n    monthFormat = d3.time.format(\"%Y-%m\");\n\nvar margin = {top: 20, right: 30, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar voronoi = d3.geom.voronoi()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); })\n    .clipExtent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]]);\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"unemployment.tsv\", type, function(error, cities) {\n  x.domain(d3.extent(months));\n  y.domain([0, d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\"));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .ticks(10, \"%\"))\n    .append(\"text\")\n      .attr(\"x\", 4)\n      .attr(\"dy\", \".32em\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Unemployment Rate\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"cities\")\n    .selectAll(\"path\")\n      .data(cities)\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { d.line = this; return line(d.values); });\n\n  var focus = svg.append(\"g\")\n      .attr(\"transform\", \"translate(-100,-100)\")\n      .attr(\"class\", \"focus\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 3.5);\n\n  focus.append(\"text\")\n      .attr(\"y\", -10);\n\n  var voronoiGroup = svg.append(\"g\")\n      .attr(\"class\", \"voronoi\");\n\n  voronoiGroup.selectAll(\"path\")\n      .data(voronoi(d3.nest()\n          .key(function(d) { return x(d.date) + \",\" + y(d.value); })\n          .rollup(function(v) { return v[0]; })\n          .entries(d3.merge(cities.map(function(d) { return d.values; })))\n          .map(function(d) { return d.values; })))\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; })\n      .datum(function(d) { return d.point; })\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout);\n\n  d3.select(\"#show-voronoi\")\n      .property(\"disabled\", false)\n      .on(\"change\", function() { voronoiGroup.classed(\"voronoi--show\", this.checked); });\n\n  function mouseover(d) {\n    d3.select(d.city.line).classed(\"city--hover\", true);\n    d.city.line.parentNode.appendChild(d.city.line);\n    focus.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.value) + \")\");\n    focus.select(\"text\").text(d.city.name);\n  }\n\n  function mouseout(d) {\n    d3.select(d.city.line).classed(\"city--hover\", false);\n    focus.attr(\"transform\", \"translate(-100,-100)\");\n  }\n});\n\nfunction type(d, i) {\n  if (!i) months = Object.keys(d).map(monthFormat.parse).filter(Number);\n  var city = {\n    name: d.name.replace(/ (msa|necta div|met necta|met div)$/i, \"\"),\n    values: null\n  };\n  city.values = months.map(function(m) {\n    return {\n      city: city,\n      date: m,\n      value: d[monthFormat(m)] / 100\n    };\n  });\n  return city;\n}\n\n</script>\n", "description": "Multi-Line Voronoi", "created_at": "2016-02-02T17:36:53Z", "updated_at": "2016-02-02T17:36:54Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.geom.voronoi", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.max", "d3.svg.axis", "d3.nest", "d3.merge"], "readme": "This [multi-line chart](/mbostock/3884955) uses an invisible [Voronoi tessellation](/mbostock/4060366) to handle mouseover; the closest point to the mouse on any line is highlighted. Click the checkbox in the top-right to toggle the visibility of the Voronoi overlay.\n\nNote that because d3.geom.voronoi does not handle coincident points (and this data from the government comes pre-rounded to a tenth of a degree), d3.nest is used to collapse coincident points before constructing the Voronoi.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/8033015'>Multi-Line Voronoi</a>", "uid": "sivartravis_f3708ba3311007a9b4a6"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  width: 960px;\n  margin: auto;\n  position: relative;\n}\n\nsvg {\n  font: 11px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.axis--y path {\n  display: none;\n}\n\n.cities {\n  fill: none;\n  stroke: #aaa;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  stroke-width: 2px;\n   stroke-opacity: 0.5;\n}\n\n.city--hover {\n  stroke: #000;\n}\n\n.focus text {\n  text-anchor: middle;\n  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;\n}\n\n.voronoi path {\n  fill: none;\n  pointer-events: all;\n}\n\n.voronoi--show path {\n  stroke: red;\n  stroke-opacity: .2;\n}\n\n#form {\n  position: absolute;\n  top: 20px;\n  right: 30px;\n}\n\n</style>\n<label id=\"form\" for=\"show-voronoi\">\n  Show Voronoi\n  <input type=\"checkbox\" id=\"show-voronoi\" disabled>\n</label>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar months,\n    monthFormat = d3.time.format(\"%Y-%m\");\n\nvar margin = {top: 20, right: 30, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar voronoi = d3.geom.voronoi()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); })\n    .clipExtent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]]);\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"unemployment.tsv\", type, function(error, cities) {\n  x.domain(d3.extent(months));\n  y.domain([0, d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\"));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .ticks(10, \"%\"))\n    .append(\"text\")\n      .attr(\"x\", 4)\n      .attr(\"dy\", \".32em\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Unemployment Rate\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"cities\")\n    .selectAll(\"path\")\n      .data(cities)\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { d.line = this; return line(d.values); });\n\n  var focus = svg.append(\"g\")\n      .attr(\"transform\", \"translate(-100,-100)\")\n      .attr(\"class\", \"focus\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 3.5);\n\n  focus.append(\"text\")\n      .attr(\"y\", -10);\n\n  var voronoiGroup = svg.append(\"g\")\n      .attr(\"class\", \"voronoi\");\n\n  voronoiGroup.selectAll(\"path\")\n      .data(voronoi(d3.nest()\n          .key(function(d) { return x(d.date) + \",\" + y(d.value); })\n          .rollup(function(v) { return v[0]; })\n          .entries(d3.merge(cities.map(function(d) { return d.values; })))\n          .map(function(d) { return d.values; })))\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; })\n      .datum(function(d) { return d.point; })\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout);\n\n  d3.select(\"#show-voronoi\")\n      .property(\"disabled\", false)\n      .on(\"change\", function() { voronoiGroup.classed(\"voronoi--show\", this.checked); });\n\n  function mouseover(d) {\n    d3.select(d.city.line).classed(\"city--hover\", true);\n    d.city.line.parentNode.appendChild(d.city.line);\n    focus.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.value) + \")\");\n    focus.select(\"text\").text(d.city.name);\n  }\n\n  function mouseout(d) {\n    d3.select(d.city.line).classed(\"city--hover\", false);\n    focus.attr(\"transform\", \"translate(-100,-100)\");\n  }\n});\n\nfunction type(d, i) {\n  if (!i) months = Object.keys(d).map(monthFormat.parse).filter(Number);\n  var city = {\n    name: d.name.replace(/ (msa|necta div|met necta|met div)$/i, \"\"),\n    values: null\n  };\n  city.values = months.map(function(m) {\n    return {\n      city: city,\n      date: m,\n      value: d[monthFormat(m)] / 100\n    };\n  });\n  return city;\n}\n\n</script>\n", "description": "Multi-Line Voronoi", "created_at": "2015-11-19T21:57:26Z", "updated_at": "2015-11-19T22:26:10Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.geom.voronoi", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.max", "d3.svg.axis", "d3.nest", "d3.merge"], "readme": "This [multi-line chart](/mbostock/3884955) uses an invisible [Voronoi tessellation](/mbostock/4060366) to handle mouseover; the closest point to the mouse on any line is highlighted. Click the checkbox in the top-right to toggle the visibility of the Voronoi overlay.\n\nNote that because d3.geom.voronoi does not handle coincident points (and this data from the government comes pre-rounded to a tenth of a degree), d3.nest is used to collapse coincident points before constructing the Voronoi.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/8033015'>Multi-Line Voronoi</a>", "uid": "ptvans_741ef9b6879861b5b9dc"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - d3.carto.minimap</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  #minimap {\n        height: 25%;\n        width: 25%;\n        bottom: 5%;\n        left: 5%;\n        position: absolute;\n        background: red;\n        border:yellow 1px solid;\n        z-index: 1;\n      }\n\n</style>\n<script>\n    function makeSomeMaps() {\n\n        var map = d3.carto.map();\n        d3.select(\"#map\").call(map);\n        \n        var minimap = d3.carto.minimap();\n        d3.select(\"#minimap\").call(minimap);\n\n        //Link the minimap to the full-sized map\n        minimap.tandem(map);\n\n        //Change the default scale of the minimap by accessing the d3.carto.map that it creates with d3.carto.minimap.map()\n        minimap.map().setScale(1);\n\n        var tileLayer = d3.carto.layer()\n          .type(\"tile\")\n          .path(\"examples.map-zgrqqx0w\")\n          .label(\"Base\")\n          .on(\"load\", recenter);\n\n        var geojsonLayer = d3.carto.layer()\n          .type(\"geojson\")\n          .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n          .label(\"GeoBorders\")\n          .cssClass(\"countryborders\")\n          .renderMode(\"canvas\")\n          .on(\"load\", createFeatureLayer);\n\n        var topojsonLayer = d3.carto.layer()\n          .type(\"topojson\")\n          .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n          .label(\"TopoRoutes\")\n          .cssClass(\"roads\")\n          .renderMode(\"canvas\");\n\n        var csvLayer = d3.carto.layer()\n          .type(\"csv\")\n          .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n          .label(\"CSV Points\")\n          .cssClass(\"pinkcircle\")\n          .renderMode(\"svg\")\n          .markerSize(2)\n          .x(\"x\")\n          .y(\"y\")\n          .on(\"load\", changeMarkers);\n\n        var xyLayer = d3.carto.layer()\n          .type(\"xyarray\")\n          .features([{x: 5, y: 40},{x: 5, y: 50}])\n          .label(\"XY Array\")\n          .cssClass(\"greencircle\")\n          .renderMode(\"svg\")\n          .markerSize(4)\n          .x(\"x\")\n          .y(\"y\");\n\n        map.addCartoLayer(tileLayer);\n        map.addCartoLayer(topojsonLayer);\n        map.addCartoLayer(geojsonLayer);\n        map.addCartoLayer(csvLayer);\n        map.addCartoLayer(xyLayer);\n\n        function recenter() {\n          map.setScale(6)\n          map.centerOn([6,45.507],\"latlong\");\n        }\n\n        function changeMarkers() {\n          csvLayer.g().selectAll(\"circle\").remove();\n\n          csvLayer.g().selectAll(\"g.marker\")\n            .append(\"rect\")\n            .attr(\"class\", \"bluesquare\")\n            .attr(\"height\", 5)\n            .attr(\"width\",5)\n            .attr(\"x\",-2.5)\n            .attr(\"y\",-2.5);\n\n        }\n\n\n        function createFeatureLayer() {\n          var featuresArray = [];\n          var mapLayers = map.layers();\n          mapLayers.forEach(function (layer) {\n            if (layer.label() == \"GeoBorders\") {\n              featuresArray = layer.features();\n            }\n          })\n\n          var shortNameCountries = featuresArray.filter(function(d) {\n            return d.properties.name.length < 7;\n          });\n\n          var featureLayer = d3.carto.layer()\n            .type(\"featurearray\")\n            .features(shortNameCountries)\n            .label(\"Feature Array\")\n            .cssClass(\"halffilledcountries\")\n            .renderMode(\"svg\");\n\n          map.addCartoLayer(featureLayer);\n\n        }\n\n      }\n\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<div id=\"minimap\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "d3.carto.minimap - d3.carto.map", "created_at": "2014-07-17T01:42:49Z", "updated_at": "2015-08-29T14:04:05Z", "api": ["d3.carto.map", "d3.select", "d3.carto.minimap", "d3.carto.minimap.map", "d3.carto.layer"], "readme": "Using d3.carto.minimap with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nDrag the main map around and zoom in and zoom out to see the bounds change in the minimap.\n\nThe minimap creates its own d3.carto.map and, with minimap.tandem() will take the layers from the main map and recreate them in the minimap.", "uid": "emeeks_a726210cbc439b969f02"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - d3.carto.layer</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\")\n    .on(\"load\", recenter);\n\n    geojsonLayer = d3.carto.layer();\n    \n    geojsonLayer\n    .type(\"geojson\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoBorders\")\n    .cssClass(\"countryborders\")\n    .renderMode(\"canvas\")\n    .on(\"load\", createFeatureLayer);\n    \n    topojsonLayer = d3.carto.layer();\n    topojsonLayer\n    .type(\"topojson\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n    .label(\"TopoRoutes\")\n    .cssClass(\"roads\")\n    .renderMode(\"canvas\")\n    .on(\"load\", function() {console.log(\"load topojson\")});\n\n    csvLayer = d3.carto.layer();\n    csvLayer\n    .type(\"csv\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(3)\n    .x(\"x\")\n    .y(\"y\")\n    .on(\"load\", changeMarkers);\n\n    xyLayer = d3.carto.layer();\n    xyLayer\n    .type(\"xyarray\")\n    .features([{x: 5, y: 40},{x: 5, y: 50}])\n    .label(\"XY Array\")\n    .cssClass(\"greencircle\")\n    .renderMode(\"svg\")\n    .markerSize(30)\n    .x(\"x\")\n    .y(\"y\")\n    .on(\"load\", function(){console.log(\"load xyarray\")});\n\n    map.addCartoLayer(tileLayer);\n    map.addCartoLayer(topojsonLayer);\n    map.addCartoLayer(geojsonLayer);\n    map.addCartoLayer(csvLayer);\n    map.addCartoLayer(xyLayer);\n\n    function recenter() {\n      map.centerOn([-0.1275,51.507],\"latlong\",5000);\n    }\n\n    function changeMarkers() {\n          csvLayer.g().selectAll(\"circle\").remove();\n\n          csvLayer.g().selectAll(\"g.marker\")\n            .append(\"rect\")\n            .attr(\"class\", \"bluesquare\")\n            .attr(\"height\", 5)\n            .attr(\"width\",5)\n            .attr(\"x\",-2.5)\n            .attr(\"y\",-2.5);\n    }\n    \n    function createFeatureLayer() {\n      var featuresArray = [];\n      var mapLayers = map.layers();\n      mapLayers.forEach(function (layer) {\n        if (layer.label() == \"GeoBorders\") {\n          featuresArray = layer.features();\n        }\n      })\n     shortNameCountries = featuresArray.filter(function(d) {return d.properties.name.length < 7})\n\n    featureLayer = d3.carto.layer();\n    featureLayer\n    .type(\"featurearray\")\n    .features(shortNameCountries)\n    .label(\"Feature Array\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\")\n    .on(\"load\", function(){console.log(\"load featurearray\")}); \n    \n    map.addCartoLayer(featureLayer);\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "d3.carto.layer - d3.carto.map", "created_at": "2014-07-14T04:42:59Z", "updated_at": "2015-08-29T14:03:57Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer"], "readme": "Using d3.carto.layer with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nEach d3.carto.layer is defined and then added to the map using map.addCartoLayer. You can access the added layers using map.layers(). Each layer fires a \"load\" event once successfully added to the map.\n", "uid": "emeeks_0d69f4a8c717d5548977"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <!--\n  <script src=\"d3.min.js\"></script>\n  <script src=\"aframe.min.js\"></script>\n   -->\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; background-color: white;}\n   \n  </style>\n</head>\n\n<body>\n  <a-scene>\n      <!-- Camera with customized cursor -->\n      <a-camera position=\"0 1.8 0\" cursor-visible=\"true\" cursor-scale=\"2\" cursor-color=\"#4CC3D9\" cursor-offset=\"2\" cursor-maxdistance=\"100\" cursor-opacity=\"0.5\" cursor-fuse=\"true\"></a-camera>\n      <a-light color=\"steelblue\" position=\"0 5 0\" type=\"ambient\"></a-light>\n    \n    <a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n      <!-- Sky -->\n      <a-sky color=\"#d9d9d9\"></a-sky>\n  </a-scene>\n  <script>\n    \n    // synthetic data\n    var data = [ 10, 20, 30, 15, 25, 35, 40,\n                45, 50, 70, 100, 120, 130,\n               12, 18, 22, 29, 33, 44, 59, 200]\n    \n    // we scale the height of our bars using d3's linear scale\n    var hscale = d3.scale.linear()\n    \t.domain([0, d3.max(data)])\n    \t.range([0, 3])\n    \n    // we select the scene object just like an svg\n    var scene = d3.select(\"a-scene\")\n    \n    // we use d3's enter/update/exit pattern to draw and bind our dom elements\n    var bars = scene.selectAll(\"a-cube.bar\").data(data)\n    bars.enter().append(\"a-cube\").classed(\"bar\", true)\n    // we set attributes on our cubes to determine how they are rendered\n    bars.attr({\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 1 + hscale(d)/2;\n        // lets place the bars all around our camera\n        var radius = 5;\n        //var x = i - data.length/2;\n        var x = radius * Math.cos(i/data.length * 2 * Math.PI)\n        var z = radius * Math.sin(i/data.length * 2 * Math.PI)\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/data.length)*360;\n        return x + \" \" + y + \" \" + z\n      },\n      width: function(d) { return 0.5},\n      depth: function(d) { return 0.9},\n      height: function(d) { return hscale(d)},\n      opacity: function(d,i) { return 0.6 + (i/data.length) * 0.4},\n      //metalness: function(d,i) { return i/data.length}\n    })\n    .on(\"click\", function(d,i) {\n      console.log(\"click\", i,d)\n    })\n    .on(\"mouseenter\", function(d,i) {\n      // this event gets fired continuously as long as the cursor\n      // is over the element. we only want trigger our animation the first time\n      if(this.hovering) return;\n      console.log(\"hover\", i,d)\n      this.hovering = true;\n      d3.select(this).transition().duration(1000)\n      .attr({\n        metalness: 0.2,\n        width: 1.5\n      })\n    })\n    .on(\"mouseleave\", function(d,i) {\n      console.log(\"leave\",i,d)\n      this.hovering = false;\n      d3.select(this).transition().delay(1000)\n      .attr({\n        metalness: 0,\n        width: 0.5\n      })\n    })    \n    \n  </script>\n</body>\n", "description": "aframe + d3 experiment", "created_at": "2015-12-18T22:12:35Z", "updated_at": "2016-05-14T15:16:39Z", "api": ["d3.scale.linear", "d3.max", "d3.select"], "readme": "successfully changed the sky and bar colors.  learned that in this strange 3D animation paradigm, the color of the light actually determines the color of the bars:\n\n```\n<a-light color=\"steelblue\" position=\"0 5 0\" type=\"ambient\"></a-light>\n```\n\nthis was non-obvious to me, and pretty cool once I figured it out.\n\noh, I also added a delay the the `mouseout` (`gazeout`?!) transition.  the idea for this is to allow the user time to look to the next bar without snapping their attention right back to the previous bar.\n\n---\n\nTesting out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org).\n\nSince AFrame works with DOM elements, you can use d3's selection API to generate and modify 3D elements, as well as handle \"mouse\" events (including the VR friendly \"fuse cursor\") as if it was SVG.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/8be32e6f1f32920ba841'>aframe + d3 test</a>", "uid": "micahstubbs_77e765beffccb6fe1648"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  margin: 0;\n}\n\n.map {\n  position: relative;\n  overflow: hidden;\n}\n\n.layer {\n  position: absolute;\n}\n\n.tile {\n  position: absolute;\n  width: 256px;\n  height: 256px;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"https://raw.github.com/d3/d3-plugins/master/geo/tile/tile.js\"></script>\n<script>\n\nvar width = window.innerWidth,\n    height = window.innerHeight,\n    prefix = prefixMatch([\"webkit\", \"ms\", \"Moz\", \"O\"]);\n\nvar tile = d3.geo.tile()\n    .size([width, height]);\n\nvar zoom = d3.behavior.zoom()\n    .scale(2 << 11)\n    .scaleExtent([2 << 8, 2 << 22])\n    .translate([width / 2, height / 2])\n    .on(\"zoom\", zoomed);\n\nvar map = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"map\")\n    .style(\"width\", width + \"px\")\n    .style(\"height\", height + \"px\")\n    .call(zoom);\n\nvar layer = map.append(\"div\")\n    .attr(\"class\", \"layer\");\n\nzoomed();\n\nfunction zoomed() {\n  var tiles = tile\n      .scale(zoom.scale())\n      .translate(zoom.translate())\n      ();\n\n  var image = layer\n      .style(prefix + \"transform\", matrix3d(tiles.scale, tiles.translate))\n    .selectAll(\".tile\")\n      .data(tiles, function(d) { return d; });\n\n  image.exit()\n      .remove();\n\n  image.enter( ).append('div')\n      .attr(\"class\", \"tile\")\n      .style(\"left\", function(d) { return (d[0] << 8) + \"px\"; })\n      .style(\"top\", function(d) { return (d[1] << 8) + \"px\"; })\n      .text( function (d) {\n        return \"x:\"  + d[0]\n             + \" y:\" + d[1]\n             + \" z:\" + d[2];\n      })\n      ;\n  /*\n  image.enter().append(\"img\")\n      .attr(\"class\", \"tile\")\n      .attr(\"src\", function(d) { return \"http://\" + [\"a\", \"b\", \"c\", \"d\"][Math.random() * 4 | 0] + \".tiles.mapbox.com/v3/mapbox.mapbox-streets/\" + d[2] + \"/\" + d[0] + \"/\" + d[1] + \".png\"; })\n      .style(\"left\", function(d) { return (d[0] << 8) + \"px\"; })\n      .style(\"top\", function(d) { return (d[1] << 8) + \"px\"; });\n  */\n}\n\nfunction matrix3d(scale, translate) {\n  var k = scale / 256, r = scale % 1 ? Number : Math.round;\n  return \"matrix3d(\" + [k, 0, 0, 0, 0, k, 0, 0, 0, 0, k, 0, r(translate[0] * scale), r(translate[1] * scale), 0, 1 ] + \")\";\n}\n\nfunction prefixMatch(p) {\n  var i = -1, n = p.length, s = document.body.style;\n  while (++i < n) if (p[i] + \"Transform\" in s) return \"-\" + p[i].toLowerCase() + \"-\";\n  return \"\";\n}\n\n</script>\n", "description": "d3.geo.tile", "created_at": "2012-12-11T17:42:15Z", "updated_at": "2015-10-13T21:48:11Z", "api": ["d3.geo.tile", "d3.behavior.zoom", "d3.select"], "readme": "# d3 tile plugin demo\n\n[demo](http://bl.ocks.org/4260548)\n[src](https://gist.github.com/4260548)\n\nModified from the\n[original d3 tile demo](http://bl.ocks.org/4132797)\nA demo of the\n[d3.geo.tile](https://github.com/d3/d3-plugins/tree/master/geo/tile)\nplugin, which determines which 256x256 tiles are visible in the viewport based\non a scale and translate. This demo combines the tile plugin with\nd3.behavior.zoom for panning and zooming, resulting in a a simple slippy map.\nBased partly on [an example](http://bl.ocks.org/3943330) by\n[Tom MacWright](http://macwright.org/).\n", "uid": "bewest_4260548"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://cdn.rawgit.com/fabid/d3-heatmap/master/heatmap.js\"></script>\n  <script src=\"https://cdn.rawgit.com/fabid/d3-returntimemap/master/returntimemap.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.11.2/moment.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width:50%; height: 100% }\n    line {stroke-width:1px; stroke: black;}\n    path {stroke-width:1px;}\n  </style>\n</head>\n\n<body>\n  <script>\n\n    d3.csv('tweets.csv', function(error, data){\n \n      var margin = {\n        top: 20,\n        right: 20,\n        bottom: 90,\n        left: 90\n      },\n      width = 480 - margin.left - margin.right,\n      height = 480 - margin.top - margin.bottom;\n      \n      var dateAccessor = function (d) {return Date.parse(d.date)};\n\n      var timemap = d3.returntimemap()\n      \t\t\t\t\t\t\t\t.values(dateAccessor);\n      \n      var timemapData = timemap(data);\n \n      var svg = d3.select('body')\n        .append('svg')\n        .attr('width', width)\n        .attr('height', height);\n      \n      var scatter = svg.append('g');\n\n  \t\tvar xScale = d3.scale.log();\n  \t\tvar yScale = d3.scale.log();\n  \n      timemapData.map\n  \t\tvar delta = 1000;\n  \t\txScale.domain(d3.extent(timemapData, function(d) { return d.x; }))\n        \t\t.range([margin.left, width + margin.left]);\n  \t\tyScale.domain(d3.extent(timemapData, function(d) { return d.y; }))\n        \t\t.range([height + margin.top, margin.top]);\n      var day = 1000 * 3600 * 24;\n      var minute = 1000 * 60;\n      var xAxis = d3.svg.axis()\n    \t\t.scale(xScale)\n    \t\t.orient(\"bottom\")\n      \t.innerTickSize([10])\n        .outerTickSize([1])\n      \t.tickValues([4 * minute, 60 * 8 * minute, 14 * day])\n      \t.tickFormat(function(d){return moment.duration(d).humanize()});\n      var yAxis = d3.svg.axis()\n    \t\t.scale(yScale)\n    \t\t.orient(\"left\")\n      \t.innerTickSize([10])\n        .outerTickSize([1])\n      \t.tickValues([4 * minute, 60 * 8 * minute, 14 * day])\n      \t.tickFormat(function(d){return moment.duration(d).humanize()});\n      svg.append(\"g\")\n    \t\t.attr(\"class\", \"x axis\")\n    \t\t.attr(\"transform\", \"translate(0,\" + (height + margin.top) + \")\")\n    \t\t.call(xAxis);\n      svg.append(\"g\")\n      \t.attr(\"class\", \"y axis\")\n      \t.attr(\"transform\", \"translate(\" + margin.left + \",0)\")\n      \t.call(yAxis);\n      scatter.selectAll('circle').data(timemapData).enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('fill', 'black')\n        .style('fill-opacity', 0.6)\n        .attr('cx', function(d) {return xScale(d.x)})\n        .attr('cy', function(d) {return yScale(d.y)});\n\n      \n           \n      var size = 10;\n      var heatmap = d3.heatmap()\n        .std(2)\n      \t.x(function(d) { return xScale(d.x); })\n        .y(function(d) { return yScale(d.y); })\n        .dx(size)\n        .dy(size);\n      \n      // the result of the heatmap layout\n      var heatmapData = heatmap(timemapData);\n\n      var color = d3.scale.linear()\n        .domain([0, d3.max(heatmapData, function(d) {\n          return d.v;\n        })])\n        .range([\"white\", \"steelblue\"])\n        .interpolate(d3.interpolateLab);\n      \n      var svg2 = d3.select('body')\n        .append('svg')\n        .attr('width', width)\n        .attr('height', height);\n\n      svg2.append(\"g\")\n        .selectAll(\".square\")\n        .data(heatmapData)\n        .enter().append(\"rect\")\n         .attr(\"class\", \"square\")\n        .attr(\"x\", function(d) { return d.x; })\n        .attr(\"y\", function(d) { return d.y - size; })    \n        .attr(\"width\", size)\n        .attr(\"height\", size)\n        .style(\"fill\", function(d) {\n          return color(d.v)\n        })\n        .style(\"stroke\", \"none\");\n\n      \n      \n    })\n  </script>\n</body>\n", "description": "d3-returntimemap", "created_at": "2016-03-02T14:33:55Z", "updated_at": "2016-03-02T14:33:55Z", "api": ["d3.csv", "d3.returntimemap", "d3.select", "d3.scale.log", "d3.extent", "d3.svg.axis", "d3.heatmap", "d3.scale.linear", "d3.max"], "readme": "Rectangular binning with [d3-heatmap](https://github.com/fabid/d3-heatmap/blob/master/heatmap.js)\nbased on [d3-hexbin demo](http://bl.ocks.org/xaranke/b956ee7215b7b50bc78a)\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/320859ff9f2e2576cebf'>Rectangular binning - 2d histogram</a>\n\nforked from <a href='http://bl.ocks.org/fabid/'>fabid</a>'s block: <a href='http://bl.ocks.org/fabid/a1a7d04bdd34c2096eaf'>Rectangular binning - 2d histogram</a>\n\nforked from <a href='http://bl.ocks.org/fabid/'>fabid</a>'s block: <a href='http://bl.ocks.org/fabid/0c4cf357ab5ed3e90382'>d3-heatmap</a>\n\nforked from <a href='http://bl.ocks.org/fabid/'>fabid</a>'s block: <a href='http://bl.ocks.org/fabid/024452c42b94723b401d'>d3-returntimemap</a>", "uid": "fabid_8b6a0277075d770f088a"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<script src=\"topojson.v0.min.js\"></script>\n<html>\n<style>\n    .background {\n        fill: none;\n        pointer-events: all;\n    }\n\n    .department {\n        fill: #aaa;\n        stroke: #fff;\n        stroke-width: 1.5px;\n    }\n\n</style>\n<body>\n<script>\n\n    d3.json(\"santafe.json\", function(error, theProvince) {\n        var width= 960, height= 500;\n        var svg = d3.select(\"body\").append(\"svg\");\n        var departments = topojson.object(theProvince, theProvince.objects.departments);\n\n        // The projection\n        var projection = d3.geo.mercator()\n                .scale(14000)\n                .center([-60.951,-31.2])\n                .translate([width / 2, height / 2]);\n\n        // The path\n        var path = d3.geo.path()\n                .projection(projection);\n\n        // Zoom behavior\n        var zoom = d3.behavior.zoom()\n                .translate(projection.translate())\n                .scaleExtent([height, Infinity])\n                .scale(projection.scale())\n                .on(\"zoom\", function() {\n                    projection.translate(d3.event.translate).scale(d3.event.scale)\n                    map.selectAll(\"path.zoomable\").attr(\"d\", path);\n                });\n\n\n        // The map\n        var map = svg.append(\"g\")\n                .classed(\"provinceMap\", true)\n                .call(zoom);\n\n        map.append(\"rect\")\n                .attr(\"class\", \"background\")\n                .attr(\"width\", width)\n                .attr(\"height\", height);\n\n        // Departments\n        map.selectAll(\".department\")\n                .data(departments.geometries)\n                .enter().append(\"path\")\n                .classed(\"department\", true)\n                .classed(\"zoomable\", true)\n                .attr(\"d\", path);\n\n        // Places\n        map.selectAll(\".place-label\")\n                .data(topojson.object(theProvince, theProvince.objects.maternidades).geometries)\n                .enter().append(\"path\")\n                .classed(\"place\", true)\n                .classed(\"zoomable\", true)\n                .attr(\"d\", d3.svg.symbol().type(\"cross\"))\n                .attr(\"transform\", function(d) { return \"translate(\" + projection(d.coordinates.reverse()) + \")\"; });\n    });\n</script>\n\n</body>\n</html>", "description": null, "created_at": "2013-03-05T21:32:06Z", "updated_at": "2015-12-14T13:38:46Z", "api": ["d3.json", "d3.select", "d3.geo.mercator", "d3.geo.path", "d3.behavior.zoom", "d3.svg.symbol"], "readme": "The Issue\n====================\n\nI'm trying to build a map that can be zoomed using the mouse wheel and panned with drag.\nFor that I'm using `d3.behavior.zoom()` and it works fine for the map.\nHowever, I also need to mark some points in the map (which are included in the same topojson used to draw the map). They get rendered just fine, but I'm having trouble handling the zoom behaviour with these points. If you try to zoom or pan, the points get translated abruptly and even seem to change their path!\n\nAny ideas?", "uid": "davo_5094476"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n  </style>\n</head>\n\n<body>\n  <script>\n    var margin = {top: 20, right: 10, bottom: 20, left: 10};\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar dataset = [ 5, 10, 13, 25];\nvar w = 400;\nvar h = 400;\n    \nd3.xml(\"star1.xml\", \"image/svg+xml\", function(xml) {\t\n  var importedNode = document.importNode(xml.documentElement, true);\n  svg.selectAll(\"g\")\n    .data(dataset)\n    .enter()\n    .append(\"g\")\n    .attr(\"transform\", function(d, i){ \n        return \"translate(\" + (i * (w / dataset.length)) + \",\" \n            + (h - 80) + \")\"\n            +\"scale(\"+ 0.3 +\")\";\n    })\n    .each(function(d, i){ \n    \t//Add new star\n        var star = this.appendChild(importedNode.cloneNode(true)); \n        d3.select(star)\n        \t.select(\".st0\")\n        \t.style(\"fill\", function() {\n        \t\tif (i % 2 == 0) {\n        \t\t\treturn \"blue\";\n        \t\t} else {\n        \t\t\treturn \"red\";\n        \t\t}\n        \t})\n    \t.on(\"click\", function() {\n    \t\tconsole.log(\"Hello There \" + i);\n    \t})\n        \n        \n        \t\n    })\n    .transition()\n    .duration(2000)\n    .attr(\"transform\", function(d, i){ \n        return \"translate(\" + (i * (w / dataset.length)) + \",\" \n            + (h - d*4 - (w / dataset.length)) + \")\"\n            +\"scale(\"+ 0.3 +\")\";\n    });\n\n});\n  </script>\n</body>\n", "description": "Adobe SVG to D3 w/ Mods", "created_at": "2015-10-17T23:21:14Z", "updated_at": "2015-10-17T23:21:30Z", "api": ["d3.select", "d3.xml"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nThis is an example of a graphic created in Adobe Illustrator and imported into a D3 based page. This is a followup of an earlier block \"Adobe SVG to D3\". The earlier block explains more about the mechanics of bringing in a new SVG element.  \n\nThis block creates four copies of the original star graphic SVG and shows how to access each one as if it were a D3 based SVG element. The styling colors are changed and the movement of each is distinct as well as capturing mouse events for each SVG.\n\nThis graphic although simple is a good example of one that you would not want to have to code the path yourself. Very easy to do in Adobe Illustrator but very painfull to get right if you were trying to code it manually. \n", "uid": "jhellier_26fdb3c8ebd5dcb9a143"}, {"code": "<html>\n\n<head>\n    <script src=\"three.min.js\"></script>\n    <script src=\"https://raw.github.com/sole/tween.js/master/build/tween.min.js\"></script>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <style type=\"text/css\">\n    body {\n        margin: 0px;\n        padding: 0px;\n    }\n    #container {\n        width:960px;\n        height:500px;\n    }\n    </style>\n\n</head>\n\n<body>\n\n<!--div id=\"container\"></div-->\n    <script>\n    // <!--\n\n    function createTextCanvas(text, color, font, size) {\n        size = size || 16;\n        var canvas = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        var fontStr = (size + 'px ') + (font || 'Arial');\n        ctx.font = fontStr;\n        var w = ctx.measureText(text).width;\n        var h = Math.ceil(size);\n        canvas.width = w;\n        canvas.height = h;\n        ctx.font = fontStr;\n        ctx.fillStyle = color || 'black';\n        ctx.fillText(text, 0, Math.ceil(size * 0.8));\n        return canvas;\n    }\n\n    function createText2D(text, color, font, size, segW, segH) {\n        var canvas = createTextCanvas(text, color, font, size);\n        var plane = new THREE.PlaneGeometry(canvas.width, canvas.height, segW, segH);\n        var tex = new THREE.Texture(canvas);\n        tex.needsUpdate = true;\n        var planeMat = new THREE.MeshBasicMaterial({\n            map: tex,\n            color: 0xffffff,\n            transparent: true\n        });\n        var mesh = new THREE.Mesh(plane, planeMat);\n        mesh.scale.set(0.5, 0.5, 0.5);\n        mesh.doubleSided = true;\n        return mesh;\n    }\n\n    // from http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n    function hexToRgb(hex) { //TODO rewrite with vector output\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    }\n\n    var renderer = new THREE.WebGLRenderer({\n        antialias: true\n    });\n    var w = 960;\n    var h = 500;\n    renderer.setSize(w, h);\n    document.body.appendChild(renderer.domElement);\n\n    renderer.setClearColorHex(0xEEEEEE, 1.0);\n\n    var camera = new THREE.PerspectiveCamera(45, w / h, 1, 10000);\n    camera.position.z = 200;\n    camera.position.x = -100;\n    camera.position.y = 100;\n\n    var scene = new THREE.Scene();\n\n    var scatterPlot = new THREE.Object3D();\n    scene.add(scatterPlot);\n\n    scatterPlot.rotation.y = 0;\n\n    function v(x, y, z) {\n        return new THREE.Vector3(x, y, z);\n    }\n\n    var unfiltered = [],\n        lowPass = [],\n        highPass = [];\n\n    var format = d3.format(\"+.3f\");\n\n    var data = d3.csv(\"defaultData.csv\", function (d) {\n        \n        d.forEach(function (d,i) {\n            unfiltered[i] = {\n                x: +d.x,\n                y: +d.y,\n                z: +d.z\n            };\n            lowPass[i] = {\n                x: +d.lp_x,\n                y: +d.lp_y,\n                z: +d.lp_z\n            };\n            highPass[i] = {\n                x: +d.hp_x,\n                y: +d.hp_y,\n                z: +d.hp_z\n            }\n        })\n\n    var xExent = d3.extent(unfiltered, function (d) {return d.x; }),\n        yExent = d3.extent(unfiltered, function (d) {return d.y; }),\n        zExent = d3.extent(unfiltered, function (d) {return d.z; });\n\n    var vpts = {\n        xMax: xExent[1],\n        xCen: (xExent[1] + xExent[0]) / 2,\n        xMin: xExent[0],\n        yMax: yExent[1],\n        yCen: (yExent[1] + yExent[0]) / 2,\n        yMin: yExent[0],\n        zMax: zExent[1],\n        zCen: (zExent[1] + zExent[0]) / 2,\n        zMin: zExent[0]\n    }\n\n    var colour = d3.scale.category20c();\n\n    var xScale = d3.scale.linear()\n                  .domain(xExent)\n                  .range([-50,50]);\n    var yScale = d3.scale.linear()\n                  .domain(yExent)\n                  .range([-50,50]);                  \n    var zScale = d3.scale.linear()\n                  .domain(zExent)\n                  .range([-50,50]);\n\n    var lineGeo = new THREE.Geometry();\n    lineGeo.vertices.push(\n        v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zCen)),\n        v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zCen)),\n        v(xScale(vpts.xCen), yScale(vpts.yCen), zScale(vpts.zMax)), v(xScale(vpts.xCen), yScale(vpts.yCen), zScale(vpts.zMin)),\n\n        v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMin)),\n        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMin)),\n        v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMax)),\n        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMax)),\n\n        v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMax)),\n        v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMin)),\n        v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zCen)),\n        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zCen)),\n\n        v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMin)),\n        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMin)),\n        v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMax)),\n        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMax)),\n\n        v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMax)),\n        v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMin)),\n        v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zCen)),\n        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zCen)),\n\n        v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMax)),\n        v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMax)),\n        v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMax)),\n        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMax)),\n\n        v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMax)),\n        v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMax)),\n        v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMin)),\n        v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMax))\n\n    );\n    var lineMat = new THREE.LineBasicMaterial({\n        color: 0x000000,\n        lineWidth: 1\n    });\n    var line = new THREE.Line(lineGeo, lineMat);\n    line.type = THREE.Lines;\n    scatterPlot.add(line);\n\n    var titleX = createText2D('-X');\n    titleX.position.x = xScale(vpts.xMin) - 12,\n    titleX.position.y = 5;\n    scatterPlot.add(titleX);\n\n    var valueX = createText2D(format(xExent[0]));\n    valueX.position.x = xScale(vpts.xMin) - 12,\n    valueX.position.y = -5;\n    scatterPlot.add(valueX);\n\n    var titleX = createText2D('X');\n    titleX.position.x = xScale(vpts.xMax) + 12;\n    titleX.position.y = 5;\n    scatterPlot.add(titleX);\n\n    var valueX = createText2D(format(xExent[1]));\n    valueX.position.x = xScale(vpts.xMax) + 12,\n    valueX.position.y = -5;\n    scatterPlot.add(valueX);\n\n    var titleY = createText2D('-Y');\n    titleY.position.y = yScale(vpts.yMin) - 5;\n    scatterPlot.add(titleY);\n\n    var valueY = createText2D(format(yExent[0]));\n    valueY.position.y = yScale(vpts.yMin) - 15,\n    scatterPlot.add(valueY);\n\n    var titleY = createText2D('Y');\n    titleY.position.y = yScale(vpts.yMax) + 15;\n    scatterPlot.add(titleY);\n\n    var valueY = createText2D(format(yExent[1]));\n    valueY.position.y = yScale(vpts.yMax) + 5,\n    scatterPlot.add(valueY);\n\n    var titleZ = createText2D('-Z ' + format(zExent[0]));\n    titleZ.position.z = zScale(vpts.zMin) + 2;\n    scatterPlot.add(titleZ);\n\n    var titleZ = createText2D('Z ' + format(zExent[1]));\n    titleZ.position.z = zScale(vpts.zMax) + 2;\n    scatterPlot.add(titleZ);\n\n    var mat = new THREE.ParticleBasicMaterial({\n        vertexColors: true,\n        size: 10\n    });\n\n    var pointCount = unfiltered.length;\n    var pointGeo = new THREE.Geometry();\n    for (var i = 0; i < pointCount; i ++) {\n        var x = xScale(unfiltered[i].x);\n        var y = yScale(unfiltered[i].y);\n        var z = zScale(unfiltered[i].z);\n\n        pointGeo.vertices.push(new THREE.Vector3(x, y, z));\n        console.log(pointGeo.vertices);\n        //pointGeo.vertices[i].angle = Math.atan2(z, x);\n        //pointGeo.vertices[i].radius = Math.sqrt(x * x + z * z);\n        //pointGeo.vertices[i].speed = (z / 100) * (x / 100);\n        pointGeo.colors.push(new THREE.Color().setRGB(\n          hexToRgb(colour(i)).r / 255, hexToRgb(colour(i)).g / 255, hexToRgb(colour(i)).b / 255 \n        ));\n\n    }\n    var points = new THREE.ParticleSystem(pointGeo, mat);\n    scatterPlot.add(points);\n\n    renderer.render(scene, camera);\n    var paused = false;\n    var last = new Date().getTime();\n    var down = false;\n    var sx = 0,\n        sy = 0;\n        \n    window.onmousedown = function(ev) {\n        down = true;\n        sx = ev.clientX;\n        sy = ev.clientY;\n    };\n    window.onmouseup = function() {\n        down = false;\n    };\n    window.onmousemove = function(ev) {\n        if (down) {\n            var dx = ev.clientX - sx;\n            var dy = ev.clientY - sy;\n            scatterPlot.rotation.y += dx * 0.01;\n            camera.position.y += dy;\n            sx += dx;\n            sy += dy;\n        }\n    }\n    var animating = false;\n    window.ondblclick = function() {\n        animating = !animating;\n    };\n\n    function animate(t) {\n        if (!paused) {\n            last = t;\n            if (animating) {\n                var v = pointGeo.vertices;\n                for (var i = 0; i < v.length; i++) {\n                    var u = v[i];\n                    console.log(u)\n                    u.angle += u.speed * 0.01;\n                    u.x = Math.cos(u.angle) * u.radius;\n                    u.z = Math.sin(u.angle) * u.radius;\n                }\n                pointGeo.__dirtyVertices = true;\n            }\n            renderer.clear();\n            camera.lookAt(scene.position);\n            renderer.render(scene, camera);\n        }\n        window.requestAnimationFrame(animate, renderer.domElement);\n    };\n    animate(new Date().getTime());\n    onmessage = function(ev) {\n        paused = (ev.data == 'pause');\n    };\n\n    })\n    //-->\n    </script>\n</body>\n\n</html>\n", "description": "3D Scatter Plot Using three.js", "created_at": "2016-01-05T11:04:10Z", "updated_at": "2016-01-05T14:12:24Z", "api": ["d3.format", "d3.csv", "d3.extent", "d3.scale.category20c", "d3.scale.linear"], "readme": "This is a 3D scatter plot rendered using webGL using on mobile phone accelerometer data.  You can change view by rotating cube using the mouse.  At present there's no relationship between the colours of the particles.\n\nThe visualisation uses the fantastic [threejs library](http://threejs.org/) for the 3D and hooks into webGL.  The example presented here is heavily based on the threejs scatter plot example.  I've also used [d3.js](http://d3js.org/) for some of convenience functions to import the data, scale the data and set up the ranges for the axis's.\n\n", "uid": "johnburnmurdoch_3cc7b27036af99c07c18"}, {"code": "<!doctype html>\n<html lang=\"en\">\n<head lang=en>\n<meta charset=\"utf-8\">\n<title>D3: Dotted Path Following the Mouse</title>\n<style>\n\nsvg {\n  background: #ddd;\n  font: 10px sans-serif;\n}\n\n.line {\n  fill: none;\n  stroke: #FF0000;\n  stroke-width: 3px;\n}\n\n</style>\n</head>\n\n<body>\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar margin = {top: 10, right: 10, bottom: 20, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n\nvar npoints = 25;\nvar ptdata = [];\nvar listOfPTdata = [];\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d, i) { return d[0]; })\n    .y(function(d, i) { return d[1]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\");\n    //.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar svgagain = d3.select(\"body\").select(\"svg\")\n    .on(\"mousedown\", function(){\n        d3.select(\"body\").select(\"svg\").on(\"mousemove\", function() { \n            var pt = d3.mouse(this); \n            tick(pt); \n        });\n    })\n    .on(\"mouseup\", function(){\n        d3.select(\"body\").select(\"svg\").on(\"mousemove\",null);\n        var ans = prompt('Why is this confusing?');\n        console.log(ans)\n        listOfPTdata.push(ptdata.slice());\n        console.log(listOfPTdata)\n        //ptdata = [];\n    });\n\n\n//listOfPTdata.forEach(function(d,i){\nvar path = svg.append(\"g\")\n  .append(\"path\")\n    .data([ptdata])\n    .attr(\"class\", \"line\")\n    .attr(\"d\", line);\n//});\n\n\n\nfunction tick(pt) {\n\n  // push a new data point onto the back\n  ptdata.push(pt);\n\n  // Redraw the path:\n  path\n      .attr(\"d\", function(d) { return line(d);})\n\n\n  // If more than 100 points, drop the old data pt off the front\n  if (ptdata.length > npoints) {\n\t  ptdata.shift();\n  }\n}\n</script>\n</body>\n</html>", "description": "Block", "created_at": "2014-07-20T20:32:09Z", "updated_at": "2015-08-29T14:04:13Z", "api": ["d3.svg.line", "d3.select", "d3.mouse"], "readme": "I would like to ink on some d3-created visualizations. I really like d3, so I thought I'd create the inking with it too, instead of introducing another library into my project.\n\nHowever, I could only find one demo of d3-based inking: <a href=\"http://bl.ocks.org/cloudshapes/5661984\">a block on bl.ocks.org by 'cloudshape'</a>.\n\nIt was almost exactly what I wanted, except there was this strange offset between where I placed my mouse, and where the line was drawn. So... I copied the code into Brackets and modified it until this offset was gone. I think it's a small but significant improvement. Now I'm sharing it as a 'block' of my own!\n\nCloudshapes, thank you so much for creating the original drawing app. You did all this work, and I am grateful. I just changed one line of code!", "uid": "eglassman_6f7cbde4826a86c18f92"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n  </style>\n</head>\n\n<body>\n  <script>\n    var margin = {top: 20, right: 10, bottom: 20, left: 10};\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // Feel free to change or delete any of the code you see!\n    svg.append(\"rect\")\n      .attr({x: 100, y: 100, width: width-200, height: height-200})\n      .style({ fill: \"#a72d1a\"})\n      .transition().duration(3000).ease(\"bounce\")\n      .style({ fill: \"#5db9e3\"})\n    \n    console.log(\"you are now rocking with d3\", d3);\n  </script>\n</body>\n", "description": "d3 mapping", "created_at": "2015-10-26T22:53:55Z", "updated_at": "2015-10-26T22:53:55Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "anatolyg_25fa3e51da9a1ac22e02"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n  </style>\n</head>\n\n<body>\n  <script>\n    var gaussianDataGenerator = d3.random.normal();\n    var margin = {top: 20, right: 10, bottom: 20, left: 10};\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    \n    // Create the svg container\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    \t.append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\t// Create some rectangles inside the svg container\n    var rectangles = svg.selectAll(\"rect\")\n    \t\t\t\t\t\t\t\t\t\t.data([1,2,3,4,5])\n       \t\t\t\t\t\t\t\t\t.enter()\n    \t\t\t\t\t\t\t\t\t\t.append(\"rect\")\n       \t\t\t\t\t\t\t\t\t.attr('x', function(d){\n                          return d + 1\n                        }) \n       \t\t\t\t\t\t\t\t\t.attr('y', function(d){\n                        \treturn d + 2\n                        })\n    \t \t\t\t\t\t\t\t\t\t.attr(\"width\", width)\n    \t \t\t\t\t\t\t\t\t\t.attr(\"height\", height)\n       \t\t\t\t\t\t\t\t\t.style({ fill: \"#196496\"})\n  </script>\n</body>\n", "description": "d3-introduction", "created_at": "2015-11-17T11:21:04Z", "updated_at": "2015-11-17T20:43:15Z", "api": ["d3.random.normal", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "yassineAlouini_fdbca6ea6f4416e6b328"}, {"code": "<!DOCTYPE html >\n<html >\n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"chrome=1\" />\n    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" />\n    <title>d3 x3dom demo</title>\n    <script type=\"text/javascript\" src=\"http://mbostock.github.com/d3/d3.js\"></script>\n    <script type=\"text/javascript\" src=\"http://x3dom.org/x3dom/example/x3dom.js\"></script>\n  </head>\n  <body>\n    <script>\n      function randomData() {\n        return d3.range(6).map( function() { return Math.random()*20; } )\n      };\n\n      x3d = d3.select(\"body\")\n                    .append(\"x3d\")\n                    .attr( \"height\", \"400px\" )\n                    .attr( \"width\", \"400px\" )\n                    ;\n      var scene = x3d.append(\"scene\");\n      scene.append(\"viewpoint\")\n           .attr( \"centerOfRotation\", \"3.75 0 10\")\n           .attr( \"position\", \"13.742265188709691 -27.453522975182366 16.816062840792625\" )\n           .attr( \"orientation\", \"0.962043810961999 0.1696342804961945 0.21376603254551874 1.379433089729343\" )\n           ;\n\n      function refresh( data ) {\n        shapes = scene.selectAll(\"transform\").data( data );\n        shapesEnter = shapes\n             .enter()\n             .append( \"transform\" )\n             .append( \"shape\" )\n             ;\n        // Enter and update\n        shapes.transition()\n              .attr(\"translation\", function(d,i) { return i*1.5 + \" 0.0 \" + d/2.0; } )\n              .attr(\"scale\", function(d) { return \"1.0 1.0 \" + d; } )\n              ;\n\n        shapesEnter\n            .append(\"appearance\")\n              .append(\"material\")\n              .attr(\"diffuseColor\", \"steelblue\" );\n\n        shapesEnter.append( \"box\" )\n          .attr( \"size\", \"1.0 1.0 1.0\" );\n      }\n\n      refresh( randomData() )\n      setInterval(\n        function(){\n          refresh( randomData() );\n        },\n        2500);\n\n    </script>\n  </body>\n</html>", "description": "d3 with x3dom Demo", "created_at": "2013-03-05T00:53:07Z", "updated_at": "2015-12-14T12:29:05Z", "api": ["d3.range", "d3.select"], "readme": "Here is a demonstration of integrating d3 and x3dom to create a 3d bar plot of dynamic data. This example demonstrates the power of the d3 approach -- using x3dom for 3d visualization is just as concise and conceptually simple as using svg for 2d graphics.\n\nUse your mouse to change the viewing angle, pan, and zoom.\n\nNotes\n-----\nFiguring out the correct viewport position and orientation was challenging and involved a lot of matrix math. See the wikipedia page for rotation matrices for hints.\n\n\nLinks\n-----\n\n * Live demo of this file: http://bl.ocks.org/camio/5087116\n * X3D Reference: http://www.web3d.org/files/specifications/19775-1/V3.3/index.html\n * x3dom site: http://www.x3dom.org/\n\nAuthors\n-------\nDavid Sankel & Harry Voorhees\nStellar Science\n", "uid": "camio_5087116"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<script src=\"topojson.v0.min.js\"></script>\n<html>\n<style>\n    .background {\n        fill: none;\n        pointer-events: all;\n    }\n\n    .department {\n        fill: #aaa;\n        stroke: #fff;\n        stroke-width: 1.5px;\n    }\n\n</style>\n<body>\n<script>\n\n    d3.json(\"santafe.json\", function(error, theProvince) {\n        var width= 960, height= 500;\n        var svg = d3.select(\"body\").append(\"svg\");\n        var departments = topojson.object(theProvince, theProvince.objects.departments);\n\n        // The projection\n        var projection = d3.geo.mercator()\n                .scale(14000)\n                .center([-60.951,-31.2])\n                .translate([width / 2, height / 2]);\n\n        // The path\n        var path = d3.geo.path()\n                .projection(projection);\n\n        // Zoom behavior\n        var zoom = d3.behavior.zoom()\n                .translate(projection.translate())\n                .scaleExtent([height, Infinity])\n                .scale(projection.scale())\n                .on(\"zoom\", function() {\n                    projection.translate(d3.event.translate).scale(d3.event.scale)\n                    map.selectAll(\"path.zoomable\").attr(\"d\", path);\n                    map.selectAll(\".place-label\").attr(\"transform\", function(d) { return \"translate(\" + projection(d.coordinates.reverse()) + \")\"; });\n                });\n\n\n        // The map\n        var map = svg.append(\"g\")\n                .classed(\"provinceMap\", true)\n                .call(zoom);\n\n        map.append(\"rect\")\n                .attr(\"class\", \"background\")\n                .attr(\"width\", width)\n                .attr(\"height\", height);\n\n        // Departments\n        map.selectAll(\".department\")\n                .data(departments.geometries)\n                .enter().append(\"path\")\n                .classed(\"department\", true)\n                .classed(\"zoomable\", true)\n                .attr(\"d\", path);\n\n        // Places\n        map.selectAll(\".place-label\")\n                .data(topojson.object(theProvince, theProvince.objects.maternidades).geometries)\n                .enter().append(\"path\")\n                .classed(\"place\", true)\n                .attr(\"d\", d3.svg.symbol().type(\"cross\"))\n                .attr(\"transform\", function(d) { return \"translate(\" + projection(d.coordinates.reverse()) + \")\"; });\n    });\n</script>\n\n</body>\n</html>", "description": "", "created_at": "2013-03-06T01:11:34Z", "updated_at": "2015-12-14T13:48:51Z", "api": ["d3.json", "d3.select", "d3.geo.mercator", "d3.geo.path", "d3.behavior.zoom", "d3.svg.symbol"], "readme": "The Issue\n====================\n\nI'm trying to build a map that can be zoomed using the mouse wheel and panned with drag.\nFor that I'm using `d3.behavior.zoom()` and it works fine for the map.\nHowever, I also need to mark some points in the map (which are included in the same topojson used to draw the map). They get rendered just fine, but I'm having trouble handling the zoom behaviour with these points. If you try to zoom or pan, the points get translated abruptly and even seem to change their path!\n\nAny ideas?", "uid": "enjalot_5095908"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.axis text {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n  \nvar seqlength=0;\n\nd3.tsv(\"gene.txt\", function(error, data){\n\tif (error) throw error;\n\tvar line = data;\n\tvar linelength = line.length;\n  seqlength = seqlength + linelength;\n\tconsole.log(linelength);  \n});\n  \n\n\nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 860 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.identity()\n    .domain([0, width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickValues(length)\n    .orient(\"bottom\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(xAxis);\n\nvar myString=\"gene.txt\"  \nvar length=\"myString.length\"  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n</script>", "description": "D3 ruler", "created_at": "2016-02-18T16:39:01Z", "updated_at": "2016-02-18T16:39:01Z", "api": ["d3.tsv", "d3.scale.identity", "d3.svg.axis", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "Rico3734_2d06a6aadbb4af3398ba"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n\t<meta name=\"viewport\" content=\"width=320\" />\n\t<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n\t<title>Gauge</title>\n\t<script type=\"text/javascript\" src=\"http://d3js.org/d3.v2.min.js\"></script>\n\t<style>\n\tbody {\n\t\tfont-family:  Helvetica, Arial, sans-serif;\n\t\tmargin: 32px;\n\t}\n\n\t#power-gauge g.arc {\n\t\tfill: steelblue;\n\t}\n\n\t#power-gauge g.pointer {\n\t\tfill: #e85116;\n\t\tstroke: #b64011;\n\t}\n\t\n\t#power-gauge g.label text {\n\t\ttext-anchor: middle;\n\t\tfont-size: 14px;\n\t\tfont-weight: bold;\n\t\tfill: #666;\n\t}\n\t</style>\n</head>\n<body>\n<div id=\"power-gauge\"></div>\n\t\n<script>\nvar gauge = function(container, configuration) {\n\tvar that = {};\n\tvar config = {\n\t\tsize\t\t\t\t\t\t: 200,\n\t\tclipWidth\t\t\t\t\t: 200,\n\t\tclipHeight\t\t\t\t\t: 110,\n\t\tringInset\t\t\t\t\t: 20,\n\t\tringWidth\t\t\t\t\t: 20,\n\t\t\n\t\tpointerWidth\t\t\t\t: 10,\n\t\tpointerTailLength\t\t\t: 5,\n\t\tpointerHeadLengthPercent\t: 0.9,\n\t\t\n\t\tminValue\t\t\t\t\t: 0,\n\t\tmaxValue\t\t\t\t\t: 10,\n\t\t\n\t\tminAngle\t\t\t\t\t: -90,\n\t\tmaxAngle\t\t\t\t\t: 90,\n\t\t\n\t\ttransitionMs\t\t\t\t: 750,\n\t\t\n\t\tmajorTicks\t\t\t\t\t: 5,\n\t\tlabelFormat\t\t\t\t\t: d3.format(',g'),\n\t\tlabelInset\t\t\t\t\t: 10,\n\t\t\n\t\tarcColorFn\t\t\t\t\t: d3.interpolateHsl(d3.rgb('#e8e2ca'), d3.rgb('#3e6c0a'))\n\t};\n\tvar range = undefined;\n\tvar r = undefined;\n\tvar pointerHeadLength = undefined;\n\tvar value = 0;\n\t\n\tvar svg = undefined;\n\tvar arc = undefined;\n\tvar scale = undefined;\n\tvar ticks = undefined;\n\tvar tickData = undefined;\n\tvar pointer = undefined;\n\n\tvar donut = d3.layout.pie();\n\t\n\tfunction deg2rad(deg) {\n\t\treturn deg * Math.PI / 180;\n\t}\n\t\n\tfunction newAngle(d) {\n\t\tvar ratio = scale(d);\n\t\tvar newAngle = config.minAngle + (ratio * range);\n\t\treturn newAngle;\n\t}\n\t\n\tfunction configure(configuration) {\n\t\tvar prop = undefined;\n\t\tfor ( prop in configuration ) {\n\t\t\tconfig[prop] = configuration[prop];\n\t\t}\n\t\t\n\t\trange = config.maxAngle - config.minAngle;\n\t\tr = config.size / 2;\n\t\tpointerHeadLength = Math.round(r * config.pointerHeadLengthPercent);\n\n\t\t// a linear scale that maps domain values to a percent from 0..1\n\t\tscale = d3.scale.linear()\n\t\t\t.range([0,1])\n\t\t\t.domain([config.minValue, config.maxValue]);\n\t\t\t\n\t\tticks = scale.ticks(config.majorTicks);\n\t\ttickData = d3.range(config.majorTicks).map(function() {return 1/config.majorTicks;});\n\t\t\n\t\tarc = d3.svg.arc()\n\t\t\t.innerRadius(r - config.ringWidth - config.ringInset)\n\t\t\t.outerRadius(r - config.ringInset)\n\t\t\t.startAngle(function(d, i) {\n\t\t\t\tvar ratio = d * i;\n\t\t\t\treturn deg2rad(config.minAngle + (ratio * range));\n\t\t\t})\n\t\t\t.endAngle(function(d, i) {\n\t\t\t\tvar ratio = d * (i+1);\n\t\t\t\treturn deg2rad(config.minAngle + (ratio * range));\n\t\t\t});\n\t}\n\tthat.configure = configure;\n\t\n\tfunction centerTranslation() {\n\t\treturn 'translate('+r +','+ r +')';\n\t}\n\t\n\tfunction isRendered() {\n\t\treturn (svg !== undefined);\n\t}\n\tthat.isRendered = isRendered;\n\t\n\tfunction render(newValue) {\n\t\tsvg = d3.select(container)\n\t\t\t.append('svg:svg')\n\t\t\t\t.attr('class', 'gauge')\n\t\t\t\t.attr('width', config.clipWidth)\n\t\t\t\t.attr('height', config.clipHeight);\n\t\t\n\t\tvar centerTx = centerTranslation();\n\t\t\n\t\tvar arcs = svg.append('g')\n\t\t\t\t.attr('class', 'arc')\n\t\t\t\t.attr('transform', centerTx);\n\t\t\n\t\tarcs.selectAll('path')\n\t\t\t\t.data(tickData)\n\t\t\t.enter().append('path')\n\t\t\t\t.attr('fill', function(d, i) {\n\t\t\t\t\treturn config.arcColorFn(d * i);\n\t\t\t\t})\n\t\t\t\t.attr('d', arc);\n\t\t\n\t\tvar lg = svg.append('g')\n\t\t\t\t.attr('class', 'label')\n\t\t\t\t.attr('transform', centerTx);\n\t\tlg.selectAll('text')\n\t\t\t\t.data(ticks)\n\t\t\t.enter().append('text')\n\t\t\t\t.attr('transform', function(d) {\n\t\t\t\t\tvar ratio = scale(d);\n\t\t\t\t\tvar newAngle = config.minAngle + (ratio * range);\n\t\t\t\t\treturn 'rotate(' +newAngle +') translate(0,' +(config.labelInset - r) +')';\n\t\t\t\t})\n\t\t\t\t.text(config.labelFormat);\n\n\t\tvar lineData = [ [config.pointerWidth / 2, 0], \n\t\t\t\t\t\t[0, -pointerHeadLength],\n\t\t\t\t\t\t[-(config.pointerWidth / 2), 0],\n\t\t\t\t\t\t[0, config.pointerTailLength],\n\t\t\t\t\t\t[config.pointerWidth / 2, 0] ];\n\t\tvar pointerLine = d3.svg.line().interpolate('monotone');\n\t\tvar pg = svg.append('g').data([lineData])\n\t\t\t\t.attr('class', 'pointer')\n\t\t\t\t.attr('transform', centerTx);\n\t\t\t\t\n\t\tpointer = pg.append('path')\n\t\t\t.attr('d', pointerLine/*function(d) { return pointerLine(d) +'Z';}*/ )\n\t\t\t.attr('transform', 'rotate(' +config.minAngle +')');\n\t\t\t\n\t\tupdate(newValue === undefined ? 0 : newValue);\n\t}\n\tthat.render = render;\n\t\n\tfunction update(newValue, newConfiguration) {\n\t\tif ( newConfiguration  !== undefined) {\n\t\t\tconfigure(newConfiguration);\n\t\t}\n\t\tvar ratio = scale(newValue);\n\t\tvar newAngle = config.minAngle + (ratio * range);\n\t\tpointer.transition()\n\t\t\t.duration(config.transitionMs)\n\t\t\t.ease('elastic')\n\t\t\t.attr('transform', 'rotate(' +newAngle +')');\n\t}\n\tthat.update = update;\n\n\tconfigure(configuration);\n\t\n\treturn that;\n};\n</script>\n\n<script>\nfunction onDocumentReady() {\n\tvar powerGauge = gauge('#power-gauge', {\n\t\tsize: 300,\n\t\tclipWidth: 300,\n\t\tclipHeight: 300,\n\t\tringWidth: 60,\n\t\tmaxValue: 10,\n\t\ttransitionMs: 4000,\n\t});\n\tpowerGauge.render();\n\t\n\tfunction updateReadings() {\n\t\t// just pump in random data here...\n\t\tpowerGauge.update(Math.random() * 10);\n\t}\n\t\n\t// every few seconds update reading values\n\tupdateReadings();\n\tsetInterval(function() {\n\t\tupdateReadings();\n\t}, 5 * 1000);\n}\n\nif ( !window.isLoaded ) {\n\twindow.addEventListener(\"load\", function() {\n\t\tonDocumentReady();\n\t}, false);\n} else {\n\tonDocumentReady();\n}\n</script>\n</body>\n</html>\n", "description": "d3 gauge", "created_at": "2012-07-30T00:03:05Z", "updated_at": "2016-05-02T11:23:14Z", "api": ["d3.format", "d3.interpolateHsl", "d3.rgb", "d3.layout.pie", "d3.scale.linear", "d3.range", "d3.svg.arc", "d3.select", "d3.svg.line"], "readme": "", "uid": "msqr_3202712"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n\n  <body>\n    <script>\n      // Set the dimensions of the canvas / graph\n    var margin = {top: 30, right: 30, bottom: 40, left: 50};\n    var width = 800 - margin.left - margin.right;\n    var height = 300 - margin.top - margin.bottom;\n\n    // Set the ranges\n    var x = d3.time.scale().range([0, width]);\n    var y = d3.scale.linear().range([height, 0]);\n\n    // Define the axes\n    var xAxis = d3.svg.axis().scale(x)\n        .orient(\"bottom\").ticks(5);\n\n    var yAxis = d3.svg.axis().scale(y)\n        .orient(\"left\").ticks(5);\n\n    // Adds the svg canvas\n    var svgContainer = d3.select(\"body\")\n        .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n            .attr(\"transform\", \n                  \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var data = [\n                {\"date\":\"1-Apr-15\", \"close\":140.61},\n                {\"date\":\"15-Apr-15\", \"close\":20.23},\n                {\"date\":\"13-May-15\", \"close\":99.00},\n                {\"date\":\"21-May-15\", \"close\":188.13},\n                {\"date\":\"18-Jun-15\", \"close\":59.13},\n                {\"date\":\"28-Jul-15\", \"close\":75.13},\n                {\"date\":\"8-Aug-15\", \"close\":109.13},\n                {\"date\":\"12-Aug-15\", \"close\":96.13}];\n\n    // Parse the date / time\n    var parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n    // Get the data\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the X Axis\n    svgContainer.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svgContainer.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n    // Draw vertical grid lines\n    svgContainer.append(\"g\")     \n        .attr(\"class\", \"grid\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis\n            .tickSize(-height, 0, 0)\n            .tickFormat(\"\")\n            )\n\n    // Draw horizontal grid lines\n    svgContainer.append(\"g\")     \n        .attr(\"class\", \"grid\")\n        .call(yAxis\n            .tickSize(-width, 0, 0)\n            .tickFormat(\"\")\n            )\n\n    svgContainer.selectAll(\"bar\")\n        .data(data)\n        .enter().append(\"rect\")\n        .style(\"fill\", \"#aec6a8\")\n        .attr(\"x\", function(d) { return x(d.date)-5; })\n        .attr(\"width\", 10)\n        .attr(\"y\", function(d) { return y(d.close); })\n        .attr(\"height\", function(d) { return height - y(d.close); });\n      \n    // Define the line (interpolate to smooth the line)\n    var valueline = d3.svg.line()\n        .interpolate(\"cardinal\")\n        .x(function(d) { return x(d.date); })\n        .y(function(d) { return y(d.close); });\n\n    svgContainer.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n   </script>\n</body>\n", "description": "D3 graphs", "created_at": "2015-10-23T23:48:33Z", "updated_at": "2015-10-24T07:33:28Z", "api": ["d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.time.format", "d3.extent", "d3.max", "d3.svg.line"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nSimple D3 graph.", "uid": "dmijalkovic_52fb07194d4b2988cafb"}, {"code": "<html>\n<head>\n    <meta charset=\"utf-8\">\n\t<meta name=\"viewport\" content=\"width=320\" />\n\t<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n\t<title>Gauge</title>\n\t<script type=\"text/javascript\" src=\"http://d3js.org/d3.v2.min.js\"></script>\n\t<style>\n\tbody {\n\t\tfont-family:  Helvetica, Arial, sans-serif;\n\t\tmargin: 32px;\n\t}\n\t#power-gauge g.arc {\n\t\tfill: steelblue;\n\t}\n\t#power-gauge g.pointer {\n\t\tfill: #e85116;\n\t\tstroke: #b64011;\n\t}\n\t\n\t#power-gauge g.label text {\n\t\ttext-anchor: middle;\n\t\tfont-size: 14px;\n\t\tfont-weight: bold;\n\t\tfill: #666;\n\t}\n\t</style>\n</head>\n<body>\n<div id=\"power-gauge\"></div>\n\t\n<script>\nvar gauge = function(container, configuration) {\n\tvar that = {};\n\tvar config = {\n\t\tsize\t\t\t\t\t\t: 200,\n\t\tclipWidth\t\t\t\t\t: 200,\n\t\tclipHeight\t\t\t\t\t: 110,\n\t\tringInset\t\t\t\t\t: 20,\n\t\tringWidth\t\t\t\t\t: 20,\n\t\t\n\t\tpointerWidth\t\t\t\t: 10,\n\t\tpointerTailLength\t\t\t: 5,\n\t\tpointerHeadLengthPercent\t: 0.9,\n\t\t\n\t\tminValue\t\t\t\t\t: 0,\n\t\tmaxValue\t\t\t\t\t: 10,\n\t\t\n\t\tminAngle\t\t\t\t\t: -90,\n\t\tmaxAngle\t\t\t\t\t: 90,\n\t\t\n\t\ttransitionMs\t\t\t\t: 750,\n\t\t\n\t\tmajorTicks\t\t\t\t\t: 5,\n\t\tlabelFormat\t\t\t\t\t: d3.format(',g'),\n\t\tlabelInset\t\t\t\t\t: 10,\n\t\t\n\t\tarcColorFn\t\t\t\t\t: d3.interpolateHsl(d3.rgb('#e8e2ca'), d3.rgb('#3e6c0a'))\n\t};\n\tvar range = undefined;\n\tvar r = undefined;\n\tvar pointerHeadLength = undefined;\n\tvar value = 0;\n\t\n\tvar svg = undefined;\n\tvar arc = undefined;\n\tvar scale = undefined;\n\tvar ticks = undefined;\n\tvar tickData = undefined;\n\tvar pointer = undefined;\n\tvar donut = d3.layout.pie();\n\t\n\tfunction deg2rad(deg) {\n\t\treturn deg * Math.PI / 180;\n\t}\n\t\n\tfunction newAngle(d) {\n\t\tvar ratio = scale(d);\n\t\tvar newAngle = config.minAngle + (ratio * range);\n\t\treturn newAngle;\n\t}\n\t\n\tfunction configure(configuration) {\n\t\tvar prop = undefined;\n\t\tfor ( prop in configuration ) {\n\t\t\tconfig[prop] = configuration[prop];\n\t\t}\n\t\t\n\t\trange = config.maxAngle - config.minAngle;\n\t\tr = config.size / 2;\n\t\tpointerHeadLength = Math.round(r * config.pointerHeadLengthPercent);\n\t\t// a linear scale that maps domain values to a percent from 0..1\n\t\tscale = d3.scale.linear()\n\t\t\t.range([0,1])\n\t\t\t.domain([config.minValue, config.maxValue]);\n\t\t\t\n\t\tticks = scale.ticks(config.majorTicks);\n\t\ttickData = d3.range(config.majorTicks).map(function() {return 1/config.majorTicks;});\n\t\t\n\t\tarc = d3.svg.arc()\n\t\t\t.innerRadius(r - config.ringWidth - config.ringInset)\n\t\t\t.outerRadius(r - config.ringInset)\n\t\t\t.startAngle(function(d, i) {\n\t\t\t\tvar ratio = d * i;\n\t\t\t\treturn deg2rad(config.minAngle + (ratio * range));\n\t\t\t})\n\t\t\t.endAngle(function(d, i) {\n\t\t\t\tvar ratio = d * (i+1);\n\t\t\t\treturn deg2rad(config.minAngle + (ratio * range));\n\t\t\t});\n\t}\n\tthat.configure = configure;\n\t\n\tfunction centerTranslation() {\n\t\treturn 'translate('+r +','+ r +')';\n\t}\n\t\n\tfunction isRendered() {\n\t\treturn (svg !== undefined);\n\t}\n\tthat.isRendered = isRendered;\n\t\n\tfunction render(newValue) {\n\t\tsvg = d3.select(container)\n\t\t\t.append('svg:svg')\n\t\t\t\t.attr('class', 'gauge')\n\t\t\t\t.attr('width', config.clipWidth)\n\t\t\t\t.attr('height', config.clipHeight);\n\t\t\n\t\tvar centerTx = centerTranslation();\n\t\t\n\t\tvar arcs = svg.append('g')\n\t\t\t\t.attr('class', 'arc')\n\t\t\t\t.attr('transform', centerTx);\n\t\t\n\t\tarcs.selectAll('path')\n\t\t\t\t.data(tickData)\n\t\t\t.enter().append('path')\n\t\t\t\t.attr('fill', function(d, i) {\n\t\t\t\t\treturn config.arcColorFn(d * i);\n\t\t\t\t})\n\t\t\t\t.attr('d', arc);\n\t\t\n\t\tvar lg = svg.append('g')\n\t\t\t\t.attr('class', 'label')\n\t\t\t\t.attr('transform', centerTx);\n\t\tlg.selectAll('text')\n\t\t\t\t.data(ticks)\n\t\t\t.enter().append('text')\n\t\t\t\t.attr('transform', function(d) {\n\t\t\t\t\tvar ratio = scale(d);\n\t\t\t\t\tvar newAngle = config.minAngle + (ratio * range);\n\t\t\t\t\treturn 'rotate(' +newAngle +') translate(0,' +(config.labelInset - r) +')';\n\t\t\t\t})\n\t\t\t\t.text(config.labelFormat);\n\t\tvar lineData = [ [config.pointerWidth / 2, 0], \n\t\t\t\t\t\t[0, -pointerHeadLength],\n\t\t\t\t\t\t[-(config.pointerWidth / 2), 0],\n\t\t\t\t\t\t[0, config.pointerTailLength],\n\t\t\t\t\t\t[config.pointerWidth / 2, 0] ];\n\t\tvar pointerLine = d3.svg.line().interpolate('monotone');\n\t\tvar pg = svg.append('g').data([lineData])\n\t\t\t\t.attr('class', 'pointer')\n\t\t\t\t.attr('transform', centerTx);\n\t\t\t\t\n\t\tpointer = pg.append('path')\n\t\t\t.attr('d', pointerLine/*function(d) { return pointerLine(d) +'Z';}*/ )\n\t\t\t.attr('transform', 'rotate(' +config.minAngle +')');\n\t\t\t\n\t\tupdate(newValue === undefined ? 0 : newValue);\n\t}\n\tthat.render = render;\n\t\n\tfunction update(newValue, newConfiguration) {\n\t\tif ( newConfiguration  !== undefined) {\n\t\t\tconfigure(newConfiguration);\n\t\t}\n\t\tvar ratio = scale(newValue);\n\t\tvar newAngle = config.minAngle + (ratio * range);\n\t\tpointer.transition()\n\t\t\t.duration(config.transitionMs)\n\t\t\t.ease('elastic')\n\t\t\t.attr('transform', 'rotate(' +newAngle +')');\n\t}\n\tthat.update = update;\n\tconfigure(configuration);\n\t\n\treturn that;\n};\n</script>\n\n<script>\nfunction onDocumentReady() {\n\tvar powerGauge = gauge('#power-gauge', {\n\t\tsize: 300,\n\t\tclipWidth: 300,\n\t\tclipHeight: 300,\n\t\tringWidth: 60,\n\t\tmaxValue: 10,\n\t\ttransitionMs: 4000,\n\t});\n\tpowerGauge.render();\n\t\n\tfunction updateReadings() {\n\t\t// just pump in random data here...\n\t\tpowerGauge.update(Math.random() * 10);\n\t}\n\t\n\t// every few seconds update reading values\n\tupdateReadings();\n\tsetInterval(function() {\n\t\tupdateReadings();\n\t}, 5 * 1000);\n}\nif ( !window.isLoaded ) {\n\twindow.addEventListener(\"load\", function() {\n\t\tonDocumentReady();\n\t}, false);\n} else {\n\tonDocumentReady();\n}\n</script>\n</body>\n</html>", "description": "d3 gauge", "created_at": "2016-03-04T05:05:37Z", "updated_at": "2016-03-04T05:05:37Z", "api": ["d3.format", "d3.interpolateHsl", "d3.rgb", "d3.layout.pie", "d3.scale.linear", "d3.range", "d3.svg.arc", "d3.select", "d3.svg.line"], "readme": "d3 gauge\n\nforked from <a href='http://bl.ocks.org/ImSraone/'>ImSraone</a>'s block: <a href='http://bl.ocks.org/ImSraone/a6f4f74a628d844e6afb'>d3 gauge</a>", "uid": "ImSraone_216ee9834f42bdfaffae"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <script src='http://api.tiles.mapbox.com/mapbox.js/v0.6.4/mapbox.js'></script>\n  <script src='http://d3js.org/d3.v2.min.js?2.9.3'></script>\n  <link\n      href='http://api.tiles.mapbox.com/mapbox.js/v0.6.4/mapbox.css'\n      rel='stylesheet' />\n  <style>\n    body { margin:0; padding:0; }\n    #map { position:absolute; top:0; bottom:0; width:100%; }\n    .d3-vec { position:absolute; }\n    path {\n      fill: #000;\n      fill-opacity: .2;\n      stroke: #fff;\n      stroke-width: 1.5px;\n    }\n\n    path:hover {\n      fill: brown;\n      fill-opacity: .7;\n    }\n  </style>\n</head>\n<body>\n<div id='map'></div>\n<script>\n  function folly() {\n      var f = {}, bounds, feature;\n      var div = d3.select(document.body)\n          .append(\"div\")\n          .attr('class', 'd3-vec'),\n      svg = div.append('svg'),\n      g = svg.append(\"g\");\n\n      f.parent = div.node();\n\n      // Use Leaflet to implement a D3 geographic projection.\n      f.project = function(x) {\n        var point = f.map.locationPoint({ lat: x[1], lon: x[0] });\n        return [point.x, point.y];\n      }\n\n      // Reposition the SVG to cover the features.\n      f.draw = function() {\n        var bounds = f.map.extent(),\n            bl = bounds.southWest(),\n            tr = bounds.northEast();\n        var bottomLeft = f.project([bl.lon, bl.lat]),\n            topRight = f.project([tr.lon, tr.lat]);\n\n        svg.attr(\"width\", topRight[0] - bottomLeft[0])\n            .attr(\"height\", bottomLeft[1] - topRight[1])\n            .style(\"margin-left\", bottomLeft[0] + \"px\")\n            .style(\"margin-top\", topRight[1] + \"px\");\n\n        g.attr(\"transform\", \"translate(\" + -bottomLeft[0] + \",\" + -topRight[1] + \")\");\n\n        path = d3.geo.path().projection(f.project);\n\n        feature.attr(\"d\", path);\n      }\n\n      f.data = function(collection) {\n          bounds = d3.geo.bounds(collection);\n          feature = g.selectAll(\"path\")\n              .data(collection.features)\n              .enter().append(\"path\");\n          return f;\n      };\n\n      return f;\n  }\n  mapbox.auto('map', 'examples.map-vyofok3q', function(map) {\n      d3.json(\"us-states.json\", function(collection) {\n          var l = folly().data(collection);\n          map.addLayer(l);\n          map.zoom(4).center({ lat: 37, lon: -90 });\n      });\n  });\n</script>\n</body>\n</html>\n", "description": "MapBox + d3", "created_at": "2016-03-23T05:06:30Z", "updated_at": "2016-03-23T05:06:32Z", "api": ["d3.select", "d3.geo.path", "d3.geo.bounds", "d3.json"], "readme": "\n\nforked from <a href='http://bl.ocks.org/tmcw/'>tmcw</a>'s block: <a href='http://bl.ocks.org/tmcw/3426132'>MapBox + d3</a>", "uid": "jwarburg_357d91975a97e9f68208"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <script src='http://api.tiles.mapbox.com/mapbox.js/v0.6.4/mapbox.js'></script>\n  <script src='http://d3js.org/d3.v2.js?2.9.3'></script>\n  <link\n      href='http://api.tiles.mapbox.com/mapbox.js/v0.6.4/mapbox.css'\n      rel='stylesheet' />\n  <style>\n    body { margin:0; padding:0; }\n    #map { position:absolute; top:0; bottom:0; width:100%; }\n    .d3-vec { position:absolute; }\n    path {\n      fill: #000;\n      fill-opacity: .2;\n      stroke: #fff;\n      stroke-width: 1.5px;\n    }\n\n    path:hover {\n      fill: brown;\n      fill-opacity: .7;\n    }\n  </style>\n</head>\n<body>\n<div id='map'></div>\n<script>\n  function folly() {\n      var f = {}, bounds, feature;\n      var div = d3.select(document.body)\n          .append(\"div\")\n          .attr('class', 'd3-vec'),\n      svg = div.append('svg'),\n      g = svg.append(\"g\");\n\n      f.parent = div.node();\n\n      // Use Leaflet to implement a D3 geographic projection.\n      f.project = function(x) {\n        var point = f.map.locationPoint({ lat: x[1], lon: x[0] });\n        return [point.x, point.y];\n      }\n\n      // Reposition the SVG to cover the features.\n      f.draw = function() {\n        var bounds = f.map.extent(),\n            bl = bounds.southWest(),\n            tr = bounds.northEast();\n        var bottomLeft = f.project([bl.lon, bl.lat]),\n            topRight = f.project([tr.lon, tr.lat]);\n\n        svg.attr(\"width\", topRight[0] - bottomLeft[0])\n            .attr(\"height\", bottomLeft[1] - topRight[1])\n            .style(\"margin-left\", bottomLeft[0] + \"px\")\n            .style(\"margin-top\", topRight[1] + \"px\");\n\n        g.attr(\"transform\", \"translate(\" + -bottomLeft[0] + \",\" + -topRight[1] + \")\");\n\n        path = d3.geo.path().projection(f.project);\n\n        feature.attr(\"d\", path);\n      }\n\n      f.data = function(collection) {\n          bounds = d3.geo.bounds(collection);\n          feature = g.selectAll(\"path\")\n              .data(collection)\n              .enter().append(\"path\");\n          return f;\n      };\n\n      return f;\n  }\n  var mapbox_tilejson = 'http://api.tiles.mapbox.com/v3/mapbox.mapbox-light.jsonp';\n  mapbox.load(mapbox_tilejson, function(o) {\n    var m = mapbox.map('map');\n    m.addLayer(o.layer);\n    m.ui.zoomer.add();\n    var mapbounds = new MM.Extent(\n      32.15603702811953,\n      34.8453784951352,\n      32.02354637361072,\n      34.733455277361784);\n    m.setExtent(mapbounds);\n    m.setPanLimits(mapbounds);\n    m.setZoomRange(13,17);\n    d3.json(\"tlv.json\", function(collection) {\n        var l = folly().data([collection]);\n        m.addLayer(l);\n    });\n  });\n</script>\n</body>\n</html>\n", "description": "MapBox + d3", "created_at": "2012-11-25T01:48:18Z", "updated_at": "2015-10-13T04:48:05Z", "api": ["d3.select", "d3.geo.path", "d3.geo.bounds", "d3.json"], "readme": "", "uid": "pnavarrc_4142064"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n  <style>\n    body { margin:0; padding:0; }\n    #map { width:960px; height:500px; background:cyan; }\n  </style>\n</head>\n<body>\n<div id='map'></div>\n<script>\nfunction clickcancel() {\n    var event = d3.dispatch('click', 'dblclick');\n    function cc(selection) {\n        var down,\n            tolerance = 5,\n            last,\n            wait = null;\n        // euclidean distance\n        function dist(a, b) {\n            return Math.sqrt(Math.pow(a[0] - b[0], 2), Math.pow(a[1] - b[1], 2));\n        }\n        selection.on('mousedown', function() {\n            down = d3.mouse(document.body);\n            last = +new Date();\n        });\n        selection.on('mouseup', function() {\n            if (dist(down, d3.mouse(document.body)) > tolerance) {\n                return;\n            } else {\n                if (wait) {\n                    window.clearTimeout(wait);\n                    wait = null;\n                    event.dblclick(d3.event);\n                } else {\n                    wait = window.setTimeout((function(e) {\n                        return function() {\n                            event.click(e);\n                            wait = null;\n                        };\n                    })(d3.event), 300);\n                }\n            }\n        });\n    };\n    return d3.rebind(cc, event, 'on');\n}\nvar cc = clickcancel();\nd3.select('#map').call(cc);\ncc.on('click', function() {\n    d3.select('#map').text(d3.select('#map').text() + 'click, ');\n});\ncc.on('dblclick', function() {\n    d3.select('#map').text(d3.select('#map').text() + 'dblclick, ');\n});\n</script>\n</body>\n</html>\n", "description": "d3 - Click & Double Click", "created_at": "2015-05-11T10:52:16Z", "updated_at": "2015-08-29T14:20:58Z", "api": ["d3.dispatch", "d3.mouse", "d3.rebind", "d3.select"], "readme": "", "uid": "git-ashish_d6cdd29aba9d72498d91"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<html>\n<head>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"d3.geo.zoom.js\"></script>\n<style>\n.land {\n  fill: green;\n\n}\n.graticule {\n  fill-opacity: 0;\n  stroke: gray;\n  stroke-opacity: 0.5;\n}\n.point {\n  stroke: red;\n  fill-opacity: 0.2;\n  fill: white;\n}\n</style>\n</head>\n\n<body>\n<svg class=\"myworld\"></svg>\n\n<script>\n\nd3.json(\"world110.json\", function(err, world) {\n  var countries = topojson.feature(world, world.objects.land);\n\n  var width = 420\n  var height = 400\n  var projection = d3.geo.orthographic()\n  //var projection = d3.geo.albers()\n  //var projection = d3.geo.mercator()\n    .scale(170)\n    .rotate([100,0,0])\n    .translate([width/2, height/2])\n    .clipAngle(90);\n\n  var path = d3.geo.path()\n  .projection(projection);\n\n  var svg = d3.select(\".myworld\");\n\n  var graticule = d3.geo.graticule()\n  svg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\n  svg.append(\"path\")\n    .datum(countries)\n    .attr(\"d\", path)\n    .classed(\"land\", true);\n\n\n  var zoom = d3.geo.zoom()\n    .projection(projection)\n    //.scaleExtent([projection.scale() * .7, projection.scale() * 10])\n    .on(\"zoom.redraw\", function() {\n      d3.event.sourceEvent.preventDefault();\n      svg.selectAll(\"path\").attr(\"d\", path);\n      svg.selectAll(\"circle\")\n      .attr({\n        cx: function(d) { return projection(d)[0] },\n        cy: function(d) { return projection(d)[1] },\n      })\n\n    })\n  d3.selectAll(\"path\").call(zoom);\n\n  var lonlat = [-109, 37.7833];\n\n  var xy = projection(lonlat)\n  svg.append(\"circle\")\n  .datum(lonlat)\n  .classed(\"point\", true)\n  .attr({\n    cx: function(d) { return projection(d)[0] },\n    cy: function(d) { return projection(d)[1] },\n    r: 10\n  })\n\n  navigator.geolocation.getCurrentPosition(function(pos){\n    console.log(pos);\n    var coords = [pos.coords.longitude, pos.coords.latitude]\n    svg.append(\"circle\")\n    .datum(coords)\n    .attr({\n      cx: function(d) { return projection(d)[0] },\n      cy: function(d) { return projection(d)[1] },\n      r: 15,\n    })\n    .classed(\"point\", true)\n    .style(\"stroke\", \"blue\");\n  })\n\n})\n\n</script>\n</body>\n</html>", "description": "d3.geo with d3.geo.zoom", "created_at": "2014-07-16T06:09:32Z", "updated_at": "2016-05-06T04:27:41Z", "api": ["d3.dispatch", "d3.behavior.zoom", "d3.mouse", "d3.rebind", "d3.json", "d3.geo.orthographic", "d3.geo.albers", "d3.geo.mercator", "d3.geo.path", "d3.select", "d3.geo.graticule", "d3.geo.zoom", "d3.event.sourceEvent.preventDefault", "d3.selectAll"], "readme": "", "uid": "enjalot_31168147b88a1748bc8b"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://cdn.rawgit.com/fabid/d3-heatmap/master/heatmap.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width:100%; height: 100% }\n  </style>\n</head>\n\n<body>\n  <script>\n   var margin = {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      },\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n    var randomX = d3.random.normal(width / 2, 80),\n      randomY = d3.random.normal(height / 2, 80),\n      points = d3.range(1000).map(function() {\n        return [randomX(), randomY()];\n      });\n    console.log(points);\n\t\tvar size = 4;\n    var heatmap = d3.heatmap()\n\t\t\t.std(5)\n    \t.dx(size)\n      .dy(size);\n\n    // the result of the heatmap layout\n    var heatmapData = heatmap(points);\n\n    var color = d3.scale.linear()\n      .domain([0, d3.max(heatmapData, function(d) {\n        return d.v;\n      })])\n      .range([\"white\", \"steelblue\"])\n      .interpolate(d3.interpolateLab);\n\n    var x = d3.scale.identity()\n      .domain([0, width]);\n\n    var y = d3.scale.linear()\n      .domain([0, height])\n      .range([height, 0]);\n    var yinv = d3.scale.linear()\n      .domain([height, 0])\n      .range([height, 0]);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    svg.append(\"g\")\n      .selectAll(\".square\")\n      .data(heatmapData)\n      .enter().append(\"rect\")\n       .attr(\"class\", \"square\")\n      .attr(\"x\", function(d) { return x(d.x); })\n      .attr(\"y\", function(d) { return y(d.y) - yinv(size); })    \n      .attr(\"width\", x(size))\n      .attr(\"height\", yinv(size))\n      .style(\"fill\", function(d) {\n        return color(d.v)\n      })\n      .style(\"stroke\", \"none\");\n  </script>\n</body>\n", "description": "d3-heatmap", "created_at": "2016-03-01T16:18:25Z", "updated_at": "2016-03-02T14:50:07Z", "api": ["d3.random.normal", "d3.range", "d3.heatmap", "d3.scale.linear", "d3.max", "d3.scale.identity", "d3.select"], "readme": "Rectangular binning with [d3-heatmap](https://github.com/fabid/d3-heatmap/blob/master/heatmap.js)\nbased on [d3-hexbin demo](http://bl.ocks.org/xaranke/b956ee7215b7b50bc78a)\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n", "uid": "fabid_0c4cf357ab5ed3e90382"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.axis text {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n    \nvar seq = \"CCTGGGTGGGGGACCCGCTGCGGGAGCGCCGAGCTCCCTCTGAGTTCTTACTTCGAAGGCTGTGCTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTCCTGGGTGGGGGACCCGCTGCGGGAGCGCCGAGCTCCCTCTGAGTTCTTACTTCGAAGGCTGTGCTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT\";\n\nvar seqlength = seq.length;\nconsole.log(seqlength);\n\n\nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 860 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.identity()\n    .domain([0, seqlength]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .ticks(seqlength%100)\n    .orient(\"bottom\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(xAxis);\n\nvar myString=\"gene.txt\"  \nvar length=\"myString.length\"  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n</script>", "description": "D3 ruler", "created_at": "2016-02-18T17:06:35Z", "updated_at": "2016-02-18T17:06:36Z", "api": ["d3.scale.identity", "d3.svg.axis", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/Rico3734/'>Rico3734</a>'s block: <a href='http://bl.ocks.org/Rico3734/3a387f8041e1dc31d718'>D3 ruler</a>", "uid": "Rico3734_fa14dff4959ccb0886a9"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.land {\n  fill: #222;\n}\n\n.county-boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.state-boundary {\n  fill: none;\n  stroke: #fff;\n}\n\n.border {\n  stroke: #000;\n  fill: none;\n\n}\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-width: .5px;\n  stroke-opacity: .5;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3-composite-projections/0.3.5/conicConformalEurope-proj.min.js\"></script>\n<script>\n\nvar width = 600,\n    height = 500;\n\nvar projection = d3.geo.conicConformalEurope();\nvar graticule = d3.geo.graticule();\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n\n    svg.append(\"path\")\n        .datum(graticule)\n        .attr(\"class\", \"graticule\")\n        .attr(\"d\", path);\nd3.json(\"https://cdn.rawgit.com/rveciana/5919944/raw//nuts0.json\", function(error, europe) {\n  var land = topojson.feature(europe, europe.objects.nuts0);\n\n\n\n    svg.selectAll(\"path\")\n      .data(land.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\",\"#000\")\n      .style(\"stroke-width\",\".5px\")\n      .style(\"fill\",\"#aca\")\n      .on(\"mouseover\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"red\");\n        })\n      .on(\"mouseout\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"#aca\");\n        });\n\n        svg\n          .append(\"path\")\n            .style(\"fill\",\"none\")\n            .style(\"stroke\",\"#000\")\n            .attr(\"d\", projection.getCompositionBorders());\n\n\n\n});\n\n\n</script>\n", "description": "d3-composite-projections conicConformalEurope", "created_at": "2015-09-02T21:08:33Z", "updated_at": "2016-02-29T16:18:57Z", "api": ["d3.geo.conicConformalEurope", "d3.geo.graticule", "d3.geo.path", "d3.select", "d3.json"], "readme": "This example shows how to use the conicConformalEurope projection from [d3-composite-projections](http://rveciana.github.io/d3-composite-projections/).", "uid": "rveciana_4bcc5750c776c22ffda6"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the scatterplot\n    svg.selectAll(\"dot\")\n        .data(data)\n      .enter().append(\"circle\")\n      .filter(function(d) { return d.close < 400 })\n        .style(\"fill\", \"red\")\n        .attr(\"r\", 3.5)\n        .attr(\"cx\", function(d) { return x(d.date); })\n        .attr(\"cy\", function(d) { return y(d.close); });\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>\n", "description": "Filtering in d3.js", "created_at": "2014-06-22T18:39:22Z", "updated_at": "2015-08-29T14:02:53Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple scatterplot](http://bl.ocks.org/d3noob/38744a17f9c0141bcd04) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at demonstrating the use of the `.filter` statement in d3.js and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_8dc93bce7e7200ab487d"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n  </style>\n</head>\n\n<body>\n  <a-scene>\n      <!-- Camera with customized cursor -->\n      <a-camera position=\"0 1.8 0\" cursor-visible=\"true\" cursor-scale=\"2\" cursor-color=\"#4CC3D9\" cursor-offset=\"2\" cursor-maxdistance=\"100\" cursor-opacity=\"0.5\" cursor-fuse=\"true\"></a-camera>\n      <a-light color=\"#FFF\" position=\"-1 1 0\" type=\"ambient\"></a-light>\n    \n      <a-entity light=\"type: point; color: #FFF; intensity: 0.3\" position=\"0 3 0\"></a-entity>\n      <!-- Sky -->\n      <a-sky color=\"#00004d\"></a-sky>\n  </a-scene>\n  <script>\n\n    \n    // random data\n    var data = [];\n    \n    for (var i = 0; i < 50; i++) {\n    \tdata.push(Math.random())\n\t\t}\n    // Scale the height of bars\n    var hScale = d3.scale.linear()\n                    .domain([d3.min(data), d3.max(data)])\n                    .range([0, 10])\n    \n    // Set color scale\n    var colors = d3.scale.linear()\n                    .domain([0, data.length*.33, data.length*.66, data.length])\n                    .range(['#B58929','#C61C6F', '#268BD2', '#85992C'])\n    \n    // Select the scene object just like an svg\n    var scene = d3.select(\"a-scene\")\n    \n    // Use d3's enter/update/exit pattern to draw and bind the dom elements\n    var bars = scene.selectAll(\"a-cylinder.bar\")\n    \t\t\t\t\t\t\t\t.data(data)\n    \n    \t\t\t\t\t\tbars.enter()\n                    .append(\"a-cylinder\")\n                    .classed(\"bar\", true)\n\n    \n    // Set attributes on the cubes \n    bars.attr({\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 1 + hScale(d)/2;\n        // lets place the bars all around our camera\n        var radius = 15;\n        //var x = i - data.length/2;\n        var x = radius * Math.cos(i/data.length * 2 * Math.PI);\n        var z = radius * Math.sin(i/data.length * 2 * Math.PI);\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/data.length)*360;\n        return x + \" \" + y + \" \" + z\n      },\n      width: function(d) { return 0.5},\n      depth: function(d) { return 0.9},\n      height: 0,\n      color: function(d,i) { return colors(i);}     \n    })\n        .transition()\n        .attr(\"height\", function(d) { return  hScale(d) })\n        .delay(function(d, i) {\n            return i * 100;\n        })\n        .duration(7000)\n        .ease(\"elastic\")\n    \n    \n  </script>\n</body>\n", "description": "a-frame + d3 test", "created_at": "2015-12-19T06:38:04Z", "updated_at": "2015-12-19T06:46:14Z", "api": ["d3.scale.linear", "d3.min", "d3.max", "d3.select"], "readme": "Testing out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org).\n\nAlthough a-frame has its animation method based on tween.js, we can use d3's transition method to animate the DOM.\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/8be32e6f1f32920ba841'>aframe + d3 test</a>", "uid": "YasufumiSaito_35b59c0b074cac700798"}, {"code": "<!DOCTYPE html>\n<title></title>\n<meta charset=\"utf-8\">\n<script src=\"http://d3js.org/d3.v2.js\"></script>\n<script src=\"http://underscorejs.org/underscore.js\"></script>\n<script src=\"burrow.js\"></script>\n\n<style>\n\n.node circle {\n  fill: steelblue;\n  stroke-width: 1.5px;\n  stroke: #fff;\n}\n\n.node {\n  font: 10px sans-serif;\n}\n\n.link {\n  fill: none;\n  stroke: #ccc;\n  stroke-opacity: 0.6;\n  stroke-width: 1.5px;\n}\n\n</style>\n<body>\n</body>\n<script>\n/* Reingold-Tilford Tree */\n\nvar diameter = 960;\nvar padding = 210;\n\nvar tree = d3.layout.tree()\n    .size([360, diameter / 2 - padding])\n    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n\nvar diagonal = d3.svg.diagonal.radial()\n    .projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + diameter / 2 + \",\" + diameter / 2 + \")\");\n\nd3.selection.prototype.moveToFront = function() {\n  return this.each(function() {\n    this.parentNode.appendChild(this);\n  });\n};\n\nd3.tsv(\"d3.v1.tsv\", function(files) {\n  var nested1 = processData(files);\n  svg.append(\"text\")\n    .attr(\"id\", \"version\")\n    .text(\"v1.29.7\")\n    .attr(\"x\", -diameter*0.4)\n    .attr(\"y\", -diameter*0.4)\n    .style(\"font-size\", \"32px\");\n  treemap(nested1);\n  d3.tsv(\"d3.v2.tsv\", function(files) {\n    var nested2 = processData(files);\n    function update2() {\n      svg.select(\"#version\")\n        .transition().duration(500)\n        .style(\"opacity\", 0)\n        .transition().delay(500)\n        .text(\"2.10.3\")\n        .transition()\n        .style(\"opacity\", 1)\n      treemap(nested2);\n    };\n    setTimeout(update2, 5200);\n    d3.tsv(\"d3.v3.tsv\", function(files2) {\n      var nested3 = processData(files2);\n      function update3() {\n        svg.select(\"#version\")\n        .transition().duration(500)\n        .style(\"opacity\", 0)\n        .transition().delay(500)\n        .text(\"3.0.0pre\")\n        .transition()\n        .style(\"opacity\", 1)\n        treemap(nested3);\n      };\n      setTimeout(update3, 11800);\n    });\n  });\n});\n\nfunction processData(files) {\n  files.forEach(function(d) {\n    d.size = parseInt(d.size);\n    d.keys = d.file.replace(\".js\",\"\").split(\"/\");\n    d.keys.forEach(function(sect,i) {\n      d[\"section\" + i] = sect;\n    });\n  });\n\n  return burrow(files);\n}\n\nfunction treemap(root) {\n  var nodes = tree.nodes(root),\n      links = tree.links(nodes);\n\n  var link = svg.selectAll(\".link\")\n    .data(links, function(d) { return d.source.name + \"-\" + d.target.name;})\n\n  link\n    .transition()\n      .delay(400)\n      .duration(600)\n      .attr(\"d\", diagonal);\n\n  link\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal)\n      .style(\"opacity\", 0)\n      .transition()\n      .duration(300)\n      .delay(function(d,i) {\n        return 24*i;\n      })\n      .style(\"opacity\", 1);\n\n  link.exit()\n    .transition()\n      .duration(400)\n      .style(\"opacity\", 0)\n      .delay(400)\n      .remove();\n\n  var node = svg.selectAll(\".node\")\n      .moveToFront()\n      .data(nodes, function(d) { return d.name + \"-\" + (d.parent ? d.parent.name : \"root\");})\n\n   node.exit()\n    .transition()\n      .duration(400)\n      .style(\"opacity\", 0)\n      .delay(400)\n      .remove();\n\n  node\n    .transition()\n      .delay(400)\n      .duration(800)\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n\n  node.selectAll(\"text\")\n    .transition()\n      .duration(800)\n      .attr(\"font-weight\", null)\n      .attr(\"fill\", \"#555\")\n      .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n      .text(function(d) { return d.name; });\n\n  var g = node\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n\n  g.append(\"circle\")\n    .attr(\"r\", 3)\n    .style(\"opacity\", 0)\n    .transition()\n      .duration(300)\n      .delay(function(d,i) {\n        return 24*i;\n      })\n      .style(\"opacity\", 1);\n\n  g.append(\"text\")\n    .attr(\"dy\", \".31em\")\n    .attr(\"font-weight\", \"bold\")\n    .attr(\"fill\", \"black\")\n    .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n    .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n    .text(function(d) { return d.name; })\n    .style(\"opacity\", 0)\n    .transition()\n      .duration(300)\n      .delay(function(d,i) {\n        return 24*i;\n      })\n      .style(\"opacity\", 1);\n\n};\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n</script>\n", "description": "d3 src tree transitions", "created_at": "2015-09-08T07:42:48Z", "updated_at": "2015-09-08T07:42:48Z", "api": ["d3.layout.tree", "d3.svg.diagonal.radial", "d3.select", "d3.tsv"], "readme": "A comparison of the src directory for three versions of d3. Also see [d3 src tree](http://bl.ocks.org/4076122).\n\nforked from <a href='http://bl.ocks.org/syntagmatic/'>syntagmatic</a>'s block: <a href='http://bl.ocks.org/syntagmatic/4092944'>d3 src tree transitions</a>", "uid": "renecnielsen_02dde03ccff6748520e1"}, {"code": "<!DOCTYPE html>\n<title></title>\n<meta charset=\"utf-8\">\n<script src=\"http://d3js.org/d3.v2.js\"></script>\n<script src=\"http://underscorejs.org/underscore.js\"></script>\n<script src=\"burrow.js\"></script>\n\n<style>\n\n.node circle {\n  fill: #fff;\n  stroke: steelblue;\n  stroke-width: 2px;\n}\n\n.node {\n  font: 12px sans-serif;\n}\n\n.link {\n  fill: none;\n  stroke: #ccc;\n  stroke-width: 1.5px;\n}\n\n</style>\n<body>\n</body>\n<script>\nd3.tsv(\"d3.v3.tsv\", function(files) {\n  files.forEach(function(d) {\n    d.size = parseInt(d.size);\n    d.keys = d.file.replace(\".js\",\"\").split(\"/\");\n    d.keys.forEach(function(sect,i) {\n      d[\"section\" + i] = sect;\n    });\n  });\n\n  var nested = burrow(files);\n\n  treemap(nested.children[11]);\n});\n\n/* Reingold-Tilford Tree */\n\nvar diameter = 960;\n\nvar tree = d3.layout.tree()\n    .size([360, diameter / 2 - 120])\n    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n\nvar diagonal = d3.svg.diagonal.radial()\n    .projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + diameter / 2 + \",\" + diameter / 2 + \")\");\n\nfunction treemap(root) {\n  var nodes = tree.nodes(root),\n      links = tree.links(nodes);\n\n  var link = svg.selectAll(\".link\")\n      .data(links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal);\n\n  var node = svg.selectAll(\".node\")\n      .data(nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n\n  node.append(\"circle\")\n      .attr(\"r\", 2.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n      .text(function(d) { return d.name; });\n};\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n</script>", "description": "d3 src tree", "created_at": "2012-11-15T01:43:47Z", "updated_at": "2016-03-30T00:26:28Z", "api": ["d3.tsv", "d3.layout.tree", "d3.svg.diagonal.radial", "d3.select"], "readme": "A visualization of files in the [src](https://github.com/mbostock/d3/tree/3.0/src) directory of the d3 repository, based on [Reingold-Tilford Tree](http://bl.ocks.org/4063550).\n\n## Data Collection\n\nUse [git](http://git-scm.com/) to clone a repository, then [du](http://www.gnu.org/software/coreutils/manual/html_node/du-invocation.html) to create a tsv with the directory contents.\n\n    git clone git://github.com/mbostock/d3.git\n    (echo -n 'size\\tfile\\n'; du -a d3) > d3.tsv\n\n## Burrow - recursive nesting\n\nBranches may go to an arbitrary depth. [burrow()](https://gist.github.com/4076122#file_burrow.js) creates this data structure from a JSON table. It's still getting tweaked, an example will go here when it's ready.", "uid": "syntagmatic_4076122"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  width: 960px;\n  margin: auto;\n  position: relative;\n}\n\nsvg {\n  font: 11px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.axis--y path {\n  display: none;\n}\n\n.cities {\n  fill: none;\n  stroke: #aaa;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  stroke-width: 1.5px;\n}\n\n.city--hover {\n  stroke: #000;\n}\n\n.focus text {\n  text-anchor: middle;\n  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;\n}\n\n.voronoi path {\n  fill: none;\n  pointer-events: all;\n}\n\n.voronoi--show path {\n  stroke: red;\n  stroke-opacity: .2;\n}\n\n#form {\n  position: absolute;\n  top: 20px;\n  right: 30px;\n}\n\n</style>\n<label id=\"form\" for=\"show-voronoi\">\n  Show Voronoi\n  <input type=\"checkbox\" id=\"show-voronoi\" disabled>\n</label>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar months,\n    monthFormat = d3.time.format(\"%Y-%m\");\n\nvar margin = {top: 20, right: 30, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar voronoi = d3.geom.voronoi()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); })\n    .clipExtent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]]);\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"unemployment.tsv\", type, function(error, cities) {\n  x.domain(d3.extent(months));\n  y.domain([0, d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\"));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .ticks(10, \"%\"))\n    .append(\"text\")\n      .attr(\"x\", 4)\n      .attr(\"dy\", \".32em\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Unemployment Rate\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"cities\")\n    .selectAll(\"path\")\n      .data(cities)\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { d.line = this; return line(d.values); });\n\n  var focus = svg.append(\"g\")\n      .attr(\"transform\", \"translate(-100,-100)\")\n      .attr(\"class\", \"focus\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 3.5);\n\n  focus.append(\"text\")\n      .attr(\"y\", -10);\n\n  var voronoiGroup = svg.append(\"g\")\n      .attr(\"class\", \"voronoi\");\n\n  voronoiGroup.selectAll(\"path\")\n      .data(voronoi(d3.nest()\n          .key(function(d) { return x(d.date) + \",\" + y(d.value); })\n          .rollup(function(v) { return v[0]; })\n          .entries(d3.merge(cities.map(function(d) { return d.values; })))\n          .map(function(d) { return d.values; })))\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; })\n      .datum(function(d) { return d.point; })\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout);\n\n  d3.select(\"#show-voronoi\")\n      .property(\"disabled\", false)\n      .on(\"change\", function() { voronoiGroup.classed(\"voronoi--show\", this.checked); });\n\n  function mouseover(d) {\n    d3.select(d.city.line).classed(\"city--hover\", true);\n    d.city.line.parentNode.appendChild(d.city.line);\n    focus.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.value) + \")\");\n    focus.select(\"text\").text(d.city.name);\n  }\n\n  function mouseout(d) {\n    d3.select(d.city.line).classed(\"city--hover\", false);\n    focus.attr(\"transform\", \"translate(-100,-100)\");\n  }\n});\n\nfunction type(d, i) {\n  if (!i) months = Object.keys(d).map(monthFormat.parse).filter(Number);\n  var city = {\n    name: d.name.replace(/ (msa|necta div|met necta|met div)$/i, \"\"),\n    values: null\n  };\n  city.values = months.map(function(m) {\n    return {\n      city: city,\n      date: m,\n      value: d[monthFormat(m)] / 100\n    };\n  });\n  return city;\n}\n\n</script>\n", "description": "Multi-Line Voronoi", "created_at": "2016-02-02T17:45:48Z", "updated_at": "2016-02-02T17:45:48Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.geom.voronoi", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.max", "d3.svg.axis", "d3.nest", "d3.merge"], "readme": "This [multi-line chart](/mbostock/3884955) uses an invisible [Voronoi tessellation](/mbostock/4060366) to handle mouseover; the closest point to the mouse on any line is highlighted. Click the checkbox in the top-right to toggle the visibility of the Voronoi overlay.\n\nNote that because d3.geom.voronoi does not handle coincident points (and this data from the government comes pre-rounded to a tenth of a degree), d3.nest is used to collapse coincident points before constructing the Voronoi.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/8033015'>Multi-Line Voronoi</a>\n\nforked from <a href='http://bl.ocks.org/sivartravis/'>sivartravis</a>'s block: <a href='http://bl.ocks.org/sivartravis/f3708ba3311007a9b4a6'>Multi-Line Voronoi</a>", "uid": "sivartravis_348fc7cd3f3d8ad9db3f"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n\n  <body>\n    <script>\n      // Set the dimensions of the canvas / graph\n    var margin = {top: 30, right: 30, bottom: 40, left: 50};\n    var width = 800 - margin.left - margin.right;\n    var height = 300 - margin.top - margin.bottom;\n\n    // Set the ranges\n    var x = d3.time.scale().range([0, width]);\n    var y = d3.scale.linear().range([height, 0]);\n\n    // Define the axes\n    var xAxis = d3.svg.axis().scale(x)\n        .orient(\"bottom\").ticks(5);\n\n    var yAxis = d3.svg.axis().scale(y)\n        .orient(\"left\").ticks(5);\n\n    // Adds the svg canvas\n    var svgContainer = d3.select(\"body\")\n        .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n            .attr(\"transform\", \n                  \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var data = [\n                {\"date\":\"1-Apr-15\", \"close\":140.61},\n                {\"date\":\"15-Apr-15\", \"close\":20.23},\n                {\"date\":\"13-May-15\", \"close\":99.00},\n                {\"date\":\"21-May-15\", \"close\":188.13},\n                {\"date\":\"18-Jun-15\", \"close\":59.13},\n                {\"date\":\"28-Jul-15\", \"close\":75.13},\n                {\"date\":\"8-Aug-15\", \"close\":109.13},\n                {\"date\":\"12-Aug-15\", \"close\":96.13}];\n\n    // Parse the date / time\n    var parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n    // Get the data\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the X Axis\n    svgContainer.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svgContainer.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n    // Draw vertical grid lines\n    svgContainer.append(\"g\")     \n        .attr(\"class\", \"grid\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis\n            .tickSize(-height, 0, 0)\n            .tickFormat(\"\")\n            )\n\n    // Draw horizontal grid lines\n    svgContainer.append(\"g\")     \n        .attr(\"class\", \"grid\")\n        .call(yAxis\n            .tickSize(-width, 0, 0)\n            .tickFormat(\"\")\n            )\n\n    svgContainer.selectAll(\"bar\")\n        .data(data)\n        .enter().append(\"rect\")\n        .style(\"fill\", \"#aec6a8\")\n        .attr(\"x\", function(d) { return x(d.date)-5; })\n        .attr(\"width\", 10)\n        .attr(\"y\", function(d) { return y(d.close); })\n        .attr(\"height\", function(d) { return height - y(d.close); });\n      \n    // Define the line (interpolate to smooth the line)\n    var valueline = d3.svg.line()\n        .interpolate(\"cardinal\")\n        .x(function(d) { return x(d.date); })\n        .y(function(d) { return y(d.close); });\n\n    svgContainer.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n   </script>\n</body>\n", "description": "D3 graphs 2", "created_at": "2015-10-24T06:11:40Z", "updated_at": "2015-10-24T07:28:29Z", "api": ["d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.time.format", "d3.extent", "d3.max", "d3.svg.line"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/dmijalkovic/'>dmijalkovic</a>'s block: <a href='http://bl.ocks.org/dmijalkovic/52fb07194d4b2988cafb'>D3 graphs</a>", "uid": "dmijalkovic_3385b8e7269b5b345558"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n  </style>\n</head>\n\n<body>\n  \n   <a-scene>\n      <!--<a-cube position=\"0 0 -4\" depth=1 height=0.1 width=100 color=\"#fff\"></a-cube>-->\n      <a-light color=\"#da47da\" position=\"0 0 0\" type=\"ambient\"></a-light>\n      <a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n     <a-entity position=\"0 0 0\" rotation=\"0 0 0\">\n    \t <a-entity camera look-controls wasd-controls></a-entity>\n     </a-entity>\n    \t\n      <!-- Sky -->\n      <a-sky color=\"#c8f7f0\"></a-sky>\n  </a-scene>\n  \n  <script>\n    // fake data\n    var data = [ 10, 20, 30, 15, 25, 35, 40,\n                45, 50, 70, 100, 120, 130,\n               12, 18, 22, 29, 33, 44, 59, 200]\n    \n    var hscale = d3.scale.linear()\n      .domain([0, d3.max(data)])\n      .range([0,5])\n    \n    var scene = d3.select(\"a-scene\");\n    \n    var cubes = scene.selectAll(\"a-cube.bar\")\n      .data(data)\n    cubes.enter().append(\"a-cube\").classed(\"bar\", true)\n    cubes.attr({\n      position: function(d,i) {\n        var radius = 10;\n        var theta = (i/data.length) * (2 * Math.PI)\n        var x = radius * Math.cos(theta);\n        var y = hscale(d)/2;\n        var z = radius * Math.sin(theta);\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var y = -360 * i/data.length;\n        var z = 0;\n        return x + \" \" + y + \" \" + z\n      },\n      height: function(d,i) {\n        return hscale(d)\n      }\n    })\n  </script>\n</body>\n", "description": "D3-copy-Enjalot", "created_at": "2016-04-30T08:10:30Z", "updated_at": "2016-04-30T08:10:30Z", "api": ["d3.scale.linear", "d3.max", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/e366fba2b4626271dcceb3aeed7089e5'>D3-copy-Enjalot</a>", "uid": "rvross_ac78fbba1282c7b228253b97b0090e6b"}, {"code": "<html>\n\n<head>\n    <script src=\"three.min.js\"></script>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <style type=\"text/css\">\n    body {\n        margin: 0px;\n        padding: 0px;\n    }\n    #container {\n        width:960px;\n        height:500px;\n    }\n    </style>\n\n</head>\n\n<body>\n\n<!--div id=\"container\"></div-->\n    <script>\n    // <!--\n\n    function createTextCanvas(text, color, font, size) {\n        size = size || 16;\n        var canvas = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        var fontStr = (size + 'px ') + (font || 'Arial');\n        ctx.font = fontStr;\n        var w = ctx.measureText(text).width;\n        var h = Math.ceil(size);\n        canvas.width = w;\n        canvas.height = h;\n        ctx.font = fontStr;\n        ctx.fillStyle = color || 'black';\n        ctx.fillText(text, 0, Math.ceil(size * 0.8));\n        return canvas;\n    }\n\n    function createText2D(text, color, font, size, segW, segH) {\n        var canvas = createTextCanvas(text, color, font, size);\n        var plane = new THREE.PlaneGeometry(canvas.width, canvas.height, segW, segH);\n        var tex = new THREE.Texture(canvas);\n        tex.needsUpdate = true;\n        var planeMat = new THREE.MeshBasicMaterial({\n            map: tex,\n            color: 0xffffff,\n            transparent: true\n        });\n        var mesh = new THREE.Mesh(plane, planeMat);\n        mesh.scale.set(0.5, 0.5, 0.5);\n        mesh.doubleSided = true;\n        return mesh;\n    }\n\n    // from http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n    function hexToRgb(hex) { //TODO rewrite with vector output\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    }\n\n    var renderer = new THREE.WebGLRenderer({\n        antialias: true\n    });\n    var w = 960;\n    var h = 500;\n    renderer.setSize(w, h);\n    document.body.appendChild(renderer.domElement);\n\n    renderer.setClearColorHex(0xEEEEEE, 1.0);\n\n    var camera = new THREE.PerspectiveCamera(45, w / h, 1, 10000);\n    camera.position.z = 200;\n    camera.position.x = -100;\n    camera.position.y = 100;\n\n    var scene = new THREE.Scene();\n\n    var scatterPlot = new THREE.Object3D();\n    scene.add(scatterPlot);\n\n    scatterPlot.rotation.y = 0;\n\n    function v(x, y, z) {\n        return new THREE.Vector3(x, y, z);\n    }\n\n    var unfiltered = [],\n        lowPass = [],\n        highPass = [];\n\n    var format = d3.format(\"+.3f\");\n\n    var data = d3.csv(\"defaultData.csv\", function (d) {\n        \n        d.forEach(function (d,i) {\n            unfiltered[i] = {\n                x: +d.x,\n                y: +d.y,\n                z: +d.z\n            };\n            lowPass[i] = {\n                x: +d.lp_x,\n                y: +d.lp_y,\n                z: +d.lp_z\n            };\n            highPass[i] = {\n                x: +d.hp_x,\n                y: +d.hp_y,\n                z: +d.hp_z\n            }\n        })\n\n    var xExent = d3.extent(unfiltered, function (d) {return d.x; }),\n        yExent = d3.extent(unfiltered, function (d) {return d.y; }),\n        zExent = d3.extent(unfiltered, function (d) {return d.z; });\n\n    var vpts = {\n        xMax: xExent[1],\n        xCen: (xExent[1] + xExent[0]) / 2,\n        xMin: xExent[0],\n        yMax: yExent[1],\n        yCen: (yExent[1] + yExent[0]) / 2,\n        yMin: yExent[0],\n        zMax: zExent[1],\n        zCen: (zExent[1] + zExent[0]) / 2,\n        zMin: zExent[0]\n    }\n\n    var colour = d3.scale.category20c();\n\n    var xScale = d3.scale.linear()\n                  .domain(xExent)\n                  .range([-50,50]);\n    var yScale = d3.scale.linear()\n                  .domain(yExent)\n                  .range([-50,50]);                  \n    var zScale = d3.scale.linear()\n                  .domain(zExent)\n                  .range([-50,50]);\n\n    var lineGeo = new THREE.Geometry();\n    lineGeo.vertices.push(\n        v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zCen)),\n        v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zCen)),\n        v(xScale(vpts.xCen), yScale(vpts.yCen), zScale(vpts.zMax)), v(xScale(vpts.xCen), yScale(vpts.yCen), zScale(vpts.zMin)),\n\n        v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMin)),\n        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMin)),\n        v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMax)),\n        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMax)),\n\n        v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMax)),\n        v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMin)),\n        v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zCen)),\n        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zCen)),\n\n        v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMin)),\n        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMin)),\n        v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMax)),\n        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMax)),\n\n        v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMax)),\n        v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMin)),\n        v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zCen)),\n        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zCen)),\n\n        v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMax)),\n        v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMax)),\n        v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMax)),\n        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMax)),\n\n        v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMax)),\n        v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMax)),\n        v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMin)),\n        v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMax))\n\n    );\n    var lineMat = new THREE.LineBasicMaterial({\n        color: 0x000000,\n        lineWidth: 1\n    });\n    var line = new THREE.Line(lineGeo, lineMat);\n    line.type = THREE.Lines;\n    scatterPlot.add(line);\n\n    var titleX = createText2D('-X');\n    titleX.position.x = xScale(vpts.xMin) - 12,\n    titleX.position.y = 5;\n    scatterPlot.add(titleX);\n\n    var valueX = createText2D(format(xExent[0]));\n    valueX.position.x = xScale(vpts.xMin) - 12,\n    valueX.position.y = -5;\n    scatterPlot.add(valueX);\n\n    var titleX = createText2D('X');\n    titleX.position.x = xScale(vpts.xMax) + 12;\n    titleX.position.y = 5;\n    scatterPlot.add(titleX);\n\n    var valueX = createText2D(format(xExent[1]));\n    valueX.position.x = xScale(vpts.xMax) + 12,\n    valueX.position.y = -5;\n    scatterPlot.add(valueX);\n\n    var titleY = createText2D('-Y');\n    titleY.position.y = yScale(vpts.yMin) - 5;\n    scatterPlot.add(titleY);\n\n    var valueY = createText2D(format(yExent[0]));\n    valueY.position.y = yScale(vpts.yMin) - 15,\n    scatterPlot.add(valueY);\n\n    var titleY = createText2D('Y');\n    titleY.position.y = yScale(vpts.yMax) + 15;\n    scatterPlot.add(titleY);\n\n    var valueY = createText2D(format(yExent[1]));\n    valueY.position.y = yScale(vpts.yMax) + 5,\n    scatterPlot.add(valueY);\n\n    var titleZ = createText2D('-Z ' + format(zExent[0]));\n    titleZ.position.z = zScale(vpts.zMin) + 2;\n    scatterPlot.add(titleZ);\n\n    var titleZ = createText2D('Z ' + format(zExent[1]));\n    titleZ.position.z = zScale(vpts.zMax) + 2;\n    scatterPlot.add(titleZ);\n\n    var mat = new THREE.ParticleBasicMaterial({\n        vertexColors: true,\n        size: 10\n    });\n\n    var pointCount = unfiltered.length;\n    var pointGeo = new THREE.Geometry();\n    for (var i = 0; i < pointCount; i ++) {\n        var x = xScale(unfiltered[i].x);\n        var y = yScale(unfiltered[i].y);\n        var z = zScale(unfiltered[i].z);\n\n        pointGeo.vertices.push(new THREE.Vector3(x, y, z));\n        console.log(pointGeo.vertices);\n        //pointGeo.vertices[i].angle = Math.atan2(z, x);\n        //pointGeo.vertices[i].radius = Math.sqrt(x * x + z * z);\n        //pointGeo.vertices[i].speed = (z / 100) * (x / 100);\n        pointGeo.colors.push(new THREE.Color().setRGB(\n          hexToRgb(colour(i)).r / 255, hexToRgb(colour(i)).g / 255, hexToRgb(colour(i)).b / 255 \n        ));\n\n    }\n    var points = new THREE.ParticleSystem(pointGeo, mat);\n    scatterPlot.add(points);\n\n    renderer.render(scene, camera);\n    var paused = false;\n    var last = new Date().getTime();\n    var down = false;\n    var sx = 0,\n        sy = 0;\n        \n    window.onmousedown = function(ev) {\n        down = true;\n        sx = ev.clientX;\n        sy = ev.clientY;\n    };\n    window.onmouseup = function() {\n        down = false;\n    };\n    window.onmousemove = function(ev) {\n        if (down) {\n            var dx = ev.clientX - sx;\n            var dy = ev.clientY - sy;\n            scatterPlot.rotation.y += dx * 0.01;\n            camera.position.y += dy;\n            sx += dx;\n            sy += dy;\n        }\n    }\n    var animating = false;\n    window.ondblclick = function() {\n        animating = !animating;\n    };\n\n    function animate(t) {\n        if (!paused) {\n            last = t;\n            if (animating) {\n                var v = pointGeo.vertices;\n                for (var i = 0; i < v.length; i++) {\n                    var u = v[i];\n                    console.log(u)\n                    u.angle += u.speed * 0.01;\n                    u.x = Math.cos(u.angle) * u.radius;\n                    u.z = Math.sin(u.angle) * u.radius;\n                }\n                pointGeo.__dirtyVertices = true;\n            }\n            renderer.clear();\n            camera.lookAt(scene.position);\n            renderer.render(scene, camera);\n        }\n        window.requestAnimationFrame(animate, renderer.domElement);\n    };\n    animate(new Date().getTime());\n    onmessage = function(ev) {\n        paused = (ev.data == 'pause');\n    };\n\n    })\n    //-->\n    </script>\n</body>\n\n</html>\n", "description": "3D Scatter Plot Using three.js", "created_at": "2014-03-29T10:57:12Z", "updated_at": "2016-01-05T11:04:10Z", "api": ["d3.format", "d3.csv", "d3.extent", "d3.scale.category20c", "d3.scale.linear"], "readme": "This is a 3D scatter plot rendered using webGL using on mobile phone accelerometer data.  You can change view by rotating cube using the mouse.  At present there's no relationship between the colours of the particles.\n\nThe visualisation uses the fantastic [threejs library](http://threejs.org/) for the 3D and hooks into webGL.  The example presented here is heavily based on the threejs scatter plot example.  I've also used [d3.js](http://d3js.org/) for some of convenience functions to import the data, scale the data and set up the ranges for the axis's.\n\n", "uid": "phil-pedruco_9852362"}, {"code": "<!DOCTYPE html>\n<style>\n\tbody {\n\t\tfont-family: 'Open Sans', sans-serif;\n    font-size: 12px;\n\t}\n  .graph {\n    text-align: center;\n  }\n  svg {\n    background-color: #333947;\n  }\n\t.title {\n    font-size: 16px;\n\t\tfont-weight: bold;\n    fill: #fff;\n\t}\n  .caption {\n    fill: #ccc;\n  }\n\t.axis path,\n\t.axis line {\n    fill: none;\n    stroke: #eee;\n    shape-rendering: crispEdges;\n\t}\n  .axis text {\n    fill: #fff;\n  }\n\t.loading {\n    font-size: 15px;\n\t}\n  .plot {\n    fill-opacity: 0.75;\n  }\n\n  .conflict0 { fill: #4990BF; }\n\t.conflict1 { fill: #FF6363; }\n\t.conflict2 { fill: #738b8c; }\n\t.conflict3 { fill: #BC63FF; }\n\t.conflict4 { fill: #EFFF63; }\n\t.conflict5 { fill: #FF3D3D; }\n\t.conflict6 { fill: #496EBF; }\n  .conflict7 { fill: #cda2a2; }\n  .conflict8 { fill: #E563FF; }\n  .conflict9 { fill: #63D8FF; }\n\n  .circle {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n  .circle:hover {\n    stroke: #000;\n    stroke-width: 2px;\n  }\n  .title-tip,\n  .body-tip {\n    line-height: 1;\n    padding: 12px;\n    background: #000;\n    color: #fff;\n    line-height: 14px;\n    border-radius: 2px;\n    pointer-events: none;\n    text-align: center;\n  }\n\n  .body-tip {\n    max-width: 250px;\n  }\n\n  .title-tip div {\n    font-size: 10px;\n    color: #ccc;\n  }\n\n  /* Creates a small triangle extender for the tooltip */\n  .title-tip:after {\n    box-sizing: border-box;\n    display: inline;\n    font-size: 10px;\n    width: 100%;\n    line-height: 1;\n    color: #000;\n    position: absolute;\n    pointer-events: none;\n  }\n\n  .title-tip.n:after {\n    content: \"\\25BC\";\n    margin: -1px 0 0 0;\n    top: 100%;\n    left: 0;\n    text-align: center;\n  }\n\n  .button {\n    height: 25px;\n    width: 125px;\n    stroke: #ccc;\n    stroke-width: 2px;\n    fill: #333947;\n  }\n\n  .button:hover,\n  .button-text:hover {\n    cursor: pointer;\n  }\n\n  .button-active {\n    stroke: #fff;\n    fill: #fff;\n  }\n\n  .button-text {\n    fill: #ccc;\n  }\n\n  .button-text-active {\n    fill: #000;\n  }\n</style> \n\n<div id=\"graph\" class=\"graph\"></div>\n \n<script src=\"http://d3js.org/d3.v2.min.js\"></script>\n<script src=\"http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js\"></script>\n\n<script>\n  var w = 1500;\n  var h = 800;\n  var pad = 40;\n  var above = 125;\n  var left = 225;\n\n  var titleTip = d3.tip()\n                   .attr('class', 'title-tip')\n                   .offset([-3, 0])\n                   .html(function(d) {\n                    return \"<strong>\" + d.title + \"</strong><div>\" + d.pageedits + \" page edits</div>\";\n                   });\n\n  var bodyTip = d3.tip()\n                  .attr('class', 'body-tip')\n                  .html(function(d) { return d.description; });\n   \n  var svg = d3.select(\"#graph\")\n              .append(\"svg\")\n              .attr(\"width\", w)\n              .attr(\"height\", h)\n              .call(titleTip)\n              .call(bodyTip);\n\n  var x = d3.scale.linear().domain([2001, 2006]).range([left, w-pad]);\n  var y = d3.scale.linear().domain([0, 9]).range([above, h-pad-above]);\n   \n  var xAxis = d3.svg.axis().scale(x).orient(\"bottom\")\n    .ticks(6)\n    .tickFormat(d3.format(\"d\"))\n\n  var yAxis = d3.svg.axis().scale(y).orient(\"left\")\n    .ticks(10)\n    .tickFormat(function (d, i) {\n      return ['Technicality','Political','Ethical','Ethnic','International Words','Religion','Culture','Animal Rights','Star Wars','Other'][d];\n    });\n\n  svg.append(\"text\")\n    .attr(\"class\", \"title\")\n    .attr(\"x\", w/2)\n    .attr(\"y\", above/3)\n    .attr(\"text-anchor\", \"middle\")\n    .text(\"Most Debated Wikipedia Articles (2010)\");\n\n  svg.append(\"text\")\n    .attr(\"class\", \"caption\")\n    .attr(\"x\", w/2)\n    .attr(\"y\", above/3+18)\n    .attr(\"text-anchor\", \"middle\")\n    .text(\"Click each circle to read more!\");\n   \n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", \"translate(0, \"+(h-pad)+\")\")\n      .call(xAxis);\n   \n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", \"translate(\"+(left-pad)+\", 0)\")\n      .call(yAxis);\n   \n  svg.append(\"text\")\n      .attr(\"class\", \"loading\")\n      .text(\"Loading...\")\n      .attr(\"x\", function () { return w/2; })\n      .attr(\"y\", function () { return h/2-5; });\n   \n  d3.json(\"data.json\", function (data) {\n    var max_r = d3.max(data.map(function (d) { return d.pageedits; }));\n    var r1 = d3.scale.linear()\n              .domain([0, d3.max(data, function (d) { return d.pageedits; })])\n              .range([3, 100]);\n\n    var r2 = d3.scale.linear()\n              .domain([0, d3.max(data, function (d) { return d.pagesofdiscussion; })])\n              .range([3, 100]);\n\n    var displayCircles = function(flag) {\n      data.sort(function(a,b) {\n        var i,j;\n        if (flag == 0) {\n          i = a.pageedits;\n          j = b.pageedits;\n        } else {\n          i = a.pagesofdiscussion;\n          j = b.pagesofdiscussion;\n        }\n        if (i > j)\n          return -1;\n        if (i < j)\n          return 1;\n        return 0;\n      });\n\n      svg.selectAll(\"circle\").remove();\n      svg.selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", function (d) { return \"circle conflict\"+d.conflicttype; })\n        .attr(\"cx\", function (d) { return x(d.creationdate); })\n        .attr(\"cy\", function (d) { return y(d.conflicttype); })\n        .on('mouseover', titleTip.show)\n        .on('mouseout', function(d) {\n          titleTip.hide();\n          bodyTip.hide(d);\n        })\n        .on('click', function (d) {\n          titleTip.hide();\n          bodyTip.show(d);\n        })\n        .transition()\n        .duration(800)\n        .attr(\"r\", function (d) {\n          if (flag == 0) {\n            return r1(d.pageedits);\n          } else {\n            return r2(d.pagesofdiscussion);\n          }\n        });\n\n      titleTip.html(function(d) {\n        if (flag == 0) {\n          return \"<strong>\" + d.title + \"</strong><div>\" + d.pageedits + \" page edits</div>\";\n        } else {\n          return \"<strong>\" + d.title + \"</strong><div>\" + d.pagesofdiscussion + \" pages of discussion</div>\";\n        }\n      });\n    }\n\n    var toggleButton = function (flag) {\n      if (flag == 0) {\n        button1.attr(\"class\", \"button button-active\");\n        button2.attr(\"class\", \"button\");\n        buttonText1.attr(\"class\", \"button-text button-text-active\");\n        buttonText2.attr(\"class\", \"button-text\");\n      } else {\n        button1.attr(\"class\", \"button\");\n        button2.attr(\"class\", \"button button-active\");\n        buttonText1.attr(\"class\", \"button-text\");\n        buttonText2.attr(\"class\", \"button-text button-text-active\");\n      }\n    }\n \n    svg.selectAll(\".loading\").remove();\n \n    displayCircles(0);\n\n    var button1 = svg.append(\"rect\")\n                     .attr(\"class\", \"button button-active\")\n                     .attr(\"height\", 25)\n                     .attr(\"width\", 125)\n                     .attr(\"x\", left/2)\n                     .attr(\"y\", above/2)\n                     .attr(\"rx\", 5)\n                     .attr(\"ry\", 5)\n                     .on(\"click\", function() {\n                        toggleButton(0);\n                        return displayCircles(0);\n                      });\n\n    var buttonText1 = svg.append(\"text\")\n                     .attr(\"class\", \"button-text button-text-active\")\n                     .attr(\"x\", left/2 + 63)\n                     .attr(\"y\", above/2 + 16)\n                     .attr(\"text-anchor\", \"middle\")\n                     .text(\"Page Edits\")\n                     .on(\"click\", function() {\n                        toggleButton(0);\n                        return displayCircles(0);\n                      });\n\n    var button2 = svg.append(\"rect\")\n                     .attr(\"class\", \"button\")\n                     .attr(\"height\", 25)\n                     .attr(\"width\", 125)\n                     .attr(\"x\", left/2+125)\n                     .attr(\"y\", above/2)\n                     .attr(\"rx\", 5)\n                     .attr(\"ry\", 5)\n                     .on(\"click\", function() {\n                        toggleButton(1);\n                        return displayCircles(1);\n                      });\n\n    var buttonText2 = svg.append(\"text\")\n                     .attr(\"class\", \"button-text\")\n                     .attr(\"x\", left/2 + 188)\n                     .attr(\"y\", above/2 + 16)\n                     .attr(\"text-anchor\", \"middle\")\n                     .text(\"Pages of Discussion\")\n                     .on(\"click\", function() {\n                        toggleButton(1);\n                        return displayCircles(1);\n                      });\n  });\n</script>", "description": "d3.js wiki visualization", "created_at": "2016-02-07T11:14:22Z", "updated_at": "2016-02-07T11:14:22Z", "api": ["d3.tip", "d3.select", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.json", "d3.max"], "readme": "\n\nforked from <a href='http://bl.ocks.org/lilyc5459/'>lilyc5459</a>'s block: <a href='http://bl.ocks.org/lilyc5459/a35687613ab0f4991f37'>d3.js wiki visualization</a>", "uid": "CBasis_9bae6529ccab4b902a50"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Changing Markers - d3.carto</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .reproject {\n    position: absolute;\n    z-index: 99;\n    left: 50px;\n    top: 250px;\n  }\n  \n\n  .metro {\n    fill: rgba(255,0,255,.5);\n    stroke: darkred;\n    stroke-width: 1\n  }\n  \n  .markerButton {\n    position: fixed;\n    top: 20px;\n    cursor: pointer;\n    z-index: 99;\n  }\n  \n</style>\n<script>\n  \n  function pngMarker() {\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    d3.selectAll(\"g.marker\").append(\"image\").attr(\"xlink:href\", \"icon_2330.png\")\n    .attr(\"height\", 20).attr(\"width\", 20)\n    .attr(\"x\", -10).attr(\"y\", -10)\n  }\n  \n  function rectangleMarker() {\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    d3.selectAll(\"g.marker\").append(\"rect\").attr(\"height\", 10).attr(\"width\", 10)\n    .attr(\"x\", -5)\n    .attr(\"y\", -5)\n    .style(\"fill\", \"yellow\")\n    .style(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"1px\")\n  }\n  \n  function circleMarker() {\n    var sizeScale = d3.scale.linear().domain([0,100,2000]).range([2,10,20]).clamp(true);\n    var randomDatapoint = \"r\" + Math.ceil(Math.random() * 7);\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    d3.selectAll(\"g.marker\").append(\"circle\")\n    .attr(\"class\", \"metro\")\n    .attr(\"r\", function(d) {return sizeScale(d[randomDatapoint])})\n  }\n  \n  function svgMarker() {\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    d3.html(\"icon_2330.svg\", loadSVG);\n     function loadSVG(svgData) {\n    d3.select(svgData).selectAll(\"path\").each(function(d) {\n      var that = this;\n        d3.selectAll(\"g.marker\").each(\n          function() {\n          d3.select(this).node().appendChild(that.cloneNode(true));\n          }\n          )\n    })\n    d3.selectAll(\"g.marker\").select(\"path\");\n     }\n  }\n  \n  function pieMarker() {\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    var pieChart = d3.layout.pie();\n    var newArc = d3.svg.arc().outerRadius(10);\n    var set3 = [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\"];\n\n    pieChart.value(function(d) {return d});\n    d3.selectAll(\"g.marker\").each(function(d) {\n      var pieData = d3.values(d).splice(3,7);\n      var pieChart = d3.layout.pie();\n      \n      d3.select(this).append(\"circle\").attr(\"r\",11).style(\"fill\", \"black\").style(\"stroke\",\"black\")\n\n      d3.select(this).selectAll(\"path\").data(pieChart(pieData)).enter().append(\"path\").attr(\"d\", function(d) {return newArc(d)})\n      .style(\"fill\", function(d,i) {return set3[i]})\n      .style(\"stroke\", function(d,i) {return set3[i]})\n      .style(\"stroke-width\", \"1px\")\n    })\n  }\n\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    map.centerOn([-99,39],\"latlong\");\n    map.setScale(4);\n\n    map.refresh();\n\n    wcLayer = d3.carto.layer.tile();\n    wcLayer\n    .tileType(\"stamen\")\n    .path(\"watercolor\")\n    .label(\"Watercolor\")\n    .visibility(true)\n\n    cityLayer = d3.carto.layer.csv();\n    cityLayer\n    .path(\"cities.csv\")\n    .label(\"Metro Areas\")\n    .cssClass(\"metro\")\n    .renderMode(\"svg\")\n    .x(\"x\")\n    .y(\"y\")\n    .clickableFeatures(true)\n    .on(\"load\", function(){console.log(cityLayer.dataset())});\n\n    map.addCartoLayer(wcLayer).addCartoLayer(cityLayer);\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\">\n  <button style=\"left: 140px;\" class=\"markerButton\" onclick=\"rectangleMarker();\">Rectangle Marker</button>\n  <button style=\"left: 250px;\" class=\"markerButton\" onclick=\"pngMarker();\">Image Marker</button>\n  <button style=\"left: 340px;\" class=\"markerButton\" onclick=\"circleMarker();\">Circle Marker</button>\n  <button style=\"left: 428px;\" class=\"markerButton\" onclick=\"svgMarker();\">SVG Marker</button>\n  <button style=\"top:50px; left: 140px;\" class=\"markerButton\" onclick=\"pieMarker();\">Pie Marker</button>\n</div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>\n", "description": "Changing Markers - d3.carto", "created_at": "2014-09-03T21:03:35Z", "updated_at": "2015-08-29T14:06:03Z", "api": ["d3.selectAll", "d3.scale.linear", "d3.html", "d3.select", "d3.layout.pie", "d3.svg.arc", "d3.values", "d3.carto.map", "d3.carto.layer.tile", "d3.carto.layer.csv"], "readme": "Changing markers with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nIn this example, the buttons show different markers used for the points, either simple SVG shapes, like the rectangle marker, or scaled circles, or images, or SVG paths either from an icon or from another D3 layout (a pie chart in this case). The Circle Marker button randomly selects one of several data attributes for each point and sizes the circle by that attribute, whereas the pie marker button creates a pie chart based off those attributes.\n\nAny point layer added with d3.carto.layer.csv or d3.carto.layer.xyArray automatically creates SVG circle elements for each point. These reside in a g.marker that you can access and replace the contents of in the same way you would with any other d3 data visualization. In this example I use d3.selectAll because there's only one points layer, but each layer has a .g() function that gives you access to the parent g element of that layer, which you can then use to select some or all of the child g.marker elements of that specific layer and change, update or replace content.\n", "uid": "emeeks_f8c0220c54ec8347ea95"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"readme-binnedChart.js\"></script>\n<script src=\"readme-underscore.js\"></script>\n<script src=\"readme-msToCentury.js\"></script>\n\n<style>\nbody {\n  background-color : #FFF;\n  font-family      : sans-serif;\n  color            : #000;\n  font-size        : 20px;\n}\n\n#controls ul {\n  float: left;\n}\n\n#chart {\n  font: 10px sans-serif;\n  overflow: none;\n}\n\npath, line {\n  /*shape-rendering: crispEdges;*/\n}\n\n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.axis path {\n  /* Don't show the axis lines. */\n  display: none;\n}\n\n.y.axis line {\n  stroke: #999;\n  stroke-dasharray: 3, 3;\n}\n\n#chart_container {\n  position: relative;\n  overflow: none;\n}\n\n#chartContainer {\n  overflow : none;\n  width    : 100%;\n  overflow : none;\n  float    : left;\n}\n\n#zoomSVG {\n  position : absolute;\n  top      : 0;\n  left     : 0;\n}\n\n#zoomRect {\n  border-style : solid;\n  border-width : 1px;\n  cursor       : col-resize;\n}\n</style>\n<body>\n<script>\nvar thePlot;\nvar margin = {top: 20, right: 10, bottom: 25, left: 70};\nvar height = 200;\n\nvar parseDate = d3.time.format(\"%Y-%m-%d\").parse;\n\nd3.csv(\"readme-flights.csv\", function (error, data) {\n  // FORMATTING DATA //\n\n  if (error) {\n    alert(\"Try refreshing your browser.\");\n    return;\n  }\n\n  var json = data.map(function (d) {\n    return {val: +d.value, ms: parseDate(d.date).getTime()};\n  });\n\n\n  // INITIALIZING THE PLOT //\n\n  var xScale = d3.scale.linear().domain([570693600000, 1201845600000]).range([0, document.getElementById(\"chartContainer\").offsetWidth]);\n  var yScale = d3.scale.linear();\n  var plotHeight = function () { return thePlot.height(); };\n  var pl;\n\n  thePlot = binnedLineChart(json, \"TODO-SERVER\", \"1\");\n  thePlot.xScale(xScale);\n\n  pl = d3.select(\"#chartContainer\").insert(\"svg\").call(thePlot);\n\n  var sps = 864e5; // 864e5 is the number of milliseconds in a day\n\n  thePlot.containerWidth(document.getElementById(\"chartContainer\").offsetWidth).height(height).showTimeContext(true).milliSecondsPerSample(sps).update();\n\n  d3.select(\"#chartContainer\").attr(\"height\", plotHeight).attr(\"width\", document.getElementById(\"chartContainer\").offsetWidth);\n\n\n  // ZOOMING //\n\n  var zoomSVG = d3.select(\"#zoomSVG\");\n  var zoomRect = d3.select(\"#zoomRect\");\n  var zoom = d3.behavior.zoom()\n      .scaleExtent([Math.pow(2, -2), Math.pow(2,10)])\n      .on(\"zoom\", function () {\n        thePlot.xScale(xScale).update();\n    });\n\n  zoomSVG.attr(\"width\", document.getElementById(\"chartContainer\").offsetWidth)\n         .attr(\"height\", plotHeight);\n\n  zoomRect.attr(\"width\", document.getElementById(\"chartContainer\").offsetWidth - margin.left - margin.right)\n          .attr(\"height\", plotHeight)\n          .attr(\"transform\", \"translate(\" + margin.left + \", \" + margin.top + \")\");\n\n  zoomRect.attr(\"fill\", \"rgba(0,0,0,0)\")\n          .call(zoom);\n\n  // apply zooming\n  xScale = thePlot.xScale();\n  yScale = thePlot.yScale();\n  zoom.x(xScale);\n  zoom.y(yScale);\n\n\n  // UPDATING LINES //\n\n  function changeLines () {\n    thePlot.setSelectedLines().update();\n  }\n\n  document.getElementById(\"render-lines\").addEventListener(\"change\", changeLines, false);\n  document.getElementById(\"render-depth\").addEventListener(\"change\", changeLines, false);\n  document.getElementById(\"render-method\").addEventListener(\"change\", changeLines, false);\n});\n\n\n</script>\n<div id=\"chartContainer\">\n  <svg id=\"zoomSVG\"><rect id=\"zoomRect\" /></svg>\n</div>\n\n<div id=\"controls\">\n  <form>\n    <ul id=\"render-lines\">\n      Which functions<br />to render:\n      <li><label><input type=\"checkbox\" checked value=\"average\"/>Averages</label></li>\n      <li><label><input type=\"checkbox\" checked value=\"maxes\"/>Maximums</label></li>\n      <li><label><input type=\"checkbox\" checked value=\"mins\"/>Minimums</label></li>\n      <li><label><input type=\"checkbox\"         value=\"q1\"/>1st Quartile</label></li>\n      <li><label><input type=\"checkbox\"         value=\"q3\"/>3st Quartile</label></li>\n      <li><label><input type=\"checkbox\" checked value=\"quartiles\"/>Quartile Area</label></li>\n    </ul>\n\n    <ul id=\"render-depth\">\n      Maximum Bin<br />Render Size:\n      <br />\n      <label><input type=\"range\" min=\"1\" max=\"200\" id=\"renderdepth\" value=\"40\" style=\"width:200px\"/>\n    </ul>\n\n    <ul id=\"render-method\">\n      Interpolation<br />Method:\n      <li><label><input type=\"radio\"         name=\"render-method\" value=\"linear\"/>Linear</li>\n      <li><label><input type=\"radio\"         name=\"render-method\" value=\"step-after\"/>Step-After</li>\n      <li><label><input type=\"radio\" checked name=\"render-method\" value=\"monotone\"/>Monotone</li>\n    </ul>\n  </form>\n</div>\n", "description": null, "created_at": "2013-03-28T19:43:48Z", "updated_at": "2015-12-15T13:24:54Z", "api": ["d3.svg.axis", "d3.time.format", "d3.time.year.floor", "d3.time.year.ceil", "d3.range", "d3.csv", "d3.scale.linear", "d3.select", "d3.behavior.zoom", "d3.max", "d3.sum", "d3.min", "d3.svg.area", "d3.svg.line"], "readme": "This is a Binned Line Chart version of [Mike Bostock](http://bost.ocks.org/mike/)'s [zoomable area chart](http://mbostock.github.com/d3/talk/20111018/area-gradient.html). You can find his [source here](http://bl.ocks.org/mbostock/4015254). The graph shows number of flights per day in the United States.\n\n- Use the mouse-wheel to zoom in and out, and drag the slider to adjust the size of the bins.\n- View with the step-after interpolation method to see the discrete bins.\n\nA detailed publication as part of [Matt Woelk](http://mattwoelk.ca)'s Masters Thesis will be available in Fall, 2013.\n", "uid": "timelyportfolio_5266202"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"readme-binnedChart.js\"></script>\n<script src=\"readme-underscore.js\"></script>\n<script src=\"readme-msToCentury.js\"></script>\n<script src=\"https://github.com/fryn/html5slider/raw/master/html5slider.js\"></script>\n\n<style>\nbody {\n  background-color : #FFF;\n  font-family      : sans-serif;\n  color            : #000;\n  font-size        : 20px;\n}\n\n#controls ul {\n  float: left;\n}\n\n#chart {\n  font: 10px sans-serif;\n  overflow: none;\n}\n\npath, line {\n  /*shape-rendering: crispEdges;*/\n}\n\n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.axis path {\n  /* Don't show the axis lines. */\n  display: none;\n}\n\n.y.axis line {\n  stroke: #999;\n  stroke-dasharray: 3, 3;\n}\n\n#chart_container {\n  position: relative;\n  overflow: none;\n}\n\n#chartContainer {\n  overflow : none;\n  width    : 100%;\n  overflow : none;\n  float    : left;\n}\n\n#zoomSVG {\n  position : absolute;\n  top      : 0;\n  left     : 0;\n}\n\n#zoomRect {\n  border-style : solid;\n  border-width : 1px;\n  cursor       : col-resize;\n}\n</style>\n<body>\n<script>\nvar thePlot;\nvar margin = {top: 20, right: 10, bottom: 25, left: 70};\nvar height = 200;\n\nvar parseDate = d3.time.format(\"%Y-%m-%d\").parse;\n\nd3.csv(\"readme-flights.csv\", function (error, data) {\n  // FORMATTING DATA //\n\n  if (error) {\n    alert(\"Try refreshing your browser.\");\n    return;\n  }\n\n  var json = data.map(function (d) {\n    return {val: +d.value, ms: parseDate(d.date).getTime()};\n  });\n\n\n  // INITIALIZING THE PLOT //\n\n  var xScale = d3.scale.linear().domain([570693600000, 1201845600000]).range([0, document.getElementById(\"chartContainer\").offsetWidth]);\n  var yScale = d3.scale.linear();\n  var plotHeight = function () { return thePlot.height(); };\n  var pl;\n\n  thePlot = binnedLineChart(json, \"TODO-SERVER\", \"1\");\n  thePlot.xScale(xScale);\n\n  pl = d3.select(\"#chartContainer\").insert(\"svg\").call(thePlot);\n\n  var sps = 864e5; // 864e5 is the number of milliseconds in a day\n\n  thePlot.containerWidth(document.getElementById(\"chartContainer\").offsetWidth).height(height).showTimeContext(true).milliSecondsPerSample(sps).update();\n\n  d3.select(\"#chartContainer\").attr(\"height\", plotHeight).attr(\"width\", document.getElementById(\"chartContainer\").offsetWidth);\n\n\n  // ZOOMING //\n\n  var zoomSVG = d3.select(\"#zoomSVG\");\n  var zoomRect = d3.select(\"#zoomRect\");\n  var zoom = d3.behavior.zoom()\n      .scaleExtent([Math.pow(2, -2), Math.pow(2,10)])\n      .on(\"zoom\", function () {\n        thePlot.xScale(xScale).update();\n    });\n\n  zoomSVG.attr(\"width\", document.getElementById(\"chartContainer\").offsetWidth)\n         .attr(\"height\", plotHeight);\n\n  zoomRect.attr(\"width\", document.getElementById(\"chartContainer\").offsetWidth - margin.left - margin.right)\n          .attr(\"height\", plotHeight)\n          .attr(\"transform\", \"translate(\" + margin.left + \", \" + margin.top + \")\");\n\n  zoomRect.attr(\"fill\", \"rgba(0,0,0,0)\")\n          .call(zoom);\n\n  // apply zooming\n  xScale = thePlot.xScale();\n  yScale = thePlot.yScale();\n  zoom.x(xScale);\n  zoom.y(yScale);\n\n\n  // UPDATING LINES //\n\n  function changeLines () {\n    thePlot.setSelectedLines().update();\n  }\n\n  document.getElementById(\"render-lines\").addEventListener(\"change\", changeLines, false);\n  document.getElementById(\"render-depth\").addEventListener(\"change\", changeLines, false);\n  document.getElementById(\"render-method\").addEventListener(\"change\", changeLines, false);\n});\n\n\n</script>\n<div id=\"chartContainer\">\n  <svg id=\"zoomSVG\"><rect id=\"zoomRect\" /></svg>\n</div>\n\n<div id=\"controls\">\n  <form>\n    <ul id=\"render-lines\">\n      Which functions<br />to render:\n      <li><label><input type=\"checkbox\" checked value=\"average\"/>Averages</label></li>\n      <li><label><input type=\"checkbox\" checked value=\"maxes\"/>Maximums</label></li>\n      <li><label><input type=\"checkbox\" checked value=\"mins\"/>Minimums</label></li>\n      <li><label><input type=\"checkbox\"         value=\"q1\"/>1st Quartile</label></li>\n      <li><label><input type=\"checkbox\"         value=\"q3\"/>3st Quartile</label></li>\n      <li><label><input type=\"checkbox\" checked value=\"quartiles\"/>Quartile Area</label></li>\n    </ul>\n\n    <ul id=\"render-depth\">\n      Maximum Bin<br />Render Size:\n      <br />\n      <label><input type=\"range\" min=\"1\" max=\"200\" id=\"renderdepth\" value=\"40\" style=\"width:200px\"/>\n    </ul>\n\n    <ul id=\"render-method\">\n      Interpolation<br />Method:\n      <li><label><input type=\"radio\"         name=\"render-method\" value=\"linear\"/>Linear</li>\n      <li><label><input type=\"radio\"         name=\"render-method\" value=\"step-after\"/>Step-After</li>\n      <li><label><input type=\"radio\" checked name=\"render-method\" value=\"monotone\"/>Monotone</li>\n    </ul>\n  </form>\n</div>\n", "description": "Binned Line Chart", "created_at": "2013-03-19T14:42:51Z", "updated_at": "2015-12-15T03:49:00Z", "api": ["d3.svg.axis", "d3.time.format", "d3.time.year.floor", "d3.time.year.ceil", "d3.range", "d3.csv", "d3.scale.linear", "d3.select", "d3.behavior.zoom", "d3.max", "d3.sum", "d3.min", "d3.svg.area", "d3.svg.line"], "readme": "This is a Binned Line Chart version of [Mike Bostock](http://bost.ocks.org/mike/)'s [zoomable area chart](http://mbostock.github.com/d3/talk/20111018/area-gradient.html). You can find his [source here](http://bl.ocks.org/mbostock/4015254). The graph shows number of flights per day in the United States.\n\n- Use the mouse-wheel to zoom in and out, and drag the slider to adjust the size of the bins.\n- View with the step-after interpolation method to see the discrete bins.\n\nThis is a small demo made part-way through [Matt Woelk](http://mattwoelk.ca)'s Masters Thesis. A [video demonstration](http://youtu.be/EaIYcongb-s) of the full version is available.", "uid": "MattWoelk_5196687"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>reprojection selection</title>\n  <meta charset=\"utf-8\" />\n\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n\n</head>\n\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 90%;\n    width: 90%;\n    top: 10%;\n    position: absolute;\n  }\n\n  #title {\n    padding: 20px;\n  }\n\n  .bluesquare {\n    fill: green;\n    stroke: gray;\n    stroke-width: 1px;\n  }\n\n  button.marker {\n    position: fixed;\n    z-index: 1;\n    bottom: 150px;\n    left: 150px;\n  }\n\n  .countryborders{\n    fill:#99d8c9\n  }\n\n  .reproject{\n    margin-top:-10;\n  }\n\n.reprojectshp{\n  margin-top:-10;\n}\n\n#projection-menu{\n  margin-top:10px;\n}\n\n  </style>\n\n<select id=\"projection-menu\"></select>\n<script>\n  function makeSomeMaps() {\n\nvar map =d3.carto.map();\n  d3.select('#map')\n    .call(map);\n\nmap.mode('globe');\nmap.zoom().scale(300)\n\nmap.refresh();\n\n    countryLayer = d3.carto.layer.geojson();\n    countryLayer\n    .path(\"./world.geojson\")\n    .label(\"Countries\")\n    .cssClass(\"countryborders\")\n    .renderMode(\"svg\");\n\n\n  map.addCartoLayer(countryLayer);\n\nd3.select(\"#map\").append(\"button\").attr(\"class\", \"reproject\").html(\"Projection Mode\").on(\"click\", reproject);\n\nd3.select(\"#map\").append(\"button\").attr(\"class\", \"reprojectshp\").html(\"Sphere mode\").on(\"click\", sphereit);\n\nfunction reproject(){\n  var projection = d3.geo.conicEquidistant()\n  .center([0, 0])\n  .scale(200)\n  .translate(map.zoom().translate())\n  .precision(.1);\n\nmap.mode('projection')\n  map.projection(projection);\n  map.refresh();\n\n};\n\n// this is the funciton getting called by the sphere thing\nfunction sphereit(){\n  map.mode('globe');\n  map.refresh;\n\n};\n\n// big list of d3.geo projections from http://bl.ocks.org/mbostock/3711652\nvar options = [\n  {name: \"Aitoff\", projection: d3.geo.aitoff()},\n  {name: \"Albers\", projection: d3.geo.albers().scale(145).parallels([20, 50])},\n  {name: \"August\", projection: d3.geo.august().scale(60)},\n  {name: \"Baker\", projection: d3.geo.baker().scale(100)},\n  {name: \"Boggs\", projection: d3.geo.boggs()},\n  {name: \"Bonne\", projection: d3.geo.bonne().scale(120)},\n  {name: \"Bromley\", projection: d3.geo.bromley()},\n  {name: \"Collignon\", projection: d3.geo.collignon().scale(93)},\n  {name: \"Craster Parabolic\", projection: d3.geo.craster()},\n  {name: \"Eckert I\", projection: d3.geo.eckert1().scale(165)},\n  {name: \"Eckert II\", projection: d3.geo.eckert2().scale(165)},\n  {name: \"Eckert III\", projection: d3.geo.eckert3().scale(180)},\n  {name: \"Eckert IV\", projection: d3.geo.eckert4().scale(180)},\n  {name: \"Eckert V\", projection: d3.geo.eckert5().scale(170)},\n  {name: \"Eckert VI\", projection: d3.geo.eckert6().scale(170)},\n  {name: \"Eisenlohr\", projection: d3.geo.eisenlohr().scale(60)},\n  {name: \"Equirectangular (Plate Carr\u00e9e)\", projection: d3.geo.equirectangular()},\n  {name: \"Hammer\", projection: d3.geo.hammer().scale(165)},\n  {name: \"Hill\", projection: d3.geo.hill()},\n  {name: \"Goode Homolosine\", projection: d3.geo.homolosine()},\n  {name: \"Kavrayskiy VII\", projection: d3.geo.kavrayskiy7()},\n  {name: \"Lambert cylindrical equal-area\", projection: d3.geo.cylindricalEqualArea()},\n  {name: \"Lagrange\", projection: d3.geo.lagrange().scale(120)},\n  {name: \"Larriv\u00e9e\", projection: d3.geo.larrivee().scale(95)},\n  {name: \"Laskowski\", projection: d3.geo.laskowski().scale(120)},\n  {name: \"Loximuthal\", projection: d3.geo.loximuthal()},\n  // {name: \"Mercator\", projection: d3.geo.mercator().scale(490 / 2 / Math.PI)},\n  {name: \"Miller\", projection: d3.geo.miller().scale(100)},\n  {name: \"McBryde\u2013Thomas Flat-Polar Parabolic\", projection: d3.geo.mtFlatPolarParabolic()},\n  {name: \"McBryde\u2013Thomas Flat-Polar Quartic\", projection: d3.geo.mtFlatPolarQuartic()},\n  {name: \"McBryde\u2013Thomas Flat-Polar Sinusoidal\", projection: d3.geo.mtFlatPolarSinusoidal()},\n  {name: \"Mollweide\", projection: d3.geo.mollweide().scale(165)},\n  {name: \"Natural Earth\", projection: d3.geo.naturalEarth()},\n  {name: \"Nell\u2013Hammer\", projection: d3.geo.nellHammer()},\n  {name: \"Polyconic\", projection: d3.geo.polyconic().scale(100)},\n  {name: \"Robinson\", projection: d3.geo.robinson()},\n  {name: \"Sinusoidal\", projection: d3.geo.sinusoidal()},\n  {name: \"Sinu-Mollweide\", projection: d3.geo.sinuMollweide()},\n  {name: \"van der Grinten\", projection: d3.geo.vanDerGrinten().scale(75)},\n  {name: \"van der Grinten IV\", projection: d3.geo.vanDerGrinten4().scale(120)},\n  {name: \"Wagner IV\", projection: d3.geo.wagner4()},\n  {name: \"Wagner VI\", projection: d3.geo.wagner6()},\n  {name: \"Wagner VII\", projection: d3.geo.wagner7()},\n  {name: \"Winkel Tripel\", projection: d3.geo.winkel3()}\n];\n\nvar menu = d3.select(\"#projection-menu\")\n    .on(\"change\", change);\n\nmenu.selectAll(\"option\")\n    .data(options)\n  .enter().append(\"option\")\n    .text(function(d) { return d.name; });\n\n\n  function change(){\n    console.log(options[this.selectedIndex].projection);\n\nvar projector = options[this.selectedIndex].projection;\n\n      var projection = projector\n      .center([0, 0])\n      .scale(100)\n    //  .translate(map.zoom().translate())\n      .precision(.1);\n\n      map.projection(projection);\n      map.refresh();\n\n\n\n  }\n\n  }\n\n\n</script>\n<body onload=\"makeSomeMaps()\">\n\n<div id=\"map\"></div>\n\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"/mpmckenna8/raw/55557f2cc06ae603f242/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"/mpmckenna8/raw/55557f2cc06ae603f242/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"/mpmckenna8/raw/55557f2cc06ae603f242/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>\n", "description": "reproject d3.carto.map", "created_at": "2014-08-01T18:22:02Z", "updated_at": "2015-08-29T14:04:49Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.geojson", "d3.geo.conicEquidistant", "d3.geo.aitoff", "d3.geo.albers", "d3.geo.august", "d3.geo.baker", "d3.geo.boggs", "d3.geo.bonne", "d3.geo.bromley", "d3.geo.collignon", "d3.geo.craster", "d3.geo.eckert1", "d3.geo.eckert2", "d3.geo.eckert3", "d3.geo.eckert4", "d3.geo.eckert5", "d3.geo.eckert6", "d3.geo.eisenlohr", "d3.geo.equirectangular", "d3.geo.hammer", "d3.geo.hill", "d3.geo.homolosine", "d3.geo.kavrayskiy7", "d3.geo.cylindricalEqualArea", "d3.geo.lagrange", "d3.geo.larrivee", "d3.geo.laskowski", "d3.geo.loximuthal", "d3.geo.mercator", "d3.geo.miller", "d3.geo.mtFlatPolarParabolic", "d3.geo.mtFlatPolarQuartic", "d3.geo.mtFlatPolarSinusoidal", "d3.geo.mollweide", "d3.geo.naturalEarth", "d3.geo.nellHammer", "d3.geo.polyconic", "d3.geo.robinson", "d3.geo.sinusoidal", "d3.geo.sinuMollweide", "d3.geo.vanDerGrinten", "d3.geo.vanDerGrinten4", "d3.geo.wagner4", "d3.geo.wagner6", "d3.geo.wagner7", "d3.geo.winkel3"], "readme": "Trying to make a little page to reproject data using d3.carto jam and it kind of works.\n\nThings which could make this a little nicer:\n\n-Adding some graticules.\n\n-Adding different kinds of layers.\n\n-Figure out what the errors are about the paths which get multiplied when panning in globe mode.\n\nFor some much cleaner better javascript examples of how to do similar things w/ d3 please see Jason Davies stuff like http://www.jasondavies.com/maps/transition/ and Mike Bostocks stuff like http://bl.ocks.org/mbostock/3711652.\n\nReally I'm just trying to figure out how to kind of do some things they did w/ d3-carto-map.\n\nAs always let me know if there is anything silly in my code or how I could make it better.\n", "uid": "mpmckenna8_f6245adc7a3cd3930a11"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Small Multiples with Maps</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    fill: none;\n    stroke: lightgray;\n    stroke-width: 1px;\n  }\n  \n  .smallmap {\n    width: 33%;\n    float: left;\n    border: 1px lightgray solid;\n  }\n\n</style>\n<script>\n    function makeSomeMaps() {\n\n    mapImageArray = [];\n    map = d3.carto.map();\n    d3.select(\"#map\").call(map);\n\n    map.setScale(1)\n\n    countryLayer = d3.carto.layer.topojson();\n    \n    countryLayer.path(\"world.topojson\")\n    .label(\"Countries\")\n    .renderMode(\"canvas\")\n    .cssClass(\"country\");\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"all_sites.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"point\")\n    .renderMode(\"canvas\")\n    .markerSize(1)\n    .x(\"xcoord\")\n    .y(\"ycoord\")\n    .on(\"load\", smallMaptiples)\n\n    map.addCartoLayer(countryLayer).addCartoLayer(csvLayer);\n    \n    function smallMaptiples() {\n    var cityAtts = [\"aq\", \"ar\", \"arid\", \"capacity\", \"de\", \"delivery\", \"pop\", \"qu\",\"region\"];\n    var cityData = csvLayer.features()\n\n    for (var att in cityAtts) {\n      \n    var attExtent = d3.extent(cityData, function(d) {return parseFloat(d[cityAtts[att]])});\n    var colorScale = d3.scale.linear().domain([attExtent[0],(attExtent[0] + attExtent[1])/2,attExtent[1]]).range([\"green\",\"yellow\",\"red\"])\n\n    csvLayer\n    .markerColor(function(d) {return colorScale(d[cityAtts[att]])})\n    .strokeColor(function(d) {return colorScale(d[cityAtts[att]])})\n\n    map.refresh();\n    mapImageArray.push(d3.select(\"canvas\").node().toDataURL());\n\n    }\n    \n    window.onresize(null);\n    d3.select(\"#map\").remove();\n    d3.select(\"body\").append(\"div\").selectAll(\"img\").data(mapImageArray).enter().append(\"img\").attr(\"class\", \"smallmap\").attr(\"src\", function(d) {return d})\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Small Maptiples - d3.carto", "created_at": "2014-09-27T03:07:37Z", "updated_at": "2015-08-29T14:06:57Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.extent", "d3.scale.linear"], "readme": "Using **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**'s built-in canvas rendering and HTML5 canvas's built-in toDataUrl() function to create small multiples of the same map.\n\nThis example cycles through the various numeric attributes of the point dataset and restyles the map by changing layer.markerColor and layer.strokeColor. You have to call map.refresh() to update the display and then select the canvas element associated with the map to get access to the image data as a data URL, which you can pass to img elements.\n\nThis method of accessing toDataUrl only works with layers drawn using canvas.", "uid": "emeeks_2090bc8489a662c2e84d"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Responsive Markers - d3.carto</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .reproject {\n    position: absolute;\n    z-index: 99;\n    left: 50px;\n    top: 250px;\n  }\n\n  .node {\n    fill: blue;\n    stroke: black;\n    stroke-width: 1\n  }\n  \n  .markerButton {\n    position: fixed;\n    top: 20px;\n    z-index: 99;\n    cursor: pointer;\n  }\n  .roads {\n    fill: none;\n    stroke: brown;\n    stroke-width: 2px;\n  }\n  \n</style>\n<script>\n  \n  function rectangleMarker() {\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    d3.selectAll(\"g.marker\").append(\"rect\").attr(\"height\", 10).attr(\"width\", 10)\n    .attr(\"x\", -5)\n    .attr(\"y\", -5)\n    .style(\"fill\", \"yellow\")\n    .style(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"1px\")\n  }\n  \n  function circleMarker() {\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    d3.selectAll(\"g.marker\").append(\"circle\").attr(\"r\", 5)\n    .style(\"fill\", \"blue\")\n    .style(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"1px\")\n  }\n  \n  function svgMarker() {\n    d3.selectAll(\"g.marker\").selectAll(\"*\").remove();\n    d3.html(\"icon_2330.svg\", loadSVG);\n     function loadSVG(svgData) {\n    d3.select(svgData).selectAll(\"path\").each(function(d) {\n      var that = this;\n        d3.selectAll(\"g.marker\").each(\n          function() {\n          d3.select(this).node().appendChild(that.cloneNode(true));\n          }\n          )\n    })\n    d3.selectAll(\"g.marker\").select(\"path\");\n     }\n  }\n\n  function makeSomeMaps() {\n    pathSource = 0;\n\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    map.centerOn([-88,39],\"latlong\");\n    map.setScale(4);\n\n    map.refresh();\n\n    wcLayer = d3.carto.layer.tile();\n    wcLayer\n    .tileType(\"stamen\")\n    .path(\"watercolor\")\n    .label(\"Watercolor\")\n    .visibility(true)\n\n    postLayer = d3.carto.layer.topojson();\n    postLayer\n    .path(\"uspost.topojson\")\n    .label(\"Postal Routes\")\n    .cssClass(\"roads\")\n    .renderMode(\"svg\")\n    .on(\"load\", createMatrix);\n\n    map.addCartoLayer(wcLayer).addCartoLayer(postLayer);\n\n    function createMatrix() {\n      postdata = postLayer.features()\n      edgeList = [];\n      edgeMap = {};\n      nodes = [];\n      nodeHash = {};\n      for (x in postdata) {\n        var line = postdata[x].geometry.coordinates;\n        var lS = line[0];\n        var lE = line[line.length - 1];\n        var nA = [lS,lE];\n        for (y in nA) {\n        if (!nodeHash[\"node\" + Math.ceil(nA[y][0] * 1000) + (nA[y][1] * 1000)]) {\n          var newNode = {label: \"Node \" + nodes.length, id: nodes.length.toString(), coordinates: [nA[y]], x: nA[y][0], y: nA[y][1]}\n          nodeHash[\"node\" + Math.ceil(nA[y][0] * 1000) + (nA[y][1] * 1000)] = newNode;\n          nodes.push(newNode)\n        }\n        }\n        postdata[x].properties.source = nodeHash[\"node\" + Math.ceil(lS[0] * 1000) + (lS[1] * 1000)];\n        postdata[x].properties.target = nodeHash[\"node\" + Math.ceil(lE[0] * 1000) + (lE[1] * 1000)];\n        postdata[x].properties.cost = d3.geo.length(postdata[x]) * 6371;\n      }\n\n    nodeLayer = d3.carto.layer.xyArray();\n    nodeLayer\n    .features(nodes)\n    .label(\"Vertices\")\n    .cssClass(\"node\")\n    .renderMode(\"svg\")\n    .x(\"x\")\n    .y(\"y\")\n    .markerSize(5)\n    .clickableFeatures(true)\n    .on(\"load\", function() {nodeLayer.g().selectAll(\"g.marker\").on(\"click\", function(d) {flood(d.id)})});\n    map.addCartoLayer(nodeLayer);\n    \n    for (x in postdata) {\n      if (edgeMap[postdata[x].properties.source.id]) {\n        edgeMap[postdata[x].properties.source.id][postdata[x].properties.target.id] = postdata[x].properties.cost;\n      }\n      else {\n        edgeMap[postdata[x].properties.source.id] = {};\n        edgeMap[postdata[x].properties.source.id][postdata[x].properties.target.id] = postdata[x].properties.cost;\n      }\n      if (edgeMap[postdata[x].properties.target.id]) {\n        edgeMap[postdata[x].properties.target.id][postdata[x].properties.source.id] = postdata[x].properties.cost;\n      }\n      else {\n        edgeMap[postdata[x].properties.target.id] = {};\n        edgeMap[postdata[x].properties.target.id][postdata[x].properties.source.id] = postdata[x].properties.cost;\n      }\n    }\n\n      graph = new Graph(edgeMap);\n    }\n\n   function flood(siteID) {\n    siteDistance = d3.keys(graph.map).map(function(d) {return Infinity});\n    siteDistance[siteID] = 0;\n    \n    var map = graph.map;\n    var calculatedSites = [siteID];\n    var connectedSites = d3.keys(graph.map[siteID]);\n    var visitedSites = [siteID];\n    var sitesToVisit = [siteID];\n    var currentNode = siteID;\n    var currentCost = 0;\n\n    while (sitesToVisit.length > 0) {\n      sitesToVisit.splice(0,1);\n    for (x in connectedSites) {\n      if (calculatedSites.indexOf(connectedSites[x]) == -1) {\n          calculatedSites.push(connectedSites[x]);\n          siteDistance[connectedSites[x]] = currentCost + map[currentNode][connectedSites[x]];\n      }\n      else {\n          siteDistance[connectedSites[x]] = Math.min(currentCost + map[currentNode][connectedSites[x]], siteDistance[connectedSites[x]]);\n      }\n      \n      if (visitedSites.indexOf(connectedSites[x]) == -1 && sitesToVisit.indexOf(connectedSites[x]) == -1) {\n        sitesToVisit.push(connectedSites[x]);\n      }\n      }\n      visitedSites.push(currentNode)\n\n          //sort sitesToVisit\n          sitesToVisit = sitesToVisit.sort(function(a,b) {\n    if (siteDistance[a] < siteDistance[b])\n    return -1;\n    if (siteDistance[a] > siteDistance[b])\n    return 1;\n    return 0;\n    })\n      currentNode = sitesToVisit[0];\n      currentCost = siteDistance[currentNode];\n      connectedSites = d3.keys(graph.map[currentNode]);\n\n    }\n    \n    color = d3.scale.linear().domain([0,500,3500]).range([\"green\",\"yellow\",\"red\"])\n    nodeLayer.g().selectAll(\"g.marker\").selectAll(\"*\").style(\"fill\", \"lightgray\")\n    .transition()\n    .delay(function(d) {return siteDistance[d.id] == Infinity ? 5000 : siteDistance[d.id] * 2})\n    .duration(1000)\n    .style(\"fill\", function(d) {return siteDistance[d.id] == Infinity ? \"gray\" : color(siteDistance[d.id])})\n\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\">\n    <button style=\"left: 140px;\" class=\"markerButton\" onclick=\"rectangleMarker();\">Rectangle Marker</button>\n  <button style=\"left: 250px;\" class=\"markerButton\" onclick=\"circleMarker();\">Circle Marker</button>\n  <button style=\"left: 338px;\" class=\"markerButton\" onclick=\"svgMarker();\">SVG Marker</button>\n</div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"dijkstra.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>\n", "description": "Dynamic Markers - d3.carto", "created_at": "2014-09-03T21:15:00Z", "updated_at": "2015-08-29T14:06:03Z", "api": ["d3.selectAll", "d3.html", "d3.select", "d3.carto.map", "d3.carto.layer.tile", "d3.carto.layer.topojson", "d3.geo.length", "d3.carto.layer.xyArray", "d3.keys", "d3.scale.linear"], "readme": "Dynamic markers with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nSee also: [Changing markers with d3.carto](http://bl.ocks.org/emeeks/f8c0220c54ec8347ea95)\n\nThis example simply shows that if your code can handle different types of SVG elements used as markers, then it can adjust those markers even when you've changed them from their default shape. If you click on any marker, it will show the network distance from that marker to all other markers (or gray if inaccessible). Even if you change the markers to little mailboxes by clicking SVG Marker, clicking on a little mailbox will still show network distance, this time with little mailboxes.\n\nLittle mailbox icon is public domain, as all icons should be.", "uid": "emeeks_28fcb6803748a31718d9"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style type=\"text/css\">\n\nsvg {\n  font-family: \"Helvetica Neue\", Helvetica;\n}\n\n.line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2px;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar m = [20, 20, 30, 20],\n    w = 960 - m[1] - m[3],\n    h = 500 - m[0] - m[2];\n\nvar x,\n    y,\n    duration = 1500,\n    delay = 500;\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", w + m[1] + m[3])\n    .attr(\"height\", h + m[0] + m[2])\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\nvar stocks,\n    symbols;\n\n// A line generator, for the dark stroke.\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); });\n\n// A line generator, for the dark stroke.\nvar axis = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(h);\n\n// A area generator, for the dark stroke.\nvar area = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y1(function(d) { return y(d.price); });\n\nd3.csv(\"stocks.csv\", function(data) {\n  var parse = d3.time.format(\"%b %Y\").parse;\n\n  // Nest stock values by symbol.\n  symbols = d3.nest()\n      .key(function(d) { return d.symbol; })\n      .entries(stocks = data);\n\n  // Parse dates and numbers. We assume values are sorted by date.\n  // Also compute the maximum price per symbol, needed for the y-domain.\n  symbols.forEach(function(s) {\n    s.values.forEach(function(d) { d.date = parse(d.date); d.price = +d.price; });\n    s.maxPrice = d3.max(s.values, function(d) { return d.price; });\n    s.sumPrice = d3.sum(s.values, function(d) { return d.price; });\n  });\n\n  // Sort by maximum price, descending.\n  symbols.sort(function(a, b) { return b.maxPrice - a.maxPrice; });\n\n  var g = svg.selectAll(\"g\")\n      .data(symbols)\n    .enter().append(\"g\")\n      .attr(\"class\", \"symbol\");\n\n  setTimeout(lines, duration);\n});\n\nfunction lines() {\n  x = d3.time.scale().range([0, w - 60]);\n  y = d3.scale.linear().range([h / 4 - 20, 0]);\n\n  // Compute the minimum and maximum date across symbols.\n  x.domain([\n    d3.min(symbols, function(d) { return d.values[0].date; }),\n    d3.max(symbols, function(d) { return d.values[d.values.length - 1].date; })\n  ]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + (i * h / 4 + 10) + \")\"; });\n\n  g.each(function(d) {\n    var e = d3.select(this);\n\n    e.append(\"path\")\n        .attr(\"class\", \"line\");\n\n    e.append(\"circle\")\n        .attr(\"r\", 5)\n        .style(\"fill\", function(d) { return color(d.key); })\n        .style(\"stroke\", \"#000\")\n        .style(\"stroke-width\", \"2px\");\n\n    e.append(\"text\")\n        .attr(\"x\", 12)\n        .attr(\"dy\", \".31em\")\n        .text(d.key);\n  });\n\n  function draw(k) {\n    g.each(function(d) {\n      var e = d3.select(this);\n      y.domain([0, d.maxPrice]);\n\n      e.select(\"path\")\n          .attr(\"d\", function(d) { return line(d.values.slice(0, k + 1)); });\n\n      e.selectAll(\"circle, text\")\n          .data(function(d) { return [d.values[k], d.values[k]]; })\n          .attr(\"transform\", function(d) { return \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\"; });\n    });\n  }\n\n  var k = 1, n = symbols[0].values.length;\n  d3.timer(function() {\n    draw(k);\n    if ((k += 2) >= n - 1) {\n      draw(n - 1);\n      setTimeout(horizons, 500);\n      return true;\n    }\n  });\n}\n\nfunction horizons() {\n  svg.insert(\"defs\", \".symbol\")\n    .append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", w)\n      .attr(\"height\", h / 4 - 20);\n\n  var color = d3.scale.ordinal()\n      .range([\"#c6dbef\", \"#9ecae1\", \"#6baed6\"]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"clip-path\", \"url(#clip)\");\n\n  area\n      .y0(h / 4 - 20);\n\n  g.select(\"circle\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (-h / 4) + \")\"; })\n      .remove();\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (h / 4 - 20) + \")\"; })\n      .attr(\"dy\", \"0em\");\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).selectAll(\".area\")\n        .data(d3.range(3))\n      .enter().insert(\"path\", \".line\")\n        .attr(\"class\", \"area\")\n        .attr(\"transform\", function(d) { return \"translate(0,\" + (d * (h / 4 - 20)) + \")\"; })\n        .attr(\"d\", area(d.values))\n        .style(\"fill\", function(d, i) { return color(i); })\n        .style(\"fill-opacity\", 1e-6);\n\n    y.domain([0, d.maxPrice / 3]);\n\n    d3.select(this).selectAll(\".line\").transition()\n        .duration(duration)\n        .attr(\"d\", line(d.values))\n        .style(\"stroke-opacity\", 1e-6);\n\n    d3.select(this).selectAll(\".area\").transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1)\n        .attr(\"d\", area(d.values))\n        .each(\"end\", function() { d3.select(this).style(\"fill-opacity\", null); });\n  });\n\n  setTimeout(areas, duration + delay);\n}\n\nfunction areas() {\n  var g = svg.selectAll(\".symbol\");\n\n  axis\n      .y(h / 4 - 21);\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return axis(d.values); });\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).select(\".line\").transition()\n        .duration(duration)\n        .style(\"stroke-opacity\", 1)\n        .each(\"end\", function() { d3.select(this).style(\"stroke-opacity\", null); });\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1e-6)\n        .attr(\"d\", area(d.values))\n        .remove();\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return !i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill\", color(d.key))\n        .attr(\"d\", area(d.values));\n  });\n\n  svg.select(\"defs\").transition()\n      .duration(duration)\n      .remove();\n\n  g.transition()\n      .duration(duration)\n      .each(\"end\", function() { d3.select(this).attr(\"clip-path\", null); });\n\n  setTimeout(stackedArea, duration + delay);\n}\n\nfunction stackedArea() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  area\n      .y0(function(d) { return y(d.price0); })\n      .y1(function(d) { return y(d.price0 + d.price); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration)\n      .attr(\"transform\", \"translate(0,0)\")\n      .each(\"end\", function() { d3.select(this).attr(\"transform\", null); });\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", function(d, i) { return i < 3 ? 1e-6 : 1; })\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(streamgraph, duration + delay);\n}\n\nfunction streamgraph() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\")\n      .offset(\"wiggle\");\n\n  stack(symbols);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration);\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(overlappingArea, duration + delay);\n}\n\nfunction overlappingArea() {\n  var g = svg.selectAll(\".symbol\");\n\n  line\n      .y(function(d) { return y(d.price0 + d.price); });\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d.maxPrice; }))])\n      .range([h, 0]);\n\n  area\n      .y0(h)\n      .y1(function(d) { return y(d.price); });\n\n  line\n      .y(function(d) { return y(d.price); });\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", .5)\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price) + \")\"; });\n\n  svg.append(\"line\")\n      .attr(\"class\", \"line\")\n      .attr(\"x1\", 0)\n      .attr(\"x2\", w - 60)\n      .attr(\"y1\", h)\n      .attr(\"y2\", h)\n      .style(\"stroke-opacity\", 1e-6)\n    .transition()\n      .duration(duration)\n      .style(\"stroke-opacity\", 1);\n\n  setTimeout(groupedBar, duration + delay);\n}\n\nfunction groupedBar() {\n  x = d3.scale.ordinal()\n      .domain(symbols[0].values.map(function(d) { return d.date; }))\n      .rangeBands([0, w - 60], .1);\n\n  var x1 = d3.scale.ordinal()\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeBands([0, x.rangeBand()]);\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .remove();\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", 1e-6)\n      .remove();\n\n  g.each(function(p, j) {\n    d3.select(this).selectAll(\"rect\")\n        .data(function(d) { return d.values; })\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.date) + x1(p.key); })\n        .attr(\"y\", function(d) { return y(d.price); })\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"height\", function(d) { return h - y(d.price); })\n        .style(\"fill\", color(p.key))\n        .style(\"fill-opacity\", 1e-6)\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1);\n  });\n\n  setTimeout(stackedBar, duration + delay);\n}\n\nfunction stackedBar() {\n  x.rangeRoundBands([0, w - 60], .1);\n\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  var g = svg.selectAll(\".symbol\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.select(\"text\")\n      .delay(symbols[0].values.length * 10)\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price); })\n      .attr(\"height\", function(d) { return h - y(d.price); })\n      .each(\"end\", function() {\n        d3.select(this)\n            .style(\"stroke\", \"#fff\")\n            .style(\"stroke-opacity\", 1e-6)\n          .transition()\n            .duration(duration / 2)\n            .attr(\"x\", function(d) { return x(d.date); })\n            .attr(\"width\", x.rangeBand())\n            .style(\"stroke-opacity\", 1);\n      });\n\n  setTimeout(transposeBar, duration + symbols[0].values.length * 10 + delay);\n}\n\nfunction transposeBar() {\n  x\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeRoundBands([0, w], .2);\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d3.sum(d.values.map(function(d) { return d.price; })); }))]);\n\n  var stack = d3.layout.stack()\n      .x(function(d, i) { return i; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; });\n\n  stack(d3.zip.apply(null, symbols.map(function(d) { return d.values; }))); // transpose!\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price) - 1; })\n      .attr(\"height\", function(d) { return h - y(d.price) + 1; })\n      .attr(\"x\", function(d) { return x(d.symbol); })\n      .attr(\"width\", x.rangeBand())\n      .style(\"stroke-opacity\", 1e-6);\n\n  t.select(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"transform\", function(d) { return \"translate(\" + (x(d.key) + x.rangeBand() / 2) + \",\" + h + \")\"; })\n      .attr(\"dy\", \"1.31em\")\n      .each(\"end\", function() { d3.select(this).attr(\"x\", null).attr(\"text-anchor\", \"middle\"); });\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"x2\", w);\n\n  setTimeout(donut,  duration / 2 + symbols[0].values.length * 10 + delay);\n}\n\nfunction donut() {\n  var g = svg.selectAll(\".symbol\");\n\n  g.selectAll(\"rect\").remove();\n\n  var pie = d3.layout.pie()\n      .value(function(d) { return d.sumPrice; });\n\n  var arc = d3.svg.arc();\n\n  g.append(\"path\")\n      .style(\"fill\", function(d) { return color(d.key); })\n      .data(function() { return pie(symbols); })\n    .transition()\n      .duration(duration)\n      .tween(\"arc\", arcTween);\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"dy\", \".31em\");\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"y1\", 2 * h)\n      .attr(\"y2\", 2 * h)\n      .remove();\n\n  function arcTween(d) {\n    var path = d3.select(this),\n        text = d3.select(this.parentNode.appendChild(this.previousSibling)),\n        x0 = x(d.data.key),\n        y0 = h - y(d.data.sumPrice);\n\n    return function(t) {\n      var r = h / 2 / Math.min(1, t + 1e-3),\n          a = Math.cos(t * Math.PI / 2),\n          xx = (-r + (a) * (x0 + x.rangeBand()) + (1 - a) * (w + h) / 2),\n          yy = ((a) * h + (1 - a) * h / 2),\n          f = {\n            innerRadius: r - x.rangeBand() / (2 - a),\n            outerRadius: r,\n            startAngle: a * (Math.PI / 2 - y0 / r) + (1 - a) * d.startAngle,\n            endAngle: a * (Math.PI / 2) + (1 - a) * d.endAngle\n          };\n\n      path.attr(\"transform\", \"translate(\" + xx + \",\" + yy + \")\");\n      path.attr(\"d\", arc(f));\n      text.attr(\"transform\", \"translate(\" + arc.centroid(f) + \")translate(\" + xx + \",\" + yy + \")rotate(\" + ((f.startAngle + f.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n    };\n  }\n\n  setTimeout(donutExplode, duration + delay);\n}\n\nfunction donutExplode() {\n  var r0a = h / 2 - x.rangeBand() / 2,\n      r1a = h / 2,\n      r0b = 2 * h - x.rangeBand() / 2,\n      r1b = 2 * h,\n      arc = d3.svg.arc();\n\n  svg.selectAll(\".symbol path\")\n      .each(transitionExplode);\n\n  function transitionExplode(d, i) {\n    d.innerRadius = r0a;\n    d.outerRadius = r1a;\n    d3.select(this).transition()\n        .duration(duration / 2)\n        .tween(\"arc\", tweenArc({\n          innerRadius: r0b,\n          outerRadius: r1b\n        }));\n  }\n\n  function tweenArc(b) {\n    return function(a) {\n      var path = d3.select(this),\n          text = d3.select(this.nextSibling),\n          i = d3.interpolate(a, b);\n      for (var key in b) a[key] = b[key]; // update data\n      return function(t) {\n        var a = i(t);\n        path.attr(\"d\", arc(a));\n        text.attr(\"transform\", \"translate(\" + arc.centroid(a) + \")translate(\" + w / 2 + \",\" + h / 2 +\")rotate(\" + ((a.startAngle + a.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n      };\n    }\n  }\n\n  setTimeout(function() {\n    svg.selectAll(\"*\").remove();\n    svg.selectAll(\"g\").data(symbols).enter().append(\"g\").attr(\"class\", \"symbol\");\n    lines();\n  }, duration);\n}\n\n</script>\n", "description": "D3 Show Reel", "created_at": "2016-02-02T17:46:17Z", "updated_at": "2016-02-02T17:46:19Z", "api": ["d3.scale.category10", "d3.select", "d3.svg.line", "d3.svg.area", "d3.csv", "d3.time.format", "d3.nest", "d3.max", "d3.sum", "d3.time.scale", "d3.scale.linear", "d3.min", "d3.timer", "d3.scale.ordinal", "d3.range", "d3.layout.stack", "d3.zip.apply", "d3.layout.pie", "d3.svg.arc", "d3.interpolate"], "readme": "The first 15 seconds of the D3 show reel. See full video at <http://vimeo.com/29862153>. Includes seamless transitions between the following visualization types:\n\n* lines\n* horizons\n* areas\n* stacked areas\n* streamgraph\n* overlapping areas\n* grouped bars\n* stacked bars\n* bars\n* donut\n\nAdmittedly, these aren\u2019t the most useful visualizations; their purpose is not to inform but to demonstrate D3\u2019s capability for producing dynamic visualizations with custom transitions. They *do* show real data (the monthly closing price for ten years\u2019 worth of stock data), but I didn\u2019t include axes for date or price. See the [axis component](http://bl.ocks.org/1166403) for a better example. Also, the stacked visualizations aren\u2019t especially meaningful, unless you imagine owning a portfolio with equal parts AAPL, AMZN, IBM and MSFT. Similarly, the bars and donuts represent the *average* price (or sum) during this time period.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1256572'>D3 Show Reel</a>", "uid": "sivartravis_84553799f7a1a17548e1"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 | reusable heatmap calendar</title> \n  <meta name=\"author\" content=\"Sundar Singh | eesur.com\">\n  \n  <link rel=\"stylesheet\" href=\"main.css\">\n  <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.min.js\" charset=\"utf-8\"></script>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment.min.js\"></script>\n</head>\n<body>\n\n  <article>\n    <header>\n      <span id=\"info\">Info</span> \n    </header>\n    <section id=\"heatmap\"></section>\n  </article> \n\n  <script> d3.eesur = {}; //namespace  </script>\n  <script src=\"d3_code_heatmap_cal.js\"></script>\n  <script>\n  // *****************************************\n  // render chart\n  // *****************************************\n  (function() {\n      'use strict';\n      \n      var nestedData;\n      var parseDate = d3.time.format('%Y-%m-%d').parse;\n\n      // create chart\n      var heatChart = d3.eesur.heatmap()\n          .colourRangeStart('#e1f4fd')\n          .colourRangeEnd('#00447c')\n          .height(800)\n          .startYear('2011')\n          .endYear('2016')\n          .on('_hover', function (d, i) {\n              var f = d3.time.format('%B %d %Y');\n              d3.select('#info')\n                  .text(function () {\n                      return f(d) + ': ' + nestedData[d];\n                  });\n          });\n\n      // apply after nesting data\n      d3.json('heatmap_data.json', function(error, data) {\n\n          if (error) return console.warn(error);\n        \n          nestedData = d3.nest()\n              .key(function (d) { return parseDate(d.date.split(' ')[0]); })\n              .rollup(function (n) { \n                  return d3.sum(n, function (d) { \n                      return d.amount; // key\n                  }); \n              })\n              .map(data);\n\n          // console.log(nestedData);\n\n          // render chart\n          d3.select('#heatmap')\n              .datum(nestedData)\n              .call(heatChart);\n\n      });\n\n  }());\n\n  d3.select(self.frameElement).style('height', '900px');\n\n  </script>\n\n</body>\n\n</html>\n\n\n", "description": "d3 | reusable heatmap calendar", "created_at": "2016-01-07T03:14:41Z", "updated_at": "2016-01-07T03:23:16Z", "api": ["d3.dispatch", "d3.scale.linear", "d3.range", "d3.min", "d3.time.format", "d3.select", "d3.time.days", "d3.time.months", "d3.extent", "d3.values", "d3.rebind", "d3.eesur.heatmap", "d3.json", "d3.nest", "d3.sum"], "readme": "Calendar heatmap adapted into a reusable chart for quick testing\n\n> loading of ~~CSV~~ json data, which is then quantized into a diverging color scale. The values are visualized as coloured cells per day. Days are arranged into columns by week, then grouped by month and years. \n\n[source](http://bl.ocks.org/mbostock/4063318)\n\n\nforked from <a href='http://bl.ocks.org/eesur/'>eesur</a>'s block: <a href='http://bl.ocks.org/eesur/5fbda7f410d31da35e42'>d3 | reusable heatmap calendar</a>", "uid": "renecnielsen_00ece1121142dddee837"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<body>\n    <div id=\"map\"></div>\n    <script src=\"//d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n\t\t<script src=\"//d3js.org/d3.geo.projection.v0.min.js\" charset=\"utf-8\"></script>\n\t  <script src=\"//d3js.org/topojson.v1.min.js\"></script>\n    <script src=\"//d3js.org/queue.v1.min.js\"></script>\n\n  <style>\n\nbody {\n  background: #fcfcfa;\n}\n\n.stroke {\n  fill: none;\n  stroke: #000;\n  stroke-width: 3px;\n}\n\n.fill {\n  fill: #fff;\n}\n\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-width: .5px;\n  stroke-opacity: .5;\n}\n\n.land {\n  fill: #000;\n}\n\n.image.country {\n  stroke: #000;\n  stroke-width: 0.5px;\n}\n\n.boundary {\n  fill: none;\n  stroke: #000;\n  stroke-width: 0.5px;\n}\n\n  </style>\n  <script>\n    var wflags = \"https://gist.githubusercontent.com/espinielli/5107491/raw/world-country-flags.tsv\",\n        w110 = \"https://gist.githubusercontent.com/mbostock/4090846/raw/world-110m.json\",\n        wnames = \"https://gist.githubusercontent.com/mbostock/4090846/raw/world-country-names.tsv\";\n\n\n    var width = 1200,\n        height = 700;\n\n    // \nvar projection = d3.geo.robinson()\n    .scale(180)\n    .translate([width / 2, height / 2])\n    .precision(.1);\n    \nvar path = d3.geo.path()\n    .projection(projection);\n\nvar graticule = d3.geo.graticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar defs = svg.append(\"defs\");\n\ndefs.append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\nsvg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"fill\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\n    var q = queue()\n        .defer(d3.json, w110)\n        .defer(d3.tsv, wnames)\n        .defer(d3.tsv, wflags)\n        .await(ready);\n\n\n    function ready(error, world, names, flags) {\n        if (error) {\n            alert('error: ' + error);\n            return;\n        }\n\n      \tflags.forEach(function (d) { d.id = +d.id;});\n        flags.sort(function(a,b) {\n          return +a.id < +b.id ? -1 : +a.id > +b.id ? +1 : 0;\n        });\n\n        var countries = topojson.feature(world, world.objects.countries).features,\n            land = topojson.feature(world, world.objects.land);\n\n      \tcountries = countries.filter(function(d) {\n\t\t\t    return names.some(function(n) {\n            if (d.id == n.id) {\n              return d.name = n.name;\n            }\n    \t\t\t});\n  \t\t\t});\n      \n        countries = countries.filter(function(d) {\n\t\t\t    return flags.some(function(n) {\n            if (d.id == n.id) {\n            \tvar bounds = path.bounds(d);\n            \tif (bounds[0][0] < 0) bounds[0][0] = 0;\n            \tif (bounds[1][0] > width) bounds[1][0] = width;\n            \tif (bounds[0][1] < 0) bounds[0][1] = 0;\n            \tif (bounds[1][1] < 0) bounds[1][1] = height;\n              \n             d.bounds = bounds; \n              \n              return d.url = n.url;\n            }\n    \t\t\t});\n  \t\t\t});\n\n      defs.selectAll(\"mask\")\n\t\t\t\t.data(countries)\n\t\t\t\t.enter()\n        \t.append(\"clipPath\")\n\t\t\t\t\t\t.attr(\"class\", \"mask\")\n\t\t\t\t\t\t.attr(\"id\", function(d) {return \"iso-\" + d.id})\n\t\t\t\t\t\t.append(\"path\")\n\t\t\t\t\t\t.attr(\"d\", path);\n\n\n      svg.selectAll(\"country\")\n      \t.data(countries)\n      \t.enter()\n        .insert(\"image\", \".graticule\")\n      \t\t.attr(\"class\", \"country\")\n          .attr(\"xlink:href\", function (d){return d.url;})\n          .attr(\"x\", function (d) {return d.bounds[0][0];})\n          .attr(\"y\", function (d) {return d.bounds[0][1];})\n          .attr(\"width\", function (d) {return d.bounds[1][0] - d.bounds[0][0];})\n          .attr(\"height\", function (d) {return d.bounds[1][1] - d.bounds[0][1];})\n          .attr(\"preserveAspectRatio\", \"none\")\n          .attr(\"clip-path\", function(d) {\n          \treturn \"url(#iso-\" + d.id + \")\";\n          });\n\n      // interior boundaries\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"clip-path\", \"url(#sphere)\")\n\t\t\t.attr(\"d\", path);\n\t// exterior boundaries\n      svg.insert(\"path\", \".graticule\")\n    .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a === b}))\n    .attr(\"d\", path)\n    .attr(\"class\", \"boundary\");\n}\n\n\n   \n      \n</script>\n</body>\n\n</html>\n", "description": "D3.js Boetti ", "created_at": "2015-12-13T16:18:54Z", "updated_at": "2015-12-20T15:03:50Z", "api": ["d3.geo.robinson", "d3.geo.path", "d3.geo.graticule", "d3.select"], "readme": "[Boetti's map](http://www.moma.org/learn/moma_learning/alighiero-boetti-map-of-the-world-1989) using D3\n\n### ToDo's:\n\nDue to their peculiar bounding boxes (see Jason Davies [nice visualization](https://www.jasondavies.com/maps/bounds/)) some countries need special treatment\n\n* France: split Guyana and map French flag accordingly\n* USA: split Alaska map the flag\n\nInspired by <a href='http://bl.ocks.org/rveciana/'>rveciana</a>'s block: <a href='http://bl.ocks.org/rveciana/6193058'>Flag map with D3js - SVG</a>", "uid": "espinielli_9ea56e041f6847dbe944"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n \n \n.axis .minor {\n  stroke: red;\n  stroke-width: 1.0;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(24).tickSubdivide(2).tickSize(-30, -30, 0));\n \n</script>", "description": "d3 minor lines 3", "created_at": "2013-01-31T23:20:32Z", "updated_at": "2015-12-12T00:58:56Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "", "uid": "vjpgo_4687640"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n \n \n.axis .minor {\n  stroke: red;\n  stroke-width: 1.0;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(16).tickSubdivide(3).tickSize(-60, -60, 0));\n \n</script>", "description": "d3 minor lines 4", "created_at": "2013-01-31T23:22:18Z", "updated_at": "2015-12-12T00:58:56Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "", "uid": "vjpgo_4687652"}, {"code": "<!DOCTYPE html >\n<html >\n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"chrome=1\" />\n    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" />\n    <title>d3 x3dom demo</title>\n    <script type=\"text/javascript\" src=\"http://mbostock.github.com/d3/d3.js\"></script>\n    <script type=\"text/javascript\" src=\"http://x3dom.org/x3dom/example/x3dom.js\"></script>\n  </head>\n  <body>\n    <script>\n      function randomData() {\n        return d3.range(6).map( function() { return Math.random()*20; } )\n      };\n\n      x3d = d3.select(\"body\")\n                    .append(\"x3d\")\n                    .attr( \"height\", \"400px\" )\n                    .attr( \"width\", \"400px\" )\n                    ;\n      var scene = x3d.append(\"scene\");\n      scene.append(\"viewpoint\")\n          .attr( \"centerOfRotation\", \"3.75 0 10\")\n           .attr( \"position\", \"13.742265188709691 -27.453522975182366 16.816062840792625\" )\n           .attr( \"orientation\", \"0.962043810961999 0.1696342804961945 0.21376603254551874 1.379433089729343\" )\n           ;\n\n      function refresh( data ) {\n        shapes = scene.selectAll(\"transform\").data( data );\n        shapesEnter = shapes\n             .enter()\n             .append( \"transform\" )\n             .append( \"shape\" )\n             ;\n        // Enter and update\n        shapes.transition()\n              .attr(\"translation\", function(d,i) { return i*1.5 + \" 0.0 \" + d/2.0; } )\n              .attr(\"scale\", function(d) { return \"1.0 1.0 \" + d; } )\n              ;\n\n        shapesEnter\n            .append(\"appearance\")\n              .append(\"material\")\n              .attr(\"diffuseColor\", \"steelblue\" );\n\n        shapesEnter.append( \"box\" )\n          .attr( \"size\", \"1.0 1.0 1.0\" );\n      }\n\n      refresh( randomData() )\n      setInterval(\n        function(){\n          refresh( randomData() );\n        },\n        2500);\n\n    </script>\n  </body>\n</html>", "description": "d3 with x3dom Demo", "created_at": "2015-11-21T21:31:16Z", "updated_at": "2015-11-21T23:19:52Z", "api": ["d3.range", "d3.select"], "readme": "", "uid": "ufenegga_366344909b1d79e327b9"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Streamgraph</title>\n    <script type=\"text/javascript\" src=\"https://raw.github.com/lgrammel/d3/master/d3.v2.js\"></script>\n    <script type=\"text/javascript\" src=\"stream_layers.js\"></script>\n    <script type=\"text/javascript\" src=\"stream-chart.js\"></script>\n</head>\n<body>\n    <div id=\"chart\">\n        <button class=\"first last\" onclick=\"transition()\">\n            Update\n        </button><p>\n    </div>\n    <script>\n        var n = 20, // number of layers\n            m = 200; // number of samples per layer\n\n        var data1 = stream_layers(n, m);\n        var data0 = stream_layers(n, m);\n        var colors = d3.range(n).map(function() { return d3.interpolateRgb(\"#aad\", \"#556\")(Math.random()); });\n\n        var streamgraph = streamgraphChart()\n            .margin({top: 10, right: 10, bottom: 10, left: 10})\n            .color(function(d, i) { return colors[i]; }) // use same colors for both data sets\n            .transitionDuration(1500)\n            .on(\"mouseover\", fade(.2))\n            .on(\"mouseout\", fade(1));\n\n        d3.select(\"#chart\")\n            .datum(data0)\n            .call(streamgraph);\n\n        function transition() {\n            d3.select(\"#chart\")\n                    .datum(function() {\n                        var d = data1;\n                        data1 = data0;\n                        return data0 = d;\n                    })\n                    .call(streamgraph);\n        }\n\n        function fade(opacity) {\n            return function(g, i) {\n                streamgraph.layers()\n                    .filter(function(h, j) {\n                        return j != i;\n                    })\n                    .transition(1000)\n                      .style(\"opacity\", opacity);\n            }\n        }\n    </script>\n</body>\n</html>", "description": "Interactive Streamgraph D3", "created_at": "2012-03-03T02:51:19Z", "updated_at": "2015-10-01T09:28:08Z", "api": ["d3.range", "d3.interpolateRgb", "d3.select", "d3.layout.stack", "d3.max", "d3.svg.area"], "readme": "", "uid": "lgrammel_1963983"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.land {\n  fill: #222;\n}\n\n.county-boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.state-boundary {\n  fill: none;\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script>\n\nmeetup_data = {\n\"results\": [\n{\n\"status\": \"upcoming\",\n\"visibility\": \"public\",\n\"maybe_rsvp_count\": 0,\n\"venue\": {\n\"zip\": \"93940\",\n\"phone\": \"831.372.0581\",\n\"lon\": -121.889899,\n\"state\": \"CA\",\n\"address_1\": \"256 Figueroa St\",\n\"address_2\": \"Wharf #2\",\n\"city\": \"Monterey\",\n\"country\": \"us\",\n\"id\": 1106358,\n\"repinned\": false,\n\"name\": \"London Bridge Pub\",\n\"lat\": 36.601817\n},\n\"id\": \"119518782\",\n\"utc_offset\": -25200000,\n\"time\": 1371693600000,\n\"waitlist_count\": 0,\n\"announced\": true,\n\"updated\": 1371593066000,\n\"yes_rsvp_count\": 7,\n\"created\": 1368632764000,\n\"event_url\": \"http://www.meetup.com/Monterey-Bay-Information-Technologists/events/119518782/\",\n\"description\": \"<p><strong>Announcements:</strong></p>\n<p>MBIT is still looking for sponsors to provide raffle prizes and possible future locations for MBIT meetups.</p>\n<p><strong>Presentations:</strong></p>\n<ul>\n<li>Introduction to Functional Programming with Clojure</li>\n<li>Data Visualization in the Browser with D3</li>\n</ul>\n<p><strong>Location</strong>:</p>\n<p>London Bridge Pub <br />\n\n <span>256 Figueroa St. <br />\n\n</span> <span>Monterey, CA 93940</span><span> <br />\n\n</span> <a class=\"linkified\" href=\"http://goo.gl/maps/lWJbJ\" style=\"font-size : 14px ; text-decoration : underline\">http://goo.gl/maps/lWJbJ</a></p>\n<p><strong>NOTE</strong>: Minors (under 21) are allowed in the pub until 10p so everyone is welcome.</p>\n<p><span>There should be a few MBIT people there about an hour (~6p) before the meetup for networking, discussions, and just overall relaxing.</span></p>\n<p>Also, we should have some time after the presentations and meetup proper to have more casual discussions as well.</p>\n<p><strong>Parking</strong>:</p>\n<p>There is parking next to the pub but I believe it might be paid parking.</p>\n<p> </p>\",\n\"name\": \"MBIT : June Meetup\",\n\"headcount\": 0,\n\"group\": {\n\"id\": 8488122,\n\"group_lat\": 36.59000015258789,\n\"name\": \"Monterey Bay Information Technologists (MBIT)\",\n\"group_lon\": -121.8499984741211,\n\"join_mode\": \"open\",\n\"urlname\": \"Monterey-Bay-Information-Technologists\",\n\"who\": \"MBitrs\"\n}\n}\n],\n\"meta\": {\n\"lon\": \"\",\n\"count\": 1,\n\"signed_url\": \"http://api.meetup.com/2/events?status=upcoming&order=time&limited_events=False&group_urlname=Monterey-Bay-Information-Technologists&desc=false&offset=0&format=json&page=20&fields=&sig_id=79162512&sig=7efb712148f3645653a29c8820aa904d647cd34b\",\n\"link\": \"http://www.meetup.com/2/events\",\n\"next\": \"\",\n\"total_count\": 1,\n\"url\": \"http://www.meetup.com/2/events?status=upcoming&order=time&limited_events=False&group_urlname=Monterey-Bay-Information-Technologists&desc=false&offset=0&format=json&page=20&fields=&sign=true\",\n\"id\": \"\",\n\"title\": \"Meetup Events v2\",\n\"updated\": 1371593066000,\n\"description\": \"Access Meetup events using a group, member, or event id. Events in private groups are available only to authenticated members of those groups. To search events by topic or location, see [Open Events](/meetup_api/docs/2/open_events).\",\n\"method\": \"Events\",\n\"lat\": \"\"\n}\n}\n\nvar width = 960,\n    height = 500;\n\nvar projection = d3.geo.albersUsa()\n    .scale(1000)\n    .translate([width / 2, height / 2]);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"/d/4090846/us.json\", function(error, us) {\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(us, us.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(us, us.objects.counties, function(a, b) { return a !== b && !(a.id / 1000 ^ b.id / 1000); }))\n      .attr(\"class\", \"county-boundary\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"state-boundary\")\n      .attr(\"d\", path);\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n</script>", "description": "MBIT D3.js Demo", "created_at": "2013-06-19T23:52:31Z", "updated_at": "2015-12-18T17:29:41Z", "api": ["d3.geo.albersUsa", "d3.geo.path", "d3.select", "d3.json"], "readme": "", "uid": "david4096_5819181"}, {"code": "<html>\n\t<head>\n\t\t<title>Interactive Line Graph</title>\n\t\t<script src=\"http://d3js.org/d3.v2.js\"></script>\n\t\t<!-- \n\t\t\tusing JQuery for element dimensions\n\t\t\tThis is a small aspect of this example so it can be removed fairly easily if needed.\n\t\t-->\n\t\t<script src=\"http://code.jquery.com/jquery-1.7.2.min.js\"></script>\n\t\t<script src=\"sample_data.js\"></script>\n\t\t<script src=\"line-graph.js\"></script>\n\t\t<link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: \"Helvetica Neue\", Helvetica;\n\t\t\t}\n\t\t\t\t\t\n\t\t\tp {\n\t\t\t\tclear:both;\n\t\t\t\ttop: 20px;\n\t\t\t}\t\t\n\t\t\t\t\t\n\t\t\tdiv.aGraph {\n\t\t\t\tmargin-bottom: 30px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t<div id=\"graph1\" class=\"aGraph\" style=\"position:relative;width:100%;height:400px\"></div>\n\t\n\t<div id=\"graph2\" class=\"aGraph\" style=\"float:left;position:relative;width:49%;height:200px\"></div>\n\t<div id=\"graph3\" class=\"aGraph\" style=\"float:left;position:relative;width:49%;height:200px\"></div>\n\n\t<script>\n\t\t/* \n\t\t * If running inside bl.ocks.org we want to resize the iframe to fit both graphs\n\t\t */\n\t\t if(parent.document.getElementsByTagName(\"iframe\")[0]) {\n\t\t\t parent.document.getElementsByTagName(\"iframe\")[0].setAttribute('style', 'height: 650px !important');\n\t\t }\n\t\n\t\t /*\n\t\t * Note how the 'data' object is added to here before rendering to provide decoration information.\n\t\t * <p>\n\t\t * This is purposefully done here instead of in data.js as an example of how data would come from a server\n\t\t * and then have presentation information injected into it (rather than as separate arguments in another object)\n\t\t * and passed into LineGraph.\n\t\t *\n\t\t * Also, CSS can be used to style colors etc, but this is also doable via the 'data' object so that the styling\n\t\t * of different data points can be done in code which is often more natural for display names, legends, line colors etc\n\t\t */\n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data[\"displayNames\"] = [\"2xx\",\"3xx\",\"4xx\",\"5xx\"];\n\t\t data[\"colors\"] = [\"green\",\"orange\",\"red\",\"darkred\"];\n\t\t data[\"scale\"] = \"pow\";\n\t\t \n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data2[\"displayNames\"] = [\"2xx\",\"3xx\",\"4xx\",\"5xx\"];\n\t\t data2[\"colors\"] = [\"green\",\"orange\",\"red\",\"darkred\"];\n\t\t data2[\"scale\"] = \"linear\";\n\t\t \n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data3[\"displayNames\"] = [\"Data1\", \"Data2\"];\n\t\t data3[\"axis\"] = [\"left\", \"right\"];\n\t\t data3[\"colors\"] = [\"#2863bc\",\"#c8801c\"];\n\t\t data3[\"rounding\"] = [2, 0];\n\n\t\t // create graph now that we've added presentation config\n\t\tvar l1 = new LineGraph({containerId: 'graph1', data: data});\n\t\tvar l2 = new LineGraph({containerId: 'graph2', data: data2});\n\t\tvar l3 = new LineGraph({containerId: 'graph3', data: data3});\n\t\t\n\tsetInterval(function() {\n\t\t/*\n\t\t* The following will simulate live updating of the data (see dataA, dataB, dataC etc in data.js which are real examples)\n\t\t* This is being simulated so this example functions standalone without a backend server which generates data such as data.js contains.\n\t\t*/\n\t\t// for each data series ...\n\t\tvar newData = [];\n\t\tdata.values.forEach(function(dataSeries, index) {\n\t\t\t// take the first value and move it to the end\n\t\t\t// and capture the value we're moving so we can send it to the graph as an update\n\t\t\tvar v = dataSeries.shift();\n\t\t\tdataSeries.push(v);\n\t\t\t// put this value in newData as an array with 1 value\n\t\t\tnewData[index] = [v];\n\t\t})\n\t\t\n\t\t// we will reuse dataA each time\n\t\tdataA.values = newData;\n\t\t// increment time 1 step\n\t\tdataA.start = dataA.start + dataA.step;\n\t\tdataA.end = dataA.end + dataA.step; \n\t\t\t\t\t\n\t\tl1.slideData(dataA);\n\t}, 2000);\n\n\t\t\n\t</script>\n\n\n\n\t</body>\n</html>", "description": "Interactive Line Graph (D3)", "created_at": "2012-11-21T10:36:44Z", "updated_at": "2015-10-13T02:18:04Z", "api": ["d3.format", "d3.max", "d3.scale.pow", "d3.scale.log", "d3.scale.linear", "d3.svg.axis", "d3.time.scale", "d3.select", "d3.svg.line"], "readme": "", "uid": "phoebebright_4124200"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n\tstroke: steelblue;\n\tstroke-width: 2;\n\tfill: none;\n}\n\n.axis path,\n.axis line {\n\tfill: none;\n\tstroke: grey;\n\tstroke-width: 1;\n\tshape-rendering: crispEdges;\n}\n\ndiv.tooltip {\n  position: absolute;\t\n  text-align: center;\t\n  width: 60px;\t\n  height: 28px;\t\t\n  padding: 2px;\t\n  font: 12px sans-serif;\t\n  background: lightsteelblue;\t\n  border: 0px;\t\t\t\t\t\n  border-radius: 8px;\n /*  pointer-events: none;\tThis line needs to be removed */\n\t\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->\t\n<script type=\n    \"text/javascript\" src=\"http://d3js.org/d3.v3.min.js\">\n</script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar\tmargin = {top: 30, right: 20, bottom: 30, left: 50},\n\twidth = 600 - margin.left - margin.right,\n\theight = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar\tparseDate = d3.time.format(\"%d-%b-%y\").parse;\nvar formatTime = d3.time.format(\"%e %B\");// Format tooltip date / time\n\n// Set the ranges\nvar\tx = d3.time.scale().range([0, width]);\nvar\ty = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar\txAxis = d3.svg.axis().scale(x)\n\t.orient(\"bottom\").ticks(5);\n\nvar\tyAxis = d3.svg.axis().scale(y)\n\t.orient(\"left\").ticks(5);\n\n// Define the line\nvar\tvalueline = d3.svg.line()\n\t.x(function(d) { return x(d.date); })\n\t.y(function(d) { return y(d.close); });\n\n// Define 'div' for tooltips\nvar div = d3.select(\"body\")\n\t.append(\"div\")  // declare the tooltip div \n\t.attr(\"class\", \"tooltip\")              // apply the 'tooltip' class\n\t.style(\"opacity\", 0);                  // set the opacity to nil\n\n// Adds the svg canvas\nvar\tsvg = d3.select(\"body\")\n\t.append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t.append(\"g\")\n\t\t.attr(\"transform\", \n\t\t      \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n\tdata.forEach(function(d) {\n\t\td.date = parseDate(d.date);\n\t\td.close = +d.close;\n\t});\n\n\t// Scale the range of the data\n\tx.domain(d3.extent(data, function(d) { return d.date; }));\n\ty.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n\t// Add the valueline path.\n\tsvg.append(\"path\")\t\t\n\t\t.attr(\"class\", \"line\")\n\t\t.attr(\"d\", valueline(data));\n\n\t// draw the scatterplot\n\tsvg.selectAll(\"dot\")\t\t\t\t\t\t\t\t\t\n\t\t.data(data)\t\t\t\t\t\t\t\t\t\t\t\n\t.enter().append(\"circle\")\t\t\t\t\t\t\t\t\n\t\t.attr(\"r\", 5)\t\n\t\t.attr(\"cx\", function(d) { return x(d.date); })\t\t \n\t\t.attr(\"cy\", function(d) { return y(d.close); })\n\t// Tooltip stuff after this\n\t    .on(\"mouseover\", function(d) {\t\t\n            div.transition()\n\t\t\t\t.duration(500)\t\n\t\t\t\t.style(\"opacity\", 0);\n\t\t\tdiv.transition()\n\t\t\t\t.duration(200)\t\n\t\t\t\t.style(\"opacity\", .9);\t\n\t\t\tdiv\t.html(\n\t\t\t\t'<a href= \"http://google.com\">' + // The first <a> tag\n\t\t\t\tformatTime(d.date) +\n\t\t\t\t\"</a>\" +                          // closing </a> tag\n\t\t\t\t\"<br/>\"  + d.close)\t \n\t\t\t\t.style(\"left\", (d3.event.pageX) + \"px\")\t\t\t \n\t\t\t\t.style(\"top\", (d3.event.pageY - 28) + \"px\");\n\t\t\t});\n\n\t// Add the X Axis\n\tsvg.append(\"g\")\t\n\t\t.attr(\"class\", \"x axis\")\n\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t.call(xAxis);\n\n\t// Add the Y Axis\n\tsvg.append(\"g\")\t\n\t\t.attr(\"class\", \"y axis\")\n\t\t.call(yAxis);\n\n});\n\n</script>\n</body>\n", "description": "d3.js tool tip with HTML link", "created_at": "2014-04-30T09:36:49Z", "updated_at": "2015-08-29T14:00:46Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is designed to demonstrate generating tool tips with an HTML link in them. The graph is based on a simple line graph per the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks) and was generated in response to a question on the [d3noob.org](http://www.d3noob.org/2013/01/adding-tooltips-to-d3js-graph.html?showComment=1398815399178#c9184043422573851185) blog.\n\nThe main differences with this example are the addition of the `<a>` tags in the appropriate places as commented, the removal of the `pointer-events: none` attribute in the `style section and the slight amending of the transitions of the html divs so that the tool tips stay in place while the mouse moves off the dot.", "uid": "d3noob_c37cb8e630aaef7df30d"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  width: 960px;\n  margin: auto;\n  position: relative;\n}\n\nsvg {\n  font: 11px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.axis--y path {\n  display: none;\n}\n\n.androgs {\n  fill: none;\n  stroke: #aaa;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  stroke-width: 1.5px;\n}\n\n.androg--hover {\n  stroke: #000;\n}\n\n.focus text {\n  text-anchor: middle;\n  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;\n}\n\n#form {\n  position: absolute;\n  top: 20px;\n  right: 30px;\n}\n\nrect {\n  fill: none;\n  pointer-events: all;\n}\n\n</style>\n<label id=\"form\">\n  Display\n  <select id=\"form_select\">\n  </select>\n  Lines\n</label>\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<script>\n\nvar years,\n    yearFormat = d3.time.format(\"%Y\");\n\nvar margin = {top: 20, right: 30, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category20();\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); });\n\nvar focus;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .on(\"mousemove\", mousemoved);\n\nvar paths = [],\n    shown_paths = [];\nd3.csv(\"steady_andro.csv\", type, function(error, androgs) {\n  x.domain(d3.extent(years));\n  y.domain([0, d3.max(androgs, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\"));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .ticks(10, \"%\"))\n    .append(\"text\")\n      .attr(\"x\", 4)\n      .attr(\"dy\", \".32em\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Percent Female\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"androgs\")\n    .selectAll(\"path\")\n      .data(androgs)\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { d.line = this; return line(d.values); });\n\n  focus = svg.append(\"g\")\n      .attr(\"transform\", \"translate(-100,-100)\")\n      .attr(\"class\", \"focus\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 3.5);\n\n  focus.append(\"text\")\n      .attr(\"y\", -10);\n\n  var form_select = d3.select(\"#form_select\");\n\n  form_select.selectAll(\"option\")\n      .data(androgs)\n    .enter().append(\"option\")\n      .attr(\"value\", function(d, i) { return i+1; })\n      .text(function(d, i) { return i+1; })\n\n  // set the last option as selected\n  var all_options = d3.selectAll(\"option\")[0];\n  d3.select(all_options[all_options.length - 1])\n    .attr(\"selected\", \"selected\");\n\n  form_select.on(\"change\", change);\n\n  paths = androgs;\n  shown_paths = paths;\n});\n\nfunction change() {\n  var n_lines = d3.select(\"#form_select\").property(\"value\");\n  shown_paths = paths.slice(0, n_lines);\n\n  var parent_g = svg.select(\".androgs\");\n\n  var rendered_paths = parent_g.selectAll(\"path\")\n    .data(shown_paths);\n\n  rendered_paths.exit().remove();\n\n  rendered_paths.enter().append(\"path\")\n      .attr(\"d\", function(d) { d.line = this; return line(d.values); });\n}\n\nfunction mousemoved() {\n  d3.select(\".androg--hover\").classed(\"androg--hover\", false);\n\n  var m = d3.mouse(this),\n      min_path_index = 0;\n  for (var i = 0; i < shown_paths.length; i++) {\n    shown_paths[i].distance = closestPoint(shown_paths[i].line, m);\n    if (shown_paths[i].distance.distance < shown_paths[min_path_index].distance.distance) {\n      min_path_index = i;\n    }\n  };\n  \n  var min_path = shown_paths[min_path_index];\n  d3.select(min_path.line).classed(\"androg--hover\", true);\n  //min_path.line.parentNode.appendChild(min_path.line);\n  focus.attr(\"transform\", \"translate(\" + min_path.distance[0] + \",\" + min_path.distance[1] + \")\");\n  focus.select(\"text\").text(min_path.name);\n}\n\nfunction removedStartingZeroes(d) {\n  var zero_counter = 0;\n  var j = 0;\n  while (j < d.values.length) {\n    if (d.values[j].value != 0.0) {\n      break;\n    }\n    j++;\n    zero_counter++;\n  }\n  min_datestr = 'Jan 1 ' + (1880 + zero_counter).toString();\n  max_datestr = 'Jan 1 ' + \"2013\";\n  x.domain([new Date(min_datestr), new Date(max_datestr)]);\n  return line(d.values.slice(zero_counter, d.values.length)); \n}\n\nfunction closestPoint(pathNode, point) {\n  var pathLength = pathNode.getTotalLength(),\n      precision = pathLength / pathNode.pathSegList.numberOfItems * .5,\n      best,\n      bestLength,\n      bestDistance = Infinity;\n\n  // linear scan for coarse approximation\n  for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n    if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n      best = scan, bestLength = scanLength, bestDistance = scanDistance;\n    }\n  }\n\n  // binary search for precise estimate\n  precision *= .5;\n  while (precision > .5) {\n    var before,\n        after,\n        beforeLength,\n        afterLength,\n        beforeDistance,\n        afterDistance;\n    if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n      best = before, bestLength = beforeLength, bestDistance = beforeDistance;\n    } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n      best = after, bestLength = afterLength, bestDistance = afterDistance;\n    } else {\n      precision *= .5;\n    }\n  }\n\n  best = [best.x, best.y];\n  best.distance = Math.sqrt(bestDistance);\n  return best;\n\n  function distance2(p) {\n    var dx = p.x - point[0],\n        dy = p.y - point[1];\n    return dx * dx + dy * dy;\n  }\n}\n\nfunction type(d, i) {\n  if (!i) years = Object.keys(d).map(yearFormat.parse).filter(Number);\n  var androg = {\n    name: d.name.replace(/ (msa|necta div|met necta|met div)$/i, \"\"),\n    values: null\n  };\n  androg.values = years.map(function(m) {\n    return {\n      androg: androg,\n      date: m,\n      value: d[yearFormat(m)]\n    };\n  });\n  return androg;\n}\n\n</script>", "description": "Point Tracking for Non-Linear Lines: II", "created_at": "2015-03-17T01:04:07Z", "updated_at": "2016-02-03T17:59:43Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category20", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max", "d3.svg.axis", "d3.selectAll", "d3.mouse"], "readme": "### What This Shows\nUsing data from the [US Census](http://www.ssa.gov/oact/babynames/limits.html), this visualization displays popular names that have historically been androgynous.\n\n### Technical\nControl points are not intersected by the path for several non-linear interpolations for lines (\"basis\" in this case). Because of this, point tracking for non-linear lines should be calculated from the svg-path rather than from the d3-scales. Mike Bostock has [two](http://bl.ocks.org/mbostock/8027637) [examples](http://bl.ocks.org/mbostock/8027835) showing how to do this with a single path. This gist shows one approach for point tracking with multiple paths. Other approaches are shown [here](http://bl.ocks.org/hwangmoretime/06af5f439f24bf28aec0) and [here](http://bl.ocks.org/hwangmoretime/da8e72b5e680c827d6dd).\n\nThis approach uses on-the-fly closestPoint to select both the line and point to highlight. Each move the mouse requires computing the distance to each point on the chart, thus the noted performance difference for differing number of lines shown. ", "uid": "hwangmoretime_06aa7e108b77745f1f24"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.chart { \n  background: #fff;\n}\n\np {\n  font: 12px helvetica;\n}\n\n\n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2px;\n  shape-rendering: crispEdges;\n}\n\nbutton {\n  position: absolute;\n  right: 50px;\n  top: 10px;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.js\"></script>\n\n\n<div class=\"chart\">\n</div>\n\n<script>\n\nchart(\"data.csv\", \"orange\");\n\nvar datearray = [];\nvar colorrange = [];\n\n\nfunction chart(csvpath, color) {\n\nif (color == \"blue\") {\n  colorrange = [\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"];\n}\nelse if (color == \"pink\") {\n  colorrange = [\"#980043\", \"#DD1C77\", \"#DF65B0\", \"#C994C7\", \"#D4B9DA\", \"#F1EEF6\"];\n}\nelse if (color == \"orange\") {\n  colorrange = [\"#B30000\", \"#E34A33\", \"#FC8D59\", \"#FDBB84\", \"#FDD49E\", \"#FEF0D9\"];\n}\nstrokecolor = colorrange[0];\n\nvar format = d3.time.format(\"%m/%d/%y\");\n\nvar margin = {top: 20, right: 40, bottom: 30, left: 30};\nvar width = document.body.clientWidth - margin.left - margin.right;\nvar height = 400 - margin.top - margin.bottom;\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"remove\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"20\")\n    .style(\"visibility\", \"hidden\")\n    .style(\"top\", \"30px\")\n    .style(\"left\", \"55px\");\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height-10, 0]);\n\nvar z = d3.scale.ordinal()\n    .range(colorrange);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .ticks(d3.time.weeks);\n\nvar yAxis = d3.svg.axis()\n    .scale(y);\n\nvar yAxisr = d3.svg.axis()\n    .scale(y);\n\nvar stack = d3.layout.stack()\n    .offset(\"silhouette\")\n    .values(function(d) { return d.values; })\n    .x(function(d) { return d.date; })\n    .y(function(d) { return d.value; });\n\nvar nest = d3.nest()\n    .key(function(d) { return d.key; });\n\nvar area = d3.svg.area()\n    .interpolate(\"cardinal\")\n    .x(function(d) { return x(d.date); })\n    .y0(function(d) { return y(d.y0); })\n    .y1(function(d) { return y(d.y0 + d.y); });\n\nvar svg = d3.select(\".chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar graph = d3.csv(csvpath, function(data) {\n  data.forEach(function(d) {\n    d.date = format.parse(d.date);\n    d.value = +d.value;\n  });\n\n  var layers = stack(nest.entries(data));\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.y0 + d.y; })]);\n\n  svg.selectAll(\".layer\")\n      .data(layers)\n    .enter().append(\"path\")\n      .attr(\"class\", \"layer\")\n      .attr(\"d\", function(d) { return area(d.values); })\n      .style(\"fill\", function(d, i) { return z(i); });\n\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + width + \", 0)\")\n      .call(yAxis.orient(\"right\"));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis.orient(\"left\"));\n\n  svg.selectAll(\".layer\")\n    .attr(\"opacity\", 1)\n    .on(\"mouseover\", function(d, i) {\n      svg.selectAll(\".layer\").transition()\n      .duration(250)\n      .attr(\"opacity\", function(d, j) {\n        return j != i ? 0.6 : 1;\n    })})\n\n    .on(\"mousemove\", function(d, i) {\n      mousex = d3.mouse(this);\n      mousex = mousex[0];\n      var invertedx = x.invert(mousex);\n      invertedx = invertedx.getMonth() + invertedx.getDate();\n      var selected = (d.values);\n      for (var k = 0; k < selected.length; k++) {\n        datearray[k] = selected[k].date\n        datearray[k] = datearray[k].getMonth() + datearray[k].getDate();\n      }\n\n      mousedate = datearray.indexOf(invertedx);\n      pro = d.values[mousedate].value;\n\n      d3.select(this)\n      .classed(\"hover\", true)\n      .attr(\"stroke\", strokecolor)\n      .attr(\"stroke-width\", \"0.5px\"), \n      tooltip.html( \"<p>\" + d.key + \"<br>\" + pro + \"</p>\" ).style(\"visibility\", \"visible\");\n      \n    })\n    .on(\"mouseout\", function(d, i) {\n     svg.selectAll(\".layer\")\n      .transition()\n      .duration(250)\n      .attr(\"opacity\", \"1\");\n      d3.select(this)\n      .classed(\"hover\", false)\n      .attr(\"stroke-width\", \"0px\"), tooltip.html( \"<p>\" + d.key + \"<br>\" + pro + \"</p>\" ).style(\"visibility\", \"hidden\");\n  })\n    \n  var vertical = d3.select(\".chart\")\n        .append(\"div\")\n        .attr(\"class\", \"remove\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"19\")\n        .style(\"width\", \"1px\")\n        .style(\"height\", \"380px\")\n        .style(\"top\", \"10px\")\n        .style(\"bottom\", \"30px\")\n        .style(\"left\", \"0px\")\n        .style(\"background\", \"#fff\");\n\n  d3.select(\".chart\")\n      .on(\"mousemove\", function(){  \n         mousex = d3.mouse(this);\n         mousex = mousex[0] + 5;\n         vertical.style(\"left\", mousex + \"px\" )})\n      .on(\"mouseover\", function(){  \n         mousex = d3.mouse(this);\n         mousex = mousex[0] + 5;\n         vertical.style(\"left\", mousex + \"px\")});\n});\n}\n</script>", "description": "D3 Interactive Streamgraph", "created_at": "2013-01-25T02:15:26Z", "updated_at": "2016-06-01T11:21:37Z", "api": ["d3.time.format", "d3.select", "d3.time.scale", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.layout.stack", "d3.nest", "d3.svg.area", "d3.csv", "d3.extent", "d3.max", "d3.mouse"], "readme": "", "uid": "WillTurman_4631136"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.point {\n  fill: #2f225d;\n  stroke: #afa2dc;\n}\n\n.selected {\n  fill: #afa2dc;\n  stroke: #2f225d;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\np {\n  font: 12px sans-serif;\n  margin: 0 0 2px 0;\n  padding: 0;\n}\n\n.clear-button {\n  font: 14px sans-serif;\n  cursor: pointer;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\nd3.helper = {};\n\nd3.helper.tooltip = function(){\n    var tooltipDiv;\n    var bodyNode = d3.select('body').node();\n\n    function tooltip(selection){\n\n        selection.on('mouseover.tooltip', function(pD, pI){\n            // Clean up lost tooltips\n            d3.select('body').selectAll('div.tooltip').remove();\n            // Append tooltip\n            tooltipDiv = d3.select('body')\n                           .append('div')\n                           .attr('class', 'tooltip')\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px',\n                'background-color': '#d8d5e4',\n                width: '65px',\n                height: '30px',\n                padding: '5px',\n                position: 'absolute',\n                'z-index': 1001,\n                'box-shadow': '0 1px 2px 0 #656565'\n            });\n\n            var first_line = '<p>X-Value: ' + pD.index + '</p>'\n            var second_line = '<p>Y-Value: ' + pD.value + '</p>'\n\n            tooltipDiv.html(first_line + second_line)\n        })\n        .on('mousemove.tooltip', function(pD, pI){\n            // Move tooltip\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px'\n            });\n        })\n        .on('mouseout.tooltip', function(pD, pI){\n            // Remove tooltip\n            tooltipDiv.remove();\n        });\n\n    }\n\n    tooltip.attr = function(_x){\n        if (!arguments.length) return attrs;\n        attrs = _x;\n        return this;\n    };\n\n    tooltip.style = function(_x){\n        if (!arguments.length) return styles;\n        styles = _x;\n        return this;\n    };\n\n    return tooltip;\n};\n\nvar data = [];\nvar values = [];\nfor (var i = 2; i <= 50; i++) {\n    var val = Math.floor(Math.random() * (50 - 5 + 1) + 5);\n    data.push({index: i, value: val});\n    values.push(val);\n}\n\nvar margin = {top: 20, right: 20, bottom: 60, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([0, 50]);\n\nvar y = d3.scale.linear()\n    .range([height, 0])\n    .domain([0, d3.max(values) + 5]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(11);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\npoints = svg.selectAll(\".point\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"class\", \"point\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"r\", function(d){return Math.floor(Math.random() * (20 - 5 + 1) + 5);})\n    .attr(\"cx\", function(d) { return x(d.index); })\n    .attr(\"cy\", function(d) { return y(d.value); })\n    .call(d3.helper.tooltip());\n\n</script>", "description": "D3 Brush and Tooltip II", "created_at": "2013-11-24T17:47:06Z", "updated_at": "2015-12-29T06:38:58Z", "api": ["d3.select", "d3.mouse", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.helper.tooltip"], "readme": "Example for [Cooperative Brushing and Tooltips in D3](http://wrobstory.github.io/2013/11/D3-brush-and-tooltip.html). \n\nScatter chart with only tooltips, no brush layer. ", "uid": "wrobstory_7630011"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Constrained Zoom by Rectangle</title>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.1\"></script>\n<style>\n\nbody {\n  font-family: sans-serif;\n}\n\n.noselect {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\nsvg {\n  font: 9pt sans-serif;\n  shape-rendering: crispEdges;\n}\n\nrect {\n  fill: #ddd;\n}\n\nrect.zoom {\n  stroke: steelblue;\n  fill: #bbb;\n  fill-opacity: 0.5;\n}\n\n.axis path, .axis line {\n  fill: none;\n  stroke: #fff;\n}\n\n</style>\n<p><label for=\"zoom-rect\"><input type=\"checkbox\" id=\"zoom-rect\"> zoom by rectangle</label>\n<script>\n\nvar margin = {top: 0, right: 12, bottom: 20, left: 60},\n    width = 960 - margin.left - margin.right,\n    height = 430 - margin.top - margin.bottom;\n\nvar xmin = 0,\n    xmax = 500,\n    ymin = 0,\n    ymax = 1000;\n\nvar x = d3.scale.linear()\n    .domain([xmin+.5, xmax+.5])\n    .range([0.5, width+.5]);\n\nvar y = d3.scale.linear()\n    .domain([ymin+.5, ymax+.5])\n    .range([height+.5, 0.5]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tickSize(-height);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(5)\n    .tickSize(-width); // tickLine == gridline\n\nvar refresh = function() {\n  var reset_s = 0;\n  if ((x.domain()[1] - x.domain()[0]) >= (xmax - xmin)) {\n    zoom.x(x.domain([xmin, xmax]));\n    reset_s = 1;\n  }\n  if ((y.domain()[1] - y.domain()[0]) >= (ymax - ymin)) {\n    zoom.y(y.domain([ymin, ymax]));\n    reset_s += 1;\n  }\n  if (reset_s == 2) { // Both axes are full resolution. Reset.\n    zoom.scale(1);\n    zoom.translate([0,0]);\n  }\n  else {\n    if (x.domain()[0] < xmin) {\n      x.domain([xmin, x.domain()[1] - x.domain()[0] + xmin]);\n    }\n    if (x.domain()[1] > xmax) {\n      var xdom0 = x.domain()[0] - x.domain()[1] + xmax;\n      x.domain([xdom0, xmax]);\n    }\n    if (y.domain()[0] < ymin) {\n      y.domain([ymin, y.domain()[1] - y.domain()[0] + ymin]);\n    }\n    if (y.domain()[1] > ymax) {\n      var ydom0 = y.domain()[0] - y.domain()[1] + ymax;\n      y.domain([ydom0, ymax]);\n    }\n  }\n  svg.select(\".x.axis\").call(xAxis);\n  svg.select(\".y.axis\").call(yAxis);\n}\n\nvar zoom = d3.behavior.zoom().x(x).y(y).scaleExtent([.001, Infinity]).on(\"zoom\", refresh);\n\nvar zoomRect = false;\n\nd3.select(\"#zoom-rect\").on(\"change\", function() {\n      zoomRect = this.checked;\n    });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    .call(zoom)\n  .append(\"g\")\n    .on(\"mousedown\", function() {\n      if (!zoomRect) return;\n      var e = this,\n          origin = d3.mouse(e),\n          rect = svg.append(\"rect\").attr(\"class\", \"zoom\");\n      d3.select(\"body\").classed(\"noselect\", true);\n      origin[0] = Math.max(0, Math.min(width, origin[0]));\n      origin[1] = Math.max(0, Math.min(height, origin[1]));\n      d3.select(window)\n          .on(\"mousemove.zoomRect\", function() {\n            var m = d3.mouse(e);\n            m[0] = Math.max(0, Math.min(width, m[0]));\n            m[1] = Math.max(0, Math.min(height, m[1]));\n            rect.attr(\"x\", Math.min(origin[0], m[0]))\n                .attr(\"y\", Math.min(origin[1], m[1]))\n                .attr(\"width\", Math.abs(m[0] - origin[0]))\n                .attr(\"height\", Math.abs(m[1] - origin[1]));\n          })\n          .on(\"mouseup.zoomRect\", function() {\n            d3.select(window).on(\"mousemove.zoomRect\", null).on(\"mouseup.zoomRect\", null);\n            d3.select(\"body\").classed(\"noselect\", false);\n            var m = d3.mouse(e);\n            m[0] = Math.max(0, Math.min(width, m[0]));\n            m[1] = Math.max(0, Math.min(height, m[1]));\n            if (m[0] !== origin[0] && m[1] !== origin[1]) {\n              zoom.x(x.domain([origin[0], m[0]].map(x.invert).sort(function(a,b) { return a - b;})))\n                  .y(y.domain([origin[1], m[1]].map(y.invert).sort(function(a,b) { return a - b;})));\n            }\n            rect.remove();\n            refresh();\n          }, true);\n      d3.event.stopPropagation();\n    });\n\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n</script>", "description": "D3 Bounded Zoom", "created_at": "2013-05-29T15:37:19Z", "updated_at": "2016-04-13T19:22:54Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.behavior.zoom", "d3.select", "d3.mouse", "d3.event.stopPropagation"], "readme": "This D3 example demonstrates using the *zoom* event and limits the bounds of the zooming\nto a specified domain. It is largely based on http://bl.ocks.org/jasondavies/3689931,\nbut with bounds. Most of this bounding is done in the *refresh* function. You need to zoom in before you can pan or zoom out.", "uid": "tommct_5671250"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody { font: 12px sans-serif; }\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: grey;\n  stroke-width: 1;\n  shape-rendering: crispEdges;\n}\n\n.dot { stroke: none; }\n\n.grid .tick { stroke: lightgrey; opacity: 0.7; }\n.grid path { stroke-width: 0;}\n\npath { \n    stroke: #1f78b4;\n    stroke-width: 1.5;\n    fill: none;\n}\n\ntext.shadow {\n    stroke: white;\n    stroke-width: 2.5px;\n    opacity: 0.9;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\n// functions to parse the date / time formats\nparseDate = d3.time.format(\"%Y-%m-%d\").parse;\nparseTime = d3.time.format(\"%H:%M:%S\").parse;\nformatDate = d3.time.format(\"%d-%b\"),\nformatTime = d3.time.format(\"%H:%M\"),\nbisectDate = d3.bisector(function(d) { return d.date; }).left; \n\n// Load the raw data\nd3.json(\"downloads.json\", function(error, events) {\n\n    // parse and format all the event data\n    events.forEach(function(d) {\n        d.dtg = d.dtg.slice(0,-4)+'0:00'; // get the 10 minute block\n        dtgSplit = d.dtg.split(\" \");      // split on the space\n        d.date = dtgSplit[0];             // get the date seperatly\n        d.time = dtgSplit[1];             // format the time\n        d.number_downloaded = 1;          // Number of downloads\n    });\n\n    // get the scatterplot data and nest the data by date/time\n    var data = d3.nest()\n        .key(function(d) { return d.dtg;})\n        .rollup(function(d) {\n            return d3.sum(d,function(g) {return g.number_downloaded; });\n            })\n        .entries(events);\n\n    // format the date/time data\n    data.forEach(function(d) {\n        d.dtg = d.key;                   // get the 10 minute block\n        dtgSplit = d.dtg.split(\" \");     // split on the space\n        d.date = parseDate(dtgSplit[0]); // get the date seperatly\n        d.time = parseTime(dtgSplit[1]); // format the time\n        d.number_downloaded = d.values;  // Number of downloads\n    });\n\n    // nest the data by date for the daily graph\n    var dataDate = d3.nest()\n        .key(function(d) { return d.date;})\n        .rollup(function(d) {\n            return d3.sum(d,function(g) {return g.number_downloaded; });\n            })\n        .entries(events);\n\n    // format the date data\n    dataDate.forEach(function(d) {\n        d.date = parseDate(d.key); // format the date\n        d.close = d.values;        // Number of downloads\n    });\n\n    // nest the data by 10 minute intervals for the time graph\n    var dataTime = d3.nest()\n        .key(function(d) { return d.time;})\n        .sortKeys(d3.ascending)\n        .rollup(function(d) {\n            return d3.sum(d,function(g) {return g.number_downloaded; });\n            })\n        .entries(events);\n\n    // format the time data\n    dataTime.forEach(function(d) {\n        d.time = d.key;             // get the 10 minute block\n        d.time = parseTime(d.time); // get the date seperatly\n        d.close = d.values;         // Number of downloads\n    });\n\n    // Get number of days in date range to calculate scatterplotWidth\n    var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds\n    var dateStart = d3.min(data, function(d) { return d.date; });\n    var dateFinish = d3.max(data, function(d) { return d.date; });\n    var numberDays = Math.round(Math.abs((dateStart.getTime() -\n                               dateFinish.getTime())/(oneDay)));\n\n    var margin = {top: 20, right: 20, bottom: 20, left: 50},\n        scatterplotHeight = 520,\n        scatterplotWidth = numberDays * 1.5,\n        dateGraphHeight = 220,\n        timeGraphWidth = 220;\n\n    // Set the dimensions of the canvas / graph\n    var height = scatterplotHeight + dateGraphHeight,\n        width = scatterplotWidth + timeGraphWidth;\n\n    // ************* draw the scatterplot ****************\n\n    var formatDay_Time = d3.time.format(\"%H:%M\");     // tooltip time\n    var formatWeek_Year = d3.time.format(\"%d-%m-%Y\"); // tooltip date\n\n    var x = d3.time.scale().range([0, scatterplotWidth]);\n    var y = d3.time.scale().range([0, scatterplotHeight]);\n\n    var xAxis = d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\")\n        .ticks(7);\n\n    var yAxis = d3.svg.axis()\n        .scale(y)\n        .orient(\"right\")\n        .ticks(12,0,0)\n        .tickFormat(d3.time.format(\"%H:%M\"));\n\n    var svg = d3.select(\"body\")\n        .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\"\n                                            + margin.top + \")\");\n\n    // State the functions for the grid\n    function make_x_axis() {\n        return d3.svg.axis()\n          .scale(x)\n          .orient(\"bottom\")\n          .ticks(12)\n    }\n\n    // State the functions for the grid\n    function make_y_axis() {\n        return d3.svg.axis()\n          .scale(y)\n          .orient(\"right\")\n          .ticks(8)\n    }\n            \n    // Set the domains\n    y.domain([new Date(1899, 12, 02, 0, 0, 0), \n              new Date(1899, 12, 01, 0, 0, 1)]);\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n\n    // tickSize: Get or set the size of major, minor and end ticks\n    svg.append(\"g\").classed(\"grid x_grid\", true)\n        .attr(\"transform\", \"translate(0,\" \n            + (scatterplotHeight + dateGraphHeight) + \")\")\n        .style(\"stroke-dasharray\", (\"3, 3, 3\"))\n        .call(make_x_axis()\n            .tickSize(-scatterplotHeight - dateGraphHeight, 0, 0)\n            .tickFormat(\"\"))\n\n    // tickSize: Get or set the size of major, minor and end ticks\n    svg.append(\"g\").classed(\"grid y_grid\", true)\n        .attr(\"transform\", \"translate(0,0)\")\n        .style(\"stroke-dasharray\", (\"3, 3, 3\"))\n        .call(make_y_axis()\n            .tickSize(+scatterplotWidth+timeGraphWidth, 0, 0)\n            .tickFormat(\"\"))\n\n    // Draw the Axes and the tick labels\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + scatterplotHeight + \")\")\n        .call(xAxis)\n      .selectAll(\"text\")\n        .style(\"text-anchor\", \"middle\");\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(\"  + scatterplotWidth +  \",0)\")\n        .call(yAxis)\n      .selectAll(\"text\");\n\n    // draw the plotted circles\n    svg.selectAll(\".dot\")\n        .data(data)\n      .enter().append(\"circle\")\n        .attr(\"class\", \"dot\")\n        .attr(\"r\", function(d) { return d.number_downloaded*1.5; })\n        .style(\"opacity\", 0.3)\n        .style(\"fill\", \"#e31a1c\" )\n        .attr(\"cx\", function(d) { return x(d.date); })\n        .attr(\"cy\", function(d) { return y(d.time); })\n            ;    \n\n    // ************* draw the date graph *****************\n    // Set the ranges\n    var xDate = d3.time.scale().range([0, scatterplotWidth]);\n    var yDate = d3.scale.linear().range([dateGraphHeight, 0]);\n\n    var yAxisDate = d3.svg.axis().scale(yDate)\n        .orient(\"right\").ticks(5);\n\n    // Define the line\n    var valueline = d3.svg.line()\n        .interpolate(\"basis\")\n        .x(function(d) { return xDate(d.date); })\n        .y(function(d) { return yDate(d.close); } );  \n\n    // Scale the range of the data\n    xDate.domain(d3.extent(dataDate, function(d) { return d.date; }));\n    yDate.domain([0,d3.max(dataDate, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"transform\", \"translate(0,\" + scatterplotHeight + \")\")\n        .attr(\"d\", valueline(dataDate));\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(\" \n            + scatterplotWidth +  \",\" + scatterplotHeight + \")\")\n        .call(yAxisDate);\n\n    // ************* draw the time graph **************\n    // Set the ranges\n    var yTime = d3.time.scale().range([0, scatterplotHeight]);\n    var xTime = d3.scale.linear().range([0, timeGraphWidth]);\n\n    // Define the axes\n    var xAxisTime = d3.svg.axis().scale(xTime)\n        .orient(\"bottom\").ticks(5);\n\n    // Define the line\n    var valuelineTime = d3.svg.line()\n        .x(function(d) { return xTime(d.close); })\n        .y(function(d) { return yTime(d.time); });\n        \n    // Scale the range of the data\n    yTime.domain([new Date(1899, 12, 02, 0, 0, 0), \n                  new Date(1899, 12, 01, 0, 0, 1)]);\n    xTime.domain([1e-6, d3.max(dataTime, \n        function(d) { return d.close; }\n        )]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"transform\", \"translate(\" + scatterplotWidth + \",0)\")\n        .attr(\"d\", valuelineTime(dataTime));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(\" \n            + scatterplotWidth +  \",\" + scatterplotHeight + \")\")\n        .call(xAxisTime);\n\n    // *********** place the mouse movement information **************\n    var focus = svg.append(\"g\") \n        .style(\"display\", \"none\");\n\n    // append the x line\n    focus.append(\"line\")\n        .attr(\"class\", \"x\")\n        .style(\"stroke\", \"#33a02c\")\n        .style(\"stroke-dasharray\", \"3,3\")\n        .style(\"opacity\", 1)\n        .style(\"shape-rendering\", \"crispEdges\");\n\n    // append the y line\n    focus.append(\"line\")\n        .attr(\"class\", \"y\")\n        .style(\"stroke\", \"#33a02c\")\n        .style(\"stroke-dasharray\", \"3,3\")\n        .style(\"opacity\", 1)\n        .style(\"shape-rendering\", \"crispEdges\");\n\n    // place the value at the intersection\n    focus.append(\"text\")\n        .attr(\"class\", \"y1\")\n        .style(\"stroke\", \"white\")\n        .style(\"stroke-width\", \"3.5px\")\n        .style(\"opacity\", 0.8)\n        .attr(\"dx\", 8)\n        .attr(\"dy\", \"-.3em\");\n    focus.append(\"text\")\n        .attr(\"class\", \"y2\")\n        .attr(\"dx\", 8)\n        .attr(\"dy\", \"-.3em\");\n\n    // place the date at the intersection\n    focus.append(\"text\")\n        .attr(\"class\", \"y3\")\n        .style(\"stroke\", \"white\")\n        .style(\"stroke-width\", \"3.5px\")\n        .style(\"opacity\", 0.8)\n        .attr(\"dx\", 8)\n        .attr(\"dy\", \"1em\");\n    focus.append(\"text\")\n        .attr(\"class\", \"y4\")\n        .attr(\"dx\", 8)\n        .attr(\"dy\", \"1em\");\n\n    // place the Daily Downloads dynamic text\n    focus.append(\"text\")\n        .attr(\"class\", \"y5\")\n        .style(\"stroke\", \"white\")\n        .style(\"stroke-width\", \"3.5px\")\n        .style(\"opacity\", 0.8)\n        .attr(\"dy\", \"1em\");\n    focus.append(\"text\")\n        .attr(\"class\", \"y6\")\n        .attr(\"dy\", \"1em\");\n\n    // place the time Downloads dynamic text\n    focus.append(\"text\")\n        .attr(\"class\", \"y7\")\n        .style(\"stroke\", \"white\")\n        .style(\"stroke-width\", \"3.5px\")\n        .style(\"opacity\", 0.8)\n        .attr(\"dy\", \".35em\");\n    focus.append(\"text\")\n        .attr(\"class\", \"y8\")\n        .attr(\"dy\", \".35em\");\n\n    // append the rectangle to capture mouse\n    svg.append(\"rect\")\n        .attr(\"width\", scatterplotWidth)\n        .attr(\"height\", scatterplotHeight)\n        .style(\"fill\", \"none\")\n        .style(\"pointer-events\", \"all\")\n        .on(\"mouseover\", function() { focus.style(\"display\", null); })\n        .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n        .on(\"mousemove\", mousemove);\n\n    // The conversion ratio to change x position of cursor to\n    // the index of the date array\n    var convertDate =  dataDate.length/scatterplotWidth;\n    var convertTime =  dataTime.length/scatterplotHeight;\n\n    // interactive mouse function\n    function mousemove() {\n        var xpos = d3.mouse(this)[0],\n            x0 = x.invert(xpos),\n            y0 = d3.mouse(this)[1],\n            y1 = y.invert(y0),\n            date1 = d3.mouse(this)[0];\n\n        // Place the intersection date text\n        focus.select(\"text.y1\")\n            .attr(\"transform\",\n                  \"translate(\" + (date1 - 50) + \",\" + (y0+20) + \")\")\n            .text(formatDate(x0));\n        focus.select(\"text.y2\")\n            .attr(\"transform\",\n                  \"translate(\" + (date1 - 50) + \",\" + (y0+20) + \")\")\n            .text(formatDate(x0));\n\n        // Place the intersection time text\n        focus.select(\"text.y3\")\n            .attr(\"transform\",\n                  \"translate(\" + (date1) + \",\" + (y0-15) + \")\")\n            .text(formatTime(y1).substring(0,4)+'0');\n        focus.select(\"text.y4\")\n            .attr(\"transform\",\n                  \"translate(\" + (date1) + \",\" + (y0-15) + \")\")\n            .text(formatTime(y1).substring(0,4)+'0');\n\n        // Place the dynamic daily downloads text\n        focus.select(\"text.y5\")\n            .attr(\"transform\",\n                  \"translate(\"\n                      + (date1) + \",\"\n                      + (scatterplotHeight+dateGraphHeight) + \")\")\n            .attr(\"text-anchor\", \"middle\")\n            .text(dataDate[parseInt(xpos*convertDate)].close);\n        focus.select(\"text.y6\")\n            .attr(\"transform\",\n                  \"translate(\"\n                      + (date1) + \",\"\n                      + (scatterplotHeight+dateGraphHeight) + \")\")\n            .attr(\"text-anchor\", \"middle\")\n            .text(dataDate[parseInt(xpos*convertDate)].close);\n\n        // Place the dynamic time downloads text\n        focus.select(\"text.y7\")\n            .attr(\"transform\",\n                  \"translate(\"\n                      + (scatterplotWidth+timeGraphWidth) + \",\"\n                      + (y0) + \")\")\n            .attr(\"text-anchor\", \"start\")\n            .text(dataTime[144-parseInt(y0*convertTime)].close);\n        focus.select(\"text.y8\")\n            .attr(\"transform\",\n                  \"translate(\"\n                      + (scatterplotWidth+timeGraphWidth) + \",\"\n                      + (y0) + \")\")\n            .attr(\"text-anchor\", \"start\")\n            .text(dataTime[144-parseInt(y0*convertTime)].close);\n\n\n        focus.select(\".x\")\n            .attr(\"transform\",\n                  \"translate(\" + date1 + \",\" + (0) + \")\")\n            .attr(\"y2\", height );\n\n        focus.select(\".y\")\n            .attr(\"transform\",\n                  \"translate(0,\" + y0 + \")\")\n            .attr(\"x2\", width );\n    }\n\n    // axis labels\n    svg.append(\"text\")\n        .attr(\"transform\", \"translate(\"\n            + scatterplotWidth +  \",\"\n            + scatterplotHeight + \"), rotate(-90)\")\n        .attr(\"y\", 25)\n        .attr(\"x\",-dateGraphHeight )\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"start\")\n        .attr(\"class\", \"shadow\")\n        .text(\"Daily Downloads\");\n        \n    svg.append(\"text\")\n        .attr(\"transform\", \"translate(\"\n            + scatterplotWidth +  \",\"\n            + scatterplotHeight + \"), rotate(-90)\")\n        .attr(\"y\", 25)\n        .attr(\"x\",-dateGraphHeight )\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"start\")\n        .text(\"Daily Downloads\");\n\n    svg.append(\"text\")\n        .attr(\"transform\", \"translate(\"\n            + scatterplotWidth +  \",\"\n            + scatterplotHeight + \")\")\n        .attr(\"y\", 20)\n        .attr(\"x\",timeGraphWidth )\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"class\", \"shadow\")\n        .text(\"Downloads in 10 Minute Blocks\");\n        \n    svg.append(\"text\")\n        .attr(\"transform\", \"translate(\"\n            + scatterplotWidth +  \",\"\n            + scatterplotHeight + \")\")\n        .attr(\"y\", 20)\n        .attr(\"x\",timeGraphWidth )\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"end\")\n        .text(\"Downloads in 10 Minute Blocks\");\n\n});\n\n</script>\n\n</body>\n", "description": "Leanpub Book Download Scatterplot", "created_at": "2015-09-02T03:54:54Z", "updated_at": "2015-09-02T03:54:54Z", "api": ["d3.time.format", "d3.bisector", "d3.json", "d3.nest", "d3.sum", "d3.min", "d3.max", "d3.time.scale", "d3.svg.axis", "d3.select", "d3.extent", "d3.scale.linear", "d3.svg.line", "d3.mouse"], "readme": "The graph above shows each instance that the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks) was download from January 2013 to March 2015. It is best viewed in full screen by [opening in a new window](http://bl.ocks.org/d3noob/raw/a0cbcddc6bf0eb9569fe/).\n\nThe main scatterplot has the day that the download occured on the X axis and the time (UTC) that the download occured on the Y axis. The time of the download is grouped into 10 minute blocks and where more than one download occured, the radius of the corresponding point is increased.\n\nThe line graph at the bottom shows the variation of numbers of downloads by day and the line graph on the right shows the variation of downloads by time of day (in 10 minute blocks).\n\nMoving the mouse over the scatterplot will show the time and date of the point and the data is extrapolated onto the line graphs to show the corresponding number of downloads for the day and time.\n\nThere is an explanation of the code available in [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks) or in the blog post [here](http://www.d3noob.org/2015/04/exploring-event-data-by-combination.html).", "uid": "samselikoff_1de23ed13138c7d9699e"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody { font: 12px sans-serif; }\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: grey;\n  stroke-width: 1;\n  shape-rendering: crispEdges;\n}\n\n.dot { stroke: none; }\n\n.grid .tick { stroke: lightgrey; opacity: 0.7; }\n.grid path { stroke-width: 0;}\n\npath { \n    stroke: #1f78b4;\n    stroke-width: 1.5;\n    fill: none;\n}\n\ntext.shadow {\n    stroke: white;\n    stroke-width: 2.5px;\n    opacity: 0.9;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\n// functions to parse the date / time formats\nparseDate = d3.time.format(\"%Y-%m-%d\").parse;\nparseTime = d3.time.format(\"%H:%M:%S\").parse;\nformatDate = d3.time.format(\"%d-%b\"),\nformatTime = d3.time.format(\"%H:%M\"),\nbisectDate = d3.bisector(function(d) { return d.date; }).left; \n\n// Load the raw data\nd3.json(\"downloads.json\", function(error, events) {\n\n    // parse and format all the event data\n    events.forEach(function(d) {\n        d.dtg = d.dtg.slice(0,-4)+'0:00'; // get the 10 minute block\n        dtgSplit = d.dtg.split(\" \");      // split on the space\n        d.date = dtgSplit[0];             // get the date seperatly\n        d.time = dtgSplit[1];             // format the time\n        d.number_downloaded = 1;          // Number of downloads\n    });\n\n    // get the scatterplot data and nest the data by date/time\n    var data = d3.nest()\n        .key(function(d) { return d.dtg;})\n        .rollup(function(d) {\n            return d3.sum(d,function(g) {return g.number_downloaded; });\n            })\n        .entries(events);\n\n    // format the date/time data\n    data.forEach(function(d) {\n        d.dtg = d.key;                   // get the 10 minute block\n        dtgSplit = d.dtg.split(\" \");     // split on the space\n        d.date = parseDate(dtgSplit[0]); // get the date seperatly\n        d.time = parseTime(dtgSplit[1]); // format the time\n        d.number_downloaded = d.values;  // Number of downloads\n    });\n\n    // nest the data by date for the daily graph\n    var dataDate = d3.nest()\n        .key(function(d) { return d.date;})\n        .rollup(function(d) {\n            return d3.sum(d,function(g) {return g.number_downloaded; });\n            })\n        .entries(events);\n\n    // format the date data\n    dataDate.forEach(function(d) {\n        d.date = parseDate(d.key); // format the date\n        d.close = d.values;        // Number of downloads\n    });\n\n    // nest the data by 10 minute intervals for the time graph\n    var dataTime = d3.nest()\n        .key(function(d) { return d.time;})\n        .sortKeys(d3.ascending)\n        .rollup(function(d) {\n            return d3.sum(d,function(g) {return g.number_downloaded; });\n            })\n        .entries(events);\n\n    // format the time data\n    dataTime.forEach(function(d) {\n        d.time = d.key;             // get the 10 minute block\n        d.time = parseTime(d.time); // get the date seperatly\n        d.close = d.values;         // Number of downloads\n    });\n\n    // Get number of days in date range to calculate scatterplotWidth\n    var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds\n    var dateStart = d3.min(data, function(d) { return d.date; });\n    var dateFinish = d3.max(data, function(d) { return d.date; });\n    var numberDays = Math.round(Math.abs((dateStart.getTime() -\n                               dateFinish.getTime())/(oneDay)));\n\n    var margin = {top: 20, right: 20, bottom: 20, left: 50},\n        scatterplotHeight = 520,\n        scatterplotWidth = numberDays * 1.5,\n        dateGraphHeight = 220,\n        timeGraphWidth = 220;\n\n    // Set the dimensions of the canvas / graph\n    var height = scatterplotHeight + dateGraphHeight,\n        width = scatterplotWidth + timeGraphWidth;\n\n    // ************* draw the scatterplot ****************\n\n    var formatDay_Time = d3.time.format(\"%H:%M\");     // tooltip time\n    var formatWeek_Year = d3.time.format(\"%d-%m-%Y\"); // tooltip date\n\n    var x = d3.time.scale().range([0, scatterplotWidth]);\n    var y = d3.time.scale().range([0, scatterplotHeight]);\n\n    var xAxis = d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\")\n        .ticks(7);\n\n    var yAxis = d3.svg.axis()\n        .scale(y)\n        .orient(\"right\")\n        .ticks(12,0,0)\n        .tickFormat(d3.time.format(\"%H:%M\"));\n\n    var svg = d3.select(\"body\")\n        .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\"\n                                            + margin.top + \")\");\n\n    // State the functions for the grid\n    function make_x_axis() {\n        return d3.svg.axis()\n          .scale(x)\n          .orient(\"bottom\")\n          .ticks(12)\n    }\n\n    // State the functions for the grid\n    function make_y_axis() {\n        return d3.svg.axis()\n          .scale(y)\n          .orient(\"right\")\n          .ticks(8)\n    }\n            \n    // Set the domains\n    y.domain([new Date(1899, 12, 02, 0, 0, 0), \n              new Date(1899, 12, 01, 0, 0, 1)]);\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n\n    // tickSize: Get or set the size of major, minor and end ticks\n    svg.append(\"g\").classed(\"grid x_grid\", true)\n        .attr(\"transform\", \"translate(0,\" \n            + (scatterplotHeight + dateGraphHeight) + \")\")\n        .style(\"stroke-dasharray\", (\"3, 3, 3\"))\n        .call(make_x_axis()\n            .tickSize(-scatterplotHeight - dateGraphHeight, 0, 0)\n            .tickFormat(\"\"))\n\n    // tickSize: Get or set the size of major, minor and end ticks\n    svg.append(\"g\").classed(\"grid y_grid\", true)\n        .attr(\"transform\", \"translate(0,0)\")\n        .style(\"stroke-dasharray\", (\"3, 3, 3\"))\n        .call(make_y_axis()\n            .tickSize(+scatterplotWidth+timeGraphWidth, 0, 0)\n            .tickFormat(\"\"))\n\n    // Draw the Axes and the tick labels\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + scatterplotHeight + \")\")\n        .call(xAxis)\n      .selectAll(\"text\")\n        .style(\"text-anchor\", \"middle\");\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(\"  + scatterplotWidth +  \",0)\")\n        .call(yAxis)\n      .selectAll(\"text\");\n\n    // draw the plotted circles\n    svg.selectAll(\".dot\")\n        .data(data)\n      .enter().append(\"circle\")\n        .attr(\"class\", \"dot\")\n        .attr(\"r\", function(d) { return d.number_downloaded*1.5; })\n        .style(\"opacity\", 0.3)\n        .style(\"fill\", \"#e31a1c\" )\n        .attr(\"cx\", function(d) { return x(d.date); })\n        .attr(\"cy\", function(d) { return y(d.time); })\n            ;    \n\n    // ************* draw the date graph *****************\n    // Set the ranges\n    var xDate = d3.time.scale().range([0, scatterplotWidth]);\n    var yDate = d3.scale.linear().range([dateGraphHeight, 0]);\n\n    var yAxisDate = d3.svg.axis().scale(yDate)\n        .orient(\"right\").ticks(5);\n\n    // Define the line\n    var valueline = d3.svg.line()\n        .interpolate(\"basis\")\n        .x(function(d) { return xDate(d.date); })\n        .y(function(d) { return yDate(d.close); } );  \n\n    // Scale the range of the data\n    xDate.domain(d3.extent(dataDate, function(d) { return d.date; }));\n    yDate.domain([0,d3.max(dataDate, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"transform\", \"translate(0,\" + scatterplotHeight + \")\")\n        .attr(\"d\", valueline(dataDate));\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(\" \n            + scatterplotWidth +  \",\" + scatterplotHeight + \")\")\n        .call(yAxisDate);\n\n    // ************* draw the time graph **************\n    // Set the ranges\n    var yTime = d3.time.scale().range([0, scatterplotHeight]);\n    var xTime = d3.scale.linear().range([0, timeGraphWidth]);\n\n    // Define the axes\n    var xAxisTime = d3.svg.axis().scale(xTime)\n        .orient(\"bottom\").ticks(5);\n\n    // Define the line\n    var valuelineTime = d3.svg.line()\n        .x(function(d) { return xTime(d.close); })\n        .y(function(d) { return yTime(d.time); });\n        \n    // Scale the range of the data\n    yTime.domain([new Date(1899, 12, 02, 0, 0, 0), \n                  new Date(1899, 12, 01, 0, 0, 1)]);\n    xTime.domain([1e-6, d3.max(dataTime, \n        function(d) { return d.close; }\n        )]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"transform\", \"translate(\" + scatterplotWidth + \",0)\")\n        .attr(\"d\", valuelineTime(dataTime));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(\" \n            + scatterplotWidth +  \",\" + scatterplotHeight + \")\")\n        .call(xAxisTime);\n\n    // *********** place the mouse movement information **************\n    var focus = svg.append(\"g\") \n        .style(\"display\", \"none\");\n\n    // append the x line\n    focus.append(\"line\")\n        .attr(\"class\", \"x\")\n        .style(\"stroke\", \"#33a02c\")\n        .style(\"stroke-dasharray\", \"3,3\")\n        .style(\"opacity\", 1)\n        .style(\"shape-rendering\", \"crispEdges\");\n\n    // append the y line\n    focus.append(\"line\")\n        .attr(\"class\", \"y\")\n        .style(\"stroke\", \"#33a02c\")\n        .style(\"stroke-dasharray\", \"3,3\")\n        .style(\"opacity\", 1)\n        .style(\"shape-rendering\", \"crispEdges\");\n\n    // place the value at the intersection\n    focus.append(\"text\")\n        .attr(\"class\", \"y1\")\n        .style(\"stroke\", \"white\")\n        .style(\"stroke-width\", \"3.5px\")\n        .style(\"opacity\", 0.8)\n        .attr(\"dx\", 8)\n        .attr(\"dy\", \"-.3em\");\n    focus.append(\"text\")\n        .attr(\"class\", \"y2\")\n        .attr(\"dx\", 8)\n        .attr(\"dy\", \"-.3em\");\n\n    // place the date at the intersection\n    focus.append(\"text\")\n        .attr(\"class\", \"y3\")\n        .style(\"stroke\", \"white\")\n        .style(\"stroke-width\", \"3.5px\")\n        .style(\"opacity\", 0.8)\n        .attr(\"dx\", 8)\n        .attr(\"dy\", \"1em\");\n    focus.append(\"text\")\n        .attr(\"class\", \"y4\")\n        .attr(\"dx\", 8)\n        .attr(\"dy\", \"1em\");\n\n    // place the Daily Downloads dynamic text\n    focus.append(\"text\")\n        .attr(\"class\", \"y5\")\n        .style(\"stroke\", \"white\")\n        .style(\"stroke-width\", \"3.5px\")\n        .style(\"opacity\", 0.8)\n        .attr(\"dy\", \"1em\");\n    focus.append(\"text\")\n        .attr(\"class\", \"y6\")\n        .attr(\"dy\", \"1em\");\n\n    // place the time Downloads dynamic text\n    focus.append(\"text\")\n        .attr(\"class\", \"y7\")\n        .style(\"stroke\", \"white\")\n        .style(\"stroke-width\", \"3.5px\")\n        .style(\"opacity\", 0.8)\n        .attr(\"dy\", \".35em\");\n    focus.append(\"text\")\n        .attr(\"class\", \"y8\")\n        .attr(\"dy\", \".35em\");\n\n    // append the rectangle to capture mouse\n    svg.append(\"rect\")\n        .attr(\"width\", scatterplotWidth)\n        .attr(\"height\", scatterplotHeight)\n        .style(\"fill\", \"none\")\n        .style(\"pointer-events\", \"all\")\n        .on(\"mouseover\", function() { focus.style(\"display\", null); })\n        .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n        .on(\"mousemove\", mousemove);\n\n    // The conversion ratio to change x position of cursor to\n    // the index of the date array\n    var convertDate =  dataDate.length/scatterplotWidth;\n    var convertTime =  dataTime.length/scatterplotHeight;\n\n    // interactive mouse function\n    function mousemove() {\n        var xpos = d3.mouse(this)[0],\n            x0 = x.invert(xpos),\n            y0 = d3.mouse(this)[1],\n            y1 = y.invert(y0),\n            date1 = d3.mouse(this)[0];\n\n        // Place the intersection date text\n        focus.select(\"text.y1\")\n            .attr(\"transform\",\n                  \"translate(\" + (date1 - 50) + \",\" + (y0+20) + \")\")\n            .text(formatDate(x0));\n        focus.select(\"text.y2\")\n            .attr(\"transform\",\n                  \"translate(\" + (date1 - 50) + \",\" + (y0+20) + \")\")\n            .text(formatDate(x0));\n\n        // Place the intersection time text\n        focus.select(\"text.y3\")\n            .attr(\"transform\",\n                  \"translate(\" + (date1) + \",\" + (y0-15) + \")\")\n            .text(formatTime(y1).substring(0,4)+'0');\n        focus.select(\"text.y4\")\n            .attr(\"transform\",\n                  \"translate(\" + (date1) + \",\" + (y0-15) + \")\")\n            .text(formatTime(y1).substring(0,4)+'0');\n\n        // Place the dynamic daily downloads text\n        focus.select(\"text.y5\")\n            .attr(\"transform\",\n                  \"translate(\"\n                      + (date1) + \",\"\n                      + (scatterplotHeight+dateGraphHeight) + \")\")\n            .attr(\"text-anchor\", \"middle\")\n            .text(dataDate[parseInt(xpos*convertDate)].close);\n        focus.select(\"text.y6\")\n            .attr(\"transform\",\n                  \"translate(\"\n                      + (date1) + \",\"\n                      + (scatterplotHeight+dateGraphHeight) + \")\")\n            .attr(\"text-anchor\", \"middle\")\n            .text(dataDate[parseInt(xpos*convertDate)].close);\n\n        // Place the dynamic time downloads text\n        focus.select(\"text.y7\")\n            .attr(\"transform\",\n                  \"translate(\"\n                      + (scatterplotWidth+timeGraphWidth) + \",\"\n                      + (y0) + \")\")\n            .attr(\"text-anchor\", \"start\")\n            .text(dataTime[144-parseInt(y0*convertTime)].close);\n        focus.select(\"text.y8\")\n            .attr(\"transform\",\n                  \"translate(\"\n                      + (scatterplotWidth+timeGraphWidth) + \",\"\n                      + (y0) + \")\")\n            .attr(\"text-anchor\", \"start\")\n            .text(dataTime[144-parseInt(y0*convertTime)].close);\n\n\n        focus.select(\".x\")\n            .attr(\"transform\",\n                  \"translate(\" + date1 + \",\" + (0) + \")\")\n            .attr(\"y2\", height );\n\n        focus.select(\".y\")\n            .attr(\"transform\",\n                  \"translate(0,\" + y0 + \")\")\n            .attr(\"x2\", width );\n    }\n\n    // axis labels\n    svg.append(\"text\")\n        .attr(\"transform\", \"translate(\"\n            + scatterplotWidth +  \",\"\n            + scatterplotHeight + \"), rotate(-90)\")\n        .attr(\"y\", 25)\n        .attr(\"x\",-dateGraphHeight )\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"start\")\n        .attr(\"class\", \"shadow\")\n        .text(\"Daily Downloads\");\n        \n    svg.append(\"text\")\n        .attr(\"transform\", \"translate(\"\n            + scatterplotWidth +  \",\"\n            + scatterplotHeight + \"), rotate(-90)\")\n        .attr(\"y\", 25)\n        .attr(\"x\",-dateGraphHeight )\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"start\")\n        .text(\"Daily Downloads\");\n\n    svg.append(\"text\")\n        .attr(\"transform\", \"translate(\"\n            + scatterplotWidth +  \",\"\n            + scatterplotHeight + \")\")\n        .attr(\"y\", 20)\n        .attr(\"x\",timeGraphWidth )\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"class\", \"shadow\")\n        .text(\"Downloads in 10 Minute Blocks\");\n        \n    svg.append(\"text\")\n        .attr(\"transform\", \"translate(\"\n            + scatterplotWidth +  \",\"\n            + scatterplotHeight + \")\")\n        .attr(\"y\", 20)\n        .attr(\"x\",timeGraphWidth )\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"end\")\n        .text(\"Downloads in 10 Minute Blocks\");\n\n});\n\n</script>\n\n</body>\n", "description": "Leanpub Book Download Scatterplot", "created_at": "2015-04-02T17:51:04Z", "updated_at": "2015-09-29T15:52:49Z", "api": ["d3.time.format", "d3.bisector", "d3.json", "d3.nest", "d3.sum", "d3.min", "d3.max", "d3.time.scale", "d3.svg.axis", "d3.select", "d3.extent", "d3.scale.linear", "d3.svg.line", "d3.mouse"], "readme": "The graph above shows each instance that the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks) was download from January 2013 to March 2015. It is best viewed in full screen by [opening in a new window](http://bl.ocks.org/d3noob/raw/a0cbcddc6bf0eb9569fe/).\n\nThe main scatterplot has the day that the download occured on the X axis and the time (UTC) that the download occured on the Y axis. The time of the download is grouped into 10 minute blocks and where more than one download occured, the radius of the corresponding point is increased.\n\nThe line graph at the bottom shows the variation of numbers of downloads by day and the line graph on the right shows the variation of downloads by time of day (in 10 minute blocks).\n\nMoving the mouse over the scatterplot will show the time and date of the point and the data is extrapolated onto the line graphs to show the corresponding number of downloads for the day and time.\n\nThere is an explanation of the code available in [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks) or in the blog post [here](http://www.d3noob.org/2015/04/exploring-event-data-by-combination.html).", "uid": "d3noob_a0cbcddc6bf0eb9569fe"}, {"code": "<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>A D3 map with basic interaction</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n    <script src=\"https://rawgit.com/maptimelex/d3-mapping/gh-pages/d3-map01-starter/ky-counties.js\"></script>\n    \n    <link href=\"http://fonts.googleapis.com/css?family=Montserrat\" rel=\"stylesheet\" type=\"text/css\">\n<style>\n    body {\n        padding: 0;\n        margin: 0;\n        background: whitesmoke;\n    }\n    h1, h2 {\n        position: absolute;\n        left: 20px;\n        top: 10px;\n        font-family: \"Proxima Nova\", Montserrat, sans-serif;\n        font-size: 2em;\n        font-weight: 100;\n        color: #005DAA; /* offical UK Kentucky blue */\n    }\n    h2 {\n        top: 50px;\n        font-size: 1.6em;\n    }\n    .county {\n      stroke: #fff;\n      fill:#005DAA;\n    }\n    .hover {\n        fill: yellow;   \n    }\n</style>\n</head>\n<body>\n    <h1>Kentucky Counties</h1>\n    <h2></h2>\n  <script>\n        \n    var width = window.innerWidth,\n        height = window.innerHeight;\n    \n    var svg = d3.select( \"body\" )\n          .append( \"svg\" )\n          .attr( \"width\", width )\n          .attr( \"height\", height );\n      \n    var projection = d3.geo.albers()\n        .center([0, 37.8])\n        .rotate([85.8,0])\n        .scale(8000)\n        .translate([width / 2, height / 2]);\n\n    var geoPath = d3.geo.path()\n        .projection(projection);\n        \n    svg.append(\"g\")\n        .selectAll(\"path\")\n        .data(counties.features)\n        .enter()\n        .append(\"path\")\n        .attr( \"d\", geoPath )\n        .attr(\"class\",\"county\")\n        .on(\"mouseover\", function(d){\n            d3.select(\"h2\").text(d.properties.NAME);\n            d3.select(this).attr(\"class\",\"county hover\");\n        })\n        .on(\"mouseout\", function(d){\n            d3.select(\"h2\").text(\"\");\n            d3.select(this).attr(\"class\",\"county\");\n        });\n \n  </script>\n</body>\n</html>\n\n\n", "description": "First D3 Building Block", "created_at": "2015-09-02T03:33:05Z", "updated_at": "2015-09-02T03:33:05Z", "api": ["d3.select", "d3.geo.albers", "d3.geo.path"], "readme": "## Testing out Block Builder\n\nExample from Rich Donohue's maptimeLEX [meetup on D3-based mapping](https://github.com/maptimelex/d3-mapping/tree/gh-pages/d3-map01-starter).\n\n\n\n\n\n\n\n\n\n", "uid": "maptastik_4a69f2f4c697e097ee74"}, {"code": "<!DOCTYPE html>\n<html style='width: 100%; height:100%;'>\n<head>\n  <script src='http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js'></script>\n  <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n  <script src=\"zui53.js\"></script>\n  <script>\n      function initZUI() {\n          console.log(ZUI53);\n          zui = new ZUI53.Viewport(document.getElementById('zui'));\n          zui.addSurface(new ZUI53.Surfaces.SVG($(\"#linechart\")));\n\n          var pan_tool = new ZUI53.Tools.Pan(zui);\n          zui.toolset.add(pan_tool);\n          pan_tool.attach();\n\n          zui.showBounds({ width: 1000, height: 1000, x: 0, y: 0 });\n\n      }\n\n      function buildSVG() {\n          var margin = { top: 20, right: 20, bottom: 30, left: 50 },\n            width = 960 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n          d3.selectAll(\"#zui\").append(\"svg\")\n            .attr(\"width\", \"100%\")\n            .attr(\"height\", \"100%\")\n            .append(\"g\")\n                .attr(\"id\", \"linechart\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n          drawd3line(width, height);\n      }\n\n      function drawd3line(width, height) {\n          var svg = d3.selectAll(\"#zui\").selectAll(\"#linechart\");\n\n          var parseDate = d3.time.format(\"%Y-%m-%d\").parse,\n               bisectDate = d3.bisector(function (d) { return d.date; }).left;\n\n          var x = d3.time.scale()\n                .range([0, width]);\n\n          var y = d3.scale.linear()\n                .range([height, 0]);\n\n          var xAxis = d3.svg.axis()\n                .scale(x)\n                .orient(\"bottom\");\n\n          var yAxis = d3.svg.axis()\n                .scale(y)\n                .orient(\"left\");\n\n          var line = d3.svg.line()\n                .x(function (d) { return x(d.date); })\n                .y(function (d) { return y(d.cumul); });\n\n          var color = d3.scale.category20();\n\n          d3.csv(\"indexdata.csv\", function (error, data) {\n              data.forEach(function (d) {\n                  d.date = parseDate(d.date);\n                  d.price = +d.price;\n              });\n\n              var indexkeys = d3.keys(d3.nest().key(function (d) { return d.indexname; }).map(data))\n              indexkeys.forEach(function (name) {\n                  //ugly ugly but can't think of the best place to put this transform\n                  //gets cumulative growth by dividing price by first price\n                  var temp = data.filter(function (d) { return d.indexname == name; });\n                  temp.forEach(function (d) { d.cumul = +d.price / temp[0].price });\n              })\n\n\n              indexdata = d3.nest().key(function(d) {return d.indexname;}).entries(data);\n\n              x.domain(d3.extent(data, function (d) { return d.date; }));\n              y.domain(d3.extent(data, function (d) { return d.cumul; }));\n\n              svg.append(\"g\")\n                  .attr(\"class\", \"x axis\")\n                  .attr(\"transform\", \"translate(0,\" + height + \")\")\n                  .call(xAxis);\n\n              svg.append(\"g\")\n                  .attr(\"class\", \"y axis\")\n                  .call(yAxis)\n                .append(\"text\")\n                  .attr(\"transform\", \"rotate(-90)\")\n                  .attr(\"y\", 6)\n                  .attr(\"dy\", \".71em\")\n                  .style(\"text-anchor\", \"end\")\n                  .text(\"Cumulative Growth\");\n\n              var indexGroup = svg.selectAll(\".indexname\")\n                  .data(indexdata)\n                      .enter().append(\"g\")\n                            .attr(\"class\", \"indexname\")\n                            .attr(\"id\", function (d) { return d.key });\n\n              indexGroup.append(\"path\")\n                    .attr(\"class\", \"line\")\n                    .attr(\"d\", function (d) { return line(d.values); })\n                    .attr(\"stroke\", function (d) { return color(d.key); });\n\n             //original ugly way of doing it until I found Mike Bostock's example\n             // var nodes = indexGroup.selectAll()\n             //       .data(function (d) { return d.values; })\n             //           .enter().append(\"g\")\n             //               .attr(\"class\", \"points\")\n             //               .attr(\"transform\", function (d) { return \"translate(\" + x(d.date) + \",\" + y(d.cumul) + \")\"; });\n\n              //nodes.append('circle')\n              //      .attr(\"r\", 10)\n              //      .attr(\"fill\", function (d) { return color(d.indexname); })\n\n             // nodes.append('text')\n             //       .attr(\"text-anchor\", \"middle\")\n             //       .attr(\"dx\", 12)\n             //       .attr(\"dy\", \"-.35em\")\n             //       .text(function (d) { return d.indexname + \"\\n \" + Math.round(d.cumul * 100) / 100; })\n             //       .attr(\"fill\", \"gray\");\n\n              var focus = svg.selectAll(\".focus\")\n                    .data(indexkeys).enter().append(\"g\")\n                          .attr(\"class\", \"focus\")\n                          .attr(\"id\", function (d) { return \"focus-\" + d; })\n                          .style(\"display\", \"none\");\n\n              focus.append(\"circle\")\n                  .attr(\"r\", 4.5);\n\n              focus.append(\"text\")\n                  .attr(\"x\", 9)\n                  .attr(\"dy\", \".35em\");\n\n              svg.append(\"rect\")\n                  .attr(\"class\", \"overlay\")\n                  .attr(\"width\", width)\n                  .attr(\"height\", height)\n                  .on(\"mouseover\", function () { focus.style(\"display\", null); })\n                  .on(\"mouseout\", function () { focus.style(\"display\", \"none\"); })\n                  .on(\"mousemove\", mousemove);\n\n              function mousemove() {\n                  var x0 = x.invert(d3.mouse(this)[0]);\n                  indexkeys.forEach(function (indexname, i1) {\n                      var i = bisectDate(indexdata[i1].values, x0, 1),\n                        d0 = indexdata[i1].values[i - 1],\n                        d1 = indexdata[i1].values[i],\n                        d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n                      d3.select(\"#focus-\" + indexname)\n                        .attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.cumul) + \")\")\n                        .attr(\"fill\", color(indexname));\n                      d3.select(\"#focus-\" + indexname).select(\"text\").text(indexname + \" \" + Math.round(d.cumul*100)/100).attr(\"fill\", color(indexname));\n                  });\n              }\n\n\n          });\n\n          initZUI();\n      }\n  </script>\n    <style>\n\n            body {\n              font: 10px sans-serif;\n            }\n\n            .axis path,\n            .axis line {\n              fill: none;\n              stroke: #000;\n              shape-rendering: crispEdges;\n            }\n\n            .x.axis path {\n              display: none;\n            }\n\n            .line {\n              fill: none;\n              stroke-width: 5px;\n            }\n        \n           /*ugly way before I found Mike Bostock's example\n             .points {opacity: 0;}\n            .points:hover {opacity: 1;}*/\n\n        .overlay {\n            fill: none;\n            pointer-events: all;\n        }\n\n    </style>\n</head>\n<body onload='buildSVG()' style='width:100%; height:100%; margin: 0; padding: 0;'>\n\n<div id='zui'>\n\n</div>\n\n</body>\n</html>", "description": "zui53 and d3 line chart", "created_at": "2013-03-13T03:10:56Z", "updated_at": "2015-12-14T21:09:09Z", "api": ["d3.selectAll", "d3.time.format", "d3.bisector", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.scale.category20", "d3.csv", "d3.keys", "d3.nest", "d3.extent", "d3.mouse", "d3.select"], "readme": "#zui53 Zoom Adaptation of [Mike Bostock's Line Chart](https://gist.github.com/mbostock/3902569)\nI have not seen anyone pair [zui53](https://github.com/florianguenther/zui53) with so I thought I would experiment by adding the zoom and drag functionality to this line chart.  I also wanted to test my skills by using a long form csv dataset with two series.  zui53 zoom and drag does not work in Internet Explorer.  Works best when opened in [full window](http://bl.ocks.org/timelyportfolio/raw/5149102/)\n\nOriginal Readme.md is below\n***\nA [line chart](../3883245) with mouseover so that you can read the *y*-value based on the closest *x*-value. The *x*-value is found using d3.mouse and scale.invert. The *y*-value is then found by bisecting the data.", "uid": "timelyportfolio_5149102"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Constrained Zoom by Rectangle</title>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<style>\n\nbody {\n  font-family: sans-serif;\n}\n\n.noselect {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\nsvg {\n  font: 9pt sans-serif;\n  shape-rendering: crispEdges;\n}\n\nrect {\n  fill: #ddd;\n}\n\nrect.zoom {\n  stroke: steelblue;\n  fill: #bbb;\n  fill-opacity: 0.5;\n}\n\n.axis path, .axis line {\n  fill: none;\n  stroke: #fff;\n}\n\n</style>\n<p><label for=\"zoom-rect\"><input type=\"checkbox\" id=\"zoom-rect\"> zoom by rectangle</label>\n<script>\n\nvar margin = {top: 20, right: 12, bottom: 20, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 430 - margin.top - margin.bottom;\n\nvar xmin = 0,\n    xmax = 500,\n    ymin = 0,\n    ymax = 1;\n\nvar ynorm = d3.scale.linear().domain([ymin, ymax]);\n\nvar x = d3.scale.linear()\n    .domain([xmin, xmax])\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .domain([ymin, ymax])\n    .range([height, 0]);\n    \nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tickSize(-height); // Draw gridlines\n\n// Partition layout is used for getting the normalized tick locations at the\n// various depths of the hierarchy\nvar partition = d3.layout.partition()\n    .children(function(d) { return (d.sub) ? d.sub : null;})\n    .value(function(d) { return 1;}) // Size by number of entries\n    .sort(function(a,b){return a.name.localeCompare(b.name);});\n    \nvar nodes;\nd3.json(\"hierarchy.json\", function(json) {\n    nodes = partition.nodes(json);\n    ymax = nodes.filter(function(d){return d.depth==3;}).length;\n    y.domain([ymin, ymax]);\n\n    var zoom = d3.behavior.zoom().x(x).y(y).scaleExtent([.001, Infinity]).on(\"zoom\", refresh);\n\n    var chapter_x = nodes.filter(function(d){return d.depth==1;})\n            .map(function(d){return d.x*ymax;});\n    var chapter_names = nodes.filter(function(d){return d.depth==1;})\n            .map(function(d){return d.name;});\n    var chapter_scale = d3.scale.ordinal()\n            .domain(chapter_x)\n            .range(chapter_names);\n\n    var section_x = nodes.filter(function(d){return d.depth==2;})\n            .map(function(d){return d.x*ymax;});\n    var section_names = nodes.filter(function(d){return d.depth==2;})\n            .map(function(d){return d.parent.name + \".\" + d.name;});\n    var section_scale = d3.scale.ordinal()\n            .domain(section_x)\n            .range(section_names);\n    \n    var subsection_x = nodes.filter(function(d){return d.depth==3;})\n            .map(function(d){return d.x*ymax;});\n    var subsection_names = nodes.filter(function(d){return d.depth==3;})\n            .map(function(d){\n                return d.parent.parent.name + \".\" + d.parent.name + \".\" + d.name;\n            });\n    var subsection_scale = d3.scale.ordinal()\n            .domain(subsection_x)\n            .range(subsection_names);\n    \n    var yAxis = d3.svg.axis()\n            .scale(y)\n            .orient(\"left\")\n            .tickValues(function() {\n                var ydom = y.domain();\n                if ((ydom[1]-ydom[0]) > 0.25*ymax) {\n                    return chapter_x.filter(function(d){\n                        return ((d+.001>=ydom[0])&(d<=ydom[1]));\n                    });\n                } else if ((y.domain()[1]-y.domain()[0]) > 0.1*ymax) {\n                    return section_x.filter(function(d){\n                        return ((d+.001>=ydom[0])&(d<=ydom[1]));\n                    });\n                } else {\n                    return subsection_x.filter(function(d){\n                        return ((d+.001>=ydom[0])&(d<=ydom[1]));\n                    });\n                }\n            })\n            .tickFormat(function(d) {\n                var ydom = y.domain();\n                if ((ydom[1]-ydom[0]) > 0.25*ymax) {\n                    return chapter_scale(d);\n                } else if ((ydom[1]-ydom[0]) > 0.1*ymax) {\n                    return section_scale(d);\n                } else {\n                    return subsection_scale(d);\n                }\n            })\n    .tickSize(-width); // tickLine == gridline\n\n    var zoomRect = false;\n\n    d3.select(\"#zoom-rect\").on(\"change\", function() {\n        zoomRect = this.checked;\n    });\n\n    var svg = d3.select(\"body\").append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n          .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n            .call(zoom)\n          .append(\"g\")\n            .on(\"mousedown\", function() {\n                if (!zoomRect) return;\n                var e = this,\n                    origin = d3.mouse(e),\n                    rect = svg.append(\"rect\").attr(\"class\", \"zoom\");\n                d3.select(\"body\").classed(\"noselect\", true);\n                origin[0] = Math.max(0, Math.min(width, origin[0]));\n                origin[1] = Math.max(0, Math.min(height, origin[1]));\n                d3.select(window)\n                  .on(\"mousemove.zoomRect\", function() {\n                     var m = d3.mouse(e);\n                     m[0] = Math.max(0, Math.min(width, m[0]));\n                     m[1] = Math.max(0, Math.min(height, m[1]));\n                     rect.attr(\"x\", Math.min(origin[0], m[0]))\n                         .attr(\"y\", Math.min(origin[1], m[1]))\n                         .attr(\"width\", Math.abs(m[0] - origin[0]))\n                         .attr(\"height\", Math.abs(m[1] - origin[1]));\n                  })\n                  .on(\"mouseup.zoomRect\", function() {\n                     d3.select(window).on(\"mousemove.zoomRect\", null).on(\"mouseup.zoomRect\", null);\n                     d3.select(\"body\").classed(\"noselect\", false);\n                     var m = d3.mouse(e);\n                     m[0] = Math.max(0, Math.min(width, m[0]));\n                     m[1] = Math.max(0, Math.min(height, m[1]));\n                     if (m[0] !== origin[0] && m[1] !== origin[1]) {\n                         zoom.x(x.domain([origin[0], m[0]].map(x.invert).sort()))\n                             .y(y.domain([origin[1], m[1]].map(y.invert).sort()));\n                     }\n                     rect.remove();\n                     refresh();\n                  }, true);\n                d3.event.stopPropagation();\n            });\n\n    svg.append(\"rect\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n\n    svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis);\n\n    svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .call(yAxis);\n\n    function refresh() {\n        var t = zoom.translate();\n        var s = zoom.scale();\n        var tx = t[0],\n            ty = t[1];\n        var xdom = x.domain();\n        var reset_s = 0;\n        if ((xdom[1] - xdom[0]) >= (xmax - xmin)) {\n            zoom.x(x.domain([xmin, xmax]));\n            xdom = x.domain();\n            reset_s = 1;\n        }\n        var ydom = y.domain();\n        if ((ydom[1] - ydom[0]) >= (ymax - ymin)) {\n            zoom.y(y.domain([ymin, ymax]));\n            ydom = y.domain();\n            reset_s += 1;\n        }\n        if (reset_s == 2) { // Both axes are full resolution. Reset.\n            zoom.scale(1);\n            tx = 0;\n            ty = 0;\n        } else {\n            if (xdom[0] < xmin) {\n                tx = 0;\n                x.domain([xmin, xdom[1] - xdom[0] + xmin]);\n                xdom = x.domain();\n            }\n            if (xdom[1] > xmax) {\n                xdom[0] -= xdom[1] - xmax;\n                tx = -xdom[0]*width/(xmax-xmin)*s;\n                x.domain([xdom[0], xmax]);\n            }\n            if (ydom[0] < ymin) {\n                y.domain([ymin, ydom[1] - ydom[0] + ymin]);\n                ydom = y.domain();\n                ty = -(ymax-ydom[1])*height/(ymax-ymin)*s;\n            }\n            if (ydom[1] > ymax) {\n                ydom[0] -= ydom[1] - ymax;\n                ty = 0;\n                y.domain([ydom[0], ymax]);\n            }\n        }\n        // Reset (possibly) if hit an edge so that next focus event starts correctly.\n        zoom.translate([tx, ty]);\n        svg.select(\".x.axis\").call(xAxis);\n        svg.select(\".y.axis\").call(yAxis);\n    }\n});\n\n</script>", "description": "D3 Hierarchical Ordinal Ticks", "created_at": "2013-12-31T02:02:03Z", "updated_at": "2016-01-01T19:38:58Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.layout.partition", "d3.json", "d3.behavior.zoom", "d3.scale.ordinal", "d3.select", "d3.mouse", "d3.event.stopPropagation"], "readme": "This D3 example demonstrates constrained zooming, much like \nhttp://bl.ocks.org/tommct/5671250, but also illustrates the use of hierarchical\nordinal tick marks. It does this by using the normalized values that one gets\nwhen using a hierarchical partition layout.\n", "uid": "tommct_8191276"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>", "description": "Simple d3.js Graph", "created_at": "2016-02-27T19:56:57Z", "updated_at": "2016-02-27T19:56:57Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a simple d3.js graph used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at providing some exposure to some d3.js functions and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "hungvietdo_28d434d3818db4fbe369"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>", "description": "Simple d3.js Graph", "created_at": "2014-06-20T19:35:38Z", "updated_at": "2016-04-22T23:23:58Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a simple d3.js graph used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at providing some exposure to some d3.js functions and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_b3ff6ae1c120eea654b5"}, {"code": "\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n    \n.bar {\n  fill: steelblue;\n}\n\n.x.axis path {\n  display: none;\n}\n\n</style>\n<body>\n  \n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script>\n    \nvar sort_select = 'state';\nvar margin = {top: 20, right: 40, bottom: 80, left: 40},\nwidth = 960 - margin.left - margin.right,\nheight = 500 - margin.top - margin.bottom;\n\nvar x0 = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar x1 = d3.scale.ordinal();\n\nvar y = {};\n\ny['area'] = d3.scale.linear()\n    .range([height, 0]);\n\ny['pop2010'] = d3.scale.linear()\n    .range([height, 0]);\n\n\nvar color = d3.scale.ordinal()\n    .range([\"#8a89a6\", \"#d0743c\", \"#ff8c00\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x0)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y['pop2010'])\n    .orient(\"left\")\n    .tickFormat(d3.format(\".2s\"));\n\nvar yAxis_right = d3.svg.axis()\n    .scale(y['area'])\n    .orient(\"right\")\n    .tickFormat(d3.format(\".2s\"));\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n;\n\n      var xi = 85;\n      var fsz = 12;\n      var yi = 10;\n      var dyi = 15;\n      var fl = '#111111';\n      \nvar info_display_1 = svg.append('text')\n    .attr('id', 'info_display_1')\n    .attr('x', xi)\n    .attr('y', yi + 0*dyi)\n    .style('font-size', fsz + \"px\")\n    .style('opacity', 1)\n    .style('fill', fl)\n    .style('background-color', '#000')\n;\n\n      var info_display_2 = svg.append('text')\n    .attr('id', 'info_display_2')\n    .attr('x', xi)\n    .attr('y', yi + 1*dyi)\n    .style('font-size', fsz + \"px\")\n    .style('opacity', 1)\n    .style('fill', fl)\n    .style('background-color', '#000')\n;\n\n      var info_display_3 = svg.append('text')\n    .attr('id', 'info_display_3')\n    .attr('x', xi)\n    .attr('y', yi + 2*dyi)\n    .style('font-size', fsz + \"px\")\n    .style('opacity', 1)\n    .style('fill', fl)\n    .style('background-color', '#000')\n;\n\n      var info_display_4 = svg.append('text')\n    .attr('id', 'info_display_4')\n    .attr('x', xi)\n    .attr('y', yi + 3*dyi)\n    .style('font-size', fsz + \"px\")\n    .style('opacity', 1)\n    .style('fill', fl)\n    .style('background-color', '#000')\n;\n\n      var title = svg.append('text')\n      .text(\"US States: 2010 Census\")\n      .attr('id', 'info_title')\n    .attr('x', 350)\n    .attr('y', 0)\n    .style('font-size', \"18px\")\n    .style('opacity', 1)\n    .style('fill', fl)\n    .style('background-color', '#000')\n;\n\n                             \nfunction sort_data(data, key) {\n    if (key == sort_select) {\n        sort_select = key;\n        return data.reverse();\n    }\n    \n    sort_select = key;\n    sdata = _.sortBy(data, key);\n    \n    if (key=='state')\n        return sdata;\n    return sdata.reverse();\n};\n\n                  \nd3.csv(\"state_area_pop.csv\", function(error, data) {\n    \n    data.forEach(function(d) {\n        d.area = parseFloat(d.area);\n        d.pop2010 = parseInt(d.pop2010);\n    });\n                 \n    var cols = ['area', 'pop2010']\n    \n    data.forEach(function(d) {\n\td.values = cols.map(function(name) { \n            return {'name': name, 'value': +d[name]}; \n        });\n    });\n    \n    data.forEach(function(d) {\n        d.density = d.pop2010/d.area;\n    });\n    \n    sdata = sort_data(data, 'state');\n    console.log('sdata', sdata);\n    \n    x0.domain(data.map(function(d, i) { return i; }));\n    x1.domain(cols).rangeRoundBands([0, x0.rangeBand()]);\n    \n    y['pop2010'].domain([0, 38000000]);\n    y['area'].domain([0, 680000]);\n    \n    var xa = svg.append(\"g\")\n\t.attr(\"class\", \"x axis\")\n\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t.call(xAxis)\n\t.selectAll(\"text\")  \n\t.text(function(d, i) {\n            return sdata[i].state.replace('_', ' ').replace('_', ' ');\n\t})\n\t.style(\"text-anchor\", \"end\")\n        .attr(\"dx\", \"-.8em\")\n        .attr(\"dy\", \".15em\")\n        .attr(\"transform\", \"rotate(-65)\" )\n            .attr('font-size', '8px')\n    .attr('class', 'xaxis_label')\n    ;\n    \n    \n    svg.append(\"g\")\n\t.attr(\"class\", \"y axis\")\n\t.call(yAxis)\n\t.append(\"text\")\n\t.attr(\"transform\", \"rotate(-90)\")\n\t.attr(\"y\", 6)\n\t.attr(\"dy\", \".71em\")\n\t.style(\"text-anchor\", \"end\")\n        .text('Population')\n    ;\n    \n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n\t.call(yAxis_right)\n        .attr(\"transform\", \"translate(\" + width + \" ,0)\")\n        .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n\t.attr(\"y\", -16)\n\t.attr(\"y\", -16)\n\t.attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .text('Area (sq. miles)')\n    \n    ;\n        \n    \n    function updatePlot(sdata, key) {\n        console.log('updating the plot');\n        old_keys = {}\n        sdata.forEach(function(d, i) {\n            old_keys[d.state] = i;\n        });\n        \n        keys = {};\n        sdata = sort_data(sdata, key);\n        sdata.forEach(function(d, i) {\n            keys[d.state] = i;\n        });\n                \n        state.transition()               \n            .attr(\"transform\", function(d, i) { \n           return \"translate(\" + x0(i) + \",0)\"; \n        })\n        ;\n        \n        var k = 'area';\n        rect[k].transition().duration(2000)\n        .attr(\"x\", function(d, i) { \n              return x0(keys[d.state]) + x1(k);\n        })\n        ;\n        \n        var k = 'pop2010';\n        rect[k].transition().duration(2000)\n        .attr(\"x\", function(d, i) { \n              return x0(keys[d.state]) + x1(k);\n        })\n        ;\n        \n        xa.transition(2000)\n            .text(function(d, i) {\n            return sdata[i].state.replace('_', ' ').replace('_', ' ');\n        });\n        \n    }\n    \n    var state = svg.selectAll(\".state\")\n\t.data(sdata)\n\t.enter().append(\"g\")\n\t.attr(\"class\", \"g\")\n\t.attr(\"transform\", function(d, i) { return \"translate(\" + x0(i) + \",0)\"; });\n    \n    function info_text(datum) {\n        var fmt = d3.format('.1f');\n        d3.selectAll('#info_display_1')\n            .text('state: ' + datum.state.replace('_', ' ').replace('_', ' ') )\n        .transition()\n        .duration(100)\n            .style('opacity', 1);\n        d3.selectAll('#info_display_2')\n            .text('population: ' + datum.pop2010)\n        .transition()\n        .duration(100)\n\n            .style('opacity', 1);\n        d3.selectAll('#info_display_3')\n            .text('area (sq.mi): ' + datum.area)\n        .transition()\n        .duration(100)\n\n            .style('opacity', 1);\n        d3.selectAll('#info_display_4')\n            .text('density (per sq.mi): ' + fmt(datum.density))\n        .transition()\n        .duration(100)\n\n            .style('opacity', 1);\n    };\n    \n    function info_text_off() {\n        d3.selectAll('#info_display_1')\n            .transition()\n            .duration(100)\n            .style('opacity', 0)\n        ;\n        d3.selectAll('#info_display_2')\n            .transition()\n            .duration(100)\n            .style('opacity', 0)\n        ;\n        d3.selectAll('#info_display_3')\n            .transition()\n            .duration(100)\n            .style('opacity', 0)\n        ;\n        d3.selectAll('#info_display_4')\n            .transition()\n            .duration(100)\n            .style('opacity', 0)\n        ;\n    };\n        \n    var rect = {};\n    \n    var k = 'area';\n    rect[k] = svg.selectAll(\".rect_area\")\n        .data(sdata)\n        .enter().append(\"rect\")\n        .attr('class', 'rect_area')\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"x\", function(d, i) { \n            return x0(i) + x1(k); })\n        .attr(\"y\", function(d, i) { \n            return y[k](d[k]); })\n        .attr(\"height\", function(d) { \n            return height - y[k](d[k]); })\n        .style(\"fill\", function(d) { return color(k); })\n        .on('mouseover', function(d, i) {\n            info_text(d);\n        ;})\n        .on('mouseout', function(d, i) {\n            info_text_off();\n    })\n    ;\n\n    var k = 'pop2010';\n    rect[k] = svg.selectAll(\".rect_pop2010\")\n        .data(sdata)\n        .enter().append(\"rect\")\n        .attr('class', 'rect_pop2010')\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"x\", function(d, i) { \n            return x0(i) + x1(k); })\n        .attr(\"y\", function(d, i) { \n            return y[k](d[k]); })\n        .attr(\"height\", function(d) { \n            return height - y[k](d[k]); })\n\t   .style(\"fill\", function(d) { return color(k); })\n           .on('mouseover', function(d, i) {\n            info_text(d);\n        ;})\n        .on('mouseout', function(d, i) {\n            info_text_off();\n    })\n    ;\n\n    \n    var sorteys = [{ 'k': 'name', 'v': 'state'}, \n                   { 'k': 'pop.', 'v': 'pop2010'}, \n                   { 'k': 'area', 'v': 'area'}, \n                   { 'k':'density', 'v':'density'}\n                  ];\n    \n    var sort_options = svg.selectAll('.sort_options')\n        .data(sorteys)\n        .enter().append('g')\n        .attr('class', 'sort_options')\n        .attr('transform', function(d, i) { return \"translate(0,\" + i * 20  + \")\"; })\n    ;\n    \n    sort_options.append('text')\n        .text(function(d) {return d.k;})\n        .style('text-align', 'right')\n        .attr(\"x\", width - 60)\n        .attr('y', function(d, i) {\n            return 80; //parseInt(i + 70);\n        })\n\t.attr(\"width\", 40)\n\t.attr(\"height\", 12)\n\t.style(\"fill\", '000')\n        .style('cursor', 'pointer')\n        .on('click', function(d, i) {\n            updatePlot(sdata, d.v);\n        })\n    ;\n    \n    svg.append('text')\n\t.text('Sort By')\n\t.attr('x', width - 60)\n\t.attr('y', 60);\n    \n    var legend = svg.selectAll(\".legend\")\n\t.data(cols.slice().reverse())\n\t.enter().append(\"g\")\n\t.attr(\"class\", \"legend\")\n\t.attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20  + \")\"; });\n    \n    legend.append(\"rect\")\n\t.attr(\"x\", width - 40)\n\t.attr(\"width\", 18)\n\t.attr(\"height\", 18)\n\t.style(\"fill\", color);\n    \n    legend.append(\"text\")\n\t.attr(\"x\", width - 46)\n\t.attr(\"y\", 9)\n\t.attr(\"dy\", \".35em\")\n\t.style(\"text-anchor\", \"end\")\n\t.text(function(d) { return d; });\n    \n});\n\n</script>\n    \n", "description": "", "created_at": "2015-08-03T04:01:40Z", "updated_at": "2015-08-29T14:26:31Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.selectAll"], "readme": "A visualization of some data from the 2010 U.S. Census. This was created for the University of Illinois Coursera class on data visualization. \n\nMy submission uses data on the population and area of US states, based on the 2010 census, and was obtained from the census.gov website. The data are displayed using bar charts built with d3 and the visualization includes an interactive sorting feature and a text display if you hover the mouse over a bar. Because area and volume are less effective in communicating quantitative differences than length, I was interested in the idea of using length to display area or volume. I applied the guideline of using desaturated colors for the fills of the bars. I included density as a sorting option, but didn't display it as a bar since it is computable from population and area. This is motivated by Edward Tufte's guidelines of removing redundent elements of the visualization.\n", "uid": "bdilday_ac943080045043d53971"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>GitHub Language Correlations Circle Pack Visualization</title>\n<style type=\"text/css\">\ncircle {\nfill: #3AA1C3;\nfill-opacity: .15;\nstroke: #03374a;\nstroke-width: 1px;\n}\n.leaf circle {\nfill: #84D181;\nfill-opacity: 1;\n}\ntext {\nfont: 10px sans-serif;\n}\n</style>\n<script src=\"http://d3js.org/d3.v2.min.js\"></script>\n</head>\n<body>\n<div id=\"vis\"></div>\n<script>\nvar width = 960,\n  height = 500,\n  format = d3.format(\",d\");\n\nvar pack = d3.layout.pack()\n  .size([width - 4, height - 4])\n  .value(function(d) { return d.size; });\n\nvar vis = d3.select(\"#vis\").append(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height)\n  .attr(\"class\", \"pack\")\n  .append(\"g\")\n  .attr(\"transform\", \"translate(2, 2)\");\n\nd3.json(\"language_correlation_circle_pack.json\", function(json) {\nconsole.log(json);\n  var node = vis.data([json]).selectAll(\"g.node\")\n    .data(pack.nodes)\n    .enter().append(\"g\")\n    .attr(\"class\", function(d) { return d.children ? \"node\" : \"leaf node\";})\n    .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"title\")\n    .text(function(d) { return d.name + (d.children ? \"\" : \": \" + format(d.size));});\n\n  node.append(\"circle\")\n    .attr(\"r\", function(d) { return d.r; });\n\n  node.filter(function(d) { return !d.children; }).append(\"text\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dy\", \".3em\")\n    .text(function(d) { return d.name.substring(0, d.r / 3); });\n});\n</script>\n</body>\n</html>", "description": "GitHub Language Correlations Circle Pack Visualization", "created_at": "2012-05-11T21:06:06Z", "updated_at": "2015-10-04T15:47:55Z", "api": ["d3.format", "d3.layout.pack", "d3.select", "d3.json"], "readme": "# README\n\n[View this Gist at bl.ocks.org](http://bl.ocks.org/2662413)\n\nA circle packing visualization of the programming language correlations dataset, that is available via Google's BigQuery service as part of the [GitHub Archive](http://www.githubarchive.org/) project.\n\nIncluded are the 10 most popular programming languages on GitHub at the time of creation (JavaScript, Ruby, Python, Shell, Java, PHP, C, Perl, C++, Objective-C) and their correlated languages with a minimum correlation score of 10. Read more about how [correlation scores are calculated](https://gist.github.com/e0637fff9c8eec988528).\n\nOn the [demo page](http://bl.ocks.org/2662413) move the mouse pointer over the big containing circles to see the name of the source languages and over the smaller contained circles to see the rounded correlation values.\n\nThe visualization was created by [Ramiro G\u00f3mez](http://www.ramiro.org/) using the excellent [Data-Driven Documents](http://d3js.org/) JavaScript library based on the [circle packing example](http://mbostock.github.com/d3/ex/pack.html).", "uid": "yaph_2662413"}, {"code": "<html>\n\t<head>\n\t\t<title>Interactive Line Graph</title>\n\t\t<script src=\"http://d3js.org/d3.v3.js\"></script>\n\t\t<!-- \n\t\t\tusing JQuery for element dimensions\n\t\t\tThis is a small aspect of this example so it can be removed fairly easily if needed.\n\t\t-->\n\t\t<script src=\"http://code.jquery.com/jquery-1.7.2.min.js\"></script>\n\t\t<script src=\"sample_data.js\"></script>\n\t\t<script src=\"line-graph.js\"></script>\n\t        <script src=\"jquery.zoomooz.js\"></script>\n\t        <script src=\"intro.js\"></script>\n\t\n\t        <link href=\"introjs.min.css\" rel=\"stylesheet\">\n\t\t<link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: \"Helvetica Neue\", Helvetica;\n\t\t\t}\n\t\t\t\t\t\n\t\t\tp {\n\t\t\t\tclear:both;\n\t\t\t\ttop: 20px;\n\t\t\t}\t\t\n\t\t\t\t\t\n\t\t\tdiv.aGraph {\n\t\t\t\tmargin-bottom: 30px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t<div id=\"graph1\" class=\"aGraph\" style=\"position:relative;width:100%;height:400px\" data-step=\"1\" data-intro=\"This view offers a realtime look at the data and continously updates.\"></div>\n\t\n\t<div id=\"graph2\" class=\"aGraph zoomTarget\" data-targetsize=\"0.8\" style=\"float:left;position:relative;width:49%;height:200px\" data-step=\"2\" data-intro=\"A look in to the future since this data is a couple of hours ahead of above.  Click to zoom.\"></div>\n\t<div id=\"graph3\" class=\"aGraph zoomTarget\" data-targetsize=\"0.8\" style=\"float:left;position:relative;width:49%;height:200px\" data-step=\"3\" data-intro=\"5 days for comparison purposes.  Click on it to zoom in\"></div>\n\n\t<script>\n\t\t/* \n\t\t * If running inside bl.ocks.org we want to resize the iframe to fit both graphs\n\t\t */\n\t\t if(parent.document.getElementsByTagName(\"iframe\")[0]) {\n\t\t\t parent.document.getElementsByTagName(\"iframe\")[0].setAttribute('style', 'height: 650px !important');\n\t\t }\n\t\n\t\t /*\n\t\t * Note how the 'data' object is added to here before rendering to provide decoration information.\n\t\t * <p>\n\t\t * This is purposefully done here instead of in data.js as an example of how data would come from a server\n\t\t * and then have presentation information injected into it (rather than as separate arguments in another object)\n\t\t * and passed into LineGraph.\n\t\t *\n\t\t * Also, CSS can be used to style colors etc, but this is also doable via the 'data' object so that the styling\n\t\t * of different data points can be done in code which is often more natural for display names, legends, line colors etc\n\t\t */\n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data[\"displayNames\"] = [\"2xx\",\"3xx\",\"4xx\",\"5xx\"];\n\t\t data[\"colors\"] = [\"green\",\"orange\",\"red\",\"darkred\"];\n\t\t data[\"scale\"] = \"pow\";\n\t\t \n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data2[\"displayNames\"] = [\"2xx\",\"3xx\",\"4xx\",\"5xx\"];\n\t\t data2[\"colors\"] = [\"green\",\"orange\",\"red\",\"darkred\"];\n\t\t data2[\"scale\"] = \"linear\";\n\t\t \n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data3[\"displayNames\"] = [\"Data1\", \"Data2\"];\n\t\t data3[\"axis\"] = [\"left\", \"right\"];\n\t\t data3[\"colors\"] = [\"#2863bc\",\"#c8801c\"];\n\t\t data3[\"rounding\"] = [2, 0];\n\n\t\t // create graph now that we've added presentation config\n\t\tvar l1 = new LineGraph({containerId: 'graph1', data: data});\n\t\tvar l2 = new LineGraph({containerId: 'graph2', data: data2});\n\t\tvar l3 = new LineGraph({containerId: 'graph3', data: data3});\n\t\t\n\tsetInterval(function() {\n\t\t/*\n\t\t* The following will simulate live updating of the data (see dataA, dataB, dataC etc in data.js which are real examples)\n\t\t* This is being simulated so this example functions standalone without a backend server which generates data such as data.js contains.\n\t\t*/\n\t\t// for each data series ...\n\t\tvar newData = [];\n\t\tdata.values.forEach(function(dataSeries, index) {\n\t\t\t// take the first value and move it to the end\n\t\t\t// and capture the value we're moving so we can send it to the graph as an update\n\t\t\tvar v = dataSeries.shift();\n\t\t\tdataSeries.push(v);\n\t\t\t// put this value in newData as an array with 1 value\n\t\t\tnewData[index] = [v];\n\t\t})\n\t\t\n\t\t// we will reuse dataA each time\n\t\tdataA.values = newData;\n\t\t// increment time 1 step\n\t\tdataA.start = dataA.start + dataA.step;\n\t\tdataA.end = dataA.end + dataA.step; \n\t\t\t\t\t\n\t\tl1.slideData(dataA);\n\t}, 2000);\n\n\tintroJs().start();\n\t</script>\n\n\n\n\t</body>\n</html>", "description": "fork of https://gist.github.com/benjchristensen/2657838 with zoomooz.js and intro.js functionality", "created_at": "2013-03-19T21:24:00Z", "updated_at": "2015-12-15T04:19:06Z", "api": ["d3.format", "d3.max", "d3.scale.pow", "d3.scale.log", "d3.scale.linear", "d3.svg.axis", "d3.time.scale", "d3.select", "d3.svg.line"], "readme": "#Quick Fork to add Zoom and Intro\nZoom functionality from [zoomooz.js](http://janne.aukia.com/zoomooz)\nIntro functionality from [intro.js](http://usablica.github.com/intro.js/)\n\n#Original Readme.md below\n***\nProof of concept line graph implemented using d3.js and some jQuery that [builds on](http://bl.ocks.org/1148374) [previous](http://bl.ocks.org/2579619) [examples](http://bl.ocks.org/2580640).\n\nThe top graph is 24 hours of data in 2 minute increments. I have it rolling every 2 seconds to simulate live updating. In real-life it would only update every 2 minutes to match the data granularity.\n\nSee it running at [http://bl.ocks.org/2657838](http://bl.ocks.org/2657838)\n\nFeatures:\n\n* incrementally update data or replace entire dataset\n* interactive mouseover to view details\n* animated switching of y-axis scale types (linear, power, log)\n* dynamic redrawing on window resize\n\nMissing:\n\n* not yet integrated with touch events, only mouse\n\nI don't normally work in javascript, so if it isn't quite right, I'd appreciate suggestions on where to improve it.", "uid": "timelyportfolio_5200272"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\nbody {\n  margin: 0;\n  font:normal 10px/15px 'Helvetica', sans-serif;\n}\na {\n  color:#444;\n}\n.map {\n  position: absolute;\n  top:0;\n  bottom:0;\n  right:0;\n  left:0;\n  overflow: hidden;\n}\n.layer {\n  position: absolute;\n}\n.tile {\n  position: absolute;\n  width: 256px;\n  height: 256px;\n}\n.info {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n}\n.attribution {\n  position:absolute;\n  bottom:0;\n  left:0;\n  z-index:9;\n  background:#fff;\n  padding:2px 4px;\n}\n</style>\n<body>\n<div class='attribution'><a href='http://mapbox.com/about/maps/'>Terms &amp; Conditions</a></div>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/d3.geo.tile.v0.min.js\"></script>\n<script>\nvar width = window.innerWidth,\n    height = window.innerHeight,\n    prefix = prefixMatch([\"webkit\", \"ms\", \"Moz\", \"O\"]);\n\nvar tile = d3.geo.tile()\n    .size([width, height]);\n\nvar projection = d3.geo.mercator();\n\nvar zoom = d3.behavior.zoom()\n    .scale(1 << 10)\n    .scaleExtent([1 << 9, 1 << 23])\n    .translate([width / 2, height / 2])\n    .on(\"zoom\", zoomed);\n\nvar map = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"map\")\n    .style(\"width\", width + \"px\")\n    .style(\"height\", height + \"px\")\n    .call(zoom);\n\nvar layer = map.append(\"div\")\n    .attr(\"class\", \"layer\");\n\nvar info = map.append(\"div\")\n    .attr(\"class\", \"info\");\n\nzoomed();\n\nfunction zoomed() {\n  var tiles = tile\n      .scale(zoom.scale())\n      .translate(zoom.translate())\n      ();\n\n  projection\n      .scale(zoom.scale())\n      .translate(zoom.translate());\n\n  var image = layer\n      .style(prefix + \"transform\", matrix3d(tiles.scale, tiles.translate))\n    .selectAll(\".tile\")\n      .data(tiles, function(d) { return d; });\n\n  image.exit()\n      .remove();\n\n  image.enter().append(\"img\")\n      .attr(\"class\", \"tile\")\n      .attr(\"src\", function(d) { return \"http://\" + [\"a\", \"b\", \"c\", \"d\"][Math.random() * 4 | 0] +\n        \".tiles.mapbox.com/v3/examples.map-vyofok3q/\" + d[2] + \"/\" + d[0] + \"/\" + d[1] + \".png\"; })\n      .style(\"left\", function(d) { return (d[0] << 8) + \"px\"; })\n      .style(\"top\", function(d) { return (d[1] << 8) + \"px\"; });\n}\n\nfunction matrix3d(scale, translate) {\n  var k = scale / 256, r = scale % 1 ? Number : Math.round;\n  return \"matrix3d(\" + [k, 0, 0, 0, 0, k, 0, 0, 0, 0, k, 0, r(translate[0] * scale), r(translate[1] * scale), 0, 1 ] + \")\";\n}\n\nfunction prefixMatch(p) {\n  var i = -1, n = p.length, s = document.body.style;\n  while (++i < n) if (p[i] + \"Transform\" in s) return \"-\" + p[i].toLowerCase() + \"-\";\n  return \"\";\n}\n</script>\n", "description": "Basic d3 Example", "created_at": "2013-03-12T22:15:06Z", "updated_at": "2015-12-14T20:58:58Z", "api": ["d3.geo.tile", "d3.geo.mercator", "d3.behavior.zoom", "d3.select"], "readme": "Based off of [Mike Bostock's d3.geo.tile example](http://bl.ocks.org/mbostock/4132797).", "uid": "tmcw_5147590"}, {"code": "<html>\n<head>\n  <title>d3.svg.ribbon Example</title>\n  <meta charset=\"utf-8\" />\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"d3.svg.ribbon.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    height: 1000px;\n    width: 1000px;\n  }\n\n</style>\n<body>\n\n<div id=\"viz\">\n  <svg>\n  </svg>\n</div>\n</body>\n  <footer>\n\n<script>\n\nvar points = [{x: 20, y:20, t: 10},{x:200,y:20, t: 5},{x:20,y:200, t: 15},{x:200,y:200, t: 2}];\n\nribbon = d3.svg.ribbon()\n  .x(function(d) {return d.x})\n  .y(function(d) {return d.y})\n  .r(function(d) {return d.t});\n\ndrag = d3.behavior.drag().on(\"drag\", function (d) {\n  d.x = d3.event.x;\n  d.y = d3.event.y;\n  redraw();\n})\n\nd3.select(\"svg\")\n.append(\"path\")\n.style(\"fill\", \"lightblue\")\n.style(\"stroke\", \"blue\")\n.style(\"stroke-opacity\", 0.75)\n.style(\"stroke-width\", \"2px\")\n.attr(\"d\", ribbon(points))\n\nd3.select(\"svg\")\n.selectAll(\"circle\")\n.data(points)\n.enter()\n.append(\"circle\")\n.attr(\"r\", 3)\n.style(\"fill\", \"lightgreen\")\n.style(\"stroke\", \"blue\")\n.style(\"stroke-width\", \"2px\")\n.attr(\"cx\", function (d) {return d.x})\n.attr(\"cy\", function (d) {return d.y})\n.attr(\"r\", function (d) {return d.t})\n.style(\"stroke-opacity\", 0.75)\n.call(drag);\n\nfunction redraw() {\n  d3.selectAll(\"circle\")\n    .attr(\"cx\", function (d) {return d.x})\n    .attr(\"cy\", function (d) {return d.y});\n\n  d3.select(\"path\")\n    .attr(\"d\", ribbon(points));\n}\n\n</script>\n  </footer>\n\n</html>\n", "description": "d3.svg.ribbon example", "created_at": "2015-08-22T20:38:02Z", "updated_at": "2016-03-16T15:48:14Z", "api": ["d3.svg.line", "d3.svg.ribbon", "d3.behavior.drag", "d3.select", "d3.selectAll"], "readme": "An example of [d3.svg.ribbon](https://github.com/emeeks/d3.svg.ribbon).\n\nDrag the circles to see the underlying single `svg:path` element re-interpolated based on the changing position of the points and their radii that are used to generate it. This is a different way of generating areas than `d3.svg.area` and might prove more suitable for some applications.", "uid": "emeeks_a1e48992be56681e3f93"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\ndiv.tooltip {\t\n    position: absolute;\t\t\t\n    text-align: center;\t\t\t\n    width: 60px;\t\t\t\t\t\n    height: 28px;\t\t\t\t\t\n    padding: 2px;\t\t\t\t\n    font: 12px sans-serif;\t\t\n    background: lightsteelblue;\t\n    border: 0px;\t\t\n    border-radius: 8px;\t\t\t\n    pointer-events: none;\t\t\t\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\nvar formatTime = d3.time.format(\"%e %B\");\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n\n// Define the div for the tooltip\nvar div = d3.select(\"body\").append(\"div\")\t\n    .attr(\"class\", \"tooltip\")\t\t\t\t\n    .style(\"opacity\", 0);\n\n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the scatterplot\n    svg.selectAll(\"dot\")\t\n        .data(data)\t\t\t\n    .enter().append(\"circle\")\t\t\t\t\t\t\t\t\n        .attr(\"r\", 5)\t\t\n        .attr(\"cx\", function(d) { return x(d.date); })\t\t \n        .attr(\"cy\", function(d) { return y(d.close); })\t\t\n        .on(\"mouseover\", function(d) {\t\t\n            div.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", .9);\t\t\n            div\t.html(formatTime(d.date) + \"<br/>\"  + d.close)\t\n                .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\t\n            div.transition()\t\t\n                .duration(500)\t\t\n                .style(\"opacity\", 0);\t\n        });\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>\n", "description": "Simple d3.js tooltips", "created_at": "2014-06-22T18:24:10Z", "updated_at": "2016-03-14T18:37:43Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple scatterplot](http://bl.ocks.org/d3noob/38744a17f9c0141bcd04) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at demonstrating a simple tooltip using d3.js and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_a22c42db65eb00d4e369"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.fill {\n  fill: #ccc;\n}\n\n.stroke {\n  fill: none;\n  stroke: #000;\n  stroke-width: 20px;\n}\n\n</style>\n<svg width=\"960\" height=\"500\" viewBox=\"-2 -2 100 95\">\n  <defs>\n    <path id=\"dee\" d=\"M0,0h7.75a45.5,45.5 0 1 1 0,91h-7.75v-20h7.75a25.5,25.5 0 1 0 0,-51h-7.75z\"/>\n    <path id=\"three\" d=\"M36.2510,0h32a27.75,27.75 0 0 1 21.331,45.5a27.75,27.75 0 0 1 -21.331,45.5h-32a53.6895,53.6895 0 0 0 18.7464,-20h13.2526a7.75,7.75 0 1 0 0,-15.5h-7.75a53.6895,53.6895 0 0 0 0,-20h7.75a7.75,7.75 0 1 0 0,-15.5h-13.2526a53.6895,53.6895 0 0 0 -18.7464,-20z\"/>\n    <clipPath id=\"clip-three\">\n      <use xlink:href=\"#three\"/>\n    </clipPath>\n  </defs>\n  <use class=\"fill\" xlink:href=\"#dee\"/>\n  <use class=\"fill\" xlink:href=\"#three\"/>\n  <path class=\"stroke\" style=\"display:none;\" d=\"M0,10h7.75a35.5,35.5 0 1 1 0,71h-7.75\"/>\n  <path class=\"stroke\" style=\"display:none;\" clip-path=\"url(#clip-three)\" d=\"M36.2510,10h32a17.75,17.75 0 0 1 0,35.5h-7.75h7.75a17.75,17.75 0 0 1 0,35.5h-32\"/>\n</svg>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nd3.select(this)\n    .on(\"touchstart\", animate)\n    .on(\"click\", animate)\n    .on(\"load\", animate);\n\nfunction animate() {\n  var delay = 0,\n      stroke = d3.selectAll(\".stroke\");\n\n  // First cancel any active or scheduled transitions.\n  stroke.interrupt().transition();\n\n  // Then schedule the new transition.\n  stroke.transition().each(function() {\n    var length = this.getTotalLength(),\n        duration = length * 10;\n\n    d3.select(this)\n        .style(\"display\", null)\n        .style(\"stroke-dasharray\", \"0,\" + length)\n      .transition()\n        .delay(delay)\n        .duration(duration)\n        .style(\"stroke-dasharray\", length + \",\" + length);\n\n    delay += duration;\n  });\n}\n\n</script>\n", "description": "Animated D3 Logo", "created_at": "2015-11-07T20:15:01Z", "updated_at": "2015-11-07T20:15:01Z", "api": ["d3.select", "d3.selectAll"], "readme": "Animating the [D3 logo](/mbostock/c9455b842a01f6907020) as if it were being drawn by hand.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/bc4e32ec71636b498c46'>Animated D3 Logo</a>", "uid": "wcjohnson11_7fb5012dc2a9643541ac"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #000;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<!--<script src=\"http://d3js.org/d3.v3.min.js\"></script>-->\n<script>\n\nvar data = [5,10,-3,100, 123, 11, 225];\n\nvar margin = {top: 20, right: 40, bottom: 40, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar xscale = d3.scale.linear()\n            .domain([0, data.length])\n            .range([0, width]);\n\nvar yscale = d3.scale.linear()\n            .domain(d3.extent(data))\n            .range([height, 0]);\n\nvar zoom = d3.behavior.zoom()\n    .x(xscale)\n    .y(yscale)\n    .on(\"zoomstart\", zoom_start)\n    .on(\"zoom\", zoomed)\n    .on(\"zoomend\", zoom_end);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n        .attr(\"class\", \"zoom-rect\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    .on(\"mousedown\", mousedowned)\n    .call(zoom);\n\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .style(\"fill\", \"none\")\n    .style(\"pointer-events\", \"all\");\n\n\nvar brushstart = function(){\n\n    console.log(\"brushstart\" + this);\n    console.log(d3.event);\n};\n\nvar brushmove = function(){\n\n    console.log(\"brush\" + this);\n    console.log(d3.event);\n};\n\nvar brushend = function(){\n    console.log(\"brushend\" + this);\n    console.log(d3.event);\n};\n\n// brush for selecting areas\nvar make_brush = d3.svg.brush()\n    .on(\"brushstart\", brushstart)\n    .on(\"brush\", brushmove)\n    .on(\"brushend\", brushend)\n        .x(xscale);\n\n\nvar check_mousemove = function(){\n    var stop = d3.event.button != 0;\n    if (stop) d3.event.stopImmediatePropagation(); // stop zoom\n\n    var new_click_event = new Event('mousedown');\n    new_click_event.pageX = d3.event.pageX;\n    new_click_event.clientX = d3.event.clientX;\n    new_click_event.pageY = d3.event.pageY;\n    new_click_event.clientY = d3.event.clientY;\n    console.log(\"redirect to zoom\");\n    console.log(new_click_event);\n\n    svg.node()\n       .dispatchEvent(new_click_event);\n\n};\n\n\nsvg.append(\"g\")\n      .attr(\"class\", \"x brush\")\n      .attr(\"width\", width )\n    .attr(\"height\", height )\n        //.on(\"mousedown\", check_mousemove)\n        //.on(\"mousemove\", check_mousemove)\n      .call(make_brush)\n      //.call(zoom)\n    .selectAll(\"rect\")\n      .attr(\"height\", height);\n\nvar container = svg.append(\"g\");\n\nvar line  = d3.svg.line()\n        .x(function(d,i) {return xscale(i)})\n        .y(function(d) {return yscale(d)});\n\ncontainer.append(\"g\")\n    .attr(\"class\", \"lines\")\n  .append(\"path\")\n    .attr(\"class\", \"line\")\n    .datum(data)\n    .attr(\"d\", line)\n        .style(\"fill\", \"none\")\n        .style(\"stroke\", \"#000\");\n\nfunction make_axis(scale, orient){\n            return d3.svg.axis()\n                    .scale(scale)\n                    .orient(orient)\n}\n\n// create axis\ncontainer.append(\"g\")\n    .attr(\"class\", \"axis axis--x\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(make_axis(xscale, \"bottom\"));\n\ncontainer.append(\"g\")\n    .attr(\"class\", \"axis axis--y\")\n    .call(make_axis(yscale, \"left\"));\n\n\nfunction zoom_start(){\n    console.log(\"zoom start\");\n    console.log(d3.event);\n}\n\nfunction zoomed() {\n    d3.select(\".axis--x\")\n        .call(make_axis(xscale, \"bottom\"));\n\n    d3.select(\".axis--y\")\n        .call(make_axis(yscale, \"left\"));\n\n    d3.select(\".line\")\n            .attr(\"d\", line);\n}\n\nfunction zoom_end(){\n    console.log(\"zoom end\");\n    console.log(d3.event);\n}\n\nfunction mousedowned() {\n  var stop = d3.event.button != 1;\n  if (stop) d3.event.stopImmediatePropagation(); // stop zoom\n\n\n  svg.append(\"circle\")\n      .attr(\"transform\", \"translate(\" + d3.mouse(this) + \")\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", stop ? \"red\" : \"green\")\n      .style(\"stroke-width\", \"3px\")\n      .style(\"stroke-opacity\", 1)\n    .transition()\n      .ease(Math.sqrt)\n      .duration(500)\n      .attr(\"r\", 12)\n      .style(\"stroke-opacity\", 0)\n          .each(\"end\", function() {d3.select(this).remove()});\n}\n\n</script>\n", "description": "d3 zoom and brush test", "created_at": "2015-10-12T06:40:55Z", "updated_at": "2015-10-12T06:40:55Z", "api": ["d3.scale.linear", "d3.extent", "d3.behavior.zoom", "d3.select", "d3.svg.brush", "d3.event.stopImmediatePropagation", "d3.svg.line", "d3.svg.axis", "d3.mouse"], "readme": "This [d3.js block] [d3b] tries to combine the zoom and brush behaviour of d3.\n\nLeft click should change the brush (create brush, change brush size, move brush) and middle click shoule move the graph with zoom behaviour (and not change the brush).\nMousewheel can be used for zooming.\n\nSee [Stack Overflow] [so] for question regarding the problem.\n\n[so]: http://stackoverflow.com/questions/23910711/how-to-handle-brush-on-left-click-and-zoom-on-middle-click-in-d3-js\n[d3b]: http://bl.ocks.org/bobatsar/9403d59b12e33a0925cb\n\nforked from <a href='http://bl.ocks.org/bobatsar/'>bobatsar</a>'s block: <a href='http://bl.ocks.org/bobatsar/9403d59b12e33a0925cb'>d3 zoom and brush test</a>", "uid": "faniepotgieter_2ebcb3004abe34c380cc"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Simple Chloropleth 2</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n.wards {\n    fill: gray;\n    stroke: gray;\n    stroke-width: 1px;\n}\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    map.setScale(9)\n    map.centerOn([-0.1275,51.507],\"latlong\");\n\n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\")\n    \n    topojsonLayer = d3.carto.layer();\n    topojsonLayer\n    .type(\"topojson\")\n    .path(\"http://bl.ocks.org/emeeks/raw/80dc1e4c11586c47a266/glondon.topojson\")\n    .label(\"London Wards\")\n    .cssClass(\"wards\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true)\n    .on(\"load\", colorBySize);\n\n    map.addCartoLayer(tileLayer);\n    map.addCartoLayer(topojsonLayer);\n    \n// Function is called on load because it won't have anything to apply to until the layer is loaded\n    function colorBySize() {\n    var featureData = topojsonLayer.features();\n    var sizeExtent = d3.extent(featureData, function (d) {return d.properties.w_size})\n    var sizeScale = d3.scale.quantile().domain(sizeExtent).range(colorbrewer.Greens[5]);\n\n      d3.selectAll(\"path.wards\")\n      .style(\"fill\", function (d) {return sizeScale(d.properties.w_size)})\n    \n        //Some simple hover behavior\n    d3.selectAll(\"path.wards\").style(\"pointer-events\", \"auto\").on(\"mouseover\", wardOver).on(\"mouseout\", wardOut);\n    \n    function wardOver(d,i) {\n      d3.selectAll(\"path.wards\").style(\"opacity\", function (p) {return p.properties.region == d.properties.region ? .3 : 1})\n    }\n\n    function wardOut(d,i) {\n      d3.selectAll(\"path.wards\").style(\"opacity\", 1)\n    }\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Choropleth 2 - d3.carto.map", "created_at": "2014-07-14T23:08:37Z", "updated_at": "2015-08-29T14:03:58Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer", "d3.extent", "d3.scale.quantile", "d3.selectAll"], "readme": "A simple choropleth map made with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nAfter adding a tile layer and a topojson layer, you can access the features either by using map.layers() or the layer if assigned to a variable or via d3.selectAll.data() on the appropriate elements. You can then style the features based on their properties. In this case, the size of the ward.\n\nSome hover behavior can also be defined using D3. Here we the wards in a shared region are turned semi-transparent.", "uid": "emeeks_c5c36485442d1779581d"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - globe mode</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .reproject {\n    position: absolute;\n    z-index: 99;\n    left: 50px;\n    top: 250px;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    map.mode(\"globe\");\n\n    map.refresh();\n\n    wcLayer = d3.carto.layer.tile();\n    wcLayer\n    .tileType(\"stamen\")\n    .path(\"watercolor\")\n    .label(\"Watercolor\")\n    .visibility(true)\n\n    tonerLayer = d3.carto.layer.tile();\n    tonerLayer\n    .tileType(\"stamen\")\n    .path(\"toner\")\n    .visibility(false)\n    .label(\"Toner\")\n    \n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"SVG Borders\")\n    .cssClass(\"thickborders\")\n    .renderMode(\"svg\")\n    .on(\"load\", selectFeatures);\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(2)\n    .x(\"x\")\n    .y(\"y\");\n\n    map.addCartoLayer(wcLayer).addCartoLayer(tonerLayer).addCartoLayer(geojsonLayer).addCartoLayer(csvLayer);\n    \n      function selectFeatures() {\n\n    fNamedCountries = geojsonLayer.features().filter(function (d) {return d.properties.name.length < 6});\n\n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(fNamedCountries)\n    .label(\"featureArray\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\");\n\n      map.addCartoLayer(featureLayer);\n\n    }\n    \n    d3.select(\"#map\").append(\"button\").attr(\"class\", \"reproject\").html(\"Transform\").on(\"click\", reproject);\n    \n    function reproject() {\n      if (d3.select(\"button.reproject\").html() == \"Transform\") {\n        d3.select(\"button.reproject\").html(\"Projection\")\n        map.mode(\"transform\");\n        map.refresh();\n      }\n      else if (d3.select(\"button.reproject\").html() == \"Globe\") {\n        d3.select(\"button.reproject\").html(\"Transform\")\n        map.mode(\"globe\");\n        map.refresh();        \n      }\n      else {\n        d3.select(\"button.reproject\").html(\"Globe\")\n        map.mode(\"projection\");\n        map.refresh();        \n      }\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Stamen Tiles - d3.carto.map", "created_at": "2015-09-08T08:43:47Z", "updated_at": "2015-09-08T08:43:47Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.csv", "d3.carto.layer.featureArray"], "readme": "Various **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** modes with Stamen tiles from [http://maps.stamen.com/#toner/12/37.7706/-122.3782](http://maps.stamen.com/#toner/12/37.7706/-122.3782).\n\nClick the button to cycle through map modes to see the difference between Transform, Projection and Globe modes.", "uid": "renecnielsen_c072f8145713cb3f0bde"}, {"code": "<!DOCTYPE html>\n<style>\n\tbody {\n\t\tfont-family: 'Open Sans', sans-serif;\n    font-size: 12px;\n\t}\n  .graph {\n    text-align: center;\n  }\n  svg {\n    background-color: #333947;\n  }\n\t.title {\n    font-size: 16px;\n\t\tfont-weight: bold;\n    fill: #fff;\n\t}\n  .caption {\n    fill: #ccc;\n  }\n\t.axis path,\n\t.axis line {\n    fill: none;\n    stroke: #eee;\n    shape-rendering: crispEdges;\n\t}\n  .axis text {\n    fill: #fff;\n  }\n\t.loading {\n    font-size: 15px;\n\t}\n  .plot {\n    fill-opacity: 0.75;\n  }\n\n  .conflict0 { fill: #4990BF; }\n\t.conflict1 { fill: #FF6363; }\n\t.conflict2 { fill: #738b8c; }\n\t.conflict3 { fill: #BC63FF; }\n\t.conflict4 { fill: #EFFF63; }\n\t.conflict5 { fill: #FF3D3D; }\n\t.conflict6 { fill: #496EBF; }\n  .conflict7 { fill: #cda2a2; }\n  .conflict8 { fill: #E563FF; }\n  .conflict9 { fill: #63D8FF; }\n\n  .circle {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n  .circle:hover {\n    stroke: #000;\n    stroke-width: 2px;\n  }\n  .title-tip,\n  .body-tip {\n    line-height: 1;\n    padding: 12px;\n    background: #000;\n    color: #fff;\n    line-height: 14px;\n    border-radius: 2px;\n    pointer-events: none;\n    text-align: center;\n  }\n\n  .body-tip {\n    max-width: 250px;\n  }\n\n  .title-tip div {\n    font-size: 10px;\n    color: #ccc;\n  }\n\n  /* Creates a small triangle extender for the tooltip */\n  .title-tip:after {\n    box-sizing: border-box;\n    display: inline;\n    font-size: 10px;\n    width: 100%;\n    line-height: 1;\n    color: #000;\n    position: absolute;\n    pointer-events: none;\n  }\n\n  .title-tip.n:after {\n    content: \"\\25BC\";\n    margin: -1px 0 0 0;\n    top: 100%;\n    left: 0;\n    text-align: center;\n  }\n\n  .button {\n    height: 25px;\n    width: 125px;\n    stroke: #ccc;\n    stroke-width: 2px;\n    fill: #333947;\n  }\n\n  .button:hover,\n  .button-text:hover {\n    cursor: pointer;\n  }\n\n  .button-active {\n    stroke: #fff;\n    fill: #fff;\n  }\n\n  .button-text {\n    fill: #ccc;\n  }\n\n  .button-text-active {\n    fill: #000;\n  }\n</style> \n\n<div id=\"graph\" class=\"graph\"></div>\n \n<script src=\"http://d3js.org/d3.v2.min.js\"></script>\n<script src=\"http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js\"></script>\n\n<script>\n  var w = 1500;\n  var h = 800;\n  var pad = 40;\n  var above = 125;\n  var left = 225;\n\n  var titleTip = d3.tip()\n                   .attr('class', 'title-tip')\n                   .offset([-3, 0])\n                   .html(function(d) {\n                    return \"<strong>\" + d.title + \"</strong><div>\" + d.pageedits + \" page edits</div>\";\n                   });\n\n  var bodyTip = d3.tip()\n                  .attr('class', 'body-tip')\n                  .html(function(d) { return d.description; });\n   \n  var svg = d3.select(\"#graph\")\n              .append(\"svg\")\n              .attr(\"width\", w)\n              .attr(\"height\", h)\n              .call(titleTip)\n              .call(bodyTip);\n\n  var x = d3.scale.linear().domain([2001, 2006]).range([left, w-pad]);\n  var y = d3.scale.linear().domain([0, 9]).range([above, h-pad-above]);\n   \n  var xAxis = d3.svg.axis().scale(x).orient(\"bottom\")\n    .ticks(6)\n    .tickFormat(d3.format(\"d\"))\n\n  var yAxis = d3.svg.axis().scale(y).orient(\"left\")\n    .ticks(10)\n    .tickFormat(function (d, i) {\n      return ['Technicality','Political','Ethical','Ethnic','International Words','Religion','Culture','Animal Rights','Star Wars','Other'][d];\n    });\n\n  svg.append(\"text\")\n    .attr(\"class\", \"title\")\n    .attr(\"x\", w/2)\n    .attr(\"y\", above/3)\n    .attr(\"text-anchor\", \"middle\")\n    .text(\"Most Debated Wikipedia Articles (2010)\");\n\n  svg.append(\"text\")\n    .attr(\"class\", \"caption\")\n    .attr(\"x\", w/2)\n    .attr(\"y\", above/3+18)\n    .attr(\"text-anchor\", \"middle\")\n    .text(\"Click each circle to read more!\");\n   \n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", \"translate(0, \"+(h-pad)+\")\")\n      .call(xAxis);\n   \n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", \"translate(\"+(left-pad)+\", 0)\")\n      .call(yAxis);\n   \n  svg.append(\"text\")\n      .attr(\"class\", \"loading\")\n      .text(\"Loading...\")\n      .attr(\"x\", function () { return w/2; })\n      .attr(\"y\", function () { return h/2-5; });\n   \n  d3.json(\"data.json\", function (data) {\n    var max_r = d3.max(data.map(function (d) { return d.pageedits; }));\n    var r1 = d3.scale.linear()\n              .domain([0, d3.max(data, function (d) { return d.pageedits; })])\n              .range([3, 100]);\n\n    var r2 = d3.scale.linear()\n              .domain([0, d3.max(data, function (d) { return d.pagesofdiscussion; })])\n              .range([3, 100]);\n\n    var displayCircles = function(flag) {\n      data.sort(function(a,b) {\n        var i,j;\n        if (flag == 0) {\n          i = a.pageedits;\n          j = b.pageedits;\n        } else {\n          i = a.pagesofdiscussion;\n          j = b.pagesofdiscussion;\n        }\n        if (i > j)\n          return -1;\n        if (i < j)\n          return 1;\n        return 0;\n      });\n\n      svg.selectAll(\"circle\").remove();\n      svg.selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", function (d) { return \"circle conflict\"+d.conflicttype; })\n        .attr(\"cx\", function (d) { return x(d.creationdate); })\n        .attr(\"cy\", function (d) { return y(d.conflicttype); })\n        .on('mouseover', titleTip.show)\n        .on('mouseout', function(d) {\n          titleTip.hide();\n          bodyTip.hide(d);\n        })\n        .on('click', function (d) {\n          titleTip.hide();\n          bodyTip.show(d);\n        })\n        .transition()\n        .duration(800)\n        .attr(\"r\", function (d) {\n          if (flag == 0) {\n            return r1(d.pageedits);\n          } else {\n            return r2(d.pagesofdiscussion);\n          }\n        });\n\n      titleTip.html(function(d) {\n        if (flag == 0) {\n          return \"<strong>\" + d.title + \"</strong><div>\" + d.pageedits + \" page edits</div>\";\n        } else {\n          return \"<strong>\" + d.title + \"</strong><div>\" + d.pagesofdiscussion + \" pages of discussion</div>\";\n        }\n      });\n    }\n\n    var toggleButton = function (flag) {\n      if (flag == 0) {\n        button1.attr(\"class\", \"button button-active\");\n        button2.attr(\"class\", \"button\");\n        buttonText1.attr(\"class\", \"button-text button-text-active\");\n        buttonText2.attr(\"class\", \"button-text\");\n      } else {\n        button1.attr(\"class\", \"button\");\n        button2.attr(\"class\", \"button button-active\");\n        buttonText1.attr(\"class\", \"button-text\");\n        buttonText2.attr(\"class\", \"button-text button-text-active\");\n      }\n    }\n \n    svg.selectAll(\".loading\").remove();\n \n    displayCircles(0);\n\n    var button1 = svg.append(\"rect\")\n                     .attr(\"class\", \"button button-active\")\n                     .attr(\"height\", 25)\n                     .attr(\"width\", 125)\n                     .attr(\"x\", left/2)\n                     .attr(\"y\", above/2)\n                     .attr(\"rx\", 5)\n                     .attr(\"ry\", 5)\n                     .on(\"click\", function() {\n                        toggleButton(0);\n                        return displayCircles(0);\n                      });\n\n    var buttonText1 = svg.append(\"text\")\n                     .attr(\"class\", \"button-text button-text-active\")\n                     .attr(\"x\", left/2 + 63)\n                     .attr(\"y\", above/2 + 16)\n                     .attr(\"text-anchor\", \"middle\")\n                     .text(\"Page Edits\")\n                     .on(\"click\", function() {\n                        toggleButton(0);\n                        return displayCircles(0);\n                      });\n\n    var button2 = svg.append(\"rect\")\n                     .attr(\"class\", \"button\")\n                     .attr(\"height\", 25)\n                     .attr(\"width\", 125)\n                     .attr(\"x\", left/2+125)\n                     .attr(\"y\", above/2)\n                     .attr(\"rx\", 5)\n                     .attr(\"ry\", 5)\n                     .on(\"click\", function() {\n                        toggleButton(1);\n                        return displayCircles(1);\n                      });\n\n    var buttonText2 = svg.append(\"text\")\n                     .attr(\"class\", \"button-text\")\n                     .attr(\"x\", left/2 + 188)\n                     .attr(\"y\", above/2 + 16)\n                     .attr(\"text-anchor\", \"middle\")\n                     .text(\"Pages of Discussion\")\n                     .on(\"click\", function() {\n                        toggleButton(1);\n                        return displayCircles(1);\n                      });\n  });\n</script>", "description": "d3.js wiki visualization", "created_at": "2015-11-10T18:11:48Z", "updated_at": "2015-11-10T18:11:48Z", "api": ["d3.tip", "d3.select", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.json", "d3.max"], "readme": "\n\nforked from <a href='http://bl.ocks.org/lilyc5459/'>lilyc5459</a>'s block: <a href='http://bl.ocks.org/lilyc5459/a35687613ab0f4991f37'>d3.js wiki visualization</a>", "uid": "jalapic_af63041b6b5edf373fa3"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n    body {\n        font: 10px sans-serif;\n    }\n\n    .axis path,\n    .axis line {\n        fill: none;\n        stroke: #000;\n        shape-rendering: crispEdges;\n    }\n\n    .x.axis path {\n        display: none;\n    }\n\n    .line {\n        fill: none;\n        stroke: blue;\n        stroke-width: 1.5px;\n    }\n\n    .xValue {\n        fill: #000000;\n        font-weight: bold;\n    }\n\n    .yValue {\n        fill: #999999;\n    }\n\n    .yValue.range {\n        fill: #000000;\n    }\n\n    .xValue.xPos {\n        fill: #44AA44;\n    }\n\n    .xValue.xNeg {\n        fill: #FF3333;\n    }\n</style>\n\n<body>\n    <script src=\"//d3js.org/d3.v3.js\"></script>\n    <script>\n        var margin = {\n                top: 20,\n                right: 20,\n                bottom: 30,\n                left: 50\n            },\n            width = 960 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        var formatDate = d3.time.format(\"%d-%b-%y\");\n\n        var x = d3.time.scale()\n            .range([0, width]);\n\n        var y = d3.scale.linear()\n            .range([height, 0]);\n\n        var touchScaleX = d3.scale.linear();\n        var touchScaleY = d3.scale.linear();\n\n        var xAxis = d3.svg.axis()\n            .scale(x)\n            .orient(\"bottom\");\n\n        var yAxis = d3.svg.axis()\n            .scale(y)\n            .orient(\"left\");\n\n        var line = d3.svg.line()\n            .x(function(d) {\n                return x(d.date);\n            })\n            .y(function(d) {\n                return y(d.close);\n            });\n\n        var svg = d3.select(\"body\").append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        var rect = svg.append('rect')\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .style(\"fill\", \"white\");\n\n        var chartData = [];\n        var pointCoordinates = [];\n\n        d3.tsv(\"data.tsv\", type, function(error, data) {\n            data.sort(function(a, b) {\n                if (a.date.getTime() > b.date.getTime()) {\n                    return 1;\n                } else if (a.date.getTime() < b.date.getTime()) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            });\n            if (error) throw error;\n\n            x.domain(d3.extent(data, function(d) {\n                return d.date;\n            }));\n            y.domain(d3.extent(data, function(d) {\n                return d.close;\n            }));\n\n            chartData = data;\n            data.forEach(function(d) {\n                var localCoordinates = {};\n                localCoordinates.x = x(d.date);\n                localCoordinates.y = y(d.close);\n                pointCoordinates.push(localCoordinates);\n            });\n\n            touchScaleX.domain(pointCoordinates.map(function(d) {\n                return d.x;\n            }));\n            touchScaleX.range(pointCoordinates.map(function(d, i) {\n                return i;\n            })).clamp(true);\n\n            touchScaleY.domain(pointCoordinates.map(function(d) {\n                return d.y;\n            }));\n            touchScaleY.range(pointCoordinates.map(function(d, i) {\n                return i;\n            })).clamp(true);\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xAxis);\n\n            svg.append(\"g\")\n                .attr(\"class\", \"y axis\")\n                .call(yAxis)\n                .append(\"text\")\n                .attr(\"transform\", \"rotate(-90)\")\n                .attr(\"y\", 6)\n                .attr(\"dy\", \".71em\")\n                .style(\"text-anchor\", \"end\")\n                .text(\"Price ($)\");\n\n            svg.append(\"path\")\n                .datum(data)\n                .attr(\"class\", \"line\")\n                .attr(\"d\", line);\n\n            svg.append(\"g\").attr(\"id\", \"touchLayer\");\n        });\n\n        function type(d) {\n            d.date = formatDate.parse(d.date);\n            d.close = +d.close;\n            return d;\n        }\n\n        var boxWidth = 0;\n        var boxHeight = 24;\n\n        function updatePositionsCallbackEvent(positions) {\n            positions.forEach(function(x, posIndex) {\n                var currX = positions[posIndex][0];\n                var currY = positions[posIndex][1];\n                var index = ~~touchScaleX(currX);\n                if (currX > 0 && index < pointCoordinates.length - 1) {\n                    var perc = (currX - pointCoordinates[index].x) / (pointCoordinates[index + 1].x - pointCoordinates[index].x);\n                    if (perc <= 0.5) {\n                        positions[posIndex][0] = pointCoordinates[index].x == 0 ? 1 : pointCoordinates[index].x;\n                        positions[posIndex][1] = pointCoordinates[index].y;\n                    } else {\n                        positions[posIndex][0] = pointCoordinates[index + 1].x;\n                        positions[posIndex][1] = pointCoordinates[index + 1].y;\n                    }\n                }\n            });\n\n            for (var i = 1; i < positions.length; i++) {\n                if (positions[i - 1][0] === positions[i][0]) {\n                    positions.splice(i, 1);\n                    i--;\n                }\n            }\n\n            var lines = svg.select(\"#touchLayer\").selectAll(\"g.touchElements\")\n                .data(positions);\n\n            var touchElements = lines.enter()\n                .append(\"g\").attr(\"class\", \"touchElements\");\n            // boxWidthboxHeight\n\n            touchElements.append(\"circle\")\n                .attr(\"cx\", 0)\n                .attr(\"cy\", 0)\n                .attr(\"r\", 5)\n                .style(\"fill\", \"blue\")\n                .style(\"stroke-width\", 2)\n                .style(\"stroke\", 'blue');\n\n            touchElements.append(\"rect\")\n                .attr(\"height\", boxHeight)\n                .style(\"fill\", \"#EEE\")\n            ;\n            touchElements.append(\"text\")\n                .attr(\"x\", boxWidth / 2)\n                .attr(\"y\", boxHeight / 2)\n                .style(\"font-size\", 14)\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"dominant-baseline\", \"middle\")\n                .style(\"fill\", \"black\")\n                .attr(\"transform\", function(d) {\n                    return \"translate(-\" + boxWidth / 2 + \",0)\"\n                });\n\n            var inlineSpanData = [{\n                text: \"Hello\",\n                class: \"xValue\"\n            }, {\n                text: \"There\",\n                class: \"yValue\"\n            }];\n            var spans = lines.selectAll(\"text\").selectAll(\"tspan\").data(inlineSpanData);\n\n            spans.enter().append(\"tspan\")\n                .text(function(d) {\n                    return d.text;\n                })\n                .attr(\"class\", function(d) {\n                    return d.class;\n                });\n\n            touchElements.append(\"line\")\n                .attr(\"x1\", 0)\n                .attr(\"x2\", 0)\n                .attr(\"y1\", height)\n                .attr(\"y2\", boxHeight)\n                .style(\"stroke-dasharray\", \"1, 2\")\n                .style(\"stroke-width\", 0.5)\n                .style(\"stroke\", 'black')\n                .style(\"fill\", 'black');\n\n\n\n            lines.attr(\"transform\", function(d) {\n                return \"translate(\" + d[0] + \",0)\";\n            });\n\n            var showSeperate = false;\n            if (showSeperate) {\n              lines.selectAll(\"text\")\n                  .each(function(d, i) {\n                      var tspanVal1 = \"Hello\";\n                      var tspanVal2 = \"There\";\n                      var tspanClass1 = \"xValue\";\n                      var tspanClass2 = \"yValue\";\n                      var tspanDx2 = \".4em\";\n                          tspanVal1 = Math.round(y.invert(d3.select(this.parentNode).datum()[1]) * 100) / 100;\n                          tspanVal2 = d3.time.format(\"%b %d, %Y\")(x.invert(d3.select(this.parentNode).datum()[0]));\n                      var tspans = d3.select(this).selectAll('tspan')[0];\n                      d3.select(tspans[0]).text(tspanVal1).attr(\"class\", tspanClass1);\n                      d3.select(tspans[1]).text(tspanVal2).attr(\"class\", tspanClass2).attr(\"dx\", tspanDx2);\n\n                      var bbox = this.getBBox();\n                      if (boxWidth < bbox.width) {\n                          boxWidth = bbox.width + 20;\n                      }\n                  });\n\n                lines.selectAll(\"rect\")\n                    .attr(\"width\", boxWidth)\n                    .attr(\"transform\", function(d) {\n                        d = d3.select(this.parentNode).datum();\n                        if (d[0] < (boxWidth / 2)) {\n                            return \"translate(-\" + (d[0]) + \",0)\";\n                        } else if (d[0] > width - (boxWidth / 2)) {\n                            return \"translate(-\" + (boxWidth - (width - d[0])) + \",0)\";\n                        } else {\n                            return \"translate(-\" + boxWidth / 2 + \",0)\";\n                        }\n                    });\n\n                lines.selectAll(\"text\")\n                    .attr(\"x\", boxWidth / 2)\n                    .attr(\"y\", boxHeight / 2)\n                    .attr(\"transform\", function(d) {\n                        d = d3.select(this.parentNode).datum();\n                        if (d[0] < (boxWidth / 2)) {\n                            return \"translate(-\" + (d[0]) + \",0)\";\n                        } else if (d[0] > width - (boxWidth / 2)) {\n                            return \"translate(-\" + (boxWidth - (width - d[0])) + \",0)\";\n                        } else {\n                            return \"translate(-\" + boxWidth / 2 + \",0)\";\n                        }\n                    });\n            } else {\n                var direction = 1;\n                if (positions[0][0] > positions[positions.length - 1][0])\n                    direction = -1;\n                var padding = 0;\n                boxWidth = 0;\n                lines.selectAll(\"text\")\n                    .each(function(d) {\n                        var tspanVal1 = \"Hello\";\n                        var tspanVal2 = \"There\";\n                        var tspanClass1 = \"xValue\";\n                        var tspanClass2 = \"yValue\";\n                        var tspanDx2 = \".4em\";\n                        if (positions.length === 1) {\n                            tspanVal1 = Math.round(y.invert(d3.select(this.parentNode).datum()[1]) * 100) / 100;\n                            tspanVal2 = d3.time.format(\"%b %d, %Y\")(x.invert(d3.select(this.parentNode).datum()[0]));\n                        } else {\n                            var val1 = y.invert(positions[direction == 1 ? 0 : positions.length - 1][1]);\n                            var val2 = y.invert(positions[direction == -1 ? 0 : positions.length - 1][1]);\n                            var diff = Math.round((val2 - val1) * 100) / 100;\n                            if (diff >= 0) {\n                                tspanClass1 += \" xPos\";\n                            } else {\n                                tspanClass1 += \" xNeg\";\n                            }\n                            tspanClass2 += \" range\";\n                            var perc = ((val2 - val1) * 100 / val1)\n                            tspanVal1 = diff + \"(\" + Math.round(perc) + \"%)\";\n                            tspanVal2 = d3.time.format(\"%b %d, %Y\")(x.invert(positions[direction == 1 ? 0 : positions.length - 1][0])) + '-' + d3.time.format(\"%b %d, %Y\")(x.invert(positions[direction == -1 ? 0 : positions.length - 1][0]));\n                            tspanDx2 = \"1em\";\n                        }\n                        var tspans = d3.select(this).selectAll('tspan')[0];\n                        d3.select(tspans[0]).text(tspanVal1).attr(\"class\", tspanClass1);\n                        d3.select(tspans[1]).text(tspanVal2).attr(\"class\", tspanClass2).attr(\"dx\", tspanDx2);\n\n                        var bbox = this.getBBox();\n                        if (boxWidth < bbox.width) {\n                            //padding += (bbox.width - boxWidth)/2;\n                            boxWidth = bbox.width + 20;\n                        }\n                    });\n\n                if (boxWidth < (positions[direction == -1 ? 0 : positions.length - 1][0] - positions[direction == 1 ? 0 : positions.length - 1][0])) {\n                    boxWidth = (positions[direction == -1 ? 0 : positions.length - 1][0] - positions[direction == 1 ? 0 : positions.length - 1][0])\n                } else {\n                    padding = (boxWidth - (positions[direction == -1 ? 0 : positions.length - 1][0] - positions[direction == 1 ? 0 : positions.length - 1][0])) / 2\n                }\n                console.log(\"*****\");\n                lines.selectAll(\"rect\")\n                    .attr(\"width\", boxWidth)\n                    .attr(\"transform\", function(d, i) {\n                        d[0] = d3.select(this.parentNode).datum()[0];\n                        var diff = 0;\n                        if (positions.length === 1) {\n                            if (d[0] < (boxWidth / 2)) {\n                                diff += (boxWidth / 2) - d[0];\n                            } else if (d[0] > width - (boxWidth / 2)) {\n                                diff -= d[0] - (width - (boxWidth / 2));\n                            }\n                        } else {\n                            diff = positions[direction == 1 ? 0 : positions.length - 1][0] - d3.select(this.parentNode).datum()[0];\n                            if (d[0] - (-diff + padding) < 0) {\n                                diff -= d[0] - (-diff + padding);\n                            } else if (d[0] - (-diff + padding) + (boxWidth) > width) {\n                                diff -= d[0] - (-diff + padding) + (boxWidth) - width;\n                            }\n                        }\n                        return \"translate(-\" + (-diff + padding) + \",0)\";\n                    });\n\n                lines.selectAll(\"text\")\n                    .attr(\"x\", boxWidth / 2)\n                    .attr(\"y\", boxHeight / 2)\n                    .attr(\"transform\", function(d) {\n                        d[0] = d3.select(this.parentNode).datum()[0];\n                        var diff = 0;\n                        if (positions.length === 1) {\n                            if (d[0] < (boxWidth / 2)) {\n                                diff += (boxWidth / 2) - d[0];\n                            } else if (d[0] > width - (boxWidth / 2)) {\n                                diff -= d[0] - (width - (boxWidth / 2));\n                            }\n                        } else {\n                            diff = positions[direction == 1 ? 0 : positions.length - 1][0] - d3.select(this.parentNode).datum()[0];\n                            if (d[0] - (-diff + padding) < 0) {\n                                diff -= d[0] - (-diff + padding);\n                            } else if (d[0] - (-diff + padding) + (boxWidth) > width) {\n                                diff -= d[0] - (-diff + padding) + (boxWidth) - width;\n                            }\n                        }\n                        return \"translate(-\" + (-diff + padding) + \",0)\";\n                    });\n            }\n\n            lines.selectAll(\"circle\").attr(\"transform\", function(d) {\n                var currX = d3.select(this.parentNode).datum()[0];\n                var currY = d3.select(this.parentNode).datum()[1];\n                var index = ~~touchScaleX(d3.select(this.parentNode).datum()[0]);\n                if (currX > 0 && index < pointCoordinates.length - 1) {\n                    //console.log(index, currX, pointCoordinates[index], pointCoordinates[index + 1]);\n                    var perc = (currX - pointCoordinates[index].x) / (pointCoordinates[index + 1].x - pointCoordinates[index].x)\n                    var newY = (perc * (pointCoordinates[index + 1].y - pointCoordinates[index].y)) + pointCoordinates[index].y;\n                    return \"translate(0,\" + newY + \")\";\n                }\n            });\n\n            lines.exit().remove();\n        }\n\n        watchTouchMoveEvents(svg, updatePositionsCallbackEvent);\n\n        function watchTouchMoveEvents(element, updatePositionsCallback) {\n            var isDrag = false;\n            var selectionPoints = [];\n            var touchEventsSupport = false;\n            element.on('mousedown', function(e) {\n                isDrag = true;\n                d3.event.preventDefault();\n            }).on('mouseup', function(e) {\n                isDrag = false;\n                d3.event.preventDefault();\n            }).on('mousemove', function(e) {\n                var coordinates = d3.mouse(this);\n                if (coordinates[0] <= 0 || coordinates[0] >= width)\n                    return;\n                if (touchEventsSupport === false) {\n                    if (isDrag === false) {\n                        selectionPoints = [];\n                        selectionPoints[0] = coordinates;\n                    } else {\n                        selectionPoints[1] = coordinates;\n                    }\n                    updatePositions();\n                } else {\n                    d3.event.preventDefault();\n                }\n            }).on(\"touchstart\", function(e) {\n                touchEventsSupport = true;\n                var coordinates = d3.touches(this);\n                if (coordinates[0] <= 0 || coordinates[0] >= width)\n                    return;\n                selectionPoints = coordinates;\n                updatePositions();\n            }).on(\"touchmove\", function(e) {\n                var coordinates = d3.touches(this);\n                if (coordinates[0] <= 0 || coordinates[0] >= width)\n                    return;\n                selectionPoints = coordinates;\n                updatePositions();\n            }).on(\"touchend\", function(e) {\n                // do nothing\n                // var coordinates = d3.touches(this); // selectionPoints = coordinates; //updatePositions();\n                // d3.select(\"#events\").append(\"div\").text(\"touchend:\" + coordinates);\n            });\n\n            var timer = 0;\n\n            function updatePositions() {\n                d3.event.preventDefault();\n                clearTimeout(timer);\n                timer = setTimeout(updatePositionsFinal, 0);\n            }\n\n            function updatePositionsFinal() {\n                updatePositionsCallback(selectionPoints);\n            }\n        }\n    </script>\n    <div id=\"events\">\n\n    </div>\n</body>\n", "description": "Line chart like google stock chart with Touch support", "created_at": "2016-02-26T14:03:57Z", "updated_at": "2016-04-14T15:49:37Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.event.preventDefault", "d3.mouse", "d3.touches"], "readme": "For reference, I have taken sample code from Mike Bostock's  [Line Chart Example](http://bl.ocks.org/mbostock/3883245).\nMade few changes to handle touch and mouse move/drag \n", "uid": "darshit-shah_3b0327f5e04f89887a4f"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Managing Layers of Different Types</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    fill-opacity: .25;\n    fill: #4682B4;\n    stroke-opacity: 1;\n    stroke: black;\n    stroke-width: 2px;\n  }\n\n  .country-gray {\n    opacity: .25;\n    fill: lightgray;\n    stroke: lightgray;\n    stroke-width: 1;\n  }\n\n  .country-red {\n    fill-opacity: .25;\n    fill: darkred;\n    stroke: black;\n    stroke-width: 1;\n  }\n  \n  .capital {\n    fill: white;\n    stroke: black;\n    stroke-width: 2px;\n  }\n</style>\n<script>\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    terrainLayer = d3.carto.layer.tile();\n    \n    terrainLayer\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Terrain\");\n\n    countryLayer = d3.carto.layer.topojson();\n    \n    countryLayer.path(\"world.topojson\")\n    .label(\"Countries\")\n    .renderMode(\"canvas\")\n    .specificFeature(\"world\")\n    .cssClass(\"country-gray\")\n    .on(\"load\", showHighGDP)\n    .visibility(false);\n    \n    capitalLayer = d3.carto.layer.csv();\n    capitalLayer\n    .path(\"worldcapitals.csv\")\n    .label(\"Capitals\")\n    .cssClass(\"capital\")\n    .renderMode(\"svg\")\n    .markerSize(3)\n    .x(\"x\")\n    .y(\"y\")\n    .clickableFeatures(true)\n    .on(\"load\", loadXYArray);\n\n    map.addCartoLayer(terrainLayer)\n    map.addCartoLayer(countryLayer)\n    .addCartoLayer(capitalLayer);\n    map.setScale(2);\n    \n    function loadXYArray() {\n    d3.csv(\"worldcapitals.csv\", highPopCapitals);\n    \n    function highPopCapitals(data) {\n      highPop = data.filter(function(d) {return d.population > 3000000});\n      \n      highPopCapitals = d3.carto.layer.xyArray();\n      \n      highPopCapitals\n      .features(highPop)\n      .label(\"High Population Capitals\")\n      .cssClass(\"capital\")\n      .renderMode(\"svg\")\n      .markerSize(10)\n      .x(\"x\")\n      .y(\"y\")\n      .clickableFeatures(true);\n      \n      map.addCartoLayer(highPopCapitals);\n    }\n    }\n    \n    function showHighGDP() {\n      highGDPCountries = countryLayer.features().filter(function(d) {return d.properties.gdp > 1000});\n      \n      highGDPLayer = d3.carto.layer.featureArray();\n      \n      highGDPLayer\n      .features(highGDPCountries)\n    .label(\"High GDP\")\n    .renderMode(\"svg\")\n    .cssClass(\"country-red\")\n    .clickableFeatures(true);\n    \n    map.addCartoLayer(highGDPLayer)\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Managing Layers - d3.carto", "created_at": "2014-09-20T20:01:24Z", "updated_at": "2015-08-29T14:06:44Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.csv", "d3.carto.layer.xyArray", "d3.carto.layer.featureArray"], "readme": "A map example created with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** that loads feature, tile and point layers using the various methods available in d3.carto.", "uid": "emeeks_e1e661f4696af856e017"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - modal infobox</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\nrect.bluesquare {\n    fill: #4682B4;\n    stroke: black;\n    stroke-width: 1px;\n}\n.countryborders {\n    fill: rgba(0,0,0,0);\n    stroke-width: 1px;\n    stroke: gray;\n    cursor: pointer;\n}\n\n.roads {\n    stroke: brown;\n    stroke-width: 1px;\n    fill: none;\n}\n\n.halffilledcountries {\n    fill: rgba(224,224,209,0.5);\n    stroke-width: 1px;\n    stroke: black;\n    opacity: 1;    \n}\n</style>\n<script>\n  \n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    tileLayer = d3.carto.layer.tile();\n    tileLayer\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\")\n    .on(\"load\", recenter);\n\n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoBorders\")\n    .cssClass(\"countryborders\")\n    .renderMode(\"canvas\")\n    .on(\"load\", createFeatureLayer);\n    \n    topojsonLayer = d3.carto.layer.topojson();\n    topojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n    .label(\"TopoRoutes\")\n    .cssClass(\"roads\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true);\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .type(\"csv\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(6)\n    .x(\"x\")\n    .y(\"y\")\n    .clickableFeatures(true);\n\n    map.addCartoLayer(tileLayer);\n    map.addCartoLayer(topojsonLayer);\n    map.addCartoLayer(geojsonLayer);\n    map.addCartoLayer(csvLayer);\n\n    function recenter() {\n      map.centerOn([-0.1275,51.507],\"latlong\",2000);\n    }\n\n    function createFeatureLayer() {\n      var featuresArray = [];\n      var mapLayers = map.layers();\n      mapLayers.forEach(function (layer) {\n        if (layer.label() == \"GeoBorders\") {\n          featuresArray = layer.features();\n        }\n      })\n     shortNameCountries = featuresArray.filter(function(d) {return d.properties.name.length < 7})\n\n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(shortNameCountries)\n    .label(\"Feature Array\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true); \n    \n    map.addCartoLayer(featureLayer);\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Modal Infoboxes - d3.carto.map", "created_at": "2014-08-26T16:04:24Z", "updated_at": "2015-08-29T14:05:41Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.carto.layer.featureArray"], "readme": "A demonstration of modal infoboxes from **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nClick on any line, square, or area to see a modal infobox. By setting cartoLayer.clickableFeatures(true) then any SVG points or features will create a modal dialogue with the attributes of that feature. If the feature has a \"Name\" or \"Label\" attribute, that will be used as the title for the infobox.\n\nYou can modify the contents of the modal and how it processes the data associated with a feature by using d3.carto.modal and its built-in formatter, which is explained in the [custom infobox example](http://bl.ocks.org/emeeks/905bb4f399e0855e08fe).", "uid": "emeeks_433a9b04f82a1c78af4b"}, {"code": "<!-- load in D3 and Chart constructor scripts -->\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.17/d3.min.js\"></script>\n<script src=\"chart.js\"></script>\n\n<style>\n/* a little bit of CSS to make the chart readable */\n.axis path, .tick line {\n    fill: none;\n    stroke: #333;\n}\n</style>\n\n<!-- here's the div our chart will be injected into -->\n<div class=\"chart-container\" style=\"max-width: 1000px;\"></div>\n\n<!-- these will be made useful in the script below -->\n<button class=\"color\" data-color=\"red\">red bars</button>\n<button class=\"color\" data-color=\"green\">green bars</button>\n<button class=\"color\" data-color=\"blue\">blue bars</button>\n<button class=\"data\">change data</button>\n\n<script>\n// create new chart using Chart constructor\nvar chart = new Chart({\n\telement: document.querySelector('.chart-container'),\n    data: d3.range(1000).map(d3.random.normal()),\n    bins: 20\n});\n\n// change line colour on click\nd3.selectAll('button.color').on('click', function(){\n    var color = d3.select(this).text().split(' ')[0];\n    chart.setColor( color );\n});\n\n// change data on click to something randomly-generated\nd3.selectAll('button.data').on('click', function(){\n    chart.setData(d3.range(1000).map(function(){return Math.random() * 50}));\n});\n\n// redraw chart on each resize\n// in a real-world example, it might be worth \u2018throttling\u2019 this\n// more info: http://sampsonblog.com/749/simple-throttle-function\nd3.select(window).on('resize', function(){\n    chart.draw();\n});\n\n</script>\n", "description": "Reusable D3 Histograms", "created_at": "2016-05-28T08:41:02Z", "updated_at": "2016-05-28T08:41:02Z", "api": ["d3.select", "d3.scale.linear", "d3.extent", "d3.layout.histogram", "d3.max", "d3.svg.axis", "d3.min", "d3.format", "d3.range", "d3.random.normal", "d3.selectAll"], "readme": "A fork of the code from @ejb 's block for his blog post _[\u201cA better way to structure D3 code\u201d](http://ejb.github.io/2016/05/23/a-better-way-to-structure-d3-code.html)_.\n\nCode for the histogram itself was heavily borrowed from [this bl.ock](https://bl.ocks.org/mbostock/3048450) by Mike Bostock. \n\nTakes data in the form of a vector of numerical values. \n\nAlso see my second visualization using @ejb's style: [the dotplot.](http://bl.ocks.org/nstrayer/37a503dd1db369a8f7e3ce21757e19ee)\n\nThis is part of my larger project of making a d3/r library for dynamic and interactive basic statistical plots. \n\n\nforked from <a href='http://bl.ocks.org/nstrayer/'>nstrayer</a>'s block: <a href='http://bl.ocks.org/nstrayer/776ca46537c557e59b994aa439fdb26c'>Reusable D3 Histograms</a>", "uid": "nikkev_d639d254985dd6dd6b4655a10100b197"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - canvas globe</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .reproject {\n    position: absolute;\n    z-index: 99;\n    left: 50px;\n    top: 250px;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\nmap = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    map.mode(\"globe\");\n    map.zoom().scale(350);\n\n    map.refresh();\n\n    wcLayer = d3.carto.layer.tile();\n    wcLayer\n    .tileType(\"stamen\")\n    .path(\"watercolor\")\n    .label(\"Watercolor\")\n    .visibility(false)\n\n    countryLayer = d3.carto.layer.geojson();\n    countryLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"Countries\")\n    .cssClass(\"countryborders\")\n    .renderMode(\"canvas\");\n    \n    cableLayer = d3.carto.layer.geojson();\n    cableLayer\n    .path(\"subcables.geojson\")\n    .label(\"Undersea Cables\")\n    .cssClass(\"roads\")\n    .renderMode(\"canvas\");\n\n    map.addCartoLayer(wcLayer).addCartoLayer(countryLayer).addCartoLayer(cableLayer);\n    \n    d3.select(\"#map\").append(\"button\").attr(\"class\", \"reproject\").html(\"Transform\").on(\"click\", reproject);\n    \n    function reproject() {\n      if (d3.select(\"button.reproject\").html() == \"Transform\") {\n        d3.select(\"button.reproject\").html(\"Projection\")\n        map.mode(\"transform\");\n        map.refresh();\n      }\n      else if (d3.select(\"button.reproject\").html() == \"Globe\") {\n        d3.select(\"button.reproject\").html(\"Transform\")\n        map.mode(\"globe\");\n        map.refresh();        \n      }\n      else {\n        d3.select(\"button.reproject\").html(\"Globe\")\n        map.mode(\"projection\");\n\n    var projection = d3.geo.armadillo()\n    .scale(237)\n    .parallel(20)\n    .rotate([-10, 0])\n    .precision(.1);\n    map.projection(projection);\n\n        map.refresh();        \n      }\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Canvas Layers - d3.carto.map", "created_at": "2014-07-29T06:02:34Z", "updated_at": "2015-08-29T14:04:38Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.geo.armadillo"], "readme": "Drawing **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** layers to canvas is simple, just set the renderMode to \"canvas\" instead of \"svg\". This example shows the various map modes with canvas drawing of vector layers.\n\nClick the button to cycle through map modes to see the difference between Transform, Projection and Globe modes.\n\nUndersea cable geodata and armadillo projection inspiration from [Peter Bakkum's example](https://bl.ocks.org/bakks/9405946). Stamen watercolor map from [http://maps.stamen.com/#toner/12/37.7706/-122.3782](http://maps.stamen.com/#toner/12/37.7706/-122.3782).", "uid": "emeeks_37dd76398240ab29abd8"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 | reusable slopegraph</title> \n  <meta name=\"author\" content=\"Sundar Singh | eesur.com\">\n\n  <link rel=\"stylesheet\" href=\"main.css\">\n  <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n</head>\n<body>\n\n    <header>\n        <h1>Reusable slopegraph</h1> \n        <p>Slopegraph example showing number of personal computers installed in a country per household.</p>\n    </header>\n\n    <section id=\"slopegraph\"></section>\n\n    <footer>\n      <button id=\"reset\">reset</button>\n      <nav id='nav-alt'></nav>\n    </footer>\n\n    <!-- namespace -->\n    <script> d3.eesur = {}; </script>\n    <!-- reusable slopegraph -->\n    <script src=\"d3_code_slopegraph.js\"></script>\n    <script>\n\n  //  render slopegraph chart\n\n    (function() {\n\n    // create chart\n    var slopegraph = d3.eesur.slopegraph()\n        // .margin({top: 20, bottom: 20, left: 100, right:100})\n        .strokeColour('#130C0E')\n        .keyName('country')\n            .keyValueStart('2000')\n            .keyValueEnd('2012')\n            .h(500)\n            // .format(d3.format('04d'))\n            .on('_hover', function (d, i) {\n                highlightLine(d, i);\n            });\n\n    \n    d3.json('data.json', function(error, data) {\n\n        if (error) throw error;\n\n        // render chart\n        d3.select('#slopegraph')\n            .datum(data)\n            .call(slopegraph);\n\n        // alternative navigation     \n        navAlt(data);\n    });\n\n    // reset button listener\n    d3.select('#reset')\n        .on('click', function () {\n            d3.selectAll('.elm').transition().style('opacity', 1);\n            d3.selectAll('.s-line').style('stroke', '#130C0E');\n        });\n\n    // navigation\n    function navAlt(data) {\n        d3.select('#nav-alt').append('ul')\n            .selectAll('li')\n            .data(data)\n            .enter().append('li')\n            .on('click', function (d, i) {\n                highlightLine(d, i);\n            })\n            .text(function (d) { return d['country']; });\n    }\n\n    // highlight line and fade other lines\n    function highlightLine(d, i) {\n        d3.selectAll('.elm').transition().style('opacity', 0.2);\n        d3.selectAll('.sel-' + i).transition().style('opacity', 1);\n        d3.selectAll('.s-line').style('stroke', '#FDBB30');\n        d3.selectAll('.s-line.sel-' + i).style('stroke', '#130C0E');\n    }\n\n    // just for blocks viewer size\n    d3.select(self.frameElement).style('height', '800px');\n  \n  }());\n\n    </script>\n</body>\n</html>\n\n", "description": "d3 | Reusable slopegraph", "created_at": "2016-04-16T12:56:00Z", "updated_at": "2016-04-16T12:56:14Z", "api": ["d3.format", "d3.dispatch", "d3.max", "d3.scale.linear", "d3.select", "d3.rebind", "d3.eesur.slopegraph", "d3.json", "d3.selectAll"], "readme": "Reusable slopegraph inspired/adapted from [Ben Van Dyke's example](http://vandykeindustries.com/slopegraphs-d3.html) into a reusable chart.\n\nThis slopegraph example shows the number of personal computers installed in a country per household. This includes desktop PCs and laptops, but excludes smartphones and terminals connected to mainframe computers. All figures are calculated using total number of Personal Computers and the Total Number of Households.\n\n[data source](http://www.nakono.com/tekcarta/databank/personal-computers-per-household/)\n\n\nforked from <a href='http://bl.ocks.org/eesur/'>eesur</a>'s block: <a href='http://bl.ocks.org/eesur/a4679ee453aa9357977c'>d3 | Reusable slopegraph</a>", "uid": "espinielli_347a69f480fcd1e40db43d782439e623"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style type=\"text/css\">\n\nsvg {\n  font-family: \"Helvetica Neue\", Helvetica;\n}\n\n.line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2px;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar m = [20, 20, 30, 20],\n    w = 960 - m[1] - m[3],\n    h = 500 - m[0] - m[2];\n\nvar x,\n    y,\n    duration = 1500,\n    delay = 500;\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", w + m[1] + m[3])\n    .attr(\"height\", h + m[0] + m[2])\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\nvar stocks,\n    symbols;\n\n// A line generator, for the dark stroke.\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); });\n\n// A line generator, for the dark stroke.\nvar axis = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(h);\n\n// A area generator, for the dark stroke.\nvar area = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y1(function(d) { return y(d.price); });\n\nd3.csv(\"stocks.csv\", function(data) {\n  var parse = d3.time.format(\"%b %Y\").parse;\n\n  // Nest stock values by symbol.\n  symbols = d3.nest()\n      .key(function(d) { return d.symbol; })\n      .entries(stocks = data);\n\n  // Parse dates and numbers. We assume values are sorted by date.\n  // Also compute the maximum price per symbol, needed for the y-domain.\n  symbols.forEach(function(s) {\n    s.values.forEach(function(d) { d.date = parse(d.date); d.price = +d.price; });\n    s.maxPrice = d3.max(s.values, function(d) { return d.price; });\n    s.sumPrice = d3.sum(s.values, function(d) { return d.price; });\n  });\n\n  // Sort by maximum price, descending.\n  symbols.sort(function(a, b) { return b.maxPrice - a.maxPrice; });\n\n  var g = svg.selectAll(\"g\")\n      .data(symbols)\n    .enter().append(\"g\")\n      .attr(\"class\", \"symbol\");\n\n  setTimeout(lines, duration);\n});\n\nfunction lines() {\n  x = d3.time.scale().range([0, w - 60]);\n  y = d3.scale.linear().range([h / 4 - 20, 0]);\n\n  // Compute the minimum and maximum date across symbols.\n  x.domain([\n    d3.min(symbols, function(d) { return d.values[0].date; }),\n    d3.max(symbols, function(d) { return d.values[d.values.length - 1].date; })\n  ]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + (i * h / 4 + 10) + \")\"; });\n\n  g.each(function(d) {\n    var e = d3.select(this);\n\n    e.append(\"path\")\n        .attr(\"class\", \"line\");\n\n    e.append(\"circle\")\n        .attr(\"r\", 5)\n        .style(\"fill\", function(d) { return color(d.key); })\n        .style(\"stroke\", \"#000\")\n        .style(\"stroke-width\", \"2px\");\n\n    e.append(\"text\")\n        .attr(\"x\", 12)\n        .attr(\"dy\", \".31em\")\n        .text(d.key);\n  });\n\n  function draw(k) {\n    g.each(function(d) {\n      var e = d3.select(this);\n      y.domain([0, d.maxPrice]);\n\n      e.select(\"path\")\n          .attr(\"d\", function(d) { return line(d.values.slice(0, k + 1)); });\n\n      e.selectAll(\"circle, text\")\n          .data(function(d) { return [d.values[k], d.values[k]]; })\n          .attr(\"transform\", function(d) { return \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\"; });\n    });\n  }\n\n  var k = 1, n = symbols[0].values.length;\n  d3.timer(function() {\n    draw(k);\n    if ((k += 2) >= n - 1) {\n      draw(n - 1);\n      setTimeout(horizons, 500);\n      return true;\n    }\n  });\n}\n\nfunction horizons() {\n  svg.insert(\"defs\", \".symbol\")\n    .append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", w)\n      .attr(\"height\", h / 4 - 20);\n\n  var color = d3.scale.ordinal()\n      .range([\"#c6dbef\", \"#9ecae1\", \"#6baed6\"]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"clip-path\", \"url(#clip)\");\n\n  area\n      .y0(h / 4 - 20);\n\n  g.select(\"circle\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (-h / 4) + \")\"; })\n      .remove();\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (h / 4 - 20) + \")\"; })\n      .attr(\"dy\", \"0em\");\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).selectAll(\".area\")\n        .data(d3.range(3))\n      .enter().insert(\"path\", \".line\")\n        .attr(\"class\", \"area\")\n        .attr(\"transform\", function(d) { return \"translate(0,\" + (d * (h / 4 - 20)) + \")\"; })\n        .attr(\"d\", area(d.values))\n        .style(\"fill\", function(d, i) { return color(i); })\n        .style(\"fill-opacity\", 1e-6);\n\n    y.domain([0, d.maxPrice / 3]);\n\n    d3.select(this).selectAll(\".line\").transition()\n        .duration(duration)\n        .attr(\"d\", line(d.values))\n        .style(\"stroke-opacity\", 1e-6);\n\n    d3.select(this).selectAll(\".area\").transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1)\n        .attr(\"d\", area(d.values))\n        .each(\"end\", function() { d3.select(this).style(\"fill-opacity\", null); });\n  });\n\n  setTimeout(areas, duration + delay);\n}\n\nfunction areas() {\n  var g = svg.selectAll(\".symbol\");\n\n  axis\n      .y(h / 4 - 21);\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return axis(d.values); });\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).select(\".line\").transition()\n        .duration(duration)\n        .style(\"stroke-opacity\", 1)\n        .each(\"end\", function() { d3.select(this).style(\"stroke-opacity\", null); });\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1e-6)\n        .attr(\"d\", area(d.values))\n        .remove();\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return !i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill\", color(d.key))\n        .attr(\"d\", area(d.values));\n  });\n\n  svg.select(\"defs\").transition()\n      .duration(duration)\n      .remove();\n\n  g.transition()\n      .duration(duration)\n      .each(\"end\", function() { d3.select(this).attr(\"clip-path\", null); });\n\n  setTimeout(stackedArea, duration + delay);\n}\n\nfunction stackedArea() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  area\n      .y0(function(d) { return y(d.price0); })\n      .y1(function(d) { return y(d.price0 + d.price); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration)\n      .attr(\"transform\", \"translate(0,0)\")\n      .each(\"end\", function() { d3.select(this).attr(\"transform\", null); });\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", function(d, i) { return i < 3 ? 1e-6 : 1; })\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(streamgraph, duration + delay);\n}\n\nfunction streamgraph() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\")\n      .offset(\"wiggle\");\n\n  stack(symbols);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration);\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(overlappingArea, duration + delay);\n}\n\nfunction overlappingArea() {\n  var g = svg.selectAll(\".symbol\");\n\n  line\n      .y(function(d) { return y(d.price0 + d.price); });\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d.maxPrice; }))])\n      .range([h, 0]);\n\n  area\n      .y0(h)\n      .y1(function(d) { return y(d.price); });\n\n  line\n      .y(function(d) { return y(d.price); });\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", .5)\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price) + \")\"; });\n\n  svg.append(\"line\")\n      .attr(\"class\", \"line\")\n      .attr(\"x1\", 0)\n      .attr(\"x2\", w - 60)\n      .attr(\"y1\", h)\n      .attr(\"y2\", h)\n      .style(\"stroke-opacity\", 1e-6)\n    .transition()\n      .duration(duration)\n      .style(\"stroke-opacity\", 1);\n\n  setTimeout(groupedBar, duration + delay);\n}\n\nfunction groupedBar() {\n  x = d3.scale.ordinal()\n      .domain(symbols[0].values.map(function(d) { return d.date; }))\n      .rangeBands([0, w - 60], .1);\n\n  var x1 = d3.scale.ordinal()\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeBands([0, x.rangeBand()]);\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .remove();\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", 1e-6)\n      .remove();\n\n  g.each(function(p, j) {\n    d3.select(this).selectAll(\"rect\")\n        .data(function(d) { return d.values; })\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.date) + x1(p.key); })\n        .attr(\"y\", function(d) { return y(d.price); })\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"height\", function(d) { return h - y(d.price); })\n        .style(\"fill\", color(p.key))\n        .style(\"fill-opacity\", 1e-6)\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1);\n  });\n\n  setTimeout(stackedBar, duration + delay);\n}\n\nfunction stackedBar() {\n  x.rangeRoundBands([0, w - 60], .1);\n\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  var g = svg.selectAll(\".symbol\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.select(\"text\")\n      .delay(symbols[0].values.length * 10)\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price); })\n      .attr(\"height\", function(d) { return h - y(d.price); })\n      .each(\"end\", function() {\n        d3.select(this)\n            .style(\"stroke\", \"#fff\")\n            .style(\"stroke-opacity\", 1e-6)\n          .transition()\n            .duration(duration / 2)\n            .attr(\"x\", function(d) { return x(d.date); })\n            .attr(\"width\", x.rangeBand())\n            .style(\"stroke-opacity\", 1);\n      });\n\n  setTimeout(transposeBar, duration + symbols[0].values.length * 10 + delay);\n}\n\nfunction transposeBar() {\n  x\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeRoundBands([0, w], .2);\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d3.sum(d.values.map(function(d) { return d.price; })); }))]);\n\n  var stack = d3.layout.stack()\n      .x(function(d, i) { return i; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; });\n\n  stack(d3.zip.apply(null, symbols.map(function(d) { return d.values; }))); // transpose!\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price) - 1; })\n      .attr(\"height\", function(d) { return h - y(d.price) + 1; })\n      .attr(\"x\", function(d) { return x(d.symbol); })\n      .attr(\"width\", x.rangeBand())\n      .style(\"stroke-opacity\", 1e-6);\n\n  t.select(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"transform\", function(d) { return \"translate(\" + (x(d.key) + x.rangeBand() / 2) + \",\" + h + \")\"; })\n      .attr(\"dy\", \"1.31em\")\n      .each(\"end\", function() { d3.select(this).attr(\"x\", null).attr(\"text-anchor\", \"middle\"); });\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"x2\", w);\n\n  setTimeout(donut,  duration / 2 + symbols[0].values.length * 10 + delay);\n}\n\nfunction donut() {\n  var g = svg.selectAll(\".symbol\");\n\n  g.selectAll(\"rect\").remove();\n\n  var pie = d3.layout.pie()\n      .value(function(d) { return d.sumPrice; });\n\n  var arc = d3.svg.arc();\n\n  g.append(\"path\")\n      .style(\"fill\", function(d) { return color(d.key); })\n      .data(function() { return pie(symbols); })\n    .transition()\n      .duration(duration)\n      .tween(\"arc\", arcTween);\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"dy\", \".31em\");\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"y1\", 2 * h)\n      .attr(\"y2\", 2 * h)\n      .remove();\n\n  function arcTween(d) {\n    var path = d3.select(this),\n        text = d3.select(this.parentNode.appendChild(this.previousSibling)),\n        x0 = x(d.data.key),\n        y0 = h - y(d.data.sumPrice);\n\n    return function(t) {\n      var r = h / 2 / Math.min(1, t + 1e-3),\n          a = Math.cos(t * Math.PI / 2),\n          xx = (-r + (a) * (x0 + x.rangeBand()) + (1 - a) * (w + h) / 2),\n          yy = ((a) * h + (1 - a) * h / 2),\n          f = {\n            innerRadius: r - x.rangeBand() / (2 - a),\n            outerRadius: r,\n            startAngle: a * (Math.PI / 2 - y0 / r) + (1 - a) * d.startAngle,\n            endAngle: a * (Math.PI / 2) + (1 - a) * d.endAngle\n          };\n\n      path.attr(\"transform\", \"translate(\" + xx + \",\" + yy + \")\");\n      path.attr(\"d\", arc(f));\n      text.attr(\"transform\", \"translate(\" + arc.centroid(f) + \")translate(\" + xx + \",\" + yy + \")rotate(\" + ((f.startAngle + f.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n    };\n  }\n\n  setTimeout(donutExplode, duration + delay);\n}\n\nfunction donutExplode() {\n  var r0a = h / 2 - x.rangeBand() / 2,\n      r1a = h / 2,\n      r0b = 2 * h - x.rangeBand() / 2,\n      r1b = 2 * h,\n      arc = d3.svg.arc();\n\n  svg.selectAll(\".symbol path\")\n      .each(transitionExplode);\n\n  function transitionExplode(d, i) {\n    d.innerRadius = r0a;\n    d.outerRadius = r1a;\n    d3.select(this).transition()\n        .duration(duration / 2)\n        .tween(\"arc\", tweenArc({\n          innerRadius: r0b,\n          outerRadius: r1b\n        }));\n  }\n\n  function tweenArc(b) {\n    return function(a) {\n      var path = d3.select(this),\n          text = d3.select(this.nextSibling),\n          i = d3.interpolate(a, b);\n      for (var key in b) a[key] = b[key]; // update data\n      return function(t) {\n        var a = i(t);\n        path.attr(\"d\", arc(a));\n        text.attr(\"transform\", \"translate(\" + arc.centroid(a) + \")translate(\" + w / 2 + \",\" + h / 2 +\")rotate(\" + ((a.startAngle + a.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n      };\n    }\n  }\n\n  setTimeout(function() {\n    svg.selectAll(\"*\").remove();\n    svg.selectAll(\"g\").data(symbols).enter().append(\"g\").attr(\"class\", \"symbol\");\n    lines();\n  }, duration);\n}\n\n</script>\n", "description": "D3 Show Reel", "created_at": "2016-02-02T21:45:16Z", "updated_at": "2016-02-02T21:45:17Z", "api": ["d3.scale.category10", "d3.select", "d3.svg.line", "d3.svg.area", "d3.csv", "d3.time.format", "d3.nest", "d3.max", "d3.sum", "d3.time.scale", "d3.scale.linear", "d3.min", "d3.timer", "d3.scale.ordinal", "d3.range", "d3.layout.stack", "d3.zip.apply", "d3.layout.pie", "d3.svg.arc", "d3.interpolate"], "readme": "The first 15 seconds of the D3 show reel. See full video at <http://vimeo.com/29862153>. Includes seamless transitions between the following visualization types:\n\n* lines\n* horizons\n* areas\n* stacked areas\n* streamgraph\n* overlapping areas\n* grouped bars\n* stacked bars\n* bars\n* donut\n\nAdmittedly, these aren\u2019t the most useful visualizations; their purpose is not to inform but to demonstrate D3\u2019s capability for producing dynamic visualizations with custom transitions. They *do* show real data (the monthly closing price for ten years\u2019 worth of stock data), but I didn\u2019t include axes for date or price. See the [axis component](http://bl.ocks.org/1166403) for a better example. Also, the stacked visualizations aren\u2019t especially meaningful, unless you imagine owning a portfolio with equal parts AAPL, AMZN, IBM and MSFT. Similarly, the bars and donuts represent the *average* price (or sum) during this time period.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1256572'>D3 Show Reel</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/9c5e51b7ecc472f08562'>D3 Show Reel</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/dc46be50fae1cd49ad54'>D3 Show Reel</a>", "uid": "sivartravis_4279eb6fff6a7d47ca74"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  margin: 0;\n}\n\n.map {\n  position: relative;\n  overflow: hidden;\n}\n\n.layer {\n  position: absolute;\n}\n\n.tile {\n  pointer-events: none;\n  position: absolute;\n  width: 256px;\n  height: 256px;\n}\n\n.info {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"tile.js\"></script>\n<script>\n\nvar width = Math.max(960, window.innerWidth),\n    height = Math.max(500, window.innerHeight),\n    prefix = prefixMatch([\"webkit\", \"ms\", \"Moz\", \"O\"]);\n\nvar tile = d3.geo.tile()\n    .size([width, height])\n    .overflow([true, false]);\n\nvar projection = d3.geo.mercator();\n\nvar zoom = d3.behavior.zoom()\n    .scale(1 << 8)\n    .scaleExtent([1 << 8, 1 << 23])\n    .translate([width / 2, height / 2])\n    .on(\"zoom\", zoomed);\n\nvar map = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"map\")\n    .style(\"width\", width + \"px\")\n    .style(\"height\", height + \"px\")\n    .call(zoom)\n    .on(\"mousemove\", mousemoved);\n\nvar layer = map.append(\"div\")\n    .attr(\"class\", \"layer\");\n\nvar info = map.append(\"div\")\n    .attr(\"class\", \"info\");\n\nzoomed();\n\nfunction zoomed() {\n  var tiles = tile\n      .scale(zoom.scale())\n      .translate(zoom.translate())\n      ();\n\n  projection\n      .scale(zoom.scale() / 2 / Math.PI)\n      .translate(zoom.translate());\n\n  var image = layer\n      .style(prefix + \"transform\", matrix3d(tiles.scale, tiles.translate))\n    .selectAll(\".tile\")\n      .data(tiles, function(d) { return d; });\n\n  image.exit()\n      .remove();\n\n  image.enter().append(\"img\")\n      .attr(\"class\", \"tile\")\n      .attr(\"src\", function(d) {\n        var z = d[2],\n            k = 1 << z,\n            x = (d[0] % k + k) % k,\n            y = d[1];\n        return \"http://\" + [\"a\", \"b\", \"c\", \"d\"][Math.random() * 4 | 0] + \".tiles.mapbox.com/v3/examples.map-i86nkdio/\" + z + \"/\" + x + \"/\" + y + \".png\";\n      })\n      .style(\"left\", function(d) { return (d[0] << 8) + \"px\"; })\n      .style(\"top\", function(d) { return (d[1] << 8) + \"px\"; });\n}\n\nfunction mousemoved() {\n  info.text(formatLocation(projection.invert(d3.mouse(this)), zoom.scale()));\n}\n\nfunction matrix3d(scale, translate) {\n  var k = scale / 256, r = scale % 1 ? Number : Math.round;\n  return \"matrix3d(\" + [k, 0, 0, 0, 0, k, 0, 0, 0, 0, k, 0, r(translate[0] * scale), r(translate[1] * scale), 0, 1 ] + \")\";\n}\n\nfunction prefixMatch(p) {\n  var i = -1, n = p.length, s = document.body.style;\n  while (++i < n) if (p[i] + \"Transform\" in s) return \"-\" + p[i].toLowerCase() + \"-\";\n  return \"\";\n}\n\nfunction formatLocation(p, k) {\n  var format = d3.format(\".\" + Math.floor(Math.log(k) / 2 - 2) + \"f\");\n  return (p[1] < 0 ? format(-p[1]) + \"\u00b0S\" : format(p[1]) + \"\u00b0N\") + \" \"\n       + (p[0] < 0 ? format(-p[0]) + \"\u00b0W\" : format(p[0]) + \"\u00b0E\");\n}\n\n</script>\n", "description": "Wrapped d3.geo.tile", "created_at": "2014-08-06T12:14:25Z", "updated_at": "2015-08-29T14:04:56Z", "api": ["d3.geo.tile", "d3.geo.mercator", "d3.behavior.zoom", "d3.select", "d3.mouse", "d3.format"], "readme": "A test for wrapping using the [d3.geo.tile](https://github.com/d3/d3-plugins/tree/master/geo/tile) plugin.\n\nBased on [Mike Bostock\u2019s example](http://bl.ocks.org/mbostock/4132797).\n", "uid": "jasondavies_0051a06829e72b423ba9"}, {"code": "<!DOCTYPE html>\n\n<html lang='en'>\n\n<head>\n    <meta charset='UTF-8'>\n    <title>d3 | reusable slopegraph v2</title> \n    <meta name=\"author\" content=\"Sundar Singh | eesur.com\">\n    \n    <link rel=\"stylesheet\" href=\"main.css\">\n    <script src=\"//d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.min.js\" charset=\"utf-8\"></script>\n</head>\n\n<body>\n\n    <header>\n        <h1>Reusable slopegraph v2</h1> \n        <p>Number of personal computers installed in a country per household.</p>\n\n        <nav id='filter'></nav>\n        <nav id='nav-alt'></nav>\n    </header>\n\n    <section id=\"slopegraph\" class=\"slope\"></section>\n\n<!-- *************** start js/d3 code ***************** -->\n\n<!-- namespace -->\n<script> d3.eesur = {}; </script>\n<!-- reusable slopegraph -->\n<script src=\"d3_code_slopegraph_v2.js\"></script>\n\n<script>\n//  render slopegraph chart\n\n(function() {\n    'use strict';\n\n    var data,\n        // keys values from data to be applied\n        keyValues = ['2000', '2002', '2004', '2006', '2008', '2010', '2012'];\n\n    // store chart\n    var slopegraph;\n    // track any user interactions\n    var state = {\n        // have an array to mutate\n        keys: keyValues,\n        // track filtered sets\n        filter: [],\n        // toggle highlights\n        navToggle: [],\n        // track line selection\n        highlight: null\n    };\n\n    d3.json('data.json', function(error, json) {\n        if (error) throw error;\n        // access data outside this callback\n        data = json;\n        // initial render chart\n        render(data, keyValues);\n        // alternative navigation     \n        navAlt(data);\n        // add some filter options\n        filterFunc();\n    });\n\n    // filter sets via user interaction\n    function filterFunc() {\n        // create array values\n        _.times(keyValues.length, function(n) {\n            state.filter.push(true);\n        });\n\n        d3.select('#filter').append('ul')\n            .selectAll('li')\n            .data(keyValues)\n            .enter().append('li')\n            .on('click', function (d, i) {\n                if (!state.filter[i]) {\n                    // set toggle \n                    state.filter[i] = true;\n                    d3.select(this).style('opacity', 1);\n                    // push key into array\n                    state.keys.push(d);\n                    // ensure array is kept in date order\n                    state.keys = _.sortBy(state.keys);\n                    // render chart with new keys\n                    render(data, state.keys);\n                // ensure there at least two values\n                // so a slopegraph can be rendered\n                } else if (state.filter[i] && state.keys.length > 2) {\n                    state.filter[i] = false;\n                    d3.select(this).style('opacity', 0.3);\n                    _.pull(state.keys, d);\n                    state.keys = _.sortBy(state.keys);\n                    render(data, state.keys);\n                }\n            })\n            .text(function (d) { return d; });\n    }\n\n    // navigation to highlight lines\n    function navAlt(data) {\n        // create array values\n        _.times(data.length, function(n) {\n            state.navToggle.push(true);\n        });\n\n        d3.select('#nav-alt').append('ul')\n            .selectAll('li')\n            .data(data)\n            .enter().append('li')\n            .attr('class', function (d, i) { return 'navAlt li-' + i; })\n            .on('click', function (d, i) {\n                if (!state.navToggle[i]) {\n                    // update toggle state\n                    state.navToggle[i] = true;\n                    resetSelection();\n                    state.highlight = null;\n                } else if (state.navToggle[i]) {\n                    state.navToggle[i] = false;\n                    // hover to highlight line\n                    highlightLine(i);\n                    // highlight nav in relation to line\n                    highlightNav(i);\n                    // update state\n                    state.highlight = i;\n                }\n            })\n            .text(function (d) { return d['country']; });\n    }\n\n\n    // render slopegraph chart \n    function render(data, keys) {\n        resetSelection();\n        // create chart\n        slopegraph = d3.eesur.slopegraph_v2()\n            .margin({top: 20, bottom: 20, left: 100, right: 100})\n            .gutter(25)\n            .keyName('country')\n            .keyValues(keys)\n            .on('_hover', function (d, i) {\n                // hover to highlight line\n                highlightLine(i);\n                // highlight nav in relation to line\n                highlightNav(i);\n                // update state of selected highlight line\n                state.highlight = i;\n            });\n\n\n        // apply chart\n        d3.select('#slopegraph')\n            .datum(data)\n            .call(slopegraph);\n\n        // ensure highlight is maintained on update    \n        if (!_.isNull(state.highlight)) {\n            d3.selectAll('.elm').style('opacity', 0.2);\n            d3.selectAll('.sel-' + state.highlight).style('opacity', 1);\n            highlightNav(state.highlight);\n        }\n    }\n\n    function highlightLine(i) {\n        d3.selectAll('.elm').transition().style('opacity', 0.2);\n        d3.selectAll('.sel-' + i).transition().style('opacity', 1);\n    }\n\n    function highlightNav(i) {\n        d3.selectAll('.navAlt').transition().style('opacity', 0.6);\n        d3.select('.li-' + i).transition().style('opacity', 1);\n    }\n\n    function resetSelection() {\n        d3.selectAll('.elm').transition().style('opacity', 1);\n        d3.selectAll('.navAlt').transition().style('opacity', 1);\n    }\n\n    // just for blocks viewer size\n    d3.select(self.frameElement).style('height', '800px');\n\n}());\n\n</script>\n\n</body>\n</html>\n\n\n\n", "description": "d3 | reusable slopegraph v2", "created_at": "2016-01-07T03:42:53Z", "updated_at": "2016-01-07T03:44:02Z", "api": ["d3.format", "d3.dispatch", "d3.scale.linear", "d3.select", "d3.rebind", "d3.json", "d3.selectAll"], "readme": "Updated reusable slopegraph sketch, from my [previous slopegraph version](http://bl.ocks.org/eesur/a4679ee453aa9357977c)\n\nThis version allows for multiple sets/columns and will adapted accordingly. Added some interaction to toggle the sets/columns and also toggle highlighted line.\n\n[data source](http://www.nakono.com/tekcarta/databank/personal-computers-per-household/)\n\n\nforked from <a href='http://bl.ocks.org/eesur/'>eesur</a>'s block: <a href='http://bl.ocks.org/eesur/ee8d0ab88229d0e07f7f'>d3 | reusable slopegraph v2</a>", "uid": "renecnielsen_99ee17e86c184a616c7c"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.dot circle {\n  fill: lightsteelblue;\n  stroke: steelblue;\n  stroke-width: 1.5px;\n}\n\n.dot circle.dragging {\n  fill: red;\n  stroke: brown;\n}\n\n.axis line {\n  fill: none;\n  stroke: #ddd;\n  shape-rendering: crispEdges;\n  vector-effect: non-scaling-stroke;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar margin = {top: -5, right: -5, bottom: -5, left: -5},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar zoom = d3.behavior.zoom()\n    .scaleExtent([1, 10])\n    .on(\"zoom\", zoomed);\n\nvar drag = d3.behavior.drag()\n    .origin(function(d) { return d; })\n    .on(\"dragstart\", dragstarted)\n    .on(\"drag\", dragged)\n    .on(\"dragend\", dragended);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.right + \")\")\n    .call(zoom);\n\nvar rect = svg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .style(\"fill\", \"none\")\n    .style(\"pointer-events\", \"all\");\n\nvar container = svg.append(\"g\");\n\ncontainer.append(\"g\")\n    .attr(\"class\", \"x axis\")\n  .selectAll(\"line\")\n    .data(d3.range(0, width, 10))\n  .enter().append(\"line\")\n    .attr(\"x1\", function(d) { return d; })\n    .attr(\"y1\", 0)\n    .attr(\"x2\", function(d) { return d; })\n    .attr(\"y2\", height);\n\ncontainer.append(\"g\")\n    .attr(\"class\", \"y axis\")\n  .selectAll(\"line\")\n    .data(d3.range(0, height, 10))\n  .enter().append(\"line\")\n    .attr(\"x1\", 0)\n    .attr(\"y1\", function(d) { return d; })\n    .attr(\"x2\", width)\n    .attr(\"y2\", function(d) { return d; });\n\nd3.tsv(\"dots.tsv\", dottype, function(error, dots) {\n  dot = container.append(\"g\")\n      .attr(\"class\", \"dot\")\n    .selectAll(\"circle\")\n      .data(dots)\n    .enter().append(\"circle\")\n      .attr(\"r\", 5)\n      .attr(\"cx\", function(d) { return d.x; })\n      .attr(\"cy\", function(d) { return d.y; })\n      .call(drag);\n});\n\nfunction dottype(d) {\n  d.x = +d.x;\n  d.y = +d.y;\n  return d;\n}\n\nfunction zoomed() {\n  container.attr(\"transform\", \"translate(\" + d3.event.translate + \")scale(\" + d3.event.scale + \")\");\n}\n\nfunction dragstarted(d) {\n  d3.event.sourceEvent.stopPropagation();\n  d3.select(this).classed(\"dragging\", true);\n}\n\nfunction dragged(d) {\n  d3.select(this).attr(\"cx\", d.x = d3.event.x).attr(\"cy\", d.y = d3.event.y);\n}\n\nfunction dragended(d) {\n  d3.select(this).classed(\"dragging\", false);\n}\n\n</script>\n", "description": "Drag + Zoom", "created_at": "2013-07-31T16:36:23Z", "updated_at": "2016-02-09T02:02:58Z", "api": ["d3.behavior.zoom", "d3.behavior.drag", "d3.select", "d3.range", "d3.tsv", "d3.event.sourceEvent.stopPropagation"], "readme": "An example of how to combine [d3.behavior.drag](https://github.com/mbostock/d3/wiki/Drag-Behavior) and [d3.behavior.zoom](https://github.com/mbostock/d3/wiki/Zoom-Behavior), using `stopPropagation` to allow the drag behavior to take precedence over panning. Use the mouse to pan by clicking on the background, or drag by clicking on individual dots; you may also use the mousewheel to zoom.\n\nNote: combining these two behaviors means that gesture interpretation is ambiguous and highly sensitive to position. A click on a circle is interpreted as dragging that circle, whereas a click one pixel away could be interpreted as panning the background. A more robust method of combining these behaviors is to employ modality. For example, if the user holds down the SPACE key, clicking and dragging is interpreted as panning, rather than dragging, regardless of the click location. This approach is commonly employed in commercial software such as Adobe Photoshop.\n\nThis example was created in response to a [Stack Overflow question](http://stackoverflow.com/a/17976205/365814).", "uid": "mbostock_6123708"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.dot circle {\n  fill: lightsteelblue;\n  stroke: steelblue;\n  stroke-width: 1.5px;\n}\n\n.dot circle.dragging {\n  fill: red;\n  stroke: brown;\n}\n\n.axis line {\n  fill: none;\n  stroke: #ddd;\n  shape-rendering: crispEdges;\n  vector-effect: non-scaling-stroke;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar margin = {top: -5, right: -5, bottom: -5, left: -5},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar zoom = d3.behavior.zoom()\n    .scaleExtent([1, 10])\n    .on(\"zoom\", zoomed);\n\nvar drag = d3.behavior.drag()\n    .origin(function(d) { return d; })\n    .on(\"dragstart\", dragstarted)\n    .on(\"drag\", dragged)\n    .on(\"dragend\", dragended);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.right + \")\")\n    .call(zoom);\n\nvar rect = svg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .style(\"fill\", \"none\")\n    .style(\"pointer-events\", \"all\");\n\nvar container = svg.append(\"g\");\n\ncontainer.append(\"g\")\n    .attr(\"class\", \"x axis\")\n  .selectAll(\"line\")\n    .data(d3.range(0, width, 10))\n  .enter().append(\"line\")\n    .attr(\"x1\", function(d) { return d; })\n    .attr(\"y1\", 0)\n    .attr(\"x2\", function(d) { return d; })\n    .attr(\"y2\", height);\n\ncontainer.append(\"g\")\n    .attr(\"class\", \"y axis\")\n  .selectAll(\"line\")\n    .data(d3.range(0, height, 10))\n  .enter().append(\"line\")\n    .attr(\"x1\", 0)\n    .attr(\"y1\", function(d) { return d; })\n    .attr(\"x2\", width)\n    .attr(\"y2\", function(d) { return d; });\n\nd3.tsv(\"dots.tsv\", dottype, function(error, dots) {\n  dot = container.append(\"g\")\n      .attr(\"class\", \"dot\")\n    .selectAll(\"circle\")\n      .data(dots)\n    .enter().append(\"circle\")\n      .attr(\"r\", 5)\n      .attr(\"cx\", function(d) { return d.x; })\n      .attr(\"cy\", function(d) { return d.y; })\n      .call(drag);\n});\n\nfunction dottype(d) {\n  d.x = +d.x;\n  d.y = +d.y;\n  return d;\n}\n\nfunction zoomed() {\n  container.attr(\"transform\", \"translate(\" + d3.event.translate + \")scale(\" + d3.event.scale + \")\");\n}\n\nfunction dragstarted(d) {\n  d3.event.sourceEvent.stopPropagation();\n  d3.select(this).classed(\"dragging\", true);\n}\n\nfunction dragged(d) {\n  d3.select(this).attr(\"cx\", d.x = d3.event.x).attr(\"cy\", d.y = d3.event.y);\n}\n\nfunction dragended(d) {\n  d3.select(this).classed(\"dragging\", false);\n}\n\n</script>\n", "description": "Drag + Zoom", "created_at": "2015-11-02T16:01:56Z", "updated_at": "2015-11-02T16:02:01Z", "api": ["d3.behavior.zoom", "d3.behavior.drag", "d3.select", "d3.range", "d3.tsv", "d3.event.sourceEvent.stopPropagation"], "readme": "An example of how to combine [d3.behavior.drag](https://github.com/mbostock/d3/wiki/Drag-Behavior) and [d3.behavior.zoom](https://github.com/mbostock/d3/wiki/Zoom-Behavior), using `stopPropagation` to allow the drag behavior to take precedence over panning. Use the mouse to pan by clicking on the background, or drag by clicking on individual dots; you may also use the mousewheel to zoom.\n\nNote: combining these two behaviors means that gesture interpretation is ambiguous and highly sensitive to position. A click on a circle is interpreted as dragging that circle, whereas a click one pixel away could be interpreted as panning the background. A more robust method of combining these behaviors is to employ modality. For example, if the user holds down the SPACE key, clicking and dragging is interpreted as panning, rather than dragging, regardless of the click location. This approach is commonly employed in commercial software such as Adobe Photoshop.\n\nThis example was created in response to a [Stack Overflow question](http://stackoverflow.com/a/17976205/365814).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6123708'>Drag + Zoom</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/49e0f3cb67395ab2fcc7'>Drag + Zoom</a>", "uid": "SpaceActuary_921afb08362d428e98eb"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.fill {\n  fill: #ccc;\n}\n\n.stroke {\n  fill: none;\n  stroke: #000;\n  stroke-width: 20px;\n}\n\n</style>\n<svg width=\"960\" height=\"500\" viewBox=\"-10 -10 116 111\">\n  <defs>\n    <path id=\"dee\" d=\"M0,0h7.75a45.5,45.5 0 1 1 0,91h-7.75v-20h7.75a25.5,25.5 0 1 0 0,-51h-7.75z\"/>\n    <path id=\"three\" d=\"M36.2510,0h32a27.75,27.75 0 0 1 21.331,45.5a27.75,27.75 0 0 1 -21.331,45.5h-32a53.6895,53.6895 0 0 0 18.7464,-20h13.2526a7.75,7.75 0 1 0 0,-15.5h-7.75a53.6895,53.6895 0 0 0 0,-20h7.75a7.75,7.75 0 1 0 0,-15.5h-13.2526a53.6895,53.6895 0 0 0 -18.7464,-20z\"/>\n    <clipPath id=\"clip-three\">\n      <use xlink:href=\"#three\"/>\n    </clipPath>\n  </defs>\n  <use class=\"fill\" xlink:href=\"#dee\"/>\n  <use class=\"fill\" xlink:href=\"#three\"/>\n  <path class=\"stroke\" style=\"display:none;\" d=\"M0,10h7.75a35.5,35.5 0 1 1 0,71h-7.75\"/>\n  <path class=\"stroke\" style=\"display:none;\" clip-path=\"url(#clip-three)\" d=\"M36.2510,10h32a17.75,17.75 0 0 1 0,35.5h-7.75h7.75a17.75,17.75 0 0 1 0,35.5h-32\"/>\n</svg>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nd3.select(this)\n    .on(\"touchstart\", animate)\n    .on(\"click\", animate)\n    .on(\"load\", animate);\n\nfunction animate() {\n  var delay = 0,\n      stroke = d3.selectAll(\".stroke\");\n\n  // First cancel any active or scheduled transitions.\n  stroke.interrupt().transition();\n\n  // Then schedule the new transition.\n  stroke.transition().each(function() {\n    var length = this.getTotalLength(),\n        duration = length * 20;\n\n    d3.select(this)\n        .style(\"display\", null)\n        .style(\"stroke-dasharray\", \"0,\" + length)\n      .transition()\n        .delay(delay)\n        .duration(duration)\n        .style(\"stroke-dasharray\", length + \",\" + length);\n\n    delay += duration;\n  });\n}\n\n</script>\n", "description": "Animated D3 Logo", "created_at": "2015-10-16T04:33:43Z", "updated_at": "2016-02-09T01:49:09Z", "api": ["d3.select", "d3.selectAll"], "readme": "Animating the [D3 logo](/mbostock/c9455b842a01f6907020) as if it were being drawn by hand.\n", "uid": "mbostock_bc4e32ec71636b498c46"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Simple Chloropleth</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n.wards {\n    fill: gray;\n    stroke: gray;\n    stroke-width: 1px;\n}\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    \n    map.mode(\"projection\");\n\n    var projection = d3.geo.conicEquidistant()\n    .center([-0.0275,51.307])\n    .scale(84000)\n    .translate(map.zoom().translate())\n    .precision(.1);\n\n    map.projection(projection);\n    map.refresh();\n    \n    topojsonLayer = d3.carto.layer();\n    topojsonLayer\n    .type(\"topojson\")\n    .path(\"glondon.topojson\")\n    .label(\"London Wards\")\n    .cssClass(\"wards\")\n    .renderMode(\"svg\")\n    .on(\"load\", colorBySize);\n\n    map.addCartoLayer(topojsonLayer);\n    \n// Function is called on load because it won't have anything to apply to until the layer is loaded\n    function colorBySize() {\n    var featureData = topojsonLayer.features();\n    var sizeExtent = d3.extent(featureData, function (d) {return d.properties.w_size})\n    var sizeScale = d3.scale.quantile().domain(sizeExtent).range(colorbrewer.Greens[5]);\n\n      d3.selectAll(\"path.wards\")\n      .style(\"fill\", function (d) {return sizeScale(d.properties.w_size)})\n    \n    //Some simple hover behavior\n    d3.selectAll(\"path.wards\").style(\"pointer-events\", \"auto\").on(\"mouseover\", wardOver).on(\"mouseout\", wardOut);\n    \n    function wardOver(d,i) {\n      d3.selectAll(\"path.wards\").style(\"stroke-width\", function (p) {return p.properties.region == d.properties.region ? 0 : 1})\n    }\n\n    function wardOut(d,i) {\n      d3.selectAll(\"path.wards\").style(\"stroke-width\", \"1px\")\n    }\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Simple Choropleth - d3.carto.map", "created_at": "2014-07-14T22:25:57Z", "updated_at": "2015-08-29T14:03:58Z", "api": ["d3.carto.map", "d3.select", "d3.geo.conicEquidistant", "d3.carto.layer", "d3.extent", "d3.scale.quantile", "d3.selectAll"], "readme": "A simple choropleth map made with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nAfter adding a topojson layer, you can access the features either by using map.layers() or the layer if assigned to a variable or via d3.selectAll.data() on the appropriate elements. You can then style the features based on their properties. In this case, the size of the ward.\n\nSome hover behavior can also be defined using D3.", "uid": "emeeks_80dc1e4c11586c47a266"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.line {\n  fill: none;\n  stroke: steelblue;\n  stroke-width: 1.5px;\n}\n\n.legend rect {\n  fill:white;\n  stroke:black;\n  opacity:0.8;}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<script src=\"d3.legend.js\"></script>\n<script>\n\n\nvar margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (\u00baF)\");\n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .attr(\"data-legend\",function(d) { return d.name})\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name; });\n\n\n  legend = svg.append(\"g\")\n    .attr(\"class\",\"legend\")\n    .attr(\"transform\",\"translate(50,30)\")\n    .style(\"font-size\",\"12px\")\n    .call(d3.legend)\n\n  setTimeout(function() { \n    legend\n      .style(\"font-size\",\"20px\")\n      .attr(\"data-style-padding\",10)\n      .call(d3.legend)\n  },1000)\n\n});\n\n</script>", "description": "d3.legend example", "created_at": "2012-10-19T13:59:56Z", "updated_at": "2016-05-20T00:21:41Z", "api": ["d3.select", "d3.entries", "d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "## d3.legend \n\nd3.legend is a quick hack to add a legend to a `d3` chart.  Simply add a `g` and `.call(d3.legend)`.  Any elements that have a title set in the `\"data-legend\"` attribute will be included when `d3.legend` is called.  Each title will appear only once (even when multiple items define the same data-legend) as the process uses a set based on a existing names, not an array of all items.\n\n### Color\nBy default the color in the legend will try to match the fill attribute or the stroke attribute of the relevant items.  Color can be explicitly defined by attribute `\"data-legend-color\"`\n\n### Order\nThe order of items in the legend will be sorted using the top of the bounding box for each included item.  The order can be explicitly defined by attribute `\"data-legend-pos\"`\n\n### Padding\nPadding will be determined by attribute `\"data-style-padding\"` on the legend element.\nDefaults to  5.\n\n### Size\nSize of the box is determined by font size, as items are placed using `\"em\"` and the frame around the items is based on the bounding box.\n\n### This Example\nThis example takes an existing Gist and adds a legend by defining data-legend for each series and calling `d3.legend` on a `\"g\"` element.   To show the font-adjustment I change font-size after one second and call `d3.legend` again.\n\n\n## d3.legend \n\nd3.legend is a quick hack to add a legend to a `d3.graph`.  Simply add a `g` and `.call(d3.legend)`.  Any elements that has a title set in the `\"data-legend\"` attribute set will be included, when `d3.legend` is called.  Each title  will appear only once as the process uses a set based on a existing names, not an array of all items.\n\n### Color\nBy default the color in the legend will try to match the fill attribute or the stroke attribute of the relevant items.  Color can be explicitly defined by attribute `\"data-legend-color\"`\n\n### Order\nThe order of items in the legend will be sorted using the top of the bounding box for each included item.  The order can be explicitly defined by attribute `\"data-legend-pos\"`\n\n### Padding\nPadding will be determined by attribute `\"data-style-padding\"` on the legend element.\nDefaults to  5.\n\n### Size\nSize of the box is determined by font size, as items are placed using `\"em\"` and the frame around the items is based on the bounding box.\n\n### This Example\nThis example takes an existing Gist and adds a legend by defining data-legend for each series:\n```\n .attr(\"data-legend\",function(d) { return d.name})\n```\n\nAdding the legend is as simple as:\n```javascript\nlegend = svg.append(\"g\")\n  .attr(\"class\",\"legend\")\n  .attr(\"transform\",\"translate(50,30)\")\n  .style(\"font-size\",\"12px\")\n  .call(d3.legend)\n```\n\nTo show the font-adjustment I change font-size after one second and call `d3.legend` again.\n\n##Comments on the original gist\nThis line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape", "uid": "ZJONSSON_3918369"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - globe mode</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .reproject {\n    position: absolute;\n    z-index: 99;\n    left: 50px;\n    top: 250px;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    map.mode(\"globe\");\n\n    map.refresh();\n\n    wcLayer = d3.carto.layer.tile();\n    wcLayer\n    .tileType(\"stamen\")\n    .path(\"watercolor\")\n    .label(\"Watercolor\")\n    .visibility(true)\n\n    tonerLayer = d3.carto.layer.tile();\n    tonerLayer\n    .tileType(\"stamen\")\n    .path(\"toner\")\n    .visibility(false)\n    .label(\"Toner\")\n    \n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"SVG Borders\")\n    .cssClass(\"thickborders\")\n    .renderMode(\"svg\")\n    .on(\"load\", selectFeatures);\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(2)\n    .x(\"x\")\n    .y(\"y\");\n\n    map.addCartoLayer(wcLayer).addCartoLayer(tonerLayer).addCartoLayer(geojsonLayer).addCartoLayer(csvLayer);\n    \n      function selectFeatures() {\n\n    fNamedCountries = geojsonLayer.features().filter(function (d) {return d.properties.name.length < 6});\n\n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(fNamedCountries)\n    .label(\"featureArray\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\");\n\n      map.addCartoLayer(featureLayer);\n\n    }\n    \n    d3.select(\"#map\").append(\"button\").attr(\"class\", \"reproject\").html(\"Transform\").on(\"click\", reproject);\n    \n    function reproject() {\n      if (d3.select(\"button.reproject\").html() == \"Transform\") {\n        d3.select(\"button.reproject\").html(\"Projection\")\n        map.mode(\"transform\");\n        map.refresh();\n      }\n      else if (d3.select(\"button.reproject\").html() == \"Globe\") {\n        d3.select(\"button.reproject\").html(\"Transform\")\n        map.mode(\"globe\");\n        map.refresh();        \n      }\n      else {\n        d3.select(\"button.reproject\").html(\"Globe\")\n        map.mode(\"projection\");\n        map.refresh();        \n      }\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Stamen Tiles - d3.carto.map", "created_at": "2014-07-27T02:43:46Z", "updated_at": "2015-08-29T14:04:35Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.csv", "d3.carto.layer.featureArray"], "readme": "Various **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** modes with Stamen tiles from [http://maps.stamen.com/#toner/12/37.7706/-122.3782](http://maps.stamen.com/#toner/12/37.7706/-122.3782).\n\nClick the button to cycle through map modes to see the difference between Transform, Projection and Globe modes.", "uid": "emeeks_abcc82cc61c52fc47b19"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<style>\n\n.map {\n  fill: none;\n  stroke: #777;\n  stroke-opacity: .5;\n  stroke-width: .5px;\n}\n\n.land {\n  fill: #999;\n}\n\n.boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n</style>\n\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"pathlayout.js\"></script>\n<script>\nvar width = 600,\n    height = 500;\n\nvar projection = d3.geo.mercator()\n    .scale(5*(width + 1) / 2 / Math.PI)\n    .translate([width / 2, height / 2])\n    .rotate([-125, -15, 0])\n    .precision(.1);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nd3.json(\"https://gist.githubusercontent.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/world-50m.json\", function(error, world) {\nd3.json(\"track.json\", function(error, track) {\n\n    var color_scale = d3.scale.quantile().domain([1, 5]).range(colorbrewer.YlOrRd[5]);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var trail = d3.layout.trail()\n        .positioner(function(d) {return projection([d.lon,d.lat]);})\n        .coordType('xy');\n\n    var trail_layout = trail.data(track).layout();\n\n    svg.insert(\"path\", \".map\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n    svg.insert(\"path\", \".map\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n\n    var hayan_trail = svg.selectAll(\"d\").data(trail_layout);\n\n    hayan_trail.enter()\n        .append('line')\n        .attr(\"x1\",function(d) {return d.x1}) \n        .attr(\"x2\",function(d) {return d.x1})\n        .attr(\"y1\",function(d) {return d.y1}) \n        .attr(\"y2\",function(d) {return d.y1}) \n        .attr(\"class\",\"line\")\n        .style(\"stroke-width\",4)\n        .attr(\"stroke\", function(d){return color_scale(d.class);})\n        .transition()\n        .ease(\"linear\")\n        .delay(function(d,i) {return i*500})\n        .duration(500)\n        .attr(\"x2\",function(d) {return d.x2})\n        .attr(\"y2\",function(d) {return d.y2}) \n    ;\n    \n});\n});\n</script>", "description": "D3 Trail Layout", "created_at": "2015-12-13T16:24:29Z", "updated_at": "2015-12-13T16:25:57Z", "api": ["d3.geo.mercator", "d3.geo.path", "d3.json", "d3.scale.quantile", "d3.select", "d3.layout.trail"], "readme": "Starte from http://bl.ocks.org/rveciana/2986e55a01c7008d4b5b\n\nStarted from http://bl.ocks.org/rveciana/2986e55a01c7008d4b5b\n\n\nThis an example using the [D3 trail layout](https://github.com/bmschmidt/D3-trail) made by [Benjamin Schmidt](https://github.com/bmschmidt).\nIn this case, the animated Hayian Typhoon track map is shown, with the colour changing with the typhoon class, as in [this example](http://bl.ocks.org/rveciana/10743959), but in an easier and cleaner way.\n\nThere is a blog entry explaining this example at [GeoExamples](http://geoexamples.blogspot.com/2014/07/using-d3-trail-layout-to-draw-hayian.html)\n\nforked from <a href='http://bl.ocks.org/rveciana/'>rveciana</a>'s block: <a href='http://bl.ocks.org/rveciana/2986e55a01c7008d4b5b'>D3 Trail Layout</a>", "uid": "espinielli_17f6644f79685c42eae5"}, {"code": "<title>Crossfilter with d3.csv</title>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"crossfilter.js\"></script>\n<h3 id=\"loading\">Loading....</h3>\n<div>Number of rows: <span id=\"size\">0</span></div>\n<h3>Top Protein</h3>\n<ol id=\"protein-list\"></ol>\n<h3>Top Calcium</h3>\n<ol id=\"calcium-list\"></ol>\n<h3>Top Sodium</h3>\n<ol id=\"sodium-list\"></ol>\n<script>\nvar url = \"nutrients.csv\";\nvar numerics = [\"protein (g)\", \"calcium (g)\", \"sodium (g)\"];\n\nvar nutrients,\n    protein, calcium, sodium;\n\n// load the data from an external file\nd3.csv(url, function(data) {\n\n  // coerce numbers to floats, empty strings to null\n  data.forEach(function(d) {\n    numerics.forEach(function(dim) {\n      d[dim] = isNumber(d[dim]) ? parseFloat(d[dim]) : null;\n    });\n  });\n\n  // load data into crossfilter\n  nutrients = crossfilter(data);\n\n  // construct filtering dimensions\n  protein = nutrients.dimension(function(d) { return d[\"protein (g)\"]; });\n  calcium = nutrients.dimension(function(d) { return d[\"calcium (g)\"]; });\n  sodium = nutrients.dimension(function(d) { return d[\"sodium (g)\"]; });\n\n  // done loading\n  d3.select(\"#loading\").text(\"Loaded \" + url);\n\n  // display dataset size\n  d3.select(\"#size\").text(nutrients.size());\n\n  // display top K lists\n  renderTopList(protein, 6, \"#protein-list\");\n  renderTopList(calcium, 6, \"#calcium-list\");\n  renderTopList(sodium, 6, \"#sodium-list\");\n});\n\n// http://stackoverflow.com/a/1830844\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction renderTopList(dimension, count, selector) {\n  d3.select(selector).selectAll(\"li\")\n    .data(dimension.top(count))\n    .enter().append(\"li\")\n    .text(function(d) { return d.name });\n}\n</script>\n<style>\nbody {\n  font-size: 13px;\n  font-family: sans-serif;\n}\n</style>", "description": "Crossfilter with d3.csv", "created_at": "2015-09-08T07:42:50Z", "updated_at": "2015-09-08T07:42:50Z", "api": ["d3.csv", "d3.select"], "readme": "Loading data into a [crossfilter](http://square.github.com/crossfilter/) and with [d3.csv](https://github.com/mbostock/d3/wiki/CSV) and displaying a few [Top-K lists](https://github.com/square/crossfilter/wiki/API-Reference#wiki-dimension_top)\n\nData derived from the [USDA National Nutrient Database](http://www.ars.usda.gov/Services/docs.htm?docid=8964).\n\nforked from <a href='http://bl.ocks.org/syntagmatic/'>syntagmatic</a>'s block: <a href='http://bl.ocks.org/syntagmatic/5123745'>Crossfilter with d3.csv</a>", "uid": "renecnielsen_b9a0c2eafb1e655e0680"}, {"code": "<html>\n    <meta charset='utf-8' />\n<head>\n</head>\n<body>\n    <svg>\n    <text id='text_node' y=\"20px\" text-anchor=\"start\" opacity=\"1\">\n        <tspan>You</tspan>\n        <tspan dx='.5em'>shall</tspan>\n        <tspan dx='.5em' dy='.9em'>not</tspan>\n        <tspan dx='.4em' dy='.9em'>pass</tspan>\n\n    </text>\n</svg>\n<script src='http://mbostock.github.com/d3/d3.js'></script>\n<script>\n    var node = document.getElementById('text_node');\n    var bbox = node.getBBox();\n    var computed_text_length = node.getComputedTextLength();\n\n    //Does not work\n    d3.select('#text_node').append('tspan')\n        .text('Fly')\n        .attr('dx', '.2em')\n    d3.select('#text_node').append('tspan')\n        .text('you')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n    d3.select('#text_node').append('tspan')\n        .text('fools')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n\n    /*\n    d3.select('#text_node').append('tspan')\n        .text('Fly')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n\n    d3.select('#text_node').append('tspan')\n        .text('you')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n    */\n\n    console.log('BBOX width: ', bbox.width);\n    console.log('Computed text length: ', computed_text_length);\n</script>\n</body>\n</html>", "description": "d3 tspan append", "created_at": "2012-02-14T18:54:15Z", "updated_at": "2015-09-30T16:47:59Z", "api": ["d3.select"], "readme": "", "uid": "enoex_1829124"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n  </style>\n</head>\n\n<body>\n  <script>\n    var margin = {top: 20, right: 10, bottom: 20, left: 10};\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // Feel free to change or delete any of the code you see!\n    svg.append(\"rect\")\n      .attr({x: 100, y: 10, width: width - 200, height: height - 20})\n      .style({ fill: \"#a72d1a\"})\n      .transition().duration(3000).ease(\"bounce\")\n      .style({ fill: \"#5db9e3\"})\n    \n    console.log(\"you are now rocking with d3\", d3);\n  </script>\n</body>\n", "description": "Mozfest - Intro to D3", "created_at": "2015-11-07T12:17:13Z", "updated_at": "2015-11-07T12:17:15Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "lifeofmle_862ce2e7ef47e1e1a310"}, {"code": "<!DOCTYPE html>\n\n<html lang='en'>\n\n<head>\n    <meta charset='UTF-8'>\n    <title>d3 | reusable slopegraph v2</title> \n    <meta name=\"author\" content=\"Sundar Singh | eesur.com\">\n    \n    <link rel=\"stylesheet\" href=\"main.css\">\n    <script src=\"//d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.min.js\" charset=\"utf-8\"></script>\n</head>\n\n<body>\n\n    <header>\n        <h1>Reusable slopegraph v2</h1> \n        <p>Number of personal computers installed in a country per household.</p>\n\n        <nav id='filter'></nav>\n        <nav id='nav-alt'></nav>\n    </header>\n\n    <section id=\"slopegraph\" class=\"slope\"></section>\n\n<!-- *************** start js/d3 code ***************** -->\n\n<!-- namespace -->\n<script> d3.eesur = {}; </script>\n<!-- reusable slopegraph -->\n<script src=\"d3_code_slopegraph_v2.js\"></script>\n\n<script>\n//  render slopegraph chart\n\n(function() {\n    'use strict';\n\n    var data,\n        // keys values from data to be applied\n        keyValues = ['2000', '2002', '2004', '2006', '2008', '2010', '2012'];\n\n    // store chart\n    var slopegraph;\n    // track any user interactions\n    var state = {\n        // have an array to mutate\n        keys: keyValues,\n        // track filtered sets\n        filter: [],\n        // toggle highlights\n        navToggle: [],\n        // track line selection\n        highlight: null\n    };\n\n    d3.json('data.json', function(error, json) {\n        if (error) throw error;\n        // access data outside this callback\n        data = json;\n        // initial render chart\n        render(data, keyValues);\n        // alternative navigation     \n        navAlt(data);\n        // add some filter options\n        filterFunc();\n    });\n\n    // filter sets via user interaction\n    function filterFunc() {\n        // create array values\n        _.times(keyValues.length, function(n) {\n            state.filter.push(true);\n        });\n\n        d3.select('#filter').append('ul')\n            .selectAll('li')\n            .data(keyValues)\n            .enter().append('li')\n            .on('click', function (d, i) {\n                if (!state.filter[i]) {\n                    // set toggle \n                    state.filter[i] = true;\n                    d3.select(this).style('opacity', 1);\n                    // push key into array\n                    state.keys.push(d);\n                    // ensure array is kept in date order\n                    state.keys = _.sortBy(state.keys);\n                    // render chart with new keys\n                    render(data, state.keys);\n                // ensure there at least two values\n                // so a slopegraph can be rendered\n                } else if (state.filter[i] && state.keys.length > 2) {\n                    state.filter[i] = false;\n                    d3.select(this).style('opacity', 0.3);\n                    _.pull(state.keys, d);\n                    state.keys = _.sortBy(state.keys);\n                    render(data, state.keys);\n                }\n            })\n            .text(function (d) { return d; });\n    }\n\n    // navigation to highlight lines\n    function navAlt(data) {\n        // create array values\n        _.times(data.length, function(n) {\n            state.navToggle.push(true);\n        });\n\n        d3.select('#nav-alt').append('ul')\n            .selectAll('li')\n            .data(data)\n            .enter().append('li')\n            .attr('class', function (d, i) { return 'navAlt li-' + i; })\n            .on('click', function (d, i) {\n                if (!state.navToggle[i]) {\n                    // update toggle state\n                    state.navToggle[i] = true;\n                    resetSelection();\n                    state.highlight = null;\n                } else if (state.navToggle[i]) {\n                    state.navToggle[i] = false;\n                    // hover to highlight line\n                    highlightLine(i);\n                    // highlight nav in relation to line\n                    highlightNav(i);\n                    // update state\n                    state.highlight = i;\n                }\n            })\n            .text(function (d) { return d['country']; });\n    }\n\n\n    // render slopegraph chart \n    function render(data, keys) {\n        resetSelection();\n        // create chart\n        slopegraph = d3.eesur.slopegraph_v2()\n            .margin({top: 20, bottom: 20, left: 100, right: 100})\n            .gutter(25)\n            .keyName('country')\n            .keyValues(keys)\n            .on('_hover', function (d, i) {\n                // hover to highlight line\n                highlightLine(i);\n                // highlight nav in relation to line\n                highlightNav(i);\n                // update state of selected highlight line\n                state.highlight = i;\n            });\n\n\n        // apply chart\n        d3.select('#slopegraph')\n            .datum(data)\n            .call(slopegraph);\n\n        // ensure highlight is maintained on update    \n        if (!_.isNull(state.highlight)) {\n            d3.selectAll('.elm').style('opacity', 0.2);\n            d3.selectAll('.sel-' + state.highlight).style('opacity', 1);\n            highlightNav(state.highlight);\n        }\n    }\n\n    function highlightLine(i) {\n        d3.selectAll('.elm').transition().style('opacity', 0.2);\n        d3.selectAll('.sel-' + i).transition().style('opacity', 1);\n    }\n\n    function highlightNav(i) {\n        d3.selectAll('.navAlt').transition().style('opacity', 0.6);\n        d3.select('.li-' + i).transition().style('opacity', 1);\n    }\n\n    function resetSelection() {\n        d3.selectAll('.elm').transition().style('opacity', 1);\n        d3.selectAll('.navAlt').transition().style('opacity', 1);\n    }\n\n    // just for blocks viewer size\n    d3.select(self.frameElement).style('height', '800px');\n\n}());\n\n</script>\n\n</body>\n</html>\n\n\n\n", "description": "d3 | reusable slopegraph v2", "created_at": "2015-12-18T16:10:28Z", "updated_at": "2015-12-19T18:34:24Z", "api": ["d3.format", "d3.dispatch", "d3.scale.linear", "d3.select", "d3.rebind", "d3.json", "d3.selectAll"], "readme": "Updated reusable slopegraph sketch, from my [previous slopegraph version](http://bl.ocks.org/eesur/a4679ee453aa9357977c)\n\nThis version allows for multiple sets/columns and will adapted accordingly. Added some interaction to toggle the sets/columns and also toggle highlighted line.\n\n[data source](http://www.nakono.com/tekcarta/databank/personal-computers-per-household/)\n", "uid": "eesur_ee8d0ab88229d0e07f7f"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<html>\n  <head>\n    <style>\n      .axis {\n        font-size: 10px;\n      }\n      .axis path {\n        fill: none;\n        stroke: #000000;\n      }\n      .axis .tick line {\n        stroke: #000;\n      }\n        \n        .states {\n            fill: #ccc;\n            stroke: #fff;\n        }\n  \n    </style>\n  </head>\n  <body>\n   \n \n    <script src=\"http://d3js.org/d3.v3.js\"></script>\n    <script src=\"scatter.js\"></script>\n    <script src=\"brush.js\"></script>\n    <script src=\"symbol_map.js\"></script>\n    <script src=\"miso.ds.deps.0.4.1.js\"></script>\n    <script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n    <script src=\"http://d3js.org/queue.v1.min.js\"></script>\n\n  \n    <script>\n        \n        var Vis = {};\n        Vis.data = new Array();\n    \n        //http://bl.ocks.org/mbostock/4342045\n        var width = 960,\n        height = 500;\n        var data;\n        \n        var SPREADSHEET_ID = \"0Agy_OAo_DS4PdFlrdVR1X2Nub1U3VnE0X0xBemI1eUE\";\n        var SPREADSHEET_TAB = \"1\";\n        \n        var json_file = \"pics5.json\";\n\n        var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n        \n        var mapgroup = svg.append(\"g\")\n        ;\n        \n        //Define map projection\n        var projection = d3.geo.albersUsa()\n            .translate([700, 230])\n            .scale([500]);\n        \n        \n        var path = d3.geo.path()\n            .projection(projection);\n\n        queue()\n        .defer(d3.json, \"us.json\")\n        .await(ready);\n        \n        function ready(error, us) {\n            \n            mapgroup.append(\"path\")\n            .attr(\"class\", \"states\")\n            .datum(topojson.feature(us, us.objects.states))\n            .attr(\"d\", path);\n            \n            \n            loadJson(json_file);\n            //loadGSS(SPREADSHEET_ID, SPREADSHEET_TAB);\n            \n        }\n\n\n\n        \n      \n      function createDiagram() {\n\n          var sgroup = svg.append(\"g\")\n          .attr(\"transform\", \"translate(50, 0)\")\n          var scatter = d3.chart.scatter()\n          scatter.data(Vis.data)\n          scatter(sgroup)\n          \n          var symbol_map = d3.chart.symbol_map()\n          symbol_map.data(Vis.data)\n          symbol_map(mapgroup)\n          \n          \n          //brush\n          var bgroup = svg.append(\"g\")\n          .attr(\"transform\", \"translate(100, 430)\")\n          var brush = d3.chart.brush()\n          brush\n          .data(Vis.data)\n          .width(800)\n          brush(bgroup)\n          \n          brush.on(\"filter\", function(filtered) {\n                   scatter.data(filtered);\n                   scatter.update();\n                   symbol_map.data(filtered)\n                   symbol_map.update();\n                   })\n                   \n          scatter.on(\"hover\", function(hovered) {\n                              brush.highlight(hovered)\n                              symbol_map.highlight(hovered)\n                              })\n\n        symbol_map.on(\"hover\", function(hovered) {\n          scatter.highlight(hovered)\n          brush.highlight(hovered)\n        })\n\n\n      }\n    \n      function loadJson(file_name) {\n          d3.json(file_name, function(error, file_data) {\n                  Vis.data = file_data;\n                  \n                  Vis.data.forEach(function(d) {\n                               d.created *= 1000;\n                  });\n                  createDiagram();\n                  });\n          \n                  \n      }\n    \n    function loadGSS(ssid, tab) {\n        \n        //connect to spreadsheet\n        var lsheet = new Miso.Dataset({\n                                      importer : Miso.Dataset.Importers.GoogleSpreadsheet,\n                                      parser : Miso.Dataset.Parsers.GoogleSpreadsheet,\n                                      key : ssid,\n                                      worksheet : tab\n                                      });\n                                      \n                                      //load data from spreadsheet\n                                      lsheet.fetch({\n                                                   success : function() {\n                                                \n                                                   this.each(function(row){\n                                                             Vis.data.push(row);\n                                                             });\n                                                   Vis.data.forEach(function(d) {\n                                                                    d.created *= 1000;\n                                                                    });\n                                                   \n                                                   createDiagram();\n\n                                                   },\n                                                   error : function() {\n                                                   console.log(\"Data failed to load from GSS.\");\n                                                   }\n                                                   });\n                                                   \n    }\n\n    </script>\n\n  </body>\n</html>\n", "description": "d3 Tutorial: Coordinated Views", "created_at": "2013-09-30T19:31:53Z", "updated_at": "2015-12-24T08:09:17Z", "api": ["d3.dispatch", "d3.extent", "d3.time.scale", "d3.svg.brush", "d3.svg.axis", "d3.time.format", "d3.rebind", "d3.max", "d3.min", "d3.scale.linear", "d3.select", "d3.geo.albersUsa", "d3.geo.path", "d3.chart.scatter", "d3.chart.brush", "d3.json"], "readme": "", "uid": "dukevis_6768900"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<html>\n  <head>\n    <style>\n      .axis {\n        font-size: 10px;\n      }\n      .axis path {\n        fill: none;\n        stroke: #000000;\n      }\n      .axis .tick line {\n        stroke: #000;\n      }\n        \n        .states {\n            fill: #ccc;\n            stroke: #fff;\n        }\n  \n    </style>\n  </head>\n  <body>\n   \n \n    <script src=\"http://d3js.org/d3.v3.js\"></script>\n    <script src=\"scatter.js\"></script>\n    <script src=\"brush.js\"></script>\n    <script src=\"symbol_map.js\"></script>\n    <script src=\"miso.ds.deps.0.4.1.js\"></script>\n    <script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n    <script src=\"http://d3js.org/queue.v1.min.js\"></script>\n\n  \n    <script>\n        \n        var Vis = {};\n        Vis.data = new Array();\n    \n        //http://bl.ocks.org/mbostock/4342045\n        var width = 960,\n        height = 500;\n        var data;\n        \n        var SPREADSHEET_ID = \"0Agy_OAo_DS4PdFlrdVR1X2Nub1U3VnE0X0xBemI1eUE\";\n        var SPREADSHEET_TAB = \"1\";\n        \n        var json_file = \"pics5.json\";\n\n        var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n        \n        var mapgroup = svg.append(\"g\")\n        ;\n        \n        //Define map projection\n        var projection = d3.geo.albersUsa()\n            .translate([700, 230])\n            .scale([500]);\n        \n        \n        var path = d3.geo.path()\n            .projection(projection);\n\n        queue()\n        .defer(d3.json, \"us.json\")\n        .await(ready);\n        \n        function ready(error, us) {\n            \n            mapgroup.append(\"path\")\n            .attr(\"class\", \"states\")\n            .datum(topojson.feature(us, us.objects.states))\n            .attr(\"d\", path);\n            \n            \n            loadJson(json_file);\n            //loadGSS(SPREADSHEET_ID, SPREADSHEET_TAB);\n            \n        }\n\n\n\n        \n      \n      function createDiagram() {\n\n          var sgroup = svg.append(\"g\")\n          .attr(\"transform\", \"translate(50, 0)\")\n          var scatter = d3.chart.scatter()\n          scatter.data(Vis.data)\n          scatter(sgroup)\n          \n          var symbol_map = d3.chart.symbol_map()\n          symbol_map.data(Vis.data)\n          symbol_map(mapgroup)\n          \n          \n          //brush\n          var bgroup = svg.append(\"g\")\n          .attr(\"transform\", \"translate(100, 430)\")\n          var brush = d3.chart.brush()\n          brush\n          .data(Vis.data)\n          .width(800)\n          brush(bgroup)\n          \n          brush.on(\"filter\", function(filtered) {\n                   scatter.data(filtered);\n                   scatter.update();\n                   symbol_map.data(filtered)\n                   symbol_map.update();\n                   })\n                   \n          scatter.on(\"hover\", function(hovered) {\n                              brush.highlight(hovered)\n                              symbol_map.highlight(hovered)\n                              })\n\n        symbol_map.on(\"hover\", function(hovered) {\n          scatter.highlight(hovered)\n          brush.highlight(hovered)\n        })\n\n\n      }\n    \n      function loadJson(file_name) {\n          d3.json(file_name, function(error, file_data) {\n                  Vis.data = file_data;\n                  \n                  Vis.data.forEach(function(d) {\n                               d.created *= 1000;\n                  });\n                  createDiagram();\n                  });\n          \n                  \n      }\n    \n    function loadGSS(ssid, tab) {\n        \n        //connect to spreadsheet\n        var lsheet = new Miso.Dataset({\n                                      importer : Miso.Dataset.Importers.GoogleSpreadsheet,\n                                      parser : Miso.Dataset.Parsers.GoogleSpreadsheet,\n                                      key : ssid,\n                                      worksheet : tab\n                                      });\n                                      \n                                      //load data from spreadsheet\n                                      lsheet.fetch({\n                                                   success : function() {\n                                                \n                                                   this.each(function(row){\n                                                             Vis.data.push(row);\n                                                             });\n                                                   Vis.data.forEach(function(d) {\n                                                                    d.created *= 1000;\n                                                                    });\n                                                   \n                                                   createDiagram();\n\n                                                   },\n                                                   error : function() {\n                                                   console.log(\"Data failed to load from GSS.\");\n                                                   }\n                                                   });\n                                                   \n    }\n\n    </script>\n\n  </body>\n</html>\n", "description": "d3 Tutorial: Coordinated Views", "created_at": "2015-10-08T16:24:27Z", "updated_at": "2015-10-08T16:24:28Z", "api": ["d3.dispatch", "d3.extent", "d3.time.scale", "d3.svg.brush", "d3.svg.axis", "d3.time.format", "d3.rebind", "d3.max", "d3.min", "d3.scale.linear", "d3.select", "d3.geo.albersUsa", "d3.geo.path", "d3.chart.scatter", "d3.chart.brush", "d3.json"], "readme": "", "uid": "ufenegga_d5dd49363a42fb2d5a07"}, {"code": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>Knight D3 Module 5</title>\n        <style>\n            body {\n                margin: 0;\n            }\n\n            .axis path, .axis line {\n              fill: none;\n              stroke: #000;\n              shape-rendering: crispEdges;\n            }\n\n            circle {\n                fill: rgb(173, 118, 55);\n                opacity: 0.8;\n            }\n\n            circle:hover {\n                fill: rgb(237, 128, 4);\n            }\n\n            .axis text, text.axis {\n                font-size: 12px;\n            }\n\n            text.centered {\n                text-anchor: middle;\n            }\n\n            h1, p, text {\n                font-family: avenir, sans-serif;\n            }\n\n            h1 {\n                font-weight: initial;\n                margin: 4px 50px;\n            }\n\n            p {\n                margin: 4px 50px;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>High School Prevents Teen Pregnancy</h1>\n        <p>Plots teen pregnancy (<a href=http://noceilings.org/data>NoCeilings</a> series ADFERRAT) vs. net female high school enrollment (series NERASEFE). Circle area indicates the percentage of women who are internet users (IUPOHPWBxPERFINTU). Even though all four datasets are unavailable for most of the developed world, we see how a women's opportunities are affected by society.</p>\n        <svg>\n        </svg>\n        <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n        <script>\n            var html_height = 125,\n                margin = {top: 20, right: 20, bottom: 35, left: 50},\n                width = 960 - margin.left - margin.right,\n                height = 800 - margin.top - margin.bottom - html_height;\n\n            var x = d3.scale.linear()\n                .range([0, width]);\n\n            var y = d3.scale.linear()\n                .range([height, 0]);\n\n            var r = d3.scale.sqrt()\n                .range([0, 16]);\n\n            var xAxis = d3.svg.axis()\n                .scale(x)\n                .orient(\"bottom\")\n                .tickFormat(function(d){ return d + \"%\"; });\n\n            var yAxis = d3.svg.axis()\n                .scale(y)\n                .orient(\"left\")\n                .tickFormat(function(d){ return d + \"%\"; });\n\n            d3.csv(\"no-ceilings-data.csv\", function(row){\n                //accessor to convert to numbers\n                var obj = {}\n                Object.keys(row).forEach(function(k){\n                    var v = row[k]\n                    obj[k] = +v || v;\n                })\n                // wiap = women internet access percentage\n                obj.wiap = obj.internet_users_per_100 * obj.internet_users_percent_female / 100;\n                return obj\n            }, function(err, data){\n                if (err) return console.error(err);\n                data = data.filter(function(d){return d.population > 5})\n                    .sort(function(a,b){return d3.descending(a.wiap, b.wiap)})\n\n                x.domain(d3.extent(data, function(d){return d.female_hs_enrollment}))\n                y.domain([0, d3.max(data, function(d){return d.teen_pregnancy})])\n                r.domain([0, d3.max(data, function(d){return d.wiap})])\n\n                var svg = d3.select(\"svg\")\n                    .attr(\"width\", margin.left + width + margin.right)\n                    .attr(\"height\", margin.top + height + margin.bottom)\n                  .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\n                svg.append(\"g\")\n                    .attr(\"class\", \"x axis\")\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\n                    .call(xAxis);\n                svg.append(\"g\")\n                    .attr(\"transform\", \"rotate(270)\")\n                  .append(\"text\")\n                    .attr(\"x\", -height/2)\n                    .attr(\"y\", -30)\n                    .attr(\"class\", \"centered axis\")\n                    .text(\"Teen pregnancy rate\")\n\n                svg.append(\"g\")\n                    .attr(\"class\", \"y axis\")\n                    .call(yAxis)\n                svg.append(\"text\")\n                    .attr(\"x\", width/2)\n                    .attr(\"y\", height+30)\n                    .attr(\"class\", \"centered axis\")\n                    .text(\"Percent of girls who attend high school\")\n\n                svg.selectAll(\"circle\")\n                   .data(data)\n                   .enter()\n                   .append(\"circle\")\n                   .attr(\"cx\", function(d){return x(d.female_hs_enrollment)})\n                   .attr(\"cy\", function(d){return y(d.teen_pregnancy)})\n                   .attr(\"r\", function(d){return r(d.wiap)})\n                 .append(\"title\")\n                 .text(function(d){\n                     return d.country + \" has a teen pregnancy rate of \" + d3.round(d.teen_pregnancy, 2) + \"% and \" +\n                     d3.round(d.female_hs_enrollment, 2) + \"% of girls attend high school. \" +\n                     d3.round(d.wiap, 2) + \"% of women are internet users.\"\n                 })\n            })\n        </script>\n    </body>\n</html>\n", "description": "Knight D3 Modules 5", "created_at": "2015-04-16T02:56:00Z", "updated_at": "2015-08-29T14:19:15Z", "api": ["d3.scale.linear", "d3.scale.sqrt", "d3.svg.axis", "d3.csv", "d3.descending", "d3.extent", "d3.max", "d3.select", "d3.round"], "readme": "", "uid": "mgold_3cb71efd1287f5c03c80"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\ncircle {\n  fill: rgb(31, 119, 180);\n  fill-opacity: .25;\n  stroke: rgb(31, 119, 180);\n  stroke-width: 1px;\n}\n\n.leaf circle {\n  fill: #ff7f0e;\n  fill-opacity: 1;\n}\n\ntext {\n  font: 10px sans-serif;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar diameter = 960,\n    format = d3.format(\",d\");\n\nvar pack = d3.layout.pack()\n    .size([diameter - 4, diameter - 4])\n    .radius(function(d){return Math.sqrt(d);})\n    .value(function(d) { return d.size; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(2,2)\");\n\nd3.json(\"flare.json\", function(error, root) {\n  var node = svg.datum(root).selectAll(\".node\")\n      .data(pack.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return d.children ? \"node\" : \"leaf node\"; })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"title\")\n      .text(function(d) { return d.name + (d.children ? \"\" : \": \" + format(d.size)); });\n\n  node.append(\"circle\")\n      .attr(\"r\", function(d) { return d.r; });\n\n  node.filter(function(d) { return !d.children; }).append(\"text\")\n      .attr(\"dy\", \".3em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.name.substring(0, d.r / 3); });\n});\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n</script>", "description": "d3 pack radius fail", "created_at": "2014-05-16T17:42:02Z", "updated_at": "2015-08-29T14:01:30Z", "api": ["d3.format", "d3.layout.pack", "d3.select", "d3.json"], "readme": "Enclosure diagrams use containment to represent the hierarchy. Although circle packing is not as space-efficient as a treemap, it better reveals the hierarchy. Implementation based on work by [Jeff Heer](http://jheer.org/). Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, also courtesy Jeff Heer.\n\nSee also this [zoomable version](/mbostock/7607535).", "uid": "ecerulm_f0a36710e3ccbf0cfc01"}, {"code": "<!DOCTYPE html>\n<html>\n<meta charset=\"utf-8\">\n<title>Sankey Diagram</title>\n<style>\n \n@import url(http://fonts.googleapis.com/css?family=PT+Serif|PT+Serif:b|PT+Serif:i|PT+Sans|PT+Sans:b);\n \n#chart {\n  height: 500px;\n}\n \n.node rect {\n  cursor: move;\n  fill-opacity: .9;\n  shape-rendering: crispEdges;\n}\n \n.node text {\n  pointer-events: none;\n  text-shadow: 0 1px 0 #fff;\n}\n \n.link {\n  fill: none;\n  stroke: #000;\n  stroke-opacity: .2;\n}\n \n.link:hover {\n  stroke-opacity: .5;\n}\n \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js?2.9.1\"></script>\n<script src=\"sankey.js\"></script>\n<script>\n \nvar margin = {top: 1, right: 1, bottom: 6, left: 1},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar formatNumber = d3.format(\",.0f\"),\n    format = function(d) { return formatNumber(d) + \" TWh\"; },\n    color = d3.scale.category20();\n \nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nvar sankey = d3.sankey()\n    .nodeWidth(15)\n    .nodePadding(10)\n    .size([width, height]);\n \nvar path = sankey.link();\n \nd3.json(\"energy.json\", function(energy) {\n \n  sankey\n      .nodes(energy.nodes)\n      .links(energy.links)\n      .layout(32);\n \n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(energy.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n \n  link.append(\"title\")\n      .text(function(d) { return d.source.name + \" \u2192 \" + d.target.name + \"\\n\" + format(d.value); });\n \n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(energy.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n      .origin(function(d) { return d; })\n      .on(\"dragstart\", function() { this.parentNode.appendChild(this); })\n      .on(\"drag\", dragmove));\n \n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { return d.name + \"\\n\" + format(d.value); });\n \n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n \n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \"translate(\" + d.x + \",\" + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n \n</script>", "description": "d3 Sankey Demo", "created_at": "2014-02-12T16:43:39Z", "updated_at": "2015-08-29T13:56:17Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.json", "d3.behavior.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest"], "readme": "", "uid": "git-ashish_8959381"}, {"code": "  <!DOCTYPE html>\n  <html>\n    <head>\n      <meta charset=utf-8 />\n      <title>Leaflet, Mapbox and D3JS test</title>\n      <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />\n      <script src='https://api.tiles.mapbox.com/mapbox.js/v2.0.1/mapbox.js'></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.11/d3.min.js\"></script>\n        <script src=\"http://libs.cartocdn.com/cartodb.js/v3/cartodb.js\"></script>\n      <link href='https://api.tiles.mapbox.com/mapbox.js/v2.0.1/mapbox.css' rel='stylesheet' />\n        <link rel=\"stylesheet\" href=\"http://libs.cartocdn.com/cartodb.js/v3/themes/css/cartodb.css\" />\n      <style>\n        \n        body { margin:0; padding:0; }\n        \n        #map { \n          width: 1200px;\n          height: 800px;\n          margin: 50px auto;\n        }\n\n        svg { \n          position: relative; \n        }\n\n        path {\n          fill: #000;\n          fill-opacity: 0;\n          stroke: #fff;\n          stroke-width: 1.5px;\n        }\n\n        path:hover {\n          fill: hsl(340, 50%, 50%);\n          fill-opacity: .4;\n        }\n\n      </style>\n    </head>\n    <body>\n\n      <div id='map'></div>\n\n      <script>\n\n        /********************************************************\n          MapBox JS code credit: \n          https://www.mapbox.com/mapbox.js/example/v1.0.0/plain-leaflet/  \n        ********************************************************/\n\n        var mapboxTiles = L.tileLayer('https://{s}.tiles.mapbox.com/v3/chenrick.k94zehfr/{z}/{x}/{y}.png');\n\n        var params = {\n          center: [0,0],\n          minZoom: 2, \n          maxZoom: 4,\n          zoom: 2,        \n        };\n\n        var map = L.map('map', params)\n            .addLayer(mapboxTiles);\n\n        /********************************************************\n          CartoDB code credit: http://docs.cartodb.com/tutorials/create_map_cartodbjs.html\n        ********************************************************/\n\n        var CbdLayerUrl = \"http://chenrick.cartodb.com/api/v2/viz/f8014f6c-343f-11e4-a181-0e230854a1cb/viz.json\";\n\n        cartodb.createLayer(map, CbdLayerUrl).on('done', function(layer) {\n          init();\n        })\n        .addTo(map);\n\n         /********************************************************\n          D3 JS code credit: http://bost.ocks.org/mike/leaflet/  \n        ********************************************************/\n        function init(){\n          /* set up the svg object in realtionship to the Leaflet map */\n          var svg = d3.select(map.getPanes().overlayPane).append(\"svg\"),\n                g = svg.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\");\n\n          d3.json(\"ne_10m_time_zones.json\", function(collection) {\n            \n            console.log(\"collection: \", collection);\n\n            var transform = d3.geo.transform({point: projectPoint}),\n                  path = d3.geo.path().projection(transform);\n\n            var feature = g.selectAll(\"path\")\n                  .data(collection.features)\n                .enter().append(\"path\");\n            \n            map.on(\"viewreset\", reset);\n            reset();\n\n            function reset(){\n              var bounds = path.bounds(collection),\n              topLeft = bounds[0],\n              bottomRight = bounds[1];    \n\n              svg .attr(\"width\", bottomRight[0] - topLeft[0])\n                    .attr(\"height\", bottomRight[1] - topLeft[1])\n                    .style(\"left\", topLeft[0] + \"px\")\n                    .style(\"top\", topLeft[1] + \"px\");\n\n              g   .attr(\"transform\", \"translate(\" + -topLeft[0] + \",\" + -topLeft[1] + \")\");\n\n              feature.attr(\"d\", path);\n            }             \n\n            function projectPoint(x, y) {\n              var point = map.latLngToLayerPoint(new L.LatLng(y, x));\n              this.stream.point(point.x, point.y);\n            }\n\n          });\n        }\n\n      </script>\n    </body>\n  </html>", "description": "CartoDB JS + D3 JS", "created_at": "2014-09-11T12:27:39Z", "updated_at": "2015-08-29T14:06:18Z", "api": ["d3.select", "d3.json", "d3.geo.transform", "d3.geo.path"], "readme": "", "uid": "clhenrick_20fd8f959b965d647f83"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  margin: auto;\n  padding-top: 40px;\n  position: relative;\n  width: 960px;\n}\n\nbutton {\n  position: absolute;\n  right: 10px;\n  top: 10px;\n}\n\n.bullet { font: 10px sans-serif; }\n.bullet .marker { stroke: #000; stroke-width: 2px; }\n.bullet .tick line { stroke: #666; stroke-width: .5px; }\n.bullet .range.s0 { fill: #eee; }\n.bullet .range.s1 { fill: #ddd; }\n.bullet .range.s2 { fill: #ccc; }\n.bullet .measure.s0 { fill: lightsteelblue; }\n.bullet .measure.s1 { fill: steelblue; }\n.bullet .title { font-size: 14px; font-weight: bold; }\n.bullet .subtitle { fill: #999; }\n\n</style>\n<button>Update</button>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"bullet.js\"></script>\n<script>\n\nvar margin = {top: 5, right: 40, bottom: 20, left: 120},\n    width = 960 - margin.left - margin.right,\n    height = 50 - margin.top - margin.bottom;\n\nvar chart = d3.bullet()\n    .width(width)\n    .height(height);\n\nd3.json(\"bullets.json\", function(error, data) {\n  var svg = d3.select(\"body\").selectAll(\"svg\")\n      .data(data)\n    .enter().append(\"svg\")\n      .attr(\"class\", \"bullet\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .call(chart);\n\n  var title = svg.append(\"g\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"transform\", \"translate(-6,\" + height / 2 + \")\");\n\n  title.append(\"text\")\n      .attr(\"class\", \"title\")\n      .text(function(d) { return d.title; });\n\n  title.append(\"text\")\n      .attr(\"class\", \"subtitle\")\n      .attr(\"dy\", \"1em\")\n      .text(function(d) { return d.subtitle; });\n\n  d3.selectAll(\"button\").on(\"click\", function() {\n    svg.datum(randomize).call(chart.duration(1000)); // TODO automatic transition\n  });\n});\n\nfunction randomize(d) {\n  if (!d.randomizer) d.randomizer = randomizer(d);\n  d.ranges = d.ranges.map(d.randomizer);\n  d.markers = d.markers.map(d.randomizer);\n  d.measures = d.measures.map(d.randomizer);\n  return d;\n}\n\nfunction randomizer(d) {\n  var k = d3.max(d.ranges) * .2;\n  return function(d) {\n    return Math.max(0, d + k * (Math.random() - .5));\n  };\n}\n\n</script>\n", "description": "D3 Bullet Chart", "created_at": "2015-02-20T07:27:07Z", "updated_at": "2015-08-29T14:15:48Z", "api": ["d3.select", "d3.scale.linear", "d3.timer.flush", "d3.bullet", "d3.json", "d3.selectAll", "d3.max"], "readme": "Designed by Stephen Few, a bullet chart \u201cprovides a rich display of data in a small space.\u201d A variation on a bar chart, bullet charts compare a given quantitative measure (such as profit or revenue) against qualitative ranges (e.g., poor, satisfactory, good) and related markers (e.g., the same measure a year ago). Layout inspired by [Stephen Few](http://www.perceptualedge.com/articles/misc/Bullet_Graph_Design_Spec.pdf). Implementation based on work by [Clint Ivy](http://projects.instantcognition.com/protovis/bulletchart/), Jamie Love of [N-Squared Software](http://www.nsquaredsoftware.com/) and [Jason Davies](http://www.jasondavies.com/). The \"update\" button randomizes the values slightly to demonstrate transitions.\n", "uid": "git-ashish_e7182a82862071b405b5"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Zoomable Treemap</title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n<script src=\"http://d3js.org/d3.v2.js\"></script>\n<script src=\"http://code.jquery.com/jquery-1.7.1.js\"></script>\n\n<p id=\"chart\">\n<p id=\"rawdata\">\n\n<script src=\"treemap.js\"></script>\n<script>\n\tfunction reSortRoot(root,value_key) {\n\t\t//console.log(\"Calling\");\n\t\tfor (var key in root) {\n\t\t\tif (key == \"key\") {\n\t\t\t\troot.name = root.key;\n\t\t\t\tdelete root.key;\n\t\t\t}\n\t\t\tif (key == \"values\") {\n\t\t\t\troot.children = [];\n\t\t\t\tfor (item in root.values) {\n\t\t\t\t\troot.children.push(reSortRoot(root.values[item],value_key));\n\t\t\t\t}\n\t\t\t\tdelete root.values;\n\t\t\t}\n\t\t\tif (key == value_key) {\n\t\t\t\troot.value = parseFloat(root[value_key]);\n\t\t\t\tdelete root[value_key];\n\t\t\t}\n\t\t}\n\t\treturn root;\n\t}\n\n\t$( document ).ready(function() {\n\t\t// You can comment out the whole csv section if you just have a JSON file.\n    // loadJSONFile('data/portaldata.json');\n\n    \td3.csv(\"liste.csv\", function(csv_data){\n\n\t\t\t// Add, remove or change the key values to change the hierarchy. \n      var nested_data = d3.nest()\n       \t\t\t\t.key(function(d)  { return d.Continent; })\n       \t\t\t\t.key(function(d)  { return d.Pays; })\n          \t\t\t.key(function(d)  { return d.Name; })\n\t\t\t\t      .entries(csv_data);\n\t\t\t\n\t\t\t// Creat the root node for the treemap\n\t\t\tvar root = {};\n\t\t\t\n\t\t\t// Add the data to the tree\n\t\t\troot.key = \"Niveau de donn\u00e9es\";\n\t\t\troot.values = nested_data;\n\t\t\n\t\t\t// Change the key names and children values from .next and add values for a chosen column to define the size of the blocks\n\t\t\troot = reSortRoot(root,\"Net_Worth\");\n\t\t\t\n\t\t\t// DEBUG\n// \t\t\t$(\"#rawdata\").html(JSON.stringify(root));\n\t\t\t\n\t\t\tloadData(root);\n\t\t\t\n\t\t});\n\n\n\t});\n</script>", "description": "D3 Treemap Milliardaires", "created_at": "2015-03-05T21:44:38Z", "updated_at": "2015-11-02T02:58:06Z", "api": ["d3.csv", "d3.nest", "d3.format", "d3.scale.linear", "d3.layout.treemap", "d3.select", "d3.scale.category20c", "d3.json"], "readme": "", "uid": "fdaudens_22905918f5aec406f773"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style type=\"text/css\">\n\nsvg {\n  font-family: \"Helvetica Neue\", Helvetica;\n}\n\n.line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2px;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar m = [20, 20, 30, 20],\n    w = 960 - m[1] - m[3],\n    h = 500 - m[0] - m[2];\n\nvar x,\n    y,\n    duration = 1500,\n    delay = 500;\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", w + m[1] + m[3])\n    .attr(\"height\", h + m[0] + m[2])\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\nvar stocks,\n    symbols;\n\n// A line generator, for the dark stroke.\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); });\n\n// A line generator, for the dark stroke.\nvar axis = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(h);\n\n// A area generator, for the dark stroke.\nvar area = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y1(function(d) { return y(d.price); });\n\nd3.csv(\"stocks.csv\", function(data) {\n  var parse = d3.time.format(\"%b %Y\").parse;\n\n  // Nest stock values by symbol.\n  symbols = d3.nest()\n      .key(function(d) { return d.symbol; })\n      .entries(stocks = data);\n\n  // Parse dates and numbers. We assume values are sorted by date.\n  // Also compute the maximum price per symbol, needed for the y-domain.\n  symbols.forEach(function(s) {\n    s.values.forEach(function(d) { d.date = parse(d.date); d.price = +d.price; });\n    s.maxPrice = d3.max(s.values, function(d) { return d.price; });\n    s.sumPrice = d3.sum(s.values, function(d) { return d.price; });\n  });\n\n  // Sort by maximum price, descending.\n  symbols.sort(function(a, b) { return b.maxPrice - a.maxPrice; });\n\n  var g = svg.selectAll(\"g\")\n      .data(symbols)\n    .enter().append(\"g\")\n      .attr(\"class\", \"symbol\");\n\n  setTimeout(lines, duration);\n});\n\nfunction lines() {\n  x = d3.time.scale().range([0, w - 60]);\n  y = d3.scale.linear().range([h / 4 - 20, 0]);\n\n  // Compute the minimum and maximum date across symbols.\n  x.domain([\n    d3.min(symbols, function(d) { return d.values[0].date; }),\n    d3.max(symbols, function(d) { return d.values[d.values.length - 1].date; })\n  ]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + (i * h / 4 + 10) + \")\"; });\n\n  g.each(function(d) {\n    var e = d3.select(this);\n\n    e.append(\"path\")\n        .attr(\"class\", \"line\");\n\n    e.append(\"circle\")\n        .attr(\"r\", 5)\n        .style(\"fill\", function(d) { return color(d.key); })\n        .style(\"stroke\", \"#000\")\n        .style(\"stroke-width\", \"2px\");\n\n    e.append(\"text\")\n        .attr(\"x\", 12)\n        .attr(\"dy\", \".31em\")\n        .text(d.key);\n  });\n\n  function draw(k) {\n    g.each(function(d) {\n      var e = d3.select(this);\n      y.domain([0, d.maxPrice]);\n\n      e.select(\"path\")\n          .attr(\"d\", function(d) { return line(d.values.slice(0, k + 1)); });\n\n      e.selectAll(\"circle, text\")\n          .data(function(d) { return [d.values[k], d.values[k]]; })\n          .attr(\"transform\", function(d) { return \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\"; });\n    });\n  }\n\n  var k = 1, n = symbols[0].values.length;\n  d3.timer(function() {\n    draw(k);\n    if ((k += 2) >= n - 1) {\n      draw(n - 1);\n      setTimeout(horizons, 500);\n      return true;\n    }\n  });\n}\n\nfunction horizons() {\n  svg.insert(\"defs\", \".symbol\")\n    .append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", w)\n      .attr(\"height\", h / 4 - 20);\n\n  var color = d3.scale.ordinal()\n      .range([\"#c6dbef\", \"#9ecae1\", \"#6baed6\"]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"clip-path\", \"url(#clip)\");\n\n  area\n      .y0(h / 4 - 20);\n\n  g.select(\"circle\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (-h / 4) + \")\"; })\n      .remove();\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (h / 4 - 20) + \")\"; })\n      .attr(\"dy\", \"0em\");\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).selectAll(\".area\")\n        .data(d3.range(3))\n      .enter().insert(\"path\", \".line\")\n        .attr(\"class\", \"area\")\n        .attr(\"transform\", function(d) { return \"translate(0,\" + (d * (h / 4 - 20)) + \")\"; })\n        .attr(\"d\", area(d.values))\n        .style(\"fill\", function(d, i) { return color(i); })\n        .style(\"fill-opacity\", 1e-6);\n\n    y.domain([0, d.maxPrice / 3]);\n\n    d3.select(this).selectAll(\".line\").transition()\n        .duration(duration)\n        .attr(\"d\", line(d.values))\n        .style(\"stroke-opacity\", 1e-6);\n\n    d3.select(this).selectAll(\".area\").transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1)\n        .attr(\"d\", area(d.values))\n        .each(\"end\", function() { d3.select(this).style(\"fill-opacity\", null); });\n  });\n\n  setTimeout(areas, duration + delay);\n}\n\nfunction areas() {\n  var g = svg.selectAll(\".symbol\");\n\n  axis\n      .y(h / 4 - 21);\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return axis(d.values); });\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).select(\".line\").transition()\n        .duration(duration)\n        .style(\"stroke-opacity\", 1)\n        .each(\"end\", function() { d3.select(this).style(\"stroke-opacity\", null); });\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1e-6)\n        .attr(\"d\", area(d.values))\n        .remove();\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return !i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill\", color(d.key))\n        .attr(\"d\", area(d.values));\n  });\n\n  svg.select(\"defs\").transition()\n      .duration(duration)\n      .remove();\n\n  g.transition()\n      .duration(duration)\n      .each(\"end\", function() { d3.select(this).attr(\"clip-path\", null); });\n\n  setTimeout(stackedArea, duration + delay);\n}\n\nfunction stackedArea() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  area\n      .y0(function(d) { return y(d.price0); })\n      .y1(function(d) { return y(d.price0 + d.price); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration)\n      .attr(\"transform\", \"translate(0,0)\")\n      .each(\"end\", function() { d3.select(this).attr(\"transform\", null); });\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", function(d, i) { return i < 3 ? 1e-6 : 1; })\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(streamgraph, duration + delay);\n}\n\nfunction streamgraph() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\")\n      .offset(\"wiggle\");\n\n  stack(symbols);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration);\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(overlappingArea, duration + delay);\n}\n\nfunction overlappingArea() {\n  var g = svg.selectAll(\".symbol\");\n\n  line\n      .y(function(d) { return y(d.price0 + d.price); });\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d.maxPrice; }))])\n      .range([h, 0]);\n\n  area\n      .y0(h)\n      .y1(function(d) { return y(d.price); });\n\n  line\n      .y(function(d) { return y(d.price); });\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", .5)\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price) + \")\"; });\n\n  svg.append(\"line\")\n      .attr(\"class\", \"line\")\n      .attr(\"x1\", 0)\n      .attr(\"x2\", w - 60)\n      .attr(\"y1\", h)\n      .attr(\"y2\", h)\n      .style(\"stroke-opacity\", 1e-6)\n    .transition()\n      .duration(duration)\n      .style(\"stroke-opacity\", 1);\n\n  setTimeout(groupedBar, duration + delay);\n}\n\nfunction groupedBar() {\n  x = d3.scale.ordinal()\n      .domain(symbols[0].values.map(function(d) { return d.date; }))\n      .rangeBands([0, w - 60], .1);\n\n  var x1 = d3.scale.ordinal()\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeBands([0, x.rangeBand()]);\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .remove();\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", 1e-6)\n      .remove();\n\n  g.each(function(p, j) {\n    d3.select(this).selectAll(\"rect\")\n        .data(function(d) { return d.values; })\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.date) + x1(p.key); })\n        .attr(\"y\", function(d) { return y(d.price); })\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"height\", function(d) { return h - y(d.price); })\n        .style(\"fill\", color(p.key))\n        .style(\"fill-opacity\", 1e-6)\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1);\n  });\n\n  setTimeout(stackedBar, duration + delay);\n}\n\nfunction stackedBar() {\n  x.rangeRoundBands([0, w - 60], .1);\n\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  var g = svg.selectAll(\".symbol\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.select(\"text\")\n      .delay(symbols[0].values.length * 10)\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price); })\n      .attr(\"height\", function(d) { return h - y(d.price); })\n      .each(\"end\", function() {\n        d3.select(this)\n            .style(\"stroke\", \"#fff\")\n            .style(\"stroke-opacity\", 1e-6)\n          .transition()\n            .duration(duration / 2)\n            .attr(\"x\", function(d) { return x(d.date); })\n            .attr(\"width\", x.rangeBand())\n            .style(\"stroke-opacity\", 1);\n      });\n\n  setTimeout(transposeBar, duration + symbols[0].values.length * 10 + delay);\n}\n\nfunction transposeBar() {\n  x\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeRoundBands([0, w], .2);\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d3.sum(d.values.map(function(d) { return d.price; })); }))]);\n\n  var stack = d3.layout.stack()\n      .x(function(d, i) { return i; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; });\n\n  stack(d3.zip.apply(null, symbols.map(function(d) { return d.values; }))); // transpose!\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price) - 1; })\n      .attr(\"height\", function(d) { return h - y(d.price) + 1; })\n      .attr(\"x\", function(d) { return x(d.symbol); })\n      .attr(\"width\", x.rangeBand())\n      .style(\"stroke-opacity\", 1e-6);\n\n  t.select(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"transform\", function(d) { return \"translate(\" + (x(d.key) + x.rangeBand() / 2) + \",\" + h + \")\"; })\n      .attr(\"dy\", \"1.31em\")\n      .each(\"end\", function() { d3.select(this).attr(\"x\", null).attr(\"text-anchor\", \"middle\"); });\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"x2\", w);\n\n  setTimeout(donut,  duration / 2 + symbols[0].values.length * 10 + delay);\n}\n\nfunction donut() {\n  var g = svg.selectAll(\".symbol\");\n\n  g.selectAll(\"rect\").remove();\n\n  var pie = d3.layout.pie()\n      .value(function(d) { return d.sumPrice; });\n\n  var arc = d3.svg.arc();\n\n  g.append(\"path\")\n      .style(\"fill\", function(d) { return color(d.key); })\n      .data(function() { return pie(symbols); })\n    .transition()\n      .duration(duration)\n      .tween(\"arc\", arcTween);\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"dy\", \".31em\");\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"y1\", 2 * h)\n      .attr(\"y2\", 2 * h)\n      .remove();\n\n  function arcTween(d) {\n    var path = d3.select(this),\n        text = d3.select(this.parentNode.appendChild(this.previousSibling)),\n        x0 = x(d.data.key),\n        y0 = h - y(d.data.sumPrice);\n\n    return function(t) {\n      var r = h / 2 / Math.min(1, t + 1e-3),\n          a = Math.cos(t * Math.PI / 2),\n          xx = (-r + (a) * (x0 + x.rangeBand()) + (1 - a) * (w + h) / 2),\n          yy = ((a) * h + (1 - a) * h / 2),\n          f = {\n            innerRadius: r - x.rangeBand() / (2 - a),\n            outerRadius: r,\n            startAngle: a * (Math.PI / 2 - y0 / r) + (1 - a) * d.startAngle,\n            endAngle: a * (Math.PI / 2) + (1 - a) * d.endAngle\n          };\n\n      path.attr(\"transform\", \"translate(\" + xx + \",\" + yy + \")\");\n      path.attr(\"d\", arc(f));\n      text.attr(\"transform\", \"translate(\" + arc.centroid(f) + \")translate(\" + xx + \",\" + yy + \")rotate(\" + ((f.startAngle + f.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n    };\n  }\n\n  setTimeout(donutExplode, duration + delay);\n}\n\nfunction donutExplode() {\n  var r0a = h / 2 - x.rangeBand() / 2,\n      r1a = h / 2,\n      r0b = 2 * h - x.rangeBand() / 2,\n      r1b = 2 * h,\n      arc = d3.svg.arc();\n\n  svg.selectAll(\".symbol path\")\n      .each(transitionExplode);\n\n  function transitionExplode(d, i) {\n    d.innerRadius = r0a;\n    d.outerRadius = r1a;\n    d3.select(this).transition()\n        .duration(duration / 2)\n        .tween(\"arc\", tweenArc({\n          innerRadius: r0b,\n          outerRadius: r1b\n        }));\n  }\n\n  function tweenArc(b) {\n    return function(a) {\n      var path = d3.select(this),\n          text = d3.select(this.nextSibling),\n          i = d3.interpolate(a, b);\n      for (var key in b) a[key] = b[key]; // update data\n      return function(t) {\n        var a = i(t);\n        path.attr(\"d\", arc(a));\n        text.attr(\"transform\", \"translate(\" + arc.centroid(a) + \")translate(\" + w / 2 + \",\" + h / 2 +\")rotate(\" + ((a.startAngle + a.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n      };\n    }\n  }\n\n  setTimeout(function() {\n    svg.selectAll(\"*\").remove();\n    svg.selectAll(\"g\").data(symbols).enter().append(\"g\").attr(\"class\", \"symbol\");\n    lines();\n  }, duration);\n}\n\n</script>\n", "description": "D3 Show Reel", "created_at": "2016-05-15T14:47:56Z", "updated_at": "2016-05-15T14:47:56Z", "api": ["d3.scale.category10", "d3.select", "d3.svg.line", "d3.svg.area", "d3.csv", "d3.time.format", "d3.nest", "d3.max", "d3.sum", "d3.time.scale", "d3.scale.linear", "d3.min", "d3.timer", "d3.scale.ordinal", "d3.range", "d3.layout.stack", "d3.zip.apply", "d3.layout.pie", "d3.svg.arc", "d3.interpolate"], "readme": "The first 15 seconds of the D3 show reel. See full video at <http://vimeo.com/29862153>. Includes seamless transitions between the following visualization types:\n\n* lines\n* horizons\n* areas\n* stacked areas\n* streamgraph\n* overlapping areas\n* grouped bars\n* stacked bars\n* bars\n* donut\n\nAdmittedly, these aren\u2019t the most useful visualizations; their purpose is not to inform but to demonstrate D3\u2019s capability for producing dynamic visualizations with custom transitions. They *do* show real data (the monthly closing price for ten years\u2019 worth of stock data), but I didn\u2019t include axes for date or price. See the [axis component](http://bl.ocks.org/1166403) for a better example. Also, the stacked visualizations aren\u2019t especially meaningful, unless you imagine owning a portfolio with equal parts AAPL, AMZN, IBM and MSFT. Similarly, the bars and donuts represent the *average* price (or sum) during this time period.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1256572'>D3 Show Reel</a>\n\nforked from <a href='http://bl.ocks.org/sivartravis/'>sivartravis</a>'s block: <a href='http://bl.ocks.org/sivartravis/84553799f7a1a17548e1'>D3 Show Reel</a>", "uid": "domhorvath_5413cfc6b6cd59eb0e1544a990ba3f74"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Quadtree-based Feature Clustering - d3.carto</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    stroke: white;\n  }\n  \n  .clustered {\n    stroke: red;\n    fill: orange;\n  }\n  \n</style>\n<script>\n\n  function makeSomeMaps() {\n    pathSource = 0;\n\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    map.centerOn([-88,39],\"latlong\");\n    map.setScale(2);\n\n    clusterModal = d3.carto.modal();\n    clusterModal.formatter(clusterFormatter);\n\n    regionLayer = d3.carto.layer.geojson();\n    regionLayer\n    .path(\"world.geojson\")\n    .label(\"Countries\")\n    .cssClass(\"country\")\n    .renderMode(\"svg\")\n    .on(\"recluster\", recolorClusters)\n    .cluster(true);\n    \n    map.addCartoLayer(regionLayer);\n\n    map.refresh();\n    \n    function recolorClusters() {\n\n    regionLayer.clusterLayer()\n    .clickableFeatures(true)\n    .modal(clusterModal);\n\n    var clusterColor = d3.scale.category20b();\n    \n    regionLayer.clusterLayer().g()\n    .selectAll(\"path\")\n    .style(\"fill\", function(d,i) {return clusterColor(i%20)})\n    .style(\"stroke\", function(d,i) {return d3.rgb(clusterColor(i%20)).darker()})\n    }\n    \n        function clusterFormatter(d) {\n      var content = \"\";\n      if (d.properties.node) {\n        var content = \"<h1>Clustered Region</h1><p> (\"+d.properties.node._d3MapQuad.size + \" Countries)</p>\"\n        \n      }\n      else {\n        content = \"<h1>Country</h1><p>Name: \" + d.properties.name + \"</p>\"\n      }\n      return content;\n    }\n    \n  }\n  \n  \n  \n\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\">\n</div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>\n", "description": "Feature Clustering - d3.carto", "created_at": "2014-09-12T01:21:37Z", "updated_at": "2015-08-29T14:06:21Z", "api": ["d3.carto.map", "d3.select", "d3.carto.modal", "d3.carto.layer.geojson", "d3.scale.category20b", "d3.rgb"], "readme": "Quadtree-based feature clustering in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nThis is an early example of how using the quadtrees generated with each layer could also be used with feature layers. This allows you to dynamically aggregate features based on zoom. Polygons are colored by their shared grouping at different zoom levels. This version uses centroids--the final version will likely either use bounding box solely or give the option for both.\n\nSee also [simple point clustering](http://bl.ocks.org/emeeks/7d5925cb7d9721c60360) and [more advanced point clustering that leverages circle-packing](http://bl.ocks.org/emeeks/540b1b884b80b14a44c6).\n\nThis also uses a [custom formatter](http://bl.ocks.org/emeeks/905bb4f399e0855e08fe) for the infoboxes to give you the name of an unclustered feature and the number of features in a clustered region.", "uid": "emeeks_1a75ec54489368b514f8"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"pathlayout.js\"></script>\n<script>\nvar width = 600,\n    height = 500;\n\nvar projection = d3.geo.mercator()\n    .scale(5*(width + 1) / 2 / Math.PI)\n    .translate([width / 2, height / 2])\n    .rotate([-125, -15, 0])\n    .precision(.1);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\n\nd3.json(\"track.json\", function(error, track) {\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var trail = d3.layout.trail()\n        .positioner(function(d) {return [d.lon,d.lat];})\n        .coordType('coordinates');\n\n    var trail_layout = trail.data(track).layout();\n\n    paths = svg.selectAll(\"line\").data(trail_layout);\n\n    paths.enter()\n    .append('path')\n    .style(\"stroke-width\",3)\n    .style(\"stroke\",\"black\") \n    .attr(\"d\", path);\n});\n</script>", "description": "D3 Trail Layout using coordinates", "created_at": "2014-07-05T10:20:00Z", "updated_at": "2015-08-29T14:03:31Z", "api": ["d3.geo.mercator", "d3.geo.path", "d3.json", "d3.select", "d3.layout.trail"], "readme": "This an example using the [D3 trail layout](https://github.com/bmschmidt/D3-trail) made by [Benjamin Schmidt](https://github.com/bmschmidt).\nThe example shows how to use the *coordinates* as the *coordType* value.\nThe track.json data represents the Hayian typhoon track, as it's explained in [this blog entry](http://geoexamples.blogspot.com/2013/12/d3-map-styling-tutorial-i-preparing-data.html).\n\nThere is a blog entry explaining this example at [GeoExamples](http://geoexamples.blogspot.com/2014/07/using-d3-trail-layout-to-draw-hayian.html)", "uid": "rveciana_04ce0887026bd3e6185c"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the scatterplot\n    svg.selectAll(\"dot\")\t\n        .data(data)\t\t\t\t\t\t\t\t\t\t\n    .enter().append(\"circle\")\t\t\t\t\t\t\t\t\n        .attr(\"r\", 3.5)\t\t\n        .style(\"fill\", function(d) {\n            if (d.close <= 400) {return \"red\"}\n            else \t{ return \"black\" }\n        ;})\n        .attr(\"cx\", function(d) { return x(d.date); })\t\t \n        .attr(\"cy\", function(d) { return y(d.close); });\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>\n", "description": "if selection in d3.js", "created_at": "2014-06-22T18:45:24Z", "updated_at": "2015-08-29T14:02:53Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple scatterplot](http://bl.ocks.org/d3noob/38744a17f9c0141bcd04) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at demonstrating a the use of an `if` statement to select elements in d3.js. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_464c92429ac05c6a19a1"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<head>\n\t<style>\n\n\t.axis {\n\t  font: 10px sans-serif;\n\t}\n\n\t.axis path,\n\t.axis line {\n\t  fill: none;\n\t  stroke: #000;\n\t  shape-rendering: crispEdges;\n\t}\n\n\t</style>\n</head>\n\n<body>\n\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar\tparseDate = d3.time.format(\"%Y-%m\").parse;\n\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], .05);\n\nvar y = d3.scale.linear().range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tickFormat(d3.time.format(\"%Y-%m\"));\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"bar-data.csv\", function(error, data) {\n\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.value = +d.value;\n    });\n\t\n  x.domain(data.map(function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value ($)\");\n\n  svg.selectAll(\"bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .style(\"fill\", \"steelblue\")\n      .attr(\"x\", function(d) { return x(d.date); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); });\n\n});\n\n</script>\n\n</body>\n", "description": "Simple d3.js bar chart", "created_at": "2014-02-12T09:11:14Z", "updated_at": "2016-05-17T07:29:18Z", "api": ["d3.time.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.max"], "readme": "This is a d3.js bar chart as used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is derived from the Mike Bostock's [Bar Chart example](http://bl.ocks.org/mbostock/3885304) but it is a slightly cut down version.", "uid": "d3noob_8952219"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>D3 Visualizing Rotation</title>\n  <meta charset=\"utf-8\" />\n</head>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"legend.js\"></script>\n<style>\n  body, html {\n    width:100%;\n    height:100%;\n  }\n  #vizcontainer {\n    width:100%;\n    height:100%;\n  }\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n<body onload=\"legendDemo()\">\n\n<div id=\"vizcontainer\">\n<svg></svg>\n</div>\n  <footer>\n<script>\n  function legendDemo() {\n\n  sampleNumerical = [1,2.5,5,10,20];\n  sampleThreshold=d3.scale.threshold().domain(sampleNumerical).range(colorbrewer.Reds[5]);\n  horizontalLegend = d3.svg.legend().units(\"Miles\").cellWidth(80).cellHeight(25).inputScale(sampleThreshold).cellStepping(100);\n\n  d3.select(\"svg\").append(\"g\").attr(\"transform\", \"translate(50,70)\").attr(\"class\", \"legend\").call(horizontalLegend);\n\n  sampleCategoricalData = [\"Something\",\"Something Else\", \"Another\", \"This\", \"That\", \"Etc\"]\n  sampleOrdinal = d3.scale.category20().domain(sampleCategoricalData);\n\n  verticalLegend = d3.svg.legend().labelFormat(\"none\").cellPadding(5).orientation(\"vertical\").units(\"Things in a List\").cellWidth(25).cellHeight(18).inputScale(sampleOrdinal).cellStepping(10);\n\n  d3.select(\"svg\").append(\"g\").attr(\"transform\", \"translate(50,140)\").attr(\"class\", \"legend\").call(verticalLegend);\n\n  }\n</script>\n  </footer>\n</body>\n</html>", "description": "D3-svg-legend (test)", "created_at": "2014-08-26T20:30:42Z", "updated_at": "2015-08-29T14:05:45Z", "api": ["d3.scale.threshold", "d3.svg.legend", "d3.select", "d3.scale.category20", "d3.format"], "readme": "[d3.svg.legend](https://github.com/emeeks/d3-svg-legend) provides for a simple legend that can be displayed horizontally or vertically and accepts a few different [d3 scale](https://github.com/mbostock/d3/wiki/Scales) types.", "uid": "hugolpz_09c837f43dc4b3962be9"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n    .axis path,\n    .axis line {\n        fill: none;\n        stroke: #000;\n        shape-rendering: crispEdges;\n    }\n    \n    .hidden {\n        opacity: 0.3;\n    }\n    \n    \n    .extent {\n        fill: #000;\n        fill-opacity: .125;\n        stroke: #fff;\n    }\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.js\"></script>\n<script>\n    \nvar margin = {top: 20, right: 50, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 350 - margin.top - margin.bottom;\n    \nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([0, 10]);\n    \nvar y = d3.scale.linear()\n    .range([height, 0])\n    .domain([0, 10]);\n    \nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n    \nvar curPt = d3.select('body')\n    .append('p')\n    .html(\"Current point: \")\n    .append('span')\n        .attr('id', 'curPt');\n    \nvar svg = d3.select('body').insert('svg', 'p')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n  .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n    \nsvg.append('g')\n    .attr('class', 'x axis')\n    .attr('transform', 'translate(0,'+height+')')\n    .call(xAxis);\n    \nsvg.append('g')\n    .attr('class', 'y axis')\n    .call(yAxis);\n    \nvar brush = d3.svg.brush()\n    .x(x)\n    .y(y)\n    .on(\"brush\", function() {\n        var e = brush.extent(),\n        \t  c = svg.selectAll('circle');\n      \tc.classed('extent', false);\n        c.classed('hidden', function(d) {\n            return e[0][0] > d[0] || d[0] > e[1][0]\n                || e[0][1] > d[1] || d[1] > e[1][1];\n            }\n        );\n    })\n    .on(\"brushend\", function() {\n        if (brush.empty()) svg.selectAll('circle').classed('hidden', false);\n    });\n    \nsvg.call(brush);\n    \nvar data = d3.range(50).map(function() { return [Math.random() * 10, Math.random() * 10]; });\n\nsvg.append('g') \n    .attr('class', 'points')\n    .selectAll('circle')\n    .data(data).enter()\n  .append('circle')\n    .attr('cx', function(d) { return x(d[0]); })\n    .attr('cy', function(d) { return y(d[1]); })\n    .attr('r', 10)\n    .style('fill', 'steelblue')\n    .on('mouseover', function(d) {\n        curPt.html(\"[\" + d[0] + \", \" + d[1] + \"]\");\n    })\n    .on('mouseout', function(d) {\n        curPt.html(\"\");\n    })\n\t\t.on('mousedown', function(d){\n  \t\tvar e = brush.extent(),\n          m = d3.mouse(svg.node()),\n          p = [x.invert(m[0]), y.invert(m[1])];\n       \n      if ( brush.empty() || \n           (e[0][0] > d[0] || d[0] > e[1][0]\n           || e[0][1] > d[1] || d[1] > e[1][1] )   \n      ) {\n        brush.extent([p,p]);\n      } else {\n        d3.select(this).classed('extent', true);\n      }\n    });\n\n    \n</script>", "description": "Getting hover-interaction and brushing to co-exist", "created_at": "2016-05-21T16:57:01Z", "updated_at": "2016-05-21T16:57:01Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.select", "d3.svg.brush", "d3.range", "d3.mouse"], "readme": "Trying to get point hover-interaction and brushing to exist.  I have found some existing precedence ([bug #1604](https://github.com/d3/d3/issues/1604)) for this being a weird problem, particular in relation to how D3's `brush` is implemented.  Previous solutions have suggested drawing points on top and [passing the event along to the brush](http://wrobstory.github.io/2013/11/D3-brush-and-tooltip.html), but this does not handle the case where the brush extent needs to be persistent (in the bigger picture, the scatterplot is linked to other components).\n\nAs implemented above, the brush draws fine and information can be recovered from points on hover.  However, if the brush is started, dragged, or resized with the **mouse starting on a point**, strange behavior occurs (e.g. trying to translate an extent by clicking on a point will cause the extent to resize instead).\n\nHere's what I've got: in `brushstart()` defined in [D3.js](http://d3js.org/d3.v3.js) (line 9192), there are two targets of interest: `this` (which is the element that `brush` is called on), and `eventTarget` (the actual element that was clicked).  For the different operations (dragging, resizing, and \"redrawing\"), `this` should be the parent brush element (in this case, the `svg` element), and `eventTarget` should be the child element that was actually clicked (`rect.extent` for translating the extent, `rect` with datum for resizing, and `rect.background` for redrawing/canceling).  \n\nI can't seem to set the `eventTarget` property within `brushstart()`  appropriately.  Any ideas?\n\n\nforked from <a href='http://bl.ocks.org/yelper/'>yelper</a>'s block: <a href='http://bl.ocks.org/yelper/d38ddf461a0175ebd927946d15140947'>Getting hover-interaction and brushing to co-exist</a>\n\nforked from <a href='http://bl.ocks.org/larsenmtl/'>larsenmtl</a>'s block: <a href='http://bl.ocks.org/larsenmtl/2862c433899f63456f5279e4a6281f5e'>Getting hover-interaction and brushing to co-exist</a>", "uid": "larsenmtl_4c5ebcc9bca489f8f530bd163b35f39b"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Basic d3.carto Map</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    fill-opacity: 1;\n    fill: #4682B4;\n    stroke-opacity: 1;\n    stroke: black;\n    stroke-width: 2px;\n  }\n\n</style>\n<script>\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    countryLayer = d3.carto.layer.geojson();\n    \n    countryLayer.path(\"world.geojson\")\n    .label(\"Countries\")\n    .renderMode(\"svg\")\n    .cssClass(\"country\")\n    .clickableFeatures(true);\n\n    map.addCartoLayer(countryLayer);\n    map.setScale(2);\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Simple Map - d3.carto", "created_at": "2014-09-18T22:21:22Z", "updated_at": "2015-08-29T14:06:38Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.geojson"], "readme": "A simple map example created with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** that loads a single geoJSON layer.\n", "uid": "emeeks_b60d4c31f5802a120456"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.land {\n  fill: #222;\n}\n\n.county-boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.state-boundary {\n  fill: none;\n  stroke: #fff;\n}\n\n.border {\n  stroke: #000;\n  fill: none;\n\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3-composite-projections/0.3.5/conicConformalFrance-proj.min.js\"></script>\n<script>\n\nvar width = 900,\n    height = 500;\n\nvar projection = d3.geo.conicConformalFrance();\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"https://cdn.rawgit.com/rveciana/5919944/raw/b1f826319231c3e06d6e8548bc947ca2c29dc9e8/france.json\", function(error, regions) {\n  var land = topojson.feature(regions, regions.objects.regions);\n\n    svg.selectAll(\"path\")\n      .data(land.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\",\"#000\")\n      .style(\"stroke-width\",\".5px\")\n      .style(\"fill\",\"#aca\")\n      .on(\"mouseover\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"red\");\n        })\n      .on(\"mouseout\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"#aca\");\n        });\n\n  svg\n    .append(\"path\")\n      .style(\"fill\",\"none\")\n      .style(\"stroke\",\"#000\")\n      .attr(\"d\", projection.getCompositionBorders());\n\n\n});\n\n\n</script>\n", "description": "d3-composite-projections conicConformalFrance", "created_at": "2015-05-11T15:19:46Z", "updated_at": "2016-03-01T10:58:11Z", "api": ["d3.geo.conicConformalFrance", "d3.geo.path", "d3.select", "d3.json"], "readme": "This file shows how to use the *conicConformalFrance* projection from [d3-composite-projections](http://rveciana.github.io/d3-composite-projections/).", "uid": "rveciana_02eb5b83848e0b06fa8e"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.land {\n  fill: #222;\n}\n\n.county-boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.state-boundary {\n  fill: none;\n  stroke: #fff;\n}\n\n.border {\n  stroke: #000;\n  fill: none;\n\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3-composite-projections/0.3.5/conicEquidistantJapan.min.js\"></script>\n<script>\n\nvar width = 700,\n    height = 500;\n\n    var projection = d3.geo.conicEquidistantJapan();\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"https://cdn.rawgit.com/rveciana/5919944/raw/a3d0f29d851893e15dcf6194997453086c408fd3/japan.json\", function(error, regions) {\n  var land = topojson.feature(regions, regions.objects.japan);\n\n    svg.selectAll(\"path\")\n      .data(land.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\",\"#000\")\n      .style(\"stroke-width\",\".5px\")\n      .style(\"fill\",\"#aca\")\n      .on(\"mouseover\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"red\");\n        })\n      .on(\"mouseout\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"#aca\");\n        });\n\n  svg\n    .append(\"path\")\n      .style(\"fill\",\"none\")\n      .style(\"stroke\",\"#000\")\n      .attr(\"d\", projection.getCompositionBorders());\n\n\n});\n\n\n</script>\n", "description": "d3-composite-projections conicEquidistantJapan", "created_at": "2015-12-18T18:15:33Z", "updated_at": "2016-03-01T10:56:07Z", "api": ["d3.geo.conicEquidistantJapan", "d3.geo.path", "d3.select", "d3.json"], "readme": "This file shows how to use the *conicEquidistantJapan* projection from [d3-composite-projections](http://rveciana.github.io/d3-composite-projections/).", "uid": "rveciana_72987a139a9886ed6a87"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Projection Mode Rendering</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n  button.reproject {\n    position: fixed;\n    z-index: 1;\n    top: 250px;\n  }\n</style>\n<script>\nfunction makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    map.mode(\"projection\")\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .type(\"csv\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(3)\n    .x(function(d) {return d.x})\n    .y(function(d) {return d.xy});\n\n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoJSON Countries\")\n    .cssClass(\"countries\")\n    .renderMode(\"canvas\");\n    \n    topojsonLayer = d3.carto.layer.topojson();\n    topojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n    .label(\"TopoJSON Lines\")\n    .cssClass(\"roads\")\n    .renderMode(\"canvas\");\n    \n    d3.select(\"#map\").append(\"button\").attr(\"class\", \"reproject\").html(\"Reproject to Conic Equidistant\").on(\"click\", reproject);\n    \n    map.addCartoLayer(geojsonLayer).addCartoLayer(topojsonLayer).addCartoLayer(csvLayer)\n\n    function reproject() {\n\n    var projection = d3.geo.conicEquidistant()\n    .center([0, 15])\n    .scale(600)\n    .translate(map.zoom().translate())\n    .precision(.1);\n\n    map.projection(projection);\n    map.refresh();\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Projection Mode Rendering - d3.carto.map", "created_at": "2014-07-12T19:07:21Z", "updated_at": "2015-08-29T14:03:54Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.csv", "d3.carto.layer.geojson", "d3.carto.layer.topojson", "d3.geo.conicEquidistant"], "readme": "This is an of projection mode rendering from **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nSwitching the map mode to \"projection\" activates it. The default projection is Mollweide, but you can define your own and assign it using map.projection(), as shown in the reproject function.\n", "uid": "emeeks_ffb10b231ec605c1dde8"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - custom infobox formatters</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .countryInfobox {\n    color: pink;\n    font-style: italic;\n    padding: 20px;\n  }\n  rect.bluesquare {\n    fill: #4682B4;\n    stroke: black;\n    stroke-width: 1px;\n}\n.countryborders {\n    fill: rgba(0,0,0,0);\n    stroke-width: 1px;\n    stroke: gray;\n    cursor: pointer;\n}\n\n.roads {\n    stroke: brown;\n    stroke-width: 1px;\n    fill: none;\n}\n\n.halffilledcountries {\n    fill: rgba(224,224,209,0.5);\n    stroke-width: 1px;\n    stroke: black;\n    opacity: 1;    \n}\n\n</style>\n<script>\n\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    tileLayer = d3.carto.layer.tile();\n    tileLayer\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\")\n    .on(\"load\", recenter);\n\n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoBorders\")\n    .cssClass(\"countryborders\")\n    .renderMode(\"canvas\")\n    .on(\"load\", createFeatureLayer);\n    \n    topojsonLayer = d3.carto.layer.topojson();\n    topojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n    .label(\"TopoRoutes\")\n    .cssClass(\"roads\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true);\n\n    csvModal = d3.carto.modal();\n    csvModal.formatter(\n      function(d) {return \"<h1>\" + d.label + \" in modern day \" + d.modern + \"</h1>\"}\n    )\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .type(\"csv\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(8)\n    .x(\"x\")\n    .y(\"y\")\n    .modal(csvModal)\n    .clickableFeatures(true);\n\n    map.addCartoLayer(tileLayer);\n    map.addCartoLayer(topojsonLayer);\n    map.addCartoLayer(geojsonLayer);\n    map.addCartoLayer(csvLayer);\n\n    function recenter() {\n      map.centerOn([3,43],\"latlong\");\n    }\n    \n    function createFeatureLayer() {\n      var featuresArray = [];\n      var mapLayers = map.layers();\n      mapLayers.forEach(function (layer) {\n        if (layer.label() == \"GeoBorders\") {\n          featuresArray = layer.features();\n        }\n      })\n     shortNameCountries = featuresArray.filter(function(d) {return d.properties.name.length < 7})\n\n    featureModal = d3.carto.modal();\n    featureModal.formatter(\n      function(d) {return \"<span class='countryInfobox'>The country of \" + d.properties.name + \" has a short name</span>\"}\n    )\n    \n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(shortNameCountries)\n    .label(\"Feature Array\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true)\n    .modal(featureModal);\n    \n    map.addCartoLayer(featureLayer);\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Custom Infobox Formatter - d3.carto.map", "created_at": "2015-09-08T08:43:16Z", "updated_at": "2015-09-08T08:43:16Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.topojson", "d3.carto.modal", "d3.carto.layer.csv", "d3.carto.layer.featureArray"], "readme": "A demonstration of custom modal infoboxes from **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nIf you click on a site point (the pink circles) you'll see an infobox that reads something like \"Lugdunum Convenarum in modern day France\" whereas if you click on a country, you'll see an infobox that reads something like \"The country of Spain has a short name\".\n\nHow a modal handles the data in a datapoint for display is handled by defining a custom formatter for the modal, which requires that you create a new d3.carto.modal. The new modal is assigned to a d3.carto.layer using .modal() as shown in the example for the CSV Points and Feature Array layers.\n\nFormatters are defined using the standard D3 accessor syntax. The default formatter, demonstrated in the [basic modal example](http://bl.ocks.org/emeeks/433a9b04f82a1c78af4b). Since you know your data better than d3.carto does, you can specify how to parse what attributes in as specific a manner as you want. The function should return a string of HTML suitable to be dropped into the modal div.\n\nThe key lines for defining the modal and formatter are:\n```\n    csvModal = d3.carto.modal();\n    csvModal.formatter(\n      function(d) {return \"<h1>\" + d.label + \" in modern day \" + d.modern + \"</h1>\"}\n    )\n```\n\nand:\n```\n    featureModal = d3.carto.modal();\n    featureModal.formatter(\n      function(d) {return \"<p class='countryInfobox'>The country of \" + d.properties.name + \" has a short name</p>\"}\n    )\n```", "uid": "renecnielsen_f8fba5bc1d56bafcdbe3"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Zoom + Pan</title>\n<style>\n\n.overlay {\n  fill: none;\n  pointer-events: all;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500;\n\nvar randomX = d3.random.normal(width / 2, 80),\n    randomY = d3.random.normal(height / 2, 80);\n\nvar data = d3.range(2000).map(function() {\n  return [\n    randomX(),\n    randomY()\n  ];\n});\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .call(d3.behavior.zoom().scaleExtent([1, 8]).on(\"zoom\", zoom))\n  .append(\"g\");\n\nsvg.append(\"rect\")\n    .attr(\"class\", \"overlay\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"circle\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"r\", 2.5)\n    .attr(\"transform\", function(d) { return \"translate(\" + d + \")\"; });\n\nfunction zoom() {\n  svg.attr(\"transform\", \"translate(\" + d3.event.translate + \")scale(\" + d3.event.scale + \")\");\n}\n\n</script>\n", "description": "D3 Zooming techniques", "created_at": "2015-02-20T08:18:24Z", "updated_at": "2015-08-29T14:15:48Z", "api": ["d3.random.normal", "d3.range", "d3.select", "d3.behavior.zoom"], "readme": "A series of related examples:\n\n* [Canvas geometric zooming](http://bl.ocks.org/3680958)\n* [Canvas semantic zooming](http://bl.ocks.org/3681006)\n* **SVG geometric zooming**\n* [SVG semantic zooming](http://bl.ocks.org/3680957)\n", "uid": "git-ashish_65d72d26368bd3bf75bf"}, {"code": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>Knight D3 Module 6</title>\n        <style>\n            body {\n                margin: 0;\n            }\n\n            .axis path, .axis line {\n              fill: none;\n              stroke: #000;\n              shape-rendering: crispEdges;\n            }\n\n            .line {\n                stroke: black;\n                stroke-width: 1px;\n                opacity: 0.5;\n                fill: none;\n            }\n\n            .line:hover {\n                stroke: red;\n                stroke-width: 2px;\n                opacity: 1;\n            }\n\n            .axis text, text.axis {\n                font-size: 12px;\n            }\n\n            text.centered {\n                text-anchor: middle;\n            }\n\n            h1, p, text {\n                font-family: avenir, sans-serif;\n            }\n\n            h1 {\n                font-weight: initial;\n                margin: 4px 50px;\n            }\n\n            p {\n                margin: 4px 50px;\n            }\n\n            text.label {\n                fill: red;\n                opacity: 0.7;\n                font-size: 12px;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>Women Living with HIV</h1>\n        <p>Shows total infant mortality rate in about 100 countries. <a href=http://noceilings.org/data>NoCeilings</a> series HIVNFEIN.</p>\n        <svg></svg>\n        <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n        <script>\n            var html_height = 125,\n                margin = {top: 20, right: 100, bottom: 35, left: 50},\n                width = 1000 - margin.left - margin.right,\n                height = 800 - margin.top - margin.bottom - html_height;\n\n            var dateFormat = d3.time.format(\"%Y\");\n            var years = d3.range(1995, 2012+1)\n\n            var x = d3.time.scale()\n                .domain([years[0], years[years.length-1]].map(function(d){return dateFormat.parse(\"\"+d)}))\n                .range([0, width]);\n\n            var y = d3.scale.linear()\n                .range([height, 0]);\n\n            var xAxis = d3.svg.axis()\n                .scale(x)\n                .orient(\"bottom\")\n                .tickFormat(dateFormat)\n\n            var yAxis = d3.svg.axis()\n                .scale(y)\n                .orient(\"left\")\n                .tickFormat(function(d){ return d/1e6 });\n\n            var line = d3.svg.line()\n                .x(function(d){return x(d.year)})\n                .y(function(d){return y(d.value)})\n\n            d3.csv(\"countries.csv\", function(err, countries_raw){\n                if (err) return console.error(err);\n                var countries = d3.map(countries_raw, function(d){return d.iso;})\n            d3.csv(\"HIVNFEIN.csv\", function(row){\n                row.years = years.map(function(year){\n                    return {year: dateFormat.parse(\"\"+year),\n                            value: +row[year]};\n                })\n                return row\n            }, function(err, data){\n                if (err) return console.error(err);\n\n                y.domain([0, d3.max(data, function(d){ return d3.max(d.years, function(d2){return d2.value}) })])\n\n                var svg = d3.select(\"svg\")\n                    .attr(\"width\", margin.left + width + margin.right)\n                    .attr(\"height\", margin.top + height + margin.bottom)\n                  .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\n                svg.append(\"g\")\n                    .attr(\"class\", \"x axis\")\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\n                    .call(xAxis);\n                svg.append(\"g\")\n                    .attr(\"transform\", \"rotate(270)\")\n                  .append(\"text\")\n                    .attr(\"x\", -height/2)\n                    .attr(\"y\", -30)\n                    .attr(\"class\", \"centered axis\")\n                    .text(\"Millions of women living with HIV\")\n\n                svg.append(\"g\")\n                    .attr(\"class\", \"y axis\")\n                    .call(yAxis)\n                svg.append(\"text\")\n                    .attr(\"x\", width/2)\n                    .attr(\"y\", height+30)\n                    .attr(\"class\", \"centered axis\")\n                    .text(\"Year\")\n\n                var text = svg.append(\"text\")\n                    .attr(\"class\", \"label\")\n                    .attr(\"x\", width)\n\n                svg.selectAll(\".line\")\n                   .data(data)\n                   .enter()\n                   .append(\"path\")\n                   .attr(\"d\", function(d){return line(d.years)})\n                   .attr(\"class\", \"line\")\n                   .on(\"mouseover\", function(d){\n                       text.text(countries.get(d.ISO).name);\n                       text.attr(\"y\", y(d[\"2012\"]))\n                   })\n                   .on(\"mouseout\", function(d){ text.text(\"\"); })\n                 .append(\"title\")\n                 .text(function(d){\n                     return d.ISO\n                 })\n            })\n            })\n\n        </script>\n    </body>\n</html>\n", "description": "Knight D3 Module 6", "created_at": "2015-04-22T14:54:31Z", "updated_at": "2015-08-29T14:19:41Z", "api": ["d3.time.format", "d3.range", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.csv", "d3.map", "d3.max", "d3.select"], "readme": "", "uid": "mgold_e21dbf08e838796dcf60"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 1.5;\n  shape-rendering: crispEdges;\n}\n \n \n.axis .minor {\n  stroke: red;\n  stroke-width: 1.0;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(16).tickSubdivide(3).tickSize(-60, -60, 0));\n \n</script>", "description": "d3 minor lines 5", "created_at": "2013-01-31T23:24:57Z", "updated_at": "2015-12-12T00:58:56Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "", "uid": "vjpgo_4687662"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 1.5;\n  shape-rendering: crispEdges;\n}\n \n \n.axis .minor {\n  stroke: red;\n  stroke-width: 0.6;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(16).tickSubdivide(3).tickSize(-60, -60, 0));\n \n</script>", "description": "d3 minor lines 6", "created_at": "2013-01-31T23:26:52Z", "updated_at": "2015-12-12T00:58:55Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "", "uid": "vjpgo_4687681"}, {"code": "<!DOCTYPE html>\n<html>\n <head>\n  <meta charset=\"utf-8\" />\n  <title>d3.js Axys Chart</title>\n  <!-- Always force latest IE rendering engine (even in intranet) & Chrome Frame\n  Remove this if you use the .htaccess -->\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n\n  <script  src=\"http://d3js.org/d3.v2.min.js?2.9.1\"></script>        <style>\n            .axis path, .axis line {\n                fill: none;\n                stroke: #000;\n                shape-rendering: crispEdges;\n            }\n        </style>\n</head><body><h3>d3.js Axys Chart    <a href=\"http://ramblings.mcpher.com\">(thanks so much to ramblings.mcpher.com)</a></h3>        <script>\n            var perfdata = new Array();\n\n            var margin = {top: 120, right: 60, bottom: 60, left: 60},\n                width = 1000 - margin.right - margin.left,\n                height = 550 - margin.top - margin.bottom;\n            \n            var x = d3.time.scale()\n                .range([0, width - 60]);\n            \n            var y = d3.scale.linear()\n                .range([height - 20, 0]);\n            \n            var duration = 1500,\n                delay = 500;\n            \n            var color = d3.scale.category10();\n            \n            var svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.right + margin.left)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n            \n            var parse = d3.time.format(\"%m/%d/%Y\").parse, format = d3.time.format(\"%Y\"),\n              perfdata = new Array();   \n         </script><script> var data = {\n   \"cDataSet\":[      {\n         \"date\":\"12/31/1990\",\n         \"portfolio\":\"0\",\n         \"sp500\":\"0\"\n      },\n      {\n         \"date\":\"12/31/1991\",\n         \"portfolio\":\"16.27\",\n         \"sp500\":\"30.47\"\n      },\n      {\n         \"date\":\"12/31/1992\",\n         \"portfolio\":\"7.99\",\n         \"sp500\":\"7.62\"\n      },\n      {\n         \"date\":\"12/31/1993\",\n         \"portfolio\":\"6.55\",\n         \"sp500\":\"10.08\"\n      },\n      {\n         \"date\":\"12/31/1994\",\n         \"portfolio\":\"0.44\",\n         \"sp500\":\"1.32\"\n      },\n      {\n         \"date\":\"12/31/1995\",\n         \"portfolio\":\"16.08\",\n         \"sp500\":\"37.58\"\n      },\n      {\n         \"date\":\"12/31/1996\",\n         \"portfolio\":\"11.56\",\n         \"sp500\":\"22.96\"\n      },\n      {\n         \"date\":\"12/31/1997\",\n         \"portfolio\":\"18.2\",\n         \"sp500\":\"33.36\"\n      },\n      {\n         \"date\":\"12/31/1998\",\n         \"portfolio\":\"13.98\",\n         \"sp500\":\"28.58\"\n      },\n      {\n         \"date\":\"12/31/1999\",\n         \"portfolio\":\"9.09\",\n         \"sp500\":\"21.04\"\n      },\n      {\n         \"date\":\"12/31/2000\",\n         \"portfolio\":\"0.13\",\n         \"sp500\":\"-9.1\"\n      },\n      {\n         \"date\":\"12/31/2001\",\n         \"portfolio\":\"-4.83\",\n         \"sp500\":\"-11.89\"\n      },\n      {\n         \"date\":\"12/31/2002\",\n         \"portfolio\":\"-7.81\",\n         \"sp500\":\"-22.1\"\n      },\n      {\n         \"date\":\"12/31/2003\",\n         \"portfolio\":\"16.2\",\n         \"sp500\":\"28.68\"\n      },\n      {\n         \"date\":\"12/31/2004\",\n         \"portfolio\":\"7.97\",\n         \"sp500\":\"10.88\"\n      },\n      {\n         \"date\":\"12/31/2005\",\n         \"portfolio\":\"5.57\",\n         \"sp500\":\"4.91\"\n      },\n      {\n         \"date\":\"12/31/2006\",\n         \"portfolio\":\"11.69\",\n         \"sp500\":\"15.79\"\n      },\n      {\n         \"date\":\"12/31/2007\",\n         \"portfolio\":\"6.92\",\n         \"sp500\":\"5.49\"\n      },\n      {\n         \"date\":\"12/31/2008\",\n         \"portfolio\":\"-25\",\n         \"sp500\":\"-37\"\n      },\n      {\n         \"date\":\"12/31/2009\",\n         \"portfolio\":\"19.92\",\n         \"sp500\":\"26.46\"\n      },\n      {\n         \"date\":\"12/31/2010\",\n         \"portfolio\":\"13.59\",\n         \"sp500\":\"15.06\"\n      },\n      {\n         \"date\":\"12/31/2011\",\n         \"portfolio\":\"-1.58\",\n         \"sp500\":\"2.11\"\n      }\n    ]\n };</script>        <script>\n                var inc = 0;\n            \n                data = data.cDataSet;\n                \n                data.forEach( function(d) {\n                    for (key in d) {\n                        if ( key != \"date\" ) {\n                            perfdata[inc]  = { date: parse(d.date) , perf : parseFloat(d[key]), symbol : key };\n                            inc = inc + 1;\n                        }\n                    };\n                });\n                  \n                //if we want to filter only some set of what is there\n                //stocks = perfdata.filter(function(d) { return d.symbol in filter; });\n                \n                // Nest stock values by symbol.\n                symbols = d3.nest()\n                  .key(function(d) { return d.symbol; })\n                  .entries(perfdata);\n                \n                // Parse dates and numbers. We assume values are sorted by date.\n                // Also compute the maximum price per symbol, needed for the y-domain.\n                //symbols.forEach(function(s) {\n                //    s.values.forEach(function(d) { d.date = parse(d.date); d.price = +d.price; });\n                //});\n                \n                // Sort by maximum price, descending.\n                //symbols.sort(function(a, b) { return b.maxPrice - a.maxPrice; });\n                \n                // Compute the minimum and maximum date across symbols.\n                x.domain([\n                    d3.min(symbols, function(d) { return d.values[0].date; }),\n                    d3.max(symbols, function(d) { return d.values[d.values.length - 1].date; })\n                ]);\n                \n                var g = svg.selectAll(\"g\")\n                    .data(symbols)\n                    .enter().append(\"g\")\n                        .attr(\"class\", \"symbol\");  \n                                \n            groupedBar();\n            \n            function groupedBar() {\n                  x = d3.scale.ordinal()\n                      .domain(symbols[0].values.map(function(d) { return d.date; }))\n                      .rangeBands([0, width - 60], .1);\n                \n                  var x1 = d3.scale.ordinal()\n                      .domain(symbols.map(function(d) { return d.key; }))\n                      .rangeBands([0, x.rangeBand()]);\n    \n                var y0 = Math.max(Math.abs(d3.min(symbols.map(function(d) { return d3.min(d.values.map(function(d) { return d.perf; })); }))), d3.max(symbols.map(function(d) { return d3.max(d.values.map(function(d) { return d.perf; })); })));                \n                y\n                    .domain([-y0, y0])\n                    //.domain([d3.min(symbols.map(function(d) { return d3.min(d.values.map(function(d) { return d.perf; })); })), d3.max(symbols.map(function(d) { return d3.max(d.values.map(function(d) { return d.perf; })); }))])\n                    .range([height, 0])\n                    .nice();\n                \n                var yAxis = d3.svg.axis().scale(y).orient(\"left\");                            \n\n                svg.selectAll(\".labels\")\n                    .data(symbols[0].values.map(function(d) { return d.date; }))\n                    .enter().append(\"text\")\n                        .attr(\"class\", \"labels\")\n                        .attr(\"text-anchor\", \"middle\")\n                        .attr(\"x\", function(d,i) { return x(i) + x.rangeBand() / 2 ; })\n                        .attr(\"y\", height / 2 + 15)\n                        .text(function(d) {return format(d) })\n                        .style(\"fill-opacity\", 1);\n\n                \n                  var g = svg.selectAll(\".symbol\");\n                \n                  var t = g.transition()\n                      .duration(duration);\n                      \n                    //got working with lots of help but this section particularly dedicated to http://stackoverflow.com/questions/10127402/bar-chart-with-negative-values\n                  g.each(function(p, j) {\n                    d3.select(this).selectAll(\"rect\")\n                        .data(function(d) { return d.values; })\n                      .enter().append(\"rect\")\n                        .attr(\"x\", function(d) { return x(d.date) + x1(p.key); })\n                        .attr(\"y\", function(d, i) { return y(Math.max(0, d.perf)); })                        \n                        //.attr(\"y\", function(d) { return y(d.perf); })\n                        .attr(\"width\", x1.rangeBand())\n                        .attr(\"height\", function(d, i) { return Math.abs(y(d.perf) - y(0)); })                        \n                        //.attr(\"height\", function(d) { return height - y(d.perf); })\n                        .style(\"fill\", color(p.key))\n                        .style(\"fill-opacity\", 1e-6)                    \n                      .transition()\n                        .duration(duration)\n                        .style(\"fill-opacity\", 1);\n                      \n                    d3.select(this).selectAll(\"text\")\n                        .data(function(d) { return d.values; })\n                        .enter().append(\"text\")\n                            .attr(\"x\", function(d) { return x(d.date) + x1(p.key) + x1.rangeBand() / 2 ; })\n                            .attr(\"y\", function(d, i) { return y(d.perf) ; })\n                            .attr(\"text-anchor\", \"middle\")                        \n                            .text(function(d) { return d.perf; })\n                            .style(\"fill-opacity\", 1e-6)                    \n                       .transition()\n                        .duration(duration)\n                        .style(\"fill-opacity\", 1);\n                  });            \n                        \n                    //svg.append(\"g\")\n                    //    .attr(\"class\", \"x axis\")\n                    //    .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n                    \n                    svg.append(\"g\")\n                        .attr(\"class\", \"y axis\")\n                        .call(yAxis);\n                    //    .attr(\"y1\", 0)\n                    //    .attr(\"y2\", height);\n                \n            }\n               \n        </script>\n   <br>\n  <footer>\n   <aside>\n   <small> works best on Chrome <br />acknowledgements</small>\n \n    <a href=\"http://d3js.org/\"><small>d3.js</small></a>\n   </aside>\n\n  </footer>\n </body>\n</html>\n", "description": "d3 Axys Integration", "created_at": "2012-07-13T18:19:41Z", "updated_at": "2016-04-26T11:00:23Z", "api": ["d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.select", "d3.time.format", "d3.nest", "d3.min", "d3.max", "d3.scale.ordinal", "d3.svg.axis"], "readme": "", "uid": "timelyportfolio_3106445"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  svg {\n    font: 10px sans-serif;\n  }\n  .bar rect {\n    fill: steelblue;\n    shape-rendering: crispEdges;\n  }\n  .axis path, .axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n  }\n  .line {\n    fill: none;\n    stroke: purple;\n    stroke-width: 1.5px;\n  }\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n//sample based upon: http://www.pryor.com/blog/creating-a-pareto-chart-in-excel/\n//TODO - perhaps add circle \"points\" on the line to match the reference sample\n\n  //Set dimensions\nvar m = {top: 50, right: 50, bottom: 50, left: 50}\n  , h = 500 - m.top - m.bottom\n  , w = 960 - m.left - m.right\n  , barWidth = 5;\n\nvar dataset = null;\n\nd3.csv(\"pareto_data.csv\",function(error,data){\n  if (error) return console.log(error);\n\n  //typecast Amount to #, calculate total, and cumulative amounts\n  var totalAmount = 0;\n  for(var i = 0; i < data.length; i++){\n    data[i].Amount = +data[i].Amount;\n    totalAmount += data[i].Amount;\n    if(i > 0){\n      data[i]['CumulativeAmount'] = data[i].Amount + data[i-1].CumulativeAmount;\n    }else{\n      data[i]['CumulativeAmount'] = data[i].Amount;\n    }\n  }\n  //now calculate cumulative % from the cumulative amounts & total, round %\n  for(var i = 0; i < data.length; i++){\n    data[i]['CumulativePercentage'] = (data[i]['CumulativeAmount'] / totalAmount);\n    data[i]['CumulativePercentage'] = parseFloat(data[i]['CumulativePercentage'].toFixed(2));\n  }\n\n  dataset = data;\n\n  //Axes and scales\n  var xScale = d3.scale.ordinal().rangeRoundBands([0, w], 0.1);\n  xScale.domain(data.map(function(d) { return d.Category; }));\n\n  var yhist = d3.scale.linear()\n                  .domain([0, d3.max(data, function(d) { return d.Amount; })])\n                  .range([h, 0]);\n\n  var ycum = d3.scale.linear().domain([0, 1]).range([h, 0]);\n\n  var xAxis = d3.svg.axis()\n                .scale(xScale)\n                .orient('bottom');\n\n  var yAxis = d3.svg.axis()\n                .scale(yhist)\n                .orient('left');\n\n  var yAxis2 = d3.svg.axis()\n                 .scale(ycum)\n                 .orient('right');\n\n  //Draw svg\n  var svg = d3.select(\"body\").append(\"svg\")\n              .attr(\"width\", w + m.left + m.right)\n              .attr(\"height\", h + m.top + m.bottom)\n              .append(\"g\")\n              .attr(\"transform\", \"translate(\" + m.left + \",\" + m.top + \")\");\n\n  //Draw histogram\n  var bar = svg.selectAll(\".bar\")\n                .data(data)\n                .enter().append(\"g\")\n                .attr(\"class\", \"bar\");\n\n  bar.append(\"rect\")\n      .attr(\"x\", function(d) { return xScale(d.Category); })\n      .attr(\"width\", xScale.rangeBand())\n      .attr(\"y\", function(d) { return yhist(d.Amount); })\n      .attr(\"height\", function(d) { return h - yhist(d.Amount); });\n\n  //Draw CDF line\n  var guide = d3.svg.line()\n                .x(function(d) { return xScale(d.Category); })\n                .y(function(d){ return ycum(d.CumulativePercentage) })\n                .interpolate('basis');\n\n  var line = svg.append('path')\n                .datum(data)\n                .attr('d', guide)\n                .attr('class', 'line');\n\n  //Draw axes\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + h + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Amount\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + [w, 0] + \")\")\n      .call(yAxis2)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 4)\n      .attr(\"dy\", \"-.71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Cumulative %\");\n});\n</script>\n</body>", "description": "d3 Pareto Chart Example", "created_at": "2016-02-01T01:35:13Z", "updated_at": "2016-02-01T01:37:13Z", "api": ["d3.csv", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.select", "d3.svg.line"], "readme": "", "uid": "daluu_d43ec5e610dd5dedbbe1"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - clustering</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\ncircle {\n    fill: black;\n    stroke: red;\n}\n\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    \n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\")\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(2)\n    .x(\"x\")\n    .y(\"y\")\n    .cluster(true);\n    \n    map.addCartoLayer(tileLayer).addCartoLayer(csvLayer);\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Quadtree clustering - d3.carto.map", "created_at": "2014-07-21T06:36:01Z", "updated_at": "2015-08-29T14:04:17Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer", "d3.carto.layer.csv"], "readme": "Clustering in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nIf you set the .cluster() property of a cartoLayer to true, it will cluster bsaed on a precomputed quadtree.\n\nThis is still very early on but it should get better.", "uid": "emeeks_7d5925cb7d9721c60360"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - CartoDB Layers</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    fill-opacity: .25;\n    fill: #4682B4;\n    stroke-opacity: 1;\n    stroke: black;\n    stroke-width: 2px;\n  }\n\n  .country-gray {\n    opacity: .25;\n    fill: lightgray;\n    stroke: lightgray;\n    stroke-width: 1;\n  }\n\n  .country-red {\n    fill-opacity: .25;\n    fill: yellow;\n    stroke: gold;\n    stroke-opacity: .5;\n    stroke-width: 1;\n  }\n  \n  .capital {\n    fill: white;\n    stroke: black;\n    stroke-width: 2px;\n  }\n</style>\n<script>\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    terrainLayer = d3.carto.layer.tile();\n    \n    terrainLayer\n    .tileType(\"cartodb\")\n    .path(\"dark_nolabels\")\n    .label(\"Terrain\");\n\n    countryLayer = d3.carto.layer.topojson();\n    \n    countryLayer.path(\"world.topojson\")\n    .label(\"Countries\")\n    .renderMode(\"canvas\")\n    .specificFeature(\"world\")\n    .cssClass(\"country-gray\")\n    .on(\"load\", showHighGDP)\n    .visibility(false);\n    \n    capitalLayer = d3.carto.layer.csv();\n    capitalLayer\n    .path(\"worldcapitals.csv\")\n    .label(\"Capitals\")\n    .cssClass(\"capital\")\n    .renderMode(\"svg\")\n    .markerSize(3)\n    .x(\"x\")\n    .y(\"y\")\n    .clickableFeatures(true)\n    .on(\"load\", loadXYArray);\n\n    map.addCartoLayer(terrainLayer)\n    map.addCartoLayer(countryLayer)\n    .addCartoLayer(capitalLayer);\n    map.setScale(2);\n    \n    function loadXYArray() {\n    d3.csv(\"worldcapitals.csv\", highPopCapitals);\n    \n    function highPopCapitals(data) {\n      highPop = data.filter(function(d) {return d.population > 3000000});\n      \n      highPopCapitals = d3.carto.layer.xyArray();\n      \n      highPopCapitals\n      .features(highPop)\n      .label(\"High Population Capitals\")\n      .cssClass(\"capital\")\n      .renderMode(\"svg\")\n      .markerSize(10)\n      .x(\"x\")\n      .y(\"y\")\n      .clickableFeatures(true);\n      \n      map.addCartoLayer(highPopCapitals);\n    }\n    }\n    \n    function showHighGDP() {\n      highGDPCountries = countryLayer.features().filter(function(d) {return d.properties.gdp > 1000});\n      \n      highGDPLayer = d3.carto.layer.featureArray();\n      \n      highGDPLayer\n      .features(highGDPCountries)\n    .label(\"High GDP\")\n    .renderMode(\"svg\")\n    .cssClass(\"country-red\")\n    .clickableFeatures(true);\n    \n    map.addCartoLayer(highGDPLayer)\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/topojson/1.6.19/topojson.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "d3.carto - CartoDB layers", "created_at": "2015-03-15T03:52:13Z", "updated_at": "2016-03-17T02:14:13Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.csv", "d3.carto.layer.xyArray", "d3.carto.layer.featureArray"], "readme": "A map example created with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** that loads **[CartoDB](http://cartodb.com/)** tile layers with the **.tileType(\"cartodb\")**. These layers will reproject just like Stamen and Mapbox layers in projection and globe mode.", "uid": "emeeks_a950399780ca90589f59"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - CartoDB Layers</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    fill-opacity: .25;\n    fill: #4682B4;\n    stroke-opacity: 1;\n    stroke: black;\n    stroke-width: 2px;\n  }\n\n  .country-gray {\n    opacity: .25;\n    fill: lightgray;\n    stroke: lightgray;\n    stroke-width: 1;\n  }\n\n  .country-red {\n    fill-opacity: .25;\n    fill: yellow;\n    stroke: gold;\n    stroke-opacity: .5;\n    stroke-width: 1;\n  }\n  \n  .capital {\n    fill: white;\n    stroke: black;\n    stroke-width: 2px;\n  }\n</style>\n<script>\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    terrainLayer = d3.carto.layer.tile();\n    \n    terrainLayer\n    .tileType(\"cartodb\")\n    .path(\"dark_nolabels\")\n    .label(\"Terrain\");\n\n    countryLayer = d3.carto.layer.topojson();\n    \n    countryLayer.path(\"world.topojson\")\n    .label(\"Countries\")\n    .renderMode(\"canvas\")\n    .specificFeature(\"world\")\n    .cssClass(\"country-gray\")\n    .on(\"load\", showHighGDP)\n    .visibility(false);\n    \n    capitalLayer = d3.carto.layer.csv();\n    capitalLayer\n    .path(\"worldcapitals.csv\")\n    .label(\"Capitals\")\n    .cssClass(\"capital\")\n    .renderMode(\"svg\")\n    .markerSize(3)\n    .x(\"x\")\n    .y(\"y\")\n    .clickableFeatures(true)\n    .on(\"load\", loadXYArray);\n\n    map.addCartoLayer(terrainLayer)\n    map.addCartoLayer(countryLayer)\n    .addCartoLayer(capitalLayer);\n    map.setScale(2);\n    \n    function loadXYArray() {\n    d3.csv(\"worldcapitals.csv\", highPopCapitals);\n    \n    function highPopCapitals(data) {\n      highPop = data.filter(function(d) {return d.population > 3000000});\n      \n      highPopCapitals = d3.carto.layer.xyArray();\n      \n      highPopCapitals\n      .features(highPop)\n      .label(\"High Population Capitals\")\n      .cssClass(\"capital\")\n      .renderMode(\"svg\")\n      .markerSize(10)\n      .x(\"x\")\n      .y(\"y\")\n      .clickableFeatures(true);\n      \n      map.addCartoLayer(highPopCapitals);\n    }\n    }\n    \n    function showHighGDP() {\n      highGDPCountries = countryLayer.features().filter(function(d) {return d.properties.gdp > 1000});\n      \n      highGDPLayer = d3.carto.layer.featureArray();\n      \n      highGDPLayer\n      .features(highGDPCountries)\n    .label(\"High GDP\")\n    .renderMode(\"svg\")\n    .cssClass(\"country-red\")\n    .clickableFeatures(true);\n    \n    map.addCartoLayer(highGDPLayer)\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "d3.carto - CartoDB layers", "created_at": "2015-09-08T07:51:38Z", "updated_at": "2015-09-08T07:51:38Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.csv", "d3.carto.layer.xyArray", "d3.carto.layer.featureArray"], "readme": "A map example created with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** that loads **[CartoDB](http://cartodb.com/)** tile layers with the **.tileType(\"cartodb\")**. These layers will reproject just like Stamen and Mapbox layers in projection and globe mode.", "uid": "renecnielsen_4a7d0a3a159ae7d0bdc3"}, {"code": "<html>\n<head>\n  <title>d3.svg.ribbon Example</title>\n  <meta charset=\"utf-8\" />\n<script src=\"http://d3js.org/d3.v3.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"d3.svg.ribbon.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    height: 1000px;\n    width: 1000px;\n  }\n\n</style>\n<body>\n\n<div id=\"viz\">\n  <svg>\n  </svg>\n</div>\n</body>\n  <footer>\n\n<script>\n\nvar points = [{x: 20, y:20, t: 10},{x:200,y:20, t: 5},{x:20,y:200, t: 15},{x:200,y:200, t: 2}];\n\nribbon = d3.svg.ribbon()\n  .x(function(d) {return d.x})\n  .y(function(d) {return d.y})\n  .r(function(d) {return d.t});\n\ndrag = d3.behavior.drag().on(\"drag\", function (d) {\n  d.x = d3.event.x;\n  d.y = d3.event.y;\n  redraw();\n})\n\nd3.select(\"svg\")\n.append(\"path\")\n.style(\"fill\", \"lightblue\")\n.style(\"stroke\", \"blue\")\n.style(\"stroke-opacity\", 0.75)\n.style(\"stroke-width\", \"2px\")\n.attr(\"d\", ribbon(points))\n\nd3.select(\"svg\")\n.selectAll(\"circle\")\n.data(points)\n.enter()\n.append(\"circle\")\n.attr(\"r\", 3)\n.style(\"fill\", \"lightgreen\")\n.style(\"stroke\", \"blue\")\n.style(\"stroke-width\", \"2px\")\n.attr(\"cx\", function (d) {return d.x})\n.attr(\"cy\", function (d) {return d.y})\n.attr(\"r\", function (d) {return d.t})\n.style(\"stroke-opacity\", 0.75)\n.call(drag);\n\nfunction redraw() {\n  d3.selectAll(\"circle\")\n    .attr(\"cx\", function (d) {return d.x})\n    .attr(\"cy\", function (d) {return d.y});\n\n  d3.select(\"path\")\n    .attr(\"d\", ribbon(points));\n}\n\n</script>\n  </footer>\n\n</html>\n", "description": "d3.svg.ribbon example", "created_at": "2015-09-02T03:29:53Z", "updated_at": "2015-09-02T03:29:53Z", "api": ["d3.svg.line", "d3.svg.ribbon", "d3.behavior.drag", "d3.select", "d3.selectAll"], "readme": "An example of [d3.svg.ribbon](https://github.com/emeeks/d3.svg.ribbon).\n\nDrag the circles to see the underlying single `svg:path` element re-interpolated based on the changing position of the points and their radii that are used to generate it. This is a different way of generating areas than `d3.svg.area` and might prove more suitable for some applications.\n\nforked from <a href='http://bl.ocks.org/emeeks/'>emeeks</a>'s block: <a href='http://bl.ocks.org/emeeks/a1e48992be56681e3f93'>d3.svg.ribbon example</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8829aa45703c893e5636'>d3.svg.ribbon example</a>", "uid": "georgemurphy_2ab077a1a795efeab2c8"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.land {\n  fill: #222;\n}\n\n.county-boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.state-boundary {\n  fill: none;\n  stroke: #fff;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3-composite-projections/0.3.5/albersUsa-proj.min.js\"></script>\n\n<script>\n\nvar width = 960,\n    height = 500;\n\nvar projection = d3.geo.albersUsa()\n    .scale(1000)\n    .translate([width / 2, height / 2]);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"/d/4090846/us.json\", function(error, us) {\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(us, us.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(us, us.objects.counties, function(a, b) { return a !== b && !(a.id / 1000 ^ b.id / 1000); }))\n      .attr(\"class\", \"county-boundary\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"state-boundary\")\n      .attr(\"d\", path);\n\n  svg\n    .append(\"path\")\n      .style(\"fill\",\"none\")\n      .style(\"stroke\",\"#000\")\n      .attr(\"d\", projection.getCompositionBorders());\n\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n</script>\n", "description": "d3-composite-projections albersUsa", "created_at": "2015-05-11T15:08:23Z", "updated_at": "2016-03-01T10:59:14Z", "api": ["d3.geo.albersUsa", "d3.geo.path", "d3.select", "d3.json"], "readme": "This file shows how to use the *albersUsa* projection from [d3-composite-projections](http://rveciana.github.io/d3-composite-projections/). In this case, the example (and projection) [is copied directly from the d3 projection](http://bl.ocks.org/mbostock/4090848), but adding the borders a the composed zones.", "uid": "rveciana_170a76b8dc1f9cfd8b2d"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Label Features</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\n    zoomMap = d3.carto.map();\n\n    d3.select(\"#map\").call(zoomMap);\n\n    zoomMap.setScale(2)\n\n    tileLayer = d3.carto.layer.tile();\n    tileLayer\n    .path(\"elijahmeeks.map-ktkeam22\")\n    .label(\"Terrain\");\n    \n    zoomMap.addCartoLayer(tileLayer);\n\n    d3.json(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\", function(error,data) {\n\n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(data.features)\n    .label(\"Countries\")\n    .cssClass(\"invisible\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true)\n    .on(\"load\", clickToZoom);\n    \n    function clickToZoom() {\n      d3.select(\"#map\").selectAll(\"path.countryborders\").on(\"click\", function (d) {\n\n        var path = d3.geo.path().projection(zoomMap.projection());\n        zoomMap.zoomTo(path.bounds(d),\"scaled\",.95,2000);\n\n      })\n    }\n\n      labelPoints = [];\n\n      for (x in data.features) {\n        var center = d3.geo.centroid(data.features[x]);\n        var newPoint = {label: data.features[x].properties.name, x: center[0], y: center[1]}\n        labelPoints.push(newPoint)\n      }\n      \n    xyLayer = d3.carto.layer.xyArray();\n    xyLayer\n    .features(data.features)\n    .label(\"Labels\")\n    .cssClass(\"countrylabel\")\n    .renderMode(\"svg\")\n    .x(\"x\")\n    .y(\"y\")\n    .markerSize(10)\n    .clickableFeatures(true);\n    \n    zoomMap.addCartoLayer(xyLayer)\n      \n      d3.selectAll(\"g.countrylabel\").append(\"text\")\n      .text(function(d) {return d.label});\n      d3.selectAll(\"circle.countrylabel\").remove();\n      zoomMap.refresh();\n\n\n    })\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "addXYLayer - d3.carto.map", "created_at": "2014-07-12T21:07:14Z", "updated_at": "2015-08-29T14:03:54Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.json", "d3.carto.layer.featureArray", "d3.geo.path", "d3.geo.centroid", "d3.carto.layer.xyArray", "d3.selectAll"], "readme": "Labeling features using addXYLayer **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nYou can add any array of objects with XY data by using d3.carto.layer.xyArray(). Here an array of centroid objects is made for the paths and then added to the map to display labels. Notice that the paths are added using addFeatureLayer because using addTopoJSON would load asynchronously and not have the data available to make the array for addXYLayer.\n", "uid": "emeeks_f2fea17ba3ec3cd66f60"}, {"code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 Array of Tables Demo</title>\n  <!-- Author: Bo Ericsson, bo@boe.net -->\n  <link rel=stylesheet type=text/css href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/css/bootstrap.min.css\" media=\"all\">\n  <style>\n    body {\n      padding: 10px;\n      font-size: 12px;\n    }\n    .well {\n      padding-top: 0px;\n      padding-bottom: 0px;\n      width: 500px;\n    }\n    table {\n      font-size: 10px;\n      line-height: 10px;\n    }\n    td, th {\n      width: 33.3%;\n    }\n    label {\n      margin-bottom: 10px;\n    }\n  </style>\n<body>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js\"></script>\n<script>\n'use strict';\n\n// title div with label and button\nvar header = d3.select(\"body\").append(\"div\").attr(\"class\", \"well\");\n\nheader.append(\"h3\").text(\"Dynamic D3 Array of Tables Demo\");\n\nvar taskLabel = header.append(\"label\")\n    .attr(\"id\", \"taskLabel\")\n    .html(\"&nbsp;\");\n\nvar currTask = 0;\nvar taskButton = header.append(\"button\")\n    .attr(\"class\", \"btn btn-primary\")\n    .style(\"margin-bottom\", \"20px\")\n    .style(\"width\", \"100%\")\n    .style(\"text-align\", \"left\")\n    .text(\"Start\")\n    .on(\"click\", function() {\n      this.blur();\n      // execute the task\n      tasks[currTask]();\n      // next task\n      currTask = ++currTask % tasks.length;\n    })\n\n// container for array of tables\nvar tableDiv = d3.select(\"body\").append(\"div\").attr(\"id\", \"tableDiv1\");\n\n// initial data\nvar data;\nvar initialData = [\n  { table: \"Table1\", rows: [\n      { table: \"Table1\", row: \"Row1\", data: \"DataT1R1\" },\n      { table: \"Table1\", row: \"Row2\", data: \"DataT1R2\" }\n    ]\n  },\n  { table: \"Table2\", rows: [\n      { table: \"Table2\", row: \"Row1\", data: \"DataT2R1\" },\n      { table: \"Table2\", row: \"Row2\", data: \"DataT2R2\" },\n      { table: \"Table2\", row: \"Row3\", data: \"DataT2R3\" }\n    ]\n  },\n  { table: \"Table3\", rows: [\n      { table: \"Table3\", row: \"Row1\", data: \"DataT3R1\" },\n      { table: \"Table3\", row: \"Row2\", data: \"DataT3R2\" }\n    ]\n  },\n  { table: \"Table4\", rows: [\n      { table: \"Table4\", row: \"Row1\", data: \"DataT4R1\" },\n      { table: \"Table4\", row: \"Row2\", data: \"DataT4R2\" }\n    ]\n  }\n]\n\n// tasks\nfunction task0() {\n  // clear any existing tables (by providing an empty array)\n  update([]);\n\n  taskLabel.html(\"Cleared any existing tables\");\n  taskButton.text(\"Next step: Initial load of tables\");\n}\n\nfunction task1() {\n  // load initial tables\n  data = JSON.parse(JSON.stringify(initialData));\n  update(data);\n\n  taskLabel.text(\"Step 1: Initial tables loaded\");\n  taskButton.text(\"Next step: Add 4th row to Table 2\");\n}\n\nfunction task2() {\n  // add 4th row to table 2\n  data[1].rows.push({ table: \"Table2\", row: \"Row4\", data: \"DataT2R4\" });\n  update(data);\n\n  taskLabel.text(\"Step 2: Added 4th row to Table 2\");\n  taskButton.text(\"Next step: Delete first row of Table 3\");\n}\n\nfunction task3() {\n  // delete first row of table 3\n  data[2].rows.shift();\n  update(data);\n\n  taskLabel.text(\"Step 3: Deleted first row of Table 3\");\n  taskButton.text(\"Next step: Add Table 5 with 8 rows\");\n}\n\nfunction task4() {\n  // add table 5 with 8 rows\n  data.push(  \n    { table: \"Table5\", rows: [\n        { table: \"Table5\", row: \"Row1\", data: \"DataT5R1\" },\n        { table: \"Table5\", row: \"Row2\", data: \"DataT5R2\" },\n        { table: \"Table5\", row: \"Row3\", data: \"DataT5R3\" },\n        { table: \"Table5\", row: \"Row4\", data: \"DataT5R4\" },\n        { table: \"Table5\", row: \"Row5\", data: \"DataT5R5\" },\n        { table: \"Table5\", row: \"Row6\", data: \"DataT5R6\" },\n        { table: \"Table5\", row: \"Row7\", data: \"DataT5R7\" },\n        { table: \"Table5\", row: \"Row8\", data: \"DataT5R8\" }\n      ]\n    });\n  update(data);\n\n  taskLabel.text(\"Step 4: Added Table 5 with 8 rows\");\n  taskButton.text(\"Next step: Remove Table 4\");  \n}\n\nfunction task5() {\n  // remove table 4\n  data.splice(3, 1);\n  update(data);\n\n  taskLabel.text(\"Step 5: Removed Table 4\");\n  taskButton.text(\"Next step: Change data of row 1 of Table 1\")  ;\n}\n\nfunction task6() {\n  // change the content of row 1 of table 1\n  var item = data[0].rows[0].data;\n  data[0].rows[0].data = item + \" - Updated\";\n  update(data);\n\n  taskLabel.text(\"Step 6: Changed data of row 1 of Table 1\");\n  taskButton.text(\"Restart\") ;  \n}\n\n// task list (array of functions)\nvar tasks = [task0, task1, task2, task3, task4, task5, task6];\n\n\n// function in charge of the array of tables\nfunction update(data) {\n\n  // select all divs in the table div, and then apply new data \n  var divs = tableDiv.selectAll(\"div\")\n      // after .data() is executed below, divs becomes a d3 update selection\n      .data(data,                     // new data\n        function(d) { return d.table  // \"key\" function to disable default by-index evaluation\n      }) \n\n  // use the exit method of the d3 update selection to remove any deleted table div and contents (which would be absent in the data array just applied)\n  divs.exit().remove();\n\n  // use the enter metod of the d3 update selection to add new (\"entering\") items present in the data array just applied\n  var divsEnter = divs.enter().append(\"div\")\n      .attr(\"id\", function(d) { return d.table + \"Div\"; })\n      .attr(\"class\", \"well\")\n\n  // add title in new div(s)\n  divsEnter.append(\"h5\").text(function(d) { return d.table; });\n\n  // add table in new div(s)\n  var tableEnter = divsEnter.append(\"table\")\n      .attr(\"id\", function(d) { return d.table })\n      .attr(\"class\", \"table table-condensed table-striped table-bordered\")\n\n  // append table head in new table(s)\n  tableEnter.append(\"thead\")\n    .append(\"tr\")\n      .selectAll(\"th\")\n      .data([\"Table Name\", \"Row Number\", \"Data Contents\"]) // table column headers (here constant, but could be made dynamic)\n    .enter().append(\"th\")\n      .text(function(d) { return d; })\n\n  // append table body in new table(s)\n  tableEnter.append(\"tbody\");\n\n  // select all tr elements in the divs update selection\n  var tr = divs.select(\"table\").select(\"tbody\").selectAll(\"tr\")\n      // after the .data() is executed below, tr becomes a d3 update selection\n      .data(\n        function(d) { return d.rows; }, // return inherited data item\n        function(d) { return d.row }    // \"key\" function to disable default by-index evaluation\n      ); \n\n  // use the exit method of the update selection to remove table rows without associated data\n  tr.exit().remove();\n\n  // use the enter method to add table rows corresponding to new data\n  tr.enter().append(\"tr\");\n\n  // bind data to table cells\n  var td = tr.selectAll(\"td\")\n      // after the .data() is executed below, the td becomes a d3 update selection\n      .data(function(d) { return d3.values(d); });   // return inherited data item\n\n  // use the enter method to add td elements \n  td.enter().append(\"td\")               // add the table cell\n      .text(function(d) { return d; })  // add text to the table cell\n}\n\n\n</script>\n", "description": "D3 Dynamic Array of Tables", "created_at": "2015-09-26T17:09:49Z", "updated_at": "2016-05-18T15:27:40Z", "api": ["d3.select", "d3.values"], "readme": "## D3 Dynamic Array of Tables\n\nDemonstrates the the use of D3 to manage an array of tables. Via a button, the user will cycle through several steps which will mutate the underlying array of arrays, which at each step is fed to the table **update** function. For example, tables are added and removed from the array of tables, individual rows of tables are added and removed, and individual table cells are modified. The **update** function demonstrates the enter, exit and update patterns at the div/table level as well as at the table row level. \n\nFor **bl.ocks.org** users, the script should be viewed in its own window. See the script in action [here](http://bl.ocks.org/boeric/raw/e16ad218bc241dfd2d6e/)", "uid": "boeric_e16ad218bc241dfd2d6e"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Changing Point Markers</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    map.addTileLayer(\"examples.map-zgrqqx0w\", \"Base\", \"mapbox\", false);\n    map.centerOn([-0.1275,51.507],\"latlong\",5000);\n    map.addTopoJSONLayer(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\",\"TopoJSON\",\"roads\",\"svg\",\"all\");\n    map.addCSVLayer(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\",\"CSV Points\",\"pinkcircle\",2,\"svg\",\"x\",\"y\");\n    \n    d3.select(\"#map\").append(\"button\").attr(\"class\", \"marker\").html(\"Change Markers\").on(\"click\", changeMarkers);\n    \n    function changeMarkers() {\n          csvLayer.g().selectAll(\"circle\").remove();\n\n          csvLayer.g().selectAll(\"g.marker\")\n            .append(\"rect\")\n            .attr(\"class\", \"bluesquare\")\n            .attr(\"height\", 5)\n            .attr(\"width\",5)\n            .attr(\"x\",-2.5)\n            .attr(\"y\",-2.5);\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Changing Markers - d3.carto.map", "created_at": "2014-07-12T20:51:24Z", "updated_at": "2015-08-29T14:03:54Z", "api": ["d3.carto.map", "d3.select"], "readme": "Changing markers with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nEach feature or point is added inside of a g element. You can then add whatever you want to that g element to create the symbols you want for your points. To do so, though, you need to use a different datum for the appended element. This doesn't seem like a good solution and will probably lead to the creation of a d3.carto.marker or equivalent at some point.", "uid": "emeeks_7bce3b67dffd0fe85ec2"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - globe mode</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    map.mode(\"globe\");\n\n    map.refresh();\n\n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base Layer\")\n    \n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"Canvas Features\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"canvas\")\n    .on(\"load\", selectFeatures);\n    \n    map.addCartoLayer(tileLayer).addCartoLayer(geojsonLayer);\n    \n      function selectFeatures() {\n\n    fNamedCountries = geojsonLayer.features().filter(function (d) {return d.properties.name.length < 6});\n\n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(fNamedCountries)\n    .label(\"SVG Features\")\n    .cssClass(\"francelike\")\n    .renderMode(\"svg\");\n\n      map.addCartoLayer(featureLayer);\n\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "globe mode - d3.carto.map", "created_at": "2014-07-26T01:40:38Z", "updated_at": "2016-01-13T20:02:06Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer", "d3.carto.layer.geojson", "d3.carto.layer.featureArray"], "readme": "A globe using orthographic projection with raster tiles from **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nIf you set map.mode(\"globe\") it will overwrite the projection with an orthographic projection and modify panning to allow for rotating a globe along two axes.", "uid": "emeeks_2792df20a4b490c3e3ff"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Zoomable Treemap</title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n<script src=\"http://d3js.org/d3.v2.js\"></script>\n<script src=\"http://code.jquery.com/jquery-1.7.1.js\"></script>\n\n<p id=\"chart\">\n<p id=\"rawdata\">\n\n<script src=\"treemap.js\"></script>\n<script>\n\tfunction reSortRoot(root,value_key) {\n\t\t//console.log(\"Calling\");\n\t\tfor (var key in root) {\n\t\t\tif (key == \"key\") {\n\t\t\t\troot.name = root.key;\n\t\t\t\tdelete root.key;\n\t\t\t}\n\t\t\tif (key == \"values\") {\n\t\t\t\troot.children = [];\n\t\t\t\tfor (item in root.values) {\n\t\t\t\t\troot.children.push(reSortRoot(root.values[item],value_key));\n\t\t\t\t}\n\t\t\t\tdelete root.values;\n\t\t\t}\n\t\t\tif (key == value_key) {\n\t\t\t\troot.value = parseFloat(root[value_key]);\n\t\t\t\tdelete root[value_key];\n\t\t\t}\n\t\t}\n\t\treturn root;\n\t}\n\n\t$( document ).ready(function() {\n\t\t// You can comment out the whole csv section if you just have a JSON file.\n    // loadJSONFile('data/portaldata.json');\n\n    \td3.csv(\"UK_Home_Office_Air_Travel_Data_2011.csv\", function(csv_data){\n\n\t\t\t// Add, remove or change the key values to change the hierarchy. \n      var nested_data = d3.nest()\n       \t\t\t\t.key(function(d)  { return d.Destination; })\n       \t\t\t\t.key(function(d)  { return d.Supplier_name; })\n              .key(function(d)  { return d.Ticket_class_description; })\n\t\t\t\t      .entries(csv_data);\n\t\t\t\n\t\t\t// Creat the root node for the treemap\n\t\t\tvar root = {};\n\t\t\t\n\t\t\t// Add the data to the tree\n\t\t\troot.key = \"Data\";\n\t\t\troot.values = nested_data;\n\t\t\n\t\t\t// Change the key names and children values from .next and add values for a chosen column to define the size of the blocks\n\t\t\troot = reSortRoot(root,\"Paid_fare\");\n\t\t\t\n\t\t\t// DEBUG\n// \t\t\t$(\"#rawdata\").html(JSON.stringify(root));\n\t\t\t\n\t\t\tloadData(root);\n\t\t\t\n\t\t});\n\n\n\t});\n</script>\n", "description": "D3 Treemap from CSV with d3.nest", "created_at": "2016-04-21T20:19:43Z", "updated_at": "2016-04-21T20:19:43Z", "api": ["d3.csv", "d3.nest", "d3.format", "d3.scale.linear", "d3.layout.treemap", "d3.select", "d3.scale.category20c", "d3.json"], "readme": "Treemap from CSV of flights taken by members of the UK Government Home Office in 2011.\n\nOriginal dataset from: [http://data.gov.uk/dataset/home-office-flight-data](http://data.gov.uk/dataset/home-office-flight-data)\n\nThanks to:\n  [PMeinshausen](http://bl.ocks.org/PMeinshausen/5806106)\n  [phoebebright](https://gist.github.com/phoebebright/3176159)\n  [mbostock](http://bost.ocks.org/mike/)\n\nforked from <a href='http://bl.ocks.org/davetaz/'>davetaz</a>'s block: <a href='http://bl.ocks.org/davetaz/9954190'>D3 Treemap from CSV with d3.nest</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/6a8a2a34f8e185c00b17f005c7e12bb0'>D3 Treemap from CSV with d3.nest</a>", "uid": "CBasis_6a76935b609b0b2a38596c46fb690bba"}, {"code": "<!DOCTYPE html>\n<html>\n<meta charset=\"utf-8\">\n\n<!-- Example based on http://bl.ocks.org/mbostock/3887118 -->\n<!-- Tooltip example from http://www.d3noob.org/2013/01/adding-tooltips-to-d3js-graph.html -->\n\n<style>\nbody {\n  font: 11px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.dot {\n  stroke: #000;\n}\n\n.tooltip {\n  position: absolute;\n  width: 200px;\n  height: 28px;\n  pointer-events: none;\n}\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n/* \n * value accessor - returns the value to encode for a given data object.\n * scale - maps value to a visual display encoding, such as a pixel position.\n * map function - maps from data value to display value\n * axis - sets up axis\n */ \n\n// setup x \nvar xValue = function(d) { return d.Calories;}, // data -> value\n    xScale = d3.scale.linear().range([0, width]), // value -> display\n    xMap = function(d) { return xScale(xValue(d));}, // data -> display\n    xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\n// setup y\nvar yValue = function(d) { return d[\"Protein (g)\"];}, // data -> value\n    yScale = d3.scale.linear().range([height, 0]), // value -> display\n    yMap = function(d) { return yScale(yValue(d));}, // data -> display\n    yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\n// setup fill color\nvar cValue = function(d) { return d.Manufacturer;},\n    color = d3.scale.category10();\n\n// add the graph canvas to the body of the webpage\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// add the tooltip area to the webpage\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n// load data\nd3.csv(\"cereal.csv\", function(error, data) {\n\n  // change string (from CSV) into number format\n  data.forEach(function(d) {\n    d.Calories = +d.Calories;\n    d[\"Protein (g)\"] = +d[\"Protein (g)\"];\n//    console.log(d);\n  });\n\n  // don't want dots overlapping axis, so add in buffer to data domain\n  xScale.domain([d3.min(data, xValue)-1, d3.max(data, xValue)+1]);\n  yScale.domain([d3.min(data, yValue)-1, d3.max(data, yValue)+1]);\n\n  // x-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Calories\");\n\n  // y-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Protein (g)\");\n\n  // draw dots\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", xMap)\n      .attr(\"cy\", yMap)\n      .style(\"fill\", function(d) { return color(cValue(d));}) \n      .on(\"mouseover\", function(d) {\n          tooltip.transition()\n               .duration(200)\n               .style(\"opacity\", .9);\n          tooltip.html(d[\"Cereal Name\"] + \"<br/> (\" + xValue(d) \n\t        + \", \" + yValue(d) + \")\")\n               .style(\"left\", (d3.event.pageX + 5) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n\n  // draw legend\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  // draw legend colored rectangles\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  // draw legend text\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d;})\n});\n\n</script>\n</body>\n</html>", "description": "D3 Scatterplot Example", "created_at": "2013-08-08T14:27:44Z", "updated_at": "2016-05-21T11:43:00Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.scale.category10", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "d3 scatterplot example using the Breakfast Cereal Dataset from http://idvbook.com and based on the scatterplot example at http://bl.ocks.org/mbostock/3887118\n", "uid": "weiglemc_6185069"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.land {\n  fill: #222;\n}\n\n.county-boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.state-boundary {\n  fill: none;\n  stroke: #fff;\n}\n\n.border {\n  stroke: #000;\n  fill: none;\n\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3-composite-projections/0.3.5/conicConformalPortugal-proj.min.js\"></script>\n<script>\n\nvar width = 900,\n    height = 500;\n\nvar projection = d3.geo.conicConformalPortugal();\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"https://cdn.rawgit.com/mbostock/4090846/raw/8a7f176072d508218e120773943b595c998991be/world-50m.json\", function(error, world) {\n  var land = topojson.feature(world, world.objects.countries);\n\n    svg.selectAll(\"path\")\n      .data(land.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\",\"#000\")\n      .style(\"stroke-width\",\".5px\")\n      .style(\"fill\",\"#aca\")\n      .on(\"mouseover\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"red\");\n        })\n      .on(\"mouseout\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"#aca\");\n        });\n\n  svg\n    .append(\"path\")\n      .style(\"fill\",\"none\")\n      .style(\"stroke\",\"#000\")\n      .attr(\"d\", projection.getCompositionBorders());\n\n\n});\n\n\n</script>\n", "description": "d3-composite-projections conicConformalPortugal", "created_at": "2015-05-11T15:16:25Z", "updated_at": "2016-03-01T10:58:41Z", "api": ["d3.geo.conicConformalPortugal", "d3.geo.path", "d3.select", "d3.json"], "readme": "This file shows how to use the *conicConformalPortugal* projection from [d3-composite-projections](http://rveciana.github.io/d3-composite-projections/). Since the world layer is used, note that the Iberian Peninsula is clipped at the projection border. These projections work well when used at the place they are intended for.", "uid": "rveciana_aec08199d43759e98afe"}, {"code": "<!DOCTYPE html>\n<style>\n\tbody {\n\t\tfont-family: 'Open Sans', sans-serif;\n    font-size: 12px;\n\t}\n  .graph {\n    text-align: center;\n  }\n  svg {\n    background-color: #333947;\n  }\n\t.title {\n    font-size: 16px;\n\t\tfont-weight: bold;\n    fill: #fff;\n\t}\n  .caption {\n    fill: #ccc;\n  }\n\t.axis path,\n\t.axis line {\n    fill: none;\n    stroke: #eee;\n    shape-rendering: crispEdges;\n\t}\n  .axis text {\n    fill: #fff;\n  }\n\t.loading {\n    font-size: 15px;\n\t}\n  .plot {\n    fill-opacity: 0.75;\n  }\n\n  .conflict0 { fill: #4990BF; }\n\t.conflict1 { fill: #FF6363; }\n\t.conflict2 { fill: #738b8c; }\n\t.conflict3 { fill: #BC63FF; }\n\t.conflict4 { fill: #EFFF63; }\n\t.conflict5 { fill: #FF3D3D; }\n\t.conflict6 { fill: #496EBF; }\n  .conflict7 { fill: #cda2a2; }\n  .conflict8 { fill: #E563FF; }\n  .conflict9 { fill: #63D8FF; }\n\n  .circle {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n  .circle:hover {\n    stroke: #000;\n    stroke-width: 2px;\n  }\n  .title-tip,\n  .body-tip {\n    line-height: 1;\n    padding: 12px;\n    background: #000;\n    color: #fff;\n    line-height: 14px;\n    border-radius: 2px;\n    pointer-events: none;\n    text-align: center;\n  }\n\n  .body-tip {\n    max-width: 250px;\n  }\n\n  .title-tip div {\n    font-size: 10px;\n    color: #ccc;\n  }\n\n  /* Creates a small triangle extender for the tooltip */\n  .title-tip:after {\n    box-sizing: border-box;\n    display: inline;\n    font-size: 10px;\n    width: 100%;\n    line-height: 1;\n    color: #000;\n    position: absolute;\n    pointer-events: none;\n  }\n\n  .title-tip.n:after {\n    content: \"\\25BC\";\n    margin: -1px 0 0 0;\n    top: 100%;\n    left: 0;\n    text-align: center;\n  }\n\n  .button {\n    height: 25px;\n    width: 125px;\n    stroke: #ccc;\n    stroke-width: 2px;\n    fill: #333947;\n  }\n\n  .button:hover,\n  .button-text:hover {\n    cursor: pointer;\n  }\n\n  .button-active {\n    stroke: #fff;\n    fill: #fff;\n  }\n\n  .button-text {\n    fill: #ccc;\n  }\n\n  .button-text-active {\n    fill: #000;\n  }\n</style> \n\n<div id=\"graph\" class=\"graph\"></div>\n \n<script src=\"http://d3js.org/d3.v2.min.js\"></script>\n<script src=\"http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js\"></script>\n\n<script>\n  var w = 1500;\n  var h = 800;\n  var pad = 40;\n  var above = 125;\n  var left = 225;\n\n  var titleTip = d3.tip()\n                   .attr('class', 'title-tip')\n                   .offset([-3, 0])\n                   .html(function(d) {\n                    return \"<strong>\" + d.title + \"</strong><div>\" + d.pageedits + \" page edits</div>\";\n                   });\n\n  var bodyTip = d3.tip()\n                  .attr('class', 'body-tip')\n                  .html(function(d) { return d.description; });\n   \n  var svg = d3.select(\"#graph\")\n              .append(\"svg\")\n              .attr(\"width\", w)\n              .attr(\"height\", h)\n              .call(titleTip)\n              .call(bodyTip);\n\n  var x = d3.scale.linear().domain([2001, 2006]).range([left, w-pad]);\n  var y = d3.scale.linear().domain([0, 9]).range([above, h-pad-above]);\n   \n  var xAxis = d3.svg.axis().scale(x).orient(\"bottom\")\n    .ticks(6)\n    .tickFormat(d3.format(\"d\"))\n\n  var yAxis = d3.svg.axis().scale(y).orient(\"left\")\n    .ticks(10)\n    .tickFormat(function (d, i) {\n      return ['Technicality','Political','Ethical','Ethnic','International Words','Religion','Culture','Animal Rights','Star Wars','Other'][d];\n    });\n\n  svg.append(\"text\")\n    .attr(\"class\", \"title\")\n    .attr(\"x\", w/2)\n    .attr(\"y\", above/3)\n    .attr(\"text-anchor\", \"middle\")\n    .text(\"Most Debated Wikipedia Articles (2010)\");\n\n  svg.append(\"text\")\n    .attr(\"class\", \"caption\")\n    .attr(\"x\", w/2)\n    .attr(\"y\", above/3+18)\n    .attr(\"text-anchor\", \"middle\")\n    .text(\"Click each circle to read more!\");\n   \n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", \"translate(0, \"+(h-pad)+\")\")\n      .call(xAxis);\n   \n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", \"translate(\"+(left-pad)+\", 0)\")\n      .call(yAxis);\n   \n  svg.append(\"text\")\n      .attr(\"class\", \"loading\")\n      .text(\"Loading...\")\n      .attr(\"x\", function () { return w/2; })\n      .attr(\"y\", function () { return h/2-5; });\n   \n  d3.json(\"data.json\", function (data) {\n    var max_r = d3.max(data.map(function (d) { return d.pageedits; }));\n    var r1 = d3.scale.linear()\n              .domain([0, d3.max(data, function (d) { return d.pageedits; })])\n              .range([3, 100]);\n\n    var r2 = d3.scale.linear()\n              .domain([0, d3.max(data, function (d) { return d.pagesofdiscussion; })])\n              .range([3, 100]);\n\n    var displayCircles = function(flag) {\n      data.sort(function(a,b) {\n        var i,j;\n        if (flag == 0) {\n          i = a.pageedits;\n          j = b.pageedits;\n        } else {\n          i = a.pagesofdiscussion;\n          j = b.pagesofdiscussion;\n        }\n        if (i > j)\n          return -1;\n        if (i < j)\n          return 1;\n        return 0;\n      });\n\n      svg.selectAll(\"circle\").remove();\n      svg.selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", function (d) { return \"circle conflict\"+d.conflicttype; })\n        .attr(\"cx\", function (d) { return x(d.creationdate); })\n        .attr(\"cy\", function (d) { return y(d.conflicttype); })\n        .on('mouseover', titleTip.show)\n        .on('mouseout', function(d) {\n          titleTip.hide();\n          bodyTip.hide(d);\n        })\n        .on('click', function (d) {\n          titleTip.hide();\n          bodyTip.show(d);\n        })\n        .transition()\n        .duration(800)\n        .attr(\"r\", function (d) {\n          if (flag == 0) {\n            return r1(d.pageedits);\n          } else {\n            return r2(d.pagesofdiscussion);\n          }\n        });\n\n      titleTip.html(function(d) {\n        if (flag == 0) {\n          return \"<strong>\" + d.title + \"</strong><div>\" + d.pageedits + \" page edits</div>\";\n        } else {\n          return \"<strong>\" + d.title + \"</strong><div>\" + d.pagesofdiscussion + \" pages of discussion</div>\";\n        }\n      });\n    }\n\n    var toggleButton = function (flag) {\n      if (flag == 0) {\n        button1.attr(\"class\", \"button button-active\");\n        button2.attr(\"class\", \"button\");\n        buttonText1.attr(\"class\", \"button-text button-text-active\");\n        buttonText2.attr(\"class\", \"button-text\");\n      } else {\n        button1.attr(\"class\", \"button\");\n        button2.attr(\"class\", \"button button-active\");\n        buttonText1.attr(\"class\", \"button-text\");\n        buttonText2.attr(\"class\", \"button-text button-text-active\");\n      }\n    }\n \n    svg.selectAll(\".loading\").remove();\n \n    displayCircles(0);\n\n    var button1 = svg.append(\"rect\")\n                     .attr(\"class\", \"button button-active\")\n                     .attr(\"height\", 25)\n                     .attr(\"width\", 125)\n                     .attr(\"x\", left/2)\n                     .attr(\"y\", above/2)\n                     .attr(\"rx\", 5)\n                     .attr(\"ry\", 5)\n                     .on(\"click\", function() {\n                        toggleButton(0);\n                        return displayCircles(0);\n                      });\n\n    var buttonText1 = svg.append(\"text\")\n                     .attr(\"class\", \"button-text button-text-active\")\n                     .attr(\"x\", left/2 + 63)\n                     .attr(\"y\", above/2 + 16)\n                     .attr(\"text-anchor\", \"middle\")\n                     .text(\"Page Edits\")\n                     .on(\"click\", function() {\n                        toggleButton(0);\n                        return displayCircles(0);\n                      });\n\n    var button2 = svg.append(\"rect\")\n                     .attr(\"class\", \"button\")\n                     .attr(\"height\", 25)\n                     .attr(\"width\", 125)\n                     .attr(\"x\", left/2+125)\n                     .attr(\"y\", above/2)\n                     .attr(\"rx\", 5)\n                     .attr(\"ry\", 5)\n                     .on(\"click\", function() {\n                        toggleButton(1);\n                        return displayCircles(1);\n                      });\n\n    var buttonText2 = svg.append(\"text\")\n                     .attr(\"class\", \"button-text\")\n                     .attr(\"x\", left/2 + 188)\n                     .attr(\"y\", above/2 + 16)\n                     .attr(\"text-anchor\", \"middle\")\n                     .text(\"Pages of Discussion\")\n                     .on(\"click\", function() {\n                        toggleButton(1);\n                        return displayCircles(1);\n                      });\n  });\n</script>", "description": "d3.js wiki visualization", "created_at": "2016-04-22T05:16:14Z", "updated_at": "2016-04-22T05:16:15Z", "api": ["d3.tip", "d3.select", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.json", "d3.max"], "readme": "\n\nforked from <a href='http://bl.ocks.org/lilyc5459/'>lilyc5459</a>'s block: <a href='http://bl.ocks.org/lilyc5459/a35687613ab0f4991f37'>d3.js wiki visualization</a>\n\nforked from <a href='http://bl.ocks.org/CBasis/'>CBasis</a>'s block: <a href='http://bl.ocks.org/CBasis/9bae6529ccab4b902a50'>d3.js wiki visualization</a>", "uid": "CBasis_bc51bd85d8045fe0bc470250daf8d0cd"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\ncircle {\n  stroke: #e67e22;\n  fill-opacity: .25;\n  fill: #f1c40f;\n  stroke-width: 1px;\n}\n\n.leaf circle {\n  fill: #3498db;\n  stroke: #34495e;\n  fill-opacity: 1;\n}\n\ntext {\n  font: 12px sans-serif;\n}\n\n@media only screen and (min-device-width: 320px) and (max-device-width: 568px) {\n  #visual {\n    -webkit-user-select: none;\n    font-size: 1.2em;\n  }\n}\n\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {\n  #visual { \n\t-webkit-user-select: none; \n  }\n}\n\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar initialdiameter = diameter = 960,\n    noob = 2,\n    format = d3.format(\",d\");\n\n// adjust the box immediately for mobile devices\nif (window.innerWidth <= 480) {\n    diameter = window.innerWidth;\n}\n    \n// set viewBox and aspect ratio to enable a resize of the visual dimensions \nvar viewBoxDimensions = \"0 0 \" + diameter + \" \" + diameter,\n    aspect = 1;\n\nvar pack = d3.layout.pack()\n    .size([diameter - 40, diameter - 40])\n    .value(function(d) { return d.size; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"id\", \"visualsvg\")\n    .attr(\"viewBox\", viewBoxDimensions)\n    .attr(\"preserveAspectRatio\", \"xMinYMid\")    // add viewBox and preserveAspectRatio\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(2,2)\");\n\nd3.json(\"d3authorsbydomain.json\", function(error, root) {\n  var node = svg.datum(root).selectAll(\".node\")\n      .data(pack.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return d.children ? \"node\" : \"leaf node\"; })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"title\")\n      .text(function(d) { return d.name + (d.children ? \"\" : \": \" + format(d.size)); });\n\n  node.append(\"circle\")\n      .attr(\"r\", function(d) { return d.r; });\n\n  node.filter(function(d) { return !d.children && d.size > noob; }).append(\"text\")\n      .attr(\"dy\", \".3em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.name.substring(0, d.r / 3); });\n});\n\nwindow.onresize = function() {\n    var targetWidth = (window.innerWidth < initialdiameter)? window.innerWidth : initialdiameter;\n            \n    var svg = d3.select(\"#visualsvg\")\n        .attr(\"width\", targetWidth)\n        .attr(\"height\", targetWidth / aspect);\n}\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n</script>\n</body>\n</html>", "description": "D3 Authors by Domain", "created_at": "2014-01-29T23:17:28Z", "updated_at": "2015-08-29T13:55:48Z", "api": ["d3.format", "d3.layout.pack", "d3.select", "d3.json"], "readme": "This infographic was prepared for the d3.selectAll('\u00admeetup').data(\u00ad[2014]).enter() meet of the Bay Area d3 User Group, held Jan. 28, 2014. It uses Mike Bostock's [Circle Packing](http://bl.ocks.org/mbostock/4063530) enclosure diagram to show the long-tail distribution of authors and titles in the D3 ecosystem.  Source data originates from the [D3 Gallery](http://christopheviau.com/d3list/gallery.html) spreadsheet.  \n\nDuring data cleanup, aggregated domain values were assigned to each record in the data from the url.  The bl.ocks.org domain represents 880 titles, and github holds 169.  However, there are 24 domains with more than 5 titles and another 522 with fewer than 5.  While bl.ocks and github are the foundation for the developer community, the other domains hold finished titles that make points and change opinions.  Presentation of author titles by domain allows us to see this dynamic at a glance.\n\nEach containing circle (yellow) represents a web domain where authors display their finished D3 visualizations. Each leaf circle (blue) within a domain represents the number of works an author presents on that domain. Mouse over a circle to view the number in a tooltip.\n\nThe Jan. 24, 2014 spreadsheet snapshot held 1,986 titles, but listed authors for only 1,464 (74%) of the total.   Null values were replaced with author tokens extracted from the url when possible. The remainder were associated with the single appearance of a unique domain, and were assigned to the list with a unique name with the suffix 'other'. This represents the many people with one published D3 image. The same approach was taken for 60 bl.ocks.org titles that had a gist number, but no name. These should actually be assigned to someone on the list, but there wasn't enough time to finish that work. The information was kept to keep the domains sized appropriately.\n\nThis version of the infographic adds responsive page design to the circle packing gist, which resizes the image as the window size changes. Click on the [raw data](http://bl.ocks.org/StewartNoyce/raw/8699346/) to see this in action.  This allows it to appear gracefully in a phone format (particularly the iPhone). Additionally, there is a noob factor that suppresses the label for any circle representing a person with fewer published images than the specified value. ", "uid": "StewartNoyce_8699346"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Orbit Layout Modes</title>\n  <meta charset=\"utf-8\" />\n</head>\n<style>\n\n  #viz, svg {\n    width: 1000px;\n    height: 1000px;\n  }\n\n  text {\n    pointer-events: none;\n  }\n\n  #buttons {\n    position: absolute;\n    top:0;\n    left:0;\n  }\n\n  circle.ring {\n    fill: none;\n    stroke: black;\n    stroke-width: 1px;\n    stroke-opacity: .15;\n\n  }\n  \n</style>\n<script>\n\n\nfunction makeViz() {\n\n  d3.json(\"solarsystem.json\", function(data) {drawOrbit(data)});\n\n}\n\nfunction drawOrbit(_data) {\n\n  orbitScale = d3.scale.linear().domain([1, 3]).range([3.8, 1.5]).clamp(true);\n  radiusScale = d3.scale.linear().domain([210.64,2500,10000,71492.68]).range([2,4,8,16]);\n\n  planetColors = {Mercury: \"gray\", Venus: \"#d6bb87\", Earth: \"#677188\", Mars: \"#7c5541\", Jupiter: \"#a36a3e\", Saturn: \"#e9ba85\", Uranus: \"#73cbf0\", Neptune: \"#6383d1\"}\n\n\n  orbit = d3.layout.orbit().size([500,500])\n  .children(function(d) {return d.values})\n  .revolution(function(d) {return 1 / d.orbital_period})\n  .orbitSize(function(d) {return orbitScale(d.depth)})\n  .speed(1)\n  .mode(\"atomic\")\n  .nodes(_data);\n\n  d3.select(\"svg\")\n.append(\"g\")\n.attr(\"class\", \"viz\")\n.attr(\"transform\", \"translate(50,50)\")\n  .selectAll(\"g.node\").data(orbit.nodes())\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"})\n  .on(\"mouseover\", nodeOver)\n  .on(\"mouseout\", nodeOut)\n\n  d3.selectAll(\"g.node\")\n  .append(\"circle\")\n  .attr(\"r\", function(d) {return d.radius ? radiusScale(d.radius) : 20})\n  .style(\"fill\", function(d) {return d.depth == 0 ? \"#FFCC00\" : d.depth == 1 ? planetColors[d.key] : \"lightgray\"});\n\n  d3.selectAll(\"g.node\").filter(function(d) {return d.depth == 1})\n  .append(\"text\")\n  .text(function(d) {return d.depth == 0 ? \"Sun\" : d.key})\n  .attr(\"y\", 20)\n  .style(\"text-anchor\", \"middle\")\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n  .enter()\n  .insert(\"circle\", \"g\")\n  .attr(\"class\", \"ring\")\n  .attr(\"r\", function(d) {return d.r})\n  .attr(\"cx\", function(d) {return d.x})\n  .attr(\"cy\", function(d) {return d.y})\n\n  d3.select(\"#buttons\").append(\"button\").html(\"solar\").on(\"click\", function() {newMode(\"solar\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"flat\").on(\"click\", function() {newMode(\"flat\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"atomic\").on(\"click\", function() {newMode(\"atomic\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"custom\").on(\"click\", function() {newMode([4,4])})\n\n  orbit.on(\"tick\", function() {\n    d3.selectAll(\"g.node\")\n      .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"});\n\n    d3.selectAll(\"circle.ring\")\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n  });\n\n  orbit.start();\n\n  function newMode(_mode) {\n    orbit.mode(_mode)\n    .nodes(_data);\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n    .exit()\n    .transition()\n    .duration(500)\n    .style(\"stroke-opacity\", 0)\n    .style(\"stroke-width\", 3)\n    .remove();\n\n    d3.select(\"g.viz\")\n    .selectAll(\"circle.ring\")\n    .data(orbit.orbitalRings())\n    .enter()\n    .insert(\"circle\", \"g\")\n    .attr(\"class\", \"ring\");\n    \n    d3.selectAll(\"circle.ring\")\n    .attr(\"r\", function(d) {return d.r})\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n\n  }\n\n  function nodeOver(d) {\n    orbit.stop();\n\n    if (d.depth == 2) {\n      d3.select(this).append(\"text\").text(d.label || d.key).style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"moon\");\n    }\n    d3.select(this).select(\"circle\").style(\"stroke\", \"black\").style(\"stroke-width\", 3);\n  }\n\n  function nodeOut() {\n    orbit.start();\n      d3.selectAll(\"text.moon\").remove();\n    d3.selectAll(\"g.node > circle\").style(\"stroke\", \"none\").style(\"stroke-width\", 0);    \n  }\n\n\n}\n\n</script>\n<body onload=\"makeViz()\">\n<div id=\"viz\"><svg></svg><div id=\"buttons\"></div></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"d3.layout.orbit.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n</footer>\n</body>\n</html>", "description": "d3.layout.orbit modes", "created_at": "2015-12-19T19:02:49Z", "updated_at": "2015-12-19T19:02:49Z", "api": ["d3.dispatch", "d3.rebind", "d3.layout.pie", "d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that shows the different modes:\n\n**\"flat\"** is the default, demonstrated in earlier [examples that use flare.json](http://bl.ocks.org/emeeks/298e07ea67a640b5d9f4).\n\n**\"solar\"** arranges each satellite in its own ring, equally divided from the set size of the layout.\n\n**\"atomic\"** places 2 satellites in orbit in the first ring and 8 in every ring after that.\n\n**\"custom\"** is achieved by passing an array of integers. Each integer sets the number of satellites in that ring, with the final value used to set the number of satellites in all remaining rings. Under the hood, \"solar\" could be achieved by passing [1], \"atomic\" could be achieved by passing [2,8] and \"flat\" could be achieved by passing [9999].\n\nforked from <a href='http://bl.ocks.org/emeeks/'>emeeks</a>'s block: <a href='http://bl.ocks.org/emeeks/c8ef9d67acc044b368ef'>d3.layout.orbit modes</a>", "uid": "malcolm-decuire_95314ea75aed1c988f7c"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Small Multiples with Maps</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    fill: none;\n    stroke: lightgray;\n    stroke-width: 1px;\n  }\n  \n  .smallmap {\n    width: 33%;\n    float: left;\n    border: 1px lightgray solid;\n  }\n\n</style>\n<script>\n    function makeSomeMaps() {\n\n    mapImageArray = [];\n    map = d3.carto.map();\n    d3.select(\"#map\").call(map);\n\n    map.setScale(1)\n\n    countryLayer = d3.carto.layer.topojson();\n    \n    countryLayer.path(\"world.topojson\")\n    .label(\"Countries\")\n    .renderMode(\"canvas\")\n    .cssClass(\"country\");\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"all_sites.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"point\")\n    .renderMode(\"canvas\")\n    .markerSize(1)\n    .x(\"xcoord\")\n    .y(\"ycoord\")\n    .on(\"load\", smallMaptiples)\n\n    map.addCartoLayer(countryLayer).addCartoLayer(csvLayer);\n    \n    function smallMaptiples() {\n    var cityAtts = [\"aq\", \"ar\", \"arid\", \"capacity\", \"de\", \"delivery\", \"pop\", \"qu\",\"region\"];\n    var cityData = csvLayer.features()\n\n    for (var att in cityAtts) {\n      \n    var attExtent = d3.extent(cityData, function(d) {return parseFloat(d[cityAtts[att]])});\n    var colorScale = d3.scale.linear().domain([attExtent[0],(attExtent[0] + attExtent[1])/2,attExtent[1]]).range([\"green\",\"yellow\",\"red\"])\n\n    csvLayer\n    .markerColor(function(d) {return colorScale(d[cityAtts[att]])})\n    .strokeColor(function(d) {return colorScale(d[cityAtts[att]])})\n\n    map.refresh();\n    mapImageArray.push(d3.select(\"canvas\").node().toDataURL());\n\n    }\n    \n    window.onresize(null);\n    d3.select(\"#map\").remove();\n    d3.select(\"body\").append(\"div\").selectAll(\"img\").data(mapImageArray).enter().append(\"img\").attr(\"class\", \"smallmap\").attr(\"src\", function(d) {return d})\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Small Maptiples - d3.carto", "created_at": "2015-09-08T08:43:15Z", "updated_at": "2015-09-08T08:43:15Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.extent", "d3.scale.linear"], "readme": "Using **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**'s built-in canvas rendering and HTML5 canvas's built-in toDataUrl() function to create small multiples of the same map.\n\nThis example cycles through the various numeric attributes of the point dataset and restyles the map by changing layer.markerColor and layer.strokeColor. You have to call map.refresh() to update the display and then select the canvas element associated with the map to get access to the image data as a data URL, which you can pass to img elements.\n\nThis method of accessing toDataUrl only works with layers drawn using canvas.", "uid": "renecnielsen_87e6126d58f86d216a3b"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <style>\n    body {\n      width: 960px;\n    }\n    path {\n      stroke: white;\n      fill-rule: evenodd;\n    }\n  </style>\n  <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/lodash/2.4.1/lodash.min.js\"></script>  \n</head>\n<body>\n  <div id='viz'></div>\n  <div>\n    <button onclick=\"larger()\">Larger</button><button onclick=\"smaller()\">Smaller</button>\n  </div>\n  <script>\n    var charts = [];\n\n    d3.json(\"flare.json\", function(error, root) {\n    \n      var countAccessorFn = function(d) { return 1; };\n      var sizeAccessorFn = function(d) { return d.size; };\n\n      charts.push(makeSunburst(root, countAccessorFn));\n      charts.push(makeSunburst(root, sizeAccessorFn));\n\n      function makeSunburst(dataRoot, valueAccessor) {\n\n        var width = 480, height = 480;\n        var radius = (Math.min(width, height) / 2) - 60;\n        var color = d3.scale.category20c();\n        var angleScale = d3.scale.linear().range([0, 2 * Math.PI]);\n        var ringRadiusScale = d3.scale.linear().range([0, radius]);\n\n        var svg = d3.select(\"#viz\").append(\"svg\")\n            .attr({width: width, height: height});\n        \n        var container = svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height * .52 + \")\");\n\n        var partition = d3.layout.partition().sort(null).value(valueAccessor);\n        var nodes = partition.nodes(dataRoot);\n\n        var arc = d3.svg.arc()\n          .startAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, angleScale(d.x))); })\n          .endAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, angleScale(d.x + d.dx))); })\n          .innerRadius(function(d) { return Math.max(0, ringRadiusScale(d.y)); })\n          .outerRadius(function(d) { return Math.max(0, ringRadiusScale(d.y + d.dy)); });\n\n        var path = container.selectAll(\"path\")\n            .data(nodes)\n          .enter().append(\"path\")\n            .attr(\"display\", function(d) { return d.depth ? null : \"none\"; }) // hide inner ring\n            .attr(\"d\", arc)\n            .style(\"fill\", function(d) { return color((d.children ? d : d.parent).name); });\n\n        return {\n          addToRadius: function(radiusChange) {\n            radius += radiusChange;\n            ringRadiusScale.range([0, radius]);\n            // leave all data the same but redraw arcs based on new radius\n            path.transition().attr('d', arc);\n          }\n        }\n      }\n\n      d3.select(self.frameElement).style(\"height\", \"600px\");\n    });\n\n\n    function larger() {\n      charts.forEach(function(chart) {\n        chart.addToRadius(20);\n      });\n    }\n\n    function smaller() {\n      charts.forEach(function(chart) {\n        chart.addToRadius(-20);\n      });\n    }\n  </script>\n</body>\n</html>", "description": "d3.layout.partition issue", "created_at": "2014-06-30T14:05:26Z", "updated_at": "2015-08-29T14:03:16Z", "api": ["d3.json", "d3.scale.category20c", "d3.scale.linear", "d3.select", "d3.layout.partition", "d3.svg.arc"], "readme": "Demo of how the properties added by d3.layout.partition are shared between visualizations referencing the same underlying data. Both charts should resize, but instead the first chart adopts the ring proportions of the second chart when the `.arc` function is called again.", "uid": "explunit_ab8cf15534f7fec5ac6d"}, {"code": "<html>\n<head>\n  <title>Community Grid</title>\n  <meta charset=\"utf-8\" />\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"jsLouvain.js\" type=\"text/JavaScript\"></script>\n<script src=\"forceInABox.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    height: 500px;\n    width: 500px;\n    border: 1px solid gray;\n  }\n</style>\n<body>\n\n<div id=\"viz\">\n  <svg class=\"main\">\n  </svg>\n</div>\n</body>\n  <footer>\n<script>\n\nd3.csv(\"firm.csv\",function(error,data) {createNetwork(data)});\n\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\nfunction createNetwork(edgelist) {\n  var nodeHash = {};\n  var nodes = [];\n  var edges = [];\n\n  edgelist.forEach(function (edge) {\n    if (!nodeHash[edge.source]) {\n      nodeHash[edge.source] = {id: edge.source, label: edge.source};\n      nodes.push(nodeHash[edge.source]);\n    }\n    if (!nodeHash[edge.target]) {\n      nodeHash[edge.target] = {id: edge.target, label: edge.target};\n      nodes.push(nodeHash[edge.target]);\n    }\n    if (edge.weight == 5) {\n      edges.push({id: nodeHash[edge.source].id + \"-\" + nodeHash[edge.target].id, source: nodeHash[edge.source], target: nodeHash[edge.target], weight: edge.weight});\n    }\n  });\n  createForceNetwork(nodes, edges);\n}\n\nfunction createForceNetwork(nodes, edges) {\n\n//create a network from an edgelist\n\nvar colors = d3.scale.ordinal().domain([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]).range([\"#996666\", \"#66CCCC\", \"#FFFF99\", \"#CC9999\", \"#666633\", \"#993300\", \"#999966\", \"#660000\", \"#996699\", \"#cc6633\", \"#ff9966\", \"#339999\", \"#6699cc\", \"#ffcc66\", \"#ff6600\", \"#00ccccc\"]);\n\nvar node_data = nodes.map(function (d) {return d.id});\nvar edge_data = edges.map(function (d) {return {source: d.source.id, target: d.target.id, weight: 1}; });\n\nvar community = jLouvain().nodes(node_data).edges(edge_data);\nvar result  = community();\n\nnodes.forEach(function (node) {\n  node.module = result[node.id]\n});\n\nvar force = d3.layout.forceInABox()\n    .charge(-120)\n    .linkDistance(50)\n    .linkStrengthInterCluster(0.01)\n    .gravityToFoci(0.2)\n    .gravityOverall(0.05)\n    .size([500, 500])\n    .groupBy(function (d) {return d.module});\n\n  force\n    .nodes(nodes)\n    .links(edges)\n    .on(\"tick\", updateGraph);\n\n  var edgeEnter = d3.select(\"svg.main\").selectAll(\"g.edge\")\n  .data(edges, function (d) {return d.id})\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"edge\");\n\n  edgeEnter\n  .append(\"line\")\n  .style(\"stroke-width\", \"1px\")\n  .style(\"stroke\", \"black\")\n  .style(\"pointer-events\", \"none\");\n\n  var nodeEnter = d3.select(\"svg.main\")\n  .selectAll(\"g.node\")\n  .data(nodes, function (d) {return d.id})\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .call(force.drag());\n\n  nodeEnter.append(\"circle\")\n  .attr(\"r\", 8)\n  .style(\"fill\", function (d) {return colors(d.module)})\n  .style(\"stroke\", \"black\")\n  .style(\"stroke-width\", \"1px\")\n\n  nodeEnter.append(\"text\")\n  .style(\"text-anchor\", \"middle\")\n  .attr(\"y\", 3)\n  .style(\"stroke-width\", \"1px\")\n  .style(\"stroke-opacity\", 0.75)\n  .style(\"stroke\", \"white\")\n  .style(\"font-size\", \"8px\")\n  .text(function (d) {return d.id})\n  .style(\"pointer-events\", \"none\")\n\n  nodeEnter.append(\"text\")\n  .style(\"text-anchor\", \"middle\")\n  .attr(\"y\", 3)\n  .style(\"font-size\", \"8px\")\n  .text(function (d) {return d.id})\n  .style(\"pointer-events\", \"none\")\n\n  force.start();\n\n\nfunction updateGraph(e) {\n  force.onTick(e);\n\n  d3.selectAll(\"line\")\n    .attr(\"x1\", function(d) { return d.source.x; })\n    .attr(\"y1\", function(d) { return d.source.y; })\n    .attr(\"x2\", function(d) { return d.target.x; })\n    .attr(\"y2\", function(d) { return d.target.y; });\n\n  d3.selectAll(\"g.node\")\n    .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n}\n\n}\n</script>\n  </footer>\n\n</html>\n", "description": "Example of d3.layout.forceInABox", "created_at": "2015-07-29T01:40:32Z", "updated_at": "2016-03-16T15:50:20Z", "api": ["d3.layout.force", "d3.map", "d3.layout.treemap", "d3.ascending", "d3.csv", "d3.scale.ordinal", "d3.layout.forceInABox", "d3.select", "d3.selectAll"], "readme": "An implementation of [d3.layout.forceInABox](https://github.com/john-guerra/forceInABox) which implements a method to separate nodes in a network visually based on some kind of group membership.\n\nIn this case, the group is the community membership of the node as determined by Louvain modularity using [jLouvain.js](https://github.com/upphiminn/jLouvain).", "uid": "emeeks_3a54620a4751a7d68c1e"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Orbit Layout Modes</title>\n  <meta charset=\"utf-8\" />\n</head>\n<style>\n\n  #viz, svg {\n    width: 1000px;\n    height: 1000px;\n  }\n\n  text {\n    pointer-events: none;\n  }\n\n  #buttons {\n    position: absolute;\n    top:0;\n    left:0;\n  }\n\n  circle.ring {\n    fill: none;\n    stroke: black;\n    stroke-width: 1px;\n    stroke-opacity: .15;\n\n  }\n  \n</style>\n<script>\n\n\nfunction makeViz() {\n\n  d3.json(\"solarsystem.json\", function(data) {drawOrbit(data)});\n\n}\n\nfunction drawOrbit(_data) {\n\n  orbitScale = d3.scale.linear().domain([1, 3]).range([3.8, 1.5]).clamp(true);\n  radiusScale = d3.scale.linear().domain([210.64,2500,10000,71492.68]).range([2,4,8,16]);\n\n  planetColors = {Mercury: \"gray\", Venus: \"#d6bb87\", Earth: \"#677188\", Mars: \"#7c5541\", Jupiter: \"#a36a3e\", Saturn: \"#e9ba85\", Uranus: \"#73cbf0\", Neptune: \"#6383d1\"}\n\n\n  orbit = d3.layout.orbit().size([500,500])\n  .children(function(d) {return d.values})\n  .revolution(function(d) {return 1 / d.orbital_period})\n  .orbitSize(function(d) {return orbitScale(d.depth)})\n  .speed(1)\n  .mode(\"atomic\")\n  .nodes(_data);\n\n  d3.select(\"svg\")\n.append(\"g\")\n.attr(\"class\", \"viz\")\n.attr(\"transform\", \"translate(50,50)\")\n  .selectAll(\"g.node\").data(orbit.nodes())\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"})\n  .on(\"mouseover\", nodeOver)\n  .on(\"mouseout\", nodeOut)\n\n  d3.selectAll(\"g.node\")\n  .append(\"circle\")\n  .attr(\"r\", function(d) {return d.radius ? radiusScale(d.radius) : 20})\n  .style(\"fill\", function(d) {return d.depth == 0 ? \"#FFCC00\" : d.depth == 1 ? planetColors[d.key] : \"lightgray\"});\n\n  d3.selectAll(\"g.node\").filter(function(d) {return d.depth == 1})\n  .append(\"text\")\n  .text(function(d) {return d.depth == 0 ? \"Sun\" : d.key})\n  .attr(\"y\", 20)\n  .style(\"text-anchor\", \"middle\")\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n  .enter()\n  .insert(\"circle\", \"g\")\n  .attr(\"class\", \"ring\")\n  .attr(\"r\", function(d) {return d.r})\n  .attr(\"cx\", function(d) {return d.x})\n  .attr(\"cy\", function(d) {return d.y})\n\n  d3.select(\"#buttons\").append(\"button\").html(\"solar\").on(\"click\", function() {newMode(\"solar\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"flat\").on(\"click\", function() {newMode(\"flat\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"atomic\").on(\"click\", function() {newMode(\"atomic\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"custom\").on(\"click\", function() {newMode([4,4])})\n\n  orbit.on(\"tick\", function() {\n    d3.selectAll(\"g.node\")\n      .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"});\n\n    d3.selectAll(\"circle.ring\")\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n  });\n\n  orbit.start();\n\n  function newMode(_mode) {\n    orbit.mode(_mode)\n    .nodes(_data);\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n    .exit()\n    .transition()\n    .duration(500)\n    .style(\"stroke-opacity\", 0)\n    .style(\"stroke-width\", 3)\n    .remove();\n\n    d3.select(\"g.viz\")\n    .selectAll(\"circle.ring\")\n    .data(orbit.orbitalRings())\n    .enter()\n    .insert(\"circle\", \"g\")\n    .attr(\"class\", \"ring\");\n    \n    d3.selectAll(\"circle.ring\")\n    .attr(\"r\", function(d) {return d.r})\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n\n  }\n\n  function nodeOver(d) {\n    orbit.stop();\n\n    if (d.depth == 2) {\n      d3.select(this).append(\"text\").text(d.label || d.key).style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"moon\");\n    }\n    d3.select(this).select(\"circle\").style(\"stroke\", \"black\").style(\"stroke-width\", 3);\n  }\n\n  function nodeOut() {\n    orbit.start();\n      d3.selectAll(\"text.moon\").remove();\n    d3.selectAll(\"g.node > circle\").style(\"stroke\", \"none\").style(\"stroke-width\", 0);    \n  }\n\n\n}\n\n</script>\n<body onload=\"makeViz()\">\n<div id=\"viz\"><svg></svg><div id=\"buttons\"></div></div>\n<footer>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n<script src=\"d3.layout.orbit.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n</footer>\n</body>\n</html>", "description": "d3.layout.orbit modes", "created_at": "2014-12-28T00:57:36Z", "updated_at": "2016-03-17T02:16:29Z", "api": ["d3.dispatch", "d3.rebind", "d3.layout.pie", "d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that shows the different modes:\n\n**\"flat\"** is the default, demonstrated in earlier [examples that use flare.json](http://bl.ocks.org/emeeks/298e07ea67a640b5d9f4).\n\n**\"solar\"** arranges each satellite in its own ring, equally divided from the set size of the layout.\n\n**\"atomic\"** places 2 satellites in orbit in the first ring and 8 in every ring after that.\n\n**\"custom\"** is achieved by passing an array of integers. Each integer sets the number of satellites in that ring, with the final value used to set the number of satellites in all remaining rings. Under the hood, \"solar\" could be achieved by passing [1], \"atomic\" could be achieved by passing [2,8] and \"flat\" could be achieved by passing [9999].", "uid": "emeeks_c8ef9d67acc044b368ef"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n  <style>\n    body { margin:0; padding:0; }\n    #map { width:960px; height:500px; background:cyan; }\n  </style>\n</head>\n<body>\n<div id='map'></div>\n<script>\nfunction clickcancel() {\n    var event = d3.dispatch('click', 'dblclick');\n    function cc(selection) {\n        var down,\n            tolerance = 5,\n            last,\n            wait = null;\n        // euclidean distance\n        function dist(a, b) {\n            return Math.sqrt(Math.pow(a[0] - b[0], 2), Math.pow(a[1] - b[1], 2));\n        }\n        selection.on('mousedown', function() {\n            down = d3.mouse(document.body);\n            last = +new Date();\n        });\n        selection.on('mouseup', function() {\n            if (dist(down, d3.mouse(document.body)) > tolerance) {\n                return;\n            } else {\n                if (wait) {\n                    window.clearTimeout(wait);\n                    wait = null;\n                    event.dblclick(d3.event);\n                } else {\n                    wait = window.setTimeout((function(e) {\n                        return function() {\n                            event.click(e);\n                            wait = null;\n                        };\n                    })(d3.event), 300);\n                }\n            }\n        });\n    };\n    return d3.rebind(cc, event, 'on');\n}\nvar cc = clickcancel();\nd3.select('#map').call(cc);\ncc.on('click', function() {\n    d3.select('#map').text(d3.select('#map').text() + 'click, ');\n});\ncc.on('dblclick', function() {\n    d3.select('#map').text(d3.select('#map').text() + 'dblclick, ');\n});\n</script>\n</body>\n</html>\n", "description": "Distinguishing click and double-click in D3.", "created_at": "2013-08-30T21:37:46Z", "updated_at": "2015-12-22T01:09:08Z", "api": ["d3.dispatch", "d3.mouse", "d3.rebind", "d3.select"], "readme": "", "uid": "couchand_6394506"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Orbit Layout Modes</title>\n  <meta charset=\"utf-8\" />\n</head>\n<style>\n\n  #viz, svg {\n    width: 1000px;\n    height: 1000px;\n  }\n\n  text {\n    pointer-events: none;\n  }\n\n  #buttons {\n    position: absolute;\n    top:0;\n    left:0;\n  }\n\n  circle.ring {\n    fill: none;\n    stroke: black;\n    stroke-width: 1px;\n    stroke-opacity: .15;\n\n  }\n  \n</style>\n<script>\n\n\nfunction makeViz() {\n\n  d3.json(\"solarsystem.json\", function(data) {drawOrbit(data)});\n\n}\n\nfunction drawOrbit(_data) {\n\n  orbitScale = d3.scale.linear().domain([1, 3]).range([3.8, 1.5]).clamp(true);\n  radiusScale = d3.scale.linear().domain([210.64,2500,10000,71492.68]).range([2,4,8,16]);\n\n  planetColors = {Mercury: \"gray\", Venus: \"#d6bb87\", Earth: \"#677188\", Mars: \"#7c5541\", Jupiter: \"#a36a3e\", Saturn: \"#e9ba85\", Uranus: \"#73cbf0\", Neptune: \"#6383d1\"}\n\n\n  orbit = d3.layout.orbit().size([500,500])\n  .children(function(d) {return d.values})\n  .revolution(function(d) {return 1 / d.orbital_period})\n  .orbitSize(function(d) {return orbitScale(d.depth)})\n  .speed(1)\n  .mode(\"atomic\")\n  .nodes(_data);\n\n  d3.select(\"svg\")\n.append(\"g\")\n.attr(\"class\", \"viz\")\n.attr(\"transform\", \"translate(50,50)\")\n  .selectAll(\"g.node\").data(orbit.nodes())\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"})\n  .on(\"mouseover\", nodeOver)\n  .on(\"mouseout\", nodeOut)\n\n  d3.selectAll(\"g.node\")\n  .append(\"circle\")\n  .attr(\"r\", function(d) {return d.radius ? radiusScale(d.radius) : 20})\n  .style(\"fill\", function(d) {return d.depth == 0 ? \"#FFCC00\" : d.depth == 1 ? planetColors[d.key] : \"lightgray\"});\n\n  d3.selectAll(\"g.node\").filter(function(d) {return d.depth == 1})\n  .append(\"text\")\n  .text(function(d) {return d.depth == 0 ? \"Sun\" : d.key})\n  .attr(\"y\", 20)\n  .style(\"text-anchor\", \"middle\")\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n  .enter()\n  .insert(\"circle\", \"g\")\n  .attr(\"class\", \"ring\")\n  .attr(\"r\", function(d) {return d.r})\n  .attr(\"cx\", function(d) {return d.x})\n  .attr(\"cy\", function(d) {return d.y})\n\n  d3.select(\"#buttons\").append(\"button\").html(\"solar\").on(\"click\", function() {newMode(\"solar\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"flat\").on(\"click\", function() {newMode(\"flat\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"atomic\").on(\"click\", function() {newMode(\"atomic\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"custom\").on(\"click\", function() {newMode([4,4])})\n\n  orbit.on(\"tick\", function() {\n    d3.selectAll(\"g.node\")\n      .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"});\n\n    d3.selectAll(\"circle.ring\")\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n  });\n\n  orbit.start();\n\n  function newMode(_mode) {\n    orbit.mode(_mode)\n    .nodes(_data);\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n    .exit()\n    .transition()\n    .duration(500)\n    .style(\"stroke-opacity\", 0)\n    .style(\"stroke-width\", 3)\n    .remove();\n\n    d3.select(\"g.viz\")\n    .selectAll(\"circle.ring\")\n    .data(orbit.orbitalRings())\n    .enter()\n    .insert(\"circle\", \"g\")\n    .attr(\"class\", \"ring\");\n    \n    d3.selectAll(\"circle.ring\")\n    .attr(\"r\", function(d) {return d.r})\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n\n  }\n\n  function nodeOver(d) {\n    orbit.stop();\n\n    if (d.depth == 2) {\n      d3.select(this).append(\"text\").text(d.label || d.key).style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"moon\");\n    }\n    d3.select(this).select(\"circle\").style(\"stroke\", \"black\").style(\"stroke-width\", 3);\n  }\n\n  function nodeOut() {\n    orbit.start();\n      d3.selectAll(\"text.moon\").remove();\n    d3.selectAll(\"g.node > circle\").style(\"stroke\", \"none\").style(\"stroke-width\", 0);    \n  }\n\n\n}\n\n</script>\n<body onload=\"makeViz()\">\n<div id=\"viz\"><svg></svg><div id=\"buttons\"></div></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"d3.layout.orbit.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n</footer>\n</body>\n</html>", "description": "d3.layout.orbit modes", "created_at": "2015-11-08T15:01:21Z", "updated_at": "2015-11-08T15:01:21Z", "api": ["d3.dispatch", "d3.rebind", "d3.layout.pie", "d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that shows the different modes:\n\n**\"flat\"** is the default, demonstrated in earlier [examples that use flare.json](http://bl.ocks.org/emeeks/298e07ea67a640b5d9f4).\n\n**\"solar\"** arranges each satellite in its own ring, equally divided from the set size of the layout.\n\n**\"atomic\"** places 2 satellites in orbit in the first ring and 8 in every ring after that.\n\n**\"custom\"** is achieved by passing an array of integers. Each integer sets the number of satellites in that ring, with the final value used to set the number of satellites in all remaining rings. Under the hood, \"solar\" could be achieved by passing [1], \"atomic\" could be achieved by passing [2,8] and \"flat\" could be achieved by passing [9999].", "uid": "wcjohnson11_7ebb3f3a28e403745856"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n    <style>\n\n\n        </style>\n    <body>\n\n<svg class='keyer'></svg>\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n        <script src=\"d3.geo.zoom.js\"></script>\n        <script>\n\nd3.json(\"../world110.json\", function(err, world) {\n//  console.log(\"data\", world)\n  var countries = topojson.feature(world, world.objects.land);\n//  console.log(\"countries\", countries)\nvar width = 720\nvar height = 400\n//var projection = d3.geo.orthographic()\nvar projection = d3.geo.albers()\n//var projection = d3.geo.mercator()\n  .scale(170)\n  .rotate([100,0,0])\n  .translate([width/2, height/2])\n  .clipAngle(90);\n\nvar path = d3.geo.path()\n  .projection(projection);\n\nvar svg = d3.select('.keyer');\n\nsvg.attr('height',height).attr('width',width);\n\n\nsvg.append(\"path\")\n.datum(countries)\n  .attr(\"d\", path(countries))\n  .classed(\"land\", true)\n  .attr('fill','rgb(83, 207, 142)');\n\n\n  var graticule = d3.geo.graticule();\n\n  svg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path)\n    .attr(\"fill\", \"transparent\")\n    .attr(\"stroke\",\"grey\");\n\nvar zoom = d3.geo.zoom()\n  .projection(projection)\n  //.scaleExtent([projection.scale() *.7, projection.scale() *10])\n  .on(\"zoom.redraw\", function(){\n    d3.event.sourceEvent.preventDefault();\n    svg.selectAll(\"path\").attr(\"d\",path);\n  })\n  d3.selectAll('path')\n.call(zoom);\n\n\n})\n\n\n\n\n\n\n            </script>\n    </body>\n", "description": "d3.geo.zoom.js plugin first use", "created_at": "2014-07-27T21:06:18Z", "updated_at": "2015-08-29T14:04:36Z", "api": ["d3.dispatch", "d3.behavior.zoom", "d3.mouse", "d3.rebind", "d3.json", "d3.geo.orthographic", "d3.geo.albers", "d3.geo.mercator", "d3.geo.path", "d3.select", "d3.geo.graticule", "d3.geo.zoom", "d3.event.sourceEvent.preventDefault", "d3.selectAll"], "readme": "", "uid": "mpmckenna8_f43a842a8953e87f5b3c"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.states {\n  fill: #ccc;\n  stroke: #fff;\n}\n\n.symbol {\n  fill: steelblue;\n  fill-opacity: .8;\n  stroke: #fff;\n}\n\n.tooltip{ background-color:rgba(68,136,187,0.5);;\n          margin: 10px;\n          height: 50px;\n          width: 150px;\n          padding-left: 10px; \n          padding-top: 10px;\n    -webkit-border-radius:10px;\n    -moz-border-radius:10px;\n    border-radius:10px;\n        }\n</style>\n<body>\n<button type=\"button\" id=\"change\">Change</button>\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v0.min.js\"></script>\n<script src=\"http://d3js.org/queue.v1.min.js\"></script>\n<script type=\"text/javascript\" src=\"./tooltip.js\"></script>\n\n\n<script>\nvar width = 960,\n    height = 500;\nvar states, points;\n\n\nvar radius = d3.scale.sqrt()\n    .domain([0, 1e6])\n    .range([0, 10]);\n\nvar projection = d3.geo.mercator()\n    .center([-97, 37])\n    .scale(4000 / 2 / Math.PI)\n    .translate([width / 2, height / 2]);\n\n\nvar path = d3.geo.path()\n.projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nqueue()\n    .defer(d3.json, \"/mbostock/raw/4090846/us.json\")\n    .defer(d3.json, \"/mbostock/raw/3750900/us-state-centroids.json\")\n    .await(ready);\n\n\nfunction ready(error, us, centroid) {\nstates = svg.append(\"path\")\n      .attr(\"class\", \"states\")\n      .datum(topojson.object(us, us.objects.states))\n      .attr(\"d\", path);\n\n    points =  svg.selectAll(\".symbol\")\n      .data(centroid.features.sort(function(a, b) { return b.properties.population - a.properties.population; }))\n    .enter().append(\"path\")\n      .attr(\"class\", \"symbol\")\n      .attr(\"d\", path.pointRadius(function(d) { if(d.properties) { return radius(d.properties.population);} else {return;} }))\n      .call(d3.helper.tooltip(\n        function(d, i){\n          return \"<b>\"+d.properties.name + \"</b><br/>pop: \"+d.properties.population;\n        }\n        ));\n};\n\nd3.select(\"#change\").on(\"click\", function() {\n  projection = d3.geo.albers();\n  path.projection(projection);\n  states.transition()\n      .duration(10000)\n      .attr(\"d\", path);\n  points.transition()\n      .duration(3000)\n      .attr(\"d\", path);\n});\n\n\n</script>\n\n", "description": "D3 tutorial V: Adding tooltips", "created_at": "2013-03-17T11:12:35Z", "updated_at": "2015-12-15T01:39:02Z", "api": ["d3.scale.sqrt", "d3.geo.mercator", "d3.geo.path", "d3.select", "d3.helper.tooltip", "d3.geo.albers", "d3.mouse"], "readme": "This example belongs to [the presentation](rveciana.github.com/geoexamples/geoinquiets/d3js/index_en.html) made to the [OSGeo](http://www.osgeo.org/) local group in Barcelona [Geoinquiets](http://www.geoinquiets.cat/)\nThe example is an adaptation from [Mike Bostock](http://bost.ocks.org/mike/)'s [Symbol Map example](http://bl.ocks.org/mbostock/4342045)", "uid": "rveciana_5181105"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  p { width: 600px; margin-bottom: 30px; line-height: 1.7; }\n  .chart { shape-rendering: crispEdges; }\n  .axis text { font: 10px sans-serif; }\n  .axis line, .axis path { fill: none; stroke: black; }\n</style>\n<body>\n<h1>Generating regular time scale axis tick labels</h1>\n<p>By default the tick generator will generate adjacent ticks at month and year boundaries, leading to irregular tick spacing, as seen below.</p>\n<div class=\"irregular\"></div>\n<p>To solve this problem I've done two things: first, I've used <tt>tickValues()</tt> to display only every <em>n</em>th label<sup><a href=\"#thanks\">[1]</a></sup>; and second, calculating <em>n</em> based on the chart width and the label width. Here, I've hardcoded the label width to 40px. This works for me because my <tt>tickFormat</tt> is fixed. If you're using the default behavior, which sometimes prints \"December\" and sometimes \"2013\", a fixed value likely won't work for you.</p>\n<div class=\"regular\"></div>\n<hr>\n<p><sup name=\"thanks\">[1]</sup>Thanks to Adam Pearce for <a href=\"http://stackoverflow.com/questions/21296968/d3-time-scale-axis-ticks-are-irregular-on-year-boundaries\">this inspiration</a>.</p>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar start_date = \"2013-12-21T00:00:00Z\",\n    end_date   = \"2014-01-07T00:00:00Z\",\n    iso        = d3.time.format.iso,\n    t1         = iso.parse(start_date),\n    t2         = iso.parse(end_date);\n\nvar margin = {top: 0, right: 10, bottom: 20, left: 10},\n    width  = 600 - margin.left - margin.right,\n    height = 40 - margin.top - margin.bottom;\n\n\nvar x = d3.time.scale()\n    .domain([t1, t2])\n    .range([0, width])\n\nvar xAxisIrregular = d3.svg.axis()\n    .scale(x)\n\nvar svg = d3.select(\".irregular\").append(\"svg\")\n    .attr(\"class\", \"chart\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append('g')\n    .attr('class', 'x axis')\n    .call(xAxisIrregular)\n  .selectAll('text')\n    .attr('fill', function(d) { if(is_problematic(d)) { return \"red\"; } })\n\n/*****/\n\nvar interval = d3.time.day;\nvar LABEL_WIDTH = 40,\n    LABEL_FORMAT = d3.time.format('%b %_d');\nvar max_label_ct = width / LABEL_WIDTH,\n    label_skip = Math.ceil(interval.range(t1, t2).length / max_label_ct);\n\nvar xAxisRegular = d3.svg.axis()\n    .scale(x)\n    .tickValues(interval.range(t1, t2).filter(function(d, i) {\n      return !(i % label_skip); }))\n    .tickFormat(LABEL_FORMAT);\n\nvar svg2 = d3.select('.regular').append('svg')\n    .attr(\"class\", \"chart\")\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n  .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\nsvg2.append('g')\n    .attr('class', 'x axis')\n    .call(xAxisRegular);\n\n\nfunction is_problematic(d) {\n  return ((d.getDate() == 31) || (d.getDate() == 1));\n}\n</script>\n", "description": "D3 time axis tick trouble", "created_at": "2014-01-22T23:55:57Z", "updated_at": "2016-01-04T04:39:19Z", "api": ["d3.time.scale", "d3.svg.axis", "d3.select", "d3.time.format"], "readme": "", "uid": "benkimball_8570073"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pixi.js/3.0.10/pixi.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width:100%; height: 100% }\n  </style>\n</head>\n\n<body>\n  <div id=\"container\"></div>\n  <script>\n    var width = 700;\n    var height = 500;\n    var color = d3.scale.category20();\n\n\t\tvar renderer = new PIXI.WebGLRenderer(800, 600, \n      { antialias: true, backgroundColor : 0xffffff });\n\t\tdocument.body.appendChild(renderer.view);\n\t\t\t\n\t\t// create the root of the scene graph\n\t\tvar stage = new PIXI.Container();\n\n    // function onDragStart(event)\n    // {\n    //     // store a reference to the data\n    //     // the reason for this is because of multitouch\n    //     // we want to track the movement of this particular touch\n    //     this.data = event.data;\n    //     this.alpha = 0.5;\n    //     this.dragging = true;\n    // }\n\n    // function onDragEnd()\n    // {\n    //     this.alpha = 1;\n    //     this.dragging = false;\n\n    //     // set the interaction data to null\n    //     this.data = null;\n    //     force.start();\n    // }\n\n    // function onDragMove(e)\n    // {\n\n    //     if (this.dragging)\n    //     {\n    //         var newPosition = this.data.getLocalPosition(this);\n    //         this.updateCircle(newPosition.x, newPosition.y);\n    //         force.start();\n    //     }\n    // }\n\n    \n    function drawCircle(d,x,y,r,fill) {\n      if (typeof fill === \"string\") {\n        fill = parseInt(fill.substring(1), 16);\n      }\n\n      if (d._graphics) {\n        d._graphics.clear();\n      } else {\n        d._graphics = new PIXI.Graphics();\n        d._graphics.updateCircle = function(newx,newy) {\n          drawCircle(d, newx, newy, r, fill);    \n        }\n      }\n\n      d._graphics.lineStyle(0);\n      d._graphics.beginFill(fill, 1);\n      d._graphics.drawCircle(x,y,r);\n      d._graphics.endFill();\n      d._graphics.interactive = true;\n      d._graphics.buttonMode = true;\n      d._graphics.hitArea = new PIXI.Circle(x,y,r);\n      d._graphics.click = function(e) {\n        this.alpha = 0.5;\n        force.start();\n      }\n\n      // d._graphics.on('mousedown', onDragStart)\n      //   .on('touchstart', onDragStart)\n      //   // events for drag end\n      //   .on('mouseup', onDragEnd)\n      //   .on('mouseupoutside', onDragEnd)\n      //   .on('touchend', onDragEnd)\n      //   .on('touchendoutside', onDragEnd)\n      //   // events for drag move\n      //   .on('mousemove', onDragMove)\n      //   .on('touchmove', onDragMove);\n\n      return d._graphics;\n    }\n\n    function drawEdge(d, x1,y1,x2,y2, width) {\n\n      if (d._graphics) {\n        d._graphics.clear();\n      } else {\n        d._graphics = new PIXI.Graphics();\n      }\n\n      d._graphics.lineStyle(width, 0xbbbbbb);\n      d._graphics.beginFill(0xffffff, 0.5);\n      d._graphics.moveTo(x1,y1);\n      d._graphics.lineTo(x2,y2);\n      d._graphics.endFill();\n\n      return d._graphics;\n    }\n\n    var force = d3.layout.force()\n      .charge(-120)\n      .linkDistance(50)\n      .size([width, height]);\n\n    d3.json(\"lesmiserables.json\", function(error, graph) {\n      if (error) throw error;\n\n      force\n          .nodes(graph.nodes)\n          .links(graph.edges || graph.links)\n          .start();\n\n      force.on(\"tick\", function(d) {\n        \n        force.links().forEach(function(d) {\n          var edge = drawEdge(d, d.source.x,\n            d.source.y,\n            d.target.x,\n            d.target.y,\n            Math.sqrt(d.value) || 1);\n          stage.addChild(edge);\n        });\n\n        force.nodes().forEach(function(d){\n          var circle = drawCircle(d, d.x, d.y, 10, color(d.group));  \n          stage.addChild(circle);\n        });\n      });\n\n      // run the render loop\n      animate();\n\n      function animate() {\n          renderer.render(stage);\n          requestAnimationFrame( animate );\n      }\n    });  </script>\n</body>\n", "description": "D3 Force Layout + Pixi.js Experiment", "created_at": "2016-04-06T17:50:47Z", "updated_at": "2016-04-06T17:50:47Z", "api": ["d3.scale.category20", "d3.layout.force", "d3.json"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "iros_36a18c646f3b3b5b9001ad758bfd8a08"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Quadtree - nearest neighbor</title>\n<style>\n\n.point {\n  fill: #999;\n  stroke: #fff;\n}\n\n.point.scanned {\n  fill: orange;\n  fill-opacity: 1;\n  stroke: brown;\n}\n\n.point.selected {\n  fill: red;\n  fill-opacity: 1;\n}\n\n.node {\n  fill: none;\n  stroke: #ccc;\n  shape-rendering: crispEdges;\n}\n  \n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500;\n\nvar data = d3.range(1000).map(function() {\n  return [Math.random() * width, Math.random() * height];\n});\n\nvar quadtree = d3.geom.quadtree()\n    .extent([[-1, -1], [width + 1, height + 1]])\n    (data);\n\nvar color = d3.scale.linear()\n    .domain([0, 8])  // max depth of quadtree\n    .range([\"#efe\", \"#060\"]);\n    \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .on(\"click\", function (d) {\n        var xy = d3.mouse(d3.selectAll('svg')[0][0]);\n        svg.selectAll(\"#pt\")\n            .attr(\"cx\", xy[0])\n            .attr(\"cy\", xy[1]);\n        clicked();\n    });\n\nvar rect = svg.selectAll(\".node\")\n    .data(nodes(quadtree))\n  .enter().append(\"rect\")\n    .attr(\"class\", \"node\")\n    .attr(\"x\", function(d) { return d.x1; })\n    .attr(\"y\", function(d) { return d.y1; })\n    .attr(\"width\", function(d) { return d.x2 - d.x1; })\n    .attr(\"height\", function(d) { return d.y2 - d.y1; });\n\nvar point = svg.selectAll(\".point\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"class\", \"point\")\n    .attr(\"cx\", function(d) { return d[0]; })\n    .attr(\"cy\", function(d) { return d[1]; })\n    .attr(\"r\", 3);\n\nsvg.append(\"circle\")\n    .attr(\"id\", \"pt\")\n    .attr(\"r\", 3)\n    .attr(\"cx\", width/2)\n    .attr(\"cy\", height/2)\n    .style(\"fill\", \"yellow\");\n\n// PDS Collect a list of nodes to draw rectangles, adding extent and depth data\nfunction nodes(quadtree) {\n  var nodes = [];\n  quadtree.depth = 0; // root\n  quadtree.visit(function(node, x1, y1, x2, y2) {\n    node.x1 = x1;\n    node.y1 = y1;\n    node.x2 = x2;\n    node.y2 = y2;\n    nodes.push(node);\n    for (var i=0; i<4; i++) {\n        if (node.nodes[i]) node.nodes[i].depth = node.depth+1;\n    }\n  });\n  return nodes;\n}\n      \nfunction nearest(x, y, best, node) {\n    var x1 = node.x1, y1 = node.y1, x2 = node.x2, y2 = node.y2;\n    node.visited = true;\n    // exclude node if point is farther away than best distance in either axis\n    if (x < x1 - best.d || x > x2 + best.d || y < y1 - best.d || y > y2 + best.d) {\n        return best;\n    }\n    // test point if there is one, potentially updating best\n    var p = node.point;\n    if (p) {\n      p.scanned = true;\n      var dx = p[0] - x, dy = p[1] - y, d = Math.sqrt(dx*dx + dy*dy);\n      if (d < best.d) {\n        best.d = d;\n        best.p = p;\n      }\n    }\n    // check if kid is on the right or left, and top or bottom\n    // and then recurse on most likely kids first, so we quickly find a \n    // nearby point and then exclude many larger rectangles later\n    var kids = node.nodes;\n    var rl = (2*x > x1 + x2), bt = (2*y > y1 + y2);\n    if (kids[bt*2+rl]) best = nearest(x, y, best, kids[bt*2+rl]);\n    if (kids[bt*2+(1-rl)]) best = nearest(x, y, best, kids[bt*2+(1-rl)]);\n    if (kids[(1-bt)*2+rl]) best = nearest(x, y, best, kids[(1-bt)*2+rl]);\n    if (kids[(1-bt)*2+(1-rl)]) best = nearest(x, y, best, kids[(1-bt)*2+(1-rl)]);\n    \n    return best;\n}\n\nfunction clicked() {\n    pt = d3.selectAll('#pt');\n    var x = +pt.attr('cx'), y = +pt.attr('cy');\n    \n    point.each(function(d) { d.scanned = d.selected = false; });\n    rect.each(function(d) { d.visited = false; });\n    \n    var best = nearest(x, y, {d: height+width, p: null}, quadtree);\n    best.p.selected = true;\n    point.classed(\"scanned\", function(d) { return d.scanned; });\n    point.classed(\"selected\", function(d) { return d.selected; });\n    rect.style('fill', function(d) { return d.visited ? color(d.depth) : 'none'; });\n}\n\nclicked();\n\n</script>\n", "description": "D3JS quadtree nearest neighbor algorithm", "created_at": "2013-09-07T18:50:58Z", "updated_at": "2016-04-09T01:21:35Z", "api": ["d3.range", "d3.geom.quadtree", "d3.scale.linear", "d3.select", "d3.mouse", "d3.selectAll"], "readme": "This example adapts mbostock's\n[quadtree brushing demo](http://bl.ocks.org/mbostock/4343214)\nto find the nearest neighbor (shown red) of a new point (shown yellow).\nChoose a new point to classify by clicking on the diagram.\n(An alternative approach for nearest neighbors of the mouse position is D3's \n[Voronoi polygons](http://bl.ocks.org/mbostock/4060366),\nbut the idea here would extend to rapidly classifying many new points against a \nbase collection of points.)\n\nWe use a data-dependent order of recursion through the quadtree\nin order to quickly find a nearby point and then exclude many \nlarge rectangles without testing actual points.\nGreen rectangles are visited, with saturation indicating depth in the quadtree.\nOnly the orange points from the base collection are tested for Euclidean distance,\nother rectangles are excluded with a simple margin test.\n\nI found it helpful to add extent and depth data to the quadtree nodes, maybe a useful general extension?\n", "uid": "patricksurry_6478178"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.axis text {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n</script>\n", "description": "d3.time.scale nice", "created_at": "2012-08-09T17:24:26Z", "updated_at": "2016-02-09T01:30:45Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "", "uid": "mbostock_3306147"}, {"code": "<html>\n    <meta charset='utf-8' />\n<head>\n</head>\n<body>\n    <svg>\n    <text id='text_node' y=\"20px\" text-anchor=\"start\" opacity=\"1\">\n        <tspan>You</tspan>\n        <tspan dx='.5em'>shall</tspan>\n        <tspan dx='.5em' dy='.9em'>not</tspan>\n        <tspan dx='.4em' dy='.9em'>pass</tspan>\n\n    </text>\n</svg>\n<script src='http://mbostock.github.com/d3/d3.js'></script>\n<script>\n    var node = document.getElementById('text_node');\n    var bbox = node.getBBox();\n    var computed_text_length = node.getComputedTextLength();\n\n    //Does not work\n    text_node = d3.select('#text_node')\n    text_node.append('tspan')\n        .text('Fly')\n        .attr('dx', '.2em')\n    text_node.append('tspan')\n        .text('you')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n    text_node.append('tspan')\n        .text('fools')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n\n    /*\n    d3.select('#text_node').append('tspan')\n        .text('Fly')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n\n    d3.select('#text_node').append('tspan')\n        .text('you')\n        .attr('dx', '.2em')\n        .attr('dy', '.9em')\n    */\n\n    console.log('BBOX width: ', bbox.width);\n    console.log('Computed text length: ', computed_text_length);\n</script>\n</body>\n</html>\n", "description": "d3 tspan append", "created_at": "2012-02-14T18:58:49Z", "updated_at": "2015-09-30T16:48:00Z", "api": ["d3.select"], "readme": "", "uid": "enjalot_1829187"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n \n\n.axis .minor {\n  stroke: red;\n  stroke-width: 1.0;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(24).tickSubdivide(2).tickSize(-30, -30, 0)));\n \n</script>", "description": "D3 time.scale minor lines", "created_at": "2013-01-31T22:48:37Z", "updated_at": "2015-12-12T00:58:55Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "", "uid": "vjpgo_4687407"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <style>\n    body {\n      width: 960px;\n    }\n    path {\n      stroke: white;\n      fill-rule: evenodd;\n    }\n  </style>\n  <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/lodash/2.4.1/lodash.min.js\"></script>  \n</head>\n<body>\n  <div id='viz'></div>\n  <div>\n    <button onclick=\"larger()\">Larger</button><button onclick=\"smaller()\">Smaller</button>\n  </div>\n  <script>\n    var charts = [];\n\n    d3.json(\"flare.json\", function(error, root) {\n    \n      var countAccessorFn = function(d) { return 1; };\n      var sizeAccessorFn = function(d) { return d.size; };\n      \n      // create separate partition variables\n      var countPartition = d3.layout.partition().sort(null).value(countAccessorFn);\n      var sizePartition = d3.layout.partition().sort(null).value(sizeAccessorFn);\n\n      charts.push(makeSunburst(root, countPartition));\n      charts.push(makeSunburst(root, sizePartition));\n\n      // make different charts according to partition\n      function makeSunburst(dataRoot, partition) {\n\n        var width = 480, height = 480;\n        var radius = (Math.min(width, height) / 2) - 60;\n        var color = d3.scale.category20c();\n        var angleScale = d3.scale.linear().range([0, 2 * Math.PI]);\n        var ringRadiusScale = d3.scale.linear().range([0, radius]);\n\n        var svg = d3.select(\"#viz\").append(\"svg\")\n            .attr({width: width, height: height});\n        \n        var container = svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height * .52 + \")\");\n\n        var nodes = partition.nodes(dataRoot);\n\n        var arc = d3.svg.arc()\n          .startAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, angleScale(d.x))); })\n          .endAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, angleScale(d.x + d.dx))); })\n          .innerRadius(function(d) { return Math.max(0, ringRadiusScale(d.y)); })\n          .outerRadius(function(d) { return Math.max(0, ringRadiusScale(d.y + d.dy)); });\n\n        var path = container.selectAll(\"path\")\n            .data(nodes)\n          .enter().append(\"path\")\n            .attr(\"display\", function(d) { return d.depth ? null : \"none\"; }) // hide inner ring\n            .attr(\"d\", arc)\n            .style(\"fill\", function(d) { return color((d.children ? d : d.parent).name); });\n\n        return {\n          addToRadius: function(radiusChange) {\n            radius += radiusChange;\n            ringRadiusScale.range([0, radius]);\n            \n            // update the data before re-rendering each chart\n            nodes = partition.nodes(dataRoot);\n            path.transition().attr('d', arc);\n          }\n        }\n      }\n\n      d3.select(self.frameElement).style(\"height\", \"600px\");\n    });\n\n\n    function larger() {\n      charts.forEach(function(chart) {\n        chart.addToRadius(20);\n      });\n    }\n\n    function smaller() {\n      charts.forEach(function(chart) {\n        chart.addToRadius(-20);\n      });\n    }\n  </script>\n</body>\n</html>", "description": "d3.layout.partition issue response", "created_at": "2014-06-30T23:00:18Z", "updated_at": "2015-08-29T14:03:17Z", "api": ["d3.json", "d3.layout.partition", "d3.scale.category20c", "d3.scale.linear", "d3.select", "d3.svg.arc"], "readme": "", "uid": "jshanley_86e3bc1b231e9772b16d"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Streamgraph</title>\n    <script type=\"text/javascript\" src=\"http://mbostock.github.com/d3/d3.v2.js?2.8.0\"></script>\n    <script type=\"text/javascript\" src=\"stream_layers.js\"></script>\n    <script type=\"text/javascript\" src=\"stream-chart.js\"></script>\n</head>\n<body>\n    <div id=\"chart\">\n        <button class=\"first last\" onclick=\"transition()\">\n            Update\n        </button><p>\n    </div>\n    <script>\n        var n = 20, // number of layers\n            m = 200; // number of samples per layer\n\n        var data1 = stream_layers(n, m);\n        var data0 = stream_layers(n, m);\n        var colors = d3.range(n).map(function() { return d3.interpolateRgb(\"#aad\", \"#556\")(Math.random()); });\n\n        var streamgraph = streamgraphChart()\n            .margin({top: 10, right: 10, bottom: 10, left: 10})\n            .color(function(d, i) { return colors[i]; }) // use same colors for both data sets\n            .transitionDuration(1500)\n            .on(\"mouseover\", fade(.2))\n            .on(\"mouseout\", fade(1));\n\n        d3.select(\"#chart\")\n            .datum(data0)\n            .call(streamgraph);\n\n        function transition() {\n            d3.select(\"#chart\")\n                    .datum(function() {\n                        var d = data1;\n                        data1 = data0;\n                        return data0 = d;\n                    })\n                    .call(streamgraph);\n        }\n\n        function fade(opacity) {\n            return function(g, i) {\n                streamgraph.layers()\n                    .filter(function(h, j) {\n                        return j != i;\n                    })\n                    .transition(1000)\n                      .style(\"opacity\", opacity);\n            }\n        }\n    </script>\n</body>\n</html>", "description": "Interactive Streamgraph D3", "created_at": "2012-03-03T10:38:10Z", "updated_at": "2016-04-03T22:37:10Z", "api": ["d3.range", "d3.interpolateRgb", "d3.select", "d3.layout.stack", "d3.max", "d3.svg.area"], "readme": "", "uid": "GerHobbelt_1965462"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.chart { \n  background: #fff;\n}\n\np {\n  font: 12px helvetica;\n}\n\n\n.axis path, .axis line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2px;\n  shape-rendering: crispEdges;\n}\n\nbutton {\n  position: absolute;\n  right: 50px;\n  top: 10px;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.js\"></script>\n\n\n<div class=\"chart\">\n</div>\n\n<script>\n\n//chart(\"data.csv\", \"orange\");\nchart(\"mental_disability_streamgraph.csv\", \"orange\");\n\nvar datearray = [];\nvar colorrange = [];\n\n\nfunction chart(csvpath, color) {\n\nif (color == \"blue\") {\n  colorrange = [\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"];\n}\nelse if (color == \"pink\") {\n  colorrange = [\"#980043\", \"#DD1C77\", \"#DF65B0\", \"#C994C7\", \"#D4B9DA\", \"#F1EEF6\"];\n}\nelse if (color == \"orange\") {\n  colorrange = [\"#B30000\", \"#E34A33\", \"#FC8D59\", \"#FDBB84\", \"#FDD49E\", \"#FEF0D9\"];\n}\nstrokecolor = colorrange[0];\n\nvar format = d3.time.format(\"%m/%d/%y\");\n\nvar margin = {top: 20, right: 40, bottom: 30, left: 30};\nvar width = document.body.clientWidth - margin.left - margin.right;\nvar height = 400 - margin.top - margin.bottom;\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"remove\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"20\")\n    .style(\"visibility\", \"hidden\")\n    .style(\"top\", \"30px\")\n    .style(\"left\", \"55px\");\n\n//var x = d3.time.scale()\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height-10, 0]);\n\nvar z = d3.scale.ordinal()\n    .range(colorrange);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n   // .ticks(d3.time.weeks);\n\nvar yAxis = d3.svg.axis()\n    .scale(y);\n\nvar yAxisr = d3.svg.axis()\n    .scale(y);\n\nvar stack = d3.layout.stack()\n    .offset(\"silhouette\")\n    .values(function(d) { return d.values; })\n    .x(function(d) { return d.year; })\n    .y(function(d) { return d.count; });\n\nvar nest = d3.nest()\n    .key(function(d) { return d.term; });\n\nvar area = d3.svg.area()\n    .interpolate(\"cardinal\")\n    .x(function(d) { return x(d.year); })\n    .y0(function(d) { return y(d.y0); })\n    .y1(function(d) { return y(d.y0 + d.y); });\n\nvar svg = d3.select(\".chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar graph = d3.csv(csvpath, function(data) {\n  data.forEach(function(d) {\n    //d.date = format.parse(d.date);\n    //d.value = +d.value;\n    d.year = +d.year;\n    d.count = +d.count;\n  });\n\n  var layers = stack(nest.entries(data));\n\n  x.domain(d3.extent(data, function(d) { return d.year; }));\n  y.domain([0, d3.max(data, function(d) { return d.y0 + d.y; })]);\n\n  svg.selectAll(\".layer\")\n      .data(layers)\n    .enter().append(\"path\")\n      .attr(\"class\", \"layer\")\n      .attr(\"d\", function(d) { return area(d.values); })\n      .style(\"fill\", function(d, i) { return z(i); });\n\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + width + \", 0)\")\n      .call(yAxis.orient(\"right\"));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis.orient(\"left\"));\n\n  svg.selectAll(\".layer\")\n    .attr(\"opacity\", 1)\n    .on(\"mouseover\", function(d, i) {\n      svg.selectAll(\".layer\").transition()\n      .duration(250)\n      .attr(\"opacity\", function(d, j) {\n        return j != i ? 0.6 : 1;\n    })})\n/***\n    .on(\"mousemove\", function(d, i) {\n      mousex = d3.mouse(this);\n      mousex = mousex[0];\n      var invertedx = x.invert(mousex);\n      invertedx = invertedx.getMonth() + invertedx.getDate();\n      var selected = (d.values);\n      for (var k = 0; k < selected.length; k++) {\n        datearray[k] = selected[k].date\n        datearray[k] = datearray[k].getMonth() + datearray[k].getDate();\n      }\n\n      mousedate = datearray.indexOf(invertedx);\n      pro = d.values[mousedate].value;\n***/\n      d3.select(this)\n      .classed(\"hover\", true)\n      .attr(\"stroke\", strokecolor)\n      .attr(\"stroke-width\", \"0.5px\"), \n      tooltip.html( \"<p>\" + d.term + \"<br>\" + pro + \"</p>\" ).style(\"visibility\", \"visible\");\n      \n    })\n    .on(\"mouseout\", function(d, i) {\n     svg.selectAll(\".layer\")\n      .transition()\n      .duration(250)\n      .attr(\"opacity\", \"1\");\n      d3.select(this)\n      .classed(\"hover\", false)\n      .attr(\"stroke-width\", \"0px\"), tooltip.html( \"<p>\" + d.term + \"<br>\" + pro + \"</p>\" ).style(\"visibility\", \"hidden\");\n  })\n    \n  var vertical = d3.select(\".chart\")\n        .append(\"div\")\n        .attr(\"class\", \"remove\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"19\")\n        .style(\"width\", \"1px\")\n        .style(\"height\", \"380px\")\n        .style(\"top\", \"10px\")\n        .style(\"bottom\", \"30px\")\n        .style(\"left\", \"0px\")\n        .style(\"background\", \"#fff\");\n\n  d3.select(\".chart\")\n      .on(\"mousemove\", function(){  \n         mousex = d3.mouse(this);\n         mousex = mousex[0] + 5;\n         vertical.style(\"left\", mousex + \"px\" )})\n      .on(\"mouseover\", function(){  \n         mousex = d3.mouse(this);\n         mousex = mousex[0] + 5;\n         vertical.style(\"left\", mousex + \"px\")});\n//});\n}\n</script>", "description": "D3 Interactive Streamgraph", "created_at": "2015-09-11T18:26:16Z", "updated_at": "2015-09-11T18:43:33Z", "api": ["d3.time.format", "d3.select", "d3.time.scale", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.layout.stack", "d3.nest", "d3.svg.area", "d3.csv", "d3.extent", "d3.max", "d3.mouse"], "readme": "", "uid": "dukevis_84ed35ed91f857ec3d79"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Managing Layers of Different Types</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .country {\n    fill-opacity: .25;\n    fill: #4682B4;\n    stroke-opacity: 1;\n    stroke: black;\n    stroke-width: 2px;\n  }\n\n  .country-gray {\n    opacity: .25;\n    fill: lightgray;\n    stroke: lightgray;\n    stroke-width: 1;\n  }\n\n  .country-red {\n    fill-opacity: .25;\n    fill: darkred;\n    stroke: black;\n    stroke-width: 1;\n  }\n  \n  .capital {\n    fill: white;\n    stroke: black;\n    stroke-width: 2px;\n  }\n</style>\n<script>\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    terrainLayer = d3.carto.layer.tile();\n    \n    terrainLayer\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Terrain\");\n\n    countryLayer = d3.carto.layer.topojson();\n    \n    countryLayer.path(\"world.topojson\")\n    .label(\"Countries\")\n    .renderMode(\"canvas\")\n    .specificFeature(\"world\")\n    .cssClass(\"country-gray\")\n    .on(\"load\", showHighGDP)\n    .visibility(false);\n    \n    capitalLayer = d3.carto.layer.csv();\n    capitalLayer\n    .path(\"worldcapitals.csv\")\n    .label(\"Capitals\")\n    .cssClass(\"capital\")\n    .renderMode(\"svg\")\n    .markerSize(3)\n    .x(\"x\")\n    .y(\"y\")\n    .clickableFeatures(true)\n    .on(\"load\", loadXYArray);\n\n    map.addCartoLayer(terrainLayer)\n    map.addCartoLayer(countryLayer)\n    .addCartoLayer(capitalLayer);\n    map.setScale(2);\n    \n    function loadXYArray() {\n    d3.csv(\"worldcapitals.csv\", highPopCapitals);\n    \n    function highPopCapitals(data) {\n      highPop = data.filter(function(d) {return d.population > 3000000});\n      \n      highPopCapitals = d3.carto.layer.xyArray();\n      \n      highPopCapitals\n      .features(highPop)\n      .label(\"High Population Capitals\")\n      .cssClass(\"capital\")\n      .renderMode(\"svg\")\n      .markerSize(10)\n      .x(\"x\")\n      .y(\"y\")\n      .clickableFeatures(true);\n      \n      map.addCartoLayer(highPopCapitals);\n    }\n    }\n    \n    function showHighGDP() {\n      highGDPCountries = countryLayer.features().filter(function(d) {return d.properties.gdp > 1000});\n      \n      highGDPLayer = d3.carto.layer.featureArray();\n      \n      highGDPLayer\n      .features(highGDPCountries)\n    .label(\"High GDP\")\n    .renderMode(\"svg\")\n    .cssClass(\"country-red\")\n    .clickableFeatures(true);\n    \n    map.addCartoLayer(highGDPLayer)\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Managing Layers - d3.carto", "created_at": "2015-09-08T08:43:22Z", "updated_at": "2015-09-08T08:43:22Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.csv", "d3.carto.layer.xyArray", "d3.carto.layer.featureArray"], "readme": "A map example created with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** that loads feature, tile and point layers using the various methods available in d3.carto.", "uid": "renecnielsen_682ab33dbf139214df59"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>D3 Legend</title>\n  <meta charset=\"utf-8\" />\n</head>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"legend.js\"></script>\n<style>\n  body, html {\n    width:100%;\n    height:100%;\n  }\n  #vizcontainer {\n    width:100%;\n    height:100%;\n  }\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n<body onload=\"legendDemo()\">\n\n<div id=\"vizcontainer\">\n<svg></svg>\n</div>\n  <footer>\n<script>\n  function legendDemo() {\n\n  sampleNumerical = [1,2.5,5,10,20];\n  sampleThreshold=d3.scale.threshold().domain(sampleNumerical).range(colorbrewer.Reds[5]);\n  horizontalLegend = d3.svg.legend().units(\"Miles\").cellWidth(80).cellHeight(25).inputScale(sampleThreshold).cellStepping(100);\n\n  d3.select(\"svg\").append(\"g\").attr(\"transform\", \"translate(50,70)\").attr(\"class\", \"legend\").call(horizontalLegend);\n\n  sampleCategoricalData = [\"Something\",\"Something Else\", \"Another\", \"This\", \"That\", \"Etc\"]\n  sampleOrdinal = d3.scale.category20().domain(sampleCategoricalData);\n\n  verticalLegend = d3.svg.legend().labelFormat(\"none\").cellPadding(5).orientation(\"vertical\").units(\"Things in a List\").cellWidth(25).cellHeight(18).inputScale(sampleOrdinal).cellStepping(10);\n\n  d3.select(\"svg\").append(\"g\").attr(\"transform\", \"translate(50,140)\").attr(\"class\", \"legend\").call(verticalLegend);\n\n  }\n</script>\n  </footer>\n</body>\n</html>", "description": "d3.svg.legend example", "created_at": "2014-08-19T14:34:05Z", "updated_at": "2015-08-29T14:05:27Z", "api": ["d3.scale.threshold", "d3.svg.legend", "d3.select", "d3.scale.category20", "d3.format"], "readme": "[d3.svg.legend](https://github.com/emeeks/d3-svg-legend) provides for a simple legend that can be displayed horizontally or vertically and accepts a few different [d3 scale](https://github.com/mbostock/d3/wiki/Scales) types.", "uid": "emeeks_8855733967174fe4b1b4"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody { font: 12px sans-serif; }\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: grey;\n  stroke-width: 1;\n  shape-rendering: crispEdges;\n}\n\n.dot { stroke: none; }\n\n.grid .tick { stroke: lightgrey; opacity: 0.7; }\n.grid path { stroke-width: 0;}\n\npath { \n    stroke: #1f78b4;\n    stroke-width: 1.5;\n    fill: none;\n}\n\ntext.shadow {\n    stroke: white;\n    stroke-width: 2.5px;\n    opacity: 0.9;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\n// functions to parse the date / time formats\nparseDate = d3.time.format(\"%Y-%m-%d\").parse;\nparseTime = d3.time.format(\"%H:%M:%S\").parse;\nformatDate = d3.time.format(\"%d-%b\"),\nformatTime = d3.time.format(\"%H:%M\"),\nbisectDate = d3.bisector(function(d) { return d.date; }).left; \n\n// Load the raw data\nd3.json(\"downloads.json\", function(error, events) {\n\n    // parse and format all the event data\n    events.forEach(function(d) {\n        d.dtg = d.dtg.slice(0,-4)+'0:00'; // get the 10 minute block\n        dtgSplit = d.dtg.split(\" \");      // split on the space\n        d.date = dtgSplit[0];             // get the date seperatly\n        d.time = dtgSplit[1];             // format the time\n        d.number_downloaded = 1;          // Number of downloads\n    });\n\n    // get the scatterplot data and nest the data by date/time\n    var data = d3.nest()\n        .key(function(d) { return d.dtg;})\n        .rollup(function(d) {\n            return d3.sum(d,function(g) {return g.number_downloaded; });\n            })\n        .entries(events);\n\n    // format the date/time data\n    data.forEach(function(d) {\n        d.dtg = d.key;                   // get the 10 minute block\n        dtgSplit = d.dtg.split(\" \");     // split on the space\n        d.date = parseDate(dtgSplit[0]); // get the date seperatly\n        d.time = parseTime(dtgSplit[1]); // format the time\n        d.number_downloaded = d.values;  // Number of downloads\n    });\n\n    // nest the data by date for the daily graph\n    var dataDate = d3.nest()\n        .key(function(d) { return d.date;})\n        .rollup(function(d) {\n            return d3.sum(d,function(g) {return g.number_downloaded; });\n            })\n        .entries(events);\n\n    // format the date data\n    dataDate.forEach(function(d) {\n        d.date = parseDate(d.key); // format the date\n        d.close = d.values;        // Number of downloads\n    });\n\n    // nest the data by 10 minute intervals for the time graph\n    var dataTime = d3.nest()\n        .key(function(d) { return d.time;})\n        .sortKeys(d3.ascending)\n        .rollup(function(d) {\n            return d3.sum(d,function(g) {return g.number_downloaded; });\n            })\n        .entries(events);\n\n    // format the time data\n    dataTime.forEach(function(d) {\n        d.time = d.key;             // get the 10 minute block\n        d.time = parseTime(d.time); // get the date seperatly\n        d.close = d.values;         // Number of downloads\n    });\n\n    // Get number of days in date range to calculate scatterplotWidth\n    var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds\n    var dateStart = d3.min(data, function(d) { return d.date; });\n    var dateFinish = d3.max(data, function(d) { return d.date; });\n    var numberDays = Math.round(Math.abs((dateStart.getTime() -\n                               dateFinish.getTime())/(oneDay)));\n\n    var margin = {top: 20, right: 20, bottom: 20, left: 50},\n        scatterplotHeight = 520,\n        scatterplotWidth = numberDays * 1.5,\n        dateGraphHeight = 220,\n        timeGraphWidth = 220;\n\n    // Set the dimensions of the canvas / graph\n    var height = scatterplotHeight + dateGraphHeight,\n        width = scatterplotWidth + timeGraphWidth;\n\n    // ************* draw the scatterplot ****************\n\n    var formatDay_Time = d3.time.format(\"%H:%M\");     // tooltip time\n    var formatWeek_Year = d3.time.format(\"%d-%m-%Y\"); // tooltip date\n\n    var x = d3.time.scale().range([0, scatterplotWidth]);\n    var y = d3.time.scale().range([0, scatterplotHeight]);\n\n    var xAxis = d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\")\n        .ticks(7);\n\n    var yAxis = d3.svg.axis()\n        .scale(y)\n        .orient(\"right\")\n        .ticks(12,0,0)\n        .tickFormat(d3.time.format(\"%H:%M\"));\n\n    var svg = d3.select(\"body\")\n        .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\"\n                                            + margin.top + \")\");\n\n    // State the functions for the grid\n    function make_x_axis() {\n        return d3.svg.axis()\n          .scale(x)\n          .orient(\"bottom\")\n          .ticks(12)\n    }\n\n    // State the functions for the grid\n    function make_y_axis() {\n        return d3.svg.axis()\n          .scale(y)\n          .orient(\"right\")\n          .ticks(8)\n    }\n            \n    // Set the domains\n    y.domain([new Date(1899, 12, 02, 0, 0, 0), \n              new Date(1899, 12, 01, 0, 0, 1)]);\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n\n    // tickSize: Get or set the size of major, minor and end ticks\n    svg.append(\"g\").classed(\"grid x_grid\", true)\n        .attr(\"transform\", \"translate(0,\" \n            + (scatterplotHeight + dateGraphHeight) + \")\")\n        .style(\"stroke-dasharray\", (\"3, 3, 3\"))\n        .call(make_x_axis()\n            .tickSize(-scatterplotHeight - dateGraphHeight, 0, 0)\n            .tickFormat(\"\"))\n\n    // tickSize: Get or set the size of major, minor and end ticks\n    svg.append(\"g\").classed(\"grid y_grid\", true)\n        .attr(\"transform\", \"translate(0,0)\")\n        .style(\"stroke-dasharray\", (\"3, 3, 3\"))\n        .call(make_y_axis()\n            .tickSize(+scatterplotWidth+timeGraphWidth, 0, 0)\n            .tickFormat(\"\"))\n\n    // Draw the Axes and the tick labels\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + scatterplotHeight + \")\")\n        .call(xAxis)\n      .selectAll(\"text\")\n        .style(\"text-anchor\", \"middle\");\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(\"  + scatterplotWidth +  \",0)\")\n        .call(yAxis)\n      .selectAll(\"text\");\n\n    // draw the plotted circles\n    svg.selectAll(\".dot\")\n        .data(data)\n      .enter().append(\"circle\")\n        .attr(\"class\", \"dot\")\n        .attr(\"r\", function(d) { return d.number_downloaded*1.5; })\n        .style(\"opacity\", 0.3)\n        .style(\"fill\", \"#e31a1c\" )\n        .attr(\"cx\", function(d) { return x(d.date); })\n        .attr(\"cy\", function(d) { return y(d.time); })\n            ;    \n\n    // ************* draw the date graph *****************\n    // Set the ranges\n    var xDate = d3.time.scale().range([0, scatterplotWidth]);\n    var yDate = d3.scale.linear().range([dateGraphHeight, 0]);\n\n    var yAxisDate = d3.svg.axis().scale(yDate)\n        .orient(\"right\").ticks(5);\n\n    // Define the line\n    var valueline = d3.svg.line()\n        .interpolate(\"basis\")\n        .x(function(d) { return xDate(d.date); })\n        .y(function(d) { return yDate(d.close); } );  \n\n    // Scale the range of the data\n    xDate.domain(d3.extent(dataDate, function(d) { return d.date; }));\n    yDate.domain([0,d3.max(dataDate, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"transform\", \"translate(0,\" + scatterplotHeight + \")\")\n        .attr(\"d\", valueline(dataDate));\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(\" \n            + scatterplotWidth +  \",\" + scatterplotHeight + \")\")\n        .call(yAxisDate);\n\n    // ************* draw the time graph **************\n    // Set the ranges\n    var yTime = d3.time.scale().range([0, scatterplotHeight]);\n    var xTime = d3.scale.linear().range([0, timeGraphWidth]);\n\n    // Define the axes\n    var xAxisTime = d3.svg.axis().scale(xTime)\n        .orient(\"bottom\").ticks(5);\n\n    // Define the line\n    var valuelineTime = d3.svg.line()\n        .x(function(d) { return xTime(d.close); })\n        .y(function(d) { return yTime(d.time); });\n        \n    // Scale the range of the data\n    yTime.domain([new Date(1899, 12, 02, 0, 0, 0), \n                  new Date(1899, 12, 01, 0, 0, 1)]);\n    xTime.domain([1e-6, d3.max(dataTime, \n        function(d) { return d.close; }\n        )]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"transform\", \"translate(\" + scatterplotWidth + \",0)\")\n        .attr(\"d\", valuelineTime(dataTime));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(\" \n            + scatterplotWidth +  \",\" + scatterplotHeight + \")\")\n        .call(xAxisTime);\n\n    // *********** place the mouse movement information **************\n    var focus = svg.append(\"g\") \n        .style(\"display\", \"none\");\n\n    // append the x line\n    focus.append(\"line\")\n        .attr(\"class\", \"x\")\n        .style(\"stroke\", \"#33a02c\")\n        .style(\"stroke-dasharray\", \"3,3\")\n        .style(\"opacity\", 1)\n        .style(\"shape-rendering\", \"crispEdges\");\n\n    // append the y line\n    focus.append(\"line\")\n        .attr(\"class\", \"y\")\n        .style(\"stroke\", \"#33a02c\")\n        .style(\"stroke-dasharray\", \"3,3\")\n        .style(\"opacity\", 1)\n        .style(\"shape-rendering\", \"crispEdges\");\n\n    // place the value at the intersection\n    focus.append(\"text\")\n        .attr(\"class\", \"y1\")\n        .style(\"stroke\", \"white\")\n        .style(\"stroke-width\", \"3.5px\")\n        .style(\"opacity\", 0.8)\n        .attr(\"dx\", 8)\n        .attr(\"dy\", \"-.3em\");\n    focus.append(\"text\")\n        .attr(\"class\", \"y2\")\n        .attr(\"dx\", 8)\n        .attr(\"dy\", \"-.3em\");\n\n    // place the date at the intersection\n    focus.append(\"text\")\n        .attr(\"class\", \"y3\")\n        .style(\"stroke\", \"white\")\n        .style(\"stroke-width\", \"3.5px\")\n        .style(\"opacity\", 0.8)\n        .attr(\"dx\", 8)\n        .attr(\"dy\", \"1em\");\n    focus.append(\"text\")\n        .attr(\"class\", \"y4\")\n        .attr(\"dx\", 8)\n        .attr(\"dy\", \"1em\");\n\n    // place the Daily Downloads dynamic text\n    focus.append(\"text\")\n        .attr(\"class\", \"y5\")\n        .style(\"stroke\", \"white\")\n        .style(\"stroke-width\", \"3.5px\")\n        .style(\"opacity\", 0.8)\n        .attr(\"dy\", \"1em\");\n    focus.append(\"text\")\n        .attr(\"class\", \"y6\")\n        .attr(\"dy\", \"1em\");\n\n    // place the time Downloads dynamic text\n    focus.append(\"text\")\n        .attr(\"class\", \"y7\")\n        .style(\"stroke\", \"white\")\n        .style(\"stroke-width\", \"3.5px\")\n        .style(\"opacity\", 0.8)\n        .attr(\"dy\", \".35em\");\n    focus.append(\"text\")\n        .attr(\"class\", \"y8\")\n        .attr(\"dy\", \".35em\");\n\n    // append the rectangle to capture mouse\n    svg.append(\"rect\")\n        .attr(\"width\", scatterplotWidth)\n        .attr(\"height\", scatterplotHeight)\n        .style(\"fill\", \"none\")\n        .style(\"pointer-events\", \"all\")\n        .on(\"mouseover\", function() { focus.style(\"display\", null); })\n        .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n        .on(\"mousemove\", mousemove);\n\n    // The conversion ratio to change x position of cursor to\n    // the index of the date array\n    var convertDate =  dataDate.length/scatterplotWidth;\n    var convertTime =  dataTime.length/scatterplotHeight;\n\n    // interactive mouse function\n    function mousemove() {\n        var xpos = d3.mouse(this)[0],\n            x0 = x.invert(xpos),\n            y0 = d3.mouse(this)[1],\n            y1 = y.invert(y0),\n            date1 = d3.mouse(this)[0];\n\n        // Place the intersection date text\n        focus.select(\"text.y1\")\n            .attr(\"transform\",\n                  \"translate(\" + (date1 - 50) + \",\" + (y0+20) + \")\")\n            .text(formatDate(x0));\n        focus.select(\"text.y2\")\n            .attr(\"transform\",\n                  \"translate(\" + (date1 - 50) + \",\" + (y0+20) + \")\")\n            .text(formatDate(x0));\n\n        // Place the intersection time text\n        focus.select(\"text.y3\")\n            .attr(\"transform\",\n                  \"translate(\" + (date1) + \",\" + (y0-15) + \")\")\n            .text(formatTime(y1).substring(0,4)+'0');\n        focus.select(\"text.y4\")\n            .attr(\"transform\",\n                  \"translate(\" + (date1) + \",\" + (y0-15) + \")\")\n            .text(formatTime(y1).substring(0,4)+'0');\n\n        // Place the dynamic daily downloads text\n        focus.select(\"text.y5\")\n            .attr(\"transform\",\n                  \"translate(\"\n                      + (date1) + \",\"\n                      + (scatterplotHeight+dateGraphHeight) + \")\")\n            .attr(\"text-anchor\", \"middle\")\n            .text(dataDate[parseInt(xpos*convertDate)].close);\n        focus.select(\"text.y6\")\n            .attr(\"transform\",\n                  \"translate(\"\n                      + (date1) + \",\"\n                      + (scatterplotHeight+dateGraphHeight) + \")\")\n            .attr(\"text-anchor\", \"middle\")\n            .text(dataDate[parseInt(xpos*convertDate)].close);\n\n        // Place the dynamic time downloads text\n        focus.select(\"text.y7\")\n            .attr(\"transform\",\n                  \"translate(\"\n                      + (scatterplotWidth+timeGraphWidth) + \",\"\n                      + (y0) + \")\")\n            .attr(\"text-anchor\", \"start\")\n            .text(dataTime[144-parseInt(y0*convertTime)].close);\n        focus.select(\"text.y8\")\n            .attr(\"transform\",\n                  \"translate(\"\n                      + (scatterplotWidth+timeGraphWidth) + \",\"\n                      + (y0) + \")\")\n            .attr(\"text-anchor\", \"start\")\n            .text(dataTime[144-parseInt(y0*convertTime)].close);\n\n\n        focus.select(\".x\")\n            .attr(\"transform\",\n                  \"translate(\" + date1 + \",\" + (0) + \")\")\n            .attr(\"y2\", height );\n\n        focus.select(\".y\")\n            .attr(\"transform\",\n                  \"translate(0,\" + y0 + \")\")\n            .attr(\"x2\", width );\n    }\n\n    // axis labels\n    svg.append(\"text\")\n        .attr(\"transform\", \"translate(\"\n            + scatterplotWidth +  \",\"\n            + scatterplotHeight + \"), rotate(-90)\")\n        .attr(\"y\", 25)\n        .attr(\"x\",-dateGraphHeight )\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"start\")\n        .attr(\"class\", \"shadow\")\n        .text(\"Daily Downloads\");\n        \n    svg.append(\"text\")\n        .attr(\"transform\", \"translate(\"\n            + scatterplotWidth +  \",\"\n            + scatterplotHeight + \"), rotate(-90)\")\n        .attr(\"y\", 25)\n        .attr(\"x\",-dateGraphHeight )\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"start\")\n        .text(\"Daily Downloads\");\n\n    svg.append(\"text\")\n        .attr(\"transform\", \"translate(\"\n            + scatterplotWidth +  \",\"\n            + scatterplotHeight + \")\")\n        .attr(\"y\", 20)\n        .attr(\"x\",timeGraphWidth )\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"class\", \"shadow\")\n        .text(\"Downloads in 10 Minute Blocks\");\n        \n    svg.append(\"text\")\n        .attr(\"transform\", \"translate(\"\n            + scatterplotWidth +  \",\"\n            + scatterplotHeight + \")\")\n        .attr(\"y\", 20)\n        .attr(\"x\",timeGraphWidth )\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"end\")\n        .text(\"Downloads in 10 Minute Blocks\");\n\n});\n\n</script>\n\n</body>\n", "description": "Leanpub Book Download Scatterplot", "created_at": "2015-09-04T09:07:19Z", "updated_at": "2015-09-04T09:07:19Z", "api": ["d3.time.format", "d3.bisector", "d3.json", "d3.nest", "d3.sum", "d3.min", "d3.max", "d3.time.scale", "d3.svg.axis", "d3.select", "d3.extent", "d3.scale.linear", "d3.svg.line", "d3.mouse"], "readme": "The graph above shows each instance that the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks) was download from January 2013 to March 2015. It is best viewed in full screen by [opening in a new window](http://bl.ocks.org/d3noob/raw/a0cbcddc6bf0eb9569fe/).\n\nThe main scatterplot has the day that the download occured on the X axis and the time (UTC) that the download occured on the Y axis. The time of the download is grouped into 10 minute blocks and where more than one download occured, the radius of the corresponding point is increased.\n\nThe line graph at the bottom shows the variation of numbers of downloads by day and the line graph on the right shows the variation of downloads by time of day (in 10 minute blocks).\n\nMoving the mouse over the scatterplot will show the time and date of the point and the data is extrapolated onto the line graphs to show the corresponding number of downloads for the day and time.\n\nThere is an explanation of the code available in [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks) or in the blog post [here](http://www.d3noob.org/2015/04/exploring-event-data-by-combination.html).", "uid": "ariaz_c0593a62ab32d99da603"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.land {\n  fill: #222;\n}\n\n.county-boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.state-boundary {\n  fill: none;\n  stroke: #fff;\n}\n\n.border {\n  stroke: #000;\n  fill: none;\n\n}\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-width: .5px;\n  stroke-opacity: .5;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"https://cdn.rawgit.com/rveciana/d3-composite-projections/master/src/conicConformalEurope-proj.js\"></script>\n<script>\n\nvar width = 600,\n    height = 500;\n\nvar projection = d3.geo.conicConformalEurope();\nvar graticule = d3.geo.graticule();\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n\n    svg.append(\"path\")\n        .datum(graticule)\n        .attr(\"class\", \"graticule\")\n        .attr(\"d\", path);\nd3.json(\"https://cdn.rawgit.com/rveciana/5919944/raw//nuts0.json\", function(error, europe) {\n  var land = topojson.feature(europe, europe.objects.nuts0);\n\n\n\n    svg.selectAll(\"path\")\n      .data(land.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .style(\"stroke\",\"#000\")\n      .style(\"stroke-width\",\".5px\")\n      .style(\"fill\",\"#aca\")\n      .on(\"mouseover\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"red\");\n        })\n      .on(\"mouseout\", function(d,i) {\n        d3.select(this)\n          .transition()\n          .style(\"fill\", \"#aca\");\n        });\n\n        svg\n          .append(\"path\")\n            .style(\"fill\",\"none\")\n            .style(\"stroke\",\"#000\")\n            .attr(\"d\", projection.getCompositionBorders());\n\n\n\n});\n\n\n</script>\n", "description": "d3-composite-projections conicConformalEurope", "created_at": "2016-01-17T13:06:37Z", "updated_at": "2016-01-17T13:07:31Z", "api": ["d3.geo.conicConformalEurope", "d3.geo.graticule", "d3.geo.path", "d3.select", "d3.json"], "readme": "This example shows how to use the conicConformalEurope projection from [d3-composite-projections](http://rveciana.github.io/d3-composite-projections/).", "uid": "espinielli_715229536cdba1fdac9a"}, {"code": "<!DOCTYPE html>\n<title></title>\n<meta charset=\"utf-8\">\n<script src=\"http://d3js.org/d3.v2.js\"></script>\n<script src=\"http://underscorejs.org/underscore.js\"></script>\n<script src=\"burrow.js\"></script>\n\n<style>\n\n.node circle {\n  fill: steelblue;\n  stroke-width: 1.5px;\n  stroke: #fff;\n}\n\n.node {\n  font: 10px sans-serif;\n}\n\n.link {\n  fill: none;\n  stroke: #ccc;\n  stroke-opacity: 0.6;\n  stroke-width: 1.5px;\n}\n\n</style>\n<body>\n</body>\n<script>\n/* Reingold-Tilford Tree */\n\nvar diameter = 960;\nvar padding = 210;\n\nvar tree = d3.layout.tree()\n    .size([360, diameter / 2 - padding])\n    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n\nvar diagonal = d3.svg.diagonal.radial()\n    .projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + diameter / 2 + \",\" + diameter / 2 + \")\");\n\nd3.selection.prototype.moveToFront = function() {\n  return this.each(function() {\n    this.parentNode.appendChild(this);\n  });\n};\n\nd3.tsv(\"d3.v1.tsv\", function(files) {\n  var nested1 = processData(files);\n  svg.append(\"text\")\n    .attr(\"id\", \"version\")\n    .text(\"v1.29.7\")\n    .attr(\"x\", -diameter*0.4)\n    .attr(\"y\", -diameter*0.4)\n    .style(\"font-size\", \"32px\");\n  treemap(nested1);\n  d3.tsv(\"d3.v2.tsv\", function(files) {\n    var nested2 = processData(files);\n    function update2() {\n      svg.select(\"#version\")\n        .transition().duration(500)\n        .style(\"opacity\", 0)\n        .transition().delay(500)\n        .text(\"2.10.3\")\n        .transition()\n        .style(\"opacity\", 1)\n      treemap(nested2);\n    };\n    setTimeout(update2, 5200);\n    d3.tsv(\"d3.v3.tsv\", function(files2) {\n      var nested3 = processData(files2);\n      function update3() {\n        svg.select(\"#version\")\n        .transition().duration(500)\n        .style(\"opacity\", 0)\n        .transition().delay(500)\n        .text(\"3.0.0pre\")\n        .transition()\n        .style(\"opacity\", 1)\n        treemap(nested3);\n      };\n      setTimeout(update3, 11800);\n    });\n  });\n});\n\nfunction processData(files) {\n  files.forEach(function(d) {\n    d.size = parseInt(d.size);\n    d.keys = d.file.replace(\".js\",\"\").split(\"/\");\n    d.keys.forEach(function(sect,i) {\n      d[\"section\" + i] = sect;\n    });\n  });\n\n  return burrow(files);\n}\n\nfunction treemap(root) {\n  var nodes = tree.nodes(root),\n      links = tree.links(nodes);\n\n  var link = svg.selectAll(\".link\")\n    .data(links, function(d) { return d.source.name + \"-\" + d.target.name;})\n\n  link\n    .transition()\n      .delay(400)\n      .duration(600)\n      .attr(\"d\", diagonal);\n\n  link\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal)\n      .style(\"opacity\", 0)\n      .transition()\n      .duration(300)\n      .delay(function(d,i) {\n        return 24*i;\n      })\n      .style(\"opacity\", 1);\n\n  link.exit()\n    .transition()\n      .duration(400)\n      .style(\"opacity\", 0)\n      .delay(400)\n      .remove();\n\n  var node = svg.selectAll(\".node\")\n      .moveToFront()\n      .data(nodes, function(d) { return d.name + \"-\" + (d.parent ? d.parent.name : \"root\");})\n\n   node.exit()\n    .transition()\n      .duration(400)\n      .style(\"opacity\", 0)\n      .delay(400)\n      .remove();\n\n  node\n    .transition()\n      .delay(400)\n      .duration(800)\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n\n  node.selectAll(\"text\")\n    .transition()\n      .duration(800)\n      .attr(\"font-weight\", null)\n      .attr(\"fill\", \"#555\")\n      .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n      .text(function(d) { return d.name; });\n\n  var g = node\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n\n  g.append(\"circle\")\n    .attr(\"r\", 3)\n    .style(\"opacity\", 0)\n    .transition()\n      .duration(300)\n      .delay(function(d,i) {\n        return 24*i;\n      })\n      .style(\"opacity\", 1);\n\n  g.append(\"text\")\n    .attr(\"dy\", \".31em\")\n    .attr(\"font-weight\", \"bold\")\n    .attr(\"fill\", \"black\")\n    .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n    .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n    .text(function(d) { return d.name; })\n    .style(\"opacity\", 0)\n    .transition()\n      .duration(300)\n      .delay(function(d,i) {\n        return 24*i;\n      })\n      .style(\"opacity\", 1);\n\n};\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n</script>\n", "description": "d3 src tree transitions", "created_at": "2012-11-17T03:09:37Z", "updated_at": "2015-10-12T21:58:14Z", "api": ["d3.layout.tree", "d3.svg.diagonal.radial", "d3.select", "d3.tsv"], "readme": "A comparison of the src directory for three versions of d3. Also see [d3 src tree](http://bl.ocks.org/4076122).", "uid": "syntagmatic_4092944"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>", "description": "Simple d3.js Graph", "created_at": "2016-03-22T11:08:17Z", "updated_at": "2016-03-22T11:08:17Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a simple d3.js graph used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at providing some exposure to some d3.js functions and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "yesoreyeram_c1b07998add14ffc9d03"}, {"code": "<!DOCTYPE html>\n<html>\n<meta charset=\"utf-8\">\n<title>Sankey Diagram</title>\n<style>\n  #chart {\n    height: 500px;\n  }\n\n  .node rect {\n    cursor: move;\n    fill-opacity: .9;\n    shape-rendering: crispEdges;\n  }\n\n  .node text {\n    pointer-events: none;\n    text-shadow: 0 1px 0 #fff;\n  }\n\n  .link {\n    fill: none;\n    stroke: #000;\n    stroke-opacity: .2;\n  }\n\n  .link:hover {\n    stroke-opacity: .5;\n  }\n</style>\n\n<body>\n  <div id=\"chart\"></div>\n  <script src=\"d3.min.js\"></script>\n  <script>\n    var margin = {\n        top: 1,\n        right: 1,\n        bottom: 6,\n        left: 1\n      },\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n    var formatNumber = d3.format(\",.0f\"),\n      format = function(d) {\n        return formatNumber(d) + \" TWh\";\n      },\n      color = d3.scale.category20();\n\n    var svg = d3.select(\"#chart\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var sankey = d3.sankey()\n      .nodeWidth(15)\n      .nodePadding(10)\n      .size([width, height]);\n\n    var path = sankey.link();\n\n    d3.json(\"energy.json\", function(energy) {\n\n      sankey\n        .nodes(energy.nodes)\n        .links(energy.links)\n        .layout(32);\n\n      var link = svg.append(\"g\").selectAll(\".link\")\n        .data(energy.links)\n        .enter().append(\"path\")\n        .attr(\"class\", \"link\")\n        .attr(\"d\", path)\n        .style(\"stroke-width\", function(d) {\n          return Math.max(1, d.dy);\n        })\n        .sort(function(a, b) {\n          return b.dy - a.dy;\n        });\n\n      link.append(\"title\")\n        .text(function(d) {\n          return d.source.name + \" \u2192 \" + d.target.name + \"\\n\" + format(d.value);\n        });\n\n      var node = svg.append(\"g\").selectAll(\".node\")\n        .data(energy.nodes)\n        .enter().append(\"g\")\n        .attr(\"class\", \"node\")\n        .attr(\"transform\", function(d) {\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\n        });\n\n        // Not currently implemented in v4.0\n\n        // .call(d3.behavior.drag()\n        //   .origin(function(d) {\n        //     return d;\n        //   })\n        //   .on(\"dragstart\", function() {\n        //     this.parentNode.appendChild(this);\n        //   })\n        //   .on(\"drag\", dragmove));\n\n      node.append(\"rect\")\n        .attr(\"height\", function(d) {\n          return d.dy;\n        })\n        .attr(\"width\", sankey.nodeWidth())\n        .style(\"fill\", function(d) {\n          return d.color = color(d.name.replace(/ .*/, \"\"));\n        })\n        .style(\"stroke\", function(d) {\n          return d3.rgb(d.color).darker(2);\n        })\n        .append(\"title\")\n        .text(function(d) {\n          return d.name + \"\\n\" + format(d.value);\n        });\n\n      node.append(\"text\")\n        .attr(\"x\", -6)\n        .attr(\"y\", function(d) {\n          return d.dy / 2;\n        })\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"transform\", null)\n        .text(function(d) {\n          return d.name;\n        })\n        .filter(function(d) {\n          return d.x < width / 2;\n        })\n        .attr(\"x\", 6 + sankey.nodeWidth())\n        .attr(\"text-anchor\", \"start\");\n\n      function dragmove(d) {\n        d3.select(this).attr(\"transform\", \"translate(\" + d.x + \",\" + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + \")\");\n        sankey.relayout();\n        link.attr(\"d\", path);\n      }\n    });\n  </script>\n", "description": "d3-sankey demo", "created_at": "2015-12-03T16:43:56Z", "updated_at": "2015-12-05T19:09:27Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.json", "d3.behavior.drag", "d3.rgb"], "readme": "Created using the [d3-sankey](https://github.com/d3/d3-sankey) plugin for D3 4.0.\n\nRun `npm install` and then `npm run build` to create `d3.min.js`.  \n\nStolen from Mike Bostock's [original here](http://bost.ocks.org/mike/sankey/).\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "xaranke_9ada4c74a87b57ae7308"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  margin: 0;\n  background:#031536;\n}\n\n.map {\n  position: absolute;\n  overflow: hidden;\n  top:0px;\n  bottom:0px;\n}\n\n.layer {\n  position: absolute;\n}\n\n.tile {\n  position: absolute;\n  width: 256px;\n  height: 256px;\n}\n\n.tile path {\n  fill: none;\n  stroke: #000;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n}\n\n.tile .major_road { stroke: url(#grad2); stroke-width:1.8;}\n.tile .minor_road { stroke: url(#grad3); stroke-width:1.2;}\n.tile .highway { stroke: url(#grad1); stroke-width: 3px; stroke-linecap: round; stroke-linejoin: round; }\n.tile .rail { stroke: url(#grad4); stroke-dasharray:4; stroke-dashoffset:4; stroke-width:1; }\n.tile .path { stroke: url(#grad5); stroke-dasharray:2; stroke-dashoffset:4; stroke-width:0.8; }\n\n.info {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  color:#fff;\n}\n\n</style>\n</head>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/d3.geo.tile.v0.min.js\"></script>\n  <svg>\n    <defs>\n      <linearGradient id='grad1'>\n        <stop offset='0%' stop-color='#E8DDC9'/>\n        <stop offset='100%' stop-color='#E8DDC9' stop-opacity='0' />\n      </linearGradient>\n      <linearGradient id='grad2'>\n        <stop offset='0%' stop-color='#CCB479'/>\n        <stop offset='100%' stop-color='#CCB479' stop-opacity='0' />\n      </linearGradient>\n      <linearGradient id='grad3'>\n        <stop offset='0%' stop-color='#3C80A9'/>\n        <stop offset='100%' stop-color='#3C80A9' stop-opacity='0' />\n      </linearGradient>\n      <linearGradient id='grad4'>\n        <stop offset='0%' stop-color='#7de'/>\n        <stop offset='100%' stop-color='#7de' stop-opacity='0' />\n      </linearGradient>\n      <linearGradient id='grad5'>\n        <stop offset='0%' stop-color='#74DC9B'/>\n        <stop offset='100%' stop-color='#74DC9B' stop-opacity='0' />\n      </linearGradient>\n    </defs>\n  </svg>\n<script>\n\nvar width = Math.max(960, window.innerWidth),\n    height = Math.max(500, window.innerHeight),\n    prefix = prefixMatch([\"webkit\", \"ms\", \"Moz\", \"O\"]);\n\nvar tile = d3.geo.tile()\n    .size([width, height]);\n\nvar projection = d3.geo.mercator()\n    .scale((1 << 23) / 2 / Math.PI)\n    .translate([-width / 2, -height / 2]); // just temporary\n\nvar tileProjection = d3.geo.mercator();\n\nvar tilePath = d3.geo.path()\n    .projection(tileProjection);\n\nvar zoom = d3.behavior.zoom()\n    .scale(projection.scale() * 2 * Math.PI)\n    .scaleExtent([1 << 20, 1 << 23])\n    .translate(projection([-77.045446166, 38.89370499]).map(function(x) { return -x; }))\n    .on(\"zoom\", zoomed);\n\nvar map = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"map\")\n    .style(\"width\", width + \"px\")\n    .style(\"height\", height + \"px\")\n    .call(zoom)\n    .on(\"mousemove\", mousemoved);\n\nvar layer = map.append(\"div\")\n    .attr(\"class\", \"layer\");\n\nvar info = map.append(\"div\")\n    .attr(\"class\", \"info\");\n\nzoomed();\n\nfunction zoomed() {\n  var tiles = tile\n      .scale(zoom.scale())\n      .translate(zoom.translate())\n      ();\n\n  projection\n      .scale(zoom.scale() / 2 / Math.PI)\n      .translate(zoom.translate());\n\n  var image = layer\n      .style(prefix + \"transform\", matrix3d(tiles.scale, tiles.translate))\n    .selectAll(\".tile\")\n      .data(tiles, function(d) { return d; });\n\n  image.exit()\n      .each(function(d) { this._xhr.abort(); })\n      .remove();\n\n  image.enter().append(\"svg\")\n      .attr(\"class\", \"tile\")\n      .style(\"left\", function(d) { return d[0] * 256 + \"px\"; })\n      .style(\"top\", function(d) { return d[1] * 256 + \"px\"; })\n      .each(function(d) {\n        var svg = d3.select(this);\n        this._xhr = d3.json(\"http://\" + [\"a\", \"b\", \"c\"][(d[0] * 31 + d[1]) % 3] + \".tile.openstreetmap.us/vectiles-highroad/\" + d[2] + \"/\" + d[0] + \"/\" + d[1] + \".json\", function(error, json) {\n          var k = Math.pow(2, d[2]) * 256; // size of the world in pixels\n\n          tilePath.projection()\n              .translate([k / 2 - d[0] * 256, k / 2 - d[1] * 256]) // [0\u00b0,0\u00b0] in pixels\n              .scale(k / 2 / Math.PI);\n\n          svg.selectAll(\"path\")\n              .data(json.features.sort(function(a, b) { return a.properties.sort_key - b.properties.sort_key; }))\n              .enter().append(\"path\")\n              .attr(\"class\", function(d) { return d.properties.kind; })\n              .attr(\"d\", tilePath);\n        });\n      });\n}\n\nfunction mousemoved() {\n  info.text(formatLocation(projection.invert(d3.mouse(this)), zoom.scale()));\n}\n\nfunction matrix3d(scale, translate) {\n  var k = scale / 256, r = scale % 1 ? Number : Math.round;\n  return \"matrix3d(\" + [k, 0, 0, 0, 0, k, 0, 0, 0, 0, k, 0, r(translate[0] * scale), r(translate[1] * scale), 0, 1 ] + \")\";\n}\n\nfunction prefixMatch(p) {\n  var i = -1, n = p.length, s = document.body.style;\n  while (++i < n) if (p[i] + \"Transform\" in s) return \"-\" + p[i].toLowerCase() + \"-\";\n  return \"\";\n}\n\nfunction formatLocation(p, k) {\n  var format = d3.format(\".\" + Math.floor(Math.log(k) / 2 - 2) + \"f\");\n  return (p[1] < 0 ? format(-p[1]) + \"\u00b0S\" : format(p[1]) + \"\u00b0N\") + \" \"\n       + (p[0] < 0 ? format(-p[0]) + \"\u00b0W\" : format(p[0]) + \"\u00b0E\");\n}\n\n</script>\n</body>\n</html>", "description": "Vector Tiles in D3, darkened", "created_at": "2013-11-09T18:18:57Z", "updated_at": "2015-12-27T20:59:09Z", "api": ["d3.geo.tile", "d3.geo.mercator", "d3.geo.path", "d3.behavior.zoom", "d3.select", "d3.json", "d3.mouse", "d3.format"], "readme": "Adapting [d3.geo.tile](https://github.com/d3/d3-plugins/tree/master/geo/tile) to show [OpenStreetMap vector tiles](http://openstreetmap.us/~migurski/vector-datasource/). Via Mike Bostock's [example](/mbostock/5616813).", "uid": "wboykinm_7388233"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  .axis path,\n  .axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n  }\n  .dot {}\n</style>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<body>\n  <script>\n    // var resource = 'https://dataclips.heroku.com/vgyygvzqtezwpmwpcmmjlluamjlk.json';\n    // Replaced with local copy (CORS)\n    \n    var format = d3.time.format(\"%Y-%m-%d\"),\n        margin = {top: 20, right: 20, bottom: 30, left: 40},\n        width = 960 - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom;\n        \n    var x = d3.time.scale()\n                    .range([0, width]);\n    var y = d3.scale.linear()\n                    .range([height, 0]);\n                    \n    var color = d3.scale.category10();\n    \n    var xAxis = d3.svg.axis()\n                    .scale(x)\n                    .orient(\"bottom\")\n                    .ticks(d3.time.months, 1)\n                    .tickFormat(d3.time.format('%b'))\n                    .tickSize(0)\n                    .tickPadding(10);\n   \n    var yAxis = d3.svg.axis()\n                    .scale(y)\n                    .orient(\"left\")\n                    .tickPadding(10);\n  \n    var svg = d3.select(\"body\")\n                .append(\"svg\")\n                  .attr(\"width\", width + margin.left + margin.right)\n                  .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n    d3.json('sample.json', function(error, data) {\n      console.log(data)\n      data.values.forEach(function(d) {\n        d.date = format.parse(String(d[0]).substring(0, 10));\n        d.amount = d[1];\n        console.log(\"Spent $\" + d.amount + \" on \" + d.date);\n      });\n      x.domain([format.parse(String(data.values[0][0]).substring(0, 10)), d3.time.day.offset(format.parse(String(data.values[data.values.length - 1][0]).substring(0, 10)), 1)]).nice();\n      \n      y.domain([0, 1500])\n      // d3.max(data.values, function(d) { return d.amount; })\n      // y.domain(d3.extent(data.values, function(d){ return d.amount; })).nice();\n      \n      svg.append(\"g\")\n          .attr(\"class\", \"x axis\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(xAxis)\n          .append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"x\", width)\n            .attr(\"y\", -6)\n            .style(\"text-anchor\", \"end\")\n            .text(data.fields[0]);\n            \n      svg.append(\"g\")\n          .attr(\"class\", \"y axis\")\n          .call(yAxis)\n          .append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", 6)\n            .attr(\"dy\", \".71em\")\n            .style(\"text-anchor\", \"end\")\n            .text(data.fields[1]);\n      \n      svg.selectAll(\"circle.dot\")\n          .data(data.values)\n          .enter()\n          .append(\"circle\")\n            .attr(\"class\", \"dot\")\n            .attr(\"r\", 10)\n            .attr(\"cx\", function(d) { return x(d.date); })\n            .attr(\"cy\", function(d) { return y(d.amount); })\n            .attr(\"fill\", \"red\")\n            .attr(\"stroke-width\", 0);\n    })\n  \n  </script>\n</body>", "description": "DataClips + D3.js Chart", "created_at": "2013-06-03T21:09:18Z", "updated_at": "2015-12-18T01:09:08Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.select", "d3.json", "d3.time.day.offset", "d3.max", "d3.extent"], "readme": "Simple demonstration of consuming Heroku DataClips with D3.js.\n\nData source: <https://dataclips.heroku.com/vgyygvzqtezwpmwpcmmjlluamjlk> (.json)", "uid": "dustinlarimer_5701438"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Reprojected Tiles</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n  button.reproject {\n    position: fixed;\n    z-index: 1;\n    top: 250px;\n  }\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    map.mode(\"projection\")\n\n    tileLayer = d3.carto.layer.tile();\n    tileLayer\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\");\n\n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoJSON Countries\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\");\n\n    topojsonLayer = d3.carto.layer.topojson();\n    topojsonLayer\n    .path(\"sample_routes.topojson\")\n    .label(\"TopoJSON Lines\")\n    .cssClass(\"roads\")\n    .renderMode(\"svg\");\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .x(\"x\")\n    .y(\"y\")\n    .markerSize(2);\n\n    map.addCartoLayer(tileLayer);\n    map.addCartoLayer(geojsonLayer);\n    map.addCartoLayer(topojsonLayer);\n    map.addCartoLayer(csvLayer);\n\n    d3.json(\"world.geojson\", function(error,data) {\n\n    fNamedCountries = data.features.filter(function (d) {return d.properties.name.substring(0,1) == \"F\"});\n\n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(fNamedCountries)\n    .label(\"Filtered Features\")\n    .cssClass(\"francelike\")\n    .renderMode(\"svg\");\n\n      map.addCartoLayer(featureLayer);\n      })\n    \n    d3.select(\"#map\").append(\"button\").attr(\"class\", \"reproject\").html(\"Reproject to Conic Equidistant\").on(\"click\", reproject);\n    \n    function reproject() {\n\n    var projection = d3.geo.conicEquidistant()\n    .center([0, 15])\n    .scale(600)\n    .translate(map.zoom().translate())\n    .precision(.1);\n\n    map.projection(projection);\n    map.refresh();\n    }\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Raster Reprojection d3.carto.map", "created_at": "2014-07-12T18:48:31Z", "updated_at": "2015-08-29T14:03:54Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.topojson", "d3.carto.layer.csv", "d3.json", "d3.carto.layer.featureArray", "d3.geo.conicEquidistant"], "readme": "This is an example of automatic raster reprojection of a tiled layer from **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nIt still needs some work. It does not reproject the raster on-the-fly but rather only reprojects it at \"zoomend\" which is triggered at the end of a zoom or pan event.\n\nThis uses [Jason Davies' d3.geo.raster and d3.quadtiles](http://www.jasondavies.com/maps/tile/).", "uid": "emeeks_c970c9ee3e242e90004b"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  .hexagon {\n    fill: none;\n    stroke: #000;\n    stroke-width: .5px;\n  }\n</style>\n\n<body>\n  <script src=\"d3.min.js\"></script>\n  <script>\n    var margin = {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      },\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n    var randomX = d3.random.normal(width / 2, 80),\n      randomY = d3.random.normal(height / 2, 80),\n      points = d3.range(2000).map(function() {\n        return [randomX(), randomY()];\n      });\n    console.log(points);\n\n    var hexbin = d3.hexbin()\n      .size([width, height])\n      .radius(20);\n\n    // the result of the hexbin layout\n    var hexbinData = hexbin(points);\n\n    var color = d3.scale.linear()\n      .domain([0, d3.max(hexbinData, function(d) {\n        return d.length;\n      })])\n      .range([\"white\", \"steelblue\"])\n      .interpolate(d3.interpolateLab);\n\n    var x = d3.scale.identity()\n      .domain([0, width]);\n\n    var y = d3.scale.linear()\n      .domain([0, height])\n      .range([height, 0]);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    svg.append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n      .append(\"rect\")\n      .attr(\"class\", \"mesh\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    svg.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n      .selectAll(\".hexagon\")\n      .data(hexbinData)\n      .enter().append(\"path\")\n      .attr(\"class\", \"hexagon\")\n      .attr(\"d\", hexbin.hexagon())\n      .attr(\"transform\", function(d) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      })\n      .style(\"fill\", function(d) {\n        return color(d.length)\n      })\n      .style(\"stroke\", \"none\");\n  </script>\n", "description": "d3-hexbin demo", "created_at": "2015-12-05T21:03:01Z", "updated_at": "2015-12-05T21:38:20Z", "api": ["d3.values", "d3.random.normal", "d3.range", "d3.hexbin", "d3.scale.linear", "d3.max", "d3.scale.identity", "d3.select"], "readme": "## hexbin scatterplot\n\na [d3-hexbin](https://github.com/d3/d3-hexbin) example with no axes donated by [micahstubbs](http://bl.ocks.org/micahstubbs).\n\nThis example modifies the block [Hexagonal Binning](http://bl.ocks.org/mbostock/4248145) by\n\n+ removing the axes\n\n+ removing the stroke from the hexagon paths\n\n+ using shiny new D3 V4.0 syntax\n\n---\n\nThis example shows how to use the [d3.hexbin](https://github.com/d3/d3-hexbin) plugin for hexagonal binning. 2,000 random points with a normal distribution are binned into hexagons; color encodes the number of points that fall into each bin. You can also use [area encoding](../4248146). Inspired by earlier work by [Zachary Forest Johnson](http://indiemaps.com/blog/2011/10/hexbins/).\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "xaranke_b956ee7215b7b50bc78a"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.point {\n  fill: #2f225d;\n  stroke: #afa2dc;\n}\n\n.selected {\n  fill: #afa2dc;\n  stroke: #2f225d;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\np {\n  font: 12px sans-serif;\n  margin: 0 0 2px 0;\n  padding: 0;\n}\n\n.clear-button {\n  font: 14px sans-serif;\n  cursor: pointer;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\nd3.helper = {};\n\nd3.helper = {};\n\nd3.helper.tooltip = function(){\n    var tooltipDiv;\n    var bodyNode = d3.select('body').node();\n\n    function tooltip(selection){\n\n        selection.on('mouseover.tooltip', function(pD, pI){\n            // Clean up lost tooltips\n            d3.select('body').selectAll('div.tooltip').remove();\n            // Append tooltip\n            tooltipDiv = d3.select('body')\n                           .append('div')\n                           .attr('class', 'tooltip')\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px',\n                'background-color': '#d8d5e4',\n                width: '65px',\n                height: '30px',\n                padding: '5px',\n                position: 'absolute',\n                'z-index': 1001,\n                'box-shadow': '0 1px 2px 0 #656565'\n            });\n\n            var first_line = '<p>X-Value: ' + pD.index + '</p>'\n            var second_line = '<p>Y-Value: ' + pD.value + '</p>'\n\n            tooltipDiv.html(first_line + second_line)\n        })\n        .on('mousemove.tooltip', function(pD, pI){\n            // Move tooltip\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px'\n            });\n        })\n        .on('mouseout.tooltip', function(pD, pI){\n            // Remove tooltip\n            tooltipDiv.remove();\n        });\n\n    }\n\n    tooltip.attr = function(_x){\n        if (!arguments.length) return attrs;\n        attrs = _x;\n        return this;\n    };\n\n    tooltip.style = function(_x){\n        if (!arguments.length) return styles;\n        styles = _x;\n        return this;\n    };\n\n    return tooltip;\n};\n\nvar data = [];\nvar values = [];\nfor (var i = 2; i <= 50; i++) {\n    var val = Math.floor(Math.random() * (50 - 5 + 1) + 5);\n    data.push({index: i, value: val});\n    values.push(val);\n}\n\nvar margin = {top: 20, right: 20, bottom: 60, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([0, 50]);\n\nvar y = d3.scale.linear()\n    .range([height, 0])\n    .domain([0, d3.max(values) + 5]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(11);\n\nvar brush = d3.svg.brush()\n    .x(x)\n    .on(\"brush\", brushmove)\n    .on(\"brushend\", brushend);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\npoints = svg.selectAll(\".point\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"class\", \"point\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"r\", function(d){return Math.floor(Math.random() * (20 - 5 + 1) + 5);})\n    .attr(\"cx\", function(d) { return x(d.index); })\n    .attr(\"cy\", function(d) { return y(d.value); })\n    .call(d3.helper.tooltip());\n\nsvg.append(\"g\")\n    .attr(\"class\", \"brush\")\n    .call(brush)\n  .selectAll('rect')\n    .attr('height', height);\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height + 20);\n\nfunction brushmove() {\n  var extent = brush.extent();\n  points.classed(\"selected\", function(d) {\n    is_brushed = extent[0] <= d.index && d.index <= extent[1];\n    return is_brushed;\n  });\n}\n\nfunction brushend() {\n  get_button = d3.select(\".clear-button\");\n  if(get_button.empty() === true) {\n    clear_button = svg.append('text')\n      .attr(\"y\", 460)\n      .attr(\"x\", 825)\n      .attr(\"class\", \"clear-button\")\n      .text(\"Clear Brush\");\n  }\n\n  x.domain(brush.extent());\n\n  transition_data();\n  reset_axis();\n\n  points.classed(\"selected\", false);\n  d3.select(\".brush\").call(brush.clear());\n\n  clear_button.on('click', function(){\n    x.domain([0, 50]);\n    transition_data();\n    reset_axis();\n    clear_button.remove();\n  });\n}\n\nfunction transition_data() {\n  svg.selectAll(\".point\")\n    .data(data)\n  .transition()\n    .duration(500)\n    .attr(\"cx\", function(d) { return x(d.index); });\n}\n\nfunction reset_axis() {\n  svg.transition().duration(500)\n   .select(\".x.axis\")\n   .call(xAxis);\n}\n\n</script>", "description": "D3 Brush and Tooltip III", "created_at": "2013-11-24T18:19:33Z", "updated_at": "2015-12-29T06:39:08Z", "api": ["d3.select", "d3.mouse", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.svg.brush", "d3.helper.tooltip"], "readme": "Example for [Cooperative Brushing and Tooltips in D3](http://wrobstory.github.io/2013/11/D3-brush-and-tooltip.html). \n\nNote that the brush layer is appended *after* the data, and therefore mouseover events do not trigger the tooltip. Only when you start brushing do the tooltips appear. ", "uid": "wrobstory_7630406"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Canvas ImageData Zoom</title>\n<style>\nbody {\n  position: relative;\n}\n\nsvg,\ncanvas {\n    position: absolute;\n}\n\n.axis text {\n    font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<body>\n<script>\n\nvar margin = {top: 10, right: 10, bottom: 20, left: 30},\n    width = 600,\n    height = 400;\n\nvar ctx;\nvar imageObj = new Image();\n\nvar x = d3.scale.linear()\n    .domain([0, width])\n    .range([0, width]);\n\n\nvar y = d3.scale.linear()\n    .domain([0, height])\n    .range([height, 0]);\n\nvar xmin = x.domain()[0];\nvar xmax = x.domain()[1];\nvar ymin = y.domain()[0];\nvar ymax = y.domain()[1];\n    \nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n    \nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n    \nvar zoom = d3.behavior.zoom()\n        .x(x)\n        .y(y)\n        .scaleExtent([1, 10])\n        .on(\"zoom\", refresh);\n\nvar color = d3.scale.linear()\n        .domain([95, 115, 135, 155, 175, 195])\n        .range([\"#0a0\", \"#6c0\", \"#ee0\", \"#eb4\", \"#eb9\", \"#fff\"]);\n\nvar canvas = d3.select(\"body\").append(\"canvas\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        .style(\"left\", margin.left + \"px\")\n        .style(\"top\", margin.top + \"px\")\n        .style(\"width\", width + \"px\")\n        .style(\"height\", height + \"px\")\n        .style(\"position\", \"absolute\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// We make an invisible rectangle to intercept mouse events for zooming.\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .style(\"fill\", \"000\")\n    .style(\"opacity\", 1e-6)\n    .call(zoom);\n\nsvg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .call(removeZero);\n\nsvg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis)\n        .call(removeZero);\n\n// Keep an eye out for \"translateExtent\" or \"xExtent\" methods that may be\n// added at some point to bound the limits of zooming and panning. Until then,\n// this works.\nfunction refresh() {\n    var t = zoom.translate();\n    var s = zoom.scale();\n    var tx = t[0],\n        ty = t[1];\n    var xdom = x.domain();\n    var reset_s = 0;\n    if ((xdom[1] - xdom[0]) >= (xmax - xmin)) {\n        zoom.x(x.domain([xmin, xmax]));\n        xdom = x.domain();\n        reset_s = 1;\n    }\n    var ydom = y.domain();\n    if ((ydom[1] - ydom[0]) >= (ymax - ymin)) {\n        zoom.y(y.domain([ymin, ymax]));\n        ydom = y.domain();\n        reset_s += 1;\n    }\n    if (reset_s == 2) { // Both axes are full resolution. Reset.\n        zoom.scale(1);\n        tx = 0;\n        ty = 0;\n    }\n    else {\n        if (xdom[0] < xmin) {\n            tx = 0;\n            x.domain([xmin, xdom[1] - xdom[0] + xmin]);\n            xdom = x.domain();\n        }\n        if (xdom[1] > xmax) {\n            xdom[0] -= xdom[1] - xmax;\n            tx = -xdom[0]*width/(xmax-xmin)*s;\n            x.domain([xdom[0], xmax]);\n        }\n        if (ydom[0] < ymin) {\n            y.domain([ymin, ydom[1] - ydom[0] + ymin]);\n            ydom = y.domain();\n            ty = -(ymax-ydom[1])*height/(ymax-ymin)*s;\n        }\n        if (ydom[1] > ymax) {\n            ydom[0] -= ydom[1] - ymax;\n            ty = 0;\n            y.domain([ydom[0], ymax]);\n        }\n    }\n    // Reset (possibly) if hit an edge so that next focus event starts correctly.\n    zoom.translate([tx, ty]);\n\n    ctx.drawImage(imageObj, \n        tx*imageObj.width/width, ty*imageObj.height/height,\n        imageObj.width*s, imageObj.height*s);\n    svg.select(\".x.axis\").call(xAxis).call(removeZero);\n    svg.select(\".y.axis\").call(yAxis).call(removeZero);\n}\n\nfunction removeZero(axis) {\n    axis.selectAll(\"g\").filter(function(d) { return !d; }).remove();\n}\n\nd3.json(\"heatmap.json\", function(error, heatmap) {\n    xmax = heatmap[0].length,\n    ymax = heatmap.length;\n    x.domain([0, xmax]);\n    y.domain([0, ymax]);\n    d3.select(\"canvas\")\n        .attr(\"width\", xmax)\n        .attr(\"height\", ymax)\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        .call(drawImage);\n\n  // Compute the pixel colors; scaled by CSS.\n    function drawImage(canvas) {\n        ctx = canvas.node().getContext(\"2d\");\n        var img = ctx.createImageData(xmax, ymax);\n        for (var y = 0, p = -1; y < ymax; ++y) {\n            for (var x = 0; x < xmax; ++x) {\n                var c = d3.rgb(color(heatmap[y][x]));\n                img.data[++p] = c.r;\n                img.data[++p] = c.g;\n                img.data[++p] = c.b;\n                img.data[++p] = 255;\n            }\n        }\n        ctx.putImageData(img, 0, 0);\n        imageObj.src = canvas.node().toDataURL();\n    }\n});\n</script>\n", "description": "D3 Zoomable ImageData", "created_at": "2013-12-20T02:14:34Z", "updated_at": "2015-12-31T21:49:16Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.behavior.zoom", "d3.select", "d3.json", "d3.rgb"], "readme": "Implements constrained zooming of an image constructed from a data-driven\nImageData object placed onto an HTML5 Canvas. Borrows heavily from \nhttps://gist.github.com/mbostock/3074470.", "uid": "tommct_8049508"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  svg { \n  \tborder: 1px solid black;\n  }\n</style>\n<body style=\"padding:40px\">\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/sylvester/0.1.3/sylvester.min.js\"></script> \n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>  \nvar width = 500, \n    height = 500, \n    radius = 20,  \n    padding = 100;\n    \nvar nodes = d3.range(10).map(function() { return {\n  radius: radius,\n  x: padding + Math.random() * (width - padding*2),\n  y: padding + Math.random() * (height - padding*2)\n}; }),\n    color = d3.scale.category10();\n   \nfunction MoveToClosestWall(d) {\n  if (d.x < width/2 && d.y < height/2 && d.y > d.x) d.x = 0;\n  if (d.x < width/2 && d.y < height/2 && d.x >= d.y) d.y = 0;\n \n  if (d.x >= width/2 && d.y < height/2 && width - d.x > d.y ) d.y = 0;\n  if (d.x >= width/2 && d.y < height/2 && width - d.x <= d.y) d.x = width;\n  \n  if (d.x < width/2 && d.y >= height/2 && d.x < height - d.y) d.x = 0;\n  if (d.x < width/2 && d.y >= height/2 && d.x >= height - d.y) d.y = height;\n  \n  if (d.x >= width/2 && d.y >= height/2 && width - d.x > height - d.y) d.y = height;\n  if (d.x >= width/2 && d.y >= height/2 && width - d.x <= height - d.y) d.x = width;\n}  \n\n  var left = Line.create([0,0], [0,height]);\n  var right = Line.create([width,0], [width,height]);\n  var bottom = Line.create([0,0], [width,0]);\n  var top = Line.create([0,height], [width,height]);\n  \nconsole.log(left, right, bottom, top);\n\nfunction ProjectOnLine(d) {\n  var origin = {x: width/2; y: height/2;}\n  \n}\n  \nnodes.forEach(function(d) {\n    d.orgX = d.x; \n    d.orgY = d.y;\n    //MoveToClosestWall(d);\n\t})  \n\n  var svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n  \n  var borders = svg.append(\"g\").classed(\"borders\", true);\n  borders.append(\"line\")\n\t\t.attr({\n    \tx1: 0, y1: 0,\n      x2: width, y2: height,\n      stroke: \"#d6d6d6\"\n  });\n  \n  borders.append(\"line\")\n\t\t.attr({\n    \tx1: 0, y1: height,\n      x2: width, y2: 0,\n      stroke: \"#d6d6d6\"\n  });\n  \n  borders.append(\"line\")\n\t\t.attr({\n    \tx1: width/2, y1: 0,\n      x2: width/2, y2: height,\n      stroke: \"#d6d6d6\"\n  }); \n  \n   borders.append(\"line\")\n\t\t.attr({\n    \tx1: 0, y1: height/2,\n      x2: width, y2: height/2,\n      stroke: \"#d6d6d6\"\n  });\n \n \n  var group = svg.selectAll(\".first\").data(nodes).enter().append(\"g\").classed(\"first\", true);\n  group.append(\"line\")\n    .attr({\n      x1: function(d) { return d.x; },\n      y1: function(d) { return d.y; },\n      x2: function(d) { return d.orgX; },\n      y2: function(d) { return d.orgY; },\n  \t\t\"stroke\": \"#d6d6d6\"});\n      \n  group.append(\"circle\")   \n    .attr({\n      cx: function(d) { return d.orgX; },\n      cy: function(d) { return d.orgY; },\n      r: 3,\n      fill: \"gray\",\n  \t\t\"stroke\": \"gray\"});\n  \n  group.append(\"circle\")\n    .attr({\n      cx: function(d) { return d.x; },\n      cy: function(d) { return d.y; },\n      r: 3,\n      fill: \"white\",\n  \t\t\"stroke\": \"gray\"});\n  \nvar force = d3.layout.force()\n    .gravity(0) \n    .charge(-200) \n    .nodes(nodes) \n.size([width, height])\n .on('end', function() { \n   nodes.forEach(function(d,i) {  \n     \n    var g = svg.append(\"g\");\n     g.append(\"line\")          \n      .style(\"stroke\", \"gray\")  \n      .attr(\"x1\", d.orgX)    \n      .attr(\"y1\", d.orgY)\n      .attr(\"x2\", d.x)    \n      .attr(\"y2\", d.y); \n\n  g.append(\"circle\")\n       \t.attr({\n          cx: d.x,\n          cy: d.y,\n          r: radius,\n          fill: \"white\",\n          stroke: \"gray\"     \n        });\n     \n       g.append(\"svg:image\")\n        .attr(\"xlink:href\",  \"https://image.freepik.com/free-icon/chinese-temple_318-104239.png\")\n        .attr(\"x\", d.x - radius/2)\n        .attr(\"y\", d.y - radius/2)\n        .attr(\"height\", radius)\n        .attr(\"width\", radius);\n   });  \n }); \n  \nforce.start();   \n  \nsvg.selectAll(\".move\")\n    .data(nodes)\n  .enter().append(\"circle\")\n\t.classed(\"move\", true)\n    .attr(\"r\", function(d) { return d.radius; })\n    .attr(\"cx\", function(d) { return d.x; })\n    .attr(\"cy\", function(d) { return d.y; })\n\t\t.style({\n      fill: \"url(#bkgrdimg)\",\n      stroke: \"gray\"\n\t\t});\n  \n  \n     \n\nforce.on(\"tick\", function(e) {\n  var q = d3.geom.quadtree(nodes),\n      i = 0,\n      n = nodes.length;\n  \n  while (++i < n) q.visit(collide(nodes[i]));\n  \n  svg.selectAll(\".move\")\n      .attr(\"cx\", function(d) { return d.x = Math.max(radius, Math.min(width - radius, d.x)); })\n      .attr(\"cy\", function(d) { return d.y = Math.max(radius, Math.min(height - radius, d.y)); });\n  \n});\n\n  \nfunction collide(node) {\n  var r = node.radius,\n      nx1 = node.x - r,\n      nx2 = node.x + r,\n      ny1 = node.y - r,\n      ny2 = node.y + r;\n  return function(quad, x1, y1, x2, y2) {\n    if (quad.point && (quad.point !== node)) {\n      var x = node.x - quad.point.x,\n          y = node.y - quad.point.y,\n          l = Math.sqrt(x * x + y * y),\n          r = node.radius + quad.point.radius;\n      if (l < r) {\n        l = (l - r) / l * .5;\n        node.x -= x *= l;\n        node.y -= y *= l;\n        quad.point.x += x;\n        quad.point.y += y;\n      }\n    }\n    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n  };\n}\n  \n</script>\n", "description": "Bound d3 with repulsion", "created_at": "2016-04-08T21:14:22Z", "updated_at": "2016-04-11T19:06:02Z", "api": ["d3.range", "d3.scale.category10", "d3.select", "d3.layout.force", "d3.geom.quadtree"], "readme": "Circle-bound nodes in [d3.layout.force()](https://github.com/mbostock/d3/wiki/Force-Layout), using a variation of Mike Bostock's rectangular [Bounded Force Layout](http://bl.ocks.org/mbostock/1129492). Here we calculate the maximum and minimum `x` for a given `y` in the circle, and vice versa.\n\nforked from <a href='http://bl.ocks.org/nsonnad/'>nsonnad</a>'s block: <a href='http://bl.ocks.org/nsonnad/5993342'>Circle-bound D3 force layout</a>", "uid": "GitNoise_1768f929ffafb7a2238f7438a866dc37"}, {"code": "<title>Crossfilter with d3.csv</title>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"crossfilter.js\"></script>\n<h3 id=\"loading\">Loading....</h3>\n<div>Number of rows: <span id=\"size\">0</span></div>\n<h3>Top Protein</h3>\n<ol id=\"protein-list\"></ol>\n<h3>Top Calcium</h3>\n<ol id=\"calcium-list\"></ol>\n<h3>Top Sodium</h3>\n<ol id=\"sodium-list\"></ol>\n<script>\nvar url = \"nutrients.csv\";\nvar numerics = [\"protein (g)\", \"calcium (g)\", \"sodium (g)\"];\n\nvar nutrients,\n    protein, calcium, sodium;\n\n// load the data from an external file\nd3.csv(url, function(data) {\n\n  // coerce numbers to floats, empty strings to null\n  data.forEach(function(d) {\n    numerics.forEach(function(dim) {\n      d[dim] = isNumber(d[dim]) ? parseFloat(d[dim]) : null;\n    });\n  });\n\n  // load data into crossfilter\n  nutrients = crossfilter(data);\n\n  // construct filtering dimensions\n  protein = nutrients.dimension(function(d) { return d[\"protein (g)\"]; });\n  calcium = nutrients.dimension(function(d) { return d[\"calcium (g)\"]; });\n  sodium = nutrients.dimension(function(d) { return d[\"sodium (g)\"]; });\n\n  // done loading\n  d3.select(\"#loading\").text(\"Loaded \" + url);\n\n  // display dataset size\n  d3.select(\"#size\").text(nutrients.size());\n\n  // display top K lists\n  renderTopList(protein, 6, \"#protein-list\");\n  renderTopList(calcium, 6, \"#calcium-list\");\n  renderTopList(sodium, 6, \"#sodium-list\");\n});\n\n// http://stackoverflow.com/a/1830844\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction renderTopList(dimension, count, selector) {\n  d3.select(selector).selectAll(\"li\")\n    .data(dimension.top(count))\n    .enter().append(\"li\")\n    .text(function(d) { return d.name });\n}\n</script>\n<style>\nbody {\n  font-size: 13px;\n  font-family: sans-serif;\n}\n</style>", "description": "Crossfilter with d3.csv", "created_at": "2013-03-09T10:18:09Z", "updated_at": "2015-12-14T17:39:04Z", "api": ["d3.csv", "d3.select"], "readme": "Loading data into a [crossfilter](http://square.github.com/crossfilter/) and with [d3.csv](https://github.com/mbostock/d3/wiki/CSV) and displaying a few [Top-K lists](https://github.com/square/crossfilter/wiki/API-Reference#wiki-dimension_top)\n\nData derived from the [USDA National Nutrient Database](http://www.ars.usda.gov/Services/docs.htm?docid=8964).", "uid": "syntagmatic_5123745"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n  </style>\n</head>\n\n<body>\n  \n   <a-scene>\n      <!--<a-cube position=\"0 0 -4\" depth=1 height=0.1 width=100 color=\"#fff\"></a-cube>-->\n      <a-light color=\"#da47da\" position=\"0 0 0\" type=\"ambient\"></a-light>\n      <a-entity light=\"type: point; color: #EEE; intensity: 0.5\" position=\"0 3 0\"></a-entity>\n     <a-entity position=\"0 0 0\" rotation=\"0 0 0\">\n    \t <a-entity camera look-controls wasd-controls></a-entity>\n     </a-entity>\n    \t\n      <!-- Sky -->\n      <a-sky color=\"#c8f7f0\"></a-sky>\n  </a-scene>\n  \n  <script>\n    // fake data\n    var data = [ 5, 10, 15, 20, 25, 30, 35,\n                40, 50, 70, 80, 90, 100,\n               110, 115, 120, 125, 130, 145, 150, 200]\n    \n    var hscale = d3.scale.linear()\n      .domain([0, d3.max(data)])\n      .range([0,5])\n    \n    var scene = d3.select(\"a-scene\");\n    \n    var cubes = scene.selectAll(\"a-cube.bar\")\n      .data(data)\n    cubes.enter().append(\"a-cube\").classed(\"bar\", true)\n    cubes.attr({\n      position: function(d,i) {\n        var radius = 10;\n        var theta = (i/data.length) * (2 * Math.PI)\n        var x = radius * Math.cos(theta);\n        var y = hscale(d)/2;\n        var z = radius * Math.sin(theta);\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var y = -360 * i/data.length;\n        var z = 0;\n        return x + \" \" + y + \" \" + z\n      },\n      height: function(d,i) {\n        return hscale(d)\n      }\n    })\n  </script>\n</body>\n", "description": "D3-copy-Enjalot", "created_at": "2016-04-30T08:18:57Z", "updated_at": "2016-04-30T08:18:57Z", "api": ["d3.scale.linear", "d3.max", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/e366fba2b4626271dcceb3aeed7089e5'>D3-copy-Enjalot</a>\n\nforked from <a href='http://bl.ocks.org/rvross/'>rvross</a>'s block: <a href='http://bl.ocks.org/rvross/ac78fbba1282c7b228253b97b0090e6b'>D3-copy-Enjalot</a>", "uid": "rvross_b3a10c9d95945216a0a889249ec421b0"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Automatic Hexbinning</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n      function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    \n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Base\")\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"all_sites.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"canvas\")\n    .markerColor(\"black\")\n    .markerSize(.5)\n    .x(\"xcoord\")\n    .y(\"ycoord\")\n    .on(\"load\", makeHexbins)\n    \n    map.addCartoLayer(tileLayer).addCartoLayer(csvLayer);\n    map.centerOn([100,30],\"latlong\").setScale(3);\n    \n    function makeHexbins() {\n      var colorScale = d3.scale.linear().domain([1,5,30]).range([\"green\",\"yellow\",\"red\"])\n      hexbinLayerLarge = map.createHexbinLayer(csvLayer, 2);\n      hexbinLayerSmall = map.createHexbinLayer(csvLayer, .75);\n      hexbinLayerLarge\n      .label(\"2 Degree Hexbin\")\n      .visibility(false)\n      .on(\"load\", function() {hexbinLayerLarge.g().selectAll(\"path\").style(\"opacity\", .5).style(\"fill\", function(d) {return colorScale(d.properties.node.length)})})\n\n      hexbinLayerSmall\n      .label(\".75 Degree Hexbin\")\n      .on(\"load\", function() {hexbinLayerSmall.g().selectAll(\"path\").style(\"opacity\", .5).style(\"fill\", function(d) {return colorScale(d.properties.node.length)})})\n      \n      map.addCartoLayer(hexbinLayerSmall);\n      map.addCartoLayer(hexbinLayerLarge);\n      \n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"hexbin.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Automatic Hexbinning - d3.carto", "created_at": "2014-09-15T19:00:09Z", "updated_at": "2015-08-29T14:06:30Z", "api": ["d3.values", "d3.range", "d3.carto.map", "d3.select", "d3.carto.layer", "d3.carto.layer.csv", "d3.scale.linear"], "readme": "Automatic hexbinning in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** allows for the creation of granular or high resolution heatmaps.\n\nThe map.createHexbinLayer function takes two variable: a point d3.carto.layer (either CSV or XY Array) and a resolution (in degrees). It creates a feature carto layer that automatically bins the points in the source layer and which you can then add to the map easily.\n\nIn this example, I generate two different hexbin resolutions: One at 2-degree and one at .75 degree, so that you can see how simple it is. The original point objects are found in the properties.node attribute of each hex feature and can be used to count the number or average the population, etc.\n\nThis requires a slightly modified [hexbin.js](https://github.com/emeeks/d3-plugins/blob/master/hexbin/hexbin.js) (also in this gist) to work.", "uid": "emeeks_790788687df9e560e288"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>Marvel Characters | Force layout with images</title>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n\n    <style>\n      @import url(http://fonts.googleapis.com/css?family=Source+Code+Pro:400,600);\n      body {font-family: \"Source Code Pro\", Consolas, monaco, monospace; line-height: 160%; font-size: 16px;  margin: 0; }\n      path.link {\n        fill: none;\n        stroke-width: 2px;\n      }\n      .node:not(:hover) .nodetext {\n        display: none;\n      }\n      h1 { font-size: 36px; margin: 10px 0; text-transform: uppercase; font-weight: normal;}\n      h2, h3 { font-size: 18px; margin: 5px 0 ; font-weight: normal;}\n      header {padding: 20px; position: absolute; top: 0; left: 0;}\n      a:link { color: #EE3124; text-decoration: none;}\n      a:visited { color: #EE3124; }\n      a:hover { color: #A4CD39; text-decoration: underline;}\n      a:active { color: #EE3124; }\n    </style>\n</head>\n    \n\n<body>\n    <header>\n      <h1>Marvel Characters</h1>\n      <h2>Click to view their identity</h2>\n      <h3>And link to their web page!</h3>\n    </header>\n    <!-- container for force layout visualisation  -->\n    <section id=\"vis\"></section> \n<script>\n\n// some colour variables\n  var tcBlack = \"#130C0E\";\n\n// rest of vars\nvar w = 960,\n    h = 800,\n    maxNodeSize = 50,\n    x_browser = 20,\n    y_browser = 25,\n    root;\n \nvar vis;\nvar force = d3.layout.force(); \n\nvis = d3.select(\"#vis\").append(\"svg\").attr(\"width\", w).attr(\"height\", h);\n \nd3.json(\"marvel.json\", function(json) {\n \n  root = json;\n  root.fixed = true;\n  root.x = w / 2;\n  root.y = h / 4;\n \n \n        // Build the path\n  var defs = vis.insert(\"svg:defs\")\n      .data([\"end\"]);\n \n \n  defs.enter().append(\"svg:path\")\n      .attr(\"d\", \"M0,-5L10,0L0,5\");\n \n     update();\n});\n \n \n/**\n *   \n */\nfunction update() {\n  var nodes = flatten(root),\n      links = d3.layout.tree().links(nodes);\n \n  // Restart the force layout.\n  force.nodes(nodes)\n        .links(links)\n        .gravity(0.05)\n    .charge(-1500)\n    .linkDistance(100)\n    .friction(0.5)\n    .linkStrength(function(l, i) {return 1; })\n    .size([w, h])\n    .on(\"tick\", tick)\n        .start();\n \n   var path = vis.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n \n    path.enter().insert(\"svg:path\")\n      .attr(\"class\", \"link\")\n      // .attr(\"marker-end\", \"url(#end)\")\n      .style(\"stroke\", \"#eee\");\n \n \n  // Exit any old paths.\n  path.exit().remove();\n \n \n \n  // Update the nodes\u2026\n  var node = vis.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id; });\n \n \n  // Enter any new nodes.\n  var nodeEnter = node.enter().append(\"svg:g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n      .on(\"click\", click)\n      .call(force.drag);\n \n  // Append a circle\n  nodeEnter.append(\"svg:circle\")\n      .attr(\"r\", function(d) { return Math.sqrt(d.size) / 10 || 4.5; })\n      .style(\"fill\", \"#eee\");\n \n   \n  // Append images\n  var images = nodeEnter.append(\"svg:image\")\n        .attr(\"xlink:href\",  function(d) { return d.img;})\n        .attr(\"x\", function(d) { return -25;})\n        .attr(\"y\", function(d) { return -25;})\n        .attr(\"height\", 50)\n        .attr(\"width\", 50);\n  \n  // make the image grow a little on mouse over and add the text details on click\n  var setEvents = images\n          // Append hero text\n          .on( 'click', function (d) {\n              d3.select(\"h1\").html(d.hero); \n              d3.select(\"h2\").html(d.name); \n              d3.select(\"h3\").html (\"Take me to \" + \"<a href='\" + d.link + \"' >\"  + d.hero + \" web page \u21e2\"+ \"</a>\" ); \n           })\n\n          .on( 'mouseenter', function() {\n            // select element in current context\n            d3.select( this )\n              .transition()\n              .attr(\"x\", function(d) { return -60;})\n              .attr(\"y\", function(d) { return -60;})\n              .attr(\"height\", 100)\n              .attr(\"width\", 100);\n          })\n          // set back\n          .on( 'mouseleave', function() {\n            d3.select( this )\n              .transition()\n              .attr(\"x\", function(d) { return -25;})\n              .attr(\"y\", function(d) { return -25;})\n              .attr(\"height\", 50)\n              .attr(\"width\", 50);\n          });\n\n  // Append hero name on roll over next to the node as well\n  nodeEnter.append(\"text\")\n      .attr(\"class\", \"nodetext\")\n      .attr(\"x\", x_browser)\n      .attr(\"y\", y_browser +15)\n      .attr(\"fill\", tcBlack)\n      .text(function(d) { return d.hero; });\n \n \n  // Exit any old nodes.\n  node.exit().remove();\n \n \n  // Re-select for update.\n  path = vis.selectAll(\"path.link\");\n  node = vis.selectAll(\"g.node\");\n \nfunction tick() {\n \n \n    path.attr(\"d\", function(d) {\n \n     var dx = d.target.x - d.source.x,\n           dy = d.target.y - d.source.y,\n           dr = Math.sqrt(dx * dx + dy * dy);\n           return   \"M\" + d.source.x + \",\" \n            + d.source.y \n            + \"A\" + dr + \",\" \n            + dr + \" 0 0,1 \" \n            + d.target.x + \",\" \n            + d.target.y;\n  });\n    node.attr(\"transform\", nodeTransform);    \n  }\n}\n\n \n/**\n * Gives the coordinates of the border for keeping the nodes inside a frame\n * http://bl.ocks.org/mbostock/1129492\n */ \nfunction nodeTransform(d) {\n  d.x =  Math.max(maxNodeSize, Math.min(w - (d.imgwidth/2 || 16), d.x));\n    d.y =  Math.max(maxNodeSize, Math.min(h - (d.imgheight/2 || 16), d.y));\n    return \"translate(\" + d.x + \",\" + d.y + \")\";\n   }\n \n/**\n * Toggle children on click.\n */ \nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n \n  update();\n}\n \n \n/**\n * Returns a list of all nodes under the root.\n */ \nfunction flatten(root) {\n  var nodes = []; \n  var i = 0;\n \n  function recurse(node) {\n    if (node.children) \n      node.children.forEach(recurse);\n    if (!node.id) \n      node.id = ++i;\n    nodes.push(node);\n  }\n \n  recurse(root);\n  return nodes;\n} \n  \n  \n</script>\n\n</body>\n</html>\n", "description": "d3 | Force layout with images", "created_at": "2014-11-30T11:40:31Z", "updated_at": "2015-08-29T14:10:33Z", "api": ["d3.layout.force", "d3.select", "d3.json", "d3.layout.tree"], "readme": "Force layout test/experiment with images\n\nSources:\n- [Force Layout](https://github.com/mbostock/d3/wiki/Force-Layout)\n- [Force-based label placement](http://bl.ocks.org/MoritzStefaner/1377729)\n- [Collapsible force layout with directed paths and images/text in the nodes.](http://bl.ocks.org/djjupa/5653692)\n- [Labeled Force Layout](http://bl.ocks.org/mbostock/950642)\n", "uid": "eesur_be2abfb3155a38be4de4"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 | reusable slopegraph</title> \n  <meta name=\"author\" content=\"Sundar Singh | eesur.com\">\n\n  <link rel=\"stylesheet\" href=\"main.css\">\n  <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n</head>\n<body>\n\n    <header>\n        <h1>Reusable slopegraph</h1> \n        <p>Slopegraph example showing number of personal computers installed in a country per household.</p>\n    </header>\n\n    <section id=\"slopegraph\"></section>\n\n    <footer>\n      <button id=\"reset\">reset</button>\n      <nav id='nav-alt'></nav>\n    </footer>\n\n    <!-- namespace -->\n    <script> d3.eesur = {}; </script>\n    <!-- reusable slopegraph -->\n    <script src=\"d3_code_slopegraph.js\"></script>\n    <script>\n\n  //  render slopegraph chart\n\n    (function() {\n\n    // create chart\n    var slopegraph = d3.eesur.slopegraph()\n        // .margin({top: 20, bottom: 20, left: 100, right:100})\n        .strokeColour('#130C0E')\n        .keyName('country')\n            .keyValueStart('2000')\n            .keyValueEnd('2012')\n            .h(500)\n            // .format(d3.format('04d'))\n            .on('_hover', function (d, i) {\n                highlightLine(d, i);\n            });\n\n    \n    d3.json('data.json', function(error, data) {\n\n        if (error) throw error;\n\n        // render chart\n        d3.select('#slopegraph')\n            .datum(data)\n            .call(slopegraph);\n\n        // alternative navigation     \n        navAlt(data);\n    });\n\n    // reset button listener\n    d3.select('#reset')\n        .on('click', function () {\n            d3.selectAll('.elm').transition().style('opacity', 1);\n            d3.selectAll('.s-line').style('stroke', '#130C0E');\n        });\n\n    // navigation\n    function navAlt(data) {\n        d3.select('#nav-alt').append('ul')\n            .selectAll('li')\n            .data(data)\n            .enter().append('li')\n            .on('click', function (d, i) {\n                highlightLine(d, i);\n            })\n            .text(function (d) { return d['country']; });\n    }\n\n    // highlight line and fade other lines\n    function highlightLine(d, i) {\n        d3.selectAll('.elm').transition().style('opacity', 0.2);\n        d3.selectAll('.sel-' + i).transition().style('opacity', 1);\n        d3.selectAll('.s-line').style('stroke', '#FDBB30');\n        d3.selectAll('.s-line.sel-' + i).style('stroke', '#130C0E');\n    }\n\n    // just for blocks viewer size\n    d3.select(self.frameElement).style('height', '800px');\n  \n  }());\n\n    </script>\n</body>\n</html>\n\n", "description": "d3 | Reusable slopegraph", "created_at": "2015-12-12T16:37:47Z", "updated_at": "2016-01-25T10:41:50Z", "api": ["d3.format", "d3.dispatch", "d3.max", "d3.scale.linear", "d3.select", "d3.rebind", "d3.eesur.slopegraph", "d3.json", "d3.selectAll"], "readme": "Reusable slopegraph inspired/adapted from [Ben Van Dyke's example](http://vandykeindustries.com/slopegraphs-d3.html) into a reusable chart.\n\nThis slopegraph example shows the number of personal computers installed in a country per household. This includes desktop PCs and laptops, but excludes smartphones and terminals connected to mainframe computers. All figures are calculated using total number of Personal Computers and the Total Number of Households.\n\n[data source](http://www.nakono.com/tekcarta/databank/personal-computers-per-household/)\n", "uid": "eesur_a4679ee453aa9357977c"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style type=\"text/css\">\n\nsvg {\n  font-family: \"Helvetica Neue\", Helvetica;\n}\n\n.line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2px;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar m = [20, 20, 30, 20],\n    w = 960 - m[1] - m[3],\n    h = 500 - m[0] - m[2];\n\nvar x,\n    y,\n    duration = 1500,\n    delay = 500;\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", w + m[1] + m[3])\n    .attr(\"height\", h + m[0] + m[2])\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\nvar stocks,\n    symbols;\n\n// A line generator, for the dark stroke.\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); });\n\n// A line generator, for the dark stroke.\nvar axis = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(h);\n\n// A area generator, for the dark stroke.\nvar area = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y1(function(d) { return y(d.price); });\n\nd3.csv(\"stocks.csv\", function(data) {\n  var parse = d3.time.format(\"%b %Y\").parse;\n\n  // Nest stock values by symbol.\n  symbols = d3.nest()\n      .key(function(d) { return d.symbol; })\n      .entries(stocks = data);\n\n  // Parse dates and numbers. We assume values are sorted by date.\n  // Also compute the maximum price per symbol, needed for the y-domain.\n  symbols.forEach(function(s) {\n    s.values.forEach(function(d) { d.date = parse(d.date); d.price = +d.price; });\n    s.maxPrice = d3.max(s.values, function(d) { return d.price; });\n    s.sumPrice = d3.sum(s.values, function(d) { return d.price; });\n  });\n\n  // Sort by maximum price, descending.\n  symbols.sort(function(a, b) { return b.maxPrice - a.maxPrice; });\n\n  var g = svg.selectAll(\"g\")\n      .data(symbols)\n    .enter().append(\"g\")\n      .attr(\"class\", \"symbol\");\n\n  setTimeout(lines, duration);\n});\n\nfunction lines() {\n  x = d3.time.scale().range([0, w - 60]);\n  y = d3.scale.linear().range([h / 4 - 20, 0]);\n\n  // Compute the minimum and maximum date across symbols.\n  x.domain([\n    d3.min(symbols, function(d) { return d.values[0].date; }),\n    d3.max(symbols, function(d) { return d.values[d.values.length - 1].date; })\n  ]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + (i * h / 4 + 10) + \")\"; });\n\n  g.each(function(d) {\n    var e = d3.select(this);\n\n    e.append(\"path\")\n        .attr(\"class\", \"line\");\n\n    e.append(\"circle\")\n        .attr(\"r\", 5)\n        .style(\"fill\", function(d) { return color(d.key); })\n        .style(\"stroke\", \"#000\")\n        .style(\"stroke-width\", \"2px\");\n\n    e.append(\"text\")\n        .attr(\"x\", 12)\n        .attr(\"dy\", \".31em\")\n        .text(d.key);\n  });\n\n  function draw(k) {\n    g.each(function(d) {\n      var e = d3.select(this);\n      y.domain([0, d.maxPrice]);\n\n      e.select(\"path\")\n          .attr(\"d\", function(d) { return line(d.values.slice(0, k + 1)); });\n\n      e.selectAll(\"circle, text\")\n          .data(function(d) { return [d.values[k], d.values[k]]; })\n          .attr(\"transform\", function(d) { return \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\"; });\n    });\n  }\n\n  var k = 1, n = symbols[0].values.length;\n  d3.timer(function() {\n    draw(k);\n    if ((k += 2) >= n - 1) {\n      draw(n - 1);\n      setTimeout(horizons, 500);\n      return true;\n    }\n  });\n}\n\nfunction horizons() {\n  svg.insert(\"defs\", \".symbol\")\n    .append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", w)\n      .attr(\"height\", h / 4 - 20);\n\n  var color = d3.scale.ordinal()\n      .range([\"#c6dbef\", \"#9ecae1\", \"#6baed6\"]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"clip-path\", \"url(#clip)\");\n\n  area\n      .y0(h / 4 - 20);\n\n  g.select(\"circle\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (-h / 4) + \")\"; })\n      .remove();\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (h / 4 - 20) + \")\"; })\n      .attr(\"dy\", \"0em\");\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).selectAll(\".area\")\n        .data(d3.range(3))\n      .enter().insert(\"path\", \".line\")\n        .attr(\"class\", \"area\")\n        .attr(\"transform\", function(d) { return \"translate(0,\" + (d * (h / 4 - 20)) + \")\"; })\n        .attr(\"d\", area(d.values))\n        .style(\"fill\", function(d, i) { return color(i); })\n        .style(\"fill-opacity\", 1e-6);\n\n    y.domain([0, d.maxPrice / 3]);\n\n    d3.select(this).selectAll(\".line\").transition()\n        .duration(duration)\n        .attr(\"d\", line(d.values))\n        .style(\"stroke-opacity\", 1e-6);\n\n    d3.select(this).selectAll(\".area\").transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1)\n        .attr(\"d\", area(d.values))\n        .each(\"end\", function() { d3.select(this).style(\"fill-opacity\", null); });\n  });\n\n  setTimeout(areas, duration + delay);\n}\n\nfunction areas() {\n  var g = svg.selectAll(\".symbol\");\n\n  axis\n      .y(h / 4 - 21);\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return axis(d.values); });\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).select(\".line\").transition()\n        .duration(duration)\n        .style(\"stroke-opacity\", 1)\n        .each(\"end\", function() { d3.select(this).style(\"stroke-opacity\", null); });\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1e-6)\n        .attr(\"d\", area(d.values))\n        .remove();\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return !i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill\", color(d.key))\n        .attr(\"d\", area(d.values));\n  });\n\n  svg.select(\"defs\").transition()\n      .duration(duration)\n      .remove();\n\n  g.transition()\n      .duration(duration)\n      .each(\"end\", function() { d3.select(this).attr(\"clip-path\", null); });\n\n  setTimeout(stackedArea, duration + delay);\n}\n\nfunction stackedArea() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  area\n      .y0(function(d) { return y(d.price0); })\n      .y1(function(d) { return y(d.price0 + d.price); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration)\n      .attr(\"transform\", \"translate(0,0)\")\n      .each(\"end\", function() { d3.select(this).attr(\"transform\", null); });\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", function(d, i) { return i < 3 ? 1e-6 : 1; })\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(streamgraph, duration + delay);\n}\n\nfunction streamgraph() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\")\n      .offset(\"wiggle\");\n\n  stack(symbols);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration);\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(overlappingArea, duration + delay);\n}\n\nfunction overlappingArea() {\n  var g = svg.selectAll(\".symbol\");\n\n  line\n      .y(function(d) { return y(d.price0 + d.price); });\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d.maxPrice; }))])\n      .range([h, 0]);\n\n  area\n      .y0(h)\n      .y1(function(d) { return y(d.price); });\n\n  line\n      .y(function(d) { return y(d.price); });\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", .5)\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price) + \")\"; });\n\n  svg.append(\"line\")\n      .attr(\"class\", \"line\")\n      .attr(\"x1\", 0)\n      .attr(\"x2\", w - 60)\n      .attr(\"y1\", h)\n      .attr(\"y2\", h)\n      .style(\"stroke-opacity\", 1e-6)\n    .transition()\n      .duration(duration)\n      .style(\"stroke-opacity\", 1);\n\n  setTimeout(groupedBar, duration + delay);\n}\n\nfunction groupedBar() {\n  x = d3.scale.ordinal()\n      .domain(symbols[0].values.map(function(d) { return d.date; }))\n      .rangeBands([0, w - 60], .1);\n\n  var x1 = d3.scale.ordinal()\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeBands([0, x.rangeBand()]);\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .remove();\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", 1e-6)\n      .remove();\n\n  g.each(function(p, j) {\n    d3.select(this).selectAll(\"rect\")\n        .data(function(d) { return d.values; })\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.date) + x1(p.key); })\n        .attr(\"y\", function(d) { return y(d.price); })\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"height\", function(d) { return h - y(d.price); })\n        .style(\"fill\", color(p.key))\n        .style(\"fill-opacity\", 1e-6)\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1);\n  });\n\n  setTimeout(stackedBar, duration + delay);\n}\n\nfunction stackedBar() {\n  x.rangeRoundBands([0, w - 60], .1);\n\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  var g = svg.selectAll(\".symbol\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.select(\"text\")\n      .delay(symbols[0].values.length * 10)\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price); })\n      .attr(\"height\", function(d) { return h - y(d.price); })\n      .each(\"end\", function() {\n        d3.select(this)\n            .style(\"stroke\", \"#fff\")\n            .style(\"stroke-opacity\", 1e-6)\n          .transition()\n            .duration(duration / 2)\n            .attr(\"x\", function(d) { return x(d.date); })\n            .attr(\"width\", x.rangeBand())\n            .style(\"stroke-opacity\", 1);\n      });\n\n  setTimeout(transposeBar, duration + symbols[0].values.length * 10 + delay);\n}\n\nfunction transposeBar() {\n  x\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeRoundBands([0, w], .2);\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d3.sum(d.values.map(function(d) { return d.price; })); }))]);\n\n  var stack = d3.layout.stack()\n      .x(function(d, i) { return i; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; });\n\n  stack(d3.zip.apply(null, symbols.map(function(d) { return d.values; }))); // transpose!\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price) - 1; })\n      .attr(\"height\", function(d) { return h - y(d.price) + 1; })\n      .attr(\"x\", function(d) { return x(d.symbol); })\n      .attr(\"width\", x.rangeBand())\n      .style(\"stroke-opacity\", 1e-6);\n\n  t.select(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"transform\", function(d) { return \"translate(\" + (x(d.key) + x.rangeBand() / 2) + \",\" + h + \")\"; })\n      .attr(\"dy\", \"1.31em\")\n      .each(\"end\", function() { d3.select(this).attr(\"x\", null).attr(\"text-anchor\", \"middle\"); });\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"x2\", w);\n\n  setTimeout(donut,  duration / 2 + symbols[0].values.length * 10 + delay);\n}\n\nfunction donut() {\n  var g = svg.selectAll(\".symbol\");\n\n  g.selectAll(\"rect\").remove();\n\n  var pie = d3.layout.pie()\n      .value(function(d) { return d.sumPrice; });\n\n  var arc = d3.svg.arc();\n\n  g.append(\"path\")\n      .style(\"fill\", function(d) { return color(d.key); })\n      .data(function() { return pie(symbols); })\n    .transition()\n      .duration(duration)\n      .tween(\"arc\", arcTween);\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"dy\", \".31em\");\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"y1\", 2 * h)\n      .attr(\"y2\", 2 * h)\n      .remove();\n\n  function arcTween(d) {\n    var path = d3.select(this),\n        text = d3.select(this.parentNode.appendChild(this.previousSibling)),\n        x0 = x(d.data.key),\n        y0 = h - y(d.data.sumPrice);\n\n    return function(t) {\n      var r = h / 2 / Math.min(1, t + 1e-3),\n          a = Math.cos(t * Math.PI / 2),\n          xx = (-r + (a) * (x0 + x.rangeBand()) + (1 - a) * (w + h) / 2),\n          yy = ((a) * h + (1 - a) * h / 2),\n          f = {\n            innerRadius: r - x.rangeBand() / (2 - a),\n            outerRadius: r,\n            startAngle: a * (Math.PI / 2 - y0 / r) + (1 - a) * d.startAngle,\n            endAngle: a * (Math.PI / 2) + (1 - a) * d.endAngle\n          };\n\n      path.attr(\"transform\", \"translate(\" + xx + \",\" + yy + \")\");\n      path.attr(\"d\", arc(f));\n      text.attr(\"transform\", \"translate(\" + arc.centroid(f) + \")translate(\" + xx + \",\" + yy + \")rotate(\" + ((f.startAngle + f.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n    };\n  }\n\n  setTimeout(donutExplode, duration + delay);\n}\n\nfunction donutExplode() {\n  var r0a = h / 2 - x.rangeBand() / 2,\n      r1a = h / 2,\n      r0b = 2 * h - x.rangeBand() / 2,\n      r1b = 2 * h,\n      arc = d3.svg.arc();\n\n  svg.selectAll(\".symbol path\")\n      .each(transitionExplode);\n\n  function transitionExplode(d, i) {\n    d.innerRadius = r0a;\n    d.outerRadius = r1a;\n    d3.select(this).transition()\n        .duration(duration / 2)\n        .tween(\"arc\", tweenArc({\n          innerRadius: r0b,\n          outerRadius: r1b\n        }));\n  }\n\n  function tweenArc(b) {\n    return function(a) {\n      var path = d3.select(this),\n          text = d3.select(this.nextSibling),\n          i = d3.interpolate(a, b);\n      for (var key in b) a[key] = b[key]; // update data\n      return function(t) {\n        var a = i(t);\n        path.attr(\"d\", arc(a));\n        text.attr(\"transform\", \"translate(\" + arc.centroid(a) + \")translate(\" + w / 2 + \",\" + h / 2 +\")rotate(\" + ((a.startAngle + a.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n      };\n    }\n  }\n\n  setTimeout(function() {\n    svg.selectAll(\"*\").remove();\n    svg.selectAll(\"g\").data(symbols).enter().append(\"g\").attr(\"class\", \"symbol\");\n    lines();\n  }, duration);\n}\n\n</script>\n", "description": "D3 Show Reel", "created_at": "2011-10-01T19:57:22Z", "updated_at": "2016-04-28T16:44:17Z", "api": ["d3.scale.category10", "d3.select", "d3.svg.line", "d3.svg.area", "d3.csv", "d3.time.format", "d3.nest", "d3.max", "d3.sum", "d3.time.scale", "d3.scale.linear", "d3.min", "d3.timer", "d3.scale.ordinal", "d3.range", "d3.layout.stack", "d3.zip.apply", "d3.layout.pie", "d3.svg.arc", "d3.interpolate"], "readme": "The first 15 seconds of the D3 show reel. See full video at <http://vimeo.com/29862153>. Includes seamless transitions between the following visualization types:\n\n* lines\n* horizons\n* areas\n* stacked areas\n* streamgraph\n* overlapping areas\n* grouped bars\n* stacked bars\n* bars\n* donut\n\nAdmittedly, these aren\u2019t the most useful visualizations; their purpose is not to inform but to demonstrate D3\u2019s capability for producing dynamic visualizations with custom transitions. They *do* show real data (the monthly closing price for ten years\u2019 worth of stock data), but I didn\u2019t include axes for date or price. See the [axis component](http://bl.ocks.org/1166403) for a better example. Also, the stacked visualizations aren\u2019t especially meaningful, unless you imagine owning a portfolio with equal parts AAPL, AMZN, IBM and MSFT. Similarly, the bars and donuts represent the *average* price (or sum) during this time period.", "uid": "mbostock_1256572"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.8/d3.min.js\"></script>\n  <style>\n    circle {\n      opacity: 0.5208;\n    }\n    body {\n        font-family: futura;\n    }\n    h2.title {\n      color: black;\n      text-align: center;\n    }\n    .axis {\n      font-family: arial;\n      font-size: 0.7em;\n    }\n    text {\n      fill: black;\n      stroke: none;\n    }\n    .label {\n      font-size: 1.5em;\n    }\n    path {\n      fill: none;\n      stroke: black;\n      stroke-width: 1px;\n    }\n    .tick {\n      fill: none;\n      stroke: black;\n    }\n    .line {\n      fill: none;\n      stroke: #4eb0bb;\n      stroke-width: 1px;\n    }\n  </style>\n  <script>\n    function draw(data) {\n    \"use strict\";\n\n    /*\n        D3.js setup code\n    */\n\n    // set margins according to Mike Bostock's margin conventions\n    // http://bl.ocks.org/mbostock/3019563\n    var margin = {top: 25, right: 40, bottom: 150, left: 75};\n    \n    // set height and width of chart\n    var width = 960 - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom;\n    \n    // specify the radius of our circles and the\n    // column we want to plot\n    var radius = 3,\n        field = 'San Francisco',\n        x_field = \"number_of_reviews\",\n        y_field = 'price',\n        size_field = 'reviews_per_month';\n  \n    // Append the title for the graph\n    d3.select(\"body\")\n        .append(\"h2\")\n        .text(field + \" Listings\")\n        .attr('class', 'title');\n    \n    // append the SVG tag with height and width to accommodate for margins\n    var svg = d3.select(\"body\")\n                .append(\"svg\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                .append('g')\n                    .attr('class','chart')\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    // remove outlier values\n    data = data.filter(function(d) {\n      return d[y_field] < 1000;\n    });\n\n    // bind our data to svg circles for the scatter plot\n    svg.selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n      \n      // maximum price\n      var max_y = d3.max(data, function(d) {\n          return +d[y_field];\n      });\n\n      // get min/max review count\n      var review_extent = d3.extent(data, function(d){\n          return +d[x_field];\n      });\n\n      // get min/max host listings count\n      var host_extent = d3.extent(data, function(d){\n          return +d[size_field];\n      });\n\n      // Create x-axis scale mapping dates -> pixels\n      var review_scale = d3.scale.linear()\n          .range([0, width])\n          .domain(review_extent);\n\n      // Create y-axis scale mapping price -> pixels\n      var measure_scale = d3.scale.linear()\n          .range([height, 0])\n          .domain([0, max_y]);\n\n      // Create y-axis scale mapping price -> pixels\n      var host_scale = d3.scale.pow().exponent(1.5)\n          .range([1, 10])\n          .domain(host_extent);\n\n      // create scale for color bars\n      var color = d3.scale.category10();\n      \n      // Create D3 axis object from time_scale for the x-axis\n      var x_axis = d3.svg.axis()\n          .scale(review_scale);\n\n      // Create D3 axis object from measure_scale for the y-axis\n      var measure_axis = d3.svg.axis()\n          .scale(measure_scale)\n          .orient(\"left\");\n\n      // Append SVG to page corresponding to the D3 x-axis\n      svg.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', \"translate(0,\" + height + \")\")\n          .call(x_axis)\n      \t\t.append('text')\n            .attr('class', 'label')\n            .attr(\"x\", width / 2 )\n            .attr('y', 50)\n            .text(\"# of Reviews\")\n            .style('text-anchor', 'middle');\n\n      // Append SVG to page corresponding to the D3 y-axis\n      svg.append('g')\n          .attr('class', 'y axis')\n          .call(measure_axis);\n\n      // add label to y-axis\n      var y_label = d3.select(\".y.axis\")\n          .append(\"text\")\n          .attr('class', 'label')\n          .text(\"Price\")\n          .attr(\"transform\", \"rotate(-90)\");\n      \n      // center y axis label\n      y_label.attr(\"x\", -(height / 2)).attr('y', -40)\n            .style(\"text-anchor\", \"middle\");\n\n      // based on the data bound to each svg circle,\n      // change its center-x (cx) and center-y (cy)\n      // coordinates\n      d3.selectAll('circle')\n          .attr('cx', function(d) {\n              return review_scale(+d[x_field]);\n          })\n          .attr('cy', function(d) {\n              return measure_scale(+d[y_field]);\n          })\n          .attr('r', function(d) {\n            return host_scale(+d[size_field]);\n          })\n          .style('fill', function(d) {\n            return color(d['room_type']);\n          });\n      \n            // append a legend\n      var legend = svg.selectAll(\".legend\")\n          .data(color.domain().slice().reverse())\n        .enter().append(\"g\")\n          .attr(\"class\", \"legend\")\n          .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n      // append the colored square for legend\n      legend.append(\"rect\")\n          .attr(\"x\", width - 18)\n          .attr(\"width\", 18)\n          .attr(\"height\", 18)\n          .style(\"fill\", color);\n\n      // append the text for the legend\n      legend.append(\"text\")\n          .attr(\"x\", width - 24)\n          .attr(\"y\", 9)\n          .attr(\"dy\", \".35em\")\n          .style(\"text-anchor\", \"end\")\n          .text(function(d) { return d; });\n    }\n  </script>\n</head>\n  <body>\n    <script>\n      /*\n      Use D3 to load the CSV file and pass\n      the contents of it to the draw function.\n      */\n      d3.csv(\"http://jay-oh-en.github.io/interactive-data-viz/data/airbnb/listings.csv\", draw);\n    </script>\n  </body>\n</html>", "description": "D3.js Legends", "created_at": "2016-04-03T07:30:33Z", "updated_at": "2016-04-07T15:30:28Z", "api": ["d3.select", "d3.max", "d3.extent", "d3.scale.linear", "d3.scale.pow", "d3.scale.category10", "d3.svg.axis", "d3.selectAll", "d3.csv"], "readme": "[![Join the chat at https://gitter.im/Jay-Oh-eN/data-scientists-guide-apache-spark](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Jay-Oh-eN/interactive-data-viz?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThese are the materials for my workshop on creating interactive data visualizations with D3! We will be using the following two tools to work through the exercises:\n\n* [bl.ocks.org](http://bl.ocks.org/): D3.js Gist renderer and online community\n* [Building Blocks](http://blockbuilder.org/about): In-browser interactive D3.js bl.ock editor\n\nAnd please do not hesitate to reach out to me directly via email at jondinu@gmail.com or over twitter @clearspandex\n\n> Throughout this workshop, you will learn how to make an interactive map of AirBnB listings in SF to better understand the companies impact on the city.\n\n### Exercises\n\n* [Part 1](15f52d2ec0b035b53c6f): simple bubble chart visualizing 3 dimensions of the data.\n  * [solution (you are here \ud83d\udc47)](1ca89dc69bcc18f3f4c0) \n* [Part 2](a29e820cb6d8f3a84249): thematic map of AirBnB listings distribution across SF neighborhoods.\n  * [solution](a6e0ca2e13082ec099da) \n* [Final](b8ef4734abad1c644221): interactive linked map and line plot of AirBnB activity per each neighborhood in SF.\n\n### The Data\n\nThe [data](http://insideairbnb.com/get-the-data.html) comes from [Inside AirBnB](http://insideairbnb.com/index.html) and it is available below under a [Creative Commons CC0 1.0 Universal (CC0 1.0) \"Public Domain Dedication\"](http://creativecommons.org/publicdomain/zero/1.0/) license.\n\n> Inside AirBnB is an independent, non-commercial set of tools and data that allows you to explore how Airbnb is really being used in cities around the world.\n\n---\n\nGithub repo: [https://github.com/Jay-Oh-eN/interactive-data-viz](https://github.com/Jay-Oh-eN/interactive-data-viz)\n\nArchival event links: \n\n* [Open Data Science Conference SF 2015](http://opendatascicon.com/detailed-speaker-page/#jonathan-dinu)\n* [DataWeek 2015](https://integrate2015.sched.org/event/4Hmk/introduction-to-data-science-interactive-data-visualozation-with-d3js)\n\n[mongoose]: http://cesanta.com/mongoose.shtml\n[sublime]: http://www.sublimetext.com/2\n[chrome]: https://www.google.com/chrome/browser/desktop/\n[zip]: https://github.com/Jay-Oh-eN/hands-on-d3/archive/master.zip\n[gitit]: http://jlord.us/git-it/\n\n[sf-asthma]: https://data.sfgov.org/Health-and-Social-Services/Climate-and-Health-Data/paqg-zyqx\n[grayarea]: http://grayarea.org/\n[swiss]: http://www.swissnexsanfrancisco.org/\n[lift]: http://liftconference.com/lift15\n[data-canvas-img]: images/data-canvas.png\n[data-canvas]: http://datacanvas.org/\n[data-canvas-map]: http://map.datacanvas.org/\n[dump]: https://s3.amazonaws.com/localdata-export/datacanvas/full.zip\n[data-canvas-data]: http://map.datacanvas.org/#!/data\n[dictionary]: https://github.com/Jay-Oh-eN/hands-on-d3/blob/master/data/dictionary.pdf\n\n[d3]: http://d3js.org/\n[dimple]: http://dimplejs.org/\n[moment]: http://momentjs.com/\n[d3plus]: http://d3plus.org/\n[rickshaw]: http://code.shutterstock.com/rickshaw/\n[dc.js]: http://dc-js.github.io/dc.js/\n[nvd3]: http://nvd3.org/\n[c3]: http://c3js.org/\n[raw]: http://app.raw.densitydesign.org/\n[queue]: https://github.com/mbostock/queue\n[parallel]: https://syntagmatic.github.io/parallel-coordinates/\n\nforked from <a href='http://bl.ocks.org/Jay-Oh-eN/'>Jay-Oh-eN</a>'s block: <a href='http://bl.ocks.org/Jay-Oh-eN/1ca89dc69bcc18f3f4c0'>Civic Impact through Data Visualization: Solution 1</a>", "uid": "Jay-Oh-eN_9337d41b59b2bcee149004e811d5b266"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  body { font-family: sans-serif; }\n</style>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<body>\n  <script>\n    // var resource = 'https://dataclips.heroku.com/vgyygvzqtezwpmwpcmmjlluamjlk.json';\n    // Replaced with local copy (CORS)\n    \n    var format = d3.time.format(\"%Y-%m-%d\"),\n        margin = {top: 20, right: 20, bottom: 30, left: 40},\n        width = 960 - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom;\n\n    var force = d3.layout.force()\n          .gravity(0.1)\n          .charge(function(d, i) { return d.amount * -1; })\n          .size([width, height]);\n\n    var color = d3.scale.category10();\n  \n    var svg = d3.select(\"body\")\n                .append(\"svg\")\n                  .attr(\"width\", width + margin.left + margin.right)\n                  .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n    d3.json('sample.json', function(error, data) {\n      console.log(data)\n      data.values.forEach(function(d) {\n        d.date = format.parse(String(d[0]).substring(0, 10));\n        d.amount = d[1];\n        console.log(\"Spent $\" + d.amount + \" on \" + d.date);\n      });\n      \n      force\n        .nodes(data.values)\n        .start();\n      \n      var node = svg.selectAll(\"g.node\")\n          .data(data.values)\n          .enter()\n          .append(\"g\")\n            .attr(\"class\", \"node\")\n            .call(force.drag);\n      \n      node.append(\"circle\")\n            .attr(\"r\", function(d) { return d.amount * .1; })\n            .attr(\"opacity\", .67)\n            .attr(\"fill\", function(d){\n              if (d.amount <= 800) {\n                return \"#27ae60\"  // Green\n              } else if (d.amount > 800 && d.amount <= 900) {\n                return \"#f1c40f\"  // Yellow\n              } else if (d.amount > 900 && d.amount <= 1000) {\n                return \"#e67e22\"  // Orange\n              } else {\n                return \"#c0392b\"  // Red\n              }\n            });\n      \n      node.append(\"text\")\n            .text(function(d){ return d.date.toString().substring(4,7); })\n            .attr('fill', '#fff')\n            .attr('font-size', 24)\n            .attr('dx', -16)\n            .attr('dy', -5);\n            \n      node.append(\"text\")\n            .text(function(d){ return '$' + d.amount; })\n            .attr('fill', '#fff')\n            .attr('dx', -25)\n            .attr('dy', 15);\n            \n      \n      force.on(\"tick\", function() {\n        node\n          .attr('transform', function(d) { return 'translate('+ Math.max(20, Math.min(width-20, d.x)) + ',' + Math.max(20, Math.min(height-20, d.y)) + ')'; });\n      });\n    })\n  \n  </script>\n</body>", "description": "DataClips + D3.js Force-Directed", "created_at": "2013-06-05T20:04:11Z", "updated_at": "2015-12-18T03:18:56Z", "api": ["d3.time.format", "d3.layout.force", "d3.scale.category10", "d3.select", "d3.json"], "readme": "Second demo of consuming Heroku DataClips with D3.js.\n\nData source: <https://dataclips.heroku.com/vgyygvzqtezwpmwpcmmjlluamjlk> (.json)", "uid": "dustinlarimer_5716840"}, {"code": "<html>\n<head>\n  <title>d3.svg.ribbon with Napoleon's March</title>\n  <meta charset=\"utf-8\" />\n<script src=\"http://d3js.org/d3.v3.min.js\" type=\"text/JavaScript\"></script>\n<script src=\"d3.svg.ribbon.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    height: 2000px;\n    width: 2000px;\n  }\n\n</style>\n<body>\n\n<div id=\"viz\">\n  <svg>\n  </svg>\n</div>\n</body>\n  <footer>\n\n<script>\n\ncolorScale = d3.scale.ordinal().range([\"#96abb1\", \"#313746\", \"#b0909d\", \"#687a97\", \"#292014\"])\n\narmy = [\n    /* Group 1 */\n    {lon:24.0,  lat:54.9,  size:340000, dir:1,  group:1},\n    {lon:24.5,  lat:55.0,  size:340000, dir:1,  group:1},\n    {lon:25.5,  lat:54.6,  size:340000, dir:1,  group:1},\n    {lon:26.0,  lat:54.7,  size:320000, dir:1,  group:1},\n    {lon:27.0,  lat:54.8,  size:300000, dir:1,  group:1},\n    {lon:28.0,  lat:54.9,  size:280000, dir:1,  group:1},\n    {lon:28.5,  lat:55.0,  size:240000, dir:1,  group:1},\n    {lon:29.0,  lat:55.1,  size:210000, dir:1,  group:1},\n    {lon:30.0,  lat:55.2,  size:180000, dir:1,  group:1},\n    {lon:30.3,  lat:55.3,  size:175000, dir:1,  group:1},\n    {lon:32.0,  lat:54.8,  size:145000, dir:1,  group:1},\n    {lon:33.2,  lat:54.9,  size:140000, dir:1,  group:1},\n    {lon:34.4,  lat:55.5,  size:127100, dir:1,  group:1},\n    {lon:35.5,  lat:55.4,  size:100000, dir:1,  group:1},\n    {lon:36.0,  lat:55.5,  size:100000, dir:1,  group:1},\n    {lon:37.6,  lat:55.8,  size:100000, dir:1,  group:1},\n    {lon:37.65, lat:55.65, size:100000, dir:-1, group:1},\n    {lon:37.45, lat:55.62, size:98000,  dir:-1, group:1},\n    {lon:37.0,  lat:55.0,  size:97000,  dir:-1, group:1},\n    {lon:36.8,  lat:55.0,  size:96000,  dir:-1, group:1},\n    {lon:35.4,  lat:55.3,  size:87000,  dir:-1, group:1},\n    {lon:34.3,  lat:55.2,  size:55000,  dir:-1, group:1},\n    {lon:33.3,  lat:54.8,  size:37000,  dir:-1, group:1},\n    {lon:32.0,  lat:54.6,  size:24000,  dir:-1, group:1},\n    {lon:30.4,  lat:54.4,  size:20000,  dir:-1, group:1},\n    {lon:29.2,  lat:54.3,  size:20000,  dir:-1, group:1},\n    {lon:29.13, lat:54.29, size:50000,  dir:-1, group:1}, /* joined by group 2 */\n    {lon:28.5,  lat:54.2,  size:50000,  dir:-1, group:1},\n    {lon:28.3,  lat:54.3,  size:48000,  dir:-1, group:1},\n    {lon:26.8,  lat:54.3,  size:12000,  dir:-1, group:1},\n    {lon:26.8,  lat:54.4,  size:14000,  dir:-1, group:1},\n    {lon:25.0,  lat:54.4,  size:8000,   dir:-1, group:1},\n    {lon:24.4,  lat:54.4,  size:4000,   dir:-1, group:1},\n    {lon:24.2,  lat:54.4,  size:4000,   dir:-1, group:1},\n    {lon:24.1,  lat:54.4,  size:4000,   dir:-1, group:1},\n    /* Group 2 */\n    {lon:24.0,  lat:55.1,  size:60000,  dir:1,  group:2},\n    {lon:24.5,  lat:55.2,  size:60000,  dir:1,  group:2},\n    {lon:25.5,  lat:54.7,  size:60000,  dir:1,  group:2},\n    {lon:26.6,  lat:55.7,  size:40000,  dir:1,  group:2},\n    {lon:27.4,  lat:55.6,  size:33000,  dir:1,  group:2},\n    {lon:28.7,  lat:55.5,  size:33000,  dir:1,  group:2},\n    {lon:28.7,  lat:55.5,  size:33000,  dir:-1, group:2},\n    {lon:29.2,  lat:54.29, size:30000,  dir:-1, group:2},\n    /* Group 3 */\n    {lon:24.0,  lat:55.2,  size:22000,  dir:1,  group:3},\n    {lon:24.5,  lat:55.3,  size:22000,  dir:1,  group:3},\n    {lon:24.6,  lat:55.8,  size:6000,   dir:1,  group:3},\n    {lon:24.6,  lat:55.8,  size:6000,   dir:-1, group:3},\n    {lon:24.2,  lat:54.4,  size:6000,   dir:-1, group:3},\n    {lon:24.1,  lat:54.4,  size:6000,   dir:-1, group:3}\n];\n\nprojection = d3.geo.equirectangular().translate([-3300,7800]).scale(8000);\nsizeScale = d3.scale.linear().domain([6000,340000]).range([1,10])\n\nribbon = d3.svg.ribbon()\n  .x(function(d) {return projection([d.lon, d.lat])[0]})\n  .y(function(d) {return projection([d.lon, d.lat])[1]})\n  .r(function(d) {return sizeScale(d.size)});\n\ndrag = d3.behavior.drag().on(\"drag\", function (d) {\n  d.x = d3.event.x;\n  d.y = d3.event.y;\n  redraw();\n});\n\nvar groupNest = d3.nest().key(function (d) {return d.group}).entries(army);\n\nd3.select(\"svg\")\n.selectAll(\"path.minard\")\n.data(groupNest)\n.enter()\n.append(\"path\")\n.attr(\"class\", \"minard\")\n.style(\"fill\", function (d) {return colorScale(d.key)})\n.style(\"stroke\", \"gray\")\n.style(\"stroke-opacity\", 0.15)\n.style(\"stroke-width\", \"2px\")\n.attr(\"d\", function (d) {return ribbon(d.values)})\n\n</script>\n  </footer>\n\n</html>\n", "description": "Napoleon's March with d3.svg.ribbon", "created_at": "2015-09-08T07:51:24Z", "updated_at": "2015-09-08T07:51:24Z", "api": ["d3.svg.line", "d3.scale.ordinal", "d3.geo.equirectangular", "d3.scale.linear", "d3.svg.ribbon", "d3.behavior.drag", "d3.nest", "d3.select"], "readme": "An example of [d3.svg.ribbon](https://github.com/emeeks/d3.svg.ribbon) using Napoleon's March through Russia made famous by Minard's map. Dataset comes from Ben Schmidt's use of it in his excellent [d3.trail layout](https://github.com/bmschmidt/D3-trail).\n\nThe pattern for using d3.svg.ribbon with geodata is simply to factor the projection into the accessors:\n\n```\nprojection = d3.geo.equirectangular().translate([-3300,7800]).scale(8000);\nsizeScale = d3.scale.linear().domain([6000,340000]).range([1,10])\n\nribbon = d3.svg.ribbon()\n  .x(function(d) {return projection([d.lon, d.lat])[0]})\n  .y(function(d) {return projection([d.lon, d.lat])[1]})\n  .r(function(d) {return sizeScale(d.size)});\n```\n\nforked from <a href='http://bl.ocks.org/emeeks/'>emeeks</a>'s block: <a href='http://bl.ocks.org/emeeks/a0b5a95c999628547494'>Napoleon's March with d3.svg.ribbon</a>", "uid": "renecnielsen_d44783b9a0a12f3ccc3a"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n\n    <title>Collapsible Tree Example</title>\n\n    <style>\n\n\t.node circle {\n\t  fill: #fff;\n\t  stroke: steelblue;\n\t  stroke-width: 3px;\n\t}\n\n\t.node text { font: 12px sans-serif; }\n\n\t.link {\n\t  fill: none;\n\t  stroke: #ccc;\n\t  stroke-width: 2px;\n\t}\n\t\n    </style>\n\n  </head>\n\n  <body>\n\n<!-- load the d3.js library -->\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\t\n<script>\n\nvar treeData = [\n  {\n    \"name\": \"Top Level\",\n    \"parent\": \"null\",\n    \"children\": [\n      {\n        \"name\": \"Level 2: A\",\n        \"parent\": \"Top Level\",\n        \"children\": [\n          {\n            \"name\": \"Son of A\",\n            \"parent\": \"Level 2: A\"\n          },\n          {\n            \"name\": \"Daughter of A\",\n            \"parent\": \"Level 2: A\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Level 2: B\",\n        \"parent\": \"Top Level\"\n      }\n    ]\n  }\n];\n\n// ************** Generate the tree diagram\t *****************\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n\twidth = 960 - margin.right - margin.left,\n\theight = 500 - margin.top - margin.bottom;\n\t\nvar i = 0;\n\nvar tree = d3.layout.tree()\n\t.size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n\t.projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.right + margin.left)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nroot = treeData[0];\n  \nupdate(root);\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n\t  links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Declare the nodes\u2026\n  var node = svg.selectAll(\"g.node\")\n\t  .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter the nodes.\n  var nodeEnter = node.enter().append(\"g\")\n\t  .attr(\"class\", \"node\")\n\t  .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeEnter.append(\"circle\")\n\t  .attr(\"r\", 10)\n\t  .style(\"fill\", \"#fff\");\n\n  nodeEnter.append(\"text\")\n\t  .attr(\"x\", function(d) { \n\t\t  return d.children || d._children ? -13 : 13; })\n\t  .attr(\"dy\", \".35em\")\n\t  .attr(\"text-anchor\", function(d) { \n\t\t  return d.children || d._children ? \"end\" : \"start\"; })\n\t  .text(function(d) { return d.name; })\n\t  .style(\"fill-opacity\", 1);\n\n  // Declare the links\u2026\n  var link = svg.selectAll(\"path.link\")\n\t  .data(links, function(d) { return d.target.id; });\n\n  // Enter the links.\n  link.enter().insert(\"path\", \"g\")\n\t  .attr(\"class\", \"link\")\n\t  .attr(\"d\", diagonal);\n\n}\n\n</script>\n\t\n  </body>\n</html>\n", "description": "Simple d3.js tree diagram", "created_at": "2014-01-08T20:15:11Z", "updated_at": "2016-01-02T15:29:09Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select"], "readme": "This is a simple d3.js tree diagram used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is derived from the Mike Bostock [Collapsible tree example](http://bl.ocks.org/mbostock/4339083) but it is a VERY cut down version without the ability to update (collapse).", "uid": "d3noob_8323795"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Improved Canvas (Transform) - d3.carto</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .region {\n    stroke: white;\n  }\n  \n</style>\n<script>\n\n  function makeSomeMaps() {\n    pathSource = 0;\n\n    map = d3.carto.map();\n    \n    var regionColor = [\"lightgray\",\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"];\n    var colorScale = d3.scale.linear().domain([0,5,26]).range([\"green\",\"yellow\", \"red\"])\n    var sizeScale = d3.scale.linear().domain([50,1000]).range([1,6])\n\n    d3.select(\"#map\").call(map);\n\n    map.centerOn([-88,39],\"latlong\");\n    map.setScale(2);\n\n    wcLayer = d3.carto.layer.tile();\n    wcLayer\n    .tileType(\"mapbox\")\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Base\")\n    .visibility(true)\n\n    regionLayer = d3.carto.layer.geojson();\n    regionLayer\n    .path(\"ecoregions.json\")\n    .label(\"Regions\")\n    .cssClass(\"region\")\n    .renderMode(\"canvas\")\n    .markerColor(function(d) {return regionColor[d.a]})\n    .clickableFeatures(true);\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"all_sites.csv\")\n    .label(\"Cities\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"canvas\")\n    .markerSize(function(d) {return sizeScale(d.pop)})\n    .markerColor(function(d) {return colorScale(d.capacity)})\n    .x(function(d) {return d.xcoord})\n    .y(function(d) {return d.ycoord});\n    \n    map.addCartoLayer(wcLayer).addCartoLayer(regionLayer).addCartoLayer(csvLayer);\n    map.refresh();\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\">\n</div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>\n", "description": "Canvas Styling (Transform) - d3.carto", "created_at": "2014-09-10T00:26:56Z", "updated_at": "2015-08-29T14:06:16Z", "api": ["d3.carto.map", "d3.scale.linear", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.csv"], "readme": "Canvas element styling with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** does not use d3.selectAll like [SVG element styling](http://bl.ocks.org/emeeks/f8c0220c54ec8347ea95) because these aren't SVG elements.\n\nThis relies on using cartoLayer.markerColor() and cartoLayer.markerSize() and setting them to function based on the data. If you don't set markerColor, then it will rely on CSS styling of the associated class.\n\n[This example is also available as a globe](http://bl.ocks.org/emeeks/aea3c7fc1acc0eca4d44).", "uid": "emeeks_e6f72fbca42e77be0eb3"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<style>\n\n.map {\n  fill: none;\n  stroke: #777;\n  stroke-opacity: .5;\n  stroke-width: .5px;\n}\n\n.land {\n  fill: #999;\n}\n\n.boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n</style>\n\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"pathlayout.js\"></script>\n<script>\nvar width = 600,\n    height = 500;\n\nvar projection = d3.geo.mercator()\n    .scale(5*(width + 1) / 2 / Math.PI)\n    .translate([width / 2, height / 2])\n    .rotate([-125, -15, 0])\n    .precision(.1);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nd3.json(\"/mbostock/raw/4090846/world-50m.json\", function(error, world) {\nd3.json(\"track.json\", function(error, track) {\n\n    var color_scale = d3.scale.quantile().domain([1, 5]).range(colorbrewer.YlOrRd[5]);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var trail = d3.layout.trail()\n        .positioner(function(d) {return projection([d.lon,d.lat]);})\n        .coordType('xy');\n\n    var trail_layout = trail.data(track).layout();\n\n    svg.insert(\"path\", \".map\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n    svg.insert(\"path\", \".map\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n\n    var hayan_trail = svg.selectAll(\"d\").data(trail_layout);\n\n    hayan_trail.enter()\n        .append('line')\n        .attr(\"x1\",function(d) {return d.x1}) \n        .attr(\"x2\",function(d) {return d.x1})\n        .attr(\"y1\",function(d) {return d.y1}) \n        .attr(\"y2\",function(d) {return d.y1}) \n        .attr(\"class\",\"line\")\n        .style(\"stroke-width\",4)\n        .attr(\"stroke\", function(d){return color_scale(d.class);})\n        .transition()\n        .ease(\"linear\")\n        .delay(function(d,i) {return i*500})\n        .duration(500)\n        .attr(\"x2\",function(d) {return d.x2})\n        .attr(\"y2\",function(d) {return d.y2}) \n    ;\n    \n});\n});\n</script>", "description": "D3 Trail Layout animated map", "created_at": "2014-07-07T18:22:08Z", "updated_at": "2015-08-29T14:03:37Z", "api": ["d3.geo.mercator", "d3.geo.path", "d3.json", "d3.scale.quantile", "d3.select", "d3.layout.trail"], "readme": "This an example using the [D3 trail layout](https://github.com/bmschmidt/D3-trail) made by [Benjamin Schmidt](https://github.com/bmschmidt).\nIn this case, the animated Hayian Typhoon track map is shown, with the colour changing with the typhoon class, as in [this example](http://bl.ocks.org/rveciana/10743959), but in an easier and cleaner way.\n\nThere is a blog entry explaining this example at [GeoExamples](http://geoexamples.blogspot.com/2014/07/using-d3-trail-layout-to-draw-hayian.html)", "uid": "rveciana_2986e55a01c7008d4b5b"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - custom infobox formatters</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .countryInfobox {\n    color: pink;\n    font-style: italic;\n    padding: 20px;\n  }\n  rect.bluesquare {\n    fill: #4682B4;\n    stroke: black;\n    stroke-width: 1px;\n}\n.countryborders {\n    fill: rgba(0,0,0,0);\n    stroke-width: 1px;\n    stroke: gray;\n    cursor: pointer;\n}\n\n.roads {\n    stroke: brown;\n    stroke-width: 1px;\n    fill: none;\n}\n\n.halffilledcountries {\n    fill: rgba(224,224,209,0.5);\n    stroke-width: 1px;\n    stroke: black;\n    opacity: 1;    \n}\n\n</style>\n<script>\n\n    function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    tileLayer = d3.carto.layer.tile();\n    tileLayer\n    .path(\"examples.map-zgrqqx0w\")\n    .label(\"Base\")\n    .on(\"load\", recenter);\n\n    geojsonLayer = d3.carto.layer.geojson();\n    geojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/world.geojson\")\n    .label(\"GeoBorders\")\n    .cssClass(\"countryborders\")\n    .renderMode(\"canvas\")\n    .on(\"load\", createFeatureLayer);\n    \n    topojsonLayer = d3.carto.layer.topojson();\n    topojsonLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\")\n    .label(\"TopoRoutes\")\n    .cssClass(\"roads\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true);\n\n    csvModal = d3.carto.modal();\n    csvModal.formatter(\n      function(d) {return \"<h1>\" + d.label + \" in modern day \" + d.modern + \"</h1>\"}\n    )\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .type(\"csv\")\n    .path(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(8)\n    .x(\"x\")\n    .y(\"y\")\n    .modal(csvModal)\n    .clickableFeatures(true);\n\n    map.addCartoLayer(tileLayer);\n    map.addCartoLayer(topojsonLayer);\n    map.addCartoLayer(geojsonLayer);\n    map.addCartoLayer(csvLayer);\n\n    function recenter() {\n      map.centerOn([3,43],\"latlong\");\n    }\n    \n    function createFeatureLayer() {\n      var featuresArray = [];\n      var mapLayers = map.layers();\n      mapLayers.forEach(function (layer) {\n        if (layer.label() == \"GeoBorders\") {\n          featuresArray = layer.features();\n        }\n      })\n     shortNameCountries = featuresArray.filter(function(d) {return d.properties.name.length < 7})\n\n    featureModal = d3.carto.modal();\n    featureModal.formatter(\n      function(d) {return \"<span class='countryInfobox'>The country of \" + d.properties.name + \" has a short name</span>\"}\n    )\n    \n    featureLayer = d3.carto.layer.featureArray();\n    featureLayer\n    .features(shortNameCountries)\n    .label(\"Feature Array\")\n    .cssClass(\"halffilledcountries\")\n    .renderMode(\"svg\")\n    .clickableFeatures(true)\n    .modal(featureModal);\n    \n    map.addCartoLayer(featureLayer);\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Custom Infobox Formatter - d3.carto.map", "created_at": "2014-08-26T21:50:55Z", "updated_at": "2015-08-29T14:05:45Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.topojson", "d3.carto.modal", "d3.carto.layer.csv", "d3.carto.layer.featureArray"], "readme": "A demonstration of custom modal infoboxes from **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nIf you click on a site point (the pink circles) you'll see an infobox that reads something like \"Lugdunum Convenarum in modern day France\" whereas if you click on a country, you'll see an infobox that reads something like \"The country of Spain has a short name\".\n\nHow a modal handles the data in a datapoint for display is handled by defining a custom formatter for the modal, which requires that you create a new d3.carto.modal. The new modal is assigned to a d3.carto.layer using .modal() as shown in the example for the CSV Points and Feature Array layers.\n\nFormatters are defined using the standard D3 accessor syntax. The default formatter, demonstrated in the [basic modal example](http://bl.ocks.org/emeeks/433a9b04f82a1c78af4b). Since you know your data better than d3.carto does, you can specify how to parse what attributes in as specific a manner as you want. The function should return a string of HTML suitable to be dropped into the modal div.\n\nThe key lines for defining the modal and formatter are:\n```\n    csvModal = d3.carto.modal();\n    csvModal.formatter(\n      function(d) {return \"<h1>\" + d.label + \" in modern day \" + d.modern + \"</h1>\"}\n    )\n```\n\nand:\n```\n    featureModal = d3.carto.modal();\n    featureModal.formatter(\n      function(d) {return \"<p class='countryInfobox'>The country of \" + d.properties.name + \" has a short name</p>\"}\n    )\n```", "uid": "emeeks_905bb4f399e0855e08fe"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 | reusable heatmap calendar</title> \n  <meta name=\"author\" content=\"Sundar Singh | eesur.com\">\n  \n  <link rel=\"stylesheet\" href=\"main.css\">\n  <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.min.js\" charset=\"utf-8\"></script>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment.min.js\"></script>\n</head>\n<body>\n\n  <article>\n    <header>\n      <span id=\"info\">info</span> \n    </header>\n    <section id=\"heatmap\"></section>\n  </article> \n\n  <script> d3.eesur = {}; //namespace  </script>\n  <script src=\"d3_code_heatmap_cal.js\"></script>\n  <script>\n  // *****************************************\n  // render chart\n  // *****************************************\n  (function() {\n      'use strict';\n      \n      var nestedData;\n      var parseDate = d3.time.format('%Y-%m-%d').parse;\n\n      // create chart\n      var heatChart = d3.eesur.heatmap()\n          .colourRangeStart('#FDBB30')\n          .colourRangeEnd('#EE3124')\n          .height(800)\n          .startYear('2011')\n          .endYear('2016')\n          .on('_hover', function (d, i) {\n              var f = d3.time.format('%B %d, %Y');\n              d3.select('#info')\n                  .text(function () {\n                      return 'date: ' + f(d) + ' | value: ' + nestedData[d];\n                  });\n          });\n\n      // apply after nesting data\n      d3.json('heatmap_data.json', function(error, data) {\n\n          if (error) return console.warn(error);\n        \n          nestedData = d3.nest()\n              .key(function (d) { return parseDate(d.date.split(' ')[0]); })\n              .rollup(function (n) { \n                  return d3.sum(n, function (d) { \n                      return d.amount; // key\n                  }); \n              })\n              .map(data);\n\n          // console.log(nestedData);\n\n          // render chart\n          d3.select('#heatmap')\n              .datum(nestedData)\n              .call(heatChart);\n\n      });\n\n  }());\n\n  d3.select(self.frameElement).style('height', '900px');\n\n  </script>\n\n</body>\n\n</html>\n\n\n", "description": "d3 | reusable heatmap calendar", "created_at": "2015-12-08T18:10:09Z", "updated_at": "2015-12-08T18:10:12Z", "api": ["d3.dispatch", "d3.scale.linear", "d3.range", "d3.min", "d3.time.format", "d3.select", "d3.time.days", "d3.time.months", "d3.extent", "d3.values", "d3.rebind", "d3.eesur.heatmap", "d3.json", "d3.nest", "d3.sum"], "readme": "Calendar heatmap adapted into a reusable chart for quick testing\n\n> loading of ~~CSV~~ json data, which is then quantized into a diverging color scale. The values are visualized as coloured cells per day. Days are arranged into columns by week, then grouped by month and years. \n\n[source](http://bl.ocks.org/mbostock/4063318)\n", "uid": "eesur_5fbda7f410d31da35e42"}, {"code": "<!-- load in D3 and Chart constructor scripts -->\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.17/d3.min.js\"></script>\n<script src=\"chart.js\"></script>\n\n<style>\n/* a little bit of CSS to make the chart readable */\n.axis path, .tick line {\n    fill: none;\n    stroke: #333;\n}\n</style>\n\n<!-- here's the div our chart will be injected into -->\n<div class=\"chart-container\" style=\"max-width: 1000px;\"></div>\n\n<!-- these will be made useful in the script below -->\n<button class=\"color\" data-color=\"red\">red bars</button>\n<button class=\"color\" data-color=\"green\">green bars</button>\n<button class=\"color\" data-color=\"blue\">blue bars</button>\n<button class=\"data\">change data</button>\n\n<script>\n// create new chart using Chart constructor\nvar chart = new Chart({\n\telement: document.querySelector('.chart-container'),\n    data: d3.range(1000).map(d3.random.normal()),\n    bins: 20\n});\n\n// change line colour on click\nd3.selectAll('button.color').on('click', function(){\n    var color = d3.select(this).text().split(' ')[0];\n    chart.setColor( color );\n});\n\n// change data on click to something randomly-generated\nd3.selectAll('button.data').on('click', function(){\n    chart.setData(d3.range(1000).map(function(){return Math.random() * 50}));\n});\n\n// redraw chart on each resize\n// in a real-world example, it might be worth \u2018throttling\u2019 this\n// more info: http://sampsonblog.com/749/simple-throttle-function\nd3.select(window).on('resize', function(){\n    chart.draw();\n});\n\n</script>\n", "description": "Reusable D3 Histograms", "created_at": "2016-05-23T21:20:10Z", "updated_at": "2016-05-25T17:45:12Z", "api": ["d3.select", "d3.scale.linear", "d3.extent", "d3.layout.histogram", "d3.max", "d3.svg.axis", "d3.min", "d3.format", "d3.range", "d3.random.normal", "d3.selectAll"], "readme": "", "uid": "nstrayer_776ca46537c557e59b994aa439fdb26c"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <style>\n    body {\n      width: 960px;\n    }\n    path {\n      stroke: white;\n      fill-rule: evenodd;\n    }\n  </style>\n  <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/lodash/2.4.1/lodash.min.js\"></script>  \n</head>\n<body>\n  <div id='viz'></div>\n  <div>\n    <button onclick=\"larger()\">Larger</button><button onclick=\"smaller()\">Smaller</button>\n  </div>\n  <script>\n    var charts = [];\n\n    d3.json(\"flare.json\", function(error, root) {\n    \n      var countAccessorFn = function(d) { return 1; };\n      var sizeAccessorFn = function(d) { return d.size; };\n\n      charts.push(makeSunburst(_.cloneDeep(root), countAccessorFn));\n      charts.push(makeSunburst(_.cloneDeep(root), sizeAccessorFn));\n\n      function makeSunburst(dataRoot, valueAccessor) {\n\n        var width = 480, height = 480;\n        var radius = (Math.min(width, height) / 2) - 60;\n        var color = d3.scale.category20c();\n        var angleScale = d3.scale.linear().range([0, 2 * Math.PI]);\n        var ringRadiusScale = d3.scale.linear().range([0, radius]);\n\n        var svg = d3.select(\"#viz\").append(\"svg\")\n            .attr({width: width, height: height});\n        \n        var container = svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height * .52 + \")\");\n\n        var partition = d3.layout.partition().sort(null).value(valueAccessor);\n        var nodes = partition.nodes(dataRoot);\n\n        var arc = d3.svg.arc()\n          .startAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, angleScale(d.x))); })\n          .endAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, angleScale(d.x + d.dx))); })\n          .innerRadius(function(d) { return Math.max(0, ringRadiusScale(d.y)); })\n          .outerRadius(function(d) { return Math.max(0, ringRadiusScale(d.y + d.dy)); });\n\n        var path = container.selectAll(\"path\")\n            .data(nodes)\n          .enter().append(\"path\")\n            .attr(\"display\", function(d) { return d.depth ? null : \"none\"; }) // hide inner ring\n            .attr(\"d\", arc)\n            .style(\"fill\", function(d) { return color((d.children ? d : d.parent).name); });\n\n        return {\n          addToRadius: function(radiusChange) {\n            radius += radiusChange;\n            ringRadiusScale.range([0, radius]);\n            // leave all data the same but redraw arcs based on new radius\n            path.transition().attr('d', arc);\n          }\n        }\n      }\n\n      d3.select(self.frameElement).style(\"height\", \"600px\");\n    });\n\n\n    function larger() {\n      charts.forEach(function(chart) {\n        chart.addToRadius(20);\n      });\n    }\n\n    function smaller() {\n      charts.forEach(function(chart) {\n        chart.addToRadius(-20);\n      });\n    }\n  </script>\n</body>\n</html>", "description": "d3.layout.partition workaround", "created_at": "2014-06-30T22:11:01Z", "updated_at": "2015-08-29T14:03:17Z", "api": ["d3.json", "d3.scale.category20c", "d3.scale.linear", "d3.select", "d3.layout.partition", "d3.svg.arc"], "readme": "Workaround for issue described in [this example](http://bl.ocks.org/explunit/ab8cf15534f7fec5ac6d), uses Lodash `cloneDeep` to make each chart have it's own copy of the data.", "uid": "explunit_e9efb830439247eea1be"}, {"code": "  <!DOCTYPE html>\n  <html>\n    <head>\n      <meta charset=utf-8 />\n      <title>Leaflet, Mapbox and D3JS test</title>\n      <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />\n      <script src='https://api.tiles.mapbox.com/mapbox.js/v2.0.1/mapbox.js'></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.11/d3.min.js\"></script>\n      <link href='https://api.tiles.mapbox.com/mapbox.js/v2.0.1/mapbox.css' rel='stylesheet' />\n      <style>\n        \n        body { margin:0; padding:0; }\n        \n        #map { \n          width: 1200px;\n          height: 800px;\n          margin: 50px auto;\n        }\n\n        svg { \n          position: relative; \n        }\n\n        path {\n          fill: #000;\n          fill-opacity: 0;\n          stroke: #fff;\n          stroke-width: 1.5px;\n        }\n\n        path:hover {\n          fill: hsl(340, 50%, 50%);\n          fill-opacity: .4;\n        }\n\n      </style>\n    </head>\n    <body>\n\n      <div id='map'></div>\n\n      <script>\n\n        /********************************************************\n          MapBox JS code credit: \n          https://www.mapbox.com/mapbox.js/example/v1.0.0/plain-leaflet/  \n        ********************************************************/\n        \n        var mapboxTiles = L.tileLayer('https://{s}.tiles.mapbox.com/v3/chenrick.k94zehfr/{z}/{x}/{y}.png');\n\n        var params = {\n          center: [0,0],\n          minZoom: 2, \n          maxZoom: 4,\n          zoom: 3,        \n        };\n\n        var map = L.map('map', params)\n            .addLayer(mapboxTiles);\n\n        /********************************************************\n          D3 JS code credit: http://bost.ocks.org/mike/leaflet/  \n        ********************************************************/\n\n        /* set up the svg object in realtionship to the Leaflet map */\n        var svg = d3.select(map.getPanes().overlayPane).append(\"svg\"),\n              g = svg.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\");\n\n        d3.json(\"ne_10m_time_zones.json\", function(collection) {\n          \n          console.log(\"collection: \", collection);\n\n          var transform = d3.geo.transform({point: projectPoint}),\n                path = d3.geo.path().projection(transform);\n\n          var feature = g.selectAll(\"path\")\n                .data(collection.features)\n              .enter().append(\"path\");\n          \n          map.on(\"viewreset\", reset);\n          reset();\n\n          function reset(){\n            var bounds = path.bounds(collection),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];    \n\n            svg .attr(\"width\", bottomRight[0] - topLeft[0])\n                  .attr(\"height\", bottomRight[1] - topLeft[1])\n                  .style(\"left\", topLeft[0] + \"px\")\n                  .style(\"top\", topLeft[1] + \"px\");\n\n            g   .attr(\"transform\", \"translate(\" + -topLeft[0] + \",\" + -topLeft[1] + \")\");\n\n            feature.attr(\"d\", path);\n          }             \n\n          function projectPoint(x, y) {\n            var point = map.latLngToLayerPoint(new L.LatLng(y, x));\n            this.stream.point(point.x, point.y);\n          }\n\n        });\n\n      </script>\n\n    </body>\n  </html>", "description": "Leaflet + D3 test", "created_at": "2014-08-16T01:45:00Z", "updated_at": "2015-08-29T14:05:22Z", "api": ["d3.select", "d3.json", "d3.geo.transform", "d3.geo.path"], "readme": "", "uid": "clhenrick_dd664d262a4c3fbe02b9"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v0.min.js\"></script>\n<style>\n\n.background {\n  fill: #a4bac7;\n}\n\n.foreground {\n  fill: none;\n  stroke: #333;\n  stroke-width: 1.5px;\n}\n\n.graticule {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n.graticule :nth-child(2n) {\n  stroke-dasharray: 2,2;\n}\n\n.land {\n  fill: #d7c7ad;\n  stroke: #766951;\n}\n\n.boundary {\n  fill: none;\n  stroke: #a5967e;\n}\n\n</style>\n<body>\n  <div id=\"current_proj_info\"></div>\n  <div id=\"myDiv\"></div>\n  \n<script>\n\nvar width = 960,\n    height = 500;\n\nvar projection = d3.geo.mercator()\n    .scale(490);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar graticule = d3.geo.graticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"path\")\n    .datum(graticule.outline)\n    .attr(\"class\", \"background\")\n    .attr(\"d\", path);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"graticule\")\n  .selectAll(\"path\")\n    .data(graticule.lines)\n  .enter().append(\"path\")\n    .attr(\"d\", path);\n\nsvg.append(\"path\")\n    .datum(graticule.outline)\n    .attr(\"class\", \"foreground\")\n    .attr(\"d\", path);\n\nd3.json(\"/d/4090846/world-110m.json\", function(error, world) {\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.object(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a.id !== b.id; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n});\n\nset_projection(new Option(\"Mercator\", \"mercator\", false, false));\n\nfunction set_projection(option) {\n  proj = option.value\n\n  projection = eval(\"d3.geo.\"+proj+\"();\");\n\n  path = d3.geo.path()\n    .projection(projection);\n\n  svg.selectAll(\"path\").transition()\n      .duration(1000)\n       .attr(\"d\", path);\n  var link = \"https://github.com/mbostock/d3/wiki/Geo-Projections#wiki-\" + proj\n  d3.selectAll(\"div#current_proj_info\").html(\"Current projection: <a href=\\\"\"+link+\"\\\">\"+option.text+\"</a>\");\n}\n\nfunction projection_selected(e){\n  set_projection(e.target[e.target.selectedIndex])\n}\n\nvar newSelect = document.createElement(\"select\");\nnewSelect.id = \"selectlistid\"; // add some attributes\nnewSelect.onchange = projection_selected; // call the somethingChanged function when a change is made\nnewSelect[newSelect.length] = new Option(\"Aitoff\",\"aitoff\",false, false)\nnewSelect[newSelect.length] = new Option(\"Albers equal-area conic\",\"albers\",false, false);\nnewSelect[newSelect.length] = new Option(\"Armadillo\",\"armadillo\",false, false);\nnewSelect[newSelect.length] = new Option(\"August conformal\",\"august\",false, false);\nnewSelect[newSelect.length] = new Option(\"Lambert azimuthal equal-area\",\"azimuthalEqualArea\",false, false);\nnewSelect[newSelect.length] = new Option(\"azimuthal equidistant\",\"azimuthalEquidistant\",false, false);\nnewSelect[newSelect.length] = new Option(\"Baker Dinomic\",\"baker\",false, false);\nnewSelect[newSelect.length] = new Option(\"Berghaus Star\",\"berghaus\",false, false);\nnewSelect[newSelect.length] = new Option(\"Boggs eumorphic\",\"boggs\",false, false);\nnewSelect[newSelect.length] = new Option(\"Bonne\",\"bonne\",false, false);\nnewSelect[newSelect.length] = new Option(\"Bromley\",\"bromley\",false, false);\nnewSelect[newSelect.length] = new Option(\"Collignon\",\"collignon\",false, false);\nnewSelect[newSelect.length] = new Option(\"Lambert conformal conic\",\"conicConformal\",false, false);\nnewSelect[newSelect.length] = new Option(\"conic equidistant\",\"conicEquidistant\",false, false);\nnewSelect[newSelect.length] = new Option(\"Craig retroazimuthal\",\"craig\",false, false);\nnewSelect[newSelect.length] = new Option(\"Craster parabolic\",\"craster\",false, false);\nnewSelect[newSelect.length] = new Option(\"cylindrical equal-area, Gall\u2013Peters, Hobo\u2013Dyer, Tobler world-in-a-square\",\"cylindricalEqualArea\",false, false);\nnewSelect[newSelect.length] = new Option(\"Eckert I\",\"eckert1\",false, false);\nnewSelect[newSelect.length] = new Option(\"Eckert II\",\"eckert2\",false, false);\nnewSelect[newSelect.length] = new Option(\"Eckert III\",\"eckert3\",false, false);\nnewSelect[newSelect.length] = new Option(\"Eckert IV\",\"eckert4\",false, false);\nnewSelect[newSelect.length] = new Option(\"Eckert V\",\"eckert5\",false, false);\nnewSelect[newSelect.length] = new Option(\"Eckert VI\",\"eckert6\",false, false);\nnewSelect[newSelect.length] = new Option(\"Eisenlohr conformal\",\"eisenlohr\",false, false);\nnewSelect[newSelect.length] = new Option(\"Equirectangular (Plate Carr\u00e9e)\",\"equirectangular\",false, false);\nnewSelect[newSelect.length] = new Option(\"Fahey\",\"fahey\",false, false);\nnewSelect[newSelect.length] = new Option(\"gnomonic\",\"gnomonic\",false, false);\nnewSelect[newSelect.length] = new Option(\"Gringorten\",\"gringorten\",false, false);\nnewSelect[newSelect.length] = new Option(\"Guyou hemisphere-in-a-square\",\"guyou\",false, false);\nnewSelect[newSelect.length] = new Option(\"Hammer, Eckert\u2013Greifendorff, quartic authalic, Briesemeister\",\"hammer\",false, false);\nnewSelect[newSelect.length] = new Option(\"Hammer retroazimuthal\",\"hammerRetroazimuthal\",false, false);\nnewSelect[newSelect.length] = new Option(\"HEALPix\",\"healpix\",false, false);\nnewSelect[newSelect.length] = new Option(\"Hill eucyclic, Maurer No. 73\",\"hill\",false, false);\nnewSelect[newSelect.length] = new Option(\"Goode homolosine\",\"homolosine\",false, false);\nnewSelect[newSelect.length] = new Option(\"Kavrayskiy VII\",\"kavrayskiy7\",false, false);\nnewSelect[newSelect.length] = new Option(\"Lagrange conformal\",\"lagrange\",false, false);\nnewSelect[newSelect.length] = new Option(\"Larriv\u00e9e\",\"larrivee\",false, false);\nnewSelect[newSelect.length] = new Option(\"Laskowski tri-optimal\",\"laskowski\",false, false);\nnewSelect[newSelect.length] = new Option(\"Littrow\",\"littrow\",false, false);\nnewSelect[newSelect.length] = new Option(\"loximuthal\",\"loximuthal\",false, false);\nnewSelect[newSelect.length] = new Option(\"Mercator\",\"mercator\",false, true);\nnewSelect[newSelect.length] = new Option(\"Miller\",\"miller\",false, false);\nnewSelect[newSelect.length] = new Option(\"Mollweide, Atlantis\",\"mollweide\",false, false);\nnewSelect[newSelect.length] = new Option(\"McBryde\u2013Thomas flat-polar parabolic\",\"mtFlatPolarParabolic\",false, false);\nnewSelect[newSelect.length] = new Option(\"McBryde\u2013Thomas flat-polar quartic\",\"mtFlatPolarQuartic\",false, false);\nnewSelect[newSelect.length] = new Option(\"McBryde\u2013Thomas flat-polar sinusoidal\",\"mtFlatPolarSinusoidal\",false, false);\nnewSelect[newSelect.length] = new Option(\"Natural Earth\",\"naturalEarth\",false, false);\nnewSelect[newSelect.length] = new Option(\"Nell\u2013Hammer\",\"nellHammer\",false, false);\nnewSelect[newSelect.length] = new Option(\"orthographic\",\"orthographic\",false, false);\nnewSelect[newSelect.length] = new Option(\"Pierce quincuncial\",\"peirceQuincuncial\",false, false);\nnewSelect[newSelect.length] = new Option(\"Polyconic\",\"polyconic\",false, false);\nnewSelect[newSelect.length] = new Option(\"Robinson\",\"robinson\",false, false);\nnewSelect[newSelect.length] = new Option(\"satellite (tilted perpsective)\",\"satellite\",false, false);\nnewSelect[newSelect.length] = new Option(\"sinusoidal\",\"sinusoidal\",false, false);\nnewSelect[newSelect.length] = new Option(\"Sinu-Mollweide\",\"sinuMollweide\",false, false);\nnewSelect[newSelect.length] = new Option(\"stereographic\",\"stereographic\",false, false);\nnewSelect[newSelect.length] = new Option(\"Van der Grinten\",\"vanDerGrinten\",false, false);\nnewSelect[newSelect.length] = new Option(\"Van der Grinten II\",\"vanDerGrinten2\",false, false);\nnewSelect[newSelect.length] = new Option(\"Van der Grinten III\",\"vanDerGrinten3\",false, false);\nnewSelect[newSelect.length] = new Option(\"Van der Grinten IV\",\"vanDerGrinten4\",false, false);\nnewSelect[newSelect.length] = new Option(\"Wagner IV, Putni\u1e47\u0161 P2\u00b4\",\"wagner4\",false, false);\nnewSelect[newSelect.length] = new Option(\"Wagner VI\",\"wagner6\",false, false);\nnewSelect[newSelect.length] = new Option(\"Wagner VII\",\"wagner7\",false, false);\nnewSelect[newSelect.length] = new Option(\"Wiechel\",\"wiechel\",false, false);\nnewSelect[newSelect.length] = new Option(\"Winkel Tripel\",\"winkel3\",false, false);\ndocument.getElementById('myDiv').appendChild(newSelect); // myDiv is the container to hold the select list\n\n</script>\nFor more info <a href=\"https://github.com/mbostock/d3/wiki/Geo-Projections\">click here</a>.\n</body>\n</html>", "description": "D3 Morphing Map Projections", "created_at": "2013-02-08T16:00:34Z", "updated_at": "2015-12-12T07:49:04Z", "api": ["d3.geo.mercator", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.json", "d3.selectAll"], "readme": "", "uid": "mortenjohs_4739921"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n  .axis {\n    font: 10px sans-serif;\n  }\n  \n  .axis path,\n  .axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n  }\n  \n</style>\n\n<body>\n  <script src=\"//d3js.org/d3.v3.js\"></script>\n  <script type=\"text/javascript\" src=\"//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_SVG\">\n  </script>\n  <script>\n    var margin = {\n        top: 50,\n        right: 50,\n        bottom: 50,\n        left: 50\n      },\n      width = 500 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom,\n\t\t\tradius = Math.min(width,height)/2;\n\n   var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    svg.append(\"circle\")\n    \t.attr(\"r\", radius)      \n      .attr(\"transform\", \"translate(\" + width/2 + \",\" + height/2 + \")\")\n    \t.style(\"stroke\",\"steelblue\")\n    \t.style(\"stroke-width\",\"2px\")\n    \t.style(\"fill\", \"none\");\n \n    // from http://stackoverflow.com/a/4652513/16363\n    function reduce(numerator,denominator){\n      var gcd = function gcd(a,b){\n        return b ? gcd(b, a%b) : a;\n      };\n      gcd = gcd(numerator,denominator);\n      return [numerator/gcd, denominator/gcd];\n    }\n    \n    var labels = [\n      {val: Math.PI/4, label: \"$\\\\frac\" + \"{\\\\pi}4$\"},\n      {val: Math.PI/2, label: \"$\\\\frac\" + \"{\\\\pi}2$\"},\n      {val: (3 * Math.PI) / 4, label: \"$\\\\frac\" + \"{3\\\\pi}4$\"},\n      {val: Math.PI, label: \"$\\\\pi$\"},\n      {val: (5 * Math.PI) / 4, label: \"$\\\\frac\" + \"{5\\\\pi}4$\"},\n      {val: (3 * Math.PI) / 2, label: \"$\\\\frac\" + \"{3\\\\pi}2$\"},\n      {val: (7 * Math.PI) / 4, label: \"$\\\\frac\" + \"{7\\\\pi}4$\"},\n      {val: (2 * Math.PI), label: \"${2\\\\pi}$\"},\n    ]\n    \n    labels.forEach(function(d){\n      var angle = d.val,\n          fudgeX = (angle > Math.PI / 2 && angle < (3 * Math.PI) / 2)  ? -20 : 5,\n          fudgeY = (angle > 0 && angle < Math.PI)  ? -25 : 0,\n      \t\tx = radius *  Math.cos(angle),\n\t\t\t\t\ty = radius *  Math.sin(angle);\n      \n      var posX = (width/2 + x),\n          posY = (height/2 - y);\n      \n      svg.append(\"g\")\n      \t.attr(\"class\", \"tick\")\n      \t.attr(\"transform\", \"translate(\" + (posX + fudgeX) + \",\" + (posY + fudgeY)  + \")\")\n      \t.append(\"text\")  \t\n      \t.text(\n        \tfunction(){         \n           \treturn d.label;\n          }      \n      \t);\n      \n      svg.append(\"path\")\n      \t.attr(\"d\", \"M\" + width/2 + \",\" + height/2 + \"L\" + (width/2 + x) + \",\" + (height/2 - y))\n      .style(\"stroke\",\"steelblue\")\n      .style(\"stroke-width\",\"2px\");\n    });\n   \n\n\nsetTimeout(() => {\n  \n  MathJax.Hub.Config({\n    tex2jax: {\n      inlineMath: [ ['$','$'], [\"\\\\(\",\"\\\\)\"] ],\n      processEscapes: true\n    }\n  });\n  \n  MathJax.Hub.Register.StartupHook(\"End\", function() {\n    setTimeout(() => {\n          svg.selectAll('.tick').each(function(){\n          var self = d3.select(this),\n              g = self.select('text>span>svg');\n          g.remove();\n          self.append(function(){\n            return g.node();\n          });\n        });\n      }, 1);\n    });\n  \n  MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, svg.node()]);\n  \n}, 1);\n    \n    \n  </script>", "description": "MathJax and d3", "created_at": "2016-05-21T20:18:56Z", "updated_at": "2016-05-21T20:18:56Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "larsenmtl_86077bddc91c3de8d3db6a53216b2f47"}, {"code": "<!--\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n * http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * -->\n\n<html>\n\t<head>\n\t\t<title>Interactive Line Graph</title>\n\t\t<script src=\"http://d3js.org/d3.v2.js\"></script>\n\t\t<!-- \n\t\t\tusing JQuery for element dimensions\n\t\t\tThis is a small aspect of this example so it can be removed fairly easily if needed.\n\t\t-->\n\t\t<script src=\"http://code.jquery.com/jquery-1.7.2.min.js\"></script>\n\t\t<script src=\"sample_data.js\"></script>\n\t\t<script src=\"line-graph.js\"></script>\n\t\t<link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: \"Helvetica Neue\", Helvetica;\n\t\t\t}\n\t\t\t\t\t\n\t\t\tp {\n\t\t\t\tclear:both;\n\t\t\t\ttop: 20px;\n\t\t\t}\t\t\n\t\t\t\t\t\n\t\t\tdiv.aGraph {\n\t\t\t\tmargin-bottom: 30px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t<div id=\"graph1\" class=\"aGraph\" style=\"position:relative;width:100%;height:400px\"></div>\n\t\n\t<div id=\"graph2\" class=\"aGraph\" style=\"float:left;position:relative;width:49%;height:200px\"></div>\n\t<div id=\"graph3\" class=\"aGraph\" style=\"float:left;position:relative;width:49%;height:200px\"></div>\n\n\t<script>\n\t\t/* \n\t\t * If running inside bl.ocks.org we want to resize the iframe to fit both graphs\n\t\t */\n\t\t if(parent.document.getElementsByTagName(\"iframe\")[0]) {\n\t\t\t parent.document.getElementsByTagName(\"iframe\")[0].setAttribute('style', 'height: 650px !important');\n\t\t }\n\t\n\t\t /*\n\t\t * Note how the 'data' object is added to here before rendering to provide decoration information.\n\t\t * <p>\n\t\t * This is purposefully done here instead of in data.js as an example of how data would come from a server\n\t\t * and then have presentation information injected into it (rather than as separate arguments in another object)\n\t\t * and passed into LineGraph.\n\t\t *\n\t\t * Also, CSS can be used to style colors etc, but this is also doable via the 'data' object so that the styling\n\t\t * of different data points can be done in code which is often more natural for display names, legends, line colors etc\n\t\t */\n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data[\"displayNames\"] = [\"2xx\",\"3xx\",\"4xx\",\"5xx\"];\n\t\t data[\"colors\"] = [\"green\",\"orange\",\"red\",\"darkred\"];\n\t\t data[\"scale\"] = \"pow\";\n\t\t \n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data2[\"displayNames\"] = [\"2xx\",\"3xx\",\"4xx\",\"5xx\"];\n\t\t data2[\"colors\"] = [\"green\",\"orange\",\"red\",\"darkred\"];\n\t\t data2[\"scale\"] = \"linear\";\n\t\t \n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data3[\"displayNames\"] = [\"Data1\", \"Data2\"];\n\t\t data3[\"axis\"] = [\"left\", \"right\"];\n\t\t data3[\"colors\"] = [\"#2863bc\",\"#c8801c\"];\n\t\t data3[\"rounding\"] = [2, 0];\n\n\t\t // create graph now that we've added presentation config\n\t\tvar l1 = new LineGraph({containerId: 'graph1', data: data});\n\t\tvar l2 = new LineGraph({containerId: 'graph2', data: data2});\n\t\tvar l3 = new LineGraph({containerId: 'graph3', data: data3});\n\t\t\n\tsetInterval(function() {\n\t\t/*\n\t\t* The following will simulate live updating of the data (see dataA, dataB, dataC etc in data.js which are real examples)\n\t\t* This is being simulated so this example functions standalone without a backend server which generates data such as data.js contains.\n\t\t*/\n\t\t// for each data series ...\n\t\tvar newData = [];\n\t\tdata.values.forEach(function(dataSeries, index) {\n\t\t\t// take the first value and move it to the end\n\t\t\t// and capture the value we're moving so we can send it to the graph as an update\n\t\t\tvar v = dataSeries.shift();\n\t\t\tdataSeries.push(v);\n\t\t\t// put this value in newData as an array with 1 value\n\t\t\tnewData[index] = [v];\n\t\t})\n\t\t\n\t\t// we will reuse dataA each time\n\t\tdataA.values = newData;\n\t\t// increment time 1 step\n\t\tdataA.start = dataA.start + dataA.step;\n\t\tdataA.end = dataA.end + dataA.step; \n\t\t\t\t\t\n\t\tl1.slideData(dataA);\n\t}, 2000);\n\n\t\t\n\t</script>\n\n\n\n\t</body>\n</html>", "description": "Interactive Line Graph (D3)", "created_at": "2012-05-11T06:05:12Z", "updated_at": "2016-01-03T15:12:49Z", "api": ["d3.format", "d3.max", "d3.scale.pow", "d3.scale.log", "d3.scale.linear", "d3.svg.axis", "d3.time.scale", "d3.select", "d3.svg.line"], "readme": "", "uid": "benjchristensen_2657838"}, {"code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 Array of Tables Demo</title>\n  <!-- Author: Bo Ericsson, bo@boe.net -->\n  <link rel=stylesheet type=text/css href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/css/bootstrap.min.css\" media=\"all\">\n  <style>\n    body {\n      padding: 10px;\n      font-size: 12px;\n    }\n    .well {\n      padding-top: 0px;\n      padding-bottom: 0px;\n      width: 500px;\n    }\n    table {\n      font-size: 10px;\n      line-height: 10px;\n    }\n    td, th {\n      width: 33.3%;\n    }\n    label {\n      margin-bottom: 10px;\n    }\n  </style>\n<body>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js\"></script>\n<script>\n'use strict';\n\n// title div with label and button\nvar header = d3.select(\"body\").append(\"div\").attr(\"class\", \"well\");\n\nheader.append(\"h3\").text(\"Vaccine Record\");\n\nvar taskLabel = header.append(\"label\")\n    .attr(\"id\", \"taskLabel\")\n    .html(\"&nbsp;\");\n\nvar currTask = 1;\nvar taskButton = header.append(\"button\")\n    .attr(\"class\", \"btn btn-primary\")\n    .style(\"margin-bottom\", \"20px\")\n    .style(\"width\", \"100%\")\n    .style(\"text-align\", \"left\")\n    .text(\"Start\")\n    .on(\"click\", function() {\n      this.blur();\n      // execute the task\n      tasks[currTask]();\n      // next task\n      currTask = ++currTask % tasks.length;\n    })\n\n// container for array of tables\nvar tableDiv = d3.select(\"body\").append(\"div\").attr(\"id\", \"tableDiv1\");\n\n// initial data\nvar data;\nvar initialData = [\n  { table: \"At birth\", rows: [\n      { table: \"Table1\", row: \"Row1\", data: \"DataT1R1\", status:\"pending\" }\n    ]\n  },\n  { table: \"Table2\", rows: [\n      { table: \"Table2\", row: \"Row1\", data: \"DataT2R1\" },\n      { table: \"Table2\", row: \"Row2\", data: \"DataT2R2\" },\n      { table: \"Table2\", row: \"Row3\", data: \"DataT2R3\" }\n    ]\n  },\n  { table: \"Table3\", rows: [\n      { table: \"Table3\", row: \"Row1\", data: \"DataT3R1\" },\n      { table: \"Table3\", row: \"Row2\", data: \"DataT3R2\" }\n    ]\n  },\n  { table: \"Table4\", rows: [\n      { table: \"Table4\", row: \"Row1\", data: \"DataT4R1\" },\n      { table: \"Table4\", row: \"Row2\", data: \"DataT4R2\" }\n    ]\n  }\n]\n\n// tasks\nfunction task0() {\n  update([]);\n\n  taskLabel.html(\"Cleared any existing tables\");\n  taskButton.text(\"Next step: Initial load of tables\");\n}\n\nfunction task1() {\n  data = JSON.parse(JSON.stringify(initialData));\n  update(data);\n\n  taskLabel.text(\"Step 1: Initial tables loaded\");\n  taskButton.text(\"Next step: Add 4th row to Table 2\");\n}\n\n\n\nfunction task2() {\n  var item = data[0].rows[0].data;\n  data[0].rows[0].data = item + \" - Updated\";\n  update(data);\n  taskLabel.text(\"Step 6: Changed data of row 1 of Table 1\");\n  taskButton.text(\"Restart\") ;  \n}\n\n// task list\nvar tasks = [task0, task1, task2,];\n\n\n// function in charge of the array of tables (is called from the tasks defined above)\nfunction update(data) {\n\n  // get all divs in the table div \n  var divs = tableDiv.selectAll(\"div\")\n      // after .data() is executed below, divs becomes a d3 update selection\n      //.data(data, function(d) { return d.table }) // key function to disable default by-index evaluation\n      .data(function(d) {\n        return data;\n      }, function(d) { \n      return d.table \n      }) // key function to disable default by-index evaluation\n\n  // for any deleted table, remove its div and contents (by using the exit function of the update selection)\n  divs.exit().remove();\n\n  // add new div(s); define divsEnter (all new divs), add each div and set id and class\n  var divsEnter = divs.enter().append(\"div\")\n      .attr(\"id\", function(d) { return d.table + \"Div\"; })\n      .attr(\"class\", \"well\")\n\n  // add title h5 in new div(s)\n  divsEnter.append(\"h5\").text(function(d) { return d.table; });\n\n  // add table(s) in new div(s)\n  var tableEnter = divsEnter.append(\"table\")\n      .attr(\"id\", function(d) { return d.table })\n      .attr(\"class\", \"table table-condensed table-striped table-bordered\")\n\n  // append table head in new table(s) in new div(s)\n  tableEnter.append(\"thead\")\n    .append(\"tr\")\n      .selectAll(\"th\")\n      .data([\"Table Name\", \"Row Number\", \"Data Contents\", \"status\"])\n    .enter().append(\"th\")\n      .text(function(d) { return d; })\n\n  // append table body in new table(s) in new divs(s)\n  tableEnter.append(\"tbody\");\n\n  // select all tr elements in the divs update selection\n  var tr = divs.select(\"table\").select(\"tbody\").selectAll(\"tr\")\n      .data(function(d, i) { return d.rows; }, function(d) { return d.row }); // again we're using key function to disable by-index evaluation\n\n  // remove rows for missing data items\n  tr.exit().remove();\n\n  // add rows for new data items\n  tr.enter().append(\"tr\");\n\n  // bind data to table cells\n  var td = tr.selectAll(\"td\")\n      .data(function(d, i) { return d3.values(d); });\n\n  // add new cells\n  td.enter().append(\"td\");\n\n  // update contents of table cells\n  td.text(function(d) { return d; })\n}\n\n\n</script>\n", "description": "D3 Dynamic Array of Tables", "created_at": "2016-04-26T15:31:23Z", "updated_at": "2016-04-26T15:45:41Z", "api": ["d3.select", "d3.values"], "readme": "## D3 Dynamic Array of Tables\n\nDemonstrates the the use of D3 to manage an array of tables. Via a button, the user will cycle through several steps which will mutate the underlying array of arrays, which at each step is fed to the table **update** function. For example, tables are added and removed from the array of tables, individual rows of tables are added and removed, and individual table cells are modified. The **update** function demonstrates the enter, exit and update patterns at the div/table level as well as at the table row level. \n\nFor **bl.ocks.org** users, the script should be viewed in its own window. See the script in action [here](http://bl.ocks.org/boeric/raw/e16ad218bc241dfd2d6e/)\n\nforked from <a href='http://bl.ocks.org/boeric/'>boeric</a>'s block: <a href='http://bl.ocks.org/boeric/e16ad218bc241dfd2d6e'>D3 Dynamic Array of Tables</a>", "uid": "devssunil_5485fa28d3fdd422930b53ab330f96e3"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n  <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n  <style>\n    body { margin:0; padding:0; }\n    #map { width:960px; height:500px; background:cyan; }\n  </style>\n</head>\n<body>\n<div id='map'></div>\n<script>\nfunction clickcancel() {\n    var event = d3.dispatch('click', 'dblclick');\n    function cc(selection) {\n        var down,\n            tolerance = 5,\n            last,\n            wait = null;\n        // euclidean distance\n        function dist(a, b) {\n            return Math.sqrt(Math.pow(a[0] - b[0], 2), Math.pow(a[1] - b[1], 2));\n        }\n        selection.on('mousedown', function() {\n            down = d3.mouse(document.body);\n            last = +new Date();\n        });\n        selection.on('mouseup', function() {\n            if (dist(down, d3.mouse(document.body)) > tolerance) {\n                return;\n            } else {\n                if (wait) {\n                    window.clearTimeout(wait);\n                    wait = null;\n                    event.dblclick(d3.event);\n                } else {\n                    wait = window.setTimeout((function(e) {\n                        return function() {\n                            event.click(e);\n                            wait = null;\n                        };\n                    })(d3.event), 300);\n                }\n            }\n        });\n    };\n    return d3.rebind(cc, event, 'on');\n}\nvar cc = clickcancel();\nd3.select('#map').call(cc);\ncc.on('click', function() {\n    d3.select('#map').text(d3.select('#map').text() + 'click, ');\n});\ncc.on('dblclick', function() {\n    d3.select('#map').text(d3.select('#map').text() + 'dblclick, ');\n});\n</script>\n</body>\n</html>\n", "description": "double click and single click separation", "created_at": "2012-11-13T18:58:30Z", "updated_at": "2016-05-26T16:50:22Z", "api": ["d3.dispatch", "d3.mouse", "d3.rebind", "d3.select"], "readme": "", "uid": "tmcw_4067674"}, {"code": "\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-opacity: .5;\n  stroke-width: .5px;\n}\n\n.land {\n  fill: #222;\n}\n\n.boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\ncircle {\n  fill: yellow;\n}\n\n.geopath {\n  fill: green;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script>\n\nvar width = 1200,\n    height = 720;\n\nvar projection = d3.geo.mercator()\n    .scale(8000)\n    .precision(.1)\n    .center([13.320255,52.52831499])\n    .translate([width / 2, height / 2])\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar graticule = d3.geo.graticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\nd3.json(\"world-50m.json\", function(error, world) {\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n});\n\nd3.json(\"stops_berlin.geojson\", function(error, data) {\n\n  // using d3.geo.path() which does all the work for you\n  svg.append(\"path\")\n    .datum(data)\n    .classed(\"geopath\", true)\n    .attr(\"d\", path)\n\n  // or insert your own custom dots by hand\n  svg.append(\"g\")\n    .selectAll(\"g\")\n    .data(data.features)\n    .enter()\n      .append(\"g\")\n      .attr(\"transform\", function(d) { return \"translate(\" + projection(d.geometry.coordinates) + \")\"; })\n      .append(\"circle\")\n      .attr(\"r\", 1)\n\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n  \n</script>\n", "description": "d3.js map with markers", "created_at": "2015-11-20T12:47:57Z", "updated_at": "2015-11-21T12:10:34Z", "api": ["d3.geo.mercator", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.json"], "readme": "Easy example on how to put marker on a d3.js map.\n\nYou got 2 options:\n- using d3.geo.path() which does all the work for you\n- using svg circles and translating them via projection(d.geometry.coordinates)", "uid": "cpietsch_dc76fc25863458a6a83e"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<head>\n\t<style>\n\n\t.axis {\n\t  font: 10px sans-serif;\n\t}\n\n\t.axis path,\n\t.axis line {\n\t  fill: none;\n\t  stroke: #000;\n\t  shape-rendering: crispEdges;\n\t}\n\n\t</style>\n</head>\n\n<body>\n\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar\tparseDate = d3.time.format(\"%Y-%m\").parse;\n\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], .6);\n\nvar y = d3.scale.linear().range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tick(function(d) {return d.date });\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n\t\t.ticks(0)\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"bar-data.csv\", function(error, data) {\n\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.value = +d.value;\n    });\n\t\n  x.domain(data.map(function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n//       .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"1em\")\n//       .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n   \n\n  svg.selectAll(\"bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .style(\"fill\", \"steelblue\")\n      .attr(\"x\", function(d) { return x(d.date); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); });\n\n});\n\n</script>\n\n</body>\n", "description": "Simple d3.js bar chart", "created_at": "2016-05-16T15:08:10Z", "updated_at": "2016-05-16T15:17:44Z", "api": ["d3.time.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.max"], "readme": "This is a d3.js bar chart as used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is derived from the Mike Bostock's [Bar Chart example](http://bl.ocks.org/mbostock/3885304) but it is a slightly cut down version.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/8952219'>Simple d3.js bar chart</a>", "uid": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Canvas image zoom</title>\n<style>\nbody {\n  position: relative;\n}\n\nsvg,\ncanvas {\n    position: absolute;\n}\n\n.axis text {\n    font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<body>\n<script>\n\nvar imageObj = new Image();\nimageObj.src = \"http://www.html5canvastutorials.com/demos/assets/darth-vader.jpg\";\n\nvar margin = {top: 20, right: 10, bottom: 20, left: 60},\n    width = imageObj.width,\n    height = imageObj.height;\n\nvar ctx;\n\nvar x = d3.scale.linear()\n    .domain([0, imageObj.width])\n    .range([0, width]);\n\n\nvar y = d3.scale.linear()\n    .domain([0, imageObj.height])\n    .range([height, 0]);\n\nvar xmin = x.domain()[0];\nvar xmax = x.domain()[1];\nvar ymin = y.domain()[0];\nvar ymax = y.domain()[1];\n    \nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n    \nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n    \nvar zoom = d3.behavior.zoom()\n        .x(x)\n        .y(y)\n        .scaleExtent([1, 10])\n        .on(\"zoom\", refresh);\n\n// Canvas is drawn first, and then SVG over the top.\nvar canvas = d3.select(\"body\").append(\"canvas\")\n        .attr(\"width\", imageObj.width)\n        .attr(\"height\", imageObj.height)\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        .style(\"left\", margin.left + \"px\")\n        .style(\"top\", margin.top + \"px\")\n        .style(\"width\", width + \"px\")\n        .style(\"height\", height + \"px\")\n        .style(\"position\", \"absolute\")\n        .call(drawImage);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// We make an invisible rectangle to intercept mouse events for zooming.\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .style(\"fill\", \"000\")\n    .style(\"opacity\", 1e-6)\n    .call(zoom);\n\nsvg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .call(removeZero);\n\nsvg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis)\n        .call(removeZero);\n\nfunction drawImage(canvas) {\n    ctx = canvas.node().getContext(\"2d\");\n    ctx.drawImage(imageObj, 0, 0);\n}\n\n// Keep an eye out for \"translateExtent\" or \"xExtent\" methods that may be\n// added at some point to bound the limits of zooming and panning. Until then,\n// this works.\nfunction refresh() {\n    var t = zoom.translate();\n    var s = zoom.scale();\n    var tx = t[0],\n        ty = t[1];\n    var xdom = x.domain();\n    var reset_s = 0;\n    if ((xdom[1] - xdom[0]) >= (xmax - xmin)) {\n        zoom.x(x.domain([xmin, xmax]));\n        xdom = x.domain();\n        reset_s = 1;\n    }\n    var ydom = y.domain();\n    if ((ydom[1] - ydom[0]) >= (ymax - ymin)) {\n        zoom.y(y.domain([ymin, ymax]));\n        ydom = y.domain();\n        reset_s += 1;\n    }\n    if (reset_s == 2) { // Both axes are full resolution. Reset.\n        zoom.scale(1);\n        tx = 0;\n        ty = 0;\n    }\n    else {\n        if (xdom[0] < xmin) {\n            tx = 0;\n            x.domain([xmin, xdom[1] - xdom[0] + xmin]);\n            xdom = x.domain();\n        }\n        if (xdom[1] > xmax) {\n            xdom[0] -= xdom[1] - xmax;\n            tx = -xdom[0]*width/(xmax-xmin)*s;\n            x.domain([xdom[0], xmax]);\n        }\n        if (ydom[0] < ymin) {\n            y.domain([ymin, ydom[1] - ydom[0] + ymin]);\n            ydom = y.domain();\n            ty = -(ymax-ydom[1])*height/(ymax-ymin)*s;\n        }\n        if (ydom[1] > ymax) {\n            ydom[0] -= ydom[1] - ymax;\n            ty = 0;\n            y.domain([ydom[0], ymax]);\n        }\n    }\n    // Reset (possibly) if hit an edge so that next focus event starts correctly.\n    zoom.translate([tx, ty]);\n\n    ctx.drawImage(imageObj, \n        tx*imageObj.width/width, ty*imageObj.height/height,\n        imageObj.width*s, imageObj.height*s);\n    svg.select(\".x.axis\").call(xAxis).call(removeZero);\n    svg.select(\".y.axis\").call(yAxis).call(removeZero);\n}\n\nfunction removeZero(axis) {\n    axis.selectAll(\"g\").filter(function(d) { return !d; }).remove();\n}\n\n</script>\n", "description": "D3 Constrained Zoom Canvas Image", "created_at": "2013-12-19T22:07:12Z", "updated_at": "2016-03-18T23:52:37Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.behavior.zoom", "d3.select"], "readme": "Implements constrained zooming of an image put onto an HTML5 Canvas.", "uid": "tommct_8047063"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the scatterplot\n    svg.selectAll(\"dot\")\n        .data(data)\n      .enter().append(\"circle\")\n        .attr(\"r\", 3.5)\n        .attr(\"cx\", function(d) { return x(d.date); })\n        .attr(\"cy\", function(d) { return y(d.close); });\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>\n", "description": "Simple scatterplot with d3.js", "created_at": "2016-02-24T21:47:59Z", "updated_at": "2016-02-24T21:47:59Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple d3.js graph](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt adds points to a simple line graph to produce a hybrid line / scatterplot graph. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/38744a17f9c0141bcd04'>Simple scatterplot with d3.js</a>\n\nforked from <a href='http://bl.ocks.org/nguyenbq/'>nguyenbq</a>'s block: <a href='http://bl.ocks.org/nguyenbq/a350280a02c8105529d0'>Simple scatterplot with d3.js</a>", "uid": "nguyenbq_85a4c204a61fa6407aed"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Automatic Voronoi</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .voronoi {\n    fill-opacity: .3;\n    stroke: black;\n    stroke-width: 2;\n  }\n\n</style>\n<script>\n      function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    \n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Base\")\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"sample_points.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"canvas\")\n    .markerColor(\"black\")\n    .markerSize(1)\n    .x(\"x\")\n    .y(\"y\")\n    .on(\"load\", makeVoronoi)\n    \n    map.addCartoLayer(tileLayer).addCartoLayer(csvLayer);\n    map.setScale(3);\n    \n    function makeVoronoi() {\n      voronoiLayer = map.createVoronoiLayer(csvLayer, .5);\n\n      voronoiLayer\n      .label(\"Voronoi\")\n      .cssClass(\"voronoi\")\n      .on(\"load\", colorVoronoi);\n      \n      map.addCartoLayer(voronoiLayer);\n      \n      function colorVoronoi() {\n      var colorScale = d3.scale.linear().domain([60,80,100]).range([\"green\",\"yellow\",\"red\"])\n        voronoiLayer.g().selectAll(\"path\")\n        .style(\"fill\", function(d) {return colorScale(d.properties.node.rank)});\n      }\n      \n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Automated Voronoi Layer - d3.carto", "created_at": "2014-09-16T11:31:03Z", "updated_at": "2015-08-29T14:06:31Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer", "d3.carto.layer.csv", "d3.scale.linear"], "readme": "Automatic voronoi generation in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** allows for the creation of regions from point data.\n\nThe map.createVoronoiLayer function takes two variable: a point d3.carto.layer (either CSV or XY Array) and a margin (in degrees). It creates a feature carto layer that splits the area of the points into regions.\n\nThis will have issues if you pass point data that has more than one point at the same XY location.", "uid": "emeeks_86da8f19e58ccb668750"}, {"code": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>D3 Level 3</title>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n        <style>\n            svg {\n                font: 10px sans-serif;\n            }\n            .area {\n                fill: steelblue;\n                clip-path: url(#clip);\n            }\n            .axis path,\n            .axis line {\n                fill: none;\n                stroke: #000;\n                shape-rendering: crispEdges;\n            }\n            .brush .extent {\n                stroke: #fff;\n                fill-opacity: .125;\n                shape-rendering: crispEdges;\n            }\n        </style>\n    </head>\n    <body>\n        <button id=\"reset\">Reset</button>\n        <br>\n        <script>\n            var W = 960, H = 500;\n\n            //Setting up Margins\n            var mainMargin = {top: 10, right: 10, left: 70, bottom: 140};\n            var subMargin = {top: 400, right: 10, bottom: 40, left: 70};\n\n            //Widths, Heights\n            var width = W - mainMargin.left - mainMargin.right;\n            var mainHeight = H - mainMargin.top - mainMargin.bottom;\n            var subHeight = H - subMargin.top - subMargin.bottom;\n\n            //Date Parser\n            var parseDate = d3.time.format(\"%b %Y\").parse;\n\n            //Main Chart Scales\n            var mainXScale = d3.time.scale().range([0, width]);\n            var mainYScale = d3.scale.linear().range([mainHeight, 0]);\n\n            //Sub Chart scales\n            var subXScale = d3.time.scale().range([0, width]);\n            var subYScale = d3.scale.linear().range([subHeight, 0]);\n\n            //Main Chart Axes\n            var mainXAxis = d3.svg.axis().scale(mainXScale).orient('bottom');\n            var mainYAxis = d3.svg.axis().scale(mainYScale).orient('left');\n\n            //Sub Chart Axes\n            var subXAxis = d3.svg.axis().scale(subXScale).orient('bottom');\n            var subYAxis = d3.svg.axis().scale(subYScale).orient('left').ticks(2);\n\n            //Area\n            var mainArea = d3.svg.area()\n                    .interpolate('monotone')\n                    .x(function (d) {\n                        return mainXScale(d.date)\n                    })\n                    .y0(mainHeight)\n                    .y1(function (d) {\n                        return mainYScale(d.price)\n                    });\n\n            var subArea = d3.svg.area()\n                    .interpolate('monotone')\n                    .x(function (d) {\n                        return subXScale(d.date)\n                    })\n                    .y0(subHeight)\n                    .y1(function (d) {\n                        return subYScale(d.price)\n                    });\n\n            var svg = d3.select('body').append('svg')\n                    .attr('width', W)\n                    .attr('height', H);\n\n            svg.append('defs')\n                    .append('clipPath')\n                    .attr('id', 'clip')\n                    .append('rect')\n                    .attr('width', width)\n                    .attr('height', mainHeight);\n\n            var main = svg.append('g')\n                    .classed('main', true)\n                    .attr(\"transform\", \"translate(\" + mainMargin.left + \",\" + mainMargin.top + \")\");\n\n            var sub = svg.append('g')\n                    .classed('sub', true)\n                    .attr(\"transform\", \"translate(\" + subMargin.left + \",\" + subMargin.top + \")\");\n\n            var brush = d3.svg.brush()\n                    .x(subXScale)\n                    .on(\"brush\", brushed);\n\n            d3.csv('data.csv', function (d) {\n                d.date = parseDate(d.date);\n                d.price = +d.price;\n                return d;\n            }, function (err, data) {\n                mainXScale.domain(d3.extent(data, function (d) {\n                    return d.date\n                }));\n                mainYScale.domain([0, d3.max(data, function (d) {\n                        return d.price\n                    })]);\n\n                subXScale.domain(mainXScale.domain());\n                subYScale.domain(mainYScale.domain());\n\n                main.append(\"g\")\n                        .classed(\"x axis\", true)\n                        .attr(\"transform\", \"translate(0, \" + mainHeight + \")\")\n                        .call(mainXAxis);\n                main.append(\"g\")\n                        .classed(\"y axis\", true)\n                        .attr(\"transform\", \"translate(0, 0)\")\n                        .call(mainYAxis);\n\n                main.append('path')\n                        .datum(data)\n                        .classed('area', true)\n                        .attr('d', mainArea);\n\n                sub.append(\"g\")\n                        .classed(\"x axis\", true)\n                        .attr(\"transform\", \"translate(0, \" + subHeight + \")\")\n                        .call(subXAxis);\n                sub.append(\"g\")\n                        .classed(\"y axis\", true)\n                        .attr(\"transform\", \"translate(0, 0)\")\n                        .call(subYAxis);\n\n                sub.append('path')\n                        .datum(data)\n                        .classed('area', true)\n                        .attr('d', subArea);\n\n                sub.append(\"g\")\n                        .classed(\"x brush\", true)\n                        .call(brush)\n                        .selectAll(\"rect\")\n                        .attr(\"y\", -6)\n                        .attr(\"height\", subHeight + 7);\n\n                d3.select('#reset').on('click', function () {\n                    mainXScale.domain(subXScale.domain());\n                    main.select('.area').transition().attr('d', mainArea);\n                    main.select('.x.axis').transition().call(mainXAxis);\n                    sub.select('rect.extent').transition().attr('width', 0);\n                })\n            });\n\n            function brushed() {\n                mainXScale.domain(brush.empty() ? subXScale.domain() : brush.extent());\n                main.select('.area').attr('d', mainArea);\n                main.select('.x.axis').call(mainXAxis);\n            }\n        </script>\n    </body>\n</html>\n", "description": "Zoom and Brush in d3", "created_at": "2015-11-19T22:28:51Z", "updated_at": "2015-11-19T22:28:53Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.select", "d3.svg.brush", "d3.csv", "d3.extent", "d3.max"], "readme": "\n\nforked from <a href='http://bl.ocks.org/nivas8292/'>nivas8292</a>'s block: <a href='http://bl.ocks.org/nivas8292/222939d7c74c5de09387'>Zoom and Brush in d3</a>", "uid": "ptvans_461585105bdbc14b4e85"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Improved Canvas Rendering - d3.carto</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  \n  .region {\n    stroke: white;\n  }\n  \n</style>\n<script>\n\n  function makeSomeMaps() {\n    pathSource = 0;\n\n    map = d3.carto.map();\n    \n    var regionColor = [\"lightgray\",\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"];\n    var colorScale = d3.scale.linear().domain([0,5,26]).range([\"green\",\"yellow\", \"red\"])\n    var sizeScale = d3.scale.linear().domain([50,1000]).range([1,6])\n\n    d3.select(\"#map\").call(map);\n    map.mode(\"globe\");\n    map.zoom().scale(350);\n\n//    map.centerOn([-88,39],\"latlong\");\n//    map.setScale(2);\n\n    wcLayer = d3.carto.layer.tile();\n    wcLayer\n    .tileType(\"mapbox\")\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Base\")\n    .visibility(true)\n\n    regionLayer = d3.carto.layer.geojson();\n    regionLayer\n    .path(\"ecoregions.json\")\n    .label(\"Regions\")\n    .cssClass(\"region\")\n    .renderMode(\"canvas\")\n    .markerColor(function(d) {return regionColor[d.a]})\n    .clickableFeatures(true);\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"all_sites.csv\")\n    .label(\"Cities\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"canvas\")\n    .markerSize(function(d) {return sizeScale(d.pop)})\n    .markerColor(function(d) {return colorScale(d.capacity)})\n    .x(function(d) {return d.xcoord})\n    .y(function(d) {return d.ycoord});\n    \n    map.addCartoLayer(wcLayer).addCartoLayer(regionLayer).addCartoLayer(csvLayer);\n    map.refresh();\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\">\n</div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>\n", "description": "Styling Canvas Elements - d3.carto", "created_at": "2014-09-09T20:07:50Z", "updated_at": "2015-08-29T14:06:16Z", "api": ["d3.carto.map", "d3.scale.linear", "d3.select", "d3.carto.layer.tile", "d3.carto.layer.geojson", "d3.carto.layer.csv"], "readme": "Canvas element styling with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** does not use d3.selectAll like [SVG element styling](http://bl.ocks.org/emeeks/f8c0220c54ec8347ea95) because these aren't SVG elements. Here we see 6000+ cities between 50k and 1m population each styled based on various attributes.\n\nThis relies on using cartoLayer.markerColor() and cartoLayer.markerSize() and setting them to function based on the data. If you don't set markerColor, then it will rely on CSS styling of the associated class.\n\n[This example is also available in transform mode](http://bl.ocks.org/emeeks/e6f72fbca42e77be0eb3).", "uid": "emeeks_aea3c7fc1acc0eca4d44"}, {"code": "<!DOCTYPE html>\n<html class=\"ocks-org do-not-copy\">\n<meta charset=\"utf-8\">\n<title>D3 + Leaflet</title>\n<style>\n\n@import url(//cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.2/leaflet.css);\n\n#map {\n  width: 960px;\n  height: 500px;\n}\n\nsvg {\n  position: relative;\n}\n\n</style>\n\n<h1>Gutters and polys</h1>\n\n<p id=\"map\">\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.2/leaflet.js\"></script>\n<script>\n\nvar map = new L.Map(\"map\", {center: [37.8, -96.9], zoom: 4})\n    .addLayer(new L.TileLayer(\"http://{s}.tile.stamen.com/watercolor/{z}/{x}/{y}.jpg\"));\n\nvar svg = d3.select(map.getPanes().overlayPane).append(\"svg\"),\n    g = svg.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\");\n\n// filters go in defs element\nvar defs = svg.append(\"defs\");\n\nvar filter = defs.append(\"filter\")\n    .attr(\"id\", \"places-blur\")\n    .attr(\"height\", \"150%\");\n\nfilter.append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", 4)\n    .attr(\"result\", \"blur\");\n\nd3.json(\"us-states.json\", function(collection) {\n  var transform = d3.geo.transform({point: projectPoint}),\n      path = d3.geo.path().projection(transform);\n\n  var feature = g.selectAll(\"path\")\n      .data(collection.features)\n    .enter().append(\"path\");\n\n  map.on(\"viewreset\", reset);\n  reset();\n\n  // Reposition the SVG to cover the features.\n  function reset() {\n    var bounds = path.bounds(collection),\n        topLeft = bounds[0],\n        bottomRight = bounds[1];\n\n    svg.attr(\"width\", bottomRight[0] - topLeft[0])\n        .attr(\"height\", bottomRight[1] - topLeft[1])\n        .style(\"left\", topLeft[0] + \"px\")\n        .style(\"top\", topLeft[1] + \"px\");\n\n    g.attr(\"transform\", \"translate(\" + -topLeft[0] + \",\" + -topLeft[1] + \")\");\n\n    feature\n      .attr(\"d\", path)\n      .attr(\"class\",\"mask\")\n      .style(\"filter\",\"url(#places-blur)\")\n      .style(\"stroke\", \"#999\")\n      .style(\"stroke-width\", 0)\n      .style(\"fill-opacity\",0.8) \n  }\n\n  // Use Leaflet to implement a D3 geometric transformation.\n  function projectPoint(x, y) {\n    var point = map.latLngToLayerPoint(new L.LatLng(y, x));\n    this.stream.point(point.x, point.y);\n  }\n});\n\n</script>", "description": "Edge blur filter w/ D3", "created_at": "2014-12-09T17:52:52Z", "updated_at": "2015-11-05T18:41:35Z", "api": ["d3.select", "d3.json", "d3.geo.transform", "d3.geo.path"], "readme": "", "uid": "wboykinm_6a14e910b5738c89e239"}, {"code": "<!doctype html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Line Chart</title>\n<style>\n\n  .axis path,\n  .axis line{\n    fill: none;\n    stroke: black;\n  }\n\n  .line{\n    fill: none;\n    stroke: blue;\n    stroke-width: 2px;\n  }\n\n  .tick text{\n    font-size: 12px;\n  }\n\n  .tick line{\n    opacity: 0.2;\n  }\n\n</style>\n</head>\n<body>\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 100, bottom: 30, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar dataset = [\n  {x: 0, y: 5},\n  {x: 1, y: 8},\n  {x: 2, y: 13},\n  {x: 3, y: 12},\n  {x: 4, y: 16},\n  {x: 5, y: 21},\n  {x: 6, y: 18},\n  {x: 7, y: 23},\n  {x: 8, y: 24},\n  {x: 9, y: 28},\n  {x: 10, y: 35},\n  {x: 11, y: 30},\n  {x: 12, y: 32},\n  {x: 13, y: 36},\n  {x: 14, y: 40},\n  {x: 15, y: 38},\n];\n\nvar xScale = d3.scale.linear()\n    .domain([0, d3.max(dataset, function(d){ return d.x; })])\n    .range([0, width]);\n\nvar yScale = d3.scale.linear()\n    .domain([0, d3.max(dataset, function(d){ return d.y; })])\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\")\n    .innerTickSize(-height)\n    .outerTickSize(0)\n    .tickPadding(10);\n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\")\n    .innerTickSize(-width)\n    .outerTickSize(0)\n    .tickPadding(10);\n\nvar line = d3.svg.line()\n    .x(function(d) { return xScale(d.x); })\n    .y(function(d) { return yScale(d.y); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n\n  svg.append(\"path\")\n      .data([dataset])\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n</script>\n</body>\n</html>", "description": "Line Chart with Grid [D3]", "created_at": "2014-04-20T10:42:21Z", "updated_at": "2016-02-23T09:49:02Z", "api": ["d3.scale.linear", "d3.max", "d3.svg.axis", "d3.svg.line", "d3.select"], "readme": "", "uid": "hunzy_11110940"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.states {\n  fill: #ccc;\n  stroke: #fff;\n}\n\n.symbol {\n  fill: steelblue;\n  fill-opacity: .8;\n  stroke: #fff;\n}\n\n.tooltip{ background-color:rgba(68,136,187,0.5);;\n          margin: 10px;\n          height: 50px;\n          width: 150px;\n          padding-left: 10px; \n          padding-top: 10px;\n    -webkit-border-radius:10px;\n    -moz-border-radius:10px;\n    border-radius:10px;\n        }\n</style>\n<body>\n<button type=\"button\" id=\"change\">Change</button>\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v0.min.js\"></script>\n<script src=\"http://d3js.org/queue.v1.min.js\"></script>\n<script type=\"text/javascript\" src=\"tooltip.js\"></script>\n\n\n<script>\nvar width = 960,\n    height = 500;\nvar states, points;\n\n\nvar radius = d3.scale.sqrt()\n    .domain([0, 1e6])\n    .range([0, 10]);\n\nvar projection = d3.geo.mercator()\n    .center([-97, 37])\n    .scale(4000 / 2 / Math.PI)\n    .translate([width / 2, height / 2]);\n\n\nvar path = d3.geo.path()\n.projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nqueue()\n    .defer(d3.json, \"https://cdn.rawgit.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/us.json\")\n    .defer(d3.json, \"https://cdn.rawgit.com/mbostock/3750900/raw/us-state-centroids.json\")\n    .await(ready);\n\n\nfunction ready(error, us, centroid) {\nstates = svg.append(\"path\")\n      .attr(\"class\", \"states\")\n      .datum(topojson.object(us, us.objects.states))\n      .attr(\"d\", path);\n\n    points =  svg.selectAll(\".symbol\")\n      .data(centroid.features.sort(function(a, b) { return b.properties.population - a.properties.population; }))\n    .enter().append(\"path\")\n      .attr(\"class\", \"symbol\")\n      .attr(\"d\", path.pointRadius(function(d) { if(d.properties) { return radius(d.properties.population);} else {return;} }))\n      .call(d3.helper.tooltip(\n        function(d, i){\n          return \"<b>\"+d.properties.name + \"</b><br/>pop: \"+d.properties.population;\n        }\n        ));\n};\n\nd3.select(\"#change\").on(\"click\", function() {\n  projection = d3.geo.albers();\n  path.projection(projection);\n  states.transition()\n      .duration(10000)\n      .attr(\"d\", path);\n  points.transition()\n      .duration(3000)\n      .attr(\"d\", path);\n});\n\n\n</script>\n\n", "description": "D3 tutorial V: Adding tooltips", "created_at": "2016-04-07T15:42:17Z", "updated_at": "2016-04-07T15:45:03Z", "api": ["d3.scale.sqrt", "d3.geo.mercator", "d3.geo.path", "d3.select", "d3.helper.tooltip", "d3.geo.albers", "d3.mouse"], "readme": "This example belongs to [the presentation](rveciana.github.com/geoexamples/geoinquiets/d3js/index_en.html) made to the [OSGeo](http://www.osgeo.org/) local group in Barcelona [Geoinquiets](http://www.geoinquiets.cat/)\nThe example is an adaptation from [Mike Bostock](http://bost.ocks.org/mike/)'s [Symbol Map example](http://bl.ocks.org/mbostock/4342045)\n\nForked from <a href='http://bl.ocks.org/rveciana/'>rveciana</a>'s block: <a href='http://bl.ocks.org/rveciana/5181105'>D3 tutorial V: Adding tooltips</a> in order to retrieve relevant gist files via `rawgit`.", "uid": "espinielli_4d17fa15a7a5084e217992f985fba484"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  margin: 0;\n}\n/* misc */\n.info {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  font: 14px sans-serif;\n}\n\n.attrib {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  font: 10px sans-serif;\n  padding: 5px;\n  background-color:white;\n  opacity:.8;\n}\n.attrib a {\n color: black; \n font-weight:800;\n}\n\n/* tiles */\n.map {\n  position: relative;\n  overflow: hidden;\n}\n\n.layer {\n  position: absolute;\n}\n\n.tile {\n  position: absolute;\n  width: 256px;\n  height: 256px;\n  opacity:.8;\n}\n\n/* globe */\nsvg {\n  position:absolute;\n  bottom:10px;\n}\n\n.land {\n  fill: rgb(84, 77, 69);\n  stroke-opacity: 1;\n}\n\n.graticule {\n  fill: none;\n  stroke: black;\n  stroke-width:.5;\n  opacity:.3;\n}\n\n.extent {\n  fill: #933;\n  opacity: .6;\n}\n\n.noclicks {\n  pointer-events:none;\n}\n\n.point { fill:rgb(57, 38, 19); }\n/* point classes */\n.point.r1 { opacity: .8; }\n.point.r2 { opacity: .8; }\n.point.r3,\n.point.r4,\n.point.r5 { opacity: .3; }\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/d3.geo.tile.v0.min.js\"></script>\n<script src=\"http://d3js.org/queue.v1.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v0.min.js\"></script>\n<script>\n// slippy map code from\n// http://bl.ocks.org/3943330 by tmcw\n// http://bl.ocks.org/4132797 by mbostock\n\nvar width = window.innerWidth,\n    height = window.innerHeight,\n    prefix = prefixMatch([\"webkit\", \"ms\", \"Moz\", \"O\"]);\n\nvar inset = {\n  w: 320, \n  h: 320, \n  projection: null, extentRect: null, svg: null, path: null, graticule: null,\n  init: function() {\n    inset.projection = d3.geo.orthographic()\n                        .scale(140)\n                        .translate([inset.w / 2, inset.h / 2])\n                        .clipAngle(90)\n\n    inset.path = d3.geo.path()\n                  .projection(inset.projection)\n                  .pointRadius(1.5);\n\n    inset.graticule = d3.geo.graticule();\n\n    inset.extentRect = [{ \n          \"type\": \"Feature\", \n          \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[]]}\n          }]\n\n    inset.svg = d3.select(\"body\").append(\"svg\")\n                  .attr(\"width\", inset.w)\n                  .attr(\"height\", inset.h)\n                  .attr(\"class\",\"noclicks\")\n    queue()\n        .defer(d3.json, \"world-110m.json\")\n        .defer(d3.json, \"places.json\")\n        .await(inset.ready);\n  },\n  ready: function(error,world,places) {\n    var defs = inset.svg.append(\"defs\")\n    var ocean = defs.append(\"radialGradient\")\n            .attr(\"id\", \"ocean\")\n            .attr(\"cx\", \"75%\")\n            .attr(\"cy\", \"25%\");\n        ocean.append(\"stop\").attr(\"offset\", \"5%\").attr(\"stop-color\", \"#e6e6f4\");\n        ocean.append(\"stop\").attr(\"offset\", \"100%\").attr(\"stop-color\", \"#a2abb3\");\n\n    var highlight = defs.append(\"radialGradient\")\n          .attr(\"id\", \"highlight\")\n          .attr(\"cx\", \"75%\")\n          .attr(\"cy\", \"25%\");\n        highlight.append(\"stop\")\n          .attr(\"offset\", \"5%\").attr(\"stop-color\", \"#ffd\")\n          .attr(\"stop-opacity\",\"0.6\");\n        highlight.append(\"stop\")\n          .attr(\"offset\", \"100%\").attr(\"stop-color\", \"#ba9\")\n          .attr(\"stop-opacity\",\"0.2\");\n\n    var shade = defs.append(\"radialGradient\")\n          .attr(\"id\", \"shade\")\n          .attr(\"cx\", \"50%\")\n          .attr(\"cy\", \"40%\");\n        shade.append(\"stop\")\n          .attr(\"offset\",\"50%\").attr(\"stop-color\", \"#a2abb3\")\n          .attr(\"stop-opacity\",\"0\")\n        shade.append(\"stop\")\n          .attr(\"offset\",\"100%\").attr(\"stop-color\", \"#57616b\")\n          .attr(\"stop-opacity\",\"0.3\")\n\n    var halo = defs.append(\"radialGradient\")\n          .attr(\"id\", \"halo\")\n          .attr(\"cx\", \"50%\")\n          .attr(\"cy\", \"50%\");\n        halo.append(\"stop\")\n          .attr(\"offset\",\"85%\").attr(\"stop-color\", \"#FFF\")\n          .attr(\"stop-opacity\",\"1\")\n        halo.append(\"stop\")\n          .attr(\"offset\",\"100%\").attr(\"stop-color\", \"#FFF\")\n          .attr(\"stop-opacity\",\"0\")  \n\n    inset.svg.append(\"ellipse\")\n      .attr(\"cx\", inset.w/2).attr(\"cy\", inset.h/2)\n      .attr(\"rx\", inset.projection.scale()+20)\n      .attr(\"ry\", inset.projection.scale()+20)\n      .attr(\"class\", \"noclicks\")\n      .style(\"fill\", \"url(#halo)\");\n\n    inset.svg.append(\"circle\")\n      .attr(\"cx\", inset.w / 2).attr(\"cy\", inset.h / 2)\n      .attr(\"r\", inset.projection.scale())\n      .attr(\"class\", \"noclicks\")\n      .style(\"fill\", \"url(#ocean)\");\n\n    inset.svg.append(\"path\")\n      .datum(topojson.object(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", inset.path);\n\n    inset.svg.append(\"path\")\n      .datum(inset.graticule)\n      .attr(\"class\", \"graticule noclicks\")\n      .attr(\"d\", inset.path);\n\n    inset.svg.append(\"circle\")\n      .attr(\"cx\", inset.w / 2).attr(\"cy\", inset.h / 2)\n      .attr(\"r\", inset.projection.scale())\n      .attr(\"class\",\"noclicks\")\n      .style(\"fill\", \"url(#highlight)\");\n\n    inset.svg.append(\"circle\")\n      .attr(\"cx\", inset.w / 2).attr(\"cy\", inset.h/ 2)\n      .attr(\"r\", inset.projection.scale())\n      .attr(\"class\",\"noclicks\")\n      .style(\"fill\", \"url(#shade)\");\n\n    inset.svg.append(\"g\").attr(\"class\",\"points\")\n        .selectAll(\"text\").data(places.features)\n      .enter().append(\"path\")\n        .attr(\"class\", function(d){\n          return \"point r\" + (5-d.properties.scalerank)\n        })\n        .attr(\"d\", inset.path);\n    \n    inset.svg.append(\"g\").attr(\"class\",\"extents\")\n        .selectAll(\"path\").data(inset.extentRect)\n      .enter().append(\"path\")\n        .attr(\"class\", \"extent\")\n        .attr(\"d\", inset.path);\n  },\n  refresh: function(dims) {\n    inset.projection.rotate([-dims.center[0],-dims.center[1]])      \n\n    var e = dims.topline.concat(dims.bottomline);\n    e.push([dims.topline[0]])\n    \n    inset.extentRect[0].geometry.coordinates[0] = e;\n\n    inset.svg.select(\".extent\").attr(\"d\", inset.path);\n    inset.svg.select(\".land\").attr(\"d\", inset.path);\n    inset.svg.select(\".graticule\").attr(\"d\", inset.path);\n    inset.svg.select(\".extent\").attr(\"d\", inset.path);\n    inset.svg.selectAll(\".point\").attr(\"d\", inset.path);\n  }\n}\n\nvar tile = d3.geo.tile()\n    .size([width, height]);\n\nvar projection = d3.geo.mercator()\n    .center([-96, 38.3]);\n\nvar zoom = d3.behavior.zoom()\n    .scale(1 << 13)\n    .scaleExtent([1 << 12, 1 << 23])\n    .translate([width / 2, height / 2])\n    .on(\"zoom\", refresh);\n\nvar map = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"map\")\n    .style(\"width\", width + \"px\")\n    .style(\"height\", height + \"px\")\n    .call(zoom)\n    .on(\"mousemove\", mousemoved);\n\nvar layer = map.append(\"div\").attr(\"class\", \"layer\");\nvar info = map.append(\"div\").attr(\"class\", \"info\");\nvar attrib = map.append(\"div\").attr(\"class\", \"attrib\").html('Map tiles by <a href=\"http://mapbox.com\">Mapbox</a>, Data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap Contributors</a>.')\n\ninset.init();\nrefresh();\n\nfunction refresh() {\n  var tiles = tile\n        .scale(zoom.scale())\n        .translate(zoom.translate())\n        ();\n\n  projection\n      .scale(zoom.scale())\n      .translate(zoom.translate());\n\n  var map_dims = { \n        topline: [],\n        bottomline: [],\n        center:  projection.invert([width/2,height/2])\n      }\n\n  var samples = 8,\n      step = width/samples;\n\n  for (var i = 0; i < samples; i++) {\n    map_dims.topline\n      .push(projection.invert( [step*i,0] ))\n    map_dims.bottomline\n      .push(projection.invert( [step*(samples-i-1),height] ))\n  }\n\n  inset.refresh(map_dims)\n  \n  var image = layer\n      .style(prefix + \"transform\", matrix3d(tiles.scale, tiles.translate))\n    .selectAll(\".tile\")\n      .data(tiles, function(d) { return d; });\n\n  image.exit().remove();\n  image.enter().append(\"img\")\n      .attr(\"class\", \"tile\")\n      .attr(\"src\", function(d) { return \"http://a.tiles.mapbox.com/v3/landplanner.map-dm7abyjg/\" + d[2] + \"/\" + d[0] + \"/\" + d[1] + \".png\"; })\n      .style(\"left\", function(d) { return (d[0] << 8) + \"px\"; })\n      .style(\"top\", function(d) { return (d[1] << 8) + \"px\"; });\n}\n\nfunction mousemoved() {\n  info.text(formatLocation(projection.invert(d3.mouse(this)), zoom.scale()));\n}\n\nfunction matrix3d(scale, translate) {\n  var k = scale / 256, r = scale % 1 ? Number : Math.round;\n  return \"matrix3d(\" + [k, 0, 0, 0, 0, k, 0, 0, 0, 0, k, 0, r(translate[0] * scale), r(translate[1] * scale), 0, 1 ] + \")\";\n}\n\nfunction prefixMatch(p) {\n  var i = -1, n = p.length, s = document.body.style;\n  while (++i < n) if (p[i] + \"Transform\" in s) return \"-\" + p[i].toLowerCase() + \"-\";\n  return \"\";\n}\n\nfunction formatLocation(p, k) {\n  var format = d3.format(\".\" + Math.floor(Math.log(k) / 2 - 2) + \"f\");\n  return (p[1] < 0 ? format(-p[1]) + \"\u00b0S\" : format(p[1]) + \"\u00b0N\") + \" \"\n       + (p[0] < 0 ? format(-p[0]) + \"\u00b0W\" : format(p[0]) + \"\u00b0E\");\n}\n\n</script>", "description": "Fiddling with D3 Finder params", "created_at": "2013-02-05T18:35:57Z", "updated_at": "2015-12-12T04:48:52Z", "api": ["d3.geo.orthographic", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.geo.tile", "d3.geo.mercator", "d3.behavior.zoom", "d3.mouse", "d3.format"], "readme": "Extent indicator globe using [d3.geo.orthographic](https://github.com/mbostock/d3/wiki/Geo-Projections#wiki-orthographic) and radial gradients - EVERYTHING OF IMPORT HERE IS THE WORK OF @dwtkns\n\nSlippy map code from:  \n[http://bl.ocks.org/3943330](http://bl.ocks.org/3943330) by tmcw  \n[http://bl.ocks.org/4132797](http://bl.ocks.org/4132797) by mbostock  \n\nMap tiles from [Stamen](http://www.stamen.com)", "uid": "wboykinm_4716561"}, {"code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 Array of Tables Demo</title>\n  <!-- Author: Bo Ericsson, bo@boe.net -->\n  <link rel=stylesheet type=text/css href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/css/bootstrap.min.css\" media=\"all\">\n  <style>\n    body {\n      padding: 10px;\n      font-size: 12px;\n    }\n    .well {\n      padding-top: 0px;\n      padding-bottom: 0px;\n      width: 500px;\n    }\n    table {\n      font-size: 10px;\n      line-height: 10px;\n    }\n    td, th {\n      width: 33.3%;\n    }\n    label {\n      margin-bottom: 10px;\n    }\n  </style>\n<body>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js\"></script>\n<script>\n'use strict';\n\n// title div with label and button\nvar header = d3.select(\"body\").append(\"div\").attr(\"class\", \"well\");\n\nheader.append(\"h3\").text(\"Vaccine Record\");\n\nvar taskLabel = header.append(\"label\")\n    .attr(\"id\", \"taskLabel\")\n    .html(\"&nbsp;\");\n\nvar currTask =1;\nvar taskButton = header.append(\"button\")\n    .attr(\"class\", \"btn btn-primary\")\n    .style(\"margin-bottom\", \"20px\")\n    .style(\"width\", \"100%\")\n    .style(\"text-align\", \"left\")\n    .text(\"Start\")\n    .on(\"click\", function() {\n      this.blur();\n      // execute the task\n      tasks[currTask]();\n      // next task\n      currTask = ++currTask % tasks.length;\n    })\n\n// container for array of tables\nvar tableDiv = d3.select(\"body\").append(\"div\").attr(\"id\", \"tableDiv1\");\n\n// initial data\nvar data;\nvar initialData = [\n  { table: \"At birth\", rows: [\n      { table: \"Hepatitis B #1\", row: \"Jan 1, 2016\", data: \"Jan 1,2016\", status:\"Administered\" }\n    ]\n  },\n  { table: \"Second Month\", rows: [\n      { table: \"DTAP #1\", row: \"March 8, 2016\", data: \"March8, 2016\", status:\"pending\" },\n      { table: \"PCV #1\", row: \"March8, 2016\", data: \"March8, 2016\", status:\"pending\" },\n      { table: \"IPV #1\", row: \"March8, 2016\", data: \"March8, 2016\", status:\"pending\" }\n    ]\n  },\n  { table: \"Fourth Month\", rows: [\n      { table: \"DTAP #2\", row: \"May 18, 2016\", data: \"May 18, 2016\", status:\"pending\" },\n      { table: \"PCV #2\", row: \"May 18, 2016\", data: \"May 18, 2016\", status:\"pending\" },\n      { table: \"IPV #2\", row: \"May 18, 2016\", data: \"May 18, 2016\", status:\"pending\" }\n    ]\n  },\n  { table: \"Sixth to Fifteenth Month\", rows: [\n      { table: \"DTAP #3\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"PCV #3\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"IPV #3\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"MMR #1\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"Varicella\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"PCV #4\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" }\n    ]\n  }\n]\n\n// tasks\nfunction task0() {\n  update([]);\n\n  taskLabel.html(\"Cleared any existing tables\");\n  taskButton.text(\"Next step: Initial load of vaccine tables\");\n}\n\nfunction task1() {\n  data = JSON.parse(JSON.stringify(initialData));\n  update(data);\n\n  taskLabel.text(\"Name: Panace panacea ID: 1234 DOB: Jan 1, 2016  Age: 1 month\");\n  taskButton.text(\"Restart\");\n}\n\n\n\n\n\n// task list\nvar tasks = [task0, task1,];\n\n\n// function in charge of the array of tables (is called from the tasks defined above)\nfunction update(data) {\n\n  // get all divs in the table div \n  var divs = tableDiv.selectAll(\"div\")\n      // after .data() is executed below, divs becomes a d3 update selection\n      //.data(data, function(d) { return d.table }) // key function to disable default by-index evaluation\n      .data(function(d) {\n        return data;\n      }, function(d) { \n      return d.table \n      }) // key function to disable default by-index evaluation\n\n  // for any deleted table, remove its div and contents (by using the exit function of the update selection)\n  //divs.exit().remove();\n\n  // add new div(s); define divsEnter (all new divs), add each div and set id and class\n  var divsEnter = divs.enter().append(\"div\")\n      .attr(\"id\", function(d) { return d.table + \"Div\"; })\n      .attr(\"class\", \"well\")\n\n  // add title h5 in new div(s)\n  divsEnter.append(\"h5\").text(function(d) { return d.table; });\n\n  // add table(s) in new div(s)\n  var tableEnter = divsEnter.append(\"table\")\n      .attr(\"id\", function(d) { return d.table })\n      .attr(\"class\", \"table table-condensed table-striped table-bordered\")\n\n  // append table head in new table(s) in new div(s)\n  tableEnter.append(\"thead\")\n    .append(\"tr\")\n      .selectAll(\"th\")\n      .data([\"VACCINE\", \"DUE DATE\", \"ADMINISTERED ON\", \"STATUS\"])\n    .enter().append(\"th\")\n      .text(function(d) { return d; })\n\n  // append table body in new table(s) in new divs(s)\n  tableEnter.append(\"tbody\");\n\n  // select all tr elements in the divs update selection\n  var tr = divs.select(\"table\").select(\"tbody\").selectAll(\"tr\")\n      .data(function(d, i) { return d.rows; }, function(d) { return d.row }); // again we're using key function to disable by-index evaluation\n\n  // remove rows for missing data items\n  //tr.exit().remove();\n\n  // add rows for new data items\n  tr.enter().append(\"tr\");\n\n  // bind data to table cells\n  var td = tr.selectAll(\"td\")\n      .data(function(d, i) { return d3.values(d); });\n\n  // add new cells\n  td.enter().append(\"td\");\n\n  // update contents of table cells\n  td.text(function(d) { return d; })\n}\n\n\n</script>\n", "description": "D3 Dynamic Array of Tables", "created_at": "2016-04-26T15:45:43Z", "updated_at": "2016-04-26T16:12:33Z", "api": ["d3.select", "d3.values"], "readme": "## D3 Dynamic Array of Tables\n\nDemonstrates the the use of D3 to manage an array of tables. Via a button, the user will cycle through several steps which will mutate the underlying array of arrays, which at each step is fed to the table **update** function. For example, tables are added and removed from the array of tables, individual rows of tables are added and removed, and individual table cells are modified. The **update** function demonstrates the enter, exit and update patterns at the div/table level as well as at the table row level. \n\nFor **bl.ocks.org** users, the script should be viewed in its own window. See the script in action [here](http://bl.ocks.org/boeric/raw/e16ad218bc241dfd2d6e/)\n\nforked from <a href='http://bl.ocks.org/boeric/'>boeric</a>'s block: <a href='http://bl.ocks.org/boeric/e16ad218bc241dfd2d6e'>D3 Dynamic Array of Tables</a>\n\nforked from <a href='http://bl.ocks.org/devssunil/'>devssunil</a>'s block: <a href='http://bl.ocks.org/devssunil/5485fa28d3fdd422930b53ab330f96e3'>D3 Dynamic Array of Tables</a>", "uid": "devssunil_ce488bb628eb9e4468521b001f027a55"}, {"code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <!-- Author: Bo Ericsson -->\n  <title>Real Time Chart</title>\n  <link rel=stylesheet type=text/css href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css\" media=\"all\">\n  <style>\n  .axis text {\n    font: 10px sans-serif;\n  }\n  .chartTitle {\n    font-size: 12px;\n    font-weight: bold;\n    text-anchor: middle; \n  }\n  .axis .title {\n    font-weight: bold;\n    text-anchor: middle;\n  }\n  .axis path,\n  .axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n  }\n  .x.axis path {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n  }\n  .nav .area {\n    fill: lightgrey;\n    stroke-width: 0px;\n  }\n  .nav .line {\n    fill: none;\n    stroke: darkgrey;\n    stroke-width: 1px;\n  }\n  .viewport {\n    stroke: grey;\n    fill: black;\n    fill-opacity: 0.3;\n  }\n  .viewport .extent {\n    fill: green;\n  }\n  .well {\n    padding-top: 0px;\n    padding-bottom: 0px;\n  }\n  </style>\n<body>\n\n<div style=\"max-width: 600px; max-height: 400px; padding: 10px\">\n\n  <div class=\"well\">\n    <h4>D3 Based Real Time Chart \n  </div>\n\n  <div id=\"viewDiv\"></div>\n\n</div>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js\"></script>\n<script src=\"realTimeChart.js\"></script>\n<script>\n'use strict';\n\n// mean and deviation for time interval\nvar meanMs = 1000, // milliseconds\n    dev = 150;\n\n// define time scale\nvar timeScale = d3.scale.linear()\n    .domain([300, 1700])\n    .range([300, 1700])\n    .clamp(true);\n\n// define value scale\nvar valueScale = d3.scale.linear()\n    .domain([0, 1])\n    .range([30, 95]);\n\n// generate initial data\nvar normal = d3.random.normal(1000, 150);\nvar currMs = new Date().getTime() - 300000 - 4000;\nvar data = d3.range(300).map(function(d, i, arr) {\n  var value = valueScale(Math.random()); // random data\n  //var value = Math.round((d % 60) / 60 * 95); // ramp data\n  var interval = Math.round(timeScale(normal()));\n  currMs += interval;\n  var time = new Date(currMs);\n  var obj = { interval: interval, value: value, time: time, ts: currMs }\n  return obj;\n})\n\n// create the real time chart\nvar chart = realTimeChart()\n    .title(\"Chart Title\")\n    .yTitle(\"Y Scale\")\n    .xTitle(\"X Scale\")\n    .border(true)\n    .width(600)\n    .height(290)\n    .barWidth(1)\n    .initialData(data);\n\nconsole.log(\"Version: \", chart.version);\nconsole.dir(\"Dir++\");\nconsole.trace();\nconsole.warn(\"warn\")\n\n// invoke the chart\nvar chartDiv = d3.select(\"#viewDiv\").append(\"div\")\n    .attr(\"id\", \"chartDiv\")\n    .call(chart);\n\n// alternative invocation\n//chart(chartDiv); \n\n\n// drive data into the chart roughly every second\n// in a normal use case, real time data would arrive through the network or some other mechanism\nvar d = 0;\nfunction dataGenerator() {\n\n  var timeout = Math.round(timeScale(normal()));\n\n  setTimeout(function() {\n\n    // create new data item\n    var now = new Date();\n    var obj = {\n      value: valueScale(Math.random()), // random data\n      //value: Math.round((d++ % 60) / 60 * 95), // ramp data\n      time: now,\n      color: \"red\",\n      ts: now.getTime(),\n      interval: timeout\n    };\n\n    // send the datum to the chart\n    chart.datum(obj);\n\n    // do forever\n    dataGenerator();\n\n  }, timeout);\n}\n\n// start the data generator\ndataGenerator();\n\n</script>\n", "description": "D3 Based Real Time Chart", "created_at": "2015-09-27T02:46:29Z", "updated_at": "2015-11-15T21:32:52Z", "api": ["d3.scale.linear", "d3.random.normal", "d3.range", "d3.select", "d3.time.scale", "d3.svg.axis", "d3.svg.area", "d3.svg.line", "d3.svg.brush"], "readme": "## D3 Based Real Time Chart\n\nThe real time chart is a resuable Javascript component that accepts real time data. The chart's time domain is moving with the passage of time, which means that any data placed in the chart eventually will age out and leave the chart. In addition to the main chart, the component also manages a \"focus\" window with a viewport (d3.brush) that can moved and sized to view an arbitrary portion of the time series data. \n\nThe component adheres to the pattern described in [Towards Reusable Chart](http://bost.ocks.org/mike/chart/). \n\nThe following options are currently supported:\n\n- **width** and **height** in pixels (Number)\n- **border** (Boolean)\n- **title**, **xTitle**, **yTitle** (String)\n- **barWidth** in pixels (Number)\n\nFuture options will include:\n\n- **Scale** domain of real time data (currently a domain of [0, 100] is assumed for the y scale)\n- Use of SVG **rects, circles, paths** etc. to represent data (in addition to bars)\n\nUse the component like so:\n\n```\n// create the real time chart\nvar chart = realTimeChart()\n    .title(\"Chart Title\")\n    .yTitle(\"Y Scale\")\n    .xTitle(\"X Scale\")\n    .border(true)\n    .width(600)\n    .height(290)\n    .barWidth(1)\n    .initialData(data);\n\n// invoke the chart\nvar chartDiv = d3.select(\"#viewDiv\").append(\"div\")\n    .attr(\"id\", \"chartDiv\")\n    .call(chart);\n\n// create new data item and inject into chart\nvar now = new Date();\nvar obj = {\n  value: 50\n  time: now,\n  color: \"red\",\n  ts: now.getTime(),\n  interval: timeout\n};\n\n// send the datum to the chart\nchart.datum(obj);\n\n```\n", "uid": "boeric_3b57a788a4b96e1af211"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n    .axis path,\n    .axis line {\n        fill: none;\n        stroke: #000;\n        shape-rendering: crispEdges;\n    }\n    \n    .hidden {\n        opacity: 0.3;\n    }\n    \n    \n    .extent {\n        fill: #000;\n        fill-opacity: .125;\n        stroke: #fff;\n    }\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.js\"></script>\n<script>\n    \nvar margin = {top: 20, right: 50, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 350 - margin.top - margin.bottom;\n    \nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([0, 10]);\n    \nvar y = d3.scale.linear()\n    .range([height, 0])\n    .domain([0, 10]);\n    \nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n    \nvar curPt = d3.select('body')\n    .append('p')\n    .html(\"Current point: \")\n    .append('span')\n        .attr('id', 'curPt');\n    \nvar svg = d3.select('body').insert('svg', 'p')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n  .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n    \nsvg.append('g')\n    .attr('class', 'x axis')\n    .attr('transform', 'translate(0,'+height+')')\n    .call(xAxis);\n    \nsvg.append('g')\n    .attr('class', 'y axis')\n    .call(yAxis);\n    \nvar brush = d3.svg.brush()\n    .x(x)\n    .y(y)\n    .on(\"brush\", function() {\n        var e = brush.extent();\n        svg.selectAll('circle').classed('hidden', function(d) {\n            return e[0][0] > d[0] || d[0] > e[1][0]\n                || e[0][1] > d[1] || d[1] > e[1][1];\n            }\n        );\n    })\n    .on(\"brushend\", function() {\n        if (brush.empty()) svg.selectAll('circle').classed('hidden', false);\n    });\n    \nsvg.call(brush);\n    \nvar data = d3.range(50).map(function() { return [Math.random() * 10, Math.random() * 10]; });\n\nsvg.append('g') \n    .attr('class', 'points')\n    .selectAll('circle')\n    .data(data).enter()\n  .append('circle')\n    .attr('cx', function(d) { return x(d[0]); })\n    .attr('cy', function(d) { return y(d[1]); })\n    .attr('r', 10)\n    .style('fill', 'steelblue')\n    .on('mouseover', function(d) {\n        curPt.html(\"[\" + d[0] + \", \" + d[1] + \"]\");\n    })\n    .on('mouseout', function(d) {\n        curPt.html(\"\");\n    })\n\t\t.on('mousedown', function(d){\n  \t\tvar e = brush.extent();\n  \t\tif (e[0][0] === e[1][0] || e[0][1] === e[1][1]){\n        brush.extent([d,d]);\n      }\n\t\t})\n/*\n    .on('mousedown', function() {\n        var bubbleEvent = new Event('mousedown');\n        bubbleEvent.pageX = d3.event.pageX;\n        bubbleEvent.clientX = d3.event.clientX;\n        bubbleEvent.pageY = d3.event.pageY;\n        bubbleEvent.clientY = d3.event.clientY;\n        \n        // figure out where we are\n        var pos = d3.mouse(this);\n        var b = d3.select('rect.extent').node().getBBox();\n        \n        // test if outside of  bounds of brush extent\n        if (pos[0] < b.x - 3 || pos[1] < b.y - 3 ||\n            pos[0] > b.x + b.width + 3 ||\n            pos[1] > b.y + b.height + 3) {\n            \n            // also do special things for resizing rects, but not necessary in this example\n            \n            // bubbleEvent.target = d3.select('rect.background').node();\n            d3.select('rect.background').node().dispatchEvent(bubbleEvent);\n            }\n        else {\n            // bubbleEvent.target = d3.select('rect.extent').node();\n            d3.select('rect.extent').node().dispatchEvent(bubbleEvent);\n        }\n    });\n*/\n    \n</script>", "description": "Getting hover-interaction and brushing to co-exist", "created_at": "2016-05-20T20:00:07Z", "updated_at": "2016-05-20T20:00:07Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.select", "d3.svg.brush", "d3.range", "d3.mouse"], "readme": "Trying to get point hover-interaction and brushing to exist.  I have found some existing precedence ([bug #1604](https://github.com/d3/d3/issues/1604)) for this being a weird problem, particular in relation to how D3's `brush` is implemented.  Previous solutions have suggested drawing points on top and [passing the event along to the brush](http://wrobstory.github.io/2013/11/D3-brush-and-tooltip.html), but this does not handle the case where the brush extent needs to be persistent (in the bigger picture, the scatterplot is linked to other components).\n\nAs implemented above, the brush draws fine and information can be recovered from points on hover.  However, if the brush is started, dragged, or resized with the **mouse starting on a point**, strange behavior occurs (e.g. trying to translate an extent by clicking on a point will cause the extent to resize instead).\n\nHere's what I've got: in `brushstart()` defined in [D3.js](http://d3js.org/d3.v3.js) (line 9192), there are two targets of interest: `this` (which is the element that `brush` is called on), and `eventTarget` (the actual element that was clicked).  For the different operations (dragging, resizing, and \"redrawing\"), `this` should be the parent brush element (in this case, the `svg` element), and `eventTarget` should be the child element that was actually clicked (`rect.extent` for translating the extent, `rect` with datum for resizing, and `rect.background` for redrawing/canceling).  \n\nI can't seem to set the `eventTarget` property within `brushstart()`  appropriately.  Any ideas?\n\n\nforked from <a href='http://bl.ocks.org/yelper/'>yelper</a>'s block: <a href='http://bl.ocks.org/yelper/d38ddf461a0175ebd927946d15140947'>Getting hover-interaction and brushing to co-exist</a>", "uid": "larsenmtl_2862c433899f63456f5279e4a6281f5e"}, {"code": "<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>A very simple D3 map</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n    <script src=\"ky-counties.js\"></script>\n    \n    <link href=\"http://fonts.googleapis.com/css?family=Montserrat\" rel=\"stylesheet\" type=\"text/css\">\n<style>\n    body {\n        padding: 0;\n        margin: 0;\n        background: whitesmoke;\n    }\n    h1 {\n        position: absolute;\n        left: 20px;\n        top: 10px;\n        font-family: \"Proxima Nova\", Montserrat, sans-serif;\n        font-size: 2em;\n        font-weight: 100;\n        color: #005DAA; /* offical UK Kentucky blue */\n    }\n    .county {\n      stroke: #fff;\n      fill:#005DAA;\n    } \n</style>\n</head>\n<body>\n    <h1>Kentucky Counties</h1>\n  <script>\n        \n    var width = 900,\n        height = 600;\n    \n    var svg = d3.select( \"body\" )\n          .append( \"svg\" )\n          .attr( \"width\", width )\n          .attr( \"height\", height );\n      \n    var projection = d3.geo.albers()\n        .center([0, 37.8])\n        .rotate([85.8,0])\n        .scale(8000)\n        .translate([width / 2, height / 2]);\n\n    var geoPath = d3.geo.path()\n        .projection(projection);\n        \n    svg.append(\"g\")\n        .selectAll(\"path\")\n        .data(counties.features)\n        .enter()\n        .append(\"path\")\n        .attr( \"d\", geoPath )\n        .attr(\"class\",\"county\");\n \n  </script>\n</body>\n</html>", "description": "A very simple D3 map", "created_at": "2015-06-24T15:15:37Z", "updated_at": "2015-08-29T14:23:38Z", "api": ["d3.select", "d3.geo.albers", "d3.geo.path"], "readme": "Example of map explained in maptimeLex [Introduction to D3.js Web Mapping Through 7 Simple Maps](https://github.com/maptimelex/d3-mapping).", "uid": "rgdonohue_4793dab7f993a81cc670"}, {"code": "Using d3-tip to add tooltips to a d3 bar chart.\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.bar {\n  fill: green;\n}\n\n.bar:hover {\n  fill: purple ;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.d3-tip {\n  line-height: 1;\n  font-weight: bold;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  border-radius: 2px;\n}\n\n/* Creates a small triangle extender for the tooltip */\n.d3-tip:after {\n  box-sizing: border-box;\n  display: inline;\n  font-size: 10px;\n  width: 100%;\n  line-height: 1;\n  color: rgba(0, 0, 0, 0.8);\n  content: \"\\25BC\";\n  position: absolute;\n  text-align: center;\n}\n\n/* Style northward tooltips differently */\n.d3-tip.n:after {\n  margin: -1px 0 0 0;\n  top: 100%;\n  left: 0;\n}\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js\"></script>\n<script>\n\nvar margin = {top: 40, right: 20, bottom: 50, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatPercent = d3.format(\".0%\");\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(formatPercent);\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Frequency:</strong> <span style='color:red'>\" + d.frequency + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>\n", "description": "Using d3-tip to add tool", "created_at": "2016-04-18T12:07:18Z", "updated_at": "2016-04-18T12:07:18Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "How to use [d3-tip](https://github.com/caged/d3-tip) with d3's [simple bar chart example](http://bl.ocks.org/mbostock/3885304).\n\n\nforked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>\n\nforked from <a href='http://bl.ocks.org/wcjohnson11/'>wcjohnson11</a>'s block: <a href='http://bl.ocks.org/wcjohnson11/04feb3139aa6a857d67f756afa6abda1'>Using d3-tip to add tooltips to a d3 bar chart</a>\n\nforked from <a href='http://bl.ocks.org/aax951/'>aax951</a>'s block: <a href='http://bl.ocks.org/aax951/d7a90cc03d3e1bddffa5569cae11490d'>Using d3-tip to add tool</a>", "uid": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.states {\n  fill: #ccc;\n  stroke: #fff;\n}\n</style>\n<body>\n<button type=\"button\" id=\"change\">Change</button>\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v0.min.js\"></script>\n\n<script>\nvar width = 960,\n    height = 500;\nvar states;\nvar projection = d3.geo.mercator()\n    .center([-97,37])\n    .scale(4000 / 2 / Math.PI)\n    .translate([width / 2, height / 2]);\n\n\nvar path = d3.geo.path()\n.projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"/mbostock/raw/4090846/us.json\", function(error, us) {\n   states = svg.append(\"path\")\n      .attr(\"class\", \"states\")\n      .datum(topojson.object(us, us.objects.states))\n      .attr(\"d\", path);\n\n  \n});\n\nd3.select(\"#change\").on(\"click\", function() {\n  projection = d3.geo.albers();\npath.projection(projection);\nstates.transition()\n      .duration(10000)\n      .attr(\"d\", path);\n});\n\n\n</script>\n\n", "description": "D3 tutorial III: Projection transition", "created_at": "2013-03-17T10:45:38Z", "updated_at": "2015-12-15T01:38:58Z", "api": ["d3.geo.mercator", "d3.geo.path", "d3.select", "d3.json", "d3.geo.albers"], "readme": "This example belongs to [the presentation](rveciana.github.com/geoexamples/geoinquiets/d3js/index_en.html) made to the [OSGeo](http://www.osgeo.org/) local group in Barcelona [Geoinquiets](http://www.geoinquiets.cat/)\nThe example is an adaptation from [Mike Bostock](http://bost.ocks.org/mike/)'s [Symbol Map example](http://bl.ocks.org/mbostock/4342045)", "uid": "rveciana_5181026"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.states {\n  fill: #ccc;\n  stroke: #fff;\n}\n\n.symbol {\n  fill: steelblue;\n  fill-opacity: .8;\n  stroke: #fff;\n}\n\n</style>\n<body>\n<button type=\"button\" id=\"change\">Change</button>\n\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v0.min.js\"></script>\n<script src=\"http://d3js.org/queue.v1.min.js\"></script>\n\n\n<script>\nvar width = 960,\n    height = 500;\nvar states, points;\n\n\nvar radius = d3.scale.sqrt()\n    .domain([0, 1e6])\n    .range([0, 10]);\n\nvar projection = d3.geo.mercator()\n    .center([-97,37])\n    .scale(4000 / 2 / Math.PI)\n    .translate([width / 2, height / 2]);\n\n\nvar path = d3.geo.path()\n.projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nqueue()\n    .defer(d3.json, \"/mbostock/raw/4090846/us.json\")\n    .defer(d3.json, \"/mbostock/raw/3750900/us-state-centroids.json\")\n    .await(ready);\n\n\nfunction ready(error, us, centroid) {\nstates = svg.append(\"path\")\n      .attr(\"class\", \"states\")\n      .datum(topojson.object(us, us.objects.states))\n      .attr(\"d\", path);\n\n    points =  svg.selectAll(\".symbol\")\n      .data(centroid.features.sort(function(a, b) { return b.properties.population - a.properties.population; }))\n    .enter().append(\"path\")\n      .attr(\"class\", \"symbol\")\n      .attr(\"d\", path.pointRadius(function(d) { if(d.properties) { return radius(d.properties.population);} else {return;} }));\n};\n\nd3.select(\"#change\").on(\"click\", function() {\n  projection = d3.geo.albers();\n  path.projection(projection);\n  states.transition()\n      .duration(10000)\n      .attr(\"d\", path);\n  points.transition()\n      .duration(3000)\n      .attr(\"d\", path);\n});\n\n\n</script>\n\n", "description": "D3 tutorial IV: Adding points", "created_at": "2013-03-17T11:10:04Z", "updated_at": "2015-12-15T01:39:01Z", "api": ["d3.scale.sqrt", "d3.geo.mercator", "d3.geo.path", "d3.select", "d3.geo.albers"], "readme": "This example belongs to [the presentation](rveciana.github.com/geoexamples/geoinquiets/d3js/index_en.html) made to the [OSGeo](http://www.osgeo.org/) local group in Barcelona [Geoinquiets](http://www.geoinquiets.cat/)\nThe example is an adaptation from [Mike Bostock](http://bost.ocks.org/mike/)'s [Symbol Map example](http://bl.ocks.org/mbostock/4342045)", "uid": "rveciana_5181095"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Center on a Point</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n  function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n\n    map.addTileLayer(\"examples.map-zgrqqx0w\", \"Base\", \"mapbox\", false);\n    map.centerOn([-0.1275,51.507],\"latlong\",5000);\n    map.addTopoJSONLayer(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson\",\"TopoJSON\",\"roads\",\"svg\",\"all\");\n    map.addCSVLayer(\"http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv\",\"CSV Points\",\"pinkcircle\",2,\"svg\",\"x\",\"y\");\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\"></script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Center on a Point - d3.carto.map", "created_at": "2014-07-12T19:46:14Z", "updated_at": "2015-08-29T14:03:54Z", "api": ["d3.carto.map", "d3.select"], "readme": "How to center on a point with **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nThe centerOn function can take \"latlong\" coordinates, which are latitude and longitude in XY order, or \"scaled\" coordinates, which are XY coordinates in the scaled space on the map. You can get latlong from d3.geo.centroid() and scaled from d3.geo.path.centroid().", "uid": "emeeks_0fa283f6844b6d768f99"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the scatterplot\n    svg.selectAll(\"dot\")\n        .data(data)\n      .enter().append(\"circle\")\n        .attr(\"r\", 3.5)\n        .attr(\"cx\", function(d) { return x(d.date); })\n        .attr(\"cy\", function(d) { return y(d.close); });\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>\n", "description": "Simple scatterplot with d3.js", "created_at": "2014-06-22T18:12:55Z", "updated_at": "2015-08-29T14:02:53Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple d3.js graph](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt adds points to a simple line graph to produce a hybrid line / scatterplot graph. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_38744a17f9c0141bcd04"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\ncircle {\n  fill: rgb(31, 119, 180);\n  fill-opacity: .25;\n  stroke: rgb(31, 119, 180);\n  stroke-width: 1px;\n}\n\n.leaf circle {\n  fill: #ff7f0e;\n  fill-opacity: 1;\n}\n\ntext {\n  font: 10px sans-serif;\n}\n\n</style>\n<body>\n<script src=\"d3.min.js\"></script>\n<script>\n\nvar diameter = 500,\n    format = d3.format(\",d\");\n\nvar pack = d3.layout.pack()\n    .margin(10)\n    .size([diameter - 4, diameter - 4])\n    .value(function(d) { return d.size; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(2,2)\");\n\nd3.json(\"flare.json\", function(error, root) {\n  if (error) throw error;\n\n  var node = svg.datum(root).selectAll(\".node\")\n      .data(pack.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return d.children ? \"node\" : \"leaf node\"; })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"title\")\n      .text(function(d) { return d.name + (d.children ? \"\" : \": \" + format(d.size)); });\n\n  node.append(\"circle\")\n      .attr(\"r\", function(d) { return d.r; });\n\n  node.filter(function(d) { return !d.children; }).append(\"text\")\n      .attr(\"dy\", \".3em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.name.substring(0, d.r / 3); });\n});\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n</script>\n", "description": "D3 pack layout margin demo", "created_at": "2015-08-27T04:00:32Z", "updated_at": "2015-08-27T04:04:50Z", "api": ["d3.format", "d3.layout.pack", "d3.select", "d3.json"], "readme": "", "uid": "larskotthoff_085bb57f710aa417af41"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Automated Convex Hulls</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n  .cityhull {\n    fill: purple;\n    fill-opacity: .5;\n    stroke: black;\n    stroke-width: 1px;\n  }\n  \n  .point {\n    fill: darkred;\n    stroke: black;\n    stroke-width: 1px;\n  }\n\n</style>\n<script>\n      function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    \n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Base\")\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"all_sites.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"point\")\n    .renderMode(\"canvas\")\n    .markerSize(1)\n    .x(\"xcoord\")\n    .y(\"ycoord\")\n    .on(\"load\", makeHull)\n    .clickableFeatures(true);\n\n    map.addCartoLayer(tileLayer)\n    .addCartoLayer(csvLayer);\n    map.centerOn([-115,40],\"latlong\").setScale(2);\n\n        function makeHull() {\n          hullLayer = map.createHullLayer(csvLayer, function(d) {return d.ccode});\n          hullLayer.markerSize(1).cssClass(\"cityhull\")\n          .on(\"load\", recolorHulls)\n          map.addCartoLayer(hullLayer);\n          \n          function recolorHulls() {\n            var hullColor = d3.scale.category20b();\n              hullLayer.g()\n              .selectAll(\"path\")\n              .style(\"fill\", function(d,i) {return hullColor(i%20)});\n          }\n    }\n\n  }\n  \n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Automated Convex Hulls - d3.carto", "created_at": "2014-09-25T02:30:15Z", "updated_at": "2015-08-29T14:06:52Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer", "d3.carto.layer.csv", "d3.scale.category20b"], "readme": "Automated convex hull layers in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\n**map.createHullLayer** takes a d3.carto.layer and an accessor function that identifies the categorical attributes of the features in that carto layer from which to create hulls. In this example, hulls are created based on the \"ccode\" attribute of a feature.\n", "uid": "emeeks_e484f2b1b5ba6c4742f6"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.bar {\n  fill: steelblue;\n}\n\n.bar:hover {\n  fill: brown;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path {\n  display: none;\n}\n\n</style>\n<body>\n<script src=\"d3.v3.min.js\"></script>\n<script>\n\n// Mike Bostock \"margin conventions\"\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// D3 scales = just math\n// x is a function that transforms from \"domain\" (data) into \"range\" (usual pixels)\n// domain gets set after the data loads\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\n// D3 Axis - renders a d3 scale in SVG\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\n// create an SVG element (appended to body)\n// set size\n// add a \"g\" element (think \"group\")\n// annoying d3 gotcha - the 'svg' variable here is a 'g' element\n// the final line sets the transform on <g>, not on <svg>\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n  .append(\"text\") // just for the title (ticks are automatic)\n    .attr(\"transform\", \"rotate(-90)\") // rotate the text!\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"Frequency\");\n\n// d3.tsv is a wrapper around XMLHTTPRequest, returns array of arrays (?) for a TSV file\n// type function transforms strings to numbers, dates, etc.\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  replay(data);\n});\n\nfunction type(d) {\n  // + coerces to a Number from a String (or anything)\n  d.frequency = +d.frequency;\n  return d;\n}\n\nfunction replay(data) {\n  var slices = [];\n  for (var i = 0; i < data.length; i++) {\n    slices.push(data.slice(0, i+1));\n  }\n  slices.forEach(function(slice, index){\n    setTimeout(function(){\n      draw(slice);\n    }, index * 300);\n  });\n}\n\nfunction draw(data) {\n  // measure the domain (for x, unique letters) (for y [0,maxFrequency])\n  // now the scales are finished and usable\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  // another g element, this time to move the origin to the bottom of the svg element\n  // someSelection.call(thing) is roughly equivalent to thing(someSelection[i])\n  //   for everything in the selection\\\n  // the end result is g populated with text and lines!\n  svg.select('.x.axis').transition().duration(300).call(xAxis);\n\n  // same for yAxis but with more transform and a title\n  svg.select(\".y.axis\").transition().duration(300).call(yAxis)\n\n  // THIS IS THE ACTUAL WORK!\n  var bars = svg.selectAll(\".bar\").data(data, function(d) { return d.letter; }) // (data) is an array/iterable thing, second argument is an ID generator function\n\n  bars.exit()\n    .transition()\n      .duration(300)\n    .attr(\"y\", y(0))\n    .attr(\"height\", height - y(0))\n    .style('fill-opacity', 1e-6)\n    .remove();\n\n  // data that needs DOM = enter() (a set/selection, not an event!)\n  bars.enter().append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"y\", y(0))\n    .attr(\"height\", height - y(0));\n\n  // the \"UPDATE\" set:\n  bars.transition().duration(300).attr(\"x\", function(d) { return x(d.letter); }) // (d) is one item from the data array, x is the scale object from above\n    .attr(\"width\", x.rangeBand()) // constant, so no callback function(d) here\n    .attr(\"y\", function(d) { return y(d.frequency); })\n    .attr(\"height\", function(d) { return height - y(d.frequency); }); // flip the height, because y's domain is bottom up, but SVG renders top down\n\n}\n\n</script>\n", "description": "D3 Bar Chart Update Pattern", "created_at": "2014-08-29T23:07:06Z", "updated_at": "2016-04-21T08:36:44Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This animated bar chart is adapted from [Mike Bostock's sample bar chart](http://bl.ocks.org/mbostock/3885304) to allow redrawing and animated transitions.\n", "uid": "RandomEtc_cff3610e7dd47bef2d01"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the scatterplot\n    svg.selectAll(\"dot\")\n        .data(data)\n      .enter().append(\"circle\")\n        .attr(\"r\", 3.5)\n        .attr(\"cx\", function(d) { return x(d.date); })\n        .attr(\"cy\", function(d) { return y(d.close); });\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>\n</body>\n", "description": "Simple scatterplot with d3.js", "created_at": "2016-02-24T21:47:55Z", "updated_at": "2016-02-24T21:47:56Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple d3.js graph](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt adds points to a simple line graph to produce a hybrid line / scatterplot graph. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/38744a17f9c0141bcd04'>Simple scatterplot with d3.js</a>", "uid": "nguyenbq_a350280a02c8105529d0"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n    font: 12px Arial;\n}\n\ntext.shadow {\n  stroke: #fff;\n  stroke-width: 2.5px;\n  opacity: 0.9;\n}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n.grid .tick {\n    stroke: lightgrey;\n    stroke-opacity: 0.7;\n    shape-rendering: crispEdges;\n}\n.grid path {\n          stroke-width: 0;\n}\n\n.area {\n    fill: lightsteelblue;\n      stroke-width: 0;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\nvar margin = {top: 30, right: 20, bottom: 35, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .ticks(5);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(5);\n\nvar area = d3.svg.area()\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.close); });\n\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// function for the x grid lines\nfunction make_x_axis() {\n    return d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\")\n        .ticks(5)\n}\n\n// function for the y grid lines\nfunction make_y_axis() {\n  return d3.svg.axis()\n      .scale(y)\n      .orient(\"left\")\n      .ticks(5)\n}\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the filled area\n    svg.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"area\")\n        .attr(\"d\", area);\n\n    // Draw the x Grid lines\n    svg.append(\"g\")\n        .attr(\"class\", \"grid\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(make_x_axis()\n            .tickSize(-height, 0, 0)\n            .tickFormat(\"\")\n        )\n\n    // Draw the y Grid lines\n    svg.append(\"g\")            \n        .attr(\"class\", \"grid\")\n        .call(make_y_axis()\n            .tickSize(-width, 0, 0)\n            .tickFormat(\"\")\n        )\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"d\", valueline(data));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n    // Add the text label for the X axis\n    svg.append(\"text\")\n        .attr(\"transform\",\n              \"translate(\" + (width/2) + \" ,\" + \n                             (height+margin.bottom) + \")\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Date\");\n\n    // Add the white background to the y axis label for legibility\n    svg.append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"x\", margin.top - (height / 2))\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"class\", \"shadow\")\n        .text(\"Price ($)\");\n\n    // Add the text label for the Y axis\n    svg.append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"x\", margin.top - (height / 2))\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .text(\"Price ($)\");\n\n    // Add the title\n    svg.append(\"text\")\n        .attr(\"x\", (width / 2))     \n        .attr(\"y\", 0 - (margin.top / 2))\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-size\", \"16px\")\n        .style(\"text-decoration\", \"underline\")\n        .text(\"Price vs Date Graph\");\n\n});\n\n</script>\n</body>\n", "description": "d3.js Graph with many features", "created_at": "2014-06-20T21:02:21Z", "updated_at": "2016-03-11T03:25:07Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple d3.js graph](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at exploring some features of d3.js and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_e1aa61856118edfa624d"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Orbit Layout Modes</title>\n  <meta charset=\"utf-8\" />\n</head>\n<style>\n\n  #viz, svg {\n    width: 100%;\n    height: 100%;\n  }\n\n  text {\n    pointer-events: none;\n  }\n\n  #buttons {\n    position: fixed;\n    top:0;\n    left:0;\n  }\n\n  circle.ring {\n    fill: none;\n    stroke: black;\n    stroke-width: 1px;\n    stroke-opacity: .15;\n\n  }\n  \n</style>\n<script>\n\n\nfunction makeViz() {\n\n  d3.json(\"d3.json\", function(data) {drawOrbit(data)});\n\n}\n\nfunction drawOrbit(_data) {\n\n  var center = {};\n  var recenter = false;\n\n\n  for (var x=0;x<_data.children.length;x++) {\n    _data.children[x].size = _data.children[x].children ? _data.children[x].children.length : 0;\n  }\n\n  _data.children.sort(function(a,b) {\n        if (a.size > b.size) {\n          return 1;\n        }\n        if (a.size < b.size) {\n          return -1;\n        }\n        return 0;\n  })\n\n\n  sizeScale = d3.scale.linear().domain([0,1,5,10,20]).range([4,6,8,10,12]).clamp(true);\n  colorScale = d3.scale.linear().domain([0,1,2,3,4]).range([\"rgb(161,208,120)\",\"rgb(247,148,72)\",\"rgb(225,203,208)\",\"rgb(174,223,228)\",\"rgb(245,132,102)\"]);\n\n  planetColors = {Mercury: \"gray\", Venus: \"#d6bb87\", Earth: \"#677188\", Mars: \"#7c5541\", Jupiter: \"#a36a3e\", Saturn: \"#e9ba85\", Uranus: \"#73cbf0\", Neptune: \"#6383d1\"}\n\n\n  orbit = d3.layout.orbit().size([800,800])\n  .revolution(customRevolution)\n  .orbitSize(function(d) {return d.depth >= 2 ? 6 : 4})\n  .speed(.25)\n  .mode([35,36,8,3,1])\n  .nodes(_data);\n\n  center = orbit.nodes()[0];\n\n  d3.select(\"svg\")\n.append(\"g\")\n.attr(\"class\", \"viz\")\n.attr(\"transform\", \"translate(50,50)\")\n  .selectAll(\"g.node\").data(orbit.nodes())\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"})\n  .on(\"mouseover\", nodeOver)\n  .on(\"click\", recenter)\n\n  d3.selectAll(\"g.node\")\n  .append(\"circle\")\n  .attr(\"class\", \"satellite\")\n  .attr(\"r\", function(d) {return sizeScale(d.children ? d.children.length : 0)})\n  .style(\"fill\", function(d) {return colorScale(d.depth)})\n  .style(\"stroke\", \"brown\")\n  .style(\"stroke-width\", \"1px\")\n\n  d3.selectAll(\"g.node\").filter(function(d) {return d.depth == 1})\n  .append(\"text\")\n  .text(function(d) {return d.depth == 0 ? \"Sun\" : d.key})\n  .attr(\"y\", 20)\n  .style(\"text-anchor\", \"middle\")\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n  .enter()\n  .insert(\"circle\", \"g\")\n  .attr(\"class\", \"ring\")\n  .attr(\"r\", function(d) {return d.r})\n  .attr(\"cx\", function(d) {return d.x})\n  .attr(\"cy\", function(d) {return d.y})\n\n  orbit.on(\"tick\", orbitTick);\n\n  orbit.start();\n\n  function orbitTick() {\n\n    var newX = 200- center.x;\n    var newY = 200 - center.y;\n\n    d3.select(\"g.viz\")\n    .attr(\"transform\", \"scale(\"+(1 + (center.depth *.1)) +\") translate(\" + newX + \",\" + newY + \")\")\n\n\n    d3.selectAll(\"g.node\")\n      .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"});\n\n    d3.selectAll(\"circle.ring\")\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n\n        d3.selectAll(\"line.visible\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n\n  }\n\n  function changeCenter() {\n        recenter = false;\n        orbit.stop();\n    var newX = 200 - center.x;\n    var newY = 200 - center.y;\n\n    d3.select(\"g.viz\")\n    .transition()\n    .duration(1000)\n    .attr(\"transform\", \"scale(\"+(1 + (center.depth *.1)) +\") translate(\" + newX + \",\" + newY + \")\")\n    .each(\"end\", function() {orbit.start()})\n\n  }\n\n  function customRevolution(d) \n  {\n    if (d.name == \"time\") {\n      return d.depth * .25;\n    }\n    if (d.name == \"geo\") {\n      return -d.depth * .25;      \n    }\n    return d.depth\n  }\n\n  function nodeOver(d) {\n    orbit.stop();\n\n      center = d;\n      changeCenter();\n\n      d3.selectAll(\"text.sat\").remove();\n\n      d3.selectAll(\"line.visible\").remove();\n\n      if (d.children) {\n        var lines = d.children.map(function(p) {return {source: d, target: p}})\n        d3.select(\"g.viz\").selectAll(\"line.visible\")\n        .data(lines)\n        .enter()\n        .insert(\"line\", \"g\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n        .attr(\"class\", \"visible\")\n        .style(\"stroke\", \"rgb(73,106,154)\")\n        .style(\"stroke-width\", 2)\n      }\n\n      if (d.parent) {\n\n        d3.select(\"g.viz\").selectAll(\"line.fake\")\n        .data([{source:d, target: d.parent}])\n        .enter()\n        .insert(\"line\", \"g\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n        .attr(\"class\", \"visible\")\n        .style(\"stroke\", \"rgb(165,127,124)\")\n        .style(\"stroke-width\", 3)\n      }\n\n\n      d3.selectAll(\"g.node\")\n      .filter(function(p) {return p == d || p == d.parent || (d.children ? d.children.indexOf(p) > -1 : false)})\n      .append(\"text\")\n      .text(function(p) {return p.name})\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"sat\")\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", \"white\")\n      .style(\"stroke-width\", 3)\n      .style(\"stroke-opacity\", .7);\n\n      d3.selectAll(\"g.node\")\n      .filter(function(p) {return p == d || p == d.parent || (d.children ? d.children.indexOf(p) > -1 : false)})\n      .append(\"text\")\n      .text(function(p) {return p.name})\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"sat\");\n\n    d3.selectAll(\"g.node > circle\").style(\"stroke\", \"brown\").style(\"stroke-width\", 1);    \n\n    d3.select(this).select(\"circle\").style(\"stroke\", \"black\").style(\"stroke-width\", 3);\n\n  }\n\n\n}\n\n</script>\n<body onload=\"makeViz()\">\n<div id=\"viz\"><svg></svg><div id=\"buttons\"></div></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"d3.layout.orbit.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n</footer>\n</body>\n</html>", "description": "Orbital Layout of D3.js API", "created_at": "2015-11-08T15:00:38Z", "updated_at": "2015-11-08T15:00:38Z", "api": ["d3.dispatch", "d3.rebind", "d3.layout.pie", "d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that visualizes the D3 API.\n\nWhen you mouseover a node, it displays its label and centers the orbit layout on that node. It also draws spokes to children and parents where applicable.", "uid": "wcjohnson11_7a0309cc11757a3e5b3e"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2.5px;\n  shape-rendering: crispEdges;\n}\n .axis line {\n  fill: none;\n  stroke: black;\n  stroke-width: 1.6px;\n}\n\n.axis .minor {\n  stroke: black;\n  stroke-width: 0.4px;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.scale.linear()\n    .domain([0, 1000])\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(5).tickSubdivide(1).tickSize(-60, -20, 0));\n  \n  svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"top\").ticks(5).tickSubdivide(10).tickSize(-60, -30, 0));\n  \n\n</script>", "description": "d3.js major minor tick style 3", "created_at": "2016-02-18T16:23:39Z", "updated_at": "2016-02-18T16:23:39Z", "api": ["d3.scale.linear", "d3.select", "d3.svg.axis"], "readme": "\n\nforked from <a href='http://bl.ocks.org/vjpgo/'>vjpgo</a>'s block: <a href='http://bl.ocks.org/vjpgo/4689130'>d3.js major minor tick style 3</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/60e84ea5cdffa49356e4'>d3.js major minor tick style 3</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/384dd445a6a7ae9f6086'>d3.js major minor tick style 3</a>", "uid": "ashtonburg_4384949715de645a77ef"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2.5px;\n  shape-rendering: crispEdges;\n}\n .axis line {\n  fill: none;\n  stroke: green;\n  stroke-width: 1.6px;\n}\n\n.axis .minor {\n  stroke: red;\n  stroke-width: 0.4px;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.time.scale()\n    .domain([new Date, new Date])\n    .nice(d3.time.week)\n    .range([0, width]);\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(16).tickSubdivide(3).tickSize(-60, -60, 0));\n \n</script>", "description": "d3.js major minor tick style 3", "created_at": "2016-02-18T15:47:08Z", "updated_at": "2016-02-18T15:47:08Z", "api": ["d3.time.scale", "d3.select", "d3.svg.axis"], "readme": "\n\nforked from <a href='http://bl.ocks.org/vjpgo/'>vjpgo</a>'s block: <a href='http://bl.ocks.org/vjpgo/4689130'>d3.js major minor tick style 3</a>", "uid": "ashtonburg_60e84ea5cdffa49356e4"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.point {\n  fill: #2f225d;\n  stroke: #afa2dc;\n}\n\n.selected {\n  fill: #afa2dc;\n  stroke: #2f225d;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\np {\n  font: 12px sans-serif;\n  margin: 0 0 2px 0;\n  padding: 0;\n}\n\n.clear-button {\n  font: 14px sans-serif;\n  cursor: pointer;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\nd3.helper = {};\n\nd3.helper.tooltip = function(){\n    var tooltipDiv;\n    var bodyNode = d3.select('body').node();\n\n    function tooltip(selection){\n\n        selection.on('mouseover.tooltip', function(pD, pI){\n            // Clean up lost tooltips\n            d3.select('body').selectAll('div.tooltip').remove();\n            // Append tooltip\n            tooltipDiv = d3.select('body')\n                           .append('div')\n                           .attr('class', 'tooltip')\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px',\n                'background-color': '#d8d5e4',\n                width: '65px',\n                height: '30px',\n                padding: '5px',\n                position: 'absolute',\n                'z-index': 1001,\n                'box-shadow': '0 1px 2px 0 #656565'\n            });\n\n            var first_line = '<p>X-Value: ' + pD.index + '</p>'\n            var second_line = '<p>Y-Value: ' + pD.value + '</p>'\n\n            tooltipDiv.html(first_line + second_line)\n        })\n        .on('mousemove.tooltip', function(pD, pI){\n            // Move tooltip\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px'\n            });\n        })\n        .on('mouseout.tooltip', function(pD, pI){\n            // Remove tooltip\n            tooltipDiv.remove();\n        });\n\n    }\n\n    tooltip.attr = function(_x){\n        if (!arguments.length) return attrs;\n        attrs = _x;\n        return this;\n    };\n\n    tooltip.style = function(_x){\n        if (!arguments.length) return styles;\n        styles = _x;\n        return this;\n    };\n\n    return tooltip;\n};\n\nvar data = [];\nvar values = [];\nfor (var i = 2; i <= 50; i++) {\n    var val = Math.floor(Math.random() * (50 - 5 + 1) + 5);\n    data.push({index: i, value: val});\n    values.push(val);\n}\n\nvar margin = {top: 20, right: 20, bottom: 60, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([0, 50]);\n\nvar y = d3.scale.linear()\n    .range([height, 0])\n    .domain([0, d3.max(values) + 5]);\n\nvar brush = d3.svg.brush()\n    .x(x)\n    .on(\"brush\", brushmove)\n    .on(\"brushend\", brushend);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(11);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"brush\")\n    .call(brush)\n  .selectAll('rect')\n    .attr('height', height);\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height + 20);\n\npoints = svg.selectAll(\".point\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"class\", \"point\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"r\", function(d){return Math.floor(Math.random() * (20 - 5 + 1) + 5);})\n    .attr(\"cx\", function(d) { return x(d.index); })\n    .attr(\"cy\", function(d) { return y(d.value); })\n    .call(d3.helper.tooltip());\n\npoints.on('mousedown', function(){\n  brush_elm = svg.select(\".brush\").node();\n  new_click_event = new Event('mousedown');\n  new_click_event.pageX = d3.event.pageX;\n  new_click_event.clientX = d3.event.clientX;\n  new_click_event.pageY = d3.event.pageY;\n  new_click_event.clientY = d3.event.clientY;\n  brush_elm.dispatchEvent(new_click_event);\n});\n\nfunction brushmove() {\n  var extent = brush.extent();\n  points.classed(\"selected\", function(d) {\n    is_brushed = extent[0] <= d.index && d.index <= extent[1];\n    return is_brushed;\n  });\n}\n\nfunction brushend() {\n  get_button = d3.select(\".clear-button\");\n  if(get_button.empty() === true) {\n    clear_button = svg.append('text')\n      .attr(\"y\", 460)\n      .attr(\"x\", 825)\n      .attr(\"class\", \"clear-button\")\n      .text(\"Clear Brush\");\n  }\n\n  x.domain(brush.extent());\n\n  transition_data();\n  reset_axis();\n\n  points.classed(\"selected\", false);\n  d3.select(\".brush\").call(brush.clear());\n\n  clear_button.on('click', function(){\n    x.domain([0, 50]);\n    transition_data();\n    reset_axis();\n    clear_button.remove();\n  });\n}\n\nfunction transition_data() {\n  svg.selectAll(\".point\")\n    .data(data)\n  .transition()\n    .duration(500)\n    .attr(\"cx\", function(d) { return x(d.index); });\n}\n\nfunction reset_axis() {\n  svg.transition().duration(500)\n   .select(\".x.axis\")\n   .call(xAxis);\n}\n\n\n</script>", "description": "D3 Brush and Tooltip Complete", "created_at": "2013-11-23T07:56:20Z", "updated_at": "2016-03-17T18:35:15Z", "api": ["d3.select", "d3.mouse", "d3.scale.linear", "d3.max", "d3.svg.brush", "d3.svg.axis", "d3.helper.tooltip"], "readme": "Example for [Cooperative Brushing and Tooltips in D3](http://wrobstory.github.io/2013/11/D3-brush-and-tooltip.html). \n\nThe completed chart, with both tooltips and brushing working cooperatively. You can start a brush-zoom on either the background or a data point. ", "uid": "wrobstory_7612013"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pixi.js/3.0.10/pixi.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width:100%; height: 100% }\n  </style>\n</head>\n \n<body>\n  <div id=\"container\"></div>\n</body>\n\n  <script>\n    var width = 700;\n    var height = 500;\n    var x = d3.scale.linear()\n    .range([0, width]);\n\n\t\tvar y = d3.scale.linear()\n    .range([height, 0]);\n    var color = d3.scale.category20c();\n\n\t\tvar renderer = new PIXI.WebGLRenderer(800, 600, \n      { antialias: true, backgroundColor : 0xffffff });\n\t\tdocument.body.appendChild(renderer.view);\n\t\t\t\n\t\t// create the root of the scene graph\n\t\tvar stage = new PIXI.Container();\n \n    function drawCircle(d,x,y,r,fill) {\n      if (typeof fill === \"string\") {\n        fill = parseInt(fill.substring(1), 16);\n      }\n\n      if (d._graphics) {\n        d._graphics.clear();\n     } else {\n     \n      d._graphics = new PIXI.Graphics();\n      d._graphics.updateCircle = function(newx,newy) {\n        drawCircle(d, newx, newy, r, fill);    \n      }\n     }\n\n      d._graphics.lineStyle(0);\n      d._graphics.beginFill(fill, 1);\n      d._graphics.drawCircle(x,y,r);\n      d._graphics.endFill();\n      d._graphics.interactive = true;\n      d._graphics.buttonMode = true;\n     /* d._graphics.hitArea = new PIXI.Circle(x,y,r);\n      d._graphics.click = function(e) {\n        this.alpha = 0.5;\n      }\n     */ \n      // d._graphics.on('mousedown', onDragStart)\n      //   .on('touchstart', onDragStart)\n      //   // events for drag end\n      //   .on('mouseup', onDragEnd)\n      //   .on('mouseupoutside', onDragEnd)\n      //   .on('touchend', onDragEnd)\n      //   .on('touchendoutside', onDragEnd)\n      //   // events for drag move\n      //   .on('mousemove', onDragMove)\n      //   .on('touchmove', onDragMove);\n\n      return d._graphics;\n    } \n\n\t\td3.json(\"myjson.json\", function(error, data) {\n\t\t\tif (error) throw error;\n      x.domain(d3.extent(data, function(d) { return d.V1; })).nice();\n      y.domain(d3.extent(data, function(d) { return d.V2; })).nice();\n      data.forEach(function(d) {\n         var circle = drawCircle(d, x(d.V1), y(d.V2),1.5 , 0x9933FF);  \n        \t\t\n         stage.addChild(circle);\n       });\n \t\t\trenderer.render(stage);\n           \n    });\n  </script>\n          ", "description": "TSNE with R, D3, pixi (40000points)", "created_at": "2016-05-25T12:23:44Z", "updated_at": "2016-05-25T12:23:44Z", "api": ["d3.scale.linear", "d3.scale.category20c", "d3.json", "d3.extent"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/guillaumechaumet/'>guillaumechaumet</a>'s block: <a href='http://bl.ocks.org/guillaumechaumet/7cb92053f786dfb53b932a4904102fbc'>TSNE with R, D3, pixi (40000points)</a>\n\nforked from <a href='http://bl.ocks.org/guillaumechaumet/'>guillaumechaumet</a>'s block: <a href='http://bl.ocks.org/guillaumechaumet/5f568f1b95ec50aa2c071fa74b1fbe73'>TSNE with R, D3, pixi (40000points)</a>", "uid": "guillaumechaumet_bc4afdac1469587ac97a67760e0c204d"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Major City Clustering</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n      function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    \n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Base\")\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"http://bl.ocks.org/emeeks/raw/540b1b884b80b14a44c6/all_sites.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .x(\"xcoord\")\n    .y(\"ycoord\")\n    .cluster(true)\n    .on(\"recluster\", positionCluster);\n    \n    map.addCartoLayer(tileLayer).addCartoLayer(csvLayer);\n    map.centerOn([-115,40],\"latlong\").setScale(2);\n\n        function positionCluster() {\n        var d3MapProjection = map.projection();\n      csvLayer.clusterLayer().g().selectAll(\"g.pointG\")\n      .each(function(d) {\n        if (!d.leaf) {\n          var newPosition = findMax(d,d);\n          var newProjectedPos = d3MapProjection([csvLayer.x()(newPosition.point),csvLayer.y()(newPosition.point)]);\n          d3.select(this).attr(\"transform\", \"translate(\"+newProjectedPos+\")\");\n        }\n\n      })\n      \n      function findMax(current, max) {\n        if (current.leaf) {\n          if (!max.leaf) {\n            max = current;\n          }\n          else if (parseInt(current.point.pop) >= parseInt(max.point.pop)) {\n            max = current;\n          }\n        }\n        else {\n          for (var y in current.children) {\n            var thisMax = findMax(current.children[y],max);\n            if (!max.leaf) {\n              max = thisMax;\n            }\n            else if (parseInt(thisMax.point.pop) >= parseInt(max.point.pop)) {\n              max = thisMax;\n            }\n          }\n        }\n        return max;\n      }\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Semantic Cluster Positioning - d3.carto", "created_at": "2014-09-16T04:03:39Z", "updated_at": "2015-08-29T14:06:31Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer", "d3.carto.layer.csv"], "readme": "Repositioning clustered points in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**.\n\nd3.carto uses quadtrees to perform grid-based clustering of points. One drawback of grid-based clustering as seen in the [basic](http://bl.ocks.org/emeeks/7d5925cb7d9721c60360) and [complex](http://bl.ocks.org/emeeks/540b1b884b80b14a44c6) clustering examples is that it produces regular rows and columns of clustered points, which can be jarring to map readers, especially when the regularized point is located in the sea when the dataset is entirely on land.\n\nIn this example, medium-sized cities (between 50k and 1m population) are clustered using the built-in clustering behavior, but the points are adjusted after each \"recluster\" event so that they are placed on the location of the largest city (population-wise) is located. This is accomplished by accessing the d3.carto.map.projection() and using it to adjust the \"transform\" attribute of the g.pointG container that determines the position of each point. It might do to make this semi-automated, but it's a hard thing to plan for, because you might want to use some kind of administrative rank (local, prefectural and national capitals) or other mechanism to determine the \"anchor\" point. In other cases, where there is no obvious such point, you might want to pick the point nearest the center or use some other mechanism.\n\nAs a result of this repoisitioning, the clustered sites are irregular, semantically interesting and never placed on non-sensical terrain.\n\nWhich is good.", "uid": "emeeks_066e20c1ce5008f884eb"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n    circle {\n      opacity: 0.5;\n      fill: yellow\n        ;\n    }\n       \n  </style>\n</head>\n\n<body> \n  <svg>\n\t</svg>\n\n  <script>\n    var width = 960;\n    var height = 500;\n\n    var svg = d3.select('svg');\n    \n    for(var i = 0; i < 80; i++) {\n      span = Math.random() * width;\n      \n      var data = {\n        x: Math.random() * span,\n      \ty: Math.random() * height,\n      \tradius: 2,\n        span: span\n      };\n      \n      // each cicle gets a different span value\n      svg.append('circle')\n      // datum bind a closure of the current variables.\n      \t\t.datum(data);\n    }\n    \n    // new value for width doesn't affect bound data\n    width = 2000000;\n    \n    // the last value from the for loop\n    console.log(data);\n    \n    // mutate the circles' visual appearance\n    svg.selectAll('circle')\n      \t.attr('cx', function(jon) {\n      \t\tconsole.log(jon);\n      \t\treturn jon.x;\n    \t\t})\n      \t.attr('cy', function(d) {\n      \t\treturn d.y;\n    \t\t})\n      \t.attr('r', function(d) {\n      \t\treturn d.radius;\n    \t\t});\n    \n    console.log(d3.selectAll('circle'));\n  </script>\n</body>\n", "description": "Foundations of D3: Data Binding Scope", "created_at": "2016-02-26T03:29:23Z", "updated_at": "2016-02-26T03:29:23Z", "api": ["d3.select", "d3.selectAll"], "readme": "## A Lesson in Binding Data\n\nIn an effort incrementally introduce complexity, data is bound one `datum` at a time with a `for` loop to blend the **declarative/functional** paradigm of D3 and the **imperative/procedural** paradigm of standard Javascript.\n\nIn this example we can see how D3's data binding functions (`data()` and `datum()`) create a closure encapsulating the state of variables at the time the data is bound.\n\n---\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/Jay-Oh-eN/'>Jay-Oh-eN</a>'s block: <a href='http://bl.ocks.org/Jay-Oh-eN/522d3842f27e2581f0d9'>Foundations of D3: Data Binding Scope</a>\n\nforked from <a href='http://bl.ocks.org/margeigh/'>margeigh</a>'s block: <a href='http://bl.ocks.org/margeigh/9d0251925a6bf6409533'>Foundations of D3: Data Binding Scope</a>", "uid": "margeigh_201b1e8e5a25dfcf76d4"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n    circle {\n      opacity: 0.5;\n      fill: #59009d;\n    }\n  </style>\n</head>\n\n<body> \n  <svg>\n\t</svg>\n\n  <script>\n    var width = 960;\n    var height = 500;\n\n    var svg = d3.select('svg');\n    \n    for(var i = 0; i < 1389; i++) {\n      span = Math.random() * width;\n      \n      var data = {\n        x: Math.random() * span,\n      \ty: Math.random() * height,\n      \tradius : Math.random() * 10 + 1,\n        span: span\n      };\n      \n      // each cicle gets a different span value\n      svg.append('circle')\n      // datum bind a closure of the current variables.\n      \t\t.datum(data);\n    }\n    \n    // new value for width doesn't affect bound data\n    width = 2000000;\n    \n    // the last value from the for loop\n    console.log(data);\n    \n    // mutate the circles' visual appearance\n    svg.selectAll('circle')\n      \t.attr('cx', function(jon) {\n      \t\tconsole.log(jon);\n      \t\treturn jon.x;\n    \t\t})\n      \t.attr('cy', function(d) {\n      \t\treturn d.y;\n    \t\t})\n      \t.attr('r', function(d) {\n      \t\treturn d.radius;\n    \t\t});\n    \n    console.log(d3.selectAll('circle'));\n  </script>\n</body>\n", "description": "Foundations of D3: Data Binding Scope", "created_at": "2015-12-09T01:05:50Z", "updated_at": "2015-12-09T20:30:44Z", "api": ["d3.select", "d3.selectAll"], "readme": "## A Lesson in Binding Data\n\nIn an effort incrementally introduce complexity, data is bound one `datum` at a time with a `for` loop to blend the **declarative/functional** paradigm of D3 and the **imperative/procedural** paradigm of standard Javascript.\n\nIn this example we can see how D3's data binding functions (`data()` and `datum()`) create a closure encapsulating the state of variables at the time the data is bound.\n\n---\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "Jay-Oh-eN_522d3842f27e2581f0d9"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.point {\n  fill: #2f225d;\n  stroke: #afa2dc;\n}\n\n.selected {\n  fill: #afa2dc;\n  stroke: #2f225d;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\np {\n  font: 12px sans-serif;\n  margin: 0 0 2px 0;\n  padding: 0;\n}\n\n.clear-button {\n  font: 14px sans-serif;\n  cursor: pointer;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\nd3.helper = {};\n\nd3.helper = {};\n\nd3.helper.tooltip = function(){\n    var tooltipDiv;\n    var bodyNode = d3.select('body').node();\n\n    function tooltip(selection){\n\n        selection.on('mouseover.tooltip', function(pD, pI){\n            // Clean up lost tooltips\n            d3.select('body').selectAll('div.tooltip').remove();\n            // Append tooltip\n            tooltipDiv = d3.select('body')\n                           .append('div')\n                           .attr('class', 'tooltip')\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px',\n                'background-color': '#d8d5e4',\n                width: '65px',\n                height: '30px',\n                padding: '5px',\n                position: 'absolute',\n                'z-index': 1001,\n                'box-shadow': '0 1px 2px 0 #656565'\n            });\n\n            var first_line = '<p>X-Value: ' + pD.index + '</p>'\n            var second_line = '<p>Y-Value: ' + pD.value + '</p>'\n\n            tooltipDiv.html(first_line + second_line)\n        })\n        .on('mousemove.tooltip', function(pD, pI){\n            // Move tooltip\n            var absoluteMousePos = d3.mouse(bodyNode);\n            tooltipDiv.style({\n                left: (absoluteMousePos[0] + 10)+'px',\n                top: (absoluteMousePos[1] - 40)+'px'\n            });\n        })\n        .on('mouseout.tooltip', function(pD, pI){\n            // Remove tooltip\n            tooltipDiv.remove();\n        });\n\n    }\n\n    tooltip.attr = function(_x){\n        if (!arguments.length) return attrs;\n        attrs = _x;\n        return this;\n    };\n\n    tooltip.style = function(_x){\n        if (!arguments.length) return styles;\n        styles = _x;\n        return this;\n    };\n\n    return tooltip;\n};\n\nvar data = [];\nvar values = [];\nfor (var i = 2; i <= 50; i++) {\n    var val = Math.floor(Math.random() * (50 - 5 + 1) + 5);\n    data.push({index: i, value: val});\n    values.push(val);\n}\n\nvar margin = {top: 20, right: 20, bottom: 60, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([0, 50]);\n\nvar y = d3.scale.linear()\n    .range([height, 0])\n    .domain([0, d3.max(values) + 5]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(11);\n\nvar brush = d3.svg.brush()\n    .x(x)\n    .on(\"brush\", brushmove)\n    .on(\"brushend\", brushend);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"brush\")\n    .call(brush)\n  .selectAll('rect')\n    .attr('height', height);\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height + 20);\n\npoints = svg.selectAll(\".point\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"class\", \"point\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"r\", function(d){return Math.floor(Math.random() * (20 - 5 + 1) + 5);})\n    .attr(\"cx\", function(d) { return x(d.index); })\n    .attr(\"cy\", function(d) { return y(d.value); })\n    .call(d3.helper.tooltip());\n\nfunction brushmove() {\n  var extent = brush.extent();\n  points.classed(\"selected\", function(d) {\n    is_brushed = extent[0] <= d.index && d.index <= extent[1];\n    return is_brushed;\n  });\n}\n\nfunction brushend() {\n  get_button = d3.select(\".clear-button\");\n  if(get_button.empty() === true) {\n    clear_button = svg.append('text')\n      .attr(\"y\", 460)\n      .attr(\"x\", 825)\n      .attr(\"class\", \"clear-button\")\n      .text(\"Clear Brush\");\n  }\n\n  x.domain(brush.extent());\n\n  transition_data();\n  reset_axis();\n\n  points.classed(\"selected\", false);\n  d3.select(\".brush\").call(brush.clear());\n\n  clear_button.on('click', function(){\n    x.domain([0, 50]);\n    transition_data();\n    reset_axis();\n    clear_button.remove();\n  });\n}\n\nfunction transition_data() {\n  svg.selectAll(\".point\")\n    .data(data)\n  .transition()\n    .duration(500)\n    .attr(\"cx\", function(d) { return x(d.index); });\n}\n\nfunction reset_axis() {\n  svg.transition().duration(500)\n   .select(\".x.axis\")\n   .call(xAxis);\n}\n\n</script>", "description": "D3 Brush and Tooltip IV", "created_at": "2013-11-24T18:38:38Z", "updated_at": "2015-12-29T06:39:15Z", "api": ["d3.select", "d3.mouse", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.svg.brush", "d3.helper.tooltip"], "readme": "Example for [Cooperative Brushing and Tooltips in D3](http://wrobstory.github.io/2013/11/D3-brush-and-tooltip.html). \n\nNote that the brush layer lives behind the data points, and therefore a brush cannot be started on the data point itself, only in the background layer. ", "uid": "wrobstory_7630654"}, {"code": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>D3 Level 3</title>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n        <style>\n            svg {\n                font: 10px sans-serif;\n            }\n            .area {\n                fill: steelblue;\n                clip-path: url(#clip);\n            }\n            .axis path,\n            .axis line {\n                fill: none;\n                stroke: #000;\n                shape-rendering: crispEdges;\n            }\n            .brush .extent {\n                stroke: #fff;\n                fill-opacity: .125;\n                shape-rendering: crispEdges;\n            }\n        </style>\n    </head>\n    <body>\n        <button id=\"reset\">Reset</button>\n        <br>\n        <script>\n            var W = 960, H = 500;\n\n            //Setting up Margins\n            var mainMargin = {top: 10, right: 10, left: 70, bottom: 140};\n            var subMargin = {top: 400, right: 10, bottom: 40, left: 70};\n\n            //Widths, Heights\n            var width = W - mainMargin.left - mainMargin.right;\n            var mainHeight = H - mainMargin.top - mainMargin.bottom;\n            var subHeight = H - subMargin.top - subMargin.bottom;\n\n            //Date Parser\n            var parseDate = d3.time.format(\"%b %Y\").parse;\n\n            //Main Chart Scales\n            var mainXScale = d3.time.scale().range([0, width]);\n            var mainYScale = d3.scale.linear().range([mainHeight, 0]);\n\n            //Sub Chart scales\n            var subXScale = d3.time.scale().range([0, width]);\n            var subYScale = d3.scale.linear().range([subHeight, 0]);\n\n            //Main Chart Axes\n            var mainXAxis = d3.svg.axis().scale(mainXScale).orient('bottom');\n            var mainYAxis = d3.svg.axis().scale(mainYScale).orient('left');\n\n            //Sub Chart Axes\n            var subXAxis = d3.svg.axis().scale(subXScale).orient('bottom');\n            var subYAxis = d3.svg.axis().scale(subYScale).orient('left').ticks(2);\n\n            //Area\n            var mainArea = d3.svg.area()\n                    .interpolate('monotone')\n                    .x(function (d) {\n                        return mainXScale(d.date)\n                    })\n                    .y0(mainHeight)\n                    .y1(function (d) {\n                        return mainYScale(d.price)\n                    });\n\n            var subArea = d3.svg.area()\n                    .interpolate('monotone')\n                    .x(function (d) {\n                        return subXScale(d.date)\n                    })\n                    .y0(subHeight)\n                    .y1(function (d) {\n                        return subYScale(d.price)\n                    });\n\n            var svg = d3.select('body').append('svg')\n                    .attr('width', W)\n                    .attr('height', H);\n\n            svg.append('defs')\n                    .append('clipPath')\n                    .attr('id', 'clip')\n                    .append('rect')\n                    .attr('width', width)\n                    .attr('height', mainHeight);\n\n            var main = svg.append('g')\n                    .classed('main', true)\n                    .attr(\"transform\", \"translate(\" + mainMargin.left + \",\" + mainMargin.top + \")\");\n\n            var sub = svg.append('g')\n                    .classed('sub', true)\n                    .attr(\"transform\", \"translate(\" + subMargin.left + \",\" + subMargin.top + \")\");\n\n            var brush = d3.svg.brush()\n                    .x(subXScale)\n                    .on(\"brush\", brushed);\n\n            d3.csv('data.csv', function (d) {\n                d.date = parseDate(d.date);\n                d.price = +d.price;\n                return d;\n            }, function (err, data) {\n                mainXScale.domain(d3.extent(data, function (d) {\n                    return d.date\n                }));\n                mainYScale.domain([0, d3.max(data, function (d) {\n                        return d.price\n                    })]);\n\n                subXScale.domain(mainXScale.domain());\n                subYScale.domain(mainYScale.domain());\n\n                main.append(\"g\")\n                        .classed(\"x axis\", true)\n                        .attr(\"transform\", \"translate(0, \" + mainHeight + \")\")\n                        .call(mainXAxis);\n                main.append(\"g\")\n                        .classed(\"y axis\", true)\n                        .attr(\"transform\", \"translate(0, 0)\")\n                        .call(mainYAxis);\n\n                main.append('path')\n                        .datum(data)\n                        .classed('area', true)\n                        .attr('d', mainArea);\n\n                sub.append(\"g\")\n                        .classed(\"x axis\", true)\n                        .attr(\"transform\", \"translate(0, \" + subHeight + \")\")\n                        .call(subXAxis);\n                sub.append(\"g\")\n                        .classed(\"y axis\", true)\n                        .attr(\"transform\", \"translate(0, 0)\")\n                        .call(subYAxis);\n\n                sub.append('path')\n                        .datum(data)\n                        .classed('area', true)\n                        .attr('d', subArea);\n\n                sub.append(\"g\")\n                        .classed(\"x brush\", true)\n                        .call(brush)\n                        .selectAll(\"rect\")\n                        .attr(\"y\", -6)\n                        .attr(\"height\", subHeight + 7);\n\n                d3.select('#reset').on('click', function () {\n                    mainXScale.domain(subXScale.domain());\n                    main.select('.area').transition().attr('d', mainArea);\n                    main.select('.x.axis').transition().call(mainXAxis);\n                    sub.select('rect.extent').transition().attr('width', 0);\n                })\n            });\n\n            function brushed() {\n                mainXScale.domain(brush.empty() ? subXScale.domain() : brush.extent());\n                main.select('.area').attr('d', mainArea);\n                main.select('.x.axis').call(mainXAxis);\n            }\n        </script>\n    </body>\n</html>\n", "description": "Zoom and Brush in d3", "created_at": "2015-06-18T04:35:03Z", "updated_at": "2015-08-29T14:23:15Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.select", "d3.svg.brush", "d3.csv", "d3.extent", "d3.max"], "readme": "", "uid": "nivas8292_222939d7c74c5de09387"}, {"code": "<!DOCTYPE html>\n<head>\n<meta charset=\"utf-8\">\n<title>Draggable Circle Packing</title>\n<style>\n\nsvg circle {\n  cursor: move;\n  stroke: #000;\n  stroke-width: 1.5px;\n  fill: #827d92;\n}\n\n.fixed {\n  fill: #f00;\n}\n\nbutton {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n}\n\n</style>\n</head>\n\n<body>\n<button onclick=\"reset()\">Reset</button>\n<script src=\"https://code.jquery.com/jquery-1.11.2.min.js\"></script>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar width = 900;\nvar height = 500;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar nodes = d3.range(128).map(function () { return {radius: Math.random() * 16 + 8}; });\nvar nodesCopy = $.extend(true, [], nodes);\n\nfunction dblclick(d) {\n  d3.select(this).classed(\"fixed\", d.fixed = false);\n}\n\nfunction dragstart(d) {\n  d3.select(this).classed(\"fixed\", d.fixed = true);\n}\n\nfunction collide(node) {\n  var r = node.radius + 16;\n  var nx1 = node.x - r;\n  var nx2 = node.x + r;\n  var ny1 = node.y - r;\n  var ny2 = node.y + r;\n  return function (quad, x1, y1, x2, y2) {\n    if (quad.point && (quad.point !== node)) {\n      var x = node.x - quad.point.x;\n      var y = node.y - quad.point.y;\n      var l = Math.sqrt(x * x + y * y);\n      var npr = node.radius + quad.point.radius;\n      if (l < npr) {\n        l = (l - npr) / l * 0.5;\n        x *= l;\n        node.x -= x;\n        y *= l;\n        node.y -= y;\n        quad.point.x += x;\n        quad.point.y += y;\n      }\n    }\n    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n  };\n}\n\nfunction packup() {\n  var pack = d3.layout.pack()\n      .sort(null)\n      .size([width, height])\n      .padding(0)\n      .value(function (d) { return d.radius; });\n\n  svg.selectAll(\".node\")\n      .data(pack.nodes({\"children\": nodes})\n      .filter(function (d) { return !d.children; }))\n    .enter().append(\"circle\")\n      .attr(\"r\", function (d) { return d.radius; })\n      .attr(\"cx\", function (d) { return d.x; })\n      .attr(\"cy\", function (d) { return d.y; });\n}\n\nfunction forceup() {\n  var force = d3.layout.force()\n      .nodes(nodes)\n      .gravity(0.05)\n      .charge(0)\n      .size([width, height])\n      .start();\n\n  var drag = force.drag().on(\"dragstart\", dragstart);\n\n  force.on(\"tick\", function () {\n    var q = d3.geom.quadtree(nodes);\n    var i = 0;\n    var n = nodes.length;\n\n    while (++i < n) {\n      q.visit(collide(nodes[i]));\n    }\n\n    svg.selectAll(\"circle\")\n        .attr(\"cx\", function (d) { return d.x; })\n        .attr(\"cy\", function (d) { return d.y; });\n  });\n\n  d3.selectAll(\"circle\")\n    .on(\"dblclick\", dblclick)\n    .call(drag);\n}\n\nfunction reset() {\n  svg.selectAll(\"*\").remove();\n  nodes = $.extend(true, [], nodesCopy);\n  packup();\n  forceup();\n}\n\npackup();\nforceup();\n\n</script>\n</body>\n</html>", "description": "Draggable Circle Packing - D3.js", "created_at": "2015-04-16T02:37:39Z", "updated_at": "2016-04-27T10:11:39Z", "api": ["d3.select", "d3.range", "d3.layout.pack", "d3.layout.force", "d3.geom.quadtree", "d3.selectAll"], "readme": "", "uid": "rphv_0d6c8f05b3afe882e166"}, {"code": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Labeling Nearest Points</title>\n  </head>\n  <style>\n    body {\n      font: 14px sans-serif;\n    }\n\n    .show-quadtree {\n      position: absolute;\n      left: 800px;\n      top: 30px;\n    }\n\n    .node {\n      fill: rgb(230, 230, 230);\n      fill-opacity: 0;\n      stroke: rgb(230, 230, 230);\n      stroke-width: .5px;\n    }\n\n    .node:hover {\n      fill-opacity: .2;\n    }\n\n    .node.hidden {\n      opacity: 0;\n    }\n\n    .point {\n      fill: rgb(149, 149, 149);\n    }\n\n    .point.scanned {\n      fill: orange;\n    }\n\n    .point.selected {\n      fill: red;\n    }\n\n    .point.uncolored {\n      fill: rgb(149, 149, 149);\n    }\n\n  </style>\n  <body>\n    <label class=\"show-quadtree\">\n      Show quadtree\n      <input type=\"checkbox\">\n    </label>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js\"></script>\n    <script src=\"//d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script src=\"k-nearest-neighbors.js\"></script>\n    <script>\n      var width = 960,\n          height = 500;\n\n      var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n      var eventRect = svg.append(\"rect\")\n        .attr(\"class\", \"event-rect\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .style(\"opacity\", 0);\n\n      var data = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\")\n        .map(function(letter) {\n          var d = [Math.random() * width, Math.random() * height];\n          d.letter = letter;\n          return d;\n        });\n\n      var quadtree = d3.geom.quadtree()\n        .extent([[-1, -1], [width + 1, height + 1]])(data);\n\n      var circles = svg.selectAll(\".point\").data(data)\n        .enter().append(\"circle\")\n          .attr(\"class\", \"point\")\n          .attr(\"cx\", function(d) { return d[0]; })\n          .attr(\"cy\", function(d) { return d[1]; })\n          .attr(\"r\", 5)\n          .classed(\"uncolored\", true);\n\n      var rects = svg.selectAll(\".node\").data(kNearest.nodes(quadtree))\n        .enter().append(\"rect\")\n          .attr(\"class\", \"node\")\n          .attr(\"x\", function(d) { return d.x1; })\n          .attr(\"y\", function(d) { return d.y1; })\n          .attr(\"width\", function(d) { return d.x2 - d.x1; })\n          .attr(\"height\", function(d) { return d.y2 - d.y1; })\n          .classed(\"hidden\", true)\n          .on(\"mousemove\", mousemove);\n\n      var labels = svg.selectAll(\".label\").data(d3.range(4))\n        .enter().append(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"dy\", -10)\n          .style(\"font-size\", \"14px\")\n          .style(\"font-weight\", \"bold\")\n          .style(\"text-anchor\", \"middle\");\n\n      var throttledUpdate = _.throttle(function(mouse) {\n        updateNearest(mouse);\n        updateTooltip(mouse);\n      }, 100);\n\n      function mousemove(d) {\n        throttledUpdate(d3.mouse(this));\n      }\n\n      function updateTooltip(mouse) {\n        var selected = circles\n          .filter(function(d) { return d.selected; });\n        labels.data(selected.data())\n          .classed(\"hidden\", false)\n          .attr(\"x\", function(d) { return d[0]; })\n          .attr(\"y\", function(d) { return d[1]; })\n          .text(function(d) { return d.letter; });\n      }\n\n      d3.select(\".show-quadtree input\")\n        .on(\"change\", function() {\n          rects.classed(\"hidden\", !this.checked);\n          circles.classed(\"uncolored\", !this.checked);\n        });\n\n      function updateNearest(coords) {\n        var x = coords[0],\n            y = coords[1];\n\n        circles.each(function(d) { d.scanned = d.selected = false; d.mindist = undefined; });\n        rects.each(function(d) { d.visited = false;  d.mindist = undefined; });\n\n        var bestqueue = new Array(quadtree);\n        var resultqueue = [];\n        kNearest.neighbors(bestqueue, resultqueue, x, y, 4);\n\n        circles.classed(\"scanned\", function(d) { return d.scanned; });\n        circles.classed(\"selected\", function(d) { return d.selected; });\n      }\n    </script>\n  </body>\n</html>\n", "description": "Labeling Nearest Points", "created_at": "2016-02-18T20:57:13Z", "updated_at": "2016-02-18T21:29:22Z", "api": ["d3.select", "d3.geom.quadtree", "d3.range", "d3.mouse"], "readme": "Display labels for points close to the mouse cursor. Could be used to display\nmultiple tooltips, etc.\n\nUses k-nearest-neighbors algorithm from [this block](http://bl.ocks.org/llb4ll/8709363)\nby llb4ll. Check the box to see the underlying quadtree (red points are the\nnearest points, orange are those that were searched but found to be not\namong the nearest).\n", "uid": "armollica_a2adf7b67f73316f64be"}, {"code": "<!DOCTYPE html>\n<head>\n<meta charset=\"utf-8\">\n<title>Issues Ratings</title>\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line, \n.axis1 path,\n.axis1 line {\n  fill: none;\n  stroke: #E6E7E8;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path, .x.axis1 path {\n  display: none;\n}\n\n.line {\n  fill: none;\n  stroke-width: 1.5px;\n}\n\n.legend-box {\n  cursor: pointer;  \n}\n\n#mouse-tracker {\n  stroke: #E6E7E8;\n  stroke-width: 1px;\n}\n\n.hover-line { \n  stroke: #E6E7E8;\n  fill: none;\n  stroke-width: 1px;\n  left: 10px;\n  shape-rendering: crispEdges;\n  opacity: 1e-6;\n}\n\n.hover-text {\n  stroke: none;\n  font-size: 30px;\n  font-weight: bold;\n  fill: #000000;\n}\n\n.tooltip {\n  font-weight: normal;\n}\n\n.brush .extent {\n  stroke: #FFF;\n  shape-rendering: crispEdges;\n}\n\n</style>\n</head>\n<body>\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 200, bottom: 100, left: 50},\n    margin2 = { top: 430, right: 10, bottom: 20, left: 40 },\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    height2 = 500 - margin2.top - margin2.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\nvar bisectDate = d3.bisector(function(d) { return d.date; }).left;\n\nvar xScale = d3.time.scale()\n    .range([0, width]),\n\n    xScale2 = d3.time.scale()\n    .range([0, width]); // Duplicate xScale for brushing ref later\n\nvar yScale = d3.scale.linear()\n    .range([height, 0]);\n\n// 40 Custom DDV colors \nvar color = d3.scale.ordinal().range([\"#48A36D\",  \"#56AE7C\",  \"#64B98C\", \"#72C39B\", \"#80CEAA\", \"#80CCB3\", \"#7FC9BD\", \"#7FC7C6\", \"#7EC4CF\", \"#7FBBCF\", \"#7FB1CF\", \"#80A8CE\", \"#809ECE\", \"#8897CE\", \"#8F90CD\", \"#9788CD\", \"#9E81CC\", \"#AA81C5\", \"#B681BE\", \"#C280B7\", \"#CE80B0\", \"#D3779F\", \"#D76D8F\", \"#DC647E\", \"#E05A6D\", \"#E16167\", \"#E26962\", \"#E2705C\", \"#E37756\", \"#E38457\", \"#E39158\", \"#E29D58\", \"#E2AA59\", \"#E0B15B\", \"#DFB95C\", \"#DDC05E\", \"#DBC75F\", \"#E3CF6D\", \"#EAD67C\", \"#F2DE8A\"]);  \n\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\"),\n\n    xAxis2 = d3.svg.axis() // xAxis for brush slider\n    .scale(xScale2)\n    .orient(\"bottom\");    \n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\");  \n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return xScale(d.date); })\n    .y(function(d) { return yScale(d.rating); })\n    .defined(function(d) { return d.rating; });  // Hiding line value defaults of 0 for missing data\n\nvar maxY; // Defined later to update yAxis\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom) //height + margin.top + margin.bottom\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Create invisible rect for mouse tracking\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)                                    \n    .attr(\"x\", 0) \n    .attr(\"y\", 0)\n    .attr(\"id\", \"mouse-tracker\")\n    .style(\"fill\", \"white\"); \n\n//for slider part-----------------------------------------------------------------------------------\n  \nvar context = svg.append(\"g\") // Brushing context box container\n    .attr(\"transform\", \"translate(\" + 0 + \",\" + 410 + \")\")\n    .attr(\"class\", \"context\");\n\n//append clip path for lines plotted, hiding those part out of bounds\nsvg.append(\"defs\")\n  .append(\"clipPath\") \n    .attr(\"id\", \"clip\")\n    .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height); \n\n//end slider part----------------------------------------------------------------------------------- \n\nd3.tsv(\"data.tsv\", function(error, data) { \n  color.domain(d3.keys(data[0]).filter(function(key) { // Set the domain of the color ordinal scale to be all the csv headers except \"date\", matching a color to an issue\n    return key !== \"date\"; \n  }));\n\n  data.forEach(function(d) { // Make every date in the csv data a javascript date object format\n    d.date = parseDate(d.date);\n  });\n\n  var categories = color.domain().map(function(name) { // Nest the data into an array of objects with new keys\n\n    return {\n      name: name, // \"name\": the csv headers except date\n      values: data.map(function(d) { // \"values\": which has an array of the dates and ratings\n        return {\n          date: d.date, \n          rating: +(d[name]),\n          };\n      }),\n      visible: (name === \"Unemployment\" ? true : false) // \"visible\": all false except for economy which is true.\n    };\n  });\n\n  xScale.domain(d3.extent(data, function(d) { return d.date; })); // extent = highest and lowest points, domain is data, range is bouding box\n\n  yScale.domain([0, 100\n    //d3.max(categories, function(c) { return d3.max(c.values, function(v) { return v.rating; }); })\n  ]);\n\n  xScale2.domain(xScale.domain()); // Setting a duplicate xdomain for brushing reference later\n \n //for slider part-----------------------------------------------------------------------------------\n\n var brush = d3.svg.brush()//for slider bar at the bottom\n    .x(xScale2) \n    .on(\"brush\", brushed);\n\n  context.append(\"g\") // Create brushing xAxis\n      .attr(\"class\", \"x axis1\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  var contextArea = d3.svg.area() // Set attributes for area chart in brushing context graph\n    .interpolate(\"monotone\")\n    .x(function(d) { return xScale2(d.date); }) // x is scaled to xScale2\n    .y0(height2) // Bottom line begins at height2 (area chart not inverted) \n    .y1(0); // Top line of area, 0 (area chart not inverted)\n\n  //plot the rect as the bar at the bottom\n  context.append(\"path\") // Path is created using svg.area details\n    .attr(\"class\", \"area\")\n    .attr(\"d\", contextArea(categories[0].values)) // pass first categories data .values to area path generator \n    .attr(\"fill\", \"#F1F1F2\");\n    \n  //append the brush for the selection of subsection  \n  context.append(\"g\")\n    .attr(\"class\", \"x brush\")\n    .call(brush)\n    .selectAll(\"rect\")\n    .attr(\"height\", height2) // Make brush rects same height \n      .attr(\"fill\", \"#E6E7E8\");  \n  //end slider part-----------------------------------------------------------------------------------\n\n  // draw line graph\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"x\", -10)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Issues Rating\");\n\n  var issue = svg.selectAll(\".issue\")\n      .data(categories) // Select nested data and append to new svg group elements\n    .enter().append(\"g\")\n      .attr(\"class\", \"issue\");   \n\n  issue.append(\"path\")\n      .attr(\"class\", \"line\")\n      .style(\"pointer-events\", \"none\") // Stop line interferring with cursor\n      .attr(\"id\", function(d) {\n        return \"line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"); // Give line id of line-(insert issue name, with any spaces replaced with no spaces)\n      })\n      .attr(\"d\", function(d) { \n        return d.visible ? line(d.values) : null; // If array key \"visible\" = true then draw line, if not then don't \n      })\n      .attr(\"clip-path\", \"url(#clip)\")//use clip path to make irrelevant part invisible\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  // draw legend\n  var legendSpace = 450 / categories.length; // 450/number of issues (ex. 40)    \n\n  issue.append(\"rect\")\n      .attr(\"width\", 10)\n      .attr(\"height\", 10)                                    \n      .attr(\"x\", width + (margin.right/3) - 15) \n      .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace) - 8; })  // spacing\n      .attr(\"fill\",function(d) {\n        return d.visible ? color(d.name) : \"#F1F1F2\"; // If array key \"visible\" = true then color rect, if not then make it grey \n      })\n      .attr(\"class\", \"legend-box\")\n\n      .on(\"click\", function(d){ // On click make d.visible \n        d.visible = !d.visible; // If array key for this data selection is \"visible\" = true then make it false, if false then make it true\n\n        maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n        yScale.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n        svg.select(\".y.axis\")\n          .transition()\n          .call(yAxis);   \n\n        issue.select(\"path\")\n          .transition()\n          .attr(\"d\", function(d){\n            return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n          })\n\n        issue.select(\"rect\")\n          .transition()\n          .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\";\n        });\n      })\n\n      .on(\"mouseover\", function(d){\n\n        d3.select(this)\n          .transition()\n          .attr(\"fill\", function(d) { return color(d.name); });\n\n        d3.select(\"#line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"))\n          .transition()\n          .style(\"stroke-width\", 2.5);  \n      })\n\n      .on(\"mouseout\", function(d){\n\n        d3.select(this)\n          .transition()\n          .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\";});\n\n        d3.select(\"#line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"))\n          .transition()\n          .style(\"stroke-width\", 1.5);\n      })\n      \n  issue.append(\"text\")\n      .attr(\"x\", width + (margin.right/3)) \n      .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace); })  // (return (11.25/2 =) 5.625) + i * (5.625) \n      .text(function(d) { return d.name; }); \n\n  // Hover line \n  var hoverLineGroup = svg.append(\"g\") \n            .attr(\"class\", \"hover-line\");\n\n  var hoverLine = hoverLineGroup // Create line with basic attributes\n        .append(\"line\")\n            .attr(\"id\", \"hover-line\")\n            .attr(\"x1\", 10).attr(\"x2\", 10) \n            .attr(\"y1\", 0).attr(\"y2\", height + 10)\n            .style(\"pointer-events\", \"none\") // Stop line interferring with cursor\n            .style(\"opacity\", 1e-6); // Set opacity to zero \n\n  var hoverDate = hoverLineGroup\n        .append('text')\n            .attr(\"class\", \"hover-text\")\n            .attr(\"y\", height - (height-40)) // hover date text position\n            .attr(\"x\", width - 150) // hover date text position\n            .style(\"fill\", \"#E6E7E8\");\n\n  var columnNames = d3.keys(data[0]) //grab the key values from your first data row\n                                     //these are the same as your column names\n                  .slice(1); //remove the first column name (`date`);\n\n  var focus = issue.select(\"g\") // create group elements to house tooltip text\n      .data(columnNames) // bind each column name date to each g element\n    .enter().append(\"g\") //create one <g> for each columnName\n      .attr(\"class\", \"focus\"); \n\n  focus.append(\"text\") // http://stackoverflow.com/questions/22064083/d3-js-multi-series-chart-with-y-value-tracking\n        .attr(\"class\", \"tooltip\")\n        .attr(\"x\", width + 20) // position tooltips  \n        .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace); }); // (return (11.25/2 =) 5.625) + i * (5.625) // position tooltips       \n\n  // Add mouseover events for hover line.\n  d3.select(\"#mouse-tracker\") // select chart plot background rect #mouse-tracker\n  .on(\"mousemove\", mousemove) // on mousemove activate mousemove function defined below\n  .on(\"mouseout\", function() {\n      hoverDate\n          .text(null) // on mouseout remove text for hover date\n\n      d3.select(\"#hover-line\")\n          .style(\"opacity\", 1e-6); // On mouse out making line invisible\n  });\n\n  function mousemove() { \n      var mouse_x = d3.mouse(this)[0]; // Finding mouse x position on rect\n      var graph_x = xScale.invert(mouse_x); // \n\n      //var mouse_y = d3.mouse(this)[1]; // Finding mouse y position on rect\n      //var graph_y = yScale.invert(mouse_y);\n      //console.log(graph_x);\n      \n      var format = d3.time.format('%b %Y'); // Format hover date text to show three letter month and full year\n      \n      hoverDate.text(format(graph_x)); // scale mouse position to xScale date and format it to show month and year\n      \n      d3.select(\"#hover-line\") // select hover-line and changing attributes to mouse position\n          .attr(\"x1\", mouse_x) \n          .attr(\"x2\", mouse_x)\n          .style(\"opacity\", 1); // Making line visible\n\n      // Legend tooltips // http://www.d3noob.org/2014/07/my-favourite-tooltip-method-for-line.html\n\n      var x0 = xScale.invert(d3.mouse(this)[0]), /* d3.mouse(this)[0] returns the x position on the screen of the mouse. xScale.invert function is reversing the process that we use to map the domain (date) to range (position on screen). So it takes the position on the screen and converts it into an equivalent date! */\n      i = bisectDate(data, x0, 1), // use our bisectDate function that we declared earlier to find the index of our data array that is close to the mouse cursor\n      /*It takes our data array and the date corresponding to the position of or mouse cursor and returns the index number of the data array which has a date that is higher than the cursor position.*/\n      d0 = data[i - 1],\n      d1 = data[i],\n      /*d0 is the combination of date and rating that is in the data array at the index to the left of the cursor and d1 is the combination of date and close that is in the data array at the index to the right of the cursor. In other words we now have two variables that know the value and date above and below the date that corresponds to the position of the cursor.*/\n      d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n      /*The final line in this segment declares a new array d that is represents the date and close combination that is closest to the cursor. It is using the magic JavaScript short hand for an if statement that is essentially saying if the distance between the mouse cursor and the date and close combination on the left is greater than the distance between the mouse cursor and the date and close combination on the right then d is an array of the date and close on the right of the cursor (d1). Otherwise d is an array of the date and close on the left of the cursor (d0).*/\n\n      //d is now the data row for the date closest to the mouse position\n\n      focus.select(\"text\").text(function(columnName){\n         //because you didn't explictly set any data on the <text>\n         //elements, each one inherits the data from the focus <g>\n\n         return (d[columnName]);\n      });\n  }; \n\n  //for brusher of the slider bar at the bottom\n  function brushed() {\n\n    xScale.domain(brush.empty() ? xScale2.domain() : brush.extent()); // If brush is empty then reset the Xscale domain to default, if not then make it the brush extent \n\n    svg.select(\".x.axis\") // replot xAxis with transition when brush used\n          .transition()\n          .call(xAxis);\n\n    maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n    yScale.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n    \n    svg.select(\".y.axis\") // Redraw yAxis\n      .transition()\n      .call(yAxis);   \n\n    issue.select(\"path\") // Redraw lines based on brush xAxis scale and domain\n      .transition()\n      .attr(\"d\", function(d){\n          return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n      });\n    \n  };      \n\n}); // End Data callback function\n  \n  function findMaxY(data){  // Define function \"findMaxY\"\n    var maxYValues = data.map(function(d) { \n      if (d.visible){\n        return d3.max(d.values, function(value) { // Return max rating value\n          return value.rating; })\n      }\n    });\n    return d3.max(maxYValues);\n  }\n\n</script>\n</html>", "description": "d3.js Multi-series line chart interactive", "created_at": "2016-02-24T16:16:20Z", "updated_at": "2016-02-24T16:16:20Z", "api": ["d3.time.format", "d3.bisector", "d3.time.scale", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.max", "d3.svg.brush", "d3.svg.area", "d3.mouse"], "readme": "Please note, data will be randomised until December 2014. It is based on Ipsos MORI's long term Issues Index survey 1974 - 2014.  \n\nforked from <a href='http://bl.ocks.org/DStruths/'>DStruths</a>'s block: <a href='http://bl.ocks.org/DStruths/9c042e3a6b66048b5bd4'>d3.js Multi-series line chart interactive</a>", "uid": "renecnielsen_777884b900d913917ec3"}, {"code": "<!--fork of Ben Christensen gist https://gist.github.com/benjchristensen/2657838*/!-->\n<html>\n\t<head>\n\t\t<title>Interactive Line Graph</title>\n\t\t<script src=\"http://d3js.org/d3.v3.js\"></script>\n\t\t<!-- \n\t\t\tusing JQuery for element dimensions\n\t\t\tThis is a small aspect of this example so it can be removed fairly easily if needed.\n\t\t-->\n\t\t<script src=\"http://code.jquery.com/jquery-1.7.2.min.js\"></script>\n\t\t<script src=\"sample_data.js\"></script>\n\t\t<script src=\"line-graph.js\"></script>\n        <script src=\"jquery.zoomooz.js\"></script>\n\t\t<link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: \"Helvetica Neue\", Helvetica;\n\t\t\t}\n\t\t\t\t\t\n\t\t\tp {\n\t\t\t\tclear:both;\n\t\t\t\ttop: 20px;\n\t\t\t}\t\t\n\t\t\t\t\t\n\t\t\tdiv.aGraph {\n\t\t\t\tmargin-bottom: 30px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t<div id=\"graph1\" class=\"aGraph\" style=\"position:relative;width:100%;height:400px\"></div>\n\t\n\t<div id=\"graph2\" class=\"aGraph zoomTarget\" data-targetsize=\"0.8\" data-debug=\"false\" style=\"float:left;position:relative;width:49%;height:200px\"></div>\n\t<div id=\"graph3\" class=\"aGraph zoomTarget\" data-targetsize=\"0.8\" data-debug=\"false\" style=\"float:left;position:relative;width:49%;height:200px\"></div>\n\n\t<script>\n\t\t/* \n\t\t * If running inside bl.ocks.org we want to resize the iframe to fit both graphs\n\t\t */\n\t\t if(parent.document.getElementsByTagName(\"iframe\")[0]) {\n\t\t\t parent.document.getElementsByTagName(\"iframe\")[0].setAttribute('style', 'height: 650px !important');\n\t\t }\n\t\n\t\t /*\n\t\t * Note how the 'data' object is added to here before rendering to provide decoration information.\n\t\t * <p>\n\t\t * This is purposefully done here instead of in data.js as an example of how data would come from a server\n\t\t * and then have presentation information injected into it (rather than as separate arguments in another object)\n\t\t * and passed into LineGraph.\n\t\t *\n\t\t * Also, CSS can be used to style colors etc, but this is also doable via the 'data' object so that the styling\n\t\t * of different data points can be done in code which is often more natural for display names, legends, line colors etc\n\t\t */\n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data[\"displayNames\"] = [\"2xx\",\"3xx\",\"4xx\",\"5xx\"];\n\t\t data[\"colors\"] = [\"green\",\"orange\",\"red\",\"darkred\"];\n\t\t data[\"scale\"] = \"pow\";\n\t\t \n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data2[\"displayNames\"] = [\"2xx\",\"3xx\",\"4xx\",\"5xx\"];\n\t\t data2[\"colors\"] = [\"green\",\"orange\",\"red\",\"darkred\"];\n\t\t data2[\"scale\"] = \"linear\";\n\t\t \n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data3[\"displayNames\"] = [\"Data1\", \"Data2\"];\n\t\t data3[\"axis\"] = [\"left\", \"right\"];\n\t\t data3[\"colors\"] = [\"#2863bc\",\"#c8801c\"];\n\t\t data3[\"rounding\"] = [2, 0];\n\n\t\t // create graph now that we've added presentation config\n\t\tvar l1 = new LineGraph({containerId: 'graph1', data: data});\n\t\tvar l2 = new LineGraph({containerId: 'graph2', data: data2});\n\t\tvar l3 = new LineGraph({containerId: 'graph3', data: data3});\n\t\t\n\tsetInterval(function() {\n\t\t/*\n\t\t* The following will simulate live updating of the data (see dataA, dataB, dataC etc in data.js which are real examples)\n\t\t* This is being simulated so this example functions standalone without a backend server which generates data such as data.js contains.\n\t\t*/\n\t\t// for each data series ...\n\t\tvar newData = [];\n\t\tdata.values.forEach(function(dataSeries, index) {\n\t\t\t// take the first value and move it to the end\n\t\t\t// and capture the value we're moving so we can send it to the graph as an update\n\t\t\tvar v = dataSeries.shift();\n\t\t\tdataSeries.push(v);\n\t\t\t// put this value in newData as an array with 1 value\n\t\t\tnewData[index] = [v];\n\t\t})\n\t\t\n\t\t// we will reuse dataA each time\n\t\tdataA.values = newData;\n\t\t// increment time 1 step\n\t\tdataA.start = dataA.start + dataA.step;\n\t\tdataA.end = dataA.end + dataA.step; \n\t\t\t\t\t\n\t\tl1.slideData(dataA);\n\t}, 2000);\n\n\t\t\n\t</script>\n\n\n\n\t</body>\n</html>", "description": null, "created_at": "2013-03-16T16:28:54Z", "updated_at": "2015-12-15T00:59:45Z", "api": ["d3.format", "d3.max", "d3.scale.pow", "d3.scale.log", "d3.scale.linear", "d3.svg.axis", "d3.time.scale", "d3.select", "d3.svg.line"], "readme": "#Fork of [Ben Christensen multi-line graph](https://gist.github.com/benjchristensen/2657838)\nFork adds [zoomooz](http://janne.aukia.com/zoomooz/) zoom functionality to the graph.  Works well, but the hover element does not offset to reflect the zoom.\n\nOriginal Readme.md is below\n***\nProof of concept line graph implemented using d3.js and some jQuery that [builds on](http://bl.ocks.org/1148374) [previous](http://bl.ocks.org/2579619) [examples](http://bl.ocks.org/2580640).\n\nThe top graph is 24 hours of data in 2 minute increments. I have it rolling every 2 seconds to simulate live updating. In real-life it would only update every 2 minutes to match the data granularity.\n\nSee it running at [http://bl.ocks.org/2657838](http://bl.ocks.org/2657838)\n\nFeatures:\n\n* incrementally update data or replace entire dataset\n* interactive mouseover to view details\n* animated switching of y-axis scale types (linear, power, log)\n* dynamic redrawing on window resize\n\nMissing:\n\n* not yet integrated with touch events, only mouse\n\nI don't normally work in javascript, so if it isn't quite right, I'd appreciate suggestions on where to improve it.", "uid": "bewest_5177174"}, {"code": "<!--fork of Ben Christensen gist https://gist.github.com/benjchristensen/2657838*/!-->\n<html>\n\t<head>\n\t\t<title>Interactive Line Graph</title>\n\t\t<script src=\"http://d3js.org/d3.v3.js\"></script>\n\t\t<!-- \n\t\t\tusing JQuery for element dimensions\n\t\t\tThis is a small aspect of this example so it can be removed fairly easily if needed.\n\t\t-->\n\t\t<script src=\"http://code.jquery.com/jquery-1.7.2.min.js\"></script>\n\t\t<script src=\"sample_data.js\"></script>\n\t\t<script src=\"line-graph.js\"></script>\n        <script src=\"jquery.zoomooz.js\"></script>\n\t\t<link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: \"Helvetica Neue\", Helvetica;\n\t\t\t}\n\t\t\t\t\t\n\t\t\tp {\n\t\t\t\tclear:both;\n\t\t\t\ttop: 20px;\n\t\t\t}\t\t\n\t\t\t\t\t\n\t\t\tdiv.aGraph {\n\t\t\t\tmargin-bottom: 30px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t<div id=\"graph1\" class=\"aGraph\" style=\"position:relative;width:100%;height:400px\"></div>\n\t\n\t<div id=\"graph2\" class=\"aGraph zoomTarget\" data-targetsize=\"0.8\" data-debug=\"false\" style=\"float:left;position:relative;width:49%;height:200px\"></div>\n\t<div id=\"graph3\" class=\"aGraph zoomTarget\" data-targetsize=\"0.8\" data-debug=\"false\" style=\"float:left;position:relative;width:49%;height:200px\"></div>\n\n\t<script>\n\t\t/* \n\t\t * If running inside bl.ocks.org we want to resize the iframe to fit both graphs\n\t\t */\n\t\t if(parent.document.getElementsByTagName(\"iframe\")[0]) {\n\t\t\t parent.document.getElementsByTagName(\"iframe\")[0].setAttribute('style', 'height: 650px !important');\n\t\t }\n\t\n\t\t /*\n\t\t * Note how the 'data' object is added to here before rendering to provide decoration information.\n\t\t * <p>\n\t\t * This is purposefully done here instead of in data.js as an example of how data would come from a server\n\t\t * and then have presentation information injected into it (rather than as separate arguments in another object)\n\t\t * and passed into LineGraph.\n\t\t *\n\t\t * Also, CSS can be used to style colors etc, but this is also doable via the 'data' object so that the styling\n\t\t * of different data points can be done in code which is often more natural for display names, legends, line colors etc\n\t\t */\n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data[\"displayNames\"] = [\"2xx\",\"3xx\",\"4xx\",\"5xx\"];\n\t\t data[\"colors\"] = [\"green\",\"orange\",\"red\",\"darkred\"];\n\t\t data[\"scale\"] = \"pow\";\n\t\t \n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data2[\"displayNames\"] = [\"2xx\",\"3xx\",\"4xx\",\"5xx\"];\n\t\t data2[\"colors\"] = [\"green\",\"orange\",\"red\",\"darkred\"];\n\t\t data2[\"scale\"] = \"linear\";\n\t\t \n\t\t // add presentation logic for 'data' object using optional data arguments\n\t\t data3[\"displayNames\"] = [\"Data1\", \"Data2\"];\n\t\t data3[\"axis\"] = [\"left\", \"right\"];\n\t\t data3[\"colors\"] = [\"#2863bc\",\"#c8801c\"];\n\t\t data3[\"rounding\"] = [2, 0];\n\n\t\t // create graph now that we've added presentation config\n\t\tvar l1 = new LineGraph({containerId: 'graph1', data: data});\n\t\tvar l2 = new LineGraph({containerId: 'graph2', data: data2});\n\t\tvar l3 = new LineGraph({containerId: 'graph3', data: data3});\n\t\t\n\tsetInterval(function() {\n\t\t/*\n\t\t* The following will simulate live updating of the data (see dataA, dataB, dataC etc in data.js which are real examples)\n\t\t* This is being simulated so this example functions standalone without a backend server which generates data such as data.js contains.\n\t\t*/\n\t\t// for each data series ...\n\t\tvar newData = [];\n\t\tdata.values.forEach(function(dataSeries, index) {\n\t\t\t// take the first value and move it to the end\n\t\t\t// and capture the value we're moving so we can send it to the graph as an update\n\t\t\tvar v = dataSeries.shift();\n\t\t\tdataSeries.push(v);\n\t\t\t// put this value in newData as an array with 1 value\n\t\t\tnewData[index] = [v];\n\t\t})\n\t\t\n\t\t// we will reuse dataA each time\n\t\tdataA.values = newData;\n\t\t// increment time 1 step\n\t\tdataA.start = dataA.start + dataA.step;\n\t\tdataA.end = dataA.end + dataA.step; \n\t\t\t\t\t\n\t\tl1.slideData(dataA);\n\t}, 2000);\n\n\t\t\n\t</script>\n\n\n\n\t</body>\n</html>", "description": "Fork of Ben Christensen multiline with zoomooz", "created_at": "2013-03-13T13:48:52Z", "updated_at": "2015-12-14T21:38:53Z", "api": ["d3.format", "d3.max", "d3.scale.pow", "d3.scale.log", "d3.scale.linear", "d3.svg.axis", "d3.time.scale", "d3.select", "d3.svg.line"], "readme": "#Fork of [Ben Christensen multi-line graph](https://gist.github.com/benjchristensen/2657838)\nFork adds [zoomooz](http://janne.aukia.com/zoomooz/) zoom functionality to the graph.  Works well, but the hover element does not offset to reflect the zoom.\n\nOriginal Readme.md is below\n***\nProof of concept line graph implemented using d3.js and some jQuery that [builds on](http://bl.ocks.org/1148374) [previous](http://bl.ocks.org/2579619) [examples](http://bl.ocks.org/2580640).\n\nThe top graph is 24 hours of data in 2 minute increments. I have it rolling every 2 seconds to simulate live updating. In real-life it would only update every 2 minutes to match the data granularity.\n\nSee it running at [http://bl.ocks.org/2657838](http://bl.ocks.org/2657838)\n\nFeatures:\n\n* incrementally update data or replace entire dataset\n* interactive mouseover to view details\n* animated switching of y-axis scale types (linear, power, log)\n* dynamic redrawing on window resize\n\nMissing:\n\n* not yet integrated with touch events, only mouse\n\nI don't normally work in javascript, so if it isn't quite right, I'd appreciate suggestions on where to improve it.", "uid": "timelyportfolio_5152233"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  background: #fcfcfa;\n}\n\n.stroke {\n  fill: none;\n  stroke: #000;\n  stroke-width: 3px;\n}\n\n.fill {\n  fill: #fff;\n}\n\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-width: .5px;\n  stroke-opacity: .5;\n}\n\n.land {\n  fill: #222;\n}\n\n.boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 960;\n\nvar projection = d3.geo.azimuthalEquidistant()\n    .scale(150)\n    .translate([width / 2, height / 2])\n    .clipAngle(180 - 1e-3)\n    .precision(.1)\n    .center([-120,35]);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar graticule = d3.geo.graticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"defs\").append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\nsvg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"fill\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\nmapdat = \"http://bl.ocks.org/mbostock/raw/4090846/world-50m.json\"\n\nd3.json(\"http://bl.ocks.org/mbostock/raw/4090846/world-50m.json\", function(error, world) {\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n</script>", "description": "Start of Olympic D3 map hack", "created_at": "2014-02-08T00:09:22Z", "updated_at": "2015-08-29T13:56:10Z", "api": ["d3.geo.azimuthalEquidistant", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.json"], "readme": "This is pretty much just stealing http://bl.ocks.org/mbostock/3757110 which I want to hack to make some visualizations around the black sea (Sochi) region highlighting non-olympic news.", "uid": "mpmckenna8_8874545"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>Marvel Characters | Force layout with images</title>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n\n    <style>\n      @import url(http://fonts.googleapis.com/css?family=Source+Code+Pro:400,600);\n      body {font-family: \"Source Code Pro\", Consolas, monaco, monospace; line-height: 160%; font-size: 16px;  margin: 0; }\n      path.link {\n        fill: none;\n        stroke-width: 2px;\n      }\n      .node:not(:hover) .nodetext {\n        display: none;\n      }\n      h1 { font-size: 36px; margin: 10px 0; text-transform: uppercase; font-weight: normal;}\n      h2, h3 { font-size: 18px; margin: 5px 0 ; font-weight: normal;}\n      header {padding: 20px; position: absolute; top: 0; left: 0;}\n      a:link { color: #EE3124; text-decoration: none;}\n      a:visited { color: #EE3124; }\n      a:hover { color: #A4CD39; text-decoration: underline;}\n      a:active { color: #EE3124; }\n    </style>\n</head>\n    \n\n<body>\n    <header>\n      <h1>Marvel Characters</h1>\n      <h2>Click to view their identity</h2>\n      <h3>And link to their web page!</h3>\n    </header>\n    <!-- container for force layout visualisation  -->\n    <section id=\"vis\"></section> \n<script>\n\n// some colour variables\n  var tcBlack = \"#130C0E\";\n\n// rest of vars\nvar w = 960,\n    h = 800,\n    maxNodeSize = 50,\n    x_browser = 20,\n    y_browser = 25,\n    root;\n \nvar vis;\nvar force = d3.layout.force(); \n\nvis = d3.select(\"#vis\").append(\"svg\").attr(\"width\", w).attr(\"height\", h);\n \nd3.json(\"marvel.json\", function(json) {\n \n  root = json;\n  root.fixed = true;\n  root.x = w / 2;\n  root.y = h / 4;\n \n \n        // Build the path\n  var defs = vis.insert(\"svg:defs\")\n      .data([\"end\"]);\n \n \n  defs.enter().append(\"svg:path\")\n      .attr(\"d\", \"M0,-5L10,0L0,5\");\n \n     update();\n});\n \n \n/**\n *   \n */\nfunction update() {\n  var nodes = flatten(root),\n      links = d3.layout.tree().links(nodes);\n \n  // Restart the force layout.\n  force.nodes(nodes)\n        .links(links)\n        .gravity(0.05)\n    .charge(-1500)\n    .linkDistance(100)\n    .friction(0.5)\n    .linkStrength(function(l, i) {return 1; })\n    .size([w, h])\n    .on(\"tick\", tick)\n        .start();\n \n   var path = vis.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n \n    path.enter().insert(\"svg:path\")\n      .attr(\"class\", \"link\")\n      // .attr(\"marker-end\", \"url(#end)\")\n      .style(\"stroke\", \"#eee\");\n \n \n  // Exit any old paths.\n  path.exit().remove();\n \n \n \n  // Update the nodes\u2026\n  var node = vis.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id; });\n \n \n  // Enter any new nodes.\n  var nodeEnter = node.enter().append(\"svg:g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n      .on(\"click\", click)\n      .call(force.drag);\n \n  // Append a circle\n  nodeEnter.append(\"svg:circle\")\n      .attr(\"r\", function(d) { return Math.sqrt(d.size) / 10 || 4.5; })\n      .style(\"fill\", \"#eee\");\n \n   \n  // Append images\n  var images = nodeEnter.append(\"svg:image\")\n        .attr(\"xlink:href\",  function(d) { return d.img;})\n        .attr(\"x\", function(d) { return -25;})\n        .attr(\"y\", function(d) { return -25;})\n        .attr(\"height\", 50)\n        .attr(\"width\", 50);\n  \n  // make the image grow a little on mouse over and add the text details on click\n  var setEvents = images\n          // Append hero text\n          .on( 'click', function (d) {\n              d3.select(\"h1\").html(d.hero); \n              d3.select(\"h2\").html(d.name); \n              d3.select(\"h3\").html (\"Take me to \" + \"<a href='\" + d.link + \"' >\"  + d.hero + \" web page \u21e2\"+ \"</a>\" ); \n           })\n\n          .on( 'mouseenter', function() {\n            // select element in current context\n            d3.select( this )\n              .transition()\n              .attr(\"x\", function(d) { return -60;})\n              .attr(\"y\", function(d) { return -60;})\n              .attr(\"height\", 100)\n              .attr(\"width\", 100);\n          })\n          // set back\n          .on( 'mouseleave', function() {\n            d3.select( this )\n              .transition()\n              .attr(\"x\", function(d) { return -25;})\n              .attr(\"y\", function(d) { return -25;})\n              .attr(\"height\", 50)\n              .attr(\"width\", 50);\n          });\n\n  // Append hero name on roll over next to the node as well\n  nodeEnter.append(\"text\")\n      .attr(\"class\", \"nodetext\")\n      .attr(\"x\", x_browser)\n      .attr(\"y\", y_browser +15)\n      .attr(\"fill\", tcBlack)\n      .text(function(d) { return d.hero; });\n \n \n  // Exit any old nodes.\n  node.exit().remove();\n \n \n  // Re-select for update.\n  path = vis.selectAll(\"path.link\");\n  node = vis.selectAll(\"g.node\");\n \nfunction tick() {\n \n \n    path.attr(\"d\", function(d) {\n \n     var dx = d.target.x - d.source.x,\n           dy = d.target.y - d.source.y,\n           dr = Math.sqrt(dx * dx + dy * dy);\n           return   \"M\" + d.source.x + \",\" \n            + d.source.y \n            + \"A\" + dr + \",\" \n            + dr + \" 0 0,1 \" \n            + d.target.x + \",\" \n            + d.target.y;\n  });\n    node.attr(\"transform\", nodeTransform);    \n  }\n}\n\n \n/**\n * Gives the coordinates of the border for keeping the nodes inside a frame\n * http://bl.ocks.org/mbostock/1129492\n */ \nfunction nodeTransform(d) {\n  d.x =  Math.max(maxNodeSize, Math.min(w - (d.imgwidth/2 || 16), d.x));\n    d.y =  Math.max(maxNodeSize, Math.min(h - (d.imgheight/2 || 16), d.y));\n    return \"translate(\" + d.x + \",\" + d.y + \")\";\n   }\n \n/**\n * Toggle children on click.\n */ \nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n \n  update();\n}\n \n \n/**\n * Returns a list of all nodes under the root.\n */ \nfunction flatten(root) {\n  var nodes = []; \n  var i = 0;\n \n  function recurse(node) {\n    if (node.children) \n      node.children.forEach(recurse);\n    if (!node.id) \n      node.id = ++i;\n    nodes.push(node);\n  }\n \n  recurse(root);\n  return nodes;\n} \n  \n  \n</script>\n\n</body>\n</html>\n", "description": "d3 | Force layout with images", "created_at": "2016-01-07T03:24:48Z", "updated_at": "2016-01-07T03:24:57Z", "api": ["d3.layout.force", "d3.select", "d3.json", "d3.layout.tree"], "readme": "Force layout test/experiment with images\n\nSources:\n- [Force Layout](https://github.com/mbostock/d3/wiki/Force-Layout)\n- [Force-based label placement](http://bl.ocks.org/MoritzStefaner/1377729)\n- [Collapsible force layout with directed paths and images/text in the nodes.](http://bl.ocks.org/djjupa/5653692)\n- [Labeled Force Layout](http://bl.ocks.org/mbostock/950642)\n\n\nforked from <a href='http://bl.ocks.org/eesur/'>eesur</a>'s block: <a href='http://bl.ocks.org/eesur/be2abfb3155a38be4de4'>d3 | Force layout with images</a>", "uid": "renecnielsen_46c782526409787e0d44"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.point {\n  fill: #2f225d;\n  stroke: #afa2dc;\n}\n\n.selected {\n  fill: #afa2dc;\n  stroke: #2f225d;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\np {\n  font: 12px sans-serif;\n  margin: 0 0 2px 0;\n  padding: 0;\n}\n\n.clear-button {\n  font: 14px sans-serif;\n  cursor: pointer;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar data = [];\nvar values = [];\nfor (var i = 2; i <= 50; i++) {\n    var val = Math.floor(Math.random() * (50 - 5 + 1) + 5);\n    data.push({index: i, value: val});\n    values.push(val);\n}\n\nvar margin = {top: 20, right: 20, bottom: 60, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([0, 50]);\n\nvar y = d3.scale.linear()\n    .range([height, 0])\n    .domain([0, d3.max(values) + 5]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(11);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\npoints = svg.selectAll(\".point\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"class\", \"point\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"r\", function(d){return Math.floor(Math.random() * (20 - 5 + 1) + 5);})\n    .attr(\"cx\", function(d) { return x(d.index); })\n    .attr(\"cy\", function(d) { return y(d.value); });\n\n</script>", "description": "D3 Brush and Tooltip I", "created_at": "2013-11-24T17:35:37Z", "updated_at": "2015-12-29T06:38:57Z", "api": ["d3.scale.linear", "d3.max", "d3.svg.axis", "d3.select"], "readme": "Example for [Cooperative Brushing and Tooltips in D3](http://wrobstory.github.io/2013/11/D3-brush-and-tooltip.html). \n\nScatterplot only - no tooltips or brush. ", "uid": "wrobstory_7629900"}, {"code": "Using d3-tip to add tooltips to a d3 bar chart.\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.bar {\n  fill: orange;\n}\n\n.bar:hover {\n  fill: orangered ;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.d3-tip {\n  line-height: 1;\n  font-weight: bold;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  border-radius: 2px;\n}\n\n/* Creates a small triangle extender for the tooltip */\n.d3-tip:after {\n  box-sizing: border-box;\n  display: inline;\n  font-size: 10px;\n  width: 100%;\n  line-height: 1;\n  color: rgba(0, 0, 0, 0.8);\n  content: \"\\25BC\";\n  position: absolute;\n  text-align: center;\n}\n\n/* Style northward tooltips differently */\n.d3-tip.n:after {\n  margin: -1px 0 0 0;\n  top: 100%;\n  left: 0;\n}\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js\"></script>\n<script>\n\nvar margin = {top: 40, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatPercent = d3.format(\".0%\");\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(formatPercent);\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Frequency:</strong> <span style='color:red'>\" + d.frequency + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>\n", "description": "Using d3-tip to add tooltips to a d3 bar chart", "created_at": "2016-04-04T18:50:08Z", "updated_at": "2016-04-04T18:50:08Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "How to use [d3-tip](https://github.com/caged/d3-tip) with d3's [simple bar chart example](http://bl.ocks.org/mbostock/3885304).\n\n\nforked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>", "uid": "scresawn_3bbeb8116590df58f95ee3db7f728e5e"}, {"code": "<html>\n<head>\n  <title>d3.svg.ribbon with Napoleon's March</title>\n  <meta charset=\"utf-8\" />\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"d3.svg.ribbon.js\" type=\"text/JavaScript\"></script>\n</head>\n<style>\n  svg {\n    height: 2000px;\n    width: 2000px;\n  }\n\n</style>\n<body>\n\n<div id=\"viz\">\n  <svg>\n  </svg>\n</div>\n</body>\n  <footer>\n\n<script>\n\ncolorScale = d3.scale.ordinal().range([\"#96abb1\", \"#313746\", \"#b0909d\", \"#687a97\", \"#292014\"])\n\narmy = [\n    /* Group 1 */\n    {lon:24.0,  lat:54.9,  size:340000, dir:1,  group:1},\n    {lon:24.5,  lat:55.0,  size:340000, dir:1,  group:1},\n    {lon:25.5,  lat:54.6,  size:340000, dir:1,  group:1},\n    {lon:26.0,  lat:54.7,  size:320000, dir:1,  group:1},\n    {lon:27.0,  lat:54.8,  size:300000, dir:1,  group:1},\n    {lon:28.0,  lat:54.9,  size:280000, dir:1,  group:1},\n    {lon:28.5,  lat:55.0,  size:240000, dir:1,  group:1},\n    {lon:29.0,  lat:55.1,  size:210000, dir:1,  group:1},\n    {lon:30.0,  lat:55.2,  size:180000, dir:1,  group:1},\n    {lon:30.3,  lat:55.3,  size:175000, dir:1,  group:1},\n    {lon:32.0,  lat:54.8,  size:145000, dir:1,  group:1},\n    {lon:33.2,  lat:54.9,  size:140000, dir:1,  group:1},\n    {lon:34.4,  lat:55.5,  size:127100, dir:1,  group:1},\n    {lon:35.5,  lat:55.4,  size:100000, dir:1,  group:1},\n    {lon:36.0,  lat:55.5,  size:100000, dir:1,  group:1},\n    {lon:37.6,  lat:55.8,  size:100000, dir:1,  group:1},\n    {lon:37.65, lat:55.65, size:100000, dir:-1, group:1},\n    {lon:37.45, lat:55.62, size:98000,  dir:-1, group:1},\n    {lon:37.0,  lat:55.0,  size:97000,  dir:-1, group:1},\n    {lon:36.8,  lat:55.0,  size:96000,  dir:-1, group:1},\n    {lon:35.4,  lat:55.3,  size:87000,  dir:-1, group:1},\n    {lon:34.3,  lat:55.2,  size:55000,  dir:-1, group:1},\n    {lon:33.3,  lat:54.8,  size:37000,  dir:-1, group:1},\n    {lon:32.0,  lat:54.6,  size:24000,  dir:-1, group:1},\n    {lon:30.4,  lat:54.4,  size:20000,  dir:-1, group:1},\n    {lon:29.2,  lat:54.3,  size:20000,  dir:-1, group:1},\n    {lon:29.13, lat:54.29, size:50000,  dir:-1, group:1}, /* joined by group 2 */\n    {lon:28.5,  lat:54.2,  size:50000,  dir:-1, group:1},\n    {lon:28.3,  lat:54.3,  size:48000,  dir:-1, group:1},\n    {lon:26.8,  lat:54.3,  size:12000,  dir:-1, group:1},\n    {lon:26.8,  lat:54.4,  size:14000,  dir:-1, group:1},\n    {lon:25.0,  lat:54.4,  size:8000,   dir:-1, group:1},\n    {lon:24.4,  lat:54.4,  size:4000,   dir:-1, group:1},\n    {lon:24.2,  lat:54.4,  size:4000,   dir:-1, group:1},\n    {lon:24.1,  lat:54.4,  size:4000,   dir:-1, group:1},\n    /* Group 2 */\n    {lon:24.0,  lat:55.1,  size:60000,  dir:1,  group:2},\n    {lon:24.5,  lat:55.2,  size:60000,  dir:1,  group:2},\n    {lon:25.5,  lat:54.7,  size:60000,  dir:1,  group:2},\n    {lon:26.6,  lat:55.7,  size:40000,  dir:1,  group:2},\n    {lon:27.4,  lat:55.6,  size:33000,  dir:1,  group:2},\n    {lon:28.7,  lat:55.5,  size:33000,  dir:1,  group:2},\n    {lon:28.7,  lat:55.5,  size:33000,  dir:-1, group:2},\n    {lon:29.2,  lat:54.29, size:30000,  dir:-1, group:2},\n    /* Group 3 */\n    {lon:24.0,  lat:55.2,  size:22000,  dir:1,  group:3},\n    {lon:24.5,  lat:55.3,  size:22000,  dir:1,  group:3},\n    {lon:24.6,  lat:55.8,  size:6000,   dir:1,  group:3},\n    {lon:24.6,  lat:55.8,  size:6000,   dir:-1, group:3},\n    {lon:24.2,  lat:54.4,  size:6000,   dir:-1, group:3},\n    {lon:24.1,  lat:54.4,  size:6000,   dir:-1, group:3}\n];\n\nprojection = d3.geo.equirectangular().translate([-3300,7800]).scale(8000);\nsizeScale = d3.scale.linear().domain([6000,340000]).range([1,10])\n\nribbon = d3.svg.ribbon()\n  .x(function(d) {return projection([d.lon, d.lat])[0]})\n  .y(function(d) {return projection([d.lon, d.lat])[1]})\n  .r(function(d) {return sizeScale(d.size)});\n\ndrag = d3.behavior.drag().on(\"drag\", function (d) {\n  d.x = d3.event.x;\n  d.y = d3.event.y;\n  redraw();\n});\n\nvar groupNest = d3.nest().key(function (d) {return d.group}).entries(army);\n\nd3.select(\"svg\")\n.selectAll(\"path.minard\")\n.data(groupNest)\n.enter()\n.append(\"path\")\n.attr(\"class\", \"minard\")\n.style(\"fill\", function (d) {return colorScale(d.key)})\n.style(\"stroke\", \"gray\")\n.style(\"stroke-opacity\", 0.15)\n.style(\"stroke-width\", \"2px\")\n.attr(\"d\", function (d) {return ribbon(d.values)})\n\n</script>\n  </footer>\n\n</html>\n", "description": "Napoleon's March with d3.svg.ribbon", "created_at": "2015-08-23T17:34:13Z", "updated_at": "2016-03-16T15:48:05Z", "api": ["d3.svg.line", "d3.scale.ordinal", "d3.geo.equirectangular", "d3.scale.linear", "d3.svg.ribbon", "d3.behavior.drag", "d3.nest", "d3.select"], "readme": "An example of [d3.svg.ribbon](https://github.com/emeeks/d3.svg.ribbon) using Napoleon's March through Russia made famous by Minard's map. Dataset comes from Ben Schmidt's use of it in his excellent [d3.trail layout](https://github.com/bmschmidt/D3-trail).\n\nThe pattern for using d3.svg.ribbon with geodata is simply to factor the projection into the accessors:\n\n```\nprojection = d3.geo.equirectangular().translate([-3300,7800]).scale(8000);\nsizeScale = d3.scale.linear().domain([6000,340000]).range([1,10])\n\nribbon = d3.svg.ribbon()\n  .x(function(d) {return projection([d.lon, d.lat])[0]})\n  .y(function(d) {return projection([d.lon, d.lat])[1]})\n  .r(function(d) {return sizeScale(d.size)});\n```", "uid": "emeeks_a0b5a95c999628547494"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n\n    <title>Collapsible Tree Example</title>\n\n    <style>\n\n\t.node circle {\n\t  fill: #fff;\n\t  stroke: steelblue;\n\t  stroke-width: 3px;\n\t}\n\n\t.node text { font: 12px sans-serif; }\n\n\t.link {\n\t  fill: none;\n\t  stroke: #ccc;\n\t  stroke-width: 2px;\n\t}\n\t\n    </style>\n\n  </head>\n\n  <body>\n\n<!-- load the d3.js library -->\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\t\n<script>\n\n// ************** Generate the tree diagram\t *****************\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n\twidth = 960 - margin.right - margin.left,\n\theight = 500 - margin.top - margin.bottom;\n\t\nvar i = 0;\n\nvar tree = d3.layout.tree()\n\t.size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n\t.projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.right + margin.left)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// load the external data\nd3.csv(\"treedata.csv\", function(error, data) {\n\n// *********** Convert flat data into a nice tree ***************\n// create a name: node map\nvar dataMap = data.reduce(function(map, node) {\n\tmap[node.name] = node;\n\treturn map;\n}, {});\n\n// create the tree array\nvar treeData = [];\ndata.forEach(function(node) {\n\t// add to parent\n\tvar parent = dataMap[node.parent];\n\tif (parent) {\n\t\t// create child array if it doesn't exist\n\t\t(parent.children || (parent.children = []))\n\t\t\t// add node to child array\n\t\t\t.push(node);\n\t} else {\n\t\t// parent is null or missing\n\t\ttreeData.push(node);\n\t}\n});\n\n  root = treeData[0];\n  update(root);\n});\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n\t  links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Declare the nodes\u00e2\u20ac\u00a6\n  var node = svg.selectAll(\"g.node\")\n\t  .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter the nodes.\n  var nodeEnter = node.enter().append(\"g\")\n\t  .attr(\"class\", \"node\")\n\t  .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeEnter.append(\"circle\")\n\t  .attr(\"r\", 10)\n\t  .style(\"fill\", \"#fff\");\n\n  nodeEnter.append(\"text\")\n\t  .attr(\"x\", function(d) { \n\t\t  return d.children || d._children ? -13 : 13; })\n\t  .attr(\"dy\", \".35em\")\n\t  .attr(\"text-anchor\", function(d) { \n\t\t  return d.children || d._children ? \"end\" : \"start\"; })\n\t  .text(function(d) { return d.name; })\n\t  .style(\"fill-opacity\", 1);\n\n  // Declare the links\u00e2\u20ac\u00a6\n  var link = svg.selectAll(\"path.link\")\n\t  .data(links, function(d) { return d.target.id; });\n\n  // Enter the links.\n  link.enter().insert(\"path\", \"g\")\n\t  .attr(\"class\", \"link\")\n\t  .attr(\"d\", diagonal);\n\n}\n\n</script>\n\t\n  </body>\n</html>", "description": "d3.js tree from csv", "created_at": "2015-01-16T18:23:43Z", "updated_at": "2016-01-31T14:46:02Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.csv"], "readme": "This is a simple d3.js tree diagram put together in response to a question on [Stack Overflow](http://stackoverflow.com/questions/27912763/creating-a-d3-js-collapsible-tree-from-csv-data)\n\nIt is aimed at providing some exposure to some d3.js functions and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_fa0f16e271cb191ae85f"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n\n    <title>Tree Example</title>\n\n    <style>\n\t\n\t.node {\n\t\tcursor: pointer;\n\t}\n\n\t.node circle {\n\t  fill: #fff;\n\t  stroke: steelblue;\n\t  stroke-width: 3px;\n\t}\n\n\t.node text {\n\t  font: 12px sans-serif;\n\t}\n\n\t.link {\n\t  fill: none;\n\t  stroke: #ccc;\n\t  stroke-width: 2px;\n\t}\n\t\n    </style>\n\n  </head>\n\n  <body>\n\n<!-- load the d3.js library -->\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\t\n<script>\n\nvar treeData = [\n  {\n    \"name\": \"Top Level\",\n    \"parent\": \"null\",\n    \"children\": [\n      {\n        \"name\": \"Level 2: A\",\n        \"parent\": \"Top Level\",\n        \"children\": [\n          {\n            \"name\": \"Son of A\",\n            \"parent\": \"Level 2: A\"\n          },\n          {\n            \"name\": \"Daughter of A\",\n            \"parent\": \"Level 2: A\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Level 2: B\",\n        \"parent\": \"Top Level\"\n      }\n    ]\n  }\n];\n\n\n// ************** Generate the tree diagram\t *****************\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n\twidth = 960 - margin.right - margin.left,\n\theight = 500 - margin.top - margin.bottom;\n\t\nvar i = 0,\n\tduration = 750,\n\troot;\n\nvar tree = d3.layout.tree()\n\t.size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n\t.projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.right + margin.left)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nroot = treeData[0];\nroot.x0 = height / 2;\nroot.y0 = 0;\n  \nupdate(root);\n\nd3.select(self.frameElement).style(\"height\", \"500px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n\t  links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\u2026\n  var node = svg.selectAll(\"g.node\")\n\t  .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n\t  .attr(\"class\", \"node\")\n\t  .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n\t  .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n\t  .attr(\"r\", 1e-6)\n\t  .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n\t  .attr(\"x\", function(d) { return d.children || d._children ? -13 : 13; })\n\t  .attr(\"dy\", \".35em\")\n\t  .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n\t  .text(function(d) { return d.name; })\n\t  .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n\t  .duration(duration)\n\t  .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n\t  .attr(\"r\", 10)\n\t  .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n\t  .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n\t  .duration(duration)\n\t  .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n\t  .remove();\n\n  nodeExit.select(\"circle\")\n\t  .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n\t  .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\u2026\n  var link = svg.selectAll(\"path.link\")\n\t  .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n\t  .attr(\"class\", \"link\")\n\t  .attr(\"d\", function(d) {\n\t\tvar o = {x: source.x0, y: source.y0};\n\t\treturn diagonal({source: o, target: o});\n\t  });\n\n  // Transition links to their new position.\n  link.transition()\n\t  .duration(duration)\n\t  .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n\t  .duration(duration)\n\t  .attr(\"d\", function(d) {\n\t\tvar o = {x: source.x, y: source.y};\n\t\treturn diagonal({source: o, target: o});\n\t  })\n\t  .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n\td.x0 = d.x;\n\td.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n\td._children = d.children;\n\td.children = null;\n  } else {\n\td.children = d._children;\n\td._children = null;\n  }\n  update(d);\n}\n\n</script>\n\t\n  </body>\n</html>\n", "description": "Interactive d3.js tree diagram", "created_at": "2014-01-11T18:50:12Z", "updated_at": "2016-01-02T23:18:58Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select"], "readme": "This is a d3.js tree diagram that incldes an interactive element as used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nAny parent node can be clicked on to collapse the portion of the tree below it, on itself. Conversly, it can be clicked on again to regrow.\n\nIt is derived from the Mike Bostock [Collapsible tree example](http://bl.ocks.org/mbostock/4339083) but it is a slightly cut down version.", "uid": "d3noob_8375092"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nsvg {\n  font: 10px sans-serif;\n}\n\n.area {\n  fill: steelblue;\n  clip-path: url(#clip);\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n  var margin = { top: 10, right: 10, bottom: 100, left: 40 },\n      margin2 = { top: 430, right: 10, bottom: 20, left: 40 },\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom,\n      height2 = 500 - margin2.top - margin2.bottom;\n\n  var parseDate = d3.time.format(\"%b %Y\").parse;\n\n  var x = d3.time.scale().range([0, width]),\n      x2 = d3.time.scale().range([0, width]),\n      y = d3.scale.linear().range([height, 0]),\n      y2 = d3.scale.linear().range([height2, 0]);\n\n  var xAxis = d3.svg.axis().scale(x).orient(\"bottom\"),\n      xAxis2 = d3.svg.axis().scale(x2).orient(\"bottom\"),\n      yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\n  var brush = d3.svg.brush()\n      .x(x2)\n      .on(\"brush\", brushed);\n\n  var area = d3.svg.area()\n      .interpolate(\"monotone\")\n      .x(function (d) { return x(d.date); })\n      .y0(height)\n      .y1(function (d) { return y(d.price); });\n\n  var area2 = d3.svg.area()\n      .interpolate(\"monotone\")\n      .x(function (d) { return x2(d.date); })\n      .y0(height2)\n      .y1(function (d) { return y2(d.price); });\n\n\n\n  // make some buttons to drive our zoom\n  d3.select(\"body\").append(\"div\")\n    .attr(\"id\",\"btnDiv\")\n    .style('font-size','75%')\n    .style(\"width\",\"250px\")\n    .style(\"position\",\"absolute\")\n    .style(\"left\",\"5%\")\n    .style(\"top\",\"200px\")\n\n  d3.select(\"#btnDiv\")[0][0].innerHTML = [\n    '<h3>Buttons To Drive Our Zoom</h3>',\n    '<p>push a button and watch the brush react</p>',\n    '<ul>',\n    '<li>note: deliberately slowed down so each step can be seen and demonstrate how to inject transition</li>',\n    '<li>also, play with the brush after drawn to see how it acts as if we drew with our mouse</li>',\n    '</ul>'\n  ].join('\\n')\n  \n\n  var btns = d3.select(\"#btnDiv\").selectAll(\"button\").data([2001, 2002, 2003, 2004])\n\n  btns = btns.enter().append(\"button\").style(\"display\",\"inline-block\")\n\n  // fill the buttons with the year from the data assigned to them\n  btns.each(function (d) {\n    this.innerText = d;\n  })\n\n  btns.on(\"click\", drawBrush);\n\n  function drawBrush() {\n    // our year will this.innerText\n    console.log(this.innerText)\n\n    // define our brush extent to be begin and end of the year\n    brush.extent([new Date(this.innerText + '-01-01'), new Date(this.innerText + '-12-31')])\n\n    // now draw the brush to match our extent\n    // use transition to slow it down so we can see what is happening\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush(d3.select(\".brush\").transition());\n\n    // now fire the brushstart, brushmove, and brushend events\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush.event(d3.select(\".brush\").transition().delay(1000))\n  }\n\n\n  var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom);\n\n  svg.append(\"defs\").append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n  var focus = svg.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  var context = svg.append(\"g\")\n      .attr(\"class\", \"context\")\n      .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\n  d3.csv(\"sp500.csv\", type, function (error, data) {\n    x.domain(d3.extent(data.map(function (d) { return d.date; })));\n    y.domain([0, d3.max(data.map(function (d) { return d.price; }))]);\n    x2.domain(x.domain());\n    y2.domain(y.domain());\n\n    focus.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"area\")\n        .attr(\"d\", area);\n\n    focus.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    focus.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n    context.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"area\")\n        .attr(\"d\", area2);\n\n    context.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n        .call(xAxis2);\n\n    context.append(\"g\")\n        .attr(\"class\", \"x brush\")\n        .call(brush)\n      .selectAll(\"rect\")\n        .attr(\"y\", -6)\n        .attr(\"height\", height2 + 7);\n  });\n\n  function brushed() {\n    x.domain(brush.empty() ? x2.domain() : brush.extent());\n    focus.select(\".area\").attr(\"d\", area);\n    focus.select(\".x.axis\").call(xAxis);\n  }\n\n  function type(d) {\n    d.date = parseDate(d.date);\n    d.price = +d.price;\n    return d;\n  }\n\n</script>\n</body>", "description": "demo programmatic control of a d3 brush", "created_at": "2016-02-10T12:44:41Z", "updated_at": "2016-02-10T12:44:42Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.brush", "d3.svg.area", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "# Programmatically Control a d3 brush\nForked from Mike Bostock's [focus+context zoom gist](https://gist.github.com/mbostock/1667367) to demonstrate how we can drive a d3 brush with code.\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>anybody know how to brush with code in <a href=\"https://twitter.com/hashtag/d3js?src=hash\">#d3js</a>?</p>&mdash; klr (@timelyportfolio) <a href=\"https://twitter.com/timelyportfolio/status/509701031585148928\">September 10, 2014</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nSo I found [this discussion](https://groups.google.com/forum/#!topic/d3-js/vNaR-vJ9hMg), but I could not find an example demonstrating the steps proposed by Athan Reines.\n\n<pre>\nFor auto-redraw such that the focus of a 1D brush matches the graphed domain, you need to do as follows:\n\n(1) Apply the brush scale to the graphed domain (i.e., the brush extent) --> store in var brushExtent; (units: pixels)\n(2) Within the brush element (class='brush'), select the <rect> with class='extent'.\n(3) If the brush is horizontal (i.e., for the x-axis), set the 'x' attribute to the first value in brushExtent. This moves the start position of the focus <rect> to match the graphed domain. If the brush is vertical (i.e., for the y-axis), set the 'y' attribute to the second value in brushExtent.\n(4) Next, set the 'width' attribute of the extent to brushExtent[1] - brushExtent[0]. The end of the brush focus is brushExtent[1], but the length of the focus is this minus the offset introduced by brushExtent[0]. (If a y-axis brush, switch [0] and [1]).\n\n(*) The extent should now programmatically match the graphed domain.\n\nI use this procedure as part of a resize function. Hope this works. \n\n-KG\n</pre>\n\nI do not follow the steps exactly.  Here is the code that drives our brush when a button is clicked.\n\n```\n  function drawBrush() {\n    // our year will this.innerText\n    console.log(this.innerText)\n\n    // define our brush extent to be begin and end of the year\n    brush.extent([new Date(this.innerText + '-01-01'), new Date(this.innerText + '-12-31')])\n\n    // now draw the brush to match our extent\n    // use transition to slow it down so we can see what is happening\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush(d3.select(\".brush\").transition());\n\n    // now fire the brushstart, brushmove, and brushend events\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush.event(d3.select(\".brush\").transition().delay(1000))\n  }\n```\n\n<hr/>\n### Original Readme.md\nThis examples demonstrates how to use D3's brush component to implement focus + context zooming. Click and drag in the small chart below to pan or zoom.\n\nforked from <a href='http://bl.ocks.org/timelyportfolio/'>timelyportfolio</a>'s block: <a href='http://bl.ocks.org/timelyportfolio/5c136de85de1c2abb6fc'>demo programmatic control of a d3 brush</a>", "uid": "renecnielsen_6ec52e5a9b88f7ca86ca"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nsvg {\n  font: 10px sans-serif;\n}\n\n.area {\n  fill: steelblue;\n  clip-path: url(#clip);\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill-opacity: .125;\n  shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script>\n  var margin = { top: 10, right: 10, bottom: 100, left: 40 },\n      margin2 = { top: 430, right: 10, bottom: 20, left: 40 },\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom,\n      height2 = 500 - margin2.top - margin2.bottom;\n\n  var parseDate = d3.time.format(\"%b %Y\").parse;\n\n  var x = d3.time.scale().range([0, width]),\n      x2 = d3.time.scale().range([0, width]),\n      y = d3.scale.linear().range([height, 0]),\n      y2 = d3.scale.linear().range([height2, 0]);\n\n  var xAxis = d3.svg.axis().scale(x).orient(\"bottom\"),\n      xAxis2 = d3.svg.axis().scale(x2).orient(\"bottom\"),\n      yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\n  var brush = d3.svg.brush()\n      .x(x2)\n      .on(\"brush\", brushed);\n\n  var area = d3.svg.area()\n      .interpolate(\"monotone\")\n      .x(function (d) { return x(d.date); })\n      .y0(height)\n      .y1(function (d) { return y(d.price); });\n\n  var area2 = d3.svg.area()\n      .interpolate(\"monotone\")\n      .x(function (d) { return x2(d.date); })\n      .y0(height2)\n      .y1(function (d) { return y2(d.price); });\n\n\n\n  // make some buttons to drive our zoom\n  d3.select(\"body\").append(\"div\")\n    .attr(\"id\",\"btnDiv\")\n    .style('font-size','75%')\n    .style(\"width\",\"250px\")\n    .style(\"position\",\"absolute\")\n    .style(\"left\",\"5%\")\n    .style(\"top\",\"200px\")\n\n  d3.select(\"#btnDiv\")[0][0].innerHTML = [\n    '<h3>Buttons To Drive Our Zoom</h3>',\n    '<p>push a button and watch the brush react</p>',\n    '<ul>',\n    '<li>note: deliberately slowed down so each step can be seen and demonstrate how to inject transition</li>',\n    '<li>also, play with the brush after drawn to see how it acts as if we drew with our mouse</li>',\n    '</ul>'\n  ].join('\\n')\n  \n\n  var btns = d3.select(\"#btnDiv\").selectAll(\"button\").data([2001, 2002, 2003, 2004])\n\n  btns = btns.enter().append(\"button\").style(\"display\",\"inline-block\")\n\n  // fill the buttons with the year from the data assigned to them\n  btns.each(function (d) {\n    this.innerText = d;\n  })\n\n  btns.on(\"click\", drawBrush);\n\n  function drawBrush() {\n    // our year will this.innerText\n    console.log(this.innerText)\n\n    // define our brush extent to be begin and end of the year\n    brush.extent([new Date(this.innerText + '-01-01'), new Date(this.innerText + '-12-31')])\n\n    // now draw the brush to match our extent\n    // use transition to slow it down so we can see what is happening\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush(d3.select(\".brush\").transition());\n\n    // now fire the brushstart, brushmove, and brushend events\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush.event(d3.select(\".brush\").transition().delay(1000))\n  }\n\n\n  var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom);\n\n  svg.append(\"defs\").append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n  var focus = svg.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  var context = svg.append(\"g\")\n      .attr(\"class\", \"context\")\n      .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\n  d3.csv(\"sp500.csv\", type, function (error, data) {\n    x.domain(d3.extent(data.map(function (d) { return d.date; })));\n    y.domain([0, d3.max(data.map(function (d) { return d.price; }))]);\n    x2.domain(x.domain());\n    y2.domain(y.domain());\n\n    focus.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"area\")\n        .attr(\"d\", area);\n\n    focus.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    focus.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n    context.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"area\")\n        .attr(\"d\", area2);\n\n    context.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n        .call(xAxis2);\n\n    context.append(\"g\")\n        .attr(\"class\", \"x brush\")\n        .call(brush)\n      .selectAll(\"rect\")\n        .attr(\"y\", -6)\n        .attr(\"height\", height2 + 7);\n  });\n\n  function brushed() {\n    x.domain(brush.empty() ? x2.domain() : brush.extent());\n    focus.select(\".area\").attr(\"d\", area);\n    focus.select(\".x.axis\").call(xAxis);\n  }\n\n  function type(d) {\n    d.date = parseDate(d.date);\n    d.price = +d.price;\n    return d;\n  }\n\n</script>\n</body>", "description": "demo programmatic control of a d3 brush", "created_at": "2014-09-10T19:06:52Z", "updated_at": "2016-04-26T10:57:54Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.brush", "d3.svg.area", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "# Programmatically Control a d3 brush\nForked from Mike Bostock's [focus+context zoom gist](https://gist.github.com/mbostock/1667367) to demonstrate how we can drive a d3 brush with code.\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>anybody know how to brush with code in <a href=\"https://twitter.com/hashtag/d3js?src=hash\">#d3js</a>?</p>&mdash; klr (@timelyportfolio) <a href=\"https://twitter.com/timelyportfolio/status/509701031585148928\">September 10, 2014</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nSo I found [this discussion](https://groups.google.com/forum/#!topic/d3-js/vNaR-vJ9hMg), but I could not find an example demonstrating the steps proposed by Athan Reines.\n\n<pre>\nFor auto-redraw such that the focus of a 1D brush matches the graphed domain, you need to do as follows:\n\n(1) Apply the brush scale to the graphed domain (i.e., the brush extent) --> store in var brushExtent; (units: pixels)\n(2) Within the brush element (class='brush'), select the <rect> with class='extent'.\n(3) If the brush is horizontal (i.e., for the x-axis), set the 'x' attribute to the first value in brushExtent. This moves the start position of the focus <rect> to match the graphed domain. If the brush is vertical (i.e., for the y-axis), set the 'y' attribute to the second value in brushExtent.\n(4) Next, set the 'width' attribute of the extent to brushExtent[1] - brushExtent[0]. The end of the brush focus is brushExtent[1], but the length of the focus is this minus the offset introduced by brushExtent[0]. (If a y-axis brush, switch [0] and [1]).\n\n(*) The extent should now programmatically match the graphed domain.\n\nI use this procedure as part of a resize function. Hope this works. \n\n-KG\n</pre>\n\nI do not follow the steps exactly.  Here is the code that drives our brush when a button is clicked.\n\n```\n  function drawBrush() {\n    // our year will this.innerText\n    console.log(this.innerText)\n\n    // define our brush extent to be begin and end of the year\n    brush.extent([new Date(this.innerText + '-01-01'), new Date(this.innerText + '-12-31')])\n\n    // now draw the brush to match our extent\n    // use transition to slow it down so we can see what is happening\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush(d3.select(\".brush\").transition());\n\n    // now fire the brushstart, brushmove, and brushend events\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush.event(d3.select(\".brush\").transition().delay(1000))\n  }\n```\n\n<hr/>\n### Original Readme.md\nThis examples demonstrates how to use D3's brush component to implement focus + context zooming. Click and drag in the small chart below to pan or zoom.", "uid": "timelyportfolio_5c136de85de1c2abb6fc"}, {"code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>d3 Array of Tables Demo</title>\n  <!-- Author: Bo Ericsson, bo@boe.net -->\n  <link rel=stylesheet type=text/css href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/css/bootstrap.min.css\" media=\"all\">\n  <style>\n    body {\n      padding: 10px;\n      font-size: 12px;\n    }\n    .well {\n      padding-top: 0px;\n      padding-bottom: 0px;\n      width: 500px;\n    }\n    table {\n      font-size: 10px;\n      line-height: 10px;\n    }\n    td, th {\n      width: 33.3%;\n    }\n    label {\n      margin-bottom: 10px;\n    }\n  </style>\n<body>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js\"></script>\n<script>\n'use strict';\n\n\nvar header = d3.select(\"body\").append(\"div\").attr(\"class\", \"well\");\n\nheader.append(\"h3\").text(\"Vaccine Record\");\n\nvar taskLabel = header.append(\"label\")\n    .attr(\"id\", \"taskLabel\")\n    .html(\"&nbsp;\");\n\nvar currTask = 0;\nvar taskButton = header.append(\"button\")\n    .attr(\"class\", \"btn btn-primary\")\n    .style(\"margin-bottom\", \"20px\")\n    .style(\"width\", \"100%\")\n    .style(\"text-align\", \"left\")\n    .text(\"Start\")\n    .on(\"click\", function() {\n      this.blur();\n      \n      tasks[currTask]();\n      \n     currTask = ++currTask % tasks.length;\n    })\n\n\nvar tableDiv = d3.select(\"body\").append(\"div\").attr(\"id\", \"tableDiv1\");\n\n\nvar data;\nvar initialData = [\n  { table: \"At birth\", rows: [\n      { table: \"Hepatitis B #1\", row: \"Jan 1, 2016\", data: \"Jan 1,2016\", status:\"Administered\" }\n    ]\n  },\n  { table: \"Second Month\", rows: [\n      { table: \"DTAP #1\", row: \"March 8, 2016\", data: \"March8, 2016\", status:\"pending\" },\n      { table: \"PCV #1\", row: \"March8, 2016\", data: \"March8, 2016\", status:\"pending\" },\n      { table: \"IPV #1\", row: \"March8, 2016\", data: \"March8, 2016\", status:\"pending\" }\n    ]\n  },\n  { table: \"Fourth Month\", rows: [\n      { table: \"DTAP #2\", row: \"May 18, 2016\", data: \"May 18, 2016\", status:\"pending\" },\n      { table: \"PCV #2\", row: \"May 18, 2016\", data: \"May 18, 2016\", status:\"pending\" },\n      { table: \"IPV #2\", row: \"May 18, 2016\", data: \"May 18, 2016\", status:\"pending\" }\n    ]\n  },\n  { table: \"Sixth to Fifteenth Month\", rows: [\n      { table: \"DTAP #3\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"PCV #3\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"IPV #3\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"MMR #1\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"Varicella\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" },\n      { table: \"PCV #4\", row: \"July 18, 2016\", data: \"July 18, 2016\", status:\"pending\" }\n    ]\n  }\n]\n\n\nfunction task0() {\n  update([]);\n\n \n  taskButton.text(\"Vaccine Records\");\n}\n\nfunction task1() {\n  data = JSON.parse(JSON.stringify(initialData));\n  update(data);\n\n  taskLabel.text(\"Name: Panace panacea ID: 1234 DOB: Jan 1, 2016  Age: 1 month\");\n  taskButton.text(\"Back\");\n}\n\n\n\nvar tasks = [task0, task1,];\n\n\n\n  \n  \n  \n  \nfunction update(data) {\n\n \n  var divs = tableDiv.selectAll(\"div\")\n      \n      .data(function(d) {\n        return data;\n      }, function(d) { \n      return d.table \n      })\n\n  \n  divs.exit().remove();\n\n \n  var divsEnter = divs.enter().append(\"div\")\n      .attr(\"id\", function(d) { return d.table + \"Div\"; })\n      .attr(\"class\", \"well\")\n \n  divsEnter.append(\"h5\").text(function(d) { return d.table; });\n\n  \n  var tableEnter = divsEnter.append(\"table\")\n      .attr(\"id\", function(d) { return d.table })\n      .attr(\"class\", \"table table-condensed table-striped table-bordered\")\n\n  \n  tableEnter.append(\"thead\")\n    .append(\"tr\")\n      .selectAll(\"th\")\n      .data([\"VACCINE\", \"DUE DATE\", \"ADMINISTERED ON\", \"STATUS\"])\n    .enter().append(\"th\")\n      .text(function(d) { return d; })\n\n \n  tableEnter.append(\"tbody\");\n\n \n  var tr = divs.select(\"table\").select(\"tbody\").selectAll(\"tr\")\n      .data(function(d, i) { return d.rows; }, function(d) { return d.row }); // again we're using key function to disable by-index evaluation\n\n \n\n  \n  tr.enter().append(\"tr\");\n\n  \n  var td = tr.selectAll(\"td\")\n      .data(function(d, i) { return d3.values(d); });\n\n\n  td.enter().append(\"td\");\n\n  \n  td.text(function(d) { return d; })\n};\n\n</script>\n", "description": "D3 Dynamic Array of Tables", "created_at": "2016-04-27T22:11:48Z", "updated_at": "2016-04-27T22:11:48Z", "api": ["d3.select", "d3.values"], "readme": "## D3 Dynamic Array of Tables\n\nDemonstrates the the use of D3 to manage an array of tables. Via a button, the user will cycle through several steps which will mutate the underlying array of arrays, which at each step is fed to the table **update** function. For example, tables are added and removed from the array of tables, individual rows of tables are added and removed, and individual table cells are modified. The **update** function demonstrates the enter, exit and update patterns at the div/table level as well as at the table row level. \n\nFor **bl.ocks.org** users, the script should be viewed in its own window. See the script in action [here](http://bl.ocks.org/boeric/raw/e16ad218bc241dfd2d6e/)\n\nforked from <a href='http://bl.ocks.org/boeric/'>boeric</a>'s block: <a href='http://bl.ocks.org/boeric/e16ad218bc241dfd2d6e'>D3 Dynamic Array of Tables</a>\n\nforked from <a href='http://bl.ocks.org/devssunil/'>devssunil</a>'s block: <a href='http://bl.ocks.org/devssunil/5485fa28d3fdd422930b53ab330f96e3'>D3 Dynamic Array of Tables</a>\n\nforked from <a href='http://bl.ocks.org/devssunil/'>devssunil</a>'s block: <a href='http://bl.ocks.org/devssunil/ce488bb628eb9e4468521b001f027a55'>D3 Dynamic Array of Tables</a>", "uid": "nguyenbq_7988fb7f4cabdf119637e9cf7b186499"}, {"code": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <!-- Author: Bo Ericsson -->\n  <title>Real Time Chart</title>\n  <link rel=stylesheet type=text/css href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css\" media=\"all\">\n  <style>\n  .axis text {\n    font: 10px sans-serif;\n  }\n  .chartTitle {\n    font-size: 12px;\n    font-weight: bold;\n    text-anchor: middle; \n  }\n  .axis .title {\n    font-weight: bold;\n    text-anchor: middle;\n  }\n  .axis {\n    fill: none;\n    stroke: none;\n  }\n  .nav .area {\n    fill: lightgrey;\n    stroke-width: 0px;\n  }\n  .nav .line {\n    fill: none;\n    stroke: darkgrey;\n    stroke-width: 1px;\n  }\n  .viewport {\n    stroke: grey;\n    fill: black;\n    fill-opacity: 0.3;\n  }\n  .viewport .extent {\n    fill: green;\n  }\n  .well {\n    padding-top: 0px;\n    padding-bottom: 0px;\n  }\n  </style>\n<body>\n\n<div style=\"max-width: 600px; max-height: 400px; padding: 10px\">\n\n  <div id=\"viewDiv\"></div>\n\n</div>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js\"></script>\n<script src=\"realTimeChart.js\"></script>\n<script>\n'use strict';\n\n// mean and deviation for time interval\nvar meanMs = 1000, // milliseconds\n    dev = 150;\n\n// define time scale\nvar timeScale = d3.scale.linear()\n    .domain([300, 1700])\n    .range([300, 1700])\n    .clamp(true);\n\n// define value scale\nvar valueScale = d3.scale.linear()\n    .domain([0, 1])\n    .range([30, 95]);\n\n// generate initial data\nvar normal = d3.random.normal(1000, 150);\nvar currMs = new Date().getTime() - 300000 - 4000;\nvar data = d3.range(300).map(function(d, i, arr) {\n  var value = valueScale(Math.random()); // random data\n  //var value = Math.round((d % 60) / 60 * 95); // ramp data\n  var interval = Math.round(timeScale(normal()));\n  currMs += interval;\n  var time = new Date(currMs);\n  var obj = { interval: interval, value: value, time: time, ts: currMs }\n  return obj;\n})\n\n// create the real time chart\nvar chart = realTimeChart()\n    .width(1050)\n    .height(1500)\n    .barWidth(2)\n    .initialData(data);\n\nconsole.log(\"Version: \", chart.version);\nconsole.dir(\"Dir++\");\nconsole.trace();\nconsole.warn(\"warn\")\n\n// invoke the chart\nvar chartDiv = d3.select(\"#viewDiv\").append(\"div\")\n    .attr(\"id\", \"chartDiv\")\n    .call(chart);\n\n// alternative invocation\n//chart(chartDiv); \n\n\n// drive data into the chart roughly every second\n// in a normal use case, real time data would arrive through the network or some other mechanism\nvar d = 0;\nfunction dataGenerator() {\n\n  var timeout = Math.round(timeScale(normal()));\n\n  setTimeout(function() {\n\n    // create new data item\n    var now = new Date();\n    var obj = {\n      value: valueScale(Math.random()), // random data\n      //value: Math.round((d++ % 60) / 60 * 95), // ramp data\n      time: now,\n      color: \"red\",\n      ts: now.getTime(),\n      interval: timeout\n    };\n\n    // send the datum to the chart\n    chart.datum(obj);\n\n    // do forever\n    dataGenerator();\n\n  }, timeout);\n}\n\n// start the data generator\ndataGenerator();\n\n</script>\n", "description": "D3 Based Real Time Chart", "created_at": "2015-11-15T21:32:52Z", "updated_at": "2015-11-15T22:30:34Z", "api": ["d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.svg.line", "d3.svg.brush", "d3.random.normal", "d3.range", "d3.select"], "readme": "## D3 Based Real Time Chart\n\nThe real time chart is a resuable Javascript component that accepts real time data. The chart's time domain is moving with the passage of time, which means that any data placed in the chart eventually will age out and leave the chart. In addition to the main chart, the component also manages a \"focus\" window with a viewport (d3.brush) that can moved and sized to view an arbitrary portion of the time series data. \n\nThe component adheres to the pattern described in [Towards Reusable Chart](http://bost.ocks.org/mike/chart/). \n\nThe following options are currently supported:\n\n- **width** and **height** in pixels (Number)\n- **border** (Boolean)\n- **title**, **xTitle**, **yTitle** (String)\n- **barWidth** in pixels (Number)\n\nFuture options will include:\n\n- **Scale** domain of real time data (currently a domain of [0, 100] is assumed for the y scale)\n- Use of SVG **rects, circles, paths** etc. to represent data (in addition to bars)\n\nUse the component like so:\n\n```\n// create the real time chart\nvar chart = realTimeChart()\n    .title(\"Chart Title\")\n    .yTitle(\"Y Scale\")\n    .xTitle(\"X Scale\")\n    .border(true)\n    .width(600)\n    .height(290)\n    .barWidth(1)\n    .initialData(data);\n\n// invoke the chart\nvar chartDiv = d3.select(\"#viewDiv\").append(\"div\")\n    .attr(\"id\", \"chartDiv\")\n    .call(chart);\n\n// create new data item and inject into chart\nvar now = new Date();\nvar obj = {\n  value: 50\n  time: now,\n  color: \"red\",\n  ts: now.getTime(),\n  interval: timeout\n};\n\n// send the datum to the chart\nchart.datum(obj);\n\n```\n", "uid": "seemantk_3112c37d079d6fdce4be"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<head>\n\t<title>Quadtree - nearest neighbor</title>\n\t<style>\n\t\n\t.point {\n\t  fill: #999;\n\t  stroke: #fff;\n\t}\n\t\n\t.point.scanned {\n\t  fill: orange;\n\t  fill-opacity: 1;\n\t  stroke: brown;\n\t}\n\t\n\t.point.selected {\n\t  fill: red;\n\t  fill-opacity: 1;\n\t}\n\t\n\t.node {\n\t  fill: none;\n\t  stroke: #ccc;\n\t  shape-rendering: crispEdges;\n\t}\n\t  \n\t.brush .extent {\n\t  stroke: #fff;\n\t  fill-opacity: .125;\n\t  shape-rendering: crispEdges;\n\t}\n\t\n\t</style>\n</head>\n<body>\n\t<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\t\n\t<script>\n\tvar width = 960,\n\t    height = 500;\n\t\n\tvar data = d3.range(1000).map(function() {\n\t\treturn [Math.random() * width, Math.random() * height];\n\t});\n\t\n\tvar quadtree = d3.geom.quadtree()\n\t    \t.extent([[-1, -1], [width + 1, height + 1]])\n\t    \t(data);\n\t\n\tvar color = d3.scale.linear()\n\t    \t.domain([0, 8])  // max depth of quadtree\n\t    \t.range([\"#efe\", \"#060\"]);\n\t    \n\tvar svg = d3.select(\"body\").append(\"div\")\n\t\t.attr(\"width\", width)\n\t\t.attr(\"height\", height)\n\t\t.on(\"click\", function (d) {\n\t\tvar xy = d3.mouse(d3.selectAll('svg')[0][0]);\n\t\tsvg.selectAll(\"#pt\")\n\t\t    .attr(\"cx\", xy[0])\n\t\t    .attr(\"cy\", xy[1]);\n\t\tclicked();\n\t\t});\n\t    \n\tvar svg = d3.select(\"body\").append(\"svg\")\n\t\t.attr(\"width\", width)\n\t\t.attr(\"height\", height)\n\t\t.on(\"click\", function (d) {\n\t\tvar xy = d3.mouse(d3.selectAll('svg')[0][0]);\n\t\tsvg.selectAll(\"#pt\")\n\t\t    .attr(\"cx\", xy[0])\n\t\t    .attr(\"cy\", xy[1]);\n\t\tclicked();\n\t\t});\n\t\n\tvar rect = svg.selectAll(\".node\")\n\t\t\t.data(nodes(quadtree))\n\t\t.enter().append(\"rect\")\n\t\t\t.attr(\"class\", \"node\")\n\t\t\t.attr(\"x\", function(d) { return d.x1; })\n\t\t\t.attr(\"y\", function(d) { return d.y1; })\n\t\t\t.attr(\"width\", function(d) { return d.x2 - d.x1; })\n\t\t\t.attr(\"height\", function(d) { return d.y2 - d.y1; });\n\t\n\tvar point = svg.selectAll(\".point\")\n\t\t\t.data(data)\n\t\t.enter().append(\"circle\")\n\t\t\t.attr(\"class\", \"point\")\n\t\t\t.attr(\"cx\", function(d) { return d[0]; })\n\t\t\t.attr(\"cy\", function(d) { return d[1]; })\n\t\t\t.attr(\"r\", 3);\n\t\n\tsvg.append(\"circle\")\n\t\t.attr(\"id\", \"pt\")\n\t\t.attr(\"r\", 3)\n\t\t.attr(\"cx\", width/2)\n\t\t.attr(\"cy\", height/2)\n\t\t.style(\"fill\", \"yellow\");\n\t\n\t// PDS Collect a list of nodes to draw rectangles, adding extent and depth data\n\tfunction nodes(quadtree) {\n\t\tvar nodes = [];\n\t\tquadtree.depth = 0; // root\n\t\tquadtree.visit(function(node, x1, y1, x2, y2) {\n\t\t\tnode.x1 = x1;\n\t\t\tnode.y1 = y1;\n\t\t\tnode.x2 = x2;\n\t\t\tnode.y2 = y2;\n\t\t\tnodes.push(node);\n\t\t\tfor (var i=0; i<4; i++) {\n\t\t\t\tif (node.nodes[i]) node.nodes[i].depth = node.depth+1;\n\t\t\t}\n\t\t});\n\t\treturn nodes;\n\t}\n\t\n\t\n\t// calculate euclidean distance of two points with coordinates: a(ax, ay) and b(bx, by)\n\tfunction euclidDistance(ax, ay, bx, by){\n\t\treturn Math.sqrt(Math.pow(ax-bx, 2) + Math.pow(ay-by, 2));\n\t}\n\t\n\t// calculate mindist between searchpoint and rectangle\n\tfunction mindist(x, y, x1, y1, x2, y2){\n\t\tvar dx1 = x - x1, dx2 = x - x2, dy1 = y - y1, dy2 = y - y2;\n\t\t\n\t\tif (dx1*dx2 < 0) { // x is between x1 and x2\n\t\t\tif (dy1*dy2 < 0) { // (x,y) is inside the rectangle\n\t\t\t\treturn 0; // return 0 as point is in rect\n\t\t\t}\n\t\t\treturn Math.min(Math.abs(dy1),Math.abs(dy2));\n\t\t}\n\t\tif (dy1*dy2 < 0) { // y is between y1 and y2\n\t\t\t// we don't have to test for being inside the rectangle, it's already tested.\n\t\t\treturn Math.min(Math.abs(dx1),Math.abs(dx2));\n\t\t}\n\t\treturn Math.min( Math.min(euclidDistance(x,y,x1,y1),euclidDistance(x,y,x2,y2)), Math.min(euclidDistance(x,y,x1,y2),euclidDistance(x,y,x2,y1)) );\n\t}\n\t\n\t\n\t// Find the nodes within the specified rectangle.\n\tfunction knearest(bestqueue, resultqueue, x, y, k) {\n\t\t// sort children according to their mindist/dist to searchpoint\n\t\tbestqueue.sort(function(a, b){\n\t\t  // add minidst to nodes if not there already\n\t\t  \t[a, b].forEach(function(val, idx, array){\n\t\t  \t\tif(val.mindist == undefined){\n\t\t\t  \t\tval.scanned = true;\n\t\t\t  \t\tif(val.leaf){\n\t\t\t  \t\t\tval.point.scanned=true;\n\t\t\t  \t\t\tval.mindist = euclidDistance(x, y, val.x, val.y);\n\t\t\t  \t\t}else{\n\t\t\t  \t\t\tval.mindist = mindist(x, y, val.x1, val.y1, val.x2, val.y2);\n\t\t\t  \t\t}\n\t\t  \t\t}\n\t\t\t});\n\t\t  \treturn b.mindist - a.mindist;\n\t\t});\n\t\t\n\t\t// add nearest leafs if any\n\t\tfor (var i=bestqueue.length-1; i>=0; i--){\n\t\t\tvar elem = bestqueue[i];\n\t\t\tif(elem.leaf){\n\t\t\t\telem.point.selected = true;\n\t\t\t\tbestqueue.pop();\n\t\t\t\tresultqueue.push(elem);\n\t\t\t}else{\n\t\t\t  \tbreak;\n\t\t\t}\n\t\t\tif(resultqueue.length >=k){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// check if enough points found\n\t\tif(resultqueue.length >=k || bestqueue.length == 0){\n\t\t\t// return if k neighbors found\n\t\t\treturn;\n\t\t}else{\n\t\t\t// add child nodes to bestqueue and recurse\n\t\t\tvar vistitednode = bestqueue.pop();\n\t\t\tvistitednode.visited = true;\n\t\t\t// add nodes to queue\n\t\t\tvistitednode.nodes.forEach(function(val, idx, array){\n\t\t\t\tbestqueue.push(val);\n\t\t\t});\n\t\t\t// recursion\n\t\t\tknearest(bestqueue, resultqueue, x, y, k);\n\t\t}\n\t}\n\t\n\t\n\tfunction clicked() {\n\t\tpt = d3.selectAll('#pt');\n\t\tvar x = +pt.attr('cx'), y = +pt.attr('cy');\n\t\t\n\t\t// TODO these values should be stored seperately so that points don't have to be visited after each query\n\t\t// idea assign unique ids to quadtree nodes and have a separate mindist array\n\t\tpoint.each(function(d) { d.scanned = d.selected = false; d.mindist = undefined; });\n\t\trect.each(function(d) { d.visited = false;  d.mindist = undefined;});\n\t\t\n\t\t//get nearest neighbors\n\t\tvar bestqueue = new Array(quadtree);\n\t\tvar resultqueue = [];\n\t\tknearest(bestqueue, resultqueue, x, y, 10);\n\t\t\n\t\tpoint.classed(\"scanned\", function(d) { return d.scanned; });\n\t\tpoint.classed(\"selected\", function(d) { return d.selected; });\n\t\trect.style('fill', function(d) { return d.visited ? color(d.depth) : 'none'; });\n\t}\n\t\n\tclicked();\n\t\n\t</script>\n</body>\n</html>\n", "description": "k-nearest-neighbor search using D3 quadtrees", "created_at": "2014-01-30T14:20:16Z", "updated_at": "2015-10-28T21:02:11Z", "api": ["d3.range", "d3.geom.quadtree", "d3.scale.linear", "d3.select", "d3.mouse", "d3.selectAll"], "readme": "This example was inspired by patricksurry's\n[D3JS quadtree nearest neighbor algorithm](https://gist.github.com/patricksurry/6478178)\nand finds the k-nearest neighbors (shown red) of a new point (shown yellow) using D3's [Quadtrees](https://github.com/mbostock/d3/wiki/Quadtree-Geom).\nOrange points are visited but not selected.\nk is fixed to 10 for this demo.\n\nChoose a new point to classify by clicking on the diagram.\n\nThe algorithm is based on one very simple but effective incremental approach first proposed by Hjaltason and Samet in their [Ranking in Spatial Databases](http://dl.acm.org/citation.cfm?id=718930) in 1995.\n\nThis is the very first version of the implementation. I would appreciate feedback on how to improve the implementation.", "uid": "llb4ll_8709363"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-width: .5px;\n  stroke-opacity: .5;\n}\n\n.land {\n  fill: #222;\n}\n\n.boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 960;\n\n    \n\nvar projection = d3.geo.gnomonic()\n    .clipAngle(90 - 1e-3)\n    .scale(150)\n    .translate([width/2, height / 2])\n    .precision(.1)\n    // rotate([yaw, pitch, roll]) or long lat and roll\n    .rotate([100,90,-190])\n  //  .center([-240,20])\n\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar graticule = d3.geo.graticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\nd3.json(\"/mpmckenna8/raw/9965876/world-50m.json\", function(error, world) {\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n\n\n\n\n        d3.selectAll('path')\n        .transition()\n        .duration(5000)\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")scale(\"+.3 + \")translate(\" + -600 + \",\" + -500 + \")\")\n          .style(\"stroke-width\", 4 + \"px\")\n          .style(\"stroke\", \"pink\");\n\n          d3.selectAll('.land')\n            .transition()\n            .delay(6999)\n            .duration(6999)\n            .style(\"fill\",\"lawngreen\");\n\n        d3.selectAll('svg')\n          .on('click', function(){\n            console.log('flip should have changed');\n\n            flip = 1\n            d3.selectAll('path')\n            .transition()\n            .duration(1000)\n            //couldn't get this part to do anything fun like change the zoom to anythin back to 1, click to see\n           .attr(\"transform\", \"translate(\" - width / 2 + \",\" -height / 2 + \")scale(\"+4 +\")\")\n              .style(\"stroke-width\", 4 + \"px\")\n              .style(\"stroke\", \"orange\");\n          })\n\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\nd3.select('svg')\n  .style('background', 'green')\n  .transition()\n  .delay(4000)\n  .duration(3000)\n    .style('background', 'blue')\n\n\n\n\n\n\n</script>", "description": "Basic d3 Animations gnomic south pole", "created_at": "2014-06-06T05:55:07Z", "updated_at": "2015-08-29T14:02:17Z", "api": ["d3.geo.gnomonic", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.json", "d3.selectAll"], "readme": "Experimenting with transformations and d3 geo stuff in general.  I like the way the north pole ", "uid": "mpmckenna8_434839f120c552ad0048"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.bar:hover {\n  fill: brown;\n}\n\n.axis {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path {\n  display: none;\n}\n\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n// Adapted from http://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n\nvar randomColor = (function(){\n  var golden_ratio_conjugate = 0.618033988749895;\n  var h = Math.random();\n\n  var hslToRgb = function (h, s, l){\n      var r, g, b;\n\n      if(s == 0){\n          r = g = b = l; // achromatic\n      }else{\n          function hue2rgb(p, q, t){\n              if(t < 0) t += 1;\n              if(t > 1) t -= 1;\n              if(t < 1/6) return p + (q - p) * 6 * t;\n              if(t < 1/2) return q;\n              if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n              return p;\n          }\n\n          var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n          var p = 2 * l - q;\n          r = hue2rgb(p, q, h + 1/3);\n          g = hue2rgb(p, q, h);\n          b = hue2rgb(p, q, h - 1/3);\n      }\n\n      return '#'+Math.round(r * 255).toString(16)+Math.round(g * 255).toString(16)+Math.round(b * 255).toString(16);\n  };\n  \n  return function(){\n    h += golden_ratio_conjugate;\n    h %= 1;\n    return hslToRgb(h, 0.5, 0.60);\n  };\n})();\n</script>\n\n<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\ndata = [\n  {letter: \"A\", frequency: 0.08167},\n  {letter: \"B\", frequency: 0.01492},\n  {letter: \"C\", frequency: 0.02782},\n  {letter: \"D\", frequency: 0.04253},\n  {letter: \"E\", frequency: 0.12702},\n  {letter: \"F\", frequency: 0.02288},\n  {letter: \"G\", frequency: 0.02015},\n  {letter: \"H\", frequency: 0.06094},\n  {letter: \"I\", frequency: 0.06966},\n  {letter: \"J\", frequency: 0.00153},\n  {letter: \"K\", frequency: 0.00772},\n  {letter: \"L\", frequency: 0.04025},\n  {letter: \"M\", frequency: 0.02406},\n  {letter: \"N\", frequency: 0.06749},\n  {letter: \"O\", frequency: 0.07507},\n  {letter: \"P\", frequency: 0.01929},\n  {letter: \"Q\", frequency: 0.00095},\n  {letter: \"R\", frequency: 0.05987},\n  {letter: \"S\", frequency: 0.06327},\n  {letter: \"T\", frequency: 0.09056},\n  {letter: \"U\", frequency: 0.02758},\n  {letter: \"V\", frequency: 0.00978},\n  {letter: \"W\", frequency: 0.02360},\n  {letter: \"X\", frequency: 0.00150},\n  {letter: \"Y\", frequency: 0.01974},\n  {letter: \"Z\", frequency: 0.00074}\n];\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); })\n      .style({fill: randomColor});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>\n\n</body>\n</html>", "description": "D3 with random color generator", "created_at": "2014-06-10T04:27:16Z", "updated_at": "2015-08-29T14:02:25Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.max"], "readme": "", "uid": "jdarling_06019d16cb5fd6795edf"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n\n    <title>Collapsible Tree Example</title>\n\n    <style>\n\n\t.node circle {\n\t  fill: #fff;\n\t  stroke: steelblue;\n\t  stroke-width: 3px;\n\t}\n\n\t.node text { font: 12px sans-serif; }\n\n\t.link {\n\t  fill: none;\n\t  stroke: #ccc;\n\t  stroke-width: 2px;\n\t}\n\t\n    </style>\n\n  </head>\n\n  <body>\n\n<!-- load the d3.js library -->\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\t\n<script>\n\nvar treeData = [\n  {\n    \"name\": \"Top Level\",\n    \"parent\": \"null\",\n    \"children\": [\n      {\n        \"name\": \"Level 2: A\",\n        \"parent\": \"Top Level\",\n        \"children\": [\n          {\n            \"name\": \"Son of A\",\n            \"parent\": \"Level 2: A\"\n          },\n          {\n            \"name\": \"Daughter of A\",\n            \"parent\": \"Level 2: A\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Level 2: B\",\n        \"parent\": \"Top Level\"\n      }\n    ]\n  }\n];\n\n// ************** Generate the tree diagram\t *****************\nvar margin = {top: 40, right: 120, bottom: 20, left: 120},\n\twidth = 960 - margin.right - margin.left,\n\theight = 500 - margin.top - margin.bottom;\n\t\nvar i = 0;\n\nvar tree = d3.layout.tree()\n\t.size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n\t.projection(function(d) { return [d.x, d.y]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.right + margin.left)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nroot = treeData[0];\n  \nupdate(root);\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n\t  links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 100; });\n\n  // Declare the nodes\u2026\n  var node = svg.selectAll(\"g.node\")\n\t  .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter the nodes.\n  var nodeEnter = node.enter().append(\"g\")\n\t  .attr(\"class\", \"node\")\n\t  .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  nodeEnter.append(\"circle\")\n\t  .attr(\"r\", 10)\n\t  .style(\"fill\", \"#fff\");\n\n  nodeEnter.append(\"text\")\n\t  .attr(\"y\", function(d) { \n\t\t  return d.children || d._children ? -18 : 18; })\n\t  .attr(\"dy\", \".35em\")\n\t  .attr(\"text-anchor\", \"middle\")\n\t  .text(function(d) { return d.name; })\n\t  .style(\"fill-opacity\", 1);\n\n  // Declare the links\u2026\n  var link = svg.selectAll(\"path.link\")\n\t  .data(links, function(d) { return d.target.id; });\n\n  // Enter the links.\n  link.enter().insert(\"path\", \"g\")\n\t  .attr(\"class\", \"link\")\n\t  .attr(\"d\", diagonal);\n\n}\n\n</script>\n\t\n  </body>\n</html>\n", "description": "Simple vertical d3.js tree diagram ", "created_at": "2014-01-08T23:42:30Z", "updated_at": "2016-01-18T19:46:00Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select"], "readme": "This is a simple d3.js tree diagram, arranged so that the tree is vertical, as used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is derived from the Mike Bostock [Collapsible tree example](http://bl.ocks.org/mbostock/4339083) but it is a VERY cut down version without the ability to update (collapse).", "uid": "d3noob_8326869"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n \nbody { font: 12px Arial;}\n \npath { \n  stroke: steelblue;\n  stroke-width: 2;\n  fill: none;\n}\n \n.axis path,\n.axis line {\n\tfill: none;\n\tstroke: grey;\n\tstroke-width: 1;\n\tshape-rendering: crispEdges;\n}\n \n</style>\n<body>\n \n<!-- load the d3.js library -->\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n \n<script>\n \n// Set the dimensions of the canvas / graph\nvar\tmargin = {top: 30, right: 20, bottom: 30, left: 50},\n\twidth = 600 - margin.left - margin.right,\n\theight = 270 - margin.top - margin.bottom;\n \n// Parse the date / time\nvar\tparseDate = d3.time.format(\"%d-%b-%y\").parse;\n \n// Set the ranges\nvar\tx = d3.time.scale().range([0, width]);\nvar\ty = d3.scale.linear().range([height, 0]);\n \n// Define the axes\nvar\txAxis = d3.svg.axis().scale(x)\n\t.orient(\"bottom\").ticks(5);\n \nvar\tyAxis = d3.svg.axis().scale(y)\n\t.orient(\"left\").ticks(5);\n \n// Define the line\nvar\tvalueline = d3.svg.line()\n\t.x(function(d) { return x(d.date); })\n\t.y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar\tsvg = d3.select(\"body\")\n\t.append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t.append(\"g\")\n\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n\tdata.forEach(function(d) {\n\t\td.date = parseDate(d.date);\n\t\td.close = +d.close;\n\t});\n \n\t// Scale the range of the data\n\tx.domain(d3.extent(data, function(d) { return d.date; }));\n\ty.domain([0, d3.max(data, function(d) { return d.close; })]);\n \n\t// Add the valueline path.\n\tsvg.append(\"path\")\t\n\t\t.attr(\"class\", \"line\")\n\t\t.attr(\"d\", valueline(data));\n \n\t// Add the X Axis\n\tsvg.append(\"g\")\t\t\n\t\t.attr(\"class\", \"x axis\")\n\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t.call(xAxis);\n \n\t// Add the Y Axis\n\tsvg.append(\"g\")\t\t\n\t\t.attr(\"class\", \"y axis\")\n\t\t.call(yAxis);\n \n});\n \n</script>\n</body>", "description": "Simple line graph in d3.js", "created_at": "2012-12-30T19:02:34Z", "updated_at": "2016-04-25T20:47:55Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a simple line graph designed to allow investigation of aspects of using d3.js and is used as a teaching aid.\n\nIt is the baseline example graph used in the [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks) book.\n\nEdit: June 2014\n\nI am going through a process of updating the code resources for the book and the latest (but not particularly different) example of this graph is [here](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5).", "uid": "d3noob_4414436"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2.5px;\n  shape-rendering: crispEdges;\n}\n .axis line {\n  fill: none;\n  stroke: black;\n  stroke-width: 1.6px;\n}\n\n.axis .minor {\n  stroke: black;\n  stroke-width: 0.4px;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.scale.linear()\n    .domain([0, 1000])\n    .range([0, width]);\n  \n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"bottom\").ticks(5).tickSubdivide(1).tickSize(-60, -20, 0));\n  \n  svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(d3.svg.axis().scale(x).orient(\"top\").ticks(5).tickSubdivide(10).tickSize(-60, -30, 0));\n  \n\n</script>", "description": "d3.js major minor tick style 3", "created_at": "2016-02-18T16:23:42Z", "updated_at": "2016-02-18T17:14:02Z", "api": ["d3.scale.linear", "d3.select", "d3.svg.axis"], "readme": "\n\nforked from <a href='http://bl.ocks.org/vjpgo/'>vjpgo</a>'s block: <a href='http://bl.ocks.org/vjpgo/4689130'>d3.js major minor tick style 3</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/60e84ea5cdffa49356e4'>d3.js major minor tick style 3</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/384dd445a6a7ae9f6086'>d3.js major minor tick style 3</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/4384949715de645a77ef'>d3.js major minor tick style 3</a>", "uid": "ashtonburg_40448d691c1cc22dd00b"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n \n.axis text {\n  font: 10px sans-serif;\n}\n \n.axis path {\n  fill: none;\n  stroke: #000;\n  stroke-width: 2.5px;\n  shape-rendering: crispEdges;\n}\n .axis line {\n  fill: none;\n  stroke: green;\n  stroke-width: 1.6px;\n}\n\n.axis .minor {\n  stroke: red;\n  stroke-width: 0.4px;\n}\n  \n</style>\n<body>\n<script src=\"http://d3js.org/d3.v2.min.js?2.10.0\"></script>\n<script>\n \nvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n    width = 1000 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n \nvar x = d3.scale.linear()\n    .domain([0,6000])\n    .range([0, width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickValues(x.domain().filter(function(i) { return (i % 2 ==0); }))\n    .orient(\"bottom\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \n  svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .call(xAxis);\n\n \n</script>", "description": "d3.js major minor tick style 3", "created_at": "2016-02-18T17:10:13Z", "updated_at": "2016-02-18T17:10:14Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.select"], "readme": "\n\nforked from <a href='http://bl.ocks.org/vjpgo/'>vjpgo</a>'s block: <a href='http://bl.ocks.org/vjpgo/4689130'>d3.js major minor tick style 3</a>", "uid": "zaccagbj_dd67a952700b2f2dcf89"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n    circle {\n      opacity: 0.5;\n      fill: yellow\n        ;\n    }\n  </style>\n</head>\n\n<body> \n  <svg>\n\t</svg>\n\n  <script>\n    var width = 960;\n    var height = 500;\n\n    var svg = d3.select('svg');\n    \n    for(var i = 0; i < 80; i++) {\n      span = Math.random() * width;\n      \n      var data = {\n        x: Math.random() * span,\n      \ty: Math.random() * height,\n      \tradius: 2,\n        span: span\n      };\n      \n      // each cicle gets a different span value\n      svg.append('circle')\n      // datum bind a closure of the current variables.\n      \t\t.datum(data);\n    }\n    \n    // new value for width doesn't affect bound data\n    width = 2000000;\n    \n    // the last value from the for loop\n    console.log(data);\n    \n    // mutate the circles' visual appearance\n    svg.selectAll('circle')\n      \t.attr('cx', function(jon) {\n      \t\tconsole.log(jon);\n      \t\treturn jon.x;\n    \t\t})\n      \t.attr('cy', function(d) {\n      \t\treturn d.y;\n    \t\t})\n      \t.attr('r', function(d) {\n      \t\treturn d.radius;\n    \t\t});\n    \n    console.log(d3.selectAll('circle'));\n  </script>\n</body>\n", "description": "Foundations of D3: Data Binding Scope", "created_at": "2016-02-26T03:26:04Z", "updated_at": "2016-02-26T03:26:04Z", "api": ["d3.select", "d3.selectAll"], "readme": "## A Lesson in Binding Data\n\nIn an effort incrementally introduce complexity, data is bound one `datum` at a time with a `for` loop to blend the **declarative/functional** paradigm of D3 and the **imperative/procedural** paradigm of standard Javascript.\n\nIn this example we can see how D3's data binding functions (`data()` and `datum()`) create a closure encapsulating the state of variables at the time the data is bound.\n\n---\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/Jay-Oh-eN/'>Jay-Oh-eN</a>'s block: <a href='http://bl.ocks.org/Jay-Oh-eN/522d3842f27e2581f0d9'>Foundations of D3: Data Binding Scope</a>", "uid": "margeigh_9d0251925a6bf6409533"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width: 100%; height: 100%; }\n    circle {\n      opacity: 0.5;\n      fill: yellow\n        \n        ;\n    }\n       \n  </style>\n</head>\n\n<body> \n  <svg>\n\t</svg>\n\n  <script>\n    var width = 960;\n    var height = 500;\n\n    var svg = d3.select('svg');\n    \n    for(var i = 0; i < 80; i++) {\n      span = Math.random() * width;\n      \n      var data = {\n        x: Math.random() * span,\n      \ty: Math.random() * height,\n      \tradius: 2,\n        span: span\n      };\n      \n      // each cicle gets a different span value\n      svg.append('circle')\n      \n      // datum bind a closure of the current variables.\n      \t\t.datum(data);\n    }\n    \n    // new value for width doesn't affect bound data\n    width = 2000000;\n    \n    // the last value from the for loop\n    console.log(data);\n    \n    // mutate the circles' visual appearance\n    svg.select('circle')\n      \t.attr('cx', function(jon) {\n      \t\tconsole.log(jon);\n      \t\treturn jon.x;\n    \t\t})\n      \t.attr('cy', function(d) {\n      \t\treturn d.y;\n    \t\t})\n      \t.attr('r', function(d) {\n      \t\treturn d.radius;\n    \t\t})\n    \n    console.log(d3.selectAll('circle'));\n  </script>\n</body>\n", "description": "Foundations of D3: Data Binding Scope", "created_at": "2016-02-26T03:41:33Z", "updated_at": "2016-02-26T03:41:33Z", "api": ["d3.select", "d3.selectAll"], "readme": "## A Lesson in Binding Data\n\nIn an effort incrementally introduce complexity, data is bound one `datum` at a time with a `for` loop to blend the **declarative/functional** paradigm of D3 and the **imperative/procedural** paradigm of standard Javascript.\n\nIn this example we can see how D3's data binding functions (`data()` and `datum()`) create a closure encapsulating the state of variables at the time the data is bound.\n\n---\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/Jay-Oh-eN/'>Jay-Oh-eN</a>'s block: <a href='http://bl.ocks.org/Jay-Oh-eN/522d3842f27e2581f0d9'>Foundations of D3: Data Binding Scope</a>\n\nforked from <a href='http://bl.ocks.org/margeigh/'>margeigh</a>'s block: <a href='http://bl.ocks.org/margeigh/9d0251925a6bf6409533'>Foundations of D3: Data Binding Scope</a>\n\nforked from <a href='http://bl.ocks.org/margeigh/'>margeigh</a>'s block: <a href='http://bl.ocks.org/margeigh/201b1e8e5a25dfcf76d4'>Foundations of D3: Data Binding Scope</a>\n\nforked from <a href='http://bl.ocks.org/margeigh/'>margeigh</a>'s block: <a href='http://bl.ocks.org/margeigh/26b6602160cd14c7e143'>Foundations of D3: Data Binding Scope</a>", "uid": "margeigh_5cc8033ab729fbd9a4c9"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>D3 nest examples</title>\n    <script src=\"http://d3js.org/d3.v2.js\"></script>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"http://gerhobbelt.github.com/bl.ocks.org-hack/fixit.js\" ></script>\n    <link href='http://fonts.googleapis.com/css?family=Tienne' rel='stylesheet' type='text/css'>\n\n    <style>\n        body {\n            font-family: 'Tienne', serif;\n            font-size: 12px;\n        }\n    </style>\n\n</head>\n<body>\n<script>\nfix_blocksorg().adjust_gist_iframe(0, \"4300px\");\n</script>\n<div style=\"width: 960px;\">\n\n<h1>D3 Nest Tutorial and examples</h1>\n<p>Here is my learning process for getting to grips with nest.  Discovered the d3 tests half way through which were a great help: <a href=\"https://github.com/mbostock/d3/blob/master/test/core/nest-test.js\">tests</a></p><h2>Simple one level nest</h2>\n<p>In Bl.ocks.org, click on \"Open in a New Window\" (bottom right) to view all the examples</p>\n<p>Group by status</p>\n<code>var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; })<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex1\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Simple two level nest</h2>\n<p>Group by status then priority</p>\n<code>var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; })<br />\n    .key(function(d) { return d.priority; })<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex2\" rows=\"15\" cols=\"90\"></textarea>\n\n\n<h2>Use rollup to count leaves</h2>\n<p>The leaf level is replaced by a value at the parent level</p>\n<code>var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; })<br />\n    .key(function(d) { return d.priority; })<br />\n    .rollup(function(leaves) { return leaves.length; })<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex3\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Rollup does sums as well</h2>\n<p>Can't have two rollups, but can return an object/array</p>\n<code>var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; })<br />\n    .key(function(d) { return d.priority; })<br />\n    .rollup(function(leaves) {\n        return {\"length\": leaves.length,\n        \"total_time\": d3.sum(leaves, function(d) {return parseFloat(d.time);})} })<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex4\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Rollup everything to get a grand total of number of lines</h2>\n<p>No key</p>\n<code>var nested_data = d3.nest()<br />\n    .rollup(function(leaves) { return leaves.length; })<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex9\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Sorting</h2>\n<p>Each level can be sorted by key - a simple ascending or descending...</p>\n<code>var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; }).sortKeys(d3.ascending)<br />\n    .key(function(d) { return d.priority; }).sortKeys(function(d) { return )<br />\n    .rollup(function(leaves) { return leaves.length; })<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex5\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Sorting - custom order</h2>\n<p>Status, fortuitously, can be sorted in straing ascending order, but Priority requires a custom order.  Create an list in the order you want and use indexOf to create the order comparaitor function.</p>\n<code>\n    var priority_order = ['MUST', \"SHOULD\", 'COULD', 'WISH'];<br />\n    var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; }).sortKeys(d3.ascending)<br />\n    .key(function(d) { return d.priority; }).sortKeys(function(a,b) { return priority_order.indexOf(a) - priority_order.indexOf(b); })<br />\n    .rollup(function(leaves) { return leaves.length; })<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex6\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Sorting - sort the leaves as well</h2>\n<p>Use sortValue to sort the leaves - sort by time with smallest first</p>\n<code>\n    var priority_order = ['MUST', \"SHOULD\", 'COULD', 'WISH'];<br />\n    var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; }).sortKeys(d3.ascending)<br />\n    .key(function(d) { return d.priority; }).sortKeys(function(a,b) { return priority_order.indexOf(a) - priority_order.indexOf(b); })<br />\n    .sortValues(function(a,b) { return parseFloat(a.time) - parseFloat(b.time); } }<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex7\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Sorting - sort the leaves as well</h2>\n<p>Use sortValue to sort the leaves - sort by person this time.</p>\n<code>\n    var priority_order = ['MUST', \"SHOULD\", 'COULD', 'WISH'];<br />\n    var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; }).sortKeys(d3.ascending)<br />\n    .key(function(d) { return d.priority; }).sortKeys(function(a,b) { return priority_order.indexOf(a) - priority_order.indexOf(b); })<br />\n    .sortValues(function(a,b) { return ((a.who < b.who)<br />\n    ?  -1<br />\n    :  1);<br />\n    return 0;} )<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex8\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Populate a Select list from csv data</h2>\n<p>Use nest to get a unique list of people then create a select from it.</p>\n<code>\n    var nested_data = d3.nest()<br />\n    .key(function(d) { return d.who}).sortKeys(d3.ascending)<br />\n    .rollup(function(leaves) { return leaves.length; })<br />\n    .entries(csv_data);<br />\n    <br />\n    var list = d3.select(\"#ex10\").append(\"select\")<br />\n    <br />\n    list.selectAll(\"option\")<br />\n    .data(nested_data)<br />\n    .enter()<br />\n    .append(\"option\")<br />\n    .attr(\"value\", function(d) {return d.key;})<br />\n    .text(function(d) {<br />\n    return d.key; });<br />\n    <br />\n</code>\n<div id=\"ex10\">\n\n</div>\n\n\n<script>\n    d3.csv(\"./data.csv\", function(csv_data){\n\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; })\n                .entries(csv_data);\n\n\n        $(\"#ex1\").html(JSON.stringify(nested_data, null, 3));\n\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; })\n                .key(function(d) { return d.priority; })\n                .entries(csv_data);\n\n\n        $(\"#ex2\").html(JSON.stringify(nested_data, null, 3));\n\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; })\n                .key(function(d) { return d.priority; })\n                .rollup(function(leaves) { return leaves.length; })\n                .entries(csv_data);\n\n\n        $(\"#ex3\").html(JSON.stringify(nested_data, null, 3));\n\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; })\n                .key(function(d) { return d.priority; })\n                .rollup(function(leaves) {\n                    return {\"length\": leaves.length,\n                        \"total_time\": d3.sum(leaves, function(d) {return parseFloat(d.time);})} })\n                .entries(csv_data);\n\n\n        $(\"#ex4\").html(JSON.stringify(nested_data, null, 3));\n\n\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; }).sortKeys(d3.ascending)\n                .key(function(d) { return d.priority; }).sortKeys(d3.descending)\n                .rollup(function(leaves) { return leaves.length; })\n                .entries(csv_data);\n\n\n        $(\"#ex5\").html(JSON.stringify(nested_data, null, 3));\n\n        var priority_order = ['MUST', \"SHOULD\", 'COULD', 'WISH'];\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; }).sortKeys(d3.ascending)\n                .key(function(d) { return d.priority; }).sortKeys(function(a,b) { return priority_order.indexOf(a) - priority_order.indexOf(b); })\n                .rollup(function(leaves) { return leaves.length; })\n                .entries(csv_data);\n\n\n        $(\"#ex6\").html(JSON.stringify(nested_data, null, 3));\n\n        var priority_order = ['MUST', \"SHOULD\", 'COULD', 'WISH'];\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; }).sortKeys(d3.ascending)\n                .key(function(d) { return d.priority; }).sortKeys(function(a,b) { return priority_order.indexOf(a) - priority_order.indexOf(b); })\n                .sortValues(function(a,b) { return parseFloat(a.time) - parseFloat(b.time); } )\n                .entries(csv_data);\n\n\n        $(\"#ex7\").html(JSON.stringify(nested_data, null, 3));\n\n        var priority_order = ['MUST', \"SHOULD\", 'COULD', 'WISH'];\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; }).sortKeys(d3.ascending)\n                .key(function(d) { return d.priority; }).sortKeys(function(a,b) { return priority_order.indexOf(a) - priority_order.indexOf(b); })\n                .sortValues(function(a,b) { return ((a.who < b.who)\n                    ?  -1\n                    :  1);\n                    return 0;} )\n                .entries(csv_data);\n\n\n        $(\"#ex8\").html(JSON.stringify(nested_data, null, 3));\n\n        var nested_data = d3.nest()\n                .rollup(function(leaves) { return leaves.length; })\n                .entries(csv_data);\n\n\n        $(\"#ex9\").html(JSON.stringify(nested_data, null, 3));\n\n        var nested_data = d3.nest()\n                .key(function(d) { return d.who}).sortKeys(d3.ascending)\n                .rollup(function(leaves) { return leaves.length; })\n                .entries(csv_data);\n\n        var list = d3.select(\"#ex10\").append(\"select\")\n\n        list.selectAll(\"option\")\n                .data(nested_data)\n                .enter()\n                .append(\"option\")\n                .attr(\"value\", function(d) {return d.key;})\n                .text(function(d) {\n                    return d.key; });\n    });\n\n\n\n</script>\n</div>\n</body>\n</html>", "description": "D3 using nest on csv data", "created_at": "2012-09-11T01:23:13Z", "updated_at": "2015-10-10T13:08:03Z", "api": ["d3.nest", "d3.sum", "d3.select", "d3.csv"], "readme": "Lots of examples of using d3.nest function\n\nSee it running at [http://bl.ocks.org/3695277] - original at [http://bl.ocks.org/3176159]\n\nDocumentation: [https://github.com/mbostock/d3/wiki/Arrays]", "uid": "GerHobbelt_3695277"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\ntd, th {\n    padding: 1px 4px;\n}\n\n</style>\n<body>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n\t.x(function(d) { return x(d.date1); })    //  <= Change to date1\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n\t\td.date1 = parseDate(d.date);    //  <= Change to date1\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n\tx.domain(d3.extent(data, function(d) { return d.date1; }));//<=date1\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n// The table generation function\nfunction tabulate(data, columns) {\n    var table = d3.select(\"body\").append(\"table\")\n            .attr(\"style\", \"margin-left: 250px\"),\n        thead = table.append(\"thead\"),\n        tbody = table.append(\"tbody\");\n\n    // append the header row\n    thead.append(\"tr\")\n        .selectAll(\"th\")\n        .data(columns)\n        .enter()\n        .append(\"th\")\n            .text(function(column) { return column; });\n\n    // create a row for each object in the data\n    var rows = tbody.selectAll(\"tr\")\n        .data(data)\n        .enter()\n        .append(\"tr\");\n\n    // create a cell in each row for each column\n    var cells = rows.selectAll(\"td\")\n        .data(function(row) {\n            return columns.map(function(column) {\n                return {column: column, value: row[column]};\n            });\n        })\n        .enter()\n        .append(\"td\")\n        .attr(\"style\", \"font-family: Courier\") // sets the font style\n            .html(function(d) { return d.value; });\n    \n    return table;\n}\n\n// render the table\n var peopleTable = tabulate(data, [\"date\", \"close\"]);\n \n\n});\n\n</script>\n</body>\n", "description": "Simple graph and table using d3.js", "created_at": "2014-06-22T01:03:53Z", "updated_at": "2015-08-29T14:02:52Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple d3.js graph](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt demonstrates the generation of an html table containing graphed data using d3.js. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_473f0cf66196a008cf99"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\nbody {\n  margin: 0;\n  padding: 0;\n  font: 12px sans-serif;\n}\n\npath,\nline {\n  shape-rendering: crispEdges;\n}\n\ndiv,\nsvg,\ncanvas {\n  position: absolute;\n}\n\nsvg {\n  pointer-events: none;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 1px;\n}\n\ncircle {\n  stroke-width: 4px;\n  stroke: #000;\n  fill: none;\n}\n\n.hidden {\n  display: none;\n}\n\n</style>\n<body>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.17/d3.min.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 10, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \" \" + margin.top + \")\");\n\nvar factory = d3.geom.quadtree()\n  .extent([\n    [0, 0],\n    [width, height]\n  ]);\n\nvar x = d3.scale.linear()\n  .range([0, width]);\n\nvar y = d3.scale.linear()\n  .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n  .scale(x)\n  .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n  .scale(y)\n  .orient(\"left\");\n\nvar xg = svg.append(\"g\")\n  .attr(\"class\", \"x axis\")\n  .attr(\"transform\", \"translate(0,\" + height + \")\");\n\nvar yg = svg.append(\"g\")\n  .attr(\"class\", \"y axis\");\n\nvar chartArea = d3.select(\"body\").append(\"div\")\n  .style(\"left\", margin.left + \"px\")\n  .style(\"top\", margin.top + \"px\");\n\nvar canvas = chartArea.append(\"canvas\")\n  .attr(\"width\", width)\n  .attr(\"height\", height);\n\nvar context = canvas.node().getContext(\"2d\");\n\ncontext.fillStyle = \"#f0f\";\n\n// Layer on top of canvas, example of selection details\nvar highlight = chartArea.append(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height)\n    .append(\"circle\")\n      .attr(\"r\", 7)\n      .classed(\"hidden\", true);\n\nredraw();\n\nfunction redraw() {\n\n  // Randomize the scale\n  var scale = 1 + Math.floor(Math.random() * 10);\n\n  // Redraw axes\n  x.domain([0, scale]);\n  y.domain([0, scale]);\n  xg.call(xAxis);\n  yg.call(yAxis);\n\n  var points = randomPoints(scale);\n\n  var tree = factory(points);\n\n  // Update canvas\n  context.clearRect(0, 0, width, height);\n\n  points.forEach(function(p,i){\n\n    context.beginPath();\n    context.arc(x(p[0]), y(p[1]), 5, 0, 2 * Math.PI);\n    context.fill();\n\n  });\n\n  canvas.on(\"mousemove\",function(){\n\n    var mouse = d3.mouse(this),\n        closest = tree.find([x.invert(mouse[0]), y.invert(mouse[1])]);\n\n    highlight.attr(\"cx\", x(closest[0]))\n      .attr(\"cy\", y(closest[1]));\n\n  });\n\n  canvas.on(\"mouseover\",function(){\n    highlight.classed(\"hidden\", false);\n  });\n\n  canvas.on(\"mouseout\",function(){\n    highlight.classed(\"hidden\", true);\n  });\n\n}\n\nfunction randomPoints(scale) {\n\n  // Get points\n  return d3.range(1000).map(function(d){\n\n    return [\n      Math.random() * scale,\n      Math.random() * scale\n    ];\n\n  });\n\n}\n\n</script>\n", "description": "Canvas scatterplot with quadtree", "created_at": "2016-05-19T15:48:28Z", "updated_at": "2016-05-20T11:36:32Z", "api": ["d3.select", "d3.geom.quadtree", "d3.scale.linear", "d3.svg.axis", "d3.mouse", "d3.range"], "readme": "Canvas scatterplot w/ quadtree for point picking on hover, per: [https://twitter.com/mbostock/status/733317794419212288](https://twitter.com/mbostock/status/733317794419212288)\n\nIf you don't want the full Voronoi effect because your chart has some big dead zones, you could add a distance threshold and only trigger the highlighting when the nearest point is within that distance.\n\nIf you need behavior that more closely mimics mouse/touch because your shapes have significant dimensions or their layer order matters, you could try [colorpicking](https://bl.ocks.org/veltman/f539d97e922b918d47e2b2d1a8bcd2dd) instead.\n", "uid": "veltman_1b43f61887e89c371f1c8c73341540a3"}, {"code": "<!DOCTYPE html>\n<head>\n<meta charset=\"utf-8\">\n<title>Issues Ratings</title>\n<style>\n\nbody {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line, \n.axis1 path,\n.axis1 line {\n  fill: none;\n  stroke: #E6E7E8;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path, .x.axis1 path {\n  display: none;\n}\n\n.line {\n  fill: none;\n  stroke-width: 1.5px;\n}\n\n.legend-box {\n  cursor: pointer;  \n}\n\n#mouse-tracker {\n  stroke: #E6E7E8;\n  stroke-width: 1px;\n}\n\n.hover-line { \n  stroke: #E6E7E8;\n  fill: none;\n  stroke-width: 1px;\n  left: 10px;\n  shape-rendering: crispEdges;\n  opacity: 1e-6;\n}\n\n.hover-text {\n  stroke: none;\n  font-size: 30px;\n  font-weight: bold;\n  fill: #000000;\n}\n\n.tooltip {\n  font-weight: normal;\n}\n\n.brush .extent {\n  stroke: #FFF;\n  shape-rendering: crispEdges;\n}\n\n</style>\n</head>\n<body>\n<script src=\"http://d3js.org/d3.v3.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 200, bottom: 100, left: 50},\n    margin2 = { top: 430, right: 10, bottom: 20, left: 40 },\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    height2 = 500 - margin2.top - margin2.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\nvar bisectDate = d3.bisector(function(d) { return d.date; }).left;\n\nvar xScale = d3.time.scale()\n    .range([0, width]),\n\n    xScale2 = d3.time.scale()\n    .range([0, width]); // Duplicate xScale for brushing ref later\n\nvar yScale = d3.scale.linear()\n    .range([height, 0]);\n\n// 40 Custom DDV colors \nvar color = d3.scale.ordinal().range([\"#48A36D\",  \"#56AE7C\",  \"#64B98C\", \"#72C39B\", \"#80CEAA\", \"#80CCB3\", \"#7FC9BD\", \"#7FC7C6\", \"#7EC4CF\", \"#7FBBCF\", \"#7FB1CF\", \"#80A8CE\", \"#809ECE\", \"#8897CE\", \"#8F90CD\", \"#9788CD\", \"#9E81CC\", \"#AA81C5\", \"#B681BE\", \"#C280B7\", \"#CE80B0\", \"#D3779F\", \"#D76D8F\", \"#DC647E\", \"#E05A6D\", \"#E16167\", \"#E26962\", \"#E2705C\", \"#E37756\", \"#E38457\", \"#E39158\", \"#E29D58\", \"#E2AA59\", \"#E0B15B\", \"#DFB95C\", \"#DDC05E\", \"#DBC75F\", \"#E3CF6D\", \"#EAD67C\", \"#F2DE8A\"]);  \n\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\"),\n\n    xAxis2 = d3.svg.axis() // xAxis for brush slider\n    .scale(xScale2)\n    .orient(\"bottom\");    \n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\");  \n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return xScale(d.date); })\n    .y(function(d) { return yScale(d.rating); })\n    .defined(function(d) { return d.rating; });  // Hiding line value defaults of 0 for missing data\n\nvar maxY; // Defined later to update yAxis\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom) //height + margin.top + margin.bottom\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Create invisible rect for mouse tracking\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)                                    \n    .attr(\"x\", 0) \n    .attr(\"y\", 0)\n    .attr(\"id\", \"mouse-tracker\")\n    .style(\"fill\", \"white\"); \n\n//for slider part-----------------------------------------------------------------------------------\n  \nvar context = svg.append(\"g\") // Brushing context box container\n    .attr(\"transform\", \"translate(\" + 0 + \",\" + 410 + \")\")\n    .attr(\"class\", \"context\");\n\n//append clip path for lines plotted, hiding those part out of bounds\nsvg.append(\"defs\")\n  .append(\"clipPath\") \n    .attr(\"id\", \"clip\")\n    .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height); \n\n//end slider part----------------------------------------------------------------------------------- \n\nd3.tsv(\"data.tsv\", function(error, data) { \n  color.domain(d3.keys(data[0]).filter(function(key) { // Set the domain of the color ordinal scale to be all the csv headers except \"date\", matching a color to an issue\n    return key !== \"date\"; \n  }));\n\n  data.forEach(function(d) { // Make every date in the csv data a javascript date object format\n    d.date = parseDate(d.date);\n  });\n\n  var categories = color.domain().map(function(name) { // Nest the data into an array of objects with new keys\n\n    return {\n      name: name, // \"name\": the csv headers except date\n      values: data.map(function(d) { // \"values\": which has an array of the dates and ratings\n        return {\n          date: d.date, \n          rating: +(d[name]),\n          };\n      }),\n      visible: (name === \"Unemployment\" ? true : false) // \"visible\": all false except for economy which is true.\n    };\n  });\n\n  xScale.domain(d3.extent(data, function(d) { return d.date; })); // extent = highest and lowest points, domain is data, range is bouding box\n\n  yScale.domain([0, 100\n    //d3.max(categories, function(c) { return d3.max(c.values, function(v) { return v.rating; }); })\n  ]);\n\n  xScale2.domain(xScale.domain()); // Setting a duplicate xdomain for brushing reference later\n \n //for slider part-----------------------------------------------------------------------------------\n\n var brush = d3.svg.brush()//for slider bar at the bottom\n    .x(xScale2) \n    .on(\"brush\", brushed);\n\n  context.append(\"g\") // Create brushing xAxis\n      .attr(\"class\", \"x axis1\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  var contextArea = d3.svg.area() // Set attributes for area chart in brushing context graph\n    .interpolate(\"monotone\")\n    .x(function(d) { return xScale2(d.date); }) // x is scaled to xScale2\n    .y0(height2) // Bottom line begins at height2 (area chart not inverted) \n    .y1(0); // Top line of area, 0 (area chart not inverted)\n\n  //plot the rect as the bar at the bottom\n  context.append(\"path\") // Path is created using svg.area details\n    .attr(\"class\", \"area\")\n    .attr(\"d\", contextArea(categories[0].values)) // pass first categories data .values to area path generator \n    .attr(\"fill\", \"#F1F1F2\");\n    \n  //append the brush for the selection of subsection  \n  context.append(\"g\")\n    .attr(\"class\", \"x brush\")\n    .call(brush)\n    .selectAll(\"rect\")\n    .attr(\"height\", height2) // Make brush rects same height \n      .attr(\"fill\", \"#E6E7E8\");  \n  //end slider part-----------------------------------------------------------------------------------\n\n  // draw line graph\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"x\", -10)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Issues Rating\");\n\n  var issue = svg.selectAll(\".issue\")\n      .data(categories) // Select nested data and append to new svg group elements\n    .enter().append(\"g\")\n      .attr(\"class\", \"issue\");   \n\n  issue.append(\"path\")\n      .attr(\"class\", \"line\")\n      .style(\"pointer-events\", \"none\") // Stop line interferring with cursor\n      .attr(\"id\", function(d) {\n        return \"line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"); // Give line id of line-(insert issue name, with any spaces replaced with no spaces)\n      })\n      .attr(\"d\", function(d) { \n        return d.visible ? line(d.values) : null; // If array key \"visible\" = true then draw line, if not then don't \n      })\n      .attr(\"clip-path\", \"url(#clip)\")//use clip path to make irrelevant part invisible\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  // draw legend\n  var legendSpace = 450 / categories.length; // 450/number of issues (ex. 40)    \n\n  issue.append(\"rect\")\n      .attr(\"width\", 10)\n      .attr(\"height\", 10)                                    \n      .attr(\"x\", width + (margin.right/3) - 15) \n      .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace) - 8; })  // spacing\n      .attr(\"fill\",function(d) {\n        return d.visible ? color(d.name) : \"#F1F1F2\"; // If array key \"visible\" = true then color rect, if not then make it grey \n      })\n      .attr(\"class\", \"legend-box\")\n\n      .on(\"click\", function(d){ // On click make d.visible \n        d.visible = !d.visible; // If array key for this data selection is \"visible\" = true then make it false, if false then make it true\n\n        maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n        yScale.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n        svg.select(\".y.axis\")\n          .transition()\n          .call(yAxis);   \n\n        issue.select(\"path\")\n          .transition()\n          .attr(\"d\", function(d){\n            return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n          })\n\n        issue.select(\"rect\")\n          .transition()\n          .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\";\n        });\n      })\n\n      .on(\"mouseover\", function(d){\n\n        d3.select(this)\n          .transition()\n          .attr(\"fill\", function(d) { return color(d.name); });\n\n        d3.select(\"#line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"))\n          .transition()\n          .style(\"stroke-width\", 2.5);  \n      })\n\n      .on(\"mouseout\", function(d){\n\n        d3.select(this)\n          .transition()\n          .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\";});\n\n        d3.select(\"#line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"))\n          .transition()\n          .style(\"stroke-width\", 1.5);\n      })\n      \n  issue.append(\"text\")\n      .attr(\"x\", width + (margin.right/3)) \n      .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace); })  // (return (11.25/2 =) 5.625) + i * (5.625) \n      .text(function(d) { return d.name; }); \n\n  // Hover line \n  var hoverLineGroup = svg.append(\"g\") \n            .attr(\"class\", \"hover-line\");\n\n  var hoverLine = hoverLineGroup // Create line with basic attributes\n        .append(\"line\")\n            .attr(\"id\", \"hover-line\")\n            .attr(\"x1\", 10).attr(\"x2\", 10) \n            .attr(\"y1\", 0).attr(\"y2\", height + 10)\n            .style(\"pointer-events\", \"none\") // Stop line interferring with cursor\n            .style(\"opacity\", 1e-6); // Set opacity to zero \n\n  var hoverDate = hoverLineGroup\n        .append('text')\n            .attr(\"class\", \"hover-text\")\n            .attr(\"y\", height - (height-40)) // hover date text position\n            .attr(\"x\", width - 150) // hover date text position\n            .style(\"fill\", \"#E6E7E8\");\n\n  var columnNames = d3.keys(data[0]) //grab the key values from your first data row\n                                     //these are the same as your column names\n                  .slice(1); //remove the first column name (`date`);\n\n  var focus = issue.select(\"g\") // create group elements to house tooltip text\n      .data(columnNames) // bind each column name date to each g element\n    .enter().append(\"g\") //create one <g> for each columnName\n      .attr(\"class\", \"focus\"); \n\n  focus.append(\"text\") // http://stackoverflow.com/questions/22064083/d3-js-multi-series-chart-with-y-value-tracking\n        .attr(\"class\", \"tooltip\")\n        .attr(\"x\", width + 20) // position tooltips  \n        .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace); }); // (return (11.25/2 =) 5.625) + i * (5.625) // position tooltips       \n\n  // Add mouseover events for hover line.\n  d3.select(\"#mouse-tracker\") // select chart plot background rect #mouse-tracker\n  .on(\"mousemove\", mousemove) // on mousemove activate mousemove function defined below\n  .on(\"mouseout\", function() {\n      hoverDate\n          .text(null) // on mouseout remove text for hover date\n\n      d3.select(\"#hover-line\")\n          .style(\"opacity\", 1e-6); // On mouse out making line invisible\n  });\n\n  function mousemove() { \n      var mouse_x = d3.mouse(this)[0]; // Finding mouse x position on rect\n      var graph_x = xScale.invert(mouse_x); // \n\n      //var mouse_y = d3.mouse(this)[1]; // Finding mouse y position on rect\n      //var graph_y = yScale.invert(mouse_y);\n      //console.log(graph_x);\n      \n      var format = d3.time.format('%b %Y'); // Format hover date text to show three letter month and full year\n      \n      hoverDate.text(format(graph_x)); // scale mouse position to xScale date and format it to show month and year\n      \n      d3.select(\"#hover-line\") // select hover-line and changing attributes to mouse position\n          .attr(\"x1\", mouse_x) \n          .attr(\"x2\", mouse_x)\n          .style(\"opacity\", 1); // Making line visible\n\n      // Legend tooltips // http://www.d3noob.org/2014/07/my-favourite-tooltip-method-for-line.html\n\n      var x0 = xScale.invert(d3.mouse(this)[0]), /* d3.mouse(this)[0] returns the x position on the screen of the mouse. xScale.invert function is reversing the process that we use to map the domain (date) to range (position on screen). So it takes the position on the screen and converts it into an equivalent date! */\n      i = bisectDate(data, x0, 1), // use our bisectDate function that we declared earlier to find the index of our data array that is close to the mouse cursor\n      /*It takes our data array and the date corresponding to the position of or mouse cursor and returns the index number of the data array which has a date that is higher than the cursor position.*/\n      d0 = data[i - 1],\n      d1 = data[i],\n      /*d0 is the combination of date and rating that is in the data array at the index to the left of the cursor and d1 is the combination of date and close that is in the data array at the index to the right of the cursor. In other words we now have two variables that know the value and date above and below the date that corresponds to the position of the cursor.*/\n      d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n      /*The final line in this segment declares a new array d that is represents the date and close combination that is closest to the cursor. It is using the magic JavaScript short hand for an if statement that is essentially saying if the distance between the mouse cursor and the date and close combination on the left is greater than the distance between the mouse cursor and the date and close combination on the right then d is an array of the date and close on the right of the cursor (d1). Otherwise d is an array of the date and close on the left of the cursor (d0).*/\n\n      //d is now the data row for the date closest to the mouse position\n\n      focus.select(\"text\").text(function(columnName){\n         //because you didn't explictly set any data on the <text>\n         //elements, each one inherits the data from the focus <g>\n\n         return (d[columnName]);\n      });\n  }; \n\n  //for brusher of the slider bar at the bottom\n  function brushed() {\n\n    xScale.domain(brush.empty() ? xScale2.domain() : brush.extent()); // If brush is empty then reset the Xscale domain to default, if not then make it the brush extent \n\n    svg.select(\".x.axis\") // replot xAxis with transition when brush used\n          .transition()\n          .call(xAxis);\n\n    maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n    yScale.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n    \n    svg.select(\".y.axis\") // Redraw yAxis\n      .transition()\n      .call(yAxis);   \n\n    issue.select(\"path\") // Redraw lines based on brush xAxis scale and domain\n      .transition()\n      .attr(\"d\", function(d){\n          return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n      });\n    \n  };      \n\n}); // End Data callback function\n  \n  function findMaxY(data){  // Define function \"findMaxY\"\n    var maxYValues = data.map(function(d) { \n      if (d.visible){\n        return d3.max(d.values, function(value) { // Return max rating value\n          return value.rating; })\n      }\n    });\n    return d3.max(maxYValues);\n  }\n\n</script>\n</html>", "description": "d3.js Multi-series line chart interactive", "created_at": "2014-09-29T11:07:31Z", "updated_at": "2016-04-05T08:51:57Z", "api": ["d3.time.format", "d3.bisector", "d3.time.scale", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.max", "d3.svg.brush", "d3.svg.area", "d3.mouse"], "readme": "Please note, data will be randomised until December 2014. It is based on Ipsos MORI's long term Issues Index survey 1974 - 2014.  ", "uid": "DStruths_9c042e3a6b66048b5bd4"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto - Tutorial 3</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"tutorial3.css\" />\n</head>\n<script>\n      function makeSomeMaps() {\n        \n    var colorScale = d3.scale.quantize().domain([50,1000]).range(colorbrewer.Reds[5])\n    \n    legend = d3.svg.legend().unitLabel(\"thousands\")\n    .formatter(d3.format(\".0f\"))\n    .title(\"Population\")\n    .scale(colorScale)\n\n  d3.select(\"#legend\").append(\"svg\").style(\"width\", \"100%\").style(\"height\", \"100%\").append(\"g\").attr(\"transform\", \"translate(20,35)\").attr(\"class\", \"legend\").call(legend);\n\n    map = d3.carto.map();\n    randomLayerArray = [];\n\n    d3.select(\"#map\").call(map);\n\n    d3.select(\"#d3MapPanBox > #left\").html(\"&#9664;\")\n    d3.select(\"#d3MapPanBox > #right\").html(\"&#9654;\")\n    d3.select(\"#d3MapPanBox > #up\").html(\"&#9650;\")\n    d3.select(\"#d3MapPanBox > #down\").html(\"&#9660;\")\n\n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Base\")\n\n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"all_sites.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"point\")\n    .renderMode(\"canvas\")\n    .markerSize(2)\n    .markerColor(function(d) {return colorScale(d.pop)})\n    .strokeColor(\"black\")\n    .x(\"xcoord\")\n    .y(\"ycoord\");\n\n    map.addCartoLayer(tileLayer).addCartoLayer(csvLayer);\n\n    function setScaleExample() {\n      map.setScale(2);\n    }\n    function centerOnExample() {\n      map.centerOn([110,30],\"latlong\");\n    }\n    function centerOnTransitionExample() {\n      map.centerOn([-110,30],\"latlong\",5000);\n    }\n    function zoomToExample() {\n      map.zoomTo([[60,29],[75,38]],\"latlong\",.9);\n    }\n    function zoomToTransitionExample() {\n      map.zoomTo([[30,-1],[45,8]],\"latlong\",.9,5000);\n    }\n    function manualScaleTranslateExample() {\n      map.zoom().scale(57897).translate([9885, -2150])\n    }\n    \n    function reprojectedCenter() {\n      map.mode(\"globe\");\n      projection = d3.geo.conicEquidistant()\n\t.scale(350)\n\t.translate([350,600]);\n      map.projection(projection);\n      map.refresh();\n    }\n\n    \n    function createRandomDataLayer() {\n      var randomPoints = d3.range(100).map(function() {return {x: 180 - (Math.random() * 360), y: 90 - (Math.random() * 180)}});\n\n      var randomRender = \"canvas\"\n      \n      if (Math.random() > .5) {\n        randomRender = \"svg\"\n      }\n      var newRandomLayer = d3.carto.layer.xyArray();\n      \n      newRandomLayer\n      .features(randomPoints)\n      .x(\"x\")\n      .y(\"y\")\n      .label(\"Random Layer\")\n      .renderMode(randomRender)\n      .cssClass(\"random\" + randomRender)\n      \n      map.addCartoLayer(newRandomLayer);\n      randomLayerArray.push(newRandomLayer);\n\n    }\n\n    function updateRandomDataLayer() {\n\n      if (randomLayerArray.length > 0) {\n        var randomLayer = randomLayerArray[0];\n        var randomLayerFeatures = randomLayer.features();\n        randomLayerFeatures.splice(50,50);\n        for (var x in randomLayerFeatures) {\n          randomLayerFeatures[x].x = 180 - (Math.random() * 360);\n        }\n        console.log(randomLayerFeatures.length)\n        randomLayer.features(randomLayerFeatures);\n        map.refreshCartoLayer(randomLayer)\n\n      }\n    }\n    \n    function deleteRandomDataLayer() {\n      if (randomLayerArray.length > 0) {\n        map.deleteCartoLayer(randomLayerArray[0]);\n        map.refresh();\n        randomLayerArray.splice(0,1);\n      }\n    }\n\n    d3.select(\"#buttons\").append(\"button\").html(\"setScale\").on(\"click\", setScaleExample)\n    d3.select(\"#buttons\").append(\"button\").html(\"centerOn (Point)\").on(\"click\", centerOnExample)\n    d3.select(\"#buttons\").append(\"button\").html(\"centerOn with Transition\").on(\"click\", centerOnTransitionExample)\n    d3.select(\"#buttons\").append(\"button\").html(\"zoomTo (Bounding Box)\").on(\"click\", zoomToExample)\n    d3.select(\"#buttons\").append(\"button\").html(\"zoomTo with Transition\").on(\"click\", zoomToTransitionExample)\n    d3.select(\"#buttons\").append(\"button\").html(\"Manual Scale and Translate\").on(\"click\", manualScaleTranslateExample)\n    d3.select(\"#buttons\").append(\"button\").html(\"Globe Mode\").on(\"click\", function() {map.mode(\"globe\");})\n    d3.select(\"#buttons\").append(\"button\").html(\"Projection Mode\").on(\"click\", function() {map.mode(\"projection\");})\n    d3.select(\"#buttons\").append(\"button\").html(\"Standard Mode\").on(\"click\", function() {map.mode(\"transform\");})\n    d3.select(\"#buttons\").append(\"button\").html(\"Projected Center Manipulation\").on(\"click\", reprojectedCenter)\n    d3.select(\"#buttons\").append(\"button\").html(\"Add a Random Data Layer\").on(\"click\", createRandomDataLayer)\n    d3.select(\"#buttons\").append(\"button\").html(\"Change a Random Data Layer\").on(\"click\", updateRandomDataLayer)\n    d3.select(\"#buttons\").append(\"button\").html(\"Delete a Random Data Layer\").on(\"click\", deleteRandomDataLayer)\n    \n  }\n  \n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"buttons\"></div>\n<div id=\"map\"></div>\n<div id=\"legend\"></div>\n<footer>\n<script src=\"http://d3js.org/colorbrewer.v1.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"legend.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Map Modes and Styling - d3.carto", "created_at": "2014-09-29T18:24:22Z", "updated_at": "2015-08-29T14:07:02Z", "api": ["d3.scale.linear", "d3.format", "d3.min", "d3.max", "d3.scale.quantize", "d3.svg.legend", "d3.select", "d3.carto.map", "d3.carto.layer", "d3.carto.layer.csv", "d3.geo.conicEquidistant", "d3.range", "d3.carto.layer.xyArray"], "readme": "This shows how you can override the CSS for panning, zooming and layer selector elements with  **[d3.carto.map](https://github.com/emeeks/d3-carto-map)**. It also provides examples of the various map modes and zooming functions and gives an example of how to create a legend.\n\nNotice that this legend is the one from my book [D3.js in Action](http://manning.com/meeks/) and not the more functional (but less readable) one that I made at [d3.svg.legend](http://bl.ocks.org/emeeks/8855733967174fe4b1b4).", "uid": "emeeks_c569f8852013e07abf57"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style> /* set the CSS */\n\nbody { font: 12px Arial;}\n\npath { \n    stroke: steelblue;\n    stroke-width: 2;\n    fill: none;\n}\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: grey;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n}\n\n</style>\n<body>\n\n<div id=\"option\">\n    <input name=\"updateButton\" \n           type=\"button\" \n           value=\"Update\" \n           onclick=\"updateData()\" />\n</div>\n\n<!-- load the d3.js library -->    \n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n// ** Update data section (Called from the onclick)\nfunction updateData() {\n\n    // Get the data again\n    d3.csv(\"data-alt.csv\", function(error, data) {\n       \tdata.forEach(function(d) {\n\t    \td.date = parseDate(d.date);\n\t    \td.close = +d.close;\n\t    });\n\n    \t// Scale the range of the data again \n    \tx.domain(d3.extent(data, function(d) { return d.date; }));\n\t    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Select the section we want to apply our changes to\n    var svg = d3.select(\"body\").transition();\n\n    // Make the changes\n        svg.select(\".line\")   // change the line\n            .duration(750)\n            .attr(\"d\", valueline(data));\n        svg.select(\".x.axis\") // change the x axis\n            .duration(750)\n            .call(xAxis);\n        svg.select(\".y.axis\") // change the y axis\n            .duration(750)\n            .call(yAxis);\n\n    });\n}\n\n</script>\n</body>\n", "description": "Update d3.js data with button press", "created_at": "2014-06-21T19:25:44Z", "updated_at": "2015-08-29T14:02:52Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a follow on from the [simple d3.js graph](http://bl.ocks.org/d3noob/b3ff6ae1c120eea654b5) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt demonstrates the loading of new data and updating a graph on a button press. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "d3noob_7030f35b72de721622b8"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Leaflet and D3 Map</title>\n    <meta charset=\"utf-8\" />\n    <link \n        rel=\"stylesheet\" \n        href=\"http://cdn.leafletjs.com/leaflet-0.7/leaflet.css\"\n    />\n\n</head>\n<body>\n\n    <div id=\"map\" style=\"width: 600px; height: 400px\"></div>\n\n\t<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\n    <script\n        src=\"http://cdn.leafletjs.com/leaflet-0.7/leaflet.js\">\n    </script>\n\n    <script>\n\t\n        var map = L.map('map').setView([-41.2858, 174.7868], 13);\n        mapLink = \n            '<a href=\"http://openstreetmap.org\">OpenStreetMap</a>';\n        L.tileLayer(\n            'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            attribution: '&copy; ' + mapLink + ' Contributors',\n            maxZoom: 18,\n            }).addTo(map);\n\n\t\t// Add an SVG element to Leaflet\u2019s overlay pane\n\t\tvar svg = d3.select(map.getPanes().overlayPane).append(\"svg\"),\n\t\t\tg = svg.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\");\n\t\t\t\n\t\td3.json(\"rectangle.json\", function(geoShape) {\n\t\t\n\t\t//  create a d3.geo.path to convert GeoJSON to SVG\n\t\tvar transform = d3.geo.transform({point: projectPoint}),\n            \tpath = d3.geo.path().projection(transform);\n \n\t\t// create path elements for each of the features\n\t\td3_features = g.selectAll(\"path\")\n\t\t\t.data(geoShape.features)\n\t\t\t.enter().append(\"path\");\n\n\t\tmap.on(\"viewreset\", reset);\n\n\t\treset();\n\n\t\t// fit the SVG element to leaflet's map layer\n\t\tfunction reset() {\n        \n\t\t\tbounds = path.bounds(geoShape);\n\n\t\t\tvar topLeft = bounds[0],\n\t\t\t\tbottomRight = bounds[1];\n\n\t\t\tsvg .attr(\"width\", bottomRight[0] - topLeft[0])\n\t\t\t\t.attr(\"height\", bottomRight[1] - topLeft[1])\n\t\t\t\t.style(\"left\", topLeft[0] + \"px\")\n\t\t\t\t.style(\"top\", topLeft[1] + \"px\");\n\n\t\t\tg .attr(\"transform\", \"translate(\" + -topLeft[0] + \",\" \n\t\t\t                                  + -topLeft[1] + \")\");\n\n\t\t\t// initialize the path data\t\n\t\t\td3_features.attr(\"d\", path)\n\t\t\t\t.style(\"fill-opacity\", 0.7)\n\t\t\t\t.attr('fill','blue');\n\t\t} \n\n\t\t// Use Leaflet to implement a D3 geometric transformation.\n\t\tfunction projectPoint(x, y) {\n\t\t\tvar point = map.latLngToLayerPoint(new L.LatLng(y, x));\n\t\t\tthis.stream.point(point.x, point.y);\n\t\t}\n\n\t})\n        \n    </script>\n</body>\n</html>\n", "description": "Map using leaflet.js and d3,js combined", "created_at": "2014-02-25T15:54:41Z", "updated_at": "2016-04-03T23:07:54Z", "api": ["d3.select", "d3.json", "d3.geo.transform", "d3.geo.path"], "readme": "This is a map that uses [leaflet.js](http://leafletjs.com/) and [d3.js](http://d3js.org/) in a way that combines the two so that the d3.js object zooms and pans with the map. It is as used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is derived from the Mike Bostock [tutorial on Leaflet](http://bost.ocks.org/mike/leaflet/) but is simplified somewhat.", "uid": "d3noob_9211665"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Orbit Layout Modes</title>\n  <meta charset=\"utf-8\" />\n</head>\n<style>\n\n  #viz, svg {\n    width: 100%;\n    height: 100%;\n  }\n\n  text {\n    pointer-events: none;\n  }\n\n  #buttons {\n    position: fixed;\n    top:0;\n    left:0;\n  }\n\n  circle.ring {\n    fill: none;\n    stroke: black;\n    stroke-width: 1px;\n    stroke-opacity: .15;\n\n  }\n  \n</style>\n<script>\n\n\nfunction makeViz() {\n\n  d3.json(\"d3.json\", function(data) {drawOrbit(data)});\n\n}\n\nfunction drawOrbit(_data) {\n\n  var center = {};\n  var recenter = false;\n\n\n  for (var x=0;x<_data.children.length;x++) {\n    _data.children[x].size = _data.children[x].children ? _data.children[x].children.length : 0;\n  }\n\n  _data.children.sort(function(a,b) {\n        if (a.size > b.size) {\n          return 1;\n        }\n        if (a.size < b.size) {\n          return -1;\n        }\n        return 0;\n  })\n\n\n  sizeScale = d3.scale.linear().domain([0,1,5,10,20]).range([4,6,8,10,12]).clamp(true);\n  colorScale = d3.scale.linear().domain([0,1,2,3,4]).range([\"rgb(161,208,120)\",\"rgb(247,148,72)\",\"rgb(225,203,208)\",\"rgb(174,223,228)\",\"rgb(245,132,102)\"]);\n\n  planetColors = {Mercury: \"gray\", Venus: \"#d6bb87\", Earth: \"#677188\", Mars: \"#7c5541\", Jupiter: \"#a36a3e\", Saturn: \"#e9ba85\", Uranus: \"#73cbf0\", Neptune: \"#6383d1\"}\n\n\n  orbit = d3.layout.orbit().size([800,800])\n  .revolution(customRevolution)\n  .orbitSize(function(d) {return d.depth >= 2 ? 6 : 4})\n  .speed(.25)\n  .mode([35,36,8,3,1])\n  .nodes(_data);\n\n  center = orbit.nodes()[0];\n\n  d3.select(\"svg\")\n.append(\"g\")\n.attr(\"class\", \"viz\")\n.attr(\"transform\", \"translate(50,50)\")\n  .selectAll(\"g.node\").data(orbit.nodes())\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"})\n  .on(\"mouseover\", nodeOver)\n  .on(\"click\", recenter)\n\n  d3.selectAll(\"g.node\")\n  .append(\"circle\")\n  .attr(\"class\", \"satellite\")\n  .attr(\"r\", function(d) {return sizeScale(d.children ? d.children.length : 0)})\n  .style(\"fill\", function(d) {return colorScale(d.depth)})\n  .style(\"stroke\", \"brown\")\n  .style(\"stroke-width\", \"1px\")\n\n  d3.selectAll(\"g.node\").filter(function(d) {return d.depth == 1})\n  .append(\"text\")\n  .text(function(d) {return d.depth == 0 ? \"Sun\" : d.key})\n  .attr(\"y\", 20)\n  .style(\"text-anchor\", \"middle\")\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n  .enter()\n  .insert(\"circle\", \"g\")\n  .attr(\"class\", \"ring\")\n  .attr(\"r\", function(d) {return d.r})\n  .attr(\"cx\", function(d) {return d.x})\n  .attr(\"cy\", function(d) {return d.y})\n\n  orbit.on(\"tick\", orbitTick);\n\n  orbit.start();\n\n  function orbitTick() {\n\n    var newX = 200- center.x;\n    var newY = 200 - center.y;\n\n    d3.select(\"g.viz\")\n    .attr(\"transform\", \"scale(\"+(1 + (center.depth *.1)) +\") translate(\" + newX + \",\" + newY + \")\")\n\n\n    d3.selectAll(\"g.node\")\n      .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"});\n\n    d3.selectAll(\"circle.ring\")\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n\n        d3.selectAll(\"line.visible\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n\n  }\n\n  function changeCenter() {\n        recenter = false;\n        orbit.stop();\n    var newX = 200 - center.x;\n    var newY = 200 - center.y;\n\n    d3.select(\"g.viz\")\n    .transition()\n    .duration(1000)\n    .attr(\"transform\", \"scale(\"+(1 + (center.depth *.1)) +\") translate(\" + newX + \",\" + newY + \")\")\n    .each(\"end\", function() {orbit.start()})\n\n  }\n\n  function customRevolution(d) \n  {\n    if (d.name == \"time\") {\n      return d.depth * .25;\n    }\n    if (d.name == \"geo\") {\n      return -d.depth * .25;      \n    }\n    return d.depth\n  }\n\n  function nodeOver(d) {\n    orbit.stop();\n\n      center = d;\n      changeCenter();\n\n      d3.selectAll(\"text.sat\").remove();\n\n      d3.selectAll(\"line.visible\").remove();\n\n      if (d.children) {\n        var lines = d.children.map(function(p) {return {source: d, target: p}})\n        d3.select(\"g.viz\").selectAll(\"line.visible\")\n        .data(lines)\n        .enter()\n        .insert(\"line\", \"g\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n        .attr(\"class\", \"visible\")\n        .style(\"stroke\", \"rgb(73,106,154)\")\n        .style(\"stroke-width\", 2)\n      }\n\n      if (d.parent) {\n\n        d3.select(\"g.viz\").selectAll(\"line.fake\")\n        .data([{source:d, target: d.parent}])\n        .enter()\n        .insert(\"line\", \"g\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n        .attr(\"class\", \"visible\")\n        .style(\"stroke\", \"rgb(165,127,124)\")\n        .style(\"stroke-width\", 3)\n      }\n\n\n      d3.selectAll(\"g.node\")\n      .filter(function(p) {return p == d || p == d.parent || (d.children ? d.children.indexOf(p) > -1 : false)})\n      .append(\"text\")\n      .text(function(p) {return p.name})\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"sat\")\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", \"white\")\n      .style(\"stroke-width\", 3)\n      .style(\"stroke-opacity\", .7);\n\n      d3.selectAll(\"g.node\")\n      .filter(function(p) {return p == d || p == d.parent || (d.children ? d.children.indexOf(p) > -1 : false)})\n      .append(\"text\")\n      .text(function(p) {return p.name})\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"sat\");\n\n    d3.selectAll(\"g.node > circle\").style(\"stroke\", \"brown\").style(\"stroke-width\", 1);    \n\n    d3.select(this).select(\"circle\").style(\"stroke\", \"black\").style(\"stroke-width\", 3);\n\n  }\n\n\n}\n\n</script>\n<body onload=\"makeViz()\">\n<div id=\"viz\"><svg></svg><div id=\"buttons\"></div></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"d3.layout.orbit.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n</footer>\n</body>\n</html>", "description": "Orbital Layout of D3.js API", "created_at": "2015-12-29T08:14:58Z", "updated_at": "2015-12-29T08:14:59Z", "api": ["d3.dispatch", "d3.rebind", "d3.layout.pie", "d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that visualizes the D3 API.\n\nWhen you mouseover a node, it displays its label and centers the orbit layout on that node. It also draws spokes to children and parents where applicable.\n\nforked from <a href='http://bl.ocks.org/tarekrached/'>tarekrached</a>'s block: <a href='http://bl.ocks.org/tarekrached/a7628dd96c62155068dd'>Orbital Layout of D3.js API</a>", "uid": "ivandgreat_a1dbc93ad94d30112cd5"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>Orbit Layout Modes</title>\n  <meta charset=\"utf-8\" />\n</head>\n<style>\n\n  #viz, svg {\n    width: 100%;\n    height: 100%;\n  }\n\n  text {\n    pointer-events: none;\n  }\n\n  #buttons {\n    position: fixed;\n    top:0;\n    left:0;\n  }\n\n  circle.ring {\n    fill: none;\n    stroke: black;\n    stroke-width: 1px;\n    stroke-opacity: .15;\n\n  }\n  \n</style>\n<script>\n\n\nfunction makeViz() {\n\n  d3.json(\"d3.json\", function(data) {drawOrbit(data)});\n\n}\n\nfunction drawOrbit(_data) {\n\n  var center = {};\n  var recenter = false;\n\n\n  for (var x=0;x<_data.children.length;x++) {\n    _data.children[x].size = _data.children[x].children ? _data.children[x].children.length : 0;\n  }\n\n  _data.children.sort(function(a,b) {\n        if (a.size > b.size) {\n          return 1;\n        }\n        if (a.size < b.size) {\n          return -1;\n        }\n        return 0;\n  })\n\n\n  sizeScale = d3.scale.linear().domain([0,1,5,10,20]).range([4,6,8,10,12]).clamp(true);\n  colorScale = d3.scale.linear().domain([0,1,2,3,4]).range([\"rgb(161,208,120)\",\"rgb(247,148,72)\",\"rgb(225,203,208)\",\"rgb(174,223,228)\",\"rgb(245,132,102)\"]);\n\n  planetColors = {Mercury: \"gray\", Venus: \"#d6bb87\", Earth: \"#677188\", Mars: \"#7c5541\", Jupiter: \"#a36a3e\", Saturn: \"#e9ba85\", Uranus: \"#73cbf0\", Neptune: \"#6383d1\"}\n\n\n  orbit = d3.layout.orbit().size([800,800])\n  .revolution(customRevolution)\n  .orbitSize(function(d) {return d.depth >= 2 ? 6 : 4})\n  .speed(.25)\n  .mode([35,36,8,3,1])\n  .nodes(_data);\n\n  center = orbit.nodes()[0];\n\n  d3.select(\"svg\")\n.append(\"g\")\n.attr(\"class\", \"viz\")\n.attr(\"transform\", \"translate(50,50)\")\n  .selectAll(\"g.node\").data(orbit.nodes())\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"})\n  .on(\"mouseover\", nodeOver)\n  .on(\"click\", recenter)\n\n  d3.selectAll(\"g.node\")\n  .append(\"circle\")\n  .attr(\"class\", \"satellite\")\n  .attr(\"r\", function(d) {return sizeScale(d.children ? d.children.length : 0)})\n  .style(\"fill\", function(d) {return colorScale(d.depth)})\n  .style(\"stroke\", \"brown\")\n  .style(\"stroke-width\", \"1px\")\n\n  d3.selectAll(\"g.node\").filter(function(d) {return d.depth == 1})\n  .append(\"text\")\n  .text(function(d) {return d.depth == 0 ? \"Sun\" : d.key})\n  .attr(\"y\", 20)\n  .style(\"text-anchor\", \"middle\")\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n  .enter()\n  .insert(\"circle\", \"g\")\n  .attr(\"class\", \"ring\")\n  .attr(\"r\", function(d) {return d.r})\n  .attr(\"cx\", function(d) {return d.x})\n  .attr(\"cy\", function(d) {return d.y})\n\n  orbit.on(\"tick\", orbitTick);\n\n  orbit.start();\n\n  function orbitTick() {\n\n    var newX = 200- center.x;\n    var newY = 200 - center.y;\n\n    d3.select(\"g.viz\")\n    .attr(\"transform\", \"scale(\"+(1 + (center.depth *.1)) +\") translate(\" + newX + \",\" + newY + \")\")\n\n\n    d3.selectAll(\"g.node\")\n      .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"});\n\n    d3.selectAll(\"circle.ring\")\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n\n        d3.selectAll(\"line.visible\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n\n  }\n\n  function changeCenter() {\n        recenter = false;\n        orbit.stop();\n    var newX = 200 - center.x;\n    var newY = 200 - center.y;\n\n    d3.select(\"g.viz\")\n    .transition()\n    .duration(1000)\n    .attr(\"transform\", \"scale(\"+(1 + (center.depth *.1)) +\") translate(\" + newX + \",\" + newY + \")\")\n    .each(\"end\", function() {orbit.start()})\n\n  }\n\n  function customRevolution(d) \n  {\n    if (d.name == \"time\") {\n      return d.depth * .25;\n    }\n    if (d.name == \"geo\") {\n      return -d.depth * .25;      \n    }\n    return d.depth\n  }\n\n  function nodeOver(d) {\n    orbit.stop();\n\n      center = d;\n      changeCenter();\n\n      d3.selectAll(\"text.sat\").remove();\n\n      d3.selectAll(\"line.visible\").remove();\n\n      if (d.children) {\n        var lines = d.children.map(function(p) {return {source: d, target: p}})\n        d3.select(\"g.viz\").selectAll(\"line.visible\")\n        .data(lines)\n        .enter()\n        .insert(\"line\", \"g\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n        .attr(\"class\", \"visible\")\n        .style(\"stroke\", \"rgb(73,106,154)\")\n        .style(\"stroke-width\", 2)\n      }\n\n      if (d.parent) {\n\n        d3.select(\"g.viz\").selectAll(\"line.fake\")\n        .data([{source:d, target: d.parent}])\n        .enter()\n        .insert(\"line\", \"g\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n        .attr(\"class\", \"visible\")\n        .style(\"stroke\", \"rgb(165,127,124)\")\n        .style(\"stroke-width\", 3)\n      }\n\n\n      d3.selectAll(\"g.node\")\n      .filter(function(p) {return p == d || p == d.parent || (d.children ? d.children.indexOf(p) > -1 : false)})\n      .append(\"text\")\n      .text(function(p) {return p.name})\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"sat\")\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", \"white\")\n      .style(\"stroke-width\", 3)\n      .style(\"stroke-opacity\", .7);\n\n      d3.selectAll(\"g.node\")\n      .filter(function(p) {return p == d || p == d.parent || (d.children ? d.children.indexOf(p) > -1 : false)})\n      .append(\"text\")\n      .text(function(p) {return p.name})\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"sat\");\n\n    d3.selectAll(\"g.node > circle\").style(\"stroke\", \"brown\").style(\"stroke-width\", 1);    \n\n    d3.select(this).select(\"circle\").style(\"stroke\", \"black\").style(\"stroke-width\", 3);\n\n  }\n\n\n}\n\n</script>\n<body onload=\"makeViz()\">\n<div id=\"viz\"><svg></svg><div id=\"buttons\"></div></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"d3.layout.orbit.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n</footer>\n</body>\n</html>", "description": "Orbital Layout of D3.js API", "created_at": "2015-10-14T05:37:42Z", "updated_at": "2015-10-14T05:37:43Z", "api": ["d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll", "d3.dispatch", "d3.rebind", "d3.layout.pie"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that visualizes the D3 API.\n\nWhen you mouseover a node, it displays its label and centers the orbit layout on that node. It also draws spokes to children and parents where applicable.", "uid": "tarekrached_a7628dd96c62155068dd"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.node {\n  cursor: pointer;\n}\n\n.node circle {\n  fill: #fff;\n  stroke: steelblue;\n  stroke-width: 1.5px;\n}\n\n.node text {\n  font: 10px sans-serif;\n}\n\n.link {\n  fill: none;\n  stroke: #ccc;\n  stroke-width: 1.5px;\n}\n\n</style>\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 180},\n    width = 960 - margin.right - margin.left,\n    height = 480 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"/ajschumacher/raw/65eda1df2b0dd2cf616f/structure.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"480px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\u2026\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\u2026\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>\n", "description": "Interactive D3 view of sklearn decision tree", "created_at": "2015-12-02T02:24:35Z", "updated_at": "2015-12-02T02:24:36Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "This is Bostock's [interactive Reingold-Tilford Tree](http://bl.ocks.org/mbostock/4339083) with data representing the rules of a simple [sklearn decision tree](http://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier). Click on nodes to expand or collapse.\n\nFor more, see the [complete write-up](http://planspace.org/20151129-see_sklearn_trees_with_d3/).\n\n\nforked from <a href='http://bl.ocks.org/ajschumacher/'>ajschumacher</a>'s block: <a href='http://bl.ocks.org/ajschumacher/65eda1df2b0dd2cf616f'>Interactive D3 view of sklearn decision tree</a>", "uid": "renecnielsen_f11624fe14195cf8a1c5"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\nbody {\n  background: #fcfcfa;\n  height: 500px;\n  position: relative;\n  width: 960px;\n}\n.stroke {\n  fill: none;\n  stroke: #000;\n  stroke-width: 3px;\n}\n.fill {\n  fill: #fff;\n}\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-width: .5px;\n  stroke-opacity: .5;\n}\n.land {\n  fill: #222;\n}\n</style>\n<body>\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n<script>\n\nvar width = 960,\n    height = 500,\n    rotate = [0,0],\n    graticule = d3.geo.graticule();\n\nvar projection = d3.geo.azimuthalEqualArea()\n     .scale(250)\n     .precision(0.3)\n     .clipAngle(180 - 1e-3)\n     .rotate(rotate);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar m0,\n    o0;\n\nvar drag = d3.behavior.drag()\n    .on(\"dragstart\", function() {\n    // Adapted from http://mbostock.github.io/d3/talk/20111018/azimuthal.html and updated for d3 v3\n      var proj = projection.rotate();\n      m0 = [d3.event.sourceEvent.pageX, d3.event.sourceEvent.pageY];\n      o0 = [-proj[0],-proj[1]];\n    })\n    .on(\"drag\", function() {\n      if (m0) {\n        var m1 = [d3.event.sourceEvent.pageX, d3.event.sourceEvent.pageY],\n            o1 = [o0[0] + (m0[0] - m1[0]) / 4, o0[1] + (m1[1] - m0[1]) / 4];\n        projection.rotate([-o1[0], -o1[1]]);\n      }\n\n    // Update the map\n      path = d3.geo.path().projection(projection);\n      d3.selectAll(\"path\").attr(\"d\", path);\n    });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .call(drag);\n    \nsvg.append(\"defs\").append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\nsvg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"fill\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\nd3.json(\"plate0.json\", function(error, plates) {\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(plates, plates.objects.plates0))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n});\n\n</script>\n</body>\n</html>", "description": "Using d3.behavior.drag() with a map (updated)", "created_at": "2013-09-06T00:11:33Z", "updated_at": "2015-12-22T10:19:17Z", "api": ["d3.geo.graticule", "d3.geo.azimuthalEqualArea", "d3.geo.path", "d3.behavior.drag", "d3.selectAll", "d3.select", "d3.json"], "readme": "An updated version of https://gist.github.com/jczaplew/6453048 or http://bl.ocks.org/jczaplew/6453048 using the logic from this example http://mbostock.github.io/d3/talk/20111018/azimuthal.html", "uid": "jczaplew_6457917"}, {"code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n\n    <title>Collapsible Tree Example</title>\n\n    <style>\n\n\t.node circle {\n\t  fill: #fff;\n\t  stroke: steelblue;\n\t  stroke-width: 3px;\n\t}\n\n\t.node text { font: 12px sans-serif; }\n\n\t.link {\n\t  fill: none;\n\t  stroke: #ccc;\n\t  stroke-width: 2px;\n\t}\n\t\n    </style>\n\n  </head>\n\n  <body>\n\n<!-- load the d3.js library -->\t\n<script src=\"http://d3js.org/d3.v3.min.js\"></script>\n\t\n<script>\n\nvar treeData = [\n  {\n    \"name\": \"Top Level\",\n    \"parent\": \"null\",\n    \"value\": 10,\n    \"type\": \"black\",\n    \"level\": \"red\",\n    \"children\": [\n      {\n        \"name\": \"Level 2: A\",\n        \"parent\": \"Top Level\",\n        \"value\": 15,\n        \"type\": \"grey\",\n        \"level\": \"red\",\n        \"children\": [\n          {\n            \"name\": \"Son of A\",\n            \"parent\": \"Level 2: A\",\n            \"value\": 5,\n            \"type\": \"steelblue\",\n            \"level\": \"orange\"\n          },\n          {\n            \"name\": \"Daughter of A\",\n            \"parent\": \"Level 2: A\",\n            \"value\": 8,\n            \"type\": \"steelblue\",\n            \"level\": \"red\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Level 2: B\",\n        \"parent\": \"Top Level\",\n        \"value\": 10,\n        \"type\": \"grey\",\n        \"level\": \"green\"\n      }\n    ]\n  }\n];\n\n// ************** Generate the tree diagram\t *****************\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n\twidth = 960 - margin.right - margin.left,\n\theight = 500 - margin.top - margin.bottom;\n\t\nvar i = 0;\n\nvar tree = d3.layout.tree()\n\t.size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n\t.projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.right + margin.left)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nroot = treeData[0];\n  \nupdate(root);\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n\t  links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Declare the nodes\u2026\n  var node = svg.selectAll(\"g.node\")\n\t  .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter the nodes.\n  var nodeEnter = node.enter().append(\"g\")\n\t  .attr(\"class\", \"node\")\n\t  .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeEnter.append(\"circle\")\n\t  .attr(\"r\", function(d) { return d.value; })\n\t  .style(\"stroke\", function(d) { return d.type; })\n\t  .style(\"fill\", function(d) { return d.level; });\n\n  nodeEnter.append(\"text\")\n\t  .attr(\"x\", function(d) { \n\t\t  return d.children || d._children ? \n\t\t  (d.value + 4) * -1 : d.value + 4 })\n\t  .attr(\"dy\", \".35em\")\n\t  .attr(\"text-anchor\", function(d) { \n\t\t  return d.children || d._children ? \"end\" : \"start\"; })\n\t  .text(function(d) { return d.name; })\n\t  .style(\"fill-opacity\", 1);\n\n  // Declare the links\u2026\n  var link = svg.selectAll(\"path.link\")\n\t  .data(links, function(d) { return d.target.id; });\n\n  // Enter the links.\n  link.enter().insert(\"path\", \"g\")\n\t  .attr(\"class\", \"link\")\n  \t  .style(\"stroke\", function(d) { return d.target.level; })\n\t  .attr(\"d\", diagonal);\n\n}\n\n</script>\n\t\n  </body>\n</html>\n", "description": "Simple d3.js Tree Diagram with styling", "created_at": "2014-01-08T21:20:41Z", "updated_at": "2016-02-14T03:36:12Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select"], "readme": "This is a simple d3.js tree diagram with dynamic styling added to the nodes and links as used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is derived from the Mike Bostock [Collapsible tree example](http://bl.ocks.org/mbostock/4339083) but it is a VERY cut down version without the ability to update (collapse).", "uid": "d3noob_8324872"}, {"code": "<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pixi.js/3.0.10/pixi.min.js\"></script>\n  <style>\n    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }\n    svg { width:100%; height: 100% }\n  </style>\n</head>\n \n<body>\n  <div id=\"container\"></div>\n</body>\n\n  <script>\n    var width = 700;\n    var height = 500;\n    var x = d3.scale.linear()\n    .range([0, width]);\n\n\t\tvar y = d3.scale.linear()\n    .range([height, 0]);\n    var color = d3.scale.category20c();\n\n\t\tvar renderer = new PIXI.WebGLRenderer(800, 600, \n      { antialias: true, backgroundColor : 0xffffff });\n\t\tdocument.body.appendChild(renderer.view);\n\t\t\t\n\t\t// create the root of the scene graph\n\t\tvar stage = new PIXI.Container();\n \n    function drawCircle(d,x,y,r,fill) {\n      if (typeof fill === \"string\") {\n        fill = parseInt(fill.substring(1), 16);\n      }\n\n      if (d._graphics) {\n        d._graphics.clear();\n     } else {\n     \n      d._graphics = new PIXI.Graphics();\n      d._graphics.updateCircle = function(newx,newy) {\n        drawCircle(d, newx, newy, r, fill);    \n      }\n     }\n\n      d._graphics.lineStyle(0);\n      d._graphics.beginFill(fill, 1);\n      d._graphics.drawCircle(x,y,r);\n      d._graphics.endFill();\n      d._graphics.interactive = true;\n      d._graphics.buttonMode = true;\n     /* d._graphics.hitArea = new PIXI.Circle(x,y,r);\n      d._graphics.click = function(e) {\n        this.alpha = 0.5;\n      }\n     */ \n      // d._graphics.on('mousedown', onDragStart)\n      //   .on('touchstart', onDragStart)\n      //   // events for drag end\n      //   .on('mouseup', onDragEnd)\n      //   .on('mouseupoutside', onDragEnd)\n      //   .on('touchend', onDragEnd)\n      //   .on('touchendoutside', onDragEnd)\n      //   // events for drag move\n      //   .on('mousemove', onDragMove)\n      //   .on('touchmove', onDragMove);\n\n      return d._graphics;\n    } \n\n\t\td3.json(\"myjson.json\", function(error, data) {\n\t\t\tif (error) throw error;\n      x.domain(d3.extent(data, function(d) { return d.V1; })).nice();\n      y.domain(d3.extent(data, function(d) { return d.V2; })).nice();\n      data.forEach(function(d) {\n         var circle = drawCircle(d, x(d.V1), y(d.V2),1.5 , 0x9933FF);  \n        \t\t\n         stage.addChild(circle);\n       });\n \t\t\trenderer.render(stage);\n           \n    });\n  </script>\n          ", "description": "TSNE with R, D3, pixi (40000points)", "created_at": "2016-05-25T12:35:39Z", "updated_at": "2016-05-25T12:35:40Z", "api": ["d3.scale.linear", "d3.scale.category20c", "d3.json", "d3.extent"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/guillaumechaumet/'>guillaumechaumet</a>'s block: <a href='http://bl.ocks.org/guillaumechaumet/7cb92053f786dfb53b932a4904102fbc'>TSNE with R, D3, pixi (40000points)</a>\n\nforked from <a href='http://bl.ocks.org/guillaumechaumet/'>guillaumechaumet</a>'s block: <a href='http://bl.ocks.org/guillaumechaumet/5f568f1b95ec50aa2c071fa74b1fbe73'>TSNE with R, D3, pixi (40000points)</a>\n\nforked from <a href='http://bl.ocks.org/guillaumechaumet/'>guillaumechaumet</a>'s block: <a href='http://bl.ocks.org/guillaumechaumet/bc4afdac1469587ac97a67760e0c204d'>TSNE with R, D3, pixi (40000points)</a>", "uid": "guillaumechaumet_10f11d806be9009d5f6bcaa1006cd18b"}, {"code": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <title>d3.carto.map - Improved Circle Pack Clustering</title>\n  <meta charset=\"utf-8\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"d3map.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css\" />\n</head>\n<style>\n  html,body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  #map {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n</style>\n<script>\n      function makeSomeMaps() {\n    map = d3.carto.map();\n\n    d3.select(\"#map\").call(map);\n    \n    tileLayer = d3.carto.layer();\n    tileLayer\n    .type(\"tile\")\n    .path(\"elijahmeeks.map-azn21pbi\")\n    .label(\"Base\")\n    \n    csvLayer = d3.carto.layer.csv();\n    csvLayer\n    .path(\"all_sites.csv\")\n    .label(\"CSV Points\")\n    .cssClass(\"pinkcircle\")\n    .renderMode(\"svg\")\n    .markerSize(2)\n    .x(\"xcoord\")\n    .y(\"ycoord\")\n    .on(\"recluster\", clusterPack)\n    .cluster(true);\n    \n    map.addCartoLayer(tileLayer).addCartoLayer(csvLayer);\n    map.centerOn([100,30],\"latlong\").setScale(3);\n    \n    function clusterPack() {\n      clusterLayer = csvLayer.clusterLayer();\n      clusterLayer.g().selectAll(\"g.marker\").selectAll(\"*\").remove();\n\n      packChart = d3.layout.pack();\n      packChart.size([15,15])\n      .value(function(d) {return 1});\n\n      clusterLayer.g().selectAll(\"g.marker\")\n      .each(function(d) {\n        d3.select(this).selectAll(\"circle\")\n        .data(packChart(d))\n        .enter()\n        .append(\"circle\")\n        .style(\"stroke\", \"black\")\n        .style(\"stroke-width\", function(p) {return p.leaf ? 0 : 1})\n        .attr(\"cx\", function(p) {return p.x - 5})\n        .attr(\"cy\", function(p) {return p.y - 5})\n        .attr(\"r\", function(p) {return p.r})\n        .style(\"fill\", function(p) {return p.leaf ? \"darkred\" : \"#FFE6E6\"})\n\n      })\n\n    }\n\n  }\n</script>\n<body onload=\"makeSomeMaps()\">\n<div id=\"map\"></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"http://d3js.org/topojson.v1.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js\" type=\"text/javascript\">\n</script>\n<script src=\"http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js\" type=\"text/javascript\">\n</script>\n<script src=\"https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js\" type=\"text/javascript\">\n</script>\n</footer>\n</body>\n</html>", "description": "Improved Circle Pack Clustering - d3.carto", "created_at": "2014-09-11T03:29:35Z", "updated_at": "2015-08-29T14:06:18Z", "api": ["d3.carto.map", "d3.select", "d3.carto.layer", "d3.carto.layer.csv", "d3.layout.pack"], "readme": "Improved quadtree clustering in **[d3.carto.map](https://github.com/emeeks/d3-carto-map)** allows for more seamless integration with hierarchical D3 layouts like Pack & Tree.\n\nIf you set the .cluster() property of a cartoLayer to true, it will cluster bsaed on a precomputed quadtree. Along with clustering, it appends \"children\" attributes of every point, which allows it to be passed to a hierarchical layout, as is done here with circle-packing.\n\nA hierarchical infoviz layout like circle-packing shows the hierarchical structure of clustered cities, so that you can get a sense not only of the density of cities, but also the distribution.", "uid": "emeeks_540b1b884b80b14a44c6"}, {"code": "<html>\n  <head>\n    <title>Blocks Graph - Readme Mentions</title>\n    <meta charset='utf-8' />\n    <script src='http://d3js.org/d3.v3.min.js'></script>\n    <script src='https://npmcdn.com/babel-core@5.8.34/browser.min.js'></script>\n    <script src='jsLouvain.js'></script>\n  </head>\n    <body>\n      <script>\n/* Make the vis fill the page using CSS. */\nd3.select('body')\n  .style({\n    margin: 0,\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  });\n\nd3.select('body').append('div')\n  .attr('id', 'viz')\n  .style({\n    float: 'left',\n    width: '70%',\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  })\n\nd3.select('body').append('div')\n  .attr('id', 'detail')\n  .style({\n    float: 'right',\n    width: '30%',\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: '70%'\n  }) \n\n// Extract the width and height that was computed by CSS.\nconst vizDiv = document.getElementById('viz');\nconst width = vizDiv.clientWidth;\nconst height = vizDiv.clientHeight;\nconst minSide = d3.min([width, height]);\nconst xOffset = (width - minSide) / 2;\nconst yOffset = (height - minSide) / 2;\n\nconst detailDiv = document.getElementById('detail');\nconst detailHeight = detailDiv.clientHeight;\nconst detailWidth = detailDiv.clientWidth;\n\nconst detailSVG = d3.select(detailDiv)\n  .append('svg')\n  .attr('width', detailDiv.clientWidth)    \n  .attr('height', detailDiv.clientHeight);\n\nlet cardsOnPage = [];\nlet cardsDisplayed = [];\n\nconst nodeHash = {};\n\n// Use the extracted size to set the size of a Canvas element\nd3.select(vizDiv).append('canvas')\n  .attr('width', width)\n  .attr('height', height)\n  .style('position', 'absolute');\n\n// Use the extracted size to set the size of a SVG element\nd3.select(vizDiv).append('svg')\n  .attr('width', width)\n  .attr('height', height)\n  .classed('main', true)\n  .style('position', 'absolute');\n\n\nd3.json('readme-blocks-graph.json', function (error, data) {\n        \tcreateNetwork(error, data);\n        });\n\n// remove thumbnails url data loading for now\n// queue()\n//   .defer(d3.json, 'readme-blocks-graph.json')\n//   .defer(d3.json, 'thumbnailsHash.json')\n//   .await((error, data1, data2) => createNetwork(error, data1, data2));\n\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\nfunction createNetwork(error, graphContainer) {\n  console.log('graphContainer', graphContainer);\n  const nodes = [];\n  const edges = [];\n  const edgelist = graphContainer.graph.edges;\n  const nodelist = graphContainer.graph.nodes;\n\n  edgelist.forEach(edge => {\n    if (!nodeHash[edge.source]) {\n      nodeHash[edge.source] = {\n        id: edge.source,\n        label: edge.source\n      };\n      nodes.push(nodeHash[edge.source]);\n    }\n    if (!nodeHash[edge.target]) {\n      nodeHash[edge.target] = {\n        id: edge.target,\n        label: edge.target\n      };\n      nodes.push(nodeHash[edge.target]);\n    }\n    if (edge /* .weight == 5 */) {\n      edges.push({\n        id: `${nodeHash[edge.source].id}-${nodeHash[edge.target].id}`,\n        source: nodeHash[edge.source],\n        target: nodeHash[edge.target],\n        weight: 1 /* edge.weight */\n      });\n    }\n  });\n\n  // get some attributes from the nodelist (calculated elsewhere)\n  // and store them in the nodeHash\n  nodelist.forEach(node => {\n    if (nodeHash[node.id]) {\n      nodeHash[node.id].user = node.user;\n      nodeHash[node.id].createdAt = node.createdAt;\n      nodeHash[node.id].updatedAt = node.updatedAt;\n      nodeHash[node.id].description = node.description;\n    }\n  });\n\n  // take the attributes now in the nodeHash\n  // and hang them on the nodes (calculated here from the edgelist)\n  nodes.forEach(node => {\n    if (nodeHash[node.id]) {\n      node.user = nodeHash[node.id].user;\n      node.createdAt = nodeHash[node.id].createdAt;\n      node.updatedAt = nodeHash[node.id].updatedAt;\n      node.description = nodeHash[node.id].description;\n    }\n  });\n\n  console.log('nodes', nodes);\n  console.log('edges', edges);\n  console.log('nodeHash', nodeHash);\n\n  createForceNetwork(nodes, edges);\n}\n\nfunction modularityCensus(nodes, edges /* , moduleHash */) {\n  edges.forEach(edge => {\n    if (edge.source.module !== edge.target.module) {\n      edge.border = true;\n    } else {\n      edge.border = false;\n    }\n  });\n  nodes.forEach(node => {\n    const theseEdges = edges.filter(d => d.source === node || d.target === node);\n\n    const theseSourceModules = theseEdges.map(d => d.source.module).filter(onlyUnique);\n    const theseTargetModules = theseEdges.map(d => d.target.module).filter(onlyUnique);\n\n    if (theseSourceModules.length > 1 || theseTargetModules.length > 1) {\n      node.border = true;\n    } else {\n      node.border = false;\n    }\n  });\n}\n\nfunction createForceNetwork(nodes, edges) {\n  // create a network from an edgelist\n  // var colors = d3.scale.ordinal().domain([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]).range(['#996666', '#66CCCC', '#FFFF99', '#CC9999', '#666633', '#993300', '#999966', '#660000', '#996699', '#cc6633', '#ff9966', '#339999', '#6699cc', '#ffcc66', '#ff6600', '#00ccccc']);\n  const colors = d3.scale.category20();\n\n  const nodeData = nodes.map(d => d.id);\n  const edgeData = edges.map(function (d) {\n    return {\n      source: d.source.id,\n      target: d.target.id,\n      weight: 1\n    };\n  });\n\n  console.log('nodeData for jLouvain', nodeData, 'nodes', nodeData.length);\n  console.log('edgeData for jLouvain', edgeData, 'edges', edgeData.length);\n\n  const community = jLouvain().nodes(nodeData).edges(edgeData);\n  const result = community();\n\n  console.log('jLouvain result', result);\n\n  nodes.forEach(node => {\n    node.module = result[node.id];\n    // console.log('node.module', node.module)\n  });\n\n  modularityCensus(nodes, edges, result);\n\n  const force = d3.layout.force().nodes(nodes).links(edges)\n    .size([minSide, minSide]) // make a square  // minSide, minSide\n    .charge(-100)\n    .chargeDistance(100)\n    .linkStrength(2)\n    .linkDistance(1)\n    .gravity(0.07);\n\n  const nodeEnter = d3.select('svg.main').selectAll('g.node')\n    .data(nodes, d => d.id)\n    .enter();\n\n  nodeEnter\n    .append('a')\n      .attr('xlink:href', d => `http://bl.ocks.org/${d.user}/${d.id}`)\n      .attr('target', '_blank')\n      .attr('id', d => d.id)\n      // .attr('target', '_blank')\n    .append('circle')\n      .attr('r', 3)\n      .attr('class', 'foreground')\n      .style('fill', d => colors(d.module))\n      .style('stroke-width', d => {\n        if (d.border) return '3px';\n        return '1px';\n      })\n      .on('mouseover', d => nodeMouseover(d))\n      .on('mouseout', () => nodeMouseout());\n\n      /*\n        // draw labels over nodes\n        nodeEnter.append('text')\n        .style('text-anchor', 'middle')\n        .attr('y', 3)\n        .style('stroke-width', '1px')\n        .style('stroke-opacity', 0.75)\n        .style('stroke', 'white')\n        .style('font-size', '8px')\n        .text(function (d) {return d.id})\n        .style('pointer-events', 'none')\n\n        nodeEnter.append('text')\n        .style('text-anchor', 'middle')\n        .attr('y', 3)\n        .style('font-size', '8px')\n        .text(function (d) {return d.id})\n        .style('pointer-events', 'none')\n      */\n  \n  force.start();\n\n  for (let i = 0; i < 200; i++) {\n    force.tick();\n  }\n\n  // draw the network at each tick\n  // force.on('tick', updateNetwork);\n\n  // after 200 iterations, we say the network \n  // has stabilized and we stop the \n  // force layout physics simulation\n  force.stop();\n\n  // now we draw the network\n  updateNetwork(edges);\n  // drawVoronoiOverlay();\n\n  function updateNetwork(edgesToUpdate) {\n    // // draw the links\n    // d3.select('svg.main').selectAll('line')\n    //   .attr('x1', d => d.source.x)\n    //   .attr('y1', d => d.source.y)\n    //   .attr('x2', d => d.target.x)\n    //   .attr('y2', d => d.target.y)\n    //   .attr('transform', 'translate(' + xOffset + ',' + yOffset +')');\n\n    const context = d3.select('canvas').node().getContext('2d');\n    context.clearRect(0, 0, width, height);\n    context.translate(xOffset, yOffset);\n\n    // draw links (or edges, if you prefer)\n    context.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n    context.beginPath();\n    edgesToUpdate.forEach(d => {\n      context.moveTo(d.source.x, d.source.y);\n      context.lineTo(d.target.x, d.target.y);\n    });\n    context.stroke();\n\n    // draw the nodes\n    d3.select('svg.main').selectAll('circle')\n      .attr('cx', d => d.x)\n      .attr('cy', d => d.y)\n      .attr('transform', `translate(${xOffset}, ${yOffset})`);\n  }\n\n  function drawVoronoiOverlay() {\n    const rawPoints = [];\n    nodes.forEach(d => {\n      rawPoints.push({\n        x: d.x,\n        y: d.y,\n        id: d.id,\n        user: d.user,\n        description: d.description\n      });\n    });\n\n    const voronoi = d3.geom.voronoi();\n\n    voronoi\n      .x(d => d.x)\n      .y(d => d.y)\n      .clipExtent([[-10 - xOffset, -10 - yOffset], [width + 10, height + 10]]);\n\n    voronoiData = voronoi(rawPoints);\n    voronoiData = voronoiData.map(function (d, i) {\n      return {\n        coordinates: d,\n        data: rawPoints[i]\n      };\n    });\n\n    console.log('voronoiData', voronoiData);\n\n    const voronoiPaths = d3.select('svg.main').selectAll('path.voronoi')\n      .data(voronoiData)\n      .enter()\n      .insert('path')\n    .attr('class', 'voronoi')\n      .style('stroke', 'none')\n      .style('stroke-width', '1px')\n      .style('fill', 'white')\n      .style('fill-opacity', 0)\n      .attr('d', d => `M${d.coordinates.join('L')}Z`)\n      .attr('transform', `translate(${xOffset}, ${yOffset})`);\n\n    voronoiPaths\n      .on('mouseover', d => nodeMouseover(d))\n      .on('click', d => nodeClick(d))\n      .on('mouseout', () => nodeMouseout());\n  }\n\n  function nodeMouseover(d) {\n    console.log('nodeHash', nodeHash);\n    // allow nodeMousever to be called in different contexts\n    // either from the node circle or from the Voronoi path\n    let id;\n    let user;\n    let description;\n    const dH = 30;\n    if (typeof d.data === 'undefined') {\n      id = d.id;\n      user = nodeHash[d.id].user;\n      description = nodeHash[d.id].description;\n    }\n    else {\n      id = d.data.id;\n      user = d.data.user;\n      d.data.description;\n    }     \n    const blockUrl = `http://bl.ocks.org/${user}/${id}`\n\n    // generate nice text to display on the small canvas below the thumbnail image\n    let blockTitleText;\n    if (\n      ['undefined', 'null'].indexOf(String(user)) === -1  && \n      ['undefined', 'null'].indexOf(String(description)) === -1\n    ) {\n      blockTitleText = `${user} | ${description}`\n    } \n    if (\n      ['undefined', 'null'].indexOf(String(user)) === -1  && \n      ['undefined', 'null'].indexOf(String(description)) > -1\n    ) {\n      blockTitleText = user;\n    }\n    if (\n      ['undefined', 'null'].indexOf(String(user)) > -1  && \n      ['undefined', 'null'].indexOf(String(description)) === -1\n    ) {\n      blockTitleText = description;\n    }\n    if (\n      ['undefined', 'null'].indexOf(String(user)) > -1  && \n      ['undefined', 'null'].indexOf(String(description)) > -1\n    ) {\n      blockTitleText = '';\n    }\n\n    console.log(blockUrl);\n    console.log(blockTitleText);\n    \n   // const cardDiv = d3.select(detailDiv).append('div')\n   //     .attr('id', `card${id}`)\n   //     .append('a')\n   //     .attr('xlink:href', d => `http://bl.ocks.org/${user}/${id}`)\n   //     .innerHTML(blockTitleText);\n\n    //if (cardsDisplayed.length > 10) {\n    //  d3.selectAll('.cards')\n    //    .attr('transform', `translate(0,${15 * (cardsOnPage.length-1)})`);\n    //}\n\n    // draw a rectangle\n    const detailG = detailSVG.append('a')\n      .attr('xlink:href', blockUrl)\n      .attr('target', '_blank')\n      .attr('id', `card${id}`)\n      .classed('cards', true)\n      .append('rect')\n      //.classed('cards', true)\n      .attr('id', `card${id}`) \n      .attr('x', 0)\n      .attr('y', 5 + dH * cardsOnPage.length)\n      .attr('height', dH)\n      .attr('width', detailDiv.clientWidth)\n      .style('stroke-width', 1)\n      .style('stroke', 'white')\n      .style('fill', 'lightgray')\n      .style('fill-opacity', .4)\n      .attr('rx', 4)\n      .attr('ry', 4);\n    \n    // draw text on the screen\n    detailSVG.append('text')\n      .attr('x', 10)\n      .attr('y', 5 + dH * cardsOnPage.length)\n      .classed('cards', true)\n      .attr('id', `card${id}`)\n      .style('fill', 'black')\n      .style('font-size', '16px')\n      .attr('dy', '20px')\n      .attr('text-anchor', 'start')\n      .style('pointer-events', 'none')\n      .text(blockTitleText);\n\n    console.log('cardsOnPage', cardsOnPage);\n    console.log('cardsOnPage.length', cardsOnPage.length);\n    if (false/*cardsDisplayed.length > 10*/) {\n      const lastCardId = cardsOnPage[cardsOnPage.length - 1];\n      const firstCardId = cardsOnPage[0];\n\n      const cardSelector = `div#card${firstCardId}`.replace(/[,.]/g, '');\n      d3.select(cardSelector)\n        .remove();\n\n      // d3.selectAll('.cards')\n      //   .attr('transform', `translate(0,-15)`);\n\n      //cardsOnPage.pop();\n      cardsOnPage.shift();\n      //if(cardsOnPage.indexOf(id) > -1) cardsOnPage = removeByValue(cardsOnPage, id);\n    }\n\n    cardsOnPage.push(id);\n    cardsDisplayed.push(id);\n\n    d3.select(vizDiv).select('svg').append('text')\n      .attr('x', 100)\n      .attr('y', 100)\n      .classed('titleText', true)\n      .style('fill', 'black')\n      .style('fill-opacity', 0.8)\n      .style('font-size', '60px')\n      .style('font-weight', 600)\n      .attr('dy', '0px')\n      .attr('text-anchor', 'start')\n      .style('pointer-events', 'none')\n      .text(blockTitleText);\n  }\n\n  function nodeMouseout() {\n    d3.selectAll('.titleText')\n      .remove();\n  }\n\n  // http://stackoverflow.com/a/11223909/1732222\n  function ImageExist(url) \n  {\n     var img = new Image();\n     img.src = url;\n     return img.height != 0;\n  }\n\n  // http://stackoverflow.com/a/3955096/1732222\n  function removeByValue(arr) {\n    var what, a = arguments, L = a.length, ax;\n    while (L > 1 && arr.length) {\n        what = a[--L];\n        while ((ax= arr.indexOf(what)) !== -1) {\n            arr.splice(ax, 1);\n        }\n    }\n    return arr;\n  }\n\n  function nodeClick(d) {\n    const user = d.data.user;\n    const id = d.data.id;\n    const blockUrl = `http://bl.ocks.org/${user}/${id}`\n    openInNewTab(blockUrl);\n  }\n\n  // http://stackoverflow.com/a/11384018/1732222\n  function openInNewTab(url) {\n    const win = window.open(url, '_blank');\n    win.focus();\n  }\n}\n    </script>\n  </body>\n</html>", "description": "Blocks Graph IV - d3.oakland talk", "created_at": "2016-05-11T07:10:39Z", "updated_at": "2016-05-11T17:36:24Z", "api": ["d3.select", "d3.min", "d3.json", "d3.scale.ordinal", "d3.scale.category20", "d3.layout.force", "d3.geom.voronoi", "d3.selectAll"], "readme": "an updated look at `README.md` files from [bl.ocks.org](http://bl.ocks.org/) that contain links to other bl.ocks. These data gathered in early May 2016.\n\nclick on a node to view that bl.ock  \n\ncommunity detection done with the [jLouvain](https://github.com/upphiminn/jLouvain) library\n\nsource data and scripts used to generate the graph data are at [this repository](https://github.com/micahstubbs/readme-vis)\n\na lineage of bl.ocks that informed this idea:\n\n* [Adding links to objects](http://bl.ocks.org/d3noob/8150631) from [d3noob](http://bl.ocks.org/d3noob)\n* [Canvas Links + SVG Nodes](http://bl.ocks.org/micahstubbs/5246b8a643393f0753a11b98129a3237) from [micahstubbs](http://bl.ocks.org/micahstubbs)\n* [Blocks Graph I Readme Mentions](http://bl.ocks.org/micahstubbs/8a173cfcb9171627c7f1) from [micahstubbs](http://bl.ocks.org/micahstubbs)\n* [all the blocks](http://bl.ocks.org/enjalot/6ac67b0d8ed673c9aa61) from [enjalot](http://bl.ocks.org/enjalot)\n* [Networks - Graphs 7](http://bl.ocks.org/emeeks/f2f6883ac7c965d09b90) from [emeeks](http://bl.ocks.org/emeeks)\n* [Blocks Graph](http://bl.ocks.org/curran/1da93bab4cdc708f41ae) from [curran](http://bl.ocks.org/curran)\n* [Blocks Graph Edges Only](http://bl.ocks.org/curran/daf6bc9db8b0a28e3973) from [curran](http://bl.ocks.org/curran)\n* [Blocks Graph with Links](http://bl.ocks.org/curran/be4a45ec74357e7d9b10) from [curran](http://bl.ocks.org/curran)\n* [Dynamic Size](http://bl.ocks.org/curran/db1e524cae5e4344b2e6) from [curran](http://bl.ocks.org/curran)\n* [Ch. 11, Fig. 10 - D3.js in Action](http://bl.ocks.org/emeeks/e330141d1279c6115a3a) from [emeeks](http://bl.ocks.org/emeeks)\n\n\n", "uid": "micahstubbs_948378950dd7b3e31e8cda3b33ebbcc8"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 3px;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n}\n\n</style>\n<svg width=\"960\" height=\"500\">\n  <rect style=\"fill:#fff;\" width=\"100%\" height=\"100%\"></rect>\n</svg>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar activeLine;\n\nvar renderPath = d3.svg.line()\n    .x(function(d) { return d[0]; })\n    .y(function(d) { return d[1]; })\n    .interpolate(\"basis\");\n\nvar svg = d3.select(\"svg\")\n    .call(d3.behavior.drag()\n      .on(\"dragstart\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"dragend\", dragended));\n\nfunction dragstarted() {\n  activeLine = svg.append(\"path\").datum([]).attr(\"class\", \"line\");\n}\n\nfunction dragged() {\n  activeLine.datum().push(d3.mouse(this));\n  activeLine.attr(\"d\", renderPath);\n}\n\nfunction dragended() {\n  activeLine = null;\n}\n\n</script>\n", "description": "Line Drawing", "created_at": "2016-02-26T23:28:09Z", "updated_at": "2016-02-26T23:28:09Z", "api": ["d3.svg.line", "d3.select", "d3.behavior.drag", "d3.mouse"], "readme": "Click and drag (or touch) to draw a line.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/f705fc55e6f26df29354'>Line Drawing</a>", "uid": "ninestar09_39e32b697d31e979040d"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 3px;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n}\n\n</style>\n<svg width=\"960\" height=\"500\">\n  <rect style=\"fill:#fff;\" width=\"100%\" height=\"100%\"></rect>\n</svg>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar activeLine;\n\nvar renderPath = d3.svg.line()\n    .x(function(d) { return d[0]; })\n    .y(function(d) { return d[1]; })\n    .interpolate(\"basis\");\n\nvar svg = d3.select(\"svg\")\n    .call(d3.behavior.drag()\n      .on(\"dragstart\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"dragend\", dragended));\n\nfunction dragstarted() {\n  activeLine = svg.append(\"path\").datum([]).attr(\"class\", \"line\");\n}\n\nfunction dragged() {\n  activeLine.datum().push(d3.mouse(this));\n  activeLine.attr(\"d\", renderPath);\n} \n\nfunction dragended() {\n  console.log(activeLine.datum());  \n  activeLine = null;\n}\n  \n\n</script>\n", "description": "Line Drawing PRAC", "created_at": "2016-04-07T16:50:19Z", "updated_at": "2016-04-07T16:53:52Z", "api": ["d3.svg.line", "d3.select", "d3.behavior.drag", "d3.mouse"], "readme": "Click and drag (or touch) to draw a line.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/f705fc55e6f26df29354'>Line Drawing PRAC</a>", "uid": "caHaber_6f3c3cdf063f22cd98b040477488c8df"}, {"code": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n\n.line {\n  fill: red; \n  stroke: #000;\n  stroke-width: 3px;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n}\n\n</style>\n<svg width=\"960\" height=\"500\">\n  <rect style=\"fill:#fff;\" width=\"100%\" height=\"100%\"></rect>\n</svg>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar activeLine;\n\nvar renderPath = d3.svg.line() \n    .x(function(d) { return d[0]; })\n    .y(function(d) { return d[1]; })\n    .interpolate(\"basis\");\n\nvar svg = d3.select(\"svg\")\n    .call(d3.behavior.drag()\n      .on(\"dragstart\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"dragend\", dragended));\n\nfunction dragstarted() {\n  activeLine = svg.append(\"path\").datum([]).attr(\"class\", \"line\");\n}\n\nfunction dragged() {\n  activeLine.datum().push(d3.mouse(this));\n  activeLine.attr(\"d\", renderPath);\n}\n\nfunction dragended() {\n  activeLine = null;\n  svg.select(\"path\").transition().attr(\"fill\",\"orange\");\n}\n\n</script>\n", "description": "Line Drawing", "created_at": "2016-05-06T00:11:45Z", "updated_at": "2016-05-16T19:35:12Z", "api": ["d3.svg.line", "d3.select", "d3.behavior.drag", "d3.mouse"], "readme": "Click and drag (or touch) to draw a line.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/f705fc55e6f26df29354'>Line Drawing</a>", "uid": "caHaber_315b9fe31effcfa9d06e8522cd354e18"}, {"code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>D3 nest examples</title>\n    <script src=\"http://d3js.org/d3.v2.js\"></script>\n    <script src=\" https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\n    <link href='http://fonts.googleapis.com/css?family=Tienne' rel='stylesheet' type='text/css'>\n\n    <style>\n        body {\n            font-family: 'Tienne', serif;\n            font-size: 12px;\n        }\n    </style>\n\n</head>\n<body>\n<h1>D3 Nest Tutorial and examples</h1>\n<p>Here is my learning process for getting to grips with nest.  Discovered the d3 tests half way through which were a great help: <a href=\"https://github.com/mbostock/d3/blob/master/test/core/nest-test.js\">tests</a></p><h2>Simple one level nest</h2>\n<p>In Bl.ocks.org, click on \"Open in a New Window\" (bottom right) to view all the examples</p>\n<p>Group by status</p>\n<code>var nested_data = d3.nest()<br />\n               .key(function(d)  { return d.status; })<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex1\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Simple two level nest</h2>\n<p>Group by status then priority</p>\n<code>var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; })<br />\n    .key(function(d) { return d.priority; })<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex2\" rows=\"15\" cols=\"90\"></textarea>\n\n\n<h2>Use rollup to count leaves</h2>\n<p>The leaf level is replaced by a value at the parent level</p>\n<code>var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; })<br />\n    .key(function(d) { return d.priority; })<br />\n    .rollup(function(leaves) { return leaves.length; })<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex3\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Rollup does sums as well</h2>\n<p>Can't have two rollups, but can return an object/array</p>\n<code>var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; })<br />\n    .key(function(d) { return d.priority; })<br />\n    .rollup(function(leaves) {\n        return {\"length\": leaves.length,\n        \"total_time\": d3.sum(leaves, function(d) {return parseFloat(d.time);})} })<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex4\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Rollup everything to get a grand total of number of lines</h2>\n<p>No key</p>\n<code>var nested_data = d3.nest()<br />\n    .rollup(function(leaves) { return leaves.length; })<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex9\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Sorting</h2>\n<p>Each level can be sorted by key - a simple ascending or descending...</p>\n<code>var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; }).sortKeys(d3.ascending)<br />\n    .key(function(d) { return d.priority; }).sortKeys(function(d) { return )<br />\n    .rollup(function(leaves) { return leaves.length; })<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex5\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Sorting - custom order</h2>\n<p>Status, fortuitously, can be sorted in straing ascending order, but Priority requires a custom order.  Create an list in the order you want and use indexOf to create the order comparaitor function.</p>\n<code>\n    var priority_order = ['MUST', \"SHOULD\", 'COULD', 'WISH'];<br />\n    var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; }).sortKeys(d3.ascending)<br />\n    .key(function(d) { return d.priority; }).sortKeys(function(a,b) { return priority_order.indexOf(a) - priority_order.indexOf(b); })<br />\n    .rollup(function(leaves) { return leaves.length; })<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex6\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Sorting - sort the leaves as well</h2>\n<p>Use sortValue to sort the leaves - sort by time with smallest first</p>\n<code>\n    var priority_order = ['MUST', \"SHOULD\", 'COULD', 'WISH'];<br />\n    var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; }).sortKeys(d3.ascending)<br />\n    .key(function(d) { return d.priority; }).sortKeys(function(a,b) { return priority_order.indexOf(a) - priority_order.indexOf(b); })<br />\n    .sortValues(function(a,b) { return parseFloat(a.time) - parseFloat(b.time); } }<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex7\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Sorting - sort the leaves as well</h2>\n<p>Use sortValue to sort the leaves - sort by person this time.</p>\n<code>\n    var priority_order = ['MUST', \"SHOULD\", 'COULD', 'WISH'];<br />\n    var nested_data = d3.nest()<br />\n    .key(function(d) { return d.status; }).sortKeys(d3.ascending)<br />\n    .key(function(d) { return d.priority; }).sortKeys(function(a,b) { return priority_order.indexOf(a) - priority_order.indexOf(b); })<br />\n    .sortValues(function(a,b) { return ((a.who < b.who)<br />\n    ?  -1<br />\n    :  1);<br />\n    return 0;} )<br />\n    .entries(csv_data);<br />\n</code>\n<textarea id=\"ex8\" rows=\"15\" cols=\"90\"></textarea>\n\n<h2>Populate a Select list from csv data</h2>\n<p>Use nest to get a unique list of people then create a select from it.</p>\n<code>\n    var nested_data = d3.nest()<br />\n    .key(function(d) { return d.who}).sortKeys(d3.ascending)<br />\n    .rollup(function(leaves) { return leaves.length; })<br />\n    .entries(csv_data);<br />\n    <br />\n    var list = d3.select(\"#ex10\").append(\"select\")<br />\n    <br />\n    list.selectAll(\"option\")<br />\n    .data(nested_data)<br />\n    .enter()<br />\n    .append(\"option\")<br />\n    .attr(\"value\", function(d) {return d.key;})<br />\n    .text(function(d) {<br />\n    return d.key; });<br />\n    <br />\n</code>\n<div id=\"ex10\">\n\n</div>\n\n\n<script>\n    d3.csv(\"./data.csv\", function(csv_data){\n\n        var nested_data = d3.nest()\n                .key(function(d)  { return d.status; })\n                .entries(csv_data);\n\n\n        $(\"#ex1\").html(JSON.stringify(nested_data, null, 3));\n\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; })\n                .key(function(d) { return d.priority; })\n                .entries(csv_data);\n\n\n        $(\"#ex2\").html(JSON.stringify(nested_data, null, 3));\n\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; })\n                .key(function(d) { return d.priority; })\n                .rollup(function(leaves) { return leaves.length; })\n                .entries(csv_data);\n\n\n        $(\"#ex3\").html(JSON.stringify(nested_data, null, 3));\n\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; })\n                .key(function(d) { return d.priority; })\n                .rollup(function(leaves) {\n                    return {\"length\": leaves.length,\n                        \"total_time\": d3.sum(leaves, function(d) {return parseFloat(d.time);})} })\n                .entries(csv_data);\n\n\n        $(\"#ex4\").html(JSON.stringify(nested_data, null, 3));\n\n\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; }).sortKeys(d3.ascending)\n                .key(function(d) { return d.priority; }).sortKeys(d3.descending)\n                .rollup(function(leaves) { return leaves.length; })\n                .entries(csv_data);\n\n\n        $(\"#ex5\").html(JSON.stringify(nested_data, null, 3));\n\n        var priority_order = ['MUST', \"SHOULD\", 'COULD', 'WISH'];\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; }).sortKeys(d3.ascending)\n                .key(function(d) { return d.priority; }).sortKeys(function(a,b) { return priority_order.indexOf(a) - priority_order.indexOf(b); })\n                .rollup(function(leaves) { return leaves.length; })\n                .entries(csv_data);\n\n\n        $(\"#ex6\").html(JSON.stringify(nested_data, null, 3));\n\n        var priority_order = ['MUST', \"SHOULD\", 'COULD', 'WISH'];\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; }).sortKeys(d3.ascending)\n                .key(function(d) { return d.priority; }).sortKeys(function(a,b) { return priority_order.indexOf(a) - priority_order.indexOf(b); })\n                .sortValues(function(a,b) { return parseFloat(a.time) - parseFloat(b.time); } )\n                .entries(csv_data);\n\n\n        $(\"#ex7\").html(JSON.stringify(nested_data, null, 3));\n\n        var priority_order = ['MUST', \"SHOULD\", 'COULD', 'WISH'];\n        var nested_data = d3.nest()\n                .key(function(d) { return d.status; }).sortKeys(d3.ascending)\n                .key(function(d) { return d.priority; }).sortKeys(function(a,b) { return priority_order.indexOf(a) - priority_order.indexOf(b); })\n                .sortValues(function(a,b) { return ((a.who < b.who)\n                    ?  -1\n                    :  1);\n                    return 0;} )\n                .entries(csv_data);\n\n\n        $(\"#ex8\").html(JSON.stringify(nested_data, null, 3));\n\n        var nested_data = d3.nest()\n                .rollup(function(leaves) { return leaves.length; })\n                .entries(csv_data);\n\n\n        $(\"#ex9\").html(JSON.stringify(nested_data, null, 3));\n\n        var nested_data = d3.nest()\n                .key(function(d) { return d.who}).sortKeys(d3.ascending)\n                .rollup(function(leaves) { return leaves.length; })\n                .entries(csv_data);\n\n        var list = d3.select(\"#ex10\").append(\"select\")\n\n        list.selectAll(\"option\")\n                .data(nested_data)\n                .enter()\n                .append(\"option\")\n                .attr(\"value\", function(d) {return d.key;})\n                .text(function(d) {\n                    return d.key; });\n    });\n\n\n\n</script>\n</body>\n</html>\n", "description": "D3 using nest on csv data", "created_at": "2012-07-25T13:21:20Z", "updated_at": "2016-04-07T02:03:58Z", "api": ["d3.nest", "d3.sum", "d3.select", "d3.csv"], "readme": "", "uid": "phoebebright_3176159"}], "links": [{"source": "erlenstar_11295915", "value": 16, "target": "d3noob_5d621a60e2d1d02086bf", "links": [{"target_end_line": 36, "source_start_line": 23, "source_end_line": 36, "source_confidence": 16, "target_start_line": 31, "target_confidence": 15}, {"target_end_line": 7, "source_start_line": 6, "source_end_line": 7, "source_confidence": 16, "target_start_line": 10, "target_confidence": 15}, {"target_end_line": 36, "source_start_line": 23, "source_end_line": 36, "source_confidence": 16, "target_start_line": 31, "target_confidence": 15}, {"target_end_line": 7, "source_start_line": 6, "source_end_line": 7, "source_confidence": 16, "target_start_line": 10, "target_confidence": 15}]}, {"source": "larsenmtl_86077bddc91c3de8d3db6a53216b2f47", "value": 14, "target": "emilyinamillion_29e916ccb9b281716aeb52e943c6d25c", "links": [{"target_end_line": 36, "source_start_line": 12, "source_end_line": 36, "source_confidence": 16, "target_start_line": 16, "target_confidence": 12}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 16, "target_start_line": 9, "target_confidence": 12}, {"target_end_line": 36, "source_start_line": 12, "source_end_line": 36, "source_confidence": 16, "target_start_line": 16, "target_confidence": 12}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 16, "target_start_line": 9, "target_confidence": 12}]}, {"source": "vjpgo_4687681", "value": 13, "target": "cloudshapes_5661984", "links": [{"target_end_line": 21, "source_start_line": 12, "source_end_line": 21, "source_confidence": 58, "target_start_line": 16, "target_confidence": 38}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 58, "target_start_line": 7, "target_confidence": 38}, {"target_end_line": 21, "source_start_line": 12, "source_end_line": 21, "source_confidence": 58, "target_start_line": 16, "target_confidence": 38}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 58, "target_start_line": 7, "target_confidence": 38}]}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 16, "target": "veltman_f539d97e922b918d47e2b2d1a8bcd2dd", "links": [{"target_end_line": 11, "source_start_line": 24, "source_end_line": 29, "source_confidence": 32, "target_start_line": 7, "target_confidence": 18}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 32, "target_start_line": 1, "target_confidence": 18}, {"target_end_line": 21, "source_start_line": 12, "source_end_line": 16, "source_confidence": 32, "target_start_line": 16, "target_confidence": 18}, {"target_end_line": 11, "source_start_line": 24, "source_end_line": 29, "source_confidence": 32, "target_start_line": 7, "target_confidence": 18}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 32, "target_start_line": 1, "target_confidence": 18}, {"target_end_line": 21, "source_start_line": 12, "source_end_line": 16, "source_confidence": 32, "target_start_line": 16, "target_confidence": 18}, {"target_end_line": 11, "source_start_line": 24, "source_end_line": 29, "source_confidence": 32, "target_start_line": 7, "target_confidence": 18}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 32, "target_start_line": 1, "target_confidence": 18}, {"target_end_line": 21, "source_start_line": 12, "source_end_line": 16, "source_confidence": 32, "target_start_line": 16, "target_confidence": 18}]}, {"source": "jasondavies_3689931", "value": 22, "target": "mbostock_3902569", "links": [{"target_end_line": 34, "source_start_line": 34, "source_end_line": 38, "source_confidence": 20, "target_start_line": 30, "target_confidence": 24}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 20, "target_start_line": 1, "target_confidence": 24}, {"target_end_line": 58, "source_start_line": 77, "source_end_line": 86, "source_confidence": 20, "target_start_line": 49, "target_confidence": 24}, {"target_end_line": 34, "source_start_line": 34, "source_end_line": 38, "source_confidence": 20, "target_start_line": 30, "target_confidence": 24}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 20, "target_start_line": 1, "target_confidence": 24}, {"target_end_line": 58, "source_start_line": 77, "source_end_line": 86, "source_confidence": 20, "target_start_line": 49, "target_confidence": 24}, {"target_end_line": 34, "source_start_line": 34, "source_end_line": 38, "source_confidence": 20, "target_start_line": 30, "target_confidence": 24}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 20, "target_start_line": 1, "target_confidence": 24}, {"target_end_line": 58, "source_start_line": 77, "source_end_line": 86, "source_confidence": 20, "target_start_line": 49, "target_confidence": 24}]}, {"source": "d3noob_a0cbcddc6bf0eb9569fe", "value": 14, "target": "trinary_b1a5f453c51231cd7bb5", "links": [{"target_end_line": 34, "source_start_line": 105, "source_end_line": 111, "source_confidence": 3, "target_start_line": 30, "target_confidence": 17}, {"target_end_line": 20, "source_start_line": 179, "source_end_line": 183, "source_confidence": 3, "target_start_line": 12, "target_confidence": 17}, {"target_end_line": 34, "source_start_line": 105, "source_end_line": 111, "source_confidence": 3, "target_start_line": 30, "target_confidence": 17}, {"target_end_line": 20, "source_start_line": 179, "source_end_line": 183, "source_confidence": 3, "target_start_line": 12, "target_confidence": 17}]}, {"source": "everett-wetchler_cfbdd529c138f98f65c4", "value": 40, "target": "scottkildall_fae5e4b640e78b12fe14", "links": [{"target_end_line": 62, "source_start_line": 56, "source_end_line": 69, "source_confidence": 58, "target_start_line": 49, "target_confidence": 32}, {"target_end_line": 22, "source_start_line": 16, "source_end_line": 26, "source_confidence": 58, "target_start_line": 13, "target_confidence": 32}, {"target_end_line": 41, "source_start_line": 47, "source_end_line": 53, "source_confidence": 58, "target_start_line": 35, "target_confidence": 32}, {"target_end_line": 9, "source_start_line": 7, "source_end_line": 14, "source_confidence": 58, "target_start_line": 2, "target_confidence": 32}, {"target_end_line": 62, "source_start_line": 56, "source_end_line": 69, "source_confidence": 58, "target_start_line": 49, "target_confidence": 32}, {"target_end_line": 22, "source_start_line": 16, "source_end_line": 26, "source_confidence": 58, "target_start_line": 13, "target_confidence": 32}, {"target_end_line": 41, "source_start_line": 47, "source_end_line": 53, "source_confidence": 58, "target_start_line": 35, "target_confidence": 32}, {"target_end_line": 9, "source_start_line": 7, "source_end_line": 14, "source_confidence": 58, "target_start_line": 2, "target_confidence": 32}, {"target_end_line": 62, "source_start_line": 56, "source_end_line": 69, "source_confidence": 58, "target_start_line": 49, "target_confidence": 32}, {"target_end_line": 22, "source_start_line": 16, "source_end_line": 26, "source_confidence": 58, "target_start_line": 13, "target_confidence": 32}, {"target_end_line": 41, "source_start_line": 47, "source_end_line": 53, "source_confidence": 58, "target_start_line": 35, "target_confidence": 32}, {"target_end_line": 9, "source_start_line": 7, "source_end_line": 14, "source_confidence": 58, "target_start_line": 2, "target_confidence": 32}, {"target_end_line": 62, "source_start_line": 56, "source_end_line": 69, "source_confidence": 58, "target_start_line": 49, "target_confidence": 32}, {"target_end_line": 22, "source_start_line": 16, "source_end_line": 26, "source_confidence": 58, "target_start_line": 13, "target_confidence": 32}, {"target_end_line": 41, "source_start_line": 47, "source_end_line": 53, "source_confidence": 58, "target_start_line": 35, "target_confidence": 32}, {"target_end_line": 9, "source_start_line": 7, "source_end_line": 14, "source_confidence": 58, "target_start_line": 2, "target_confidence": 32}]}, {"source": "YasufumiSaito_35b59c0b074cac700798", "value": 29, "target": "enjalot_1fd196cd99f8d58a56d3", "links": [{"target_end_line": 28, "source_start_line": 32, "source_end_line": 39, "source_confidence": 37, "target_start_line": 21, "target_confidence": 22}, {"target_end_line": 21, "source_start_line": 23, "source_end_line": 32, "source_confidence": 37, "target_start_line": 17, "target_confidence": 22}, {"target_end_line": 37, "source_start_line": 43, "source_end_line": 48, "source_confidence": 37, "target_start_line": 32, "target_confidence": 22}, {"target_end_line": 42, "source_start_line": 49, "source_end_line": 53, "source_confidence": 37, "target_start_line": 38, "target_confidence": 22}, {"target_end_line": 28, "source_start_line": 32, "source_end_line": 39, "source_confidence": 37, "target_start_line": 21, "target_confidence": 22}, {"target_end_line": 21, "source_start_line": 23, "source_end_line": 32, "source_confidence": 37, "target_start_line": 17, "target_confidence": 22}, {"target_end_line": 37, "source_start_line": 43, "source_end_line": 48, "source_confidence": 37, "target_start_line": 32, "target_confidence": 22}, {"target_end_line": 42, "source_start_line": 49, "source_end_line": 53, "source_confidence": 37, "target_start_line": 38, "target_confidence": 22}, {"target_end_line": 28, "source_start_line": 32, "source_end_line": 39, "source_confidence": 37, "target_start_line": 21, "target_confidence": 22}, {"target_end_line": 21, "source_start_line": 23, "source_end_line": 32, "source_confidence": 37, "target_start_line": 17, "target_confidence": 22}, {"target_end_line": 37, "source_start_line": 43, "source_end_line": 48, "source_confidence": 37, "target_start_line": 32, "target_confidence": 22}, {"target_end_line": 42, "source_start_line": 49, "source_end_line": 53, "source_confidence": 37, "target_start_line": 38, "target_confidence": 22}, {"target_end_line": 28, "source_start_line": 32, "source_end_line": 39, "source_confidence": 37, "target_start_line": 21, "target_confidence": 22}, {"target_end_line": 21, "source_start_line": 23, "source_end_line": 32, "source_confidence": 37, "target_start_line": 17, "target_confidence": 22}, {"target_end_line": 37, "source_start_line": 43, "source_end_line": 48, "source_confidence": 37, "target_start_line": 32, "target_confidence": 22}, {"target_end_line": 42, "source_start_line": 49, "source_end_line": 53, "source_confidence": 37, "target_start_line": 38, "target_confidence": 22}]}, {"source": "mbostock_3306147", "value": 13, "target": "jasondavies_3689931", "links": [{"target_end_line": 38, "source_start_line": 12, "source_end_line": 38, "source_confidence": 68, "target_start_line": 16, "target_confidence": 16}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 68, "target_start_line": 8, "target_confidence": 16}, {"target_end_line": 38, "source_start_line": 12, "source_end_line": 38, "source_confidence": 68, "target_start_line": 16, "target_confidence": 16}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 68, "target_start_line": 8, "target_confidence": 16}]}, {"source": "git-ashish_8959381", "value": 12, "target": "mpmckenna8_9179084", "links": [{"target_end_line": 26, "source_start_line": 11, "source_end_line": 15, "source_confidence": 18, "target_start_line": 22, "target_confidence": 28}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 18, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 26, "source_start_line": 11, "source_end_line": 15, "source_confidence": 18, "target_start_line": 22, "target_confidence": 28}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 18, "target_start_line": 1, "target_confidence": 28}]}, {"source": "ariaz_c0593a62ab32d99da603", "value": 14, "target": "micahstubbs_d9f3cd0d926af7a5a1a8", "links": [{"target_end_line": 34, "source_start_line": 105, "source_end_line": 111, "source_confidence": 3, "target_start_line": 30, "target_confidence": 15}, {"target_end_line": 20, "source_start_line": 179, "source_end_line": 183, "source_confidence": 3, "target_start_line": 12, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 105, "source_end_line": 111, "source_confidence": 3, "target_start_line": 30, "target_confidence": 15}, {"target_end_line": 20, "source_start_line": 179, "source_end_line": 183, "source_confidence": 3, "target_start_line": 12, "target_confidence": 15}]}, {"source": "emeeks_b3db5feea1bd13611b20", "value": 40, "target": "everett-wetchler_cfbdd529c138f98f65c4", "links": [{"target_end_line": 69, "source_start_line": 49, "source_end_line": 62, "source_confidence": 32, "target_start_line": 56, "target_confidence": 58}, {"target_end_line": 26, "source_start_line": 13, "source_end_line": 22, "source_confidence": 32, "target_start_line": 16, "target_confidence": 58}, {"target_end_line": 53, "source_start_line": 35, "source_end_line": 41, "source_confidence": 32, "target_start_line": 47, "target_confidence": 58}, {"target_end_line": 14, "source_start_line": 2, "source_end_line": 9, "source_confidence": 32, "target_start_line": 7, "target_confidence": 58}, {"target_end_line": 69, "source_start_line": 49, "source_end_line": 62, "source_confidence": 32, "target_start_line": 56, "target_confidence": 58}, {"target_end_line": 26, "source_start_line": 13, "source_end_line": 22, "source_confidence": 32, "target_start_line": 16, "target_confidence": 58}, {"target_end_line": 53, "source_start_line": 35, "source_end_line": 41, "source_confidence": 32, "target_start_line": 47, "target_confidence": 58}, {"target_end_line": 14, "source_start_line": 2, "source_end_line": 9, "source_confidence": 32, "target_start_line": 7, "target_confidence": 58}, {"target_end_line": 69, "source_start_line": 49, "source_end_line": 62, "source_confidence": 32, "target_start_line": 56, "target_confidence": 58}, {"target_end_line": 26, "source_start_line": 13, "source_end_line": 22, "source_confidence": 32, "target_start_line": 16, "target_confidence": 58}, {"target_end_line": 53, "source_start_line": 35, "source_end_line": 41, "source_confidence": 32, "target_start_line": 47, "target_confidence": 58}, {"target_end_line": 14, "source_start_line": 2, "source_end_line": 9, "source_confidence": 32, "target_start_line": 7, "target_confidence": 58}, {"target_end_line": 69, "source_start_line": 49, "source_end_line": 62, "source_confidence": 32, "target_start_line": 56, "target_confidence": 58}, {"target_end_line": 26, "source_start_line": 13, "source_end_line": 22, "source_confidence": 32, "target_start_line": 16, "target_confidence": 58}, {"target_end_line": 53, "source_start_line": 35, "source_end_line": 41, "source_confidence": 32, "target_start_line": 47, "target_confidence": 58}, {"target_end_line": 14, "source_start_line": 2, "source_end_line": 9, "source_confidence": 32, "target_start_line": 7, "target_confidence": 58}]}, {"source": "scottkildall_fae5e4b640e78b12fe14", "value": 117, "target": "everett-wetchler_b9a20341f395466b0b5e", "links": [{"target_end_line": 144, "source_start_line": 35, "source_end_line": 144, "source_confidence": 90, "target_start_line": 133, "target_confidence": 80}, {"target_end_line": 25, "source_start_line": 13, "source_end_line": 25, "source_confidence": 90, "target_start_line": 22, "target_confidence": 80}, {"target_end_line": 14, "source_start_line": 2, "source_end_line": 14, "source_confidence": 90, "target_start_line": 9, "target_confidence": 80}, {"target_end_line": 144, "source_start_line": 35, "source_end_line": 144, "source_confidence": 90, "target_start_line": 133, "target_confidence": 80}, {"target_end_line": 25, "source_start_line": 13, "source_end_line": 25, "source_confidence": 90, "target_start_line": 22, "target_confidence": 80}, {"target_end_line": 14, "source_start_line": 2, "source_end_line": 14, "source_confidence": 90, "target_start_line": 9, "target_confidence": 80}, {"target_end_line": 144, "source_start_line": 35, "source_end_line": 144, "source_confidence": 90, "target_start_line": 133, "target_confidence": 80}, {"target_end_line": 25, "source_start_line": 13, "source_end_line": 25, "source_confidence": 90, "target_start_line": 22, "target_confidence": 80}, {"target_end_line": 14, "source_start_line": 2, "source_end_line": 14, "source_confidence": 90, "target_start_line": 9, "target_confidence": 80}]}, {"source": "malcolm-decuire_9f8e98a2481f61287ca3", "value": 49, "target": "enjalot_ce9a88c24e5e11563e06", "links": [{"target_end_line": 212, "source_start_line": 36, "source_end_line": 212, "source_confidence": 64, "target_start_line": 65, "target_confidence": 21}, {"target_end_line": 174, "source_start_line": 16, "source_end_line": 174, "source_confidence": 64, "target_start_line": 21, "target_confidence": 21}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 64, "target_start_line": 9, "target_confidence": 21}, {"target_end_line": 240, "source_start_line": 30, "source_end_line": 240, "source_confidence": 64, "target_start_line": 35, "target_confidence": 21}, {"target_end_line": 212, "source_start_line": 36, "source_end_line": 212, "source_confidence": 64, "target_start_line": 65, "target_confidence": 21}, {"target_end_line": 174, "source_start_line": 16, "source_end_line": 174, "source_confidence": 64, "target_start_line": 21, "target_confidence": 21}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 64, "target_start_line": 9, "target_confidence": 21}, {"target_end_line": 240, "source_start_line": 30, "source_end_line": 240, "source_confidence": 64, "target_start_line": 35, "target_confidence": 21}, {"target_end_line": 212, "source_start_line": 36, "source_end_line": 212, "source_confidence": 64, "target_start_line": 65, "target_confidence": 21}, {"target_end_line": 174, "source_start_line": 16, "source_end_line": 174, "source_confidence": 64, "target_start_line": 21, "target_confidence": 21}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 64, "target_start_line": 9, "target_confidence": 21}, {"target_end_line": 240, "source_start_line": 30, "source_end_line": 240, "source_confidence": 64, "target_start_line": 35, "target_confidence": 21}, {"target_end_line": 212, "source_start_line": 36, "source_end_line": 212, "source_confidence": 64, "target_start_line": 65, "target_confidence": 21}, {"target_end_line": 174, "source_start_line": 16, "source_end_line": 174, "source_confidence": 64, "target_start_line": 21, "target_confidence": 21}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 64, "target_start_line": 9, "target_confidence": 21}, {"target_end_line": 240, "source_start_line": 30, "source_end_line": 240, "source_confidence": 64, "target_start_line": 35, "target_confidence": 21}]}, {"source": "enjalot_1fd196cd99f8d58a56d3", "value": 64, "target": "malcolm-decuire_9f8e98a2481f61287ca3", "links": [{"target_end_line": 26, "source_start_line": 1, "source_end_line": 28, "source_confidence": 62, "target_start_line": 1, "target_confidence": 86}, {"target_end_line": 65, "source_start_line": 38, "source_end_line": 67, "source_confidence": 62, "target_start_line": 36, "target_confidence": 86}, {"target_end_line": 35, "source_start_line": 32, "source_end_line": 37, "source_confidence": 62, "target_start_line": 30, "target_confidence": 86}, {"target_end_line": 26, "source_start_line": 1, "source_end_line": 28, "source_confidence": 62, "target_start_line": 1, "target_confidence": 86}, {"target_end_line": 65, "source_start_line": 38, "source_end_line": 67, "source_confidence": 62, "target_start_line": 36, "target_confidence": 86}, {"target_end_line": 35, "source_start_line": 32, "source_end_line": 37, "source_confidence": 62, "target_start_line": 30, "target_confidence": 86}, {"target_end_line": 26, "source_start_line": 1, "source_end_line": 28, "source_confidence": 62, "target_start_line": 1, "target_confidence": 86}, {"target_end_line": 65, "source_start_line": 38, "source_end_line": 67, "source_confidence": 62, "target_start_line": 36, "target_confidence": 86}, {"target_end_line": 35, "source_start_line": 32, "source_end_line": 37, "source_confidence": 62, "target_start_line": 30, "target_confidence": 86}]}, {"source": "wrobstory_7630654", "value": 13, "target": "mbostock_8033015", "links": [{"target_end_line": 31, "source_start_line": 101, "source_end_line": 31, "source_confidence": 11, "target_start_line": 107, "target_confidence": 15}, {"target_end_line": 11, "source_start_line": 75, "source_end_line": 11, "source_confidence": 11, "target_start_line": 80, "target_confidence": 15}, {"target_end_line": 31, "source_start_line": 101, "source_end_line": 31, "source_confidence": 11, "target_start_line": 107, "target_confidence": 15}, {"target_end_line": 11, "source_start_line": 75, "source_end_line": 11, "source_confidence": 11, "target_start_line": 80, "target_confidence": 15}]}, {"source": "renecnielsen_9904859", "value": 16, "target": "Utopiah_fec8aa2c70a72bcd5f2a81e1b48cc978", "links": [{"target_end_line": 45, "source_start_line": 51, "source_end_line": 45, "source_confidence": 23, "target_start_line": 57, "target_confidence": 28}, {"target_end_line": 24, "source_start_line": 19, "source_end_line": 24, "source_confidence": 23, "target_start_line": 27, "target_confidence": 28}, {"target_end_line": 45, "source_start_line": 51, "source_end_line": 45, "source_confidence": 23, "target_start_line": 57, "target_confidence": 28}, {"target_end_line": 24, "source_start_line": 19, "source_end_line": 24, "source_confidence": 23, "target_start_line": 27, "target_confidence": 28}]}, {"source": "hunzy_11110940", "value": 16, "target": "erlenstar_11295915", "links": [{"target_end_line": 33, "source_start_line": 48, "source_end_line": 33, "source_confidence": 31, "target_start_line": 58, "target_confidence": 17}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 10, "source_confidence": 31, "target_start_line": 7, "target_confidence": 17}, {"target_end_line": 33, "source_start_line": 48, "source_end_line": 33, "source_confidence": 31, "target_start_line": 58, "target_confidence": 17}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 10, "source_confidence": 31, "target_start_line": 7, "target_confidence": 17}]}, {"source": "timelyportfolio_3106445", "value": 11, "target": "mbostock_3305937", "links": [{"target_end_line": 17, "source_start_line": 19, "source_end_line": 17, "source_confidence": 7, "target_start_line": 23, "target_confidence": 30}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 7, "target_start_line": 9, "target_confidence": 30}, {"target_end_line": 17, "source_start_line": 19, "source_end_line": 17, "source_confidence": 7, "target_start_line": 23, "target_confidence": 30}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 7, "target_start_line": 9, "target_confidence": 30}]}, {"source": "daluu_d43ec5e610dd5dedbbe1", "value": 11, "target": "sivartravis_f3708ba3311007a9b4a6", "links": [{"target_end_line": 29, "source_start_line": 58, "source_end_line": 62, "source_confidence": 15, "target_start_line": 25, "target_confidence": 16}, {"target_end_line": 8, "source_start_line": 6, "source_end_line": 8, "source_confidence": 15, "target_start_line": 6, "target_confidence": 16}, {"target_end_line": 23, "source_start_line": 77, "source_end_line": 79, "source_confidence": 15, "target_start_line": 21, "target_confidence": 16}, {"target_end_line": 29, "source_start_line": 58, "source_end_line": 62, "source_confidence": 15, "target_start_line": 25, "target_confidence": 16}, {"target_end_line": 8, "source_start_line": 6, "source_end_line": 8, "source_confidence": 15, "target_start_line": 6, "target_confidence": 16}, {"target_end_line": 23, "source_start_line": 77, "source_end_line": 79, "source_confidence": 15, "target_start_line": 21, "target_confidence": 16}, {"target_end_line": 29, "source_start_line": 58, "source_end_line": 62, "source_confidence": 15, "target_start_line": 25, "target_confidence": 16}, {"target_end_line": 8, "source_start_line": 6, "source_end_line": 8, "source_confidence": 15, "target_start_line": 6, "target_confidence": 16}, {"target_end_line": 23, "source_start_line": 77, "source_end_line": 79, "source_confidence": 15, "target_start_line": 21, "target_confidence": 16}]}, {"source": "micahstubbs_d9f3cd0d926af7a5a1a8", "value": 25, "target": "ptvans_741ef9b6879861b5b9dc", "links": [{"target_end_line": 31, "source_start_line": 26, "source_end_line": 36, "source_confidence": 25, "target_start_line": 21, "target_confidence": 22}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 7, "source_confidence": 25, "target_start_line": 6, "target_confidence": 22}, {"target_end_line": 69, "source_start_line": 71, "source_end_line": 79, "source_confidence": 25, "target_start_line": 61, "target_confidence": 22}, {"target_end_line": 31, "source_start_line": 26, "source_end_line": 36, "source_confidence": 25, "target_start_line": 21, "target_confidence": 22}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 7, "source_confidence": 25, "target_start_line": 6, "target_confidence": 22}, {"target_end_line": 69, "source_start_line": 71, "source_end_line": 79, "source_confidence": 25, "target_start_line": 61, "target_confidence": 22}, {"target_end_line": 31, "source_start_line": 26, "source_end_line": 36, "source_confidence": 25, "target_start_line": 21, "target_confidence": 22}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 7, "source_confidence": 25, "target_start_line": 6, "target_confidence": 22}, {"target_end_line": 69, "source_start_line": 71, "source_end_line": 79, "source_confidence": 25, "target_start_line": 61, "target_confidence": 22}]}, {"source": "enjalot_8be32e6f1f32920ba841", "value": 64, "target": "micahstubbs_77e765beffccb6fe1648", "links": [{"target_end_line": 56, "source_start_line": 1, "source_end_line": 56, "source_confidence": 96, "target_start_line": 1, "target_confidence": 95}, {"target_end_line": 62, "source_start_line": 56, "source_end_line": 63, "source_confidence": 96, "target_start_line": 56, "target_confidence": 95}, {"target_end_line": 56, "source_start_line": 1, "source_end_line": 56, "source_confidence": 96, "target_start_line": 1, "target_confidence": 95}, {"target_end_line": 62, "source_start_line": 56, "source_end_line": 63, "source_confidence": 96, "target_start_line": 56, "target_confidence": 95}]}, {"source": "xaranke_b956ee7215b7b50bc78a", "value": 21, "target": "fabid_8b6a0277075d770f088a", "links": [{"target_end_line": 89, "source_start_line": 22, "source_end_line": 89, "source_confidence": 27, "target_start_line": 32, "target_confidence": 14}, {"target_end_line": 14, "source_start_line": 2, "source_end_line": 14, "source_confidence": 27, "target_start_line": 11, "target_confidence": 14}, {"target_end_line": 89, "source_start_line": 22, "source_end_line": 89, "source_confidence": 27, "target_start_line": 32, "target_confidence": 14}, {"target_end_line": 14, "source_start_line": 2, "source_end_line": 14, "source_confidence": 27, "target_start_line": 11, "target_confidence": 14}]}, {"source": "phil-pedruco_9852362", "value": 297, "target": "johnburnmurdoch_3cc7b27036af99c07c18", "links": [{"target_end_line": 297, "source_start_line": 1, "source_end_line": 297, "source_confidence": 99, "target_start_line": 297, "target_confidence": 99}]}, {"source": "cloudshapes_5661984", "value": 37, "target": "eglassman_6f7cbde4826a86c18f92", "links": [{"target_end_line": 20, "source_start_line": 9, "source_end_line": 20, "source_confidence": 82, "target_start_line": 10, "target_confidence": 62}, {"target_end_line": 65, "source_start_line": 36, "source_end_line": 49, "source_confidence": 82, "target_start_line": 52, "target_confidence": 62}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 62}, {"target_end_line": 23, "source_start_line": 21, "source_end_line": 23, "source_confidence": 82, "target_start_line": 21, "target_confidence": 62}, {"target_end_line": 20, "source_start_line": 9, "source_end_line": 20, "source_confidence": 82, "target_start_line": 10, "target_confidence": 62}, {"target_end_line": 65, "source_start_line": 36, "source_end_line": 49, "source_confidence": 82, "target_start_line": 52, "target_confidence": 62}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 62}, {"target_end_line": 23, "source_start_line": 21, "source_end_line": 23, "source_confidence": 82, "target_start_line": 21, "target_confidence": 62}, {"target_end_line": 20, "source_start_line": 9, "source_end_line": 20, "source_confidence": 82, "target_start_line": 10, "target_confidence": 62}, {"target_end_line": 65, "source_start_line": 36, "source_end_line": 49, "source_confidence": 82, "target_start_line": 52, "target_confidence": 62}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 62}, {"target_end_line": 23, "source_start_line": 21, "source_end_line": 23, "source_confidence": 82, "target_start_line": 21, "target_confidence": 62}, {"target_end_line": 20, "source_start_line": 9, "source_end_line": 20, "source_confidence": 82, "target_start_line": 10, "target_confidence": 62}, {"target_end_line": 65, "source_start_line": 36, "source_end_line": 49, "source_confidence": 82, "target_start_line": 52, "target_confidence": 62}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 62}, {"target_end_line": 23, "source_start_line": 21, "source_end_line": 23, "source_confidence": 82, "target_start_line": 21, "target_confidence": 62}]}, {"source": "dmijalkovic_3385b8e7269b5b345558", "value": 13, "target": "yassineAlouini_fdbca6ea6f4416e6b328", "links": [{"target_end_line": 12, "source_start_line": 18, "source_end_line": 25, "source_confidence": 17, "target_start_line": 7, "target_confidence": 53}, {"target_end_line": 7, "source_start_line": 3, "source_end_line": 7, "source_confidence": 17, "target_start_line": 3, "target_confidence": 53}, {"target_end_line": 12, "source_start_line": 18, "source_end_line": 25, "source_confidence": 17, "target_start_line": 7, "target_confidence": 53}, {"target_end_line": 7, "source_start_line": 3, "source_end_line": 7, "source_confidence": 17, "target_start_line": 3, "target_confidence": 53}]}, {"source": "davo_5094476", "value": 49, "target": "enjalot_5095908", "links": [{"target_end_line": 25, "source_start_line": 1, "source_end_line": 25, "source_confidence": 87, "target_start_line": 1, "target_confidence": 82}, {"target_end_line": 53, "source_start_line": 29, "source_end_line": 52, "source_confidence": 87, "target_start_line": 30, "target_confidence": 82}, {"target_end_line": 25, "source_start_line": 1, "source_end_line": 25, "source_confidence": 87, "target_start_line": 1, "target_confidence": 82}, {"target_end_line": 53, "source_start_line": 29, "source_end_line": 52, "source_confidence": 87, "target_start_line": 30, "target_confidence": 82}]}, {"source": "ashtonburg_40448d691c1cc22dd00b", "value": 15, "target": "Rico3734_2d06a6aadbb4af3398ba", "links": [{"target_end_line": 35, "source_start_line": 12, "source_end_line": 35, "source_confidence": 57, "target_start_line": 20, "target_confidence": 59}, {"target_end_line": 20, "source_start_line": 3, "source_end_line": 20, "source_confidence": 57, "target_start_line": 8, "target_confidence": 59}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 35, "source_confidence": 57, "target_start_line": 20, "target_confidence": 59}, {"target_end_line": 20, "source_start_line": 3, "source_end_line": 20, "source_confidence": 57, "target_start_line": 8, "target_confidence": 59}]}, {"source": "jhellier_26fdb3c8ebd5dcb9a143", "value": 12, "target": "dmijalkovic_52fb07194d4b2988cafb", "links": [{"target_end_line": 27, "source_start_line": 5, "source_end_line": 27, "source_confidence": 32, "target_start_line": 11, "target_confidence": 16}, {"target_end_line": 5, "source_start_line": 2, "source_end_line": 5, "source_confidence": 32, "target_start_line": 4, "target_confidence": 16}, {"target_end_line": 27, "source_start_line": 5, "source_end_line": 27, "source_confidence": 32, "target_start_line": 11, "target_confidence": 16}, {"target_end_line": 5, "source_start_line": 2, "source_end_line": 5, "source_confidence": 32, "target_start_line": 4, "target_confidence": 16}]}, {"source": "msqr_3202712", "value": 196, "target": "ImSraone_216ee9834f42bdfaffae", "links": [{"target_end_line": 191, "source_start_line": 1, "source_end_line": 191, "source_confidence": 99, "target_start_line": 196, "target_confidence": 99}]}, {"source": "pnavarrc_4142064", "value": 42, "target": "jwarburg_357d91975a97e9f68208", "links": [{"target_end_line": 42, "source_start_line": 1, "source_end_line": 42, "source_confidence": 69, "target_start_line": 42, "target_confidence": 82}]}, {"source": "tmcw_3426132", "value": 42, "target": "pnavarrc_4142064", "links": [{"target_end_line": 42, "source_start_line": 1, "source_end_line": 42, "source_confidence": 82, "target_start_line": 42, "target_confidence": 69}]}, {"source": "couchand_6394506", "value": 46, "target": "git-ashish_d6cdd29aba9d72498d91", "links": [{"target_end_line": 46, "source_start_line": 1, "source_end_line": 46, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "hungvietdo_28d434d3818db4fbe369", "value": 13, "target": "fabid_0c4cf357ab5ed3e90382", "links": [{"target_end_line": 47, "source_start_line": 28, "source_end_line": 47, "source_confidence": 23, "target_start_line": 34, "target_confidence": 26}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 23, "target_start_line": 6, "target_confidence": 26}, {"target_end_line": 47, "source_start_line": 28, "source_end_line": 47, "source_confidence": 23, "target_start_line": 34, "target_confidence": 26}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 23, "target_start_line": 6, "target_confidence": 26}]}, {"source": "ashtonburg_40448d691c1cc22dd00b", "value": 15, "target": "Rico3734_fa14dff4959ccb0886a9", "links": [{"target_end_line": 29, "source_start_line": 12, "source_end_line": 29, "source_confidence": 57, "target_start_line": 20, "target_confidence": 65}, {"target_end_line": 14, "source_start_line": 3, "source_end_line": 14, "source_confidence": 57, "target_start_line": 8, "target_confidence": 65}, {"target_end_line": 29, "source_start_line": 12, "source_end_line": 29, "source_confidence": 57, "target_start_line": 20, "target_confidence": 65}, {"target_end_line": 14, "source_start_line": 3, "source_end_line": 14, "source_confidence": 57, "target_start_line": 8, "target_confidence": 65}]}, {"source": "erlenstar_11295915", "value": 16, "target": "d3noob_8dc93bce7e7200ab487d", "links": [{"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 31}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 31}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 31}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 31}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 31}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 31}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 31}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 31}]}, {"source": "micahstubbs_77e765beffccb6fe1648", "value": 32, "target": "YasufumiSaito_35b59c0b074cac700798", "links": [{"target_end_line": 53, "source_start_line": 19, "source_end_line": 53, "source_confidence": 42, "target_start_line": 40, "target_confidence": 52}, {"target_end_line": 32, "source_start_line": 16, "source_end_line": 32, "source_confidence": 42, "target_start_line": 19, "target_confidence": 52}, {"target_end_line": 53, "source_start_line": 19, "source_end_line": 53, "source_confidence": 42, "target_start_line": 40, "target_confidence": 52}, {"target_end_line": 32, "source_start_line": 16, "source_end_line": 32, "source_confidence": 42, "target_start_line": 19, "target_confidence": 52}]}, {"source": "syntagmatic_4092944", "value": 167, "target": "renecnielsen_02dde03ccff6748520e1", "links": [{"target_end_line": 167, "source_start_line": 1, "source_end_line": 167, "source_confidence": 99, "target_start_line": 167, "target_confidence": 99}]}, {"source": "daluu_d43ec5e610dd5dedbbe1", "value": 11, "target": "sivartravis_348fc7cd3f3d8ad9db3f", "links": [{"target_end_line": 29, "source_start_line": 58, "source_end_line": 62, "source_confidence": 15, "target_start_line": 25, "target_confidence": 16}, {"target_end_line": 8, "source_start_line": 6, "source_end_line": 8, "source_confidence": 15, "target_start_line": 6, "target_confidence": 16}, {"target_end_line": 23, "source_start_line": 77, "source_end_line": 79, "source_confidence": 15, "target_start_line": 21, "target_confidence": 16}, {"target_end_line": 29, "source_start_line": 58, "source_end_line": 62, "source_confidence": 15, "target_start_line": 25, "target_confidence": 16}, {"target_end_line": 8, "source_start_line": 6, "source_end_line": 8, "source_confidence": 15, "target_start_line": 6, "target_confidence": 16}, {"target_end_line": 23, "source_start_line": 77, "source_end_line": 79, "source_confidence": 15, "target_start_line": 21, "target_confidence": 16}, {"target_end_line": 29, "source_start_line": 58, "source_end_line": 62, "source_confidence": 15, "target_start_line": 25, "target_confidence": 16}, {"target_end_line": 8, "source_start_line": 6, "source_end_line": 8, "source_confidence": 15, "target_start_line": 6, "target_confidence": 16}, {"target_end_line": 23, "source_start_line": 77, "source_end_line": 79, "source_confidence": 15, "target_start_line": 21, "target_confidence": 16}]}, {"source": "jhellier_26fdb3c8ebd5dcb9a143", "value": 12, "target": "dmijalkovic_3385b8e7269b5b345558", "links": [{"target_end_line": 27, "source_start_line": 5, "source_end_line": 27, "source_confidence": 32, "target_start_line": 11, "target_confidence": 16}, {"target_end_line": 5, "source_start_line": 2, "source_end_line": 5, "source_confidence": 32, "target_start_line": 4, "target_confidence": 16}, {"target_end_line": 27, "source_start_line": 5, "source_end_line": 27, "source_confidence": 32, "target_start_line": 11, "target_confidence": 16}, {"target_end_line": 5, "source_start_line": 2, "source_end_line": 5, "source_confidence": 32, "target_start_line": 4, "target_confidence": 16}]}, {"source": "enjalot_ce9a88c24e5e11563e06", "value": 16, "target": "rvross_ac78fbba1282c7b228253b97b0090e6b", "links": [{"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 6, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 27, "source_start_line": 234, "source_end_line": 239, "source_confidence": 6, "target_start_line": 22, "target_confidence": 44}, {"target_end_line": 17, "source_start_line": 122, "source_end_line": 125, "source_confidence": 6, "target_start_line": 13, "target_confidence": 44}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 6, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 27, "source_start_line": 234, "source_end_line": 239, "source_confidence": 6, "target_start_line": 22, "target_confidence": 44}, {"target_end_line": 17, "source_start_line": 122, "source_end_line": 125, "source_confidence": 6, "target_start_line": 13, "target_confidence": 44}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 6, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 27, "source_start_line": 234, "source_end_line": 239, "source_confidence": 6, "target_start_line": 22, "target_confidence": 44}, {"target_end_line": 17, "source_start_line": 122, "source_end_line": 125, "source_confidence": 6, "target_start_line": 13, "target_confidence": 44}]}, {"source": "jalapic_af63041b6b5edf373fa3", "value": 198, "target": "CBasis_9bae6529ccab4b902a50", "links": [{"target_end_line": 198, "source_start_line": 1, "source_end_line": 198, "source_confidence": 99, "target_start_line": 198, "target_confidence": 99}]}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "value": 25, "target": "emeeks_f8c0220c54ec8347ea95", "links": [{"target_end_line": 117, "source_start_line": 128, "source_end_line": 117, "source_confidence": 13, "target_start_line": 143, "target_confidence": 18}, {"target_end_line": 78, "source_start_line": 9, "source_end_line": 78, "source_confidence": 13, "target_start_line": 17, "target_confidence": 18}, {"target_end_line": 117, "source_start_line": 128, "source_end_line": 117, "source_confidence": 13, "target_start_line": 143, "target_confidence": 18}, {"target_end_line": 78, "source_start_line": 9, "source_end_line": 78, "source_confidence": 13, "target_start_line": 17, "target_confidence": 18}]}, {"source": "MattWoelk_5196687", "value": 75, "target": "timelyportfolio_5266202", "links": [{"target_end_line": 75, "source_start_line": 1, "source_end_line": 75, "source_confidence": 98, "target_start_line": 1, "target_confidence": 98}]}, {"source": "emeeks_37dd76398240ab29abd8", "value": 40, "target": "mpmckenna8_f6245adc7a3cd3930a11", "links": [{"target_end_line": 143, "source_start_line": 55, "source_end_line": 78, "source_confidence": 44, "target_start_line": 113, "target_confidence": 16}, {"target_end_line": 17, "source_start_line": 7, "source_end_line": 15, "source_confidence": 44, "target_start_line": 9, "target_confidence": 16}, {"target_end_line": 143, "source_start_line": 55, "source_end_line": 78, "source_confidence": 44, "target_start_line": 113, "target_confidence": 16}, {"target_end_line": 17, "source_start_line": 7, "source_end_line": 15, "source_confidence": 44, "target_start_line": 9, "target_confidence": 16}]}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "value": 25, "target": "emeeks_28fcb6803748a31718d9", "links": [{"target_end_line": 195, "source_start_line": 128, "source_end_line": 195, "source_confidence": 13, "target_start_line": 143, "target_confidence": 9}, {"target_end_line": 52, "source_start_line": 9, "source_end_line": 52, "source_confidence": 13, "target_start_line": 17, "target_confidence": 9}, {"target_end_line": 195, "source_start_line": 128, "source_end_line": 195, "source_confidence": 13, "target_start_line": 143, "target_confidence": 9}, {"target_end_line": 52, "source_start_line": 9, "source_end_line": 52, "source_confidence": 13, "target_start_line": 17, "target_confidence": 9}]}, {"source": "timelyportfolio_3106445", "value": 49, "target": "sivartravis_84553799f7a1a17548e1", "links": [{"target_end_line": 351, "source_start_line": 181, "source_end_line": 351, "source_confidence": 20, "target_start_line": 192, "target_confidence": 8}, {"target_end_line": 79, "source_start_line": 170, "source_end_line": 79, "source_confidence": 20, "target_start_line": 177, "target_confidence": 8}, {"target_end_line": 369, "source_start_line": 217, "source_end_line": 369, "source_confidence": 20, "target_start_line": 223, "target_confidence": 8}, {"target_end_line": 379, "source_start_line": 227, "source_end_line": 379, "source_confidence": 20, "target_start_line": 234, "target_confidence": 8}, {"target_end_line": 50, "source_start_line": 159, "source_end_line": 50, "source_confidence": 20, "target_start_line": 162, "target_confidence": 8}, {"target_end_line": 15, "source_start_line": 14, "source_end_line": 15, "source_confidence": 20, "target_start_line": 20, "target_confidence": 8}, {"target_end_line": 351, "source_start_line": 181, "source_end_line": 351, "source_confidence": 20, "target_start_line": 192, "target_confidence": 8}, {"target_end_line": 79, "source_start_line": 170, "source_end_line": 79, "source_confidence": 20, "target_start_line": 177, "target_confidence": 8}, {"target_end_line": 369, "source_start_line": 217, "source_end_line": 369, "source_confidence": 20, "target_start_line": 223, "target_confidence": 8}, {"target_end_line": 379, "source_start_line": 227, "source_end_line": 379, "source_confidence": 20, "target_start_line": 234, "target_confidence": 8}, {"target_end_line": 50, "source_start_line": 159, "source_end_line": 50, "source_confidence": 20, "target_start_line": 162, "target_confidence": 8}, {"target_end_line": 15, "source_start_line": 14, "source_end_line": 15, "source_confidence": 20, "target_start_line": 20, "target_confidence": 8}, {"target_end_line": 351, "source_start_line": 181, "source_end_line": 351, "source_confidence": 20, "target_start_line": 192, "target_confidence": 8}, {"target_end_line": 79, "source_start_line": 170, "source_end_line": 79, "source_confidence": 20, "target_start_line": 177, "target_confidence": 8}, {"target_end_line": 369, "source_start_line": 217, "source_end_line": 369, "source_confidence": 20, "target_start_line": 223, "target_confidence": 8}, {"target_end_line": 379, "source_start_line": 227, "source_end_line": 379, "source_confidence": 20, "target_start_line": 234, "target_confidence": 8}, {"target_end_line": 50, "source_start_line": 159, "source_end_line": 50, "source_confidence": 20, "target_start_line": 162, "target_confidence": 8}, {"target_end_line": 15, "source_start_line": 14, "source_end_line": 15, "source_confidence": 20, "target_start_line": 20, "target_confidence": 8}, {"target_end_line": 351, "source_start_line": 181, "source_end_line": 351, "source_confidence": 20, "target_start_line": 192, "target_confidence": 8}, {"target_end_line": 79, "source_start_line": 170, "source_end_line": 79, "source_confidence": 20, "target_start_line": 177, "target_confidence": 8}, {"target_end_line": 369, "source_start_line": 217, "source_end_line": 369, "source_confidence": 20, "target_start_line": 223, "target_confidence": 8}, {"target_end_line": 379, "source_start_line": 227, "source_end_line": 379, "source_confidence": 20, "target_start_line": 234, "target_confidence": 8}, {"target_end_line": 50, "source_start_line": 159, "source_end_line": 50, "source_confidence": 20, "target_start_line": 162, "target_confidence": 8}, {"target_end_line": 15, "source_start_line": 14, "source_end_line": 15, "source_confidence": 20, "target_start_line": 20, "target_confidence": 8}, {"target_end_line": 351, "source_start_line": 181, "source_end_line": 351, "source_confidence": 20, "target_start_line": 192, "target_confidence": 8}, {"target_end_line": 79, "source_start_line": 170, "source_end_line": 79, "source_confidence": 20, "target_start_line": 177, "target_confidence": 8}, {"target_end_line": 369, "source_start_line": 217, "source_end_line": 369, "source_confidence": 20, "target_start_line": 223, "target_confidence": 8}, {"target_end_line": 379, "source_start_line": 227, "source_end_line": 379, "source_confidence": 20, "target_start_line": 234, "target_confidence": 8}, {"target_end_line": 50, "source_start_line": 159, "source_end_line": 50, "source_confidence": 20, "target_start_line": 162, "target_confidence": 8}, {"target_end_line": 15, "source_start_line": 14, "source_end_line": 15, "source_confidence": 20, "target_start_line": 20, "target_confidence": 8}, {"target_end_line": 351, "source_start_line": 181, "source_end_line": 351, "source_confidence": 20, "target_start_line": 192, "target_confidence": 8}, {"target_end_line": 79, "source_start_line": 170, "source_end_line": 79, "source_confidence": 20, "target_start_line": 177, "target_confidence": 8}, {"target_end_line": 369, "source_start_line": 217, "source_end_line": 369, "source_confidence": 20, "target_start_line": 223, "target_confidence": 8}, {"target_end_line": 379, "source_start_line": 227, "source_end_line": 379, "source_confidence": 20, "target_start_line": 234, "target_confidence": 8}, {"target_end_line": 50, "source_start_line": 159, "source_end_line": 50, "source_confidence": 20, "target_start_line": 162, "target_confidence": 8}, {"target_end_line": 15, "source_start_line": 14, "source_end_line": 15, "source_confidence": 20, "target_start_line": 20, "target_confidence": 8}]}, {"source": "eesur_5fbda7f410d31da35e42", "value": 57, "target": "renecnielsen_00ece1121142dddee837", "links": [{"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 94, "target_start_line": 1, "target_confidence": 96}, {"target_end_line": 55, "source_start_line": 24, "source_end_line": 55, "source_confidence": 94, "target_start_line": 24, "target_confidence": 96}, {"target_end_line": 24, "source_start_line": 16, "source_end_line": 24, "source_confidence": 94, "target_start_line": 16, "target_confidence": 96}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 94, "target_start_line": 1, "target_confidence": 96}, {"target_end_line": 55, "source_start_line": 24, "source_end_line": 55, "source_confidence": 94, "target_start_line": 24, "target_confidence": 96}, {"target_end_line": 24, "source_start_line": 16, "source_end_line": 24, "source_confidence": 94, "target_start_line": 16, "target_confidence": 96}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 94, "target_start_line": 1, "target_confidence": 96}, {"target_end_line": 55, "source_start_line": 24, "source_end_line": 55, "source_confidence": 94, "target_start_line": 24, "target_confidence": 96}, {"target_end_line": 24, "source_start_line": 16, "source_end_line": 24, "source_confidence": 94, "target_start_line": 16, "target_confidence": 96}]}, {"source": "mpmckenna8_8874545", "value": 29, "target": "espinielli_9ea56e041f6847dbe944", "links": [{"target_end_line": 43, "source_start_line": 22, "source_end_line": 43, "source_confidence": 48, "target_start_line": 38, "target_confidence": 17}, {"target_end_line": 23, "source_start_line": 13, "source_end_line": 23, "source_confidence": 48, "target_start_line": 20, "target_confidence": 17}, {"target_end_line": 119, "source_start_line": 48, "source_end_line": 119, "source_confidence": 48, "target_start_line": 51, "target_confidence": 17}, {"target_end_line": 43, "source_start_line": 22, "source_end_line": 43, "source_confidence": 48, "target_start_line": 38, "target_confidence": 17}, {"target_end_line": 23, "source_start_line": 13, "source_end_line": 23, "source_confidence": 48, "target_start_line": 20, "target_confidence": 17}, {"target_end_line": 119, "source_start_line": 48, "source_end_line": 119, "source_confidence": 48, "target_start_line": 51, "target_confidence": 17}, {"target_end_line": 43, "source_start_line": 22, "source_end_line": 43, "source_confidence": 48, "target_start_line": 38, "target_confidence": 17}, {"target_end_line": 23, "source_start_line": 13, "source_end_line": 23, "source_confidence": 48, "target_start_line": 20, "target_confidence": 17}, {"target_end_line": 119, "source_start_line": 48, "source_end_line": 119, "source_confidence": 48, "target_start_line": 51, "target_confidence": 17}]}, {"source": "ZJONSSON_3918369", "value": 15, "target": "vjpgo_4687640", "links": [{"target_end_line": 18, "source_start_line": 31, "source_end_line": 37, "source_confidence": 18, "target_start_line": 12, "target_confidence": 63}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 18, "target_start_line": 1, "target_confidence": 63}, {"target_end_line": 18, "source_start_line": 31, "source_end_line": 37, "source_confidence": 18, "target_start_line": 12, "target_confidence": 63}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 18, "target_start_line": 1, "target_confidence": 63}]}, {"source": "ZJONSSON_3918369", "value": 15, "target": "vjpgo_4687652", "links": [{"target_end_line": 18, "source_start_line": 31, "source_end_line": 37, "source_confidence": 18, "target_start_line": 12, "target_confidence": 63}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 18, "target_start_line": 1, "target_confidence": 63}, {"target_end_line": 18, "source_start_line": 31, "source_end_line": 37, "source_confidence": 18, "target_start_line": 12, "target_confidence": 63}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 18, "target_start_line": 1, "target_confidence": 63}]}, {"source": "camio_5087116", "value": 47, "target": "ufenegga_366344909b1d79e327b9", "links": [{"target_end_line": 47, "source_start_line": 1, "source_end_line": 47, "source_confidence": 97, "target_start_line": 1, "target_confidence": 97}]}, {"source": "benjchristensen_2657838", "value": 66, "target": "phoebebright_4124200", "links": [{"target_end_line": 66, "source_start_line": 1, "source_end_line": 66, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "erlenstar_11295915", "value": 16, "target": "d3noob_c37cb8e630aaef7df30d", "links": [{"target_end_line": 41, "source_start_line": 27, "source_end_line": 41, "source_confidence": 19, "target_start_line": 31, "target_confidence": 23}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 23}, {"target_end_line": 14, "source_start_line": 10, "source_end_line": 14, "source_confidence": 19, "target_start_line": 14, "target_confidence": 23}, {"target_end_line": 26, "source_start_line": 23, "source_end_line": 26, "source_confidence": 19, "target_start_line": 25, "target_confidence": 23}, {"target_end_line": 41, "source_start_line": 27, "source_end_line": 41, "source_confidence": 19, "target_start_line": 31, "target_confidence": 23}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 23}, {"target_end_line": 14, "source_start_line": 10, "source_end_line": 14, "source_confidence": 19, "target_start_line": 14, "target_confidence": 23}, {"target_end_line": 26, "source_start_line": 23, "source_end_line": 26, "source_confidence": 19, "target_start_line": 25, "target_confidence": 23}, {"target_end_line": 41, "source_start_line": 27, "source_end_line": 41, "source_confidence": 19, "target_start_line": 31, "target_confidence": 23}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 23}, {"target_end_line": 14, "source_start_line": 10, "source_end_line": 14, "source_confidence": 19, "target_start_line": 14, "target_confidence": 23}, {"target_end_line": 26, "source_start_line": 23, "source_end_line": 26, "source_confidence": 19, "target_start_line": 25, "target_confidence": 23}, {"target_end_line": 41, "source_start_line": 27, "source_end_line": 41, "source_confidence": 19, "target_start_line": 31, "target_confidence": 23}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 23}, {"target_end_line": 14, "source_start_line": 10, "source_end_line": 14, "source_confidence": 19, "target_start_line": 14, "target_confidence": 23}, {"target_end_line": 26, "source_start_line": 23, "source_end_line": 26, "source_confidence": 19, "target_start_line": 25, "target_confidence": 23}]}, {"source": "git-ashish_e7182a82862071b405b5", "value": 11, "target": "hwangmoretime_06aa7e108b77745f1f24", "links": [{"target_end_line": 10, "source_start_line": 3, "source_end_line": 8, "source_confidence": 29, "target_start_line": 6, "target_confidence": 8}, {"target_end_line": 29, "source_start_line": 15, "source_end_line": 19, "source_confidence": 29, "target_start_line": 25, "target_confidence": 8}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 8, "source_confidence": 29, "target_start_line": 6, "target_confidence": 8}, {"target_end_line": 29, "source_start_line": 15, "source_end_line": 19, "source_confidence": 29, "target_start_line": 25, "target_confidence": 8}]}, {"source": "dustinlarimer_5716840", "value": 12, "target": "wrobstory_7630011", "links": [{"target_end_line": 98, "source_start_line": 17, "source_end_line": 22, "source_confidence": 19, "target_start_line": 94, "target_confidence": 14}, {"target_end_line": 78, "source_start_line": 6, "source_end_line": 11, "source_confidence": 19, "target_start_line": 73, "target_confidence": 14}, {"target_end_line": 98, "source_start_line": 17, "source_end_line": 22, "source_confidence": 19, "target_start_line": 94, "target_confidence": 14}, {"target_end_line": 78, "source_start_line": 6, "source_end_line": 11, "source_confidence": 19, "target_start_line": 73, "target_confidence": 14}]}, {"source": "cloudshapes_5661984", "value": 13, "target": "tommct_5671250", "links": [{"target_end_line": 77, "source_start_line": 17, "source_end_line": 21, "source_confidence": 38, "target_start_line": 73, "target_confidence": 10}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 38, "target_start_line": 1, "target_confidence": 10}, {"target_end_line": 77, "source_start_line": 17, "source_end_line": 21, "source_confidence": 38, "target_start_line": 73, "target_confidence": 10}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 38, "target_start_line": 1, "target_confidence": 10}]}, {"source": "trinary_b1a5f453c51231cd7bb5", "value": 14, "target": "samselikoff_1de23ed13138c7d9699e", "links": [{"target_end_line": 111, "source_start_line": 30, "source_end_line": 111, "source_confidence": 17, "target_start_line": 34, "target_confidence": 3}, {"target_end_line": 183, "source_start_line": 12, "source_end_line": 183, "source_confidence": 17, "target_start_line": 20, "target_confidence": 3}, {"target_end_line": 111, "source_start_line": 30, "source_end_line": 111, "source_confidence": 17, "target_start_line": 34, "target_confidence": 3}, {"target_end_line": 183, "source_start_line": 12, "source_end_line": 183, "source_confidence": 17, "target_start_line": 20, "target_confidence": 3}]}, {"source": "hwangmoretime_06aa7e108b77745f1f24", "value": 18, "target": "d3noob_a0cbcddc6bf0eb9569fe", "links": [{"target_end_line": 111, "source_start_line": 25, "source_end_line": 111, "source_confidence": 10, "target_start_line": 29, "target_confidence": 4}, {"target_end_line": 182, "source_start_line": 10, "source_end_line": 182, "source_confidence": 10, "target_start_line": 16, "target_confidence": 4}, {"target_end_line": 189, "source_start_line": 16, "source_end_line": 189, "source_confidence": 10, "target_start_line": 21, "target_confidence": 4}, {"target_end_line": 111, "source_start_line": 25, "source_end_line": 111, "source_confidence": 10, "target_start_line": 29, "target_confidence": 4}, {"target_end_line": 182, "source_start_line": 10, "source_end_line": 182, "source_confidence": 10, "target_start_line": 16, "target_confidence": 4}, {"target_end_line": 189, "source_start_line": 16, "source_end_line": 189, "source_confidence": 10, "target_start_line": 21, "target_confidence": 4}, {"target_end_line": 111, "source_start_line": 25, "source_end_line": 111, "source_confidence": 10, "target_start_line": 29, "target_confidence": 4}, {"target_end_line": 182, "source_start_line": 10, "source_end_line": 182, "source_confidence": 10, "target_start_line": 16, "target_confidence": 4}, {"target_end_line": 189, "source_start_line": 16, "source_end_line": 189, "source_confidence": 10, "target_start_line": 21, "target_confidence": 4}]}, {"source": "rgdonohue_4793dab7f993a81cc670", "value": 21, "target": "maptastik_4a69f2f4c697e097ee74", "links": [{"target_end_line": 26, "source_start_line": 6, "source_end_line": 26, "source_confidence": 81, "target_start_line": 26, "target_confidence": 56}]}, {"source": "d3noob_4414436", "value": 12, "target": "timelyportfolio_5149102", "links": [{"target_end_line": 18, "source_start_line": 4, "source_end_line": 6, "source_confidence": 23, "target_start_line": 16, "target_confidence": 9}, {"target_end_line": 59, "source_start_line": 36, "source_end_line": 39, "source_confidence": 23, "target_start_line": 56, "target_confidence": 9}, {"target_end_line": 40, "source_start_line": 12, "source_end_line": 13, "source_confidence": 23, "target_start_line": 36, "target_confidence": 9}, {"target_end_line": 18, "source_start_line": 4, "source_end_line": 6, "source_confidence": 23, "target_start_line": 16, "target_confidence": 9}, {"target_end_line": 59, "source_start_line": 36, "source_end_line": 39, "source_confidence": 23, "target_start_line": 56, "target_confidence": 9}, {"target_end_line": 40, "source_start_line": 12, "source_end_line": 13, "source_confidence": 23, "target_start_line": 36, "target_confidence": 9}, {"target_end_line": 18, "source_start_line": 4, "source_end_line": 6, "source_confidence": 23, "target_start_line": 16, "target_confidence": 9}, {"target_end_line": 59, "source_start_line": 36, "source_end_line": 39, "source_confidence": 23, "target_start_line": 56, "target_confidence": 9}, {"target_end_line": 40, "source_start_line": 12, "source_end_line": 13, "source_confidence": 23, "target_start_line": 36, "target_confidence": 9}]}, {"source": "wrobstory_7630654", "value": 18, "target": "tommct_8191276", "links": [{"target_end_line": 109, "source_start_line": 101, "source_end_line": 109, "source_confidence": 12, "target_start_line": 105, "target_confidence": 8}, {"target_end_line": 7, "source_start_line": 75, "source_end_line": 7, "source_confidence": 12, "target_start_line": 79, "target_confidence": 8}, {"target_end_line": 157, "source_start_line": 108, "source_end_line": 157, "source_confidence": 12, "target_start_line": 115, "target_confidence": 8}, {"target_end_line": 109, "source_start_line": 101, "source_end_line": 109, "source_confidence": 12, "target_start_line": 105, "target_confidence": 8}, {"target_end_line": 7, "source_start_line": 75, "source_end_line": 7, "source_confidence": 12, "target_start_line": 79, "target_confidence": 8}, {"target_end_line": 157, "source_start_line": 108, "source_end_line": 157, "source_confidence": 12, "target_start_line": 115, "target_confidence": 8}, {"target_end_line": 109, "source_start_line": 101, "source_end_line": 109, "source_confidence": 12, "target_start_line": 105, "target_confidence": 8}, {"target_end_line": 7, "source_start_line": 75, "source_end_line": 7, "source_confidence": 12, "target_start_line": 79, "target_confidence": 8}, {"target_end_line": 157, "source_start_line": 108, "source_end_line": 157, "source_confidence": 12, "target_start_line": 115, "target_confidence": 8}]}, {"source": "darshit-shah_3b0327f5e04f89887a4f", "value": 18, "target": "hungvietdo_28d434d3818db4fbe369", "links": [{"target_end_line": 34, "source_start_line": 38, "source_end_line": 42, "source_confidence": 4, "target_start_line": 28, "target_confidence": 30}, {"target_end_line": 6, "source_start_line": 2, "source_end_line": 9, "source_confidence": 4, "target_start_line": 4, "target_confidence": 30}, {"target_end_line": 13, "source_start_line": 13, "source_end_line": 17, "source_confidence": 4, "target_start_line": 12, "target_confidence": 30}, {"target_end_line": 34, "source_start_line": 38, "source_end_line": 42, "source_confidence": 4, "target_start_line": 28, "target_confidence": 30}, {"target_end_line": 6, "source_start_line": 2, "source_end_line": 9, "source_confidence": 4, "target_start_line": 4, "target_confidence": 30}, {"target_end_line": 13, "source_start_line": 13, "source_end_line": 17, "source_confidence": 4, "target_start_line": 12, "target_confidence": 30}, {"target_end_line": 34, "source_start_line": 38, "source_end_line": 42, "source_confidence": 4, "target_start_line": 28, "target_confidence": 30}, {"target_end_line": 6, "source_start_line": 2, "source_end_line": 9, "source_confidence": 4, "target_start_line": 4, "target_confidence": 30}, {"target_end_line": 13, "source_start_line": 13, "source_end_line": 17, "source_confidence": 4, "target_start_line": 12, "target_confidence": 30}]}, {"source": "erlenstar_11295915", "value": 16, "target": "d3noob_b3ff6ae1c120eea654b5", "links": [{"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 36}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 36}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 36}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 36}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 36}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 36}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 36}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 36}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 36}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 36}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 36}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 36}]}, {"source": "trinary_b1a5f453c51231cd7bb5", "value": 17, "target": "bdilday_ac943080045043d53971", "links": [{"target_end_line": 43, "source_start_line": 30, "source_end_line": 43, "source_confidence": 23, "target_start_line": 34, "target_confidence": 6}, {"target_end_line": 8, "source_start_line": 3, "source_end_line": 8, "source_confidence": 23, "target_start_line": 7, "target_confidence": 6}, {"target_end_line": 171, "source_start_line": 56, "source_end_line": 171, "source_confidence": 23, "target_start_line": 62, "target_confidence": 6}, {"target_end_line": 43, "source_start_line": 30, "source_end_line": 43, "source_confidence": 23, "target_start_line": 34, "target_confidence": 6}, {"target_end_line": 8, "source_start_line": 3, "source_end_line": 8, "source_confidence": 23, "target_start_line": 7, "target_confidence": 6}, {"target_end_line": 171, "source_start_line": 56, "source_end_line": 171, "source_confidence": 23, "target_start_line": 62, "target_confidence": 6}, {"target_end_line": 43, "source_start_line": 30, "source_end_line": 43, "source_confidence": 23, "target_start_line": 34, "target_confidence": 6}, {"target_end_line": 8, "source_start_line": 3, "source_end_line": 8, "source_confidence": 23, "target_start_line": 7, "target_confidence": 6}, {"target_end_line": 171, "source_start_line": 56, "source_end_line": 171, "source_confidence": 23, "target_start_line": 62, "target_confidence": 6}]}, {"source": "bewest_5177174", "value": 62, "target": "timelyportfolio_5200272", "links": [{"target_end_line": 62, "source_start_line": 1, "source_end_line": 62, "source_confidence": 97, "target_start_line": 1, "target_confidence": 96}]}, {"source": "wboykinm_4716561", "value": 32, "target": "tmcw_5147590", "links": [{"target_end_line": 64, "source_start_line": 218, "source_end_line": 64, "source_confidence": 18, "target_start_line": 225, "target_confidence": 66}, {"target_end_line": 20, "source_start_line": 153, "source_end_line": 20, "source_confidence": 18, "target_start_line": 162, "target_confidence": 66}, {"target_end_line": 54, "source_start_line": 209, "source_end_line": 54, "source_confidence": 18, "target_start_line": 211, "target_confidence": 66}, {"target_end_line": 51, "source_start_line": 201, "source_end_line": 51, "source_confidence": 18, "target_start_line": 209, "target_confidence": 66}, {"target_end_line": 64, "source_start_line": 218, "source_end_line": 64, "source_confidence": 18, "target_start_line": 225, "target_confidence": 66}, {"target_end_line": 20, "source_start_line": 153, "source_end_line": 20, "source_confidence": 18, "target_start_line": 162, "target_confidence": 66}, {"target_end_line": 54, "source_start_line": 209, "source_end_line": 54, "source_confidence": 18, "target_start_line": 211, "target_confidence": 66}, {"target_end_line": 51, "source_start_line": 201, "source_end_line": 51, "source_confidence": 18, "target_start_line": 209, "target_confidence": 66}, {"target_end_line": 64, "source_start_line": 218, "source_end_line": 64, "source_confidence": 18, "target_start_line": 225, "target_confidence": 66}, {"target_end_line": 20, "source_start_line": 153, "source_end_line": 20, "source_confidence": 18, "target_start_line": 162, "target_confidence": 66}, {"target_end_line": 54, "source_start_line": 209, "source_end_line": 54, "source_confidence": 18, "target_start_line": 211, "target_confidence": 66}, {"target_end_line": 51, "source_start_line": 201, "source_end_line": 51, "source_confidence": 18, "target_start_line": 209, "target_confidence": 66}, {"target_end_line": 64, "source_start_line": 218, "source_end_line": 64, "source_confidence": 18, "target_start_line": 225, "target_confidence": 66}, {"target_end_line": 20, "source_start_line": 153, "source_end_line": 20, "source_confidence": 18, "target_start_line": 162, "target_confidence": 66}, {"target_end_line": 54, "source_start_line": 209, "source_end_line": 54, "source_confidence": 18, "target_start_line": 211, "target_confidence": 66}, {"target_end_line": 51, "source_start_line": 201, "source_end_line": 51, "source_confidence": 18, "target_start_line": 209, "target_confidence": 66}]}, {"source": "erlenstar_11295915", "value": 16, "target": "d3noob_a22c42db65eb00d4e369", "links": [{"target_end_line": 40, "source_start_line": 27, "source_end_line": 40, "source_confidence": 19, "target_start_line": 31, "target_confidence": 26}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 26}, {"target_end_line": 14, "source_start_line": 10, "source_end_line": 14, "source_confidence": 19, "target_start_line": 14, "target_confidence": 26}, {"target_end_line": 26, "source_start_line": 23, "source_end_line": 26, "source_confidence": 19, "target_start_line": 25, "target_confidence": 26}, {"target_end_line": 40, "source_start_line": 27, "source_end_line": 40, "source_confidence": 19, "target_start_line": 31, "target_confidence": 26}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 26}, {"target_end_line": 14, "source_start_line": 10, "source_end_line": 14, "source_confidence": 19, "target_start_line": 14, "target_confidence": 26}, {"target_end_line": 26, "source_start_line": 23, "source_end_line": 26, "source_confidence": 19, "target_start_line": 25, "target_confidence": 26}, {"target_end_line": 40, "source_start_line": 27, "source_end_line": 40, "source_confidence": 19, "target_start_line": 31, "target_confidence": 26}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 26}, {"target_end_line": 14, "source_start_line": 10, "source_end_line": 14, "source_confidence": 19, "target_start_line": 14, "target_confidence": 26}, {"target_end_line": 26, "source_start_line": 23, "source_end_line": 26, "source_confidence": 19, "target_start_line": 25, "target_confidence": 26}, {"target_end_line": 40, "source_start_line": 27, "source_end_line": 40, "source_confidence": 19, "target_start_line": 31, "target_confidence": 26}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 26}, {"target_end_line": 14, "source_start_line": 10, "source_end_line": 14, "source_confidence": 19, "target_start_line": 14, "target_confidence": 26}, {"target_end_line": 26, "source_start_line": 23, "source_end_line": 26, "source_confidence": 19, "target_start_line": 25, "target_confidence": 26}]}, {"source": "mbostock_bc4e32ec71636b498c46", "value": 32, "target": "wcjohnson11_7fb5012dc2a9643541ac", "links": [{"target_end_line": 32, "source_start_line": 1, "source_end_line": 32, "source_confidence": 96, "target_start_line": 1, "target_confidence": 96}]}, {"source": "wrobstory_7630654", "value": 13, "target": "faniepotgieter_2ebcb3004abe34c380cc", "links": [{"target_end_line": 10, "source_start_line": 75, "source_end_line": 10, "source_confidence": 10, "target_start_line": 80, "target_confidence": 13}, {"target_end_line": 27, "source_start_line": 98, "source_end_line": 27, "source_confidence": 10, "target_start_line": 104, "target_confidence": 13}, {"target_end_line": 10, "source_start_line": 75, "source_end_line": 10, "source_confidence": 10, "target_start_line": 80, "target_confidence": 13}, {"target_end_line": 27, "source_start_line": 98, "source_end_line": 27, "source_confidence": 10, "target_start_line": 104, "target_confidence": 13}]}, {"source": "emeeks_a950399780ca90589f59", "value": 34, "target": "renecnielsen_c072f8145713cb3f0bde", "links": [{"target_end_line": 89, "source_start_line": 86, "source_end_line": 92, "source_confidence": 35, "target_start_line": 83, "target_confidence": 30}, {"target_end_line": 39, "source_start_line": 24, "source_end_line": 31, "source_confidence": 35, "target_start_line": 32, "target_confidence": 30}, {"target_end_line": 83, "source_start_line": 75, "source_end_line": 84, "source_confidence": 35, "target_start_line": 75, "target_confidence": 30}, {"target_end_line": 30, "source_start_line": 12, "source_end_line": 20, "source_confidence": 35, "target_start_line": 22, "target_confidence": 30}, {"target_end_line": 89, "source_start_line": 86, "source_end_line": 92, "source_confidence": 35, "target_start_line": 83, "target_confidence": 30}, {"target_end_line": 39, "source_start_line": 24, "source_end_line": 31, "source_confidence": 35, "target_start_line": 32, "target_confidence": 30}, {"target_end_line": 83, "source_start_line": 75, "source_end_line": 84, "source_confidence": 35, "target_start_line": 75, "target_confidence": 30}, {"target_end_line": 30, "source_start_line": 12, "source_end_line": 20, "source_confidence": 35, "target_start_line": 22, "target_confidence": 30}, {"target_end_line": 89, "source_start_line": 86, "source_end_line": 92, "source_confidence": 35, "target_start_line": 83, "target_confidence": 30}, {"target_end_line": 39, "source_start_line": 24, "source_end_line": 31, "source_confidence": 35, "target_start_line": 32, "target_confidence": 30}, {"target_end_line": 83, "source_start_line": 75, "source_end_line": 84, "source_confidence": 35, "target_start_line": 75, "target_confidence": 30}, {"target_end_line": 30, "source_start_line": 12, "source_end_line": 20, "source_confidence": 35, "target_start_line": 22, "target_confidence": 30}, {"target_end_line": 89, "source_start_line": 86, "source_end_line": 92, "source_confidence": 35, "target_start_line": 83, "target_confidence": 30}, {"target_end_line": 39, "source_start_line": 24, "source_end_line": 31, "source_confidence": 35, "target_start_line": 32, "target_confidence": 30}, {"target_end_line": 83, "source_start_line": 75, "source_end_line": 84, "source_confidence": 35, "target_start_line": 75, "target_confidence": 30}, {"target_end_line": 30, "source_start_line": 12, "source_end_line": 20, "source_confidence": 35, "target_start_line": 22, "target_confidence": 30}]}, {"source": "nguyenbq_85a4c204a61fa6407aed", "value": 18, "target": "darshit-shah_3b0327f5e04f89887a4f", "links": [{"target_end_line": 42, "source_start_line": 28, "source_end_line": 42, "source_confidence": 26, "target_start_line": 34, "target_confidence": 4}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 26, "target_start_line": 6, "target_confidence": 4}, {"target_end_line": 17, "source_start_line": 12, "source_end_line": 17, "source_confidence": 26, "target_start_line": 13, "target_confidence": 4}, {"target_end_line": 42, "source_start_line": 28, "source_end_line": 42, "source_confidence": 26, "target_start_line": 34, "target_confidence": 4}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 26, "target_start_line": 6, "target_confidence": 4}, {"target_end_line": 17, "source_start_line": 12, "source_end_line": 17, "source_confidence": 26, "target_start_line": 13, "target_confidence": 4}, {"target_end_line": 42, "source_start_line": 28, "source_end_line": 42, "source_confidence": 26, "target_start_line": 34, "target_confidence": 4}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 26, "target_start_line": 6, "target_confidence": 4}, {"target_end_line": 17, "source_start_line": 12, "source_end_line": 17, "source_confidence": 26, "target_start_line": 13, "target_confidence": 4}]}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "value": 26, "target": "emeeks_433a9b04f82a1c78af4b", "links": [{"target_end_line": 83, "source_start_line": 116, "source_end_line": 83, "source_confidence": 10, "target_start_line": 136, "target_confidence": 27}, {"target_end_line": 91, "source_start_line": 137, "source_end_line": 91, "source_confidence": 10, "target_start_line": 141, "target_confidence": 27}, {"target_end_line": 83, "source_start_line": 116, "source_end_line": 83, "source_confidence": 10, "target_start_line": 136, "target_confidence": 27}, {"target_end_line": 91, "source_start_line": 137, "source_end_line": 91, "source_confidence": 10, "target_start_line": 141, "target_confidence": 27}]}, {"source": "nstrayer_776ca46537c557e59b994aa439fdb26c", "value": 27, "target": "nikkev_d639d254985dd6dd6b4655a10100b197", "links": [{"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 99, "target_start_line": 27, "target_confidence": 99}]}, {"source": "renecnielsen_99ee17e86c184a616c7c", "value": 13, "target": "espinielli_347a69f480fcd1e40db43d782439e623", "links": [{"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 11, "target_start_line": 6, "target_confidence": 25}, {"target_end_line": 59, "source_start_line": 141, "source_end_line": 59, "source_confidence": 11, "target_start_line": 142, "target_confidence": 25}, {"target_end_line": 50, "source_start_line": 83, "source_end_line": 50, "source_confidence": 11, "target_start_line": 87, "target_confidence": 25}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 11, "target_start_line": 6, "target_confidence": 25}, {"target_end_line": 59, "source_start_line": 141, "source_end_line": 59, "source_confidence": 11, "target_start_line": 142, "target_confidence": 25}, {"target_end_line": 50, "source_start_line": 83, "source_end_line": 50, "source_confidence": 11, "target_start_line": 87, "target_confidence": 25}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 11, "target_start_line": 6, "target_confidence": 25}, {"target_end_line": 59, "source_start_line": 141, "source_end_line": 59, "source_confidence": 11, "target_start_line": 142, "target_confidence": 25}, {"target_end_line": 50, "source_start_line": 83, "source_end_line": 50, "source_confidence": 11, "target_start_line": 87, "target_confidence": 25}]}, {"source": "timelyportfolio_3106445", "value": 49, "target": "sivartravis_4279eb6fff6a7d47ca74", "links": [{"target_end_line": 351, "source_start_line": 181, "source_end_line": 351, "source_confidence": 20, "target_start_line": 192, "target_confidence": 8}, {"target_end_line": 79, "source_start_line": 170, "source_end_line": 79, "source_confidence": 20, "target_start_line": 177, "target_confidence": 8}, {"target_end_line": 369, "source_start_line": 217, "source_end_line": 369, "source_confidence": 20, "target_start_line": 223, "target_confidence": 8}, {"target_end_line": 379, "source_start_line": 227, "source_end_line": 379, "source_confidence": 20, "target_start_line": 234, "target_confidence": 8}, {"target_end_line": 50, "source_start_line": 159, "source_end_line": 50, "source_confidence": 20, "target_start_line": 162, "target_confidence": 8}, {"target_end_line": 15, "source_start_line": 14, "source_end_line": 15, "source_confidence": 20, "target_start_line": 20, "target_confidence": 8}, {"target_end_line": 351, "source_start_line": 181, "source_end_line": 351, "source_confidence": 20, "target_start_line": 192, "target_confidence": 8}, {"target_end_line": 79, "source_start_line": 170, "source_end_line": 79, "source_confidence": 20, "target_start_line": 177, "target_confidence": 8}, {"target_end_line": 369, "source_start_line": 217, "source_end_line": 369, "source_confidence": 20, "target_start_line": 223, "target_confidence": 8}, {"target_end_line": 379, "source_start_line": 227, "source_end_line": 379, "source_confidence": 20, "target_start_line": 234, "target_confidence": 8}, {"target_end_line": 50, "source_start_line": 159, "source_end_line": 50, "source_confidence": 20, "target_start_line": 162, "target_confidence": 8}, {"target_end_line": 15, "source_start_line": 14, "source_end_line": 15, "source_confidence": 20, "target_start_line": 20, "target_confidence": 8}, {"target_end_line": 351, "source_start_line": 181, "source_end_line": 351, "source_confidence": 20, "target_start_line": 192, "target_confidence": 8}, {"target_end_line": 79, "source_start_line": 170, "source_end_line": 79, "source_confidence": 20, "target_start_line": 177, "target_confidence": 8}, {"target_end_line": 369, "source_start_line": 217, "source_end_line": 369, "source_confidence": 20, "target_start_line": 223, "target_confidence": 8}, {"target_end_line": 379, "source_start_line": 227, "source_end_line": 379, "source_confidence": 20, "target_start_line": 234, "target_confidence": 8}, {"target_end_line": 50, "source_start_line": 159, "source_end_line": 50, "source_confidence": 20, "target_start_line": 162, "target_confidence": 8}, {"target_end_line": 15, "source_start_line": 14, "source_end_line": 15, "source_confidence": 20, "target_start_line": 20, "target_confidence": 8}, {"target_end_line": 351, "source_start_line": 181, "source_end_line": 351, "source_confidence": 20, "target_start_line": 192, "target_confidence": 8}, {"target_end_line": 79, "source_start_line": 170, "source_end_line": 79, "source_confidence": 20, "target_start_line": 177, "target_confidence": 8}, {"target_end_line": 369, "source_start_line": 217, "source_end_line": 369, "source_confidence": 20, "target_start_line": 223, "target_confidence": 8}, {"target_end_line": 379, "source_start_line": 227, "source_end_line": 379, "source_confidence": 20, "target_start_line": 234, "target_confidence": 8}, {"target_end_line": 50, "source_start_line": 159, "source_end_line": 50, "source_confidence": 20, "target_start_line": 162, "target_confidence": 8}, {"target_end_line": 15, "source_start_line": 14, "source_end_line": 15, "source_confidence": 20, "target_start_line": 20, "target_confidence": 8}, {"target_end_line": 351, "source_start_line": 181, "source_end_line": 351, "source_confidence": 20, "target_start_line": 192, "target_confidence": 8}, {"target_end_line": 79, "source_start_line": 170, "source_end_line": 79, "source_confidence": 20, "target_start_line": 177, "target_confidence": 8}, {"target_end_line": 369, "source_start_line": 217, "source_end_line": 369, "source_confidence": 20, "target_start_line": 223, "target_confidence": 8}, {"target_end_line": 379, "source_start_line": 227, "source_end_line": 379, "source_confidence": 20, "target_start_line": 234, "target_confidence": 8}, {"target_end_line": 50, "source_start_line": 159, "source_end_line": 50, "source_confidence": 20, "target_start_line": 162, "target_confidence": 8}, {"target_end_line": 15, "source_start_line": 14, "source_end_line": 15, "source_confidence": 20, "target_start_line": 20, "target_confidence": 8}, {"target_end_line": 351, "source_start_line": 181, "source_end_line": 351, "source_confidence": 20, "target_start_line": 192, "target_confidence": 8}, {"target_end_line": 79, "source_start_line": 170, "source_end_line": 79, "source_confidence": 20, "target_start_line": 177, "target_confidence": 8}, {"target_end_line": 369, "source_start_line": 217, "source_end_line": 369, "source_confidence": 20, "target_start_line": 223, "target_confidence": 8}, {"target_end_line": 379, "source_start_line": 227, "source_end_line": 379, "source_confidence": 20, "target_start_line": 234, "target_confidence": 8}, {"target_end_line": 50, "source_start_line": 159, "source_end_line": 50, "source_confidence": 20, "target_start_line": 162, "target_confidence": 8}, {"target_end_line": 15, "source_start_line": 14, "source_end_line": 15, "source_confidence": 20, "target_start_line": 20, "target_confidence": 8}]}, {"source": "wboykinm_7388233", "value": 63, "target": "jasondavies_0051a06829e72b423ba9", "links": [{"target_end_line": 86, "source_start_line": 81, "source_end_line": 86, "source_confidence": 50, "target_start_line": 102, "target_confidence": 67}, {"target_end_line": 49, "source_start_line": 23, "source_end_line": 49, "source_confidence": 50, "target_start_line": 55, "target_confidence": 67}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 50, "target_start_line": 8, "target_confidence": 67}, {"target_end_line": 86, "source_start_line": 81, "source_end_line": 86, "source_confidence": 50, "target_start_line": 102, "target_confidence": 67}, {"target_end_line": 49, "source_start_line": 23, "source_end_line": 49, "source_confidence": 50, "target_start_line": 55, "target_confidence": 67}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 50, "target_start_line": 8, "target_confidence": 67}, {"target_end_line": 86, "source_start_line": 81, "source_end_line": 86, "source_confidence": 50, "target_start_line": 102, "target_confidence": 67}, {"target_end_line": 49, "source_start_line": 23, "source_end_line": 49, "source_confidence": 50, "target_start_line": 55, "target_confidence": 67}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 50, "target_start_line": 8, "target_confidence": 67}]}, {"source": "eesur_ee8d0ab88229d0e07f7f", "value": 160, "target": "renecnielsen_99ee17e86c184a616c7c", "links": [{"target_end_line": 160, "source_start_line": 1, "source_end_line": 160, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "wrobstory_7630654", "value": 14, "target": "SpaceActuary_921afb08362d428e98eb", "links": [{"target_end_line": 21, "source_start_line": 98, "source_end_line": 21, "source_confidence": 10, "target_start_line": 105, "target_confidence": 21}, {"target_end_line": 8, "source_start_line": 75, "source_end_line": 8, "source_confidence": 10, "target_start_line": 80, "target_confidence": 21}, {"target_end_line": 21, "source_start_line": 98, "source_end_line": 21, "source_confidence": 10, "target_start_line": 105, "target_confidence": 21}, {"target_end_line": 8, "source_start_line": 75, "source_end_line": 8, "source_confidence": 10, "target_start_line": 80, "target_confidence": 21}]}, {"source": "mbostock_3902569", "value": 40, "target": "ZJONSSON_3918369", "links": [{"target_end_line": 37, "source_start_line": 27, "source_end_line": 37, "source_confidence": 39, "target_start_line": 36, "target_confidence": 37}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 39, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 72, "source_start_line": 51, "source_end_line": 72, "source_confidence": 39, "target_start_line": 63, "target_confidence": 37}, {"target_end_line": 26, "source_start_line": 18, "source_end_line": 26, "source_confidence": 39, "target_start_line": 26, "target_confidence": 37}, {"target_end_line": 37, "source_start_line": 27, "source_end_line": 37, "source_confidence": 39, "target_start_line": 36, "target_confidence": 37}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 39, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 72, "source_start_line": 51, "source_end_line": 72, "source_confidence": 39, "target_start_line": 63, "target_confidence": 37}, {"target_end_line": 26, "source_start_line": 18, "source_end_line": 26, "source_confidence": 39, "target_start_line": 26, "target_confidence": 37}, {"target_end_line": 37, "source_start_line": 27, "source_end_line": 37, "source_confidence": 39, "target_start_line": 36, "target_confidence": 37}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 39, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 72, "source_start_line": 51, "source_end_line": 72, "source_confidence": 39, "target_start_line": 63, "target_confidence": 37}, {"target_end_line": 26, "source_start_line": 18, "source_end_line": 26, "source_confidence": 39, "target_start_line": 26, "target_confidence": 37}, {"target_end_line": 37, "source_start_line": 27, "source_end_line": 37, "source_confidence": 39, "target_start_line": 36, "target_confidence": 37}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 39, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 72, "source_start_line": 51, "source_end_line": 72, "source_confidence": 39, "target_start_line": 63, "target_confidence": 37}, {"target_end_line": 26, "source_start_line": 18, "source_end_line": 26, "source_confidence": 39, "target_start_line": 26, "target_confidence": 37}]}, {"source": "rveciana_2986e55a01c7008d4b5b", "value": 60, "target": "espinielli_17f6644f79685c42eae5", "links": [{"target_end_line": 60, "source_start_line": 1, "source_end_line": 60, "source_confidence": 99, "target_start_line": 60, "target_confidence": 99}]}, {"source": "syntagmatic_5123745", "value": 49, "target": "renecnielsen_b9a0c2eafb1e655e0680", "links": [{"target_end_line": 49, "source_start_line": 1, "source_end_line": 49, "source_confidence": 99, "target_start_line": 49, "target_confidence": 99}]}, {"source": "anatolyg_25fa3e51da9a1ac22e02", "value": 19, "target": "lifeofmle_862ce2e7ef47e1e1a310", "links": [{"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 98, "target_start_line": 1, "target_confidence": 98}]}, {"source": "dukevis_6768900", "value": 139, "target": "ufenegga_d5dd49363a42fb2d5a07", "links": [{"target_end_line": 139, "source_start_line": 1, "source_end_line": 139, "source_confidence": 98, "target_start_line": 1, "target_confidence": 98}]}, {"source": "hwangmoretime_06aa7e108b77745f1f24", "value": 16, "target": "mgold_3cb71efd1287f5c03c80", "links": [{"target_end_line": 5, "source_start_line": 6, "source_end_line": 8, "source_confidence": 8, "target_start_line": 3, "target_confidence": 18}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 16, "source_confidence": 8, "target_start_line": 7, "target_confidence": 18}, {"target_end_line": 52, "source_start_line": 27, "source_end_line": 32, "source_confidence": 8, "target_start_line": 47, "target_confidence": 18}, {"target_end_line": 5, "source_start_line": 6, "source_end_line": 8, "source_confidence": 8, "target_start_line": 3, "target_confidence": 18}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 16, "source_confidence": 8, "target_start_line": 7, "target_confidence": 18}, {"target_end_line": 52, "source_start_line": 27, "source_end_line": 32, "source_confidence": 8, "target_start_line": 47, "target_confidence": 18}, {"target_end_line": 5, "source_start_line": 6, "source_end_line": 8, "source_confidence": 8, "target_start_line": 3, "target_confidence": 18}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 16, "source_confidence": 8, "target_start_line": 7, "target_confidence": 18}, {"target_end_line": 52, "source_start_line": 27, "source_end_line": 32, "source_confidence": 8, "target_start_line": 47, "target_confidence": 18}]}, {"source": "StewartNoyce_8699346", "value": 25, "target": "ecerulm_f0a36710e3ccbf0cfc01", "links": [{"target_end_line": 30, "source_start_line": 24, "source_end_line": 42, "source_confidence": 43, "target_start_line": 12, "target_confidence": 64}, {"target_end_line": 36, "source_start_line": 43, "source_end_line": 48, "source_confidence": 43, "target_start_line": 31, "target_confidence": 64}, {"target_end_line": 30, "source_start_line": 24, "source_end_line": 42, "source_confidence": 43, "target_start_line": 12, "target_confidence": 64}, {"target_end_line": 36, "source_start_line": 43, "source_end_line": 48, "source_confidence": 43, "target_start_line": 31, "target_confidence": 64}]}, {"source": "d3noob_8952219", "value": 11, "target": "git-ashish_8959381", "links": [{"target_end_line": 15, "source_start_line": 24, "source_end_line": 29, "source_confidence": 24, "target_start_line": 11, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 24, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 15, "source_start_line": 24, "source_end_line": 29, "source_confidence": 24, "target_start_line": 11, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 24, "target_start_line": 1, "target_confidence": 17}]}, {"source": "d3noob_9211665", "value": 18, "target": "clhenrick_20fd8f959b965d647f83", "links": [{"target_end_line": 63, "source_start_line": 36, "source_end_line": 63, "source_confidence": 35, "target_start_line": 45, "target_confidence": 43}, {"target_end_line": 39, "source_start_line": 12, "source_end_line": 39, "source_confidence": 35, "target_start_line": 16, "target_confidence": 43}, {"target_end_line": 70, "source_start_line": 54, "source_end_line": 70, "source_confidence": 35, "target_start_line": 56, "target_confidence": 43}, {"target_end_line": 63, "source_start_line": 36, "source_end_line": 63, "source_confidence": 35, "target_start_line": 45, "target_confidence": 43}, {"target_end_line": 39, "source_start_line": 12, "source_end_line": 39, "source_confidence": 35, "target_start_line": 16, "target_confidence": 43}, {"target_end_line": 70, "source_start_line": 54, "source_end_line": 70, "source_confidence": 35, "target_start_line": 56, "target_confidence": 43}, {"target_end_line": 63, "source_start_line": 36, "source_end_line": 63, "source_confidence": 35, "target_start_line": 45, "target_confidence": 43}, {"target_end_line": 39, "source_start_line": 12, "source_end_line": 39, "source_confidence": 35, "target_start_line": 16, "target_confidence": 43}, {"target_end_line": 70, "source_start_line": 54, "source_end_line": 70, "source_confidence": 35, "target_start_line": 56, "target_confidence": 43}]}, {"source": "d3noob_e1aa61856118edfa624d", "value": 13, "target": "git-ashish_e7182a82862071b405b5", "links": [{"target_end_line": 8, "source_start_line": 1, "source_end_line": 7, "source_confidence": 13, "target_start_line": 1, "target_confidence": 30}, {"target_end_line": 19, "source_start_line": 32, "source_end_line": 37, "source_confidence": 13, "target_start_line": 15, "target_confidence": 30}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 7, "source_confidence": 13, "target_start_line": 1, "target_confidence": 30}, {"target_end_line": 19, "source_start_line": 32, "source_end_line": 37, "source_confidence": 13, "target_start_line": 15, "target_confidence": 30}]}, {"source": "sivartravis_4279eb6fff6a7d47ca74", "value": 562, "target": "domhorvath_5413cfc6b6cd59eb0e1544a990ba3f74", "links": [{"target_end_line": 562, "source_start_line": 1, "source_end_line": 562, "source_confidence": 99, "target_start_line": 562, "target_confidence": 99}]}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "value": 28, "target": "emeeks_1a75ec54489368b514f8", "links": [{"target_end_line": 77, "source_start_line": 116, "source_end_line": 77, "source_confidence": 12, "target_start_line": 143, "target_confidence": 38}]}, {"source": "erlenstar_11295915", "value": 16, "target": "d3noob_464c92429ac05c6a19a1", "links": [{"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 31}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 31}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 31}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 31}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 31}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 31}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 31}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 31}]}, {"source": "tommct_8191276", "value": 11, "target": "d3noob_8952219", "links": [{"target_end_line": 29, "source_start_line": 105, "source_end_line": 29, "source_confidence": 6, "target_start_line": 109, "target_confidence": 24}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 6, "target_start_line": 5, "target_confidence": 24}, {"target_end_line": 29, "source_start_line": 105, "source_end_line": 29, "source_confidence": 6, "target_start_line": 109, "target_confidence": 24}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 6, "target_start_line": 5, "target_confidence": 24}]}, {"source": "emeeks_8855733967174fe4b1b4", "value": 18, "target": "hugolpz_09c837f43dc4b3962be9", "links": [{"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 98, "target_start_line": 1, "target_confidence": 98}]}, {"source": "benkimball_8570073", "value": 14, "target": "larsenmtl_4c5ebcc9bca489f8f530bd163b35f39b", "links": [{"target_end_line": 36, "source_start_line": 50, "source_end_line": 56, "source_confidence": 30, "target_start_line": 30, "target_confidence": 17}, {"target_end_line": 8, "source_start_line": 9, "source_end_line": 15, "source_confidence": 30, "target_start_line": 3, "target_confidence": 17}, {"target_end_line": 36, "source_start_line": 50, "source_end_line": 56, "source_confidence": 30, "target_start_line": 30, "target_confidence": 17}, {"target_end_line": 8, "source_start_line": 9, "source_end_line": 15, "source_confidence": 30, "target_start_line": 3, "target_confidence": 17}]}, {"source": "emeeks_a950399780ca90589f59", "value": 41, "target": "renecnielsen_f8fba5bc1d56bafcdbe3", "links": [{"target_end_line": 98, "source_start_line": 84, "source_end_line": 89, "source_confidence": 40, "target_start_line": 91, "target_confidence": 32}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 40, "target_start_line": 1, "target_confidence": 32}, {"target_end_line": 42, "source_start_line": 12, "source_end_line": 21, "source_confidence": 40, "target_start_line": 32, "target_confidence": 32}, {"target_end_line": 90, "source_start_line": 75, "source_end_line": 84, "source_confidence": 40, "target_start_line": 81, "target_confidence": 32}, {"target_end_line": 98, "source_start_line": 84, "source_end_line": 89, "source_confidence": 40, "target_start_line": 91, "target_confidence": 32}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 40, "target_start_line": 1, "target_confidence": 32}, {"target_end_line": 42, "source_start_line": 12, "source_end_line": 21, "source_confidence": 40, "target_start_line": 32, "target_confidence": 32}, {"target_end_line": 90, "source_start_line": 75, "source_end_line": 84, "source_confidence": 40, "target_start_line": 81, "target_confidence": 32}, {"target_end_line": 98, "source_start_line": 84, "source_end_line": 89, "source_confidence": 40, "target_start_line": 91, "target_confidence": 32}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 40, "target_start_line": 1, "target_confidence": 32}, {"target_end_line": 42, "source_start_line": 12, "source_end_line": 21, "source_confidence": 40, "target_start_line": 32, "target_confidence": 32}, {"target_end_line": 90, "source_start_line": 75, "source_end_line": 84, "source_confidence": 40, "target_start_line": 81, "target_confidence": 32}, {"target_end_line": 98, "source_start_line": 84, "source_end_line": 89, "source_confidence": 40, "target_start_line": 91, "target_confidence": 32}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 40, "target_start_line": 1, "target_confidence": 32}, {"target_end_line": 42, "source_start_line": 12, "source_end_line": 21, "source_confidence": 40, "target_start_line": 32, "target_confidence": 32}, {"target_end_line": 90, "source_start_line": 75, "source_end_line": 84, "source_confidence": 40, "target_start_line": 81, "target_confidence": 32}]}, {"source": "ahmohamed_82ac20ccc949470e3206", "value": 32, "target": "git-ashish_65d72d26368bd3bf75bf", "links": [{"target_end_line": 35, "source_start_line": 23, "source_end_line": 38, "source_confidence": 47, "target_start_line": 20, "target_confidence": 66}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 15, "source_confidence": 47, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 35, "source_start_line": 23, "source_end_line": 38, "source_confidence": 47, "target_start_line": 20, "target_confidence": 66}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 15, "source_confidence": 47, "target_start_line": 1, "target_confidence": 66}]}, {"source": "hwangmoretime_06aa7e108b77745f1f24", "value": 18, "target": "mgold_e21dbf08e838796dcf60", "links": [{"target_end_line": 5, "source_start_line": 6, "source_end_line": 8, "source_confidence": 10, "target_start_line": 3, "target_confidence": 21}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 12, "target_confidence": 21}, {"target_end_line": 52, "source_start_line": 27, "source_end_line": 32, "source_confidence": 10, "target_start_line": 47, "target_confidence": 21}, {"target_end_line": 43, "source_start_line": 39, "source_end_line": 40, "source_confidence": 10, "target_start_line": 41, "target_confidence": 21}, {"target_end_line": 5, "source_start_line": 6, "source_end_line": 8, "source_confidence": 10, "target_start_line": 3, "target_confidence": 21}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 12, "target_confidence": 21}, {"target_end_line": 52, "source_start_line": 27, "source_end_line": 32, "source_confidence": 10, "target_start_line": 47, "target_confidence": 21}, {"target_end_line": 43, "source_start_line": 39, "source_end_line": 40, "source_confidence": 10, "target_start_line": 41, "target_confidence": 21}, {"target_end_line": 5, "source_start_line": 6, "source_end_line": 8, "source_confidence": 10, "target_start_line": 3, "target_confidence": 21}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 12, "target_confidence": 21}, {"target_end_line": 52, "source_start_line": 27, "source_end_line": 32, "source_confidence": 10, "target_start_line": 47, "target_confidence": 21}, {"target_end_line": 43, "source_start_line": 39, "source_end_line": 40, "source_confidence": 10, "target_start_line": 41, "target_confidence": 21}, {"target_end_line": 5, "source_start_line": 6, "source_end_line": 8, "source_confidence": 10, "target_start_line": 3, "target_confidence": 21}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 12, "target_confidence": 21}, {"target_end_line": 52, "source_start_line": 27, "source_end_line": 32, "source_confidence": 10, "target_start_line": 47, "target_confidence": 21}, {"target_end_line": 43, "source_start_line": 39, "source_end_line": 40, "source_confidence": 10, "target_start_line": 41, "target_confidence": 21}]}, {"source": "ZJONSSON_3918369", "value": 15, "target": "vjpgo_4687662", "links": [{"target_end_line": 18, "source_start_line": 31, "source_end_line": 37, "source_confidence": 18, "target_start_line": 12, "target_confidence": 63}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 18, "target_start_line": 1, "target_confidence": 63}, {"target_end_line": 18, "source_start_line": 31, "source_end_line": 37, "source_confidence": 18, "target_start_line": 12, "target_confidence": 63}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 18, "target_start_line": 1, "target_confidence": 63}]}, {"source": "ZJONSSON_3918369", "value": 15, "target": "vjpgo_4687681", "links": [{"target_end_line": 18, "source_start_line": 31, "source_end_line": 37, "source_confidence": 18, "target_start_line": 12, "target_confidence": 63}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 18, "target_start_line": 1, "target_confidence": 63}, {"target_end_line": 18, "source_start_line": 31, "source_end_line": 37, "source_confidence": 18, "target_start_line": 12, "target_confidence": 63}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 18, "target_start_line": 1, "target_confidence": 63}]}, {"source": "mbostock_1256572", "value": 49, "target": "timelyportfolio_3106445", "links": [{"target_end_line": 192, "source_start_line": 339, "source_end_line": 351, "source_confidence": 8, "target_start_line": 181, "target_confidence": 20}, {"target_end_line": 177, "source_start_line": 72, "source_end_line": 79, "source_confidence": 8, "target_start_line": 170, "target_confidence": 20}, {"target_end_line": 223, "source_start_line": 362, "source_end_line": 369, "source_confidence": 8, "target_start_line": 217, "target_confidence": 20}, {"target_end_line": 234, "source_start_line": 371, "source_end_line": 379, "source_confidence": 8, "target_start_line": 227, "target_confidence": 20}, {"target_end_line": 162, "source_start_line": 47, "source_end_line": 50, "source_confidence": 8, "target_start_line": 159, "target_confidence": 20}, {"target_end_line": 20, "source_start_line": 9, "source_end_line": 15, "source_confidence": 8, "target_start_line": 14, "target_confidence": 20}, {"target_end_line": 192, "source_start_line": 339, "source_end_line": 351, "source_confidence": 8, "target_start_line": 181, "target_confidence": 20}, {"target_end_line": 177, "source_start_line": 72, "source_end_line": 79, "source_confidence": 8, "target_start_line": 170, "target_confidence": 20}, {"target_end_line": 223, "source_start_line": 362, "source_end_line": 369, "source_confidence": 8, "target_start_line": 217, "target_confidence": 20}, {"target_end_line": 234, "source_start_line": 371, "source_end_line": 379, "source_confidence": 8, "target_start_line": 227, "target_confidence": 20}, {"target_end_line": 162, "source_start_line": 47, "source_end_line": 50, "source_confidence": 8, "target_start_line": 159, "target_confidence": 20}, {"target_end_line": 20, "source_start_line": 9, "source_end_line": 15, "source_confidence": 8, "target_start_line": 14, "target_confidence": 20}, {"target_end_line": 192, "source_start_line": 339, "source_end_line": 351, "source_confidence": 8, "target_start_line": 181, "target_confidence": 20}, {"target_end_line": 177, "source_start_line": 72, "source_end_line": 79, "source_confidence": 8, "target_start_line": 170, "target_confidence": 20}, {"target_end_line": 223, "source_start_line": 362, "source_end_line": 369, "source_confidence": 8, "target_start_line": 217, "target_confidence": 20}, {"target_end_line": 234, "source_start_line": 371, "source_end_line": 379, "source_confidence": 8, "target_start_line": 227, "target_confidence": 20}, {"target_end_line": 162, "source_start_line": 47, "source_end_line": 50, "source_confidence": 8, "target_start_line": 159, "target_confidence": 20}, {"target_end_line": 20, "source_start_line": 9, "source_end_line": 15, "source_confidence": 8, "target_start_line": 14, "target_confidence": 20}, {"target_end_line": 192, "source_start_line": 339, "source_end_line": 351, "source_confidence": 8, "target_start_line": 181, "target_confidence": 20}, {"target_end_line": 177, "source_start_line": 72, "source_end_line": 79, "source_confidence": 8, "target_start_line": 170, "target_confidence": 20}, {"target_end_line": 223, "source_start_line": 362, "source_end_line": 369, "source_confidence": 8, "target_start_line": 217, "target_confidence": 20}, {"target_end_line": 234, "source_start_line": 371, "source_end_line": 379, "source_confidence": 8, "target_start_line": 227, "target_confidence": 20}, {"target_end_line": 162, "source_start_line": 47, "source_end_line": 50, "source_confidence": 8, "target_start_line": 159, "target_confidence": 20}, {"target_end_line": 20, "source_start_line": 9, "source_end_line": 15, "source_confidence": 8, "target_start_line": 14, "target_confidence": 20}, {"target_end_line": 192, "source_start_line": 339, "source_end_line": 351, "source_confidence": 8, "target_start_line": 181, "target_confidence": 20}, {"target_end_line": 177, "source_start_line": 72, "source_end_line": 79, "source_confidence": 8, "target_start_line": 170, "target_confidence": 20}, {"target_end_line": 223, "source_start_line": 362, "source_end_line": 369, "source_confidence": 8, "target_start_line": 217, "target_confidence": 20}, {"target_end_line": 234, "source_start_line": 371, "source_end_line": 379, "source_confidence": 8, "target_start_line": 227, "target_confidence": 20}, {"target_end_line": 162, "source_start_line": 47, "source_end_line": 50, "source_confidence": 8, "target_start_line": 159, "target_confidence": 20}, {"target_end_line": 20, "source_start_line": 9, "source_end_line": 15, "source_confidence": 8, "target_start_line": 14, "target_confidence": 20}, {"target_end_line": 192, "source_start_line": 339, "source_end_line": 351, "source_confidence": 8, "target_start_line": 181, "target_confidence": 20}, {"target_end_line": 177, "source_start_line": 72, "source_end_line": 79, "source_confidence": 8, "target_start_line": 170, "target_confidence": 20}, {"target_end_line": 223, "source_start_line": 362, "source_end_line": 369, "source_confidence": 8, "target_start_line": 217, "target_confidence": 20}, {"target_end_line": 234, "source_start_line": 371, "source_end_line": 379, "source_confidence": 8, "target_start_line": 227, "target_confidence": 20}, {"target_end_line": 162, "source_start_line": 47, "source_end_line": 50, "source_confidence": 8, "target_start_line": 159, "target_confidence": 20}, {"target_end_line": 20, "source_start_line": 9, "source_end_line": 15, "source_confidence": 8, "target_start_line": 14, "target_confidence": 20}]}, {"source": "xaranke_b956ee7215b7b50bc78a", "value": 13, "target": "daluu_d43ec5e610dd5dedbbe1", "links": [{"target_end_line": 62, "source_start_line": 39, "source_end_line": 62, "source_confidence": 26, "target_start_line": 43, "target_confidence": 12}, {"target_end_line": 8, "source_start_line": 2, "source_end_line": 8, "source_confidence": 26, "target_start_line": 9, "target_confidence": 12}, {"target_end_line": 62, "source_start_line": 39, "source_end_line": 62, "source_confidence": 26, "target_start_line": 43, "target_confidence": 12}, {"target_end_line": 8, "source_start_line": 2, "source_end_line": 8, "source_confidence": 26, "target_start_line": 9, "target_confidence": 12}]}, {"source": "emeeks_a950399780ca90589f59", "value": 91, "target": "renecnielsen_4a7d0a3a159ae7d0bdc3", "links": [{"target_end_line": 83, "source_start_line": 1, "source_end_line": 84, "source_confidence": 90, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 89, "source_start_line": 86, "source_end_line": 92, "source_confidence": 90, "target_start_line": 83, "target_confidence": 88}, {"target_end_line": 83, "source_start_line": 1, "source_end_line": 84, "source_confidence": 90, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 89, "source_start_line": 86, "source_end_line": 92, "source_confidence": 90, "target_start_line": 83, "target_confidence": 88}]}, {"source": "emeeks_a1e48992be56681e3f93", "value": 45, "target": "georgemurphy_2ab077a1a795efeab2c8", "links": [{"target_end_line": 45, "source_start_line": 1, "source_end_line": 45, "source_confidence": 97, "target_start_line": 1, "target_confidence": 97}]}, {"source": "david4096_5819181", "value": 32, "target": "rveciana_170a76b8dc1f9cfd8b2d", "links": [{"target_end_line": 34, "source_start_line": 83, "source_end_line": 114, "source_confidence": 24, "target_start_line": 3, "target_confidence": 82}]}, {"source": "fdaudens_22905918f5aec406f773", "value": 56, "target": "CBasis_6a76935b609b0b2a38596c46fb690bba", "links": [{"target_end_line": 56, "source_start_line": 1, "source_end_line": 56, "source_confidence": 98, "target_start_line": 56, "target_confidence": 98}]}, {"source": "dustinlarimer_5701438", "value": 26, "target": "weiglemc_6185069", "links": [{"target_end_line": 34, "source_start_line": 30, "source_end_line": 35, "source_confidence": 29, "target_start_line": 30, "target_confidence": 21}, {"target_end_line": 64, "source_start_line": 50, "source_end_line": 58, "source_confidence": 29, "target_start_line": 56, "target_confidence": 21}, {"target_end_line": 4, "source_start_line": 6, "source_end_line": 8, "source_confidence": 29, "target_start_line": 2, "target_confidence": 21}, {"target_end_line": 76, "source_start_line": 62, "source_end_line": 69, "source_confidence": 29, "target_start_line": 69, "target_confidence": 21}, {"target_end_line": 34, "source_start_line": 30, "source_end_line": 35, "source_confidence": 29, "target_start_line": 30, "target_confidence": 21}, {"target_end_line": 64, "source_start_line": 50, "source_end_line": 58, "source_confidence": 29, "target_start_line": 56, "target_confidence": 21}, {"target_end_line": 4, "source_start_line": 6, "source_end_line": 8, "source_confidence": 29, "target_start_line": 2, "target_confidence": 21}, {"target_end_line": 76, "source_start_line": 62, "source_end_line": 69, "source_confidence": 29, "target_start_line": 69, "target_confidence": 21}, {"target_end_line": 34, "source_start_line": 30, "source_end_line": 35, "source_confidence": 29, "target_start_line": 30, "target_confidence": 21}, {"target_end_line": 64, "source_start_line": 50, "source_end_line": 58, "source_confidence": 29, "target_start_line": 56, "target_confidence": 21}, {"target_end_line": 4, "source_start_line": 6, "source_end_line": 8, "source_confidence": 29, "target_start_line": 2, "target_confidence": 21}, {"target_end_line": 76, "source_start_line": 62, "source_end_line": 69, "source_confidence": 29, "target_start_line": 69, "target_confidence": 21}, {"target_end_line": 34, "source_start_line": 30, "source_end_line": 35, "source_confidence": 29, "target_start_line": 30, "target_confidence": 21}, {"target_end_line": 64, "source_start_line": 50, "source_end_line": 58, "source_confidence": 29, "target_start_line": 56, "target_confidence": 21}, {"target_end_line": 4, "source_start_line": 6, "source_end_line": 8, "source_confidence": 29, "target_start_line": 2, "target_confidence": 21}, {"target_end_line": 76, "source_start_line": 62, "source_end_line": 69, "source_confidence": 29, "target_start_line": 69, "target_confidence": 21}]}, {"source": "jalapic_af63041b6b5edf373fa3", "value": 198, "target": "CBasis_bc51bd85d8045fe0bc470250daf8d0cd", "links": [{"target_end_line": 198, "source_start_line": 1, "source_end_line": 198, "source_confidence": 99, "target_start_line": 198, "target_confidence": 99}]}, {"source": "yaph_2662413", "value": 19, "target": "StewartNoyce_8699346", "links": [{"target_end_line": 42, "source_start_line": 19, "source_end_line": 42, "source_confidence": 57, "target_start_line": 31, "target_confidence": 37}, {"target_end_line": 21, "source_start_line": 6, "source_end_line": 21, "source_confidence": 57, "target_start_line": 11, "target_confidence": 37}, {"target_end_line": 42, "source_start_line": 19, "source_end_line": 42, "source_confidence": 57, "target_start_line": 31, "target_confidence": 37}, {"target_end_line": 21, "source_start_line": 6, "source_end_line": 21, "source_confidence": 57, "target_start_line": 11, "target_confidence": 37}]}, {"source": "wcjohnson11_7ebb3f3a28e403745856", "value": 128, "target": "malcolm-decuire_95314ea75aed1c988f7c", "links": [{"target_end_line": 128, "source_start_line": 1, "source_end_line": 128, "source_confidence": 99, "target_start_line": 128, "target_confidence": 99}]}, {"source": "emeeks_2090bc8489a662c2e84d", "value": 61, "target": "renecnielsen_87e6126d58f86d216a3b", "links": [{"target_end_line": 61, "source_start_line": 1, "source_end_line": 61, "source_confidence": 98, "target_start_line": 1, "target_confidence": 98}]}, {"source": "tmcw_4067674", "value": 46, "target": "couchand_6394506", "links": [{"target_end_line": 46, "source_start_line": 1, "source_end_line": 46, "source_confidence": 99, "target_start_line": 46, "target_confidence": 99}]}, {"source": "tarekrached_a7628dd96c62155068dd", "value": 60, "target": "wcjohnson11_7ebb3f3a28e403745856", "links": [{"target_end_line": 59, "source_start_line": 64, "source_end_line": 82, "source_confidence": 28, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 128, "source_start_line": 198, "source_end_line": 210, "source_confidence": 28, "target_start_line": 117, "target_confidence": 45}, {"target_end_line": 40, "source_start_line": 46, "source_end_line": 60, "source_confidence": 28, "target_start_line": 26, "target_confidence": 45}, {"target_end_line": 73, "source_start_line": 95, "source_end_line": 102, "source_confidence": 28, "target_start_line": 65, "target_confidence": 45}, {"target_end_line": 19, "source_start_line": 34, "source_end_line": 38, "source_confidence": 28, "target_start_line": 15, "target_confidence": 45}, {"target_end_line": 59, "source_start_line": 64, "source_end_line": 82, "source_confidence": 28, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 128, "source_start_line": 198, "source_end_line": 210, "source_confidence": 28, "target_start_line": 117, "target_confidence": 45}, {"target_end_line": 40, "source_start_line": 46, "source_end_line": 60, "source_confidence": 28, "target_start_line": 26, "target_confidence": 45}, {"target_end_line": 73, "source_start_line": 95, "source_end_line": 102, "source_confidence": 28, "target_start_line": 65, "target_confidence": 45}, {"target_end_line": 19, "source_start_line": 34, "source_end_line": 38, "source_confidence": 28, "target_start_line": 15, "target_confidence": 45}, {"target_end_line": 59, "source_start_line": 64, "source_end_line": 82, "source_confidence": 28, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 128, "source_start_line": 198, "source_end_line": 210, "source_confidence": 28, "target_start_line": 117, "target_confidence": 45}, {"target_end_line": 40, "source_start_line": 46, "source_end_line": 60, "source_confidence": 28, "target_start_line": 26, "target_confidence": 45}, {"target_end_line": 73, "source_start_line": 95, "source_end_line": 102, "source_confidence": 28, "target_start_line": 65, "target_confidence": 45}, {"target_end_line": 19, "source_start_line": 34, "source_end_line": 38, "source_confidence": 28, "target_start_line": 15, "target_confidence": 45}, {"target_end_line": 59, "source_start_line": 64, "source_end_line": 82, "source_confidence": 28, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 128, "source_start_line": 198, "source_end_line": 210, "source_confidence": 28, "target_start_line": 117, "target_confidence": 45}, {"target_end_line": 40, "source_start_line": 46, "source_end_line": 60, "source_confidence": 28, "target_start_line": 26, "target_confidence": 45}, {"target_end_line": 73, "source_start_line": 95, "source_end_line": 102, "source_confidence": 28, "target_start_line": 65, "target_confidence": 45}, {"target_end_line": 19, "source_start_line": 34, "source_end_line": 38, "source_confidence": 28, "target_start_line": 15, "target_confidence": 45}, {"target_end_line": 59, "source_start_line": 64, "source_end_line": 82, "source_confidence": 28, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 128, "source_start_line": 198, "source_end_line": 210, "source_confidence": 28, "target_start_line": 117, "target_confidence": 45}, {"target_end_line": 40, "source_start_line": 46, "source_end_line": 60, "source_confidence": 28, "target_start_line": 26, "target_confidence": 45}, {"target_end_line": 73, "source_start_line": 95, "source_end_line": 102, "source_confidence": 28, "target_start_line": 65, "target_confidence": 45}, {"target_end_line": 19, "source_start_line": 34, "source_end_line": 38, "source_confidence": 28, "target_start_line": 15, "target_confidence": 45}]}, {"source": "enjalot_31168147b88a1748bc8b", "value": 19, "target": "mpmckenna8_f43a842a8953e87f5b3c", "links": [{"target_end_line": 20, "source_start_line": 9, "source_end_line": 19, "source_confidence": 28, "target_start_line": 10, "target_confidence": 39}, {"target_end_line": 48, "source_start_line": 33, "source_end_line": 39, "source_confidence": 28, "target_start_line": 41, "target_confidence": 39}, {"target_end_line": 20, "source_start_line": 9, "source_end_line": 19, "source_confidence": 28, "target_start_line": 10, "target_confidence": 39}, {"target_end_line": 48, "source_start_line": 33, "source_end_line": 39, "source_confidence": 28, "target_start_line": 41, "target_confidence": 39}]}, {"source": "tommct_8191276", "value": 17, "target": "benkimball_8570073", "links": [{"target_end_line": 26, "source_start_line": 105, "source_end_line": 26, "source_confidence": 7, "target_start_line": 109, "target_confidence": 27}, {"target_end_line": 14, "source_start_line": 3, "source_end_line": 14, "source_confidence": 7, "target_start_line": 7, "target_confidence": 27}, {"target_end_line": 19, "source_start_line": 14, "source_end_line": 19, "source_confidence": 7, "target_start_line": 19, "target_confidence": 27}, {"target_end_line": 26, "source_start_line": 105, "source_end_line": 26, "source_confidence": 7, "target_start_line": 109, "target_confidence": 27}, {"target_end_line": 14, "source_start_line": 3, "source_end_line": 14, "source_confidence": 7, "target_start_line": 7, "target_confidence": 27}, {"target_end_line": 19, "source_start_line": 14, "source_end_line": 19, "source_confidence": 7, "target_start_line": 19, "target_confidence": 27}, {"target_end_line": 26, "source_start_line": 105, "source_end_line": 26, "source_confidence": 7, "target_start_line": 109, "target_confidence": 27}, {"target_end_line": 14, "source_start_line": 3, "source_end_line": 14, "source_confidence": 7, "target_start_line": 7, "target_confidence": 27}, {"target_end_line": 19, "source_start_line": 14, "source_end_line": 19, "source_confidence": 7, "target_start_line": 19, "target_confidence": 27}]}, {"source": "timelyportfolio_3106445", "value": 11, "target": "mbostock_3306147", "links": [{"target_end_line": 16, "source_start_line": 19, "source_end_line": 16, "source_confidence": 7, "target_start_line": 23, "target_confidence": 65}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 7, "target_start_line": 9, "target_confidence": 65}, {"target_end_line": 16, "source_start_line": 19, "source_end_line": 16, "source_confidence": 7, "target_start_line": 23, "target_confidence": 65}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 7, "target_start_line": 9, "target_confidence": 65}]}, {"source": "enoex_1829124", "value": 31, "target": "enjalot_1829187", "links": [{"target_end_line": 34, "source_start_line": 14, "source_end_line": 34, "source_confidence": 68, "target_start_line": 33, "target_confidence": 72}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 68, "target_start_line": 6, "target_confidence": 72}, {"target_end_line": 15, "source_start_line": 10, "source_end_line": 15, "source_confidence": 68, "target_start_line": 14, "target_confidence": 72}, {"target_end_line": 34, "source_start_line": 14, "source_end_line": 34, "source_confidence": 68, "target_start_line": 33, "target_confidence": 72}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 68, "target_start_line": 6, "target_confidence": 72}, {"target_end_line": 15, "source_start_line": 10, "source_end_line": 15, "source_confidence": 68, "target_start_line": 14, "target_confidence": 72}, {"target_end_line": 34, "source_start_line": 14, "source_end_line": 34, "source_confidence": 68, "target_start_line": 33, "target_confidence": 72}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 68, "target_start_line": 6, "target_confidence": 72}, {"target_end_line": 15, "source_start_line": 10, "source_end_line": 15, "source_confidence": 68, "target_start_line": 14, "target_confidence": 72}]}, {"source": "ZJONSSON_3918369", "value": 15, "target": "vjpgo_4687407", "links": [{"target_end_line": 18, "source_start_line": 31, "source_end_line": 37, "source_confidence": 18, "target_start_line": 12, "target_confidence": 63}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 18, "target_start_line": 1, "target_confidence": 63}, {"target_end_line": 18, "source_start_line": 31, "source_end_line": 37, "source_confidence": 18, "target_start_line": 12, "target_confidence": 63}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 18, "target_start_line": 1, "target_confidence": 63}]}, {"source": "explunit_e9efb830439247eea1be", "value": 65, "target": "jshanley_86e3bc1b231e9772b16d", "links": [{"target_end_line": 51, "source_start_line": 27, "source_end_line": 46, "source_confidence": 88, "target_start_line": 31, "target_confidence": 83}, {"target_end_line": 30, "source_start_line": 10, "source_end_line": 25, "source_confidence": 88, "target_start_line": 16, "target_confidence": 83}, {"target_end_line": 73, "source_start_line": 46, "source_end_line": 67, "source_confidence": 88, "target_start_line": 52, "target_confidence": 83}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 88, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 51, "source_start_line": 27, "source_end_line": 46, "source_confidence": 88, "target_start_line": 31, "target_confidence": 83}, {"target_end_line": 30, "source_start_line": 10, "source_end_line": 25, "source_confidence": 88, "target_start_line": 16, "target_confidence": 83}, {"target_end_line": 73, "source_start_line": 46, "source_end_line": 67, "source_confidence": 88, "target_start_line": 52, "target_confidence": 83}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 88, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 51, "source_start_line": 27, "source_end_line": 46, "source_confidence": 88, "target_start_line": 31, "target_confidence": 83}, {"target_end_line": 30, "source_start_line": 10, "source_end_line": 25, "source_confidence": 88, "target_start_line": 16, "target_confidence": 83}, {"target_end_line": 73, "source_start_line": 46, "source_end_line": 67, "source_confidence": 88, "target_start_line": 52, "target_confidence": 83}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 88, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 51, "source_start_line": 27, "source_end_line": 46, "source_confidence": 88, "target_start_line": 31, "target_confidence": 83}, {"target_end_line": 30, "source_start_line": 10, "source_end_line": 25, "source_confidence": 88, "target_start_line": 16, "target_confidence": 83}, {"target_end_line": 73, "source_start_line": 46, "source_end_line": 67, "source_confidence": 88, "target_start_line": 52, "target_confidence": 83}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 88, "target_start_line": 1, "target_confidence": 83}]}, {"source": "lgrammel_1963983", "value": 40, "target": "GerHobbelt_1965462", "links": [{"target_end_line": 40, "source_start_line": 1, "source_end_line": 40, "source_confidence": 98, "target_start_line": 40, "target_confidence": 98}]}, {"source": "ariaz_c0593a62ab32d99da603", "value": 14, "target": "dukevis_84ed35ed91f857ec3d79", "links": [{"target_end_line": 78, "source_start_line": 105, "source_end_line": 111, "source_confidence": 4, "target_start_line": 74, "target_confidence": 12}, {"target_end_line": 71, "source_start_line": 185, "source_end_line": 189, "source_confidence": 4, "target_start_line": 66, "target_confidence": 12}, {"target_end_line": 91, "source_start_line": 192, "source_end_line": 193, "source_confidence": 4, "target_start_line": 90, "target_confidence": 12}, {"target_end_line": 78, "source_start_line": 105, "source_end_line": 111, "source_confidence": 4, "target_start_line": 74, "target_confidence": 12}, {"target_end_line": 71, "source_start_line": 185, "source_end_line": 189, "source_confidence": 4, "target_start_line": 66, "target_confidence": 12}, {"target_end_line": 91, "source_start_line": 192, "source_end_line": 193, "source_confidence": 4, "target_start_line": 90, "target_confidence": 12}, {"target_end_line": 78, "source_start_line": 105, "source_end_line": 111, "source_confidence": 4, "target_start_line": 74, "target_confidence": 12}, {"target_end_line": 71, "source_start_line": 185, "source_end_line": 189, "source_confidence": 4, "target_start_line": 66, "target_confidence": 12}, {"target_end_line": 91, "source_start_line": 192, "source_end_line": 193, "source_confidence": 4, "target_start_line": 90, "target_confidence": 12}]}, {"source": "emeeks_a950399780ca90589f59", "value": 81, "target": "renecnielsen_682ab33dbf139214df59", "links": [{"target_end_line": 82, "source_start_line": 11, "source_end_line": 84, "source_confidence": 80, "target_start_line": 10, "target_confidence": 85}, {"target_end_line": 88, "source_start_line": 86, "source_end_line": 92, "source_confidence": 80, "target_start_line": 82, "target_confidence": 85}, {"target_end_line": 82, "source_start_line": 11, "source_end_line": 84, "source_confidence": 80, "target_start_line": 10, "target_confidence": 85}, {"target_end_line": 88, "source_start_line": 86, "source_end_line": 92, "source_confidence": 80, "target_start_line": 82, "target_confidence": 85}]}, {"source": "samselikoff_1de23ed13138c7d9699e", "value": 442, "target": "ariaz_c0593a62ab32d99da603", "links": [{"target_end_line": 442, "source_start_line": 1, "source_end_line": 442, "source_confidence": 99, "target_start_line": 442, "target_confidence": 99}]}, {"source": "rveciana_72987a139a9886ed6a87", "value": 45, "target": "espinielli_715229536cdba1fdac9a", "links": [{"target_end_line": 56, "source_start_line": 13, "source_end_line": 56, "source_confidence": 88, "target_start_line": 47, "target_confidence": 76}, {"target_end_line": 14, "source_start_line": 6, "source_end_line": 14, "source_confidence": 88, "target_start_line": 12, "target_confidence": 76}, {"target_end_line": 56, "source_start_line": 13, "source_end_line": 56, "source_confidence": 88, "target_start_line": 47, "target_confidence": 76}, {"target_end_line": 14, "source_start_line": 6, "source_end_line": 14, "source_confidence": 88, "target_start_line": 12, "target_confidence": 76}]}, {"source": "fabid_0c4cf357ab5ed3e90382", "value": 13, "target": "yesoreyeram_c1b07998add14ffc9d03", "links": [{"target_end_line": 34, "source_start_line": 43, "source_end_line": 47, "source_confidence": 26, "target_start_line": 28, "target_confidence": 23}, {"target_end_line": 6, "source_start_line": 2, "source_end_line": 9, "source_confidence": 26, "target_start_line": 4, "target_confidence": 23}, {"target_end_line": 34, "source_start_line": 43, "source_end_line": 47, "source_confidence": 26, "target_start_line": 28, "target_confidence": 23}, {"target_end_line": 6, "source_start_line": 2, "source_end_line": 9, "source_confidence": 26, "target_start_line": 4, "target_confidence": 23}]}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "value": 20, "target": "xaranke_9ada4c74a87b57ae7308", "links": [{"target_end_line": 21, "source_start_line": 17, "source_end_line": 21, "source_confidence": 15, "target_start_line": 17, "target_confidence": 22}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 7, "source_confidence": 15, "target_start_line": 1, "target_confidence": 22}, {"target_end_line": 59, "source_start_line": 58, "source_end_line": 60, "source_confidence": 15, "target_start_line": 56, "target_confidence": 22}, {"target_end_line": 21, "source_start_line": 17, "source_end_line": 21, "source_confidence": 15, "target_start_line": 17, "target_confidence": 22}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 7, "source_confidence": 15, "target_start_line": 1, "target_confidence": 22}, {"target_end_line": 59, "source_start_line": 58, "source_end_line": 60, "source_confidence": 15, "target_start_line": 56, "target_confidence": 22}, {"target_end_line": 21, "source_start_line": 17, "source_end_line": 21, "source_confidence": 15, "target_start_line": 17, "target_confidence": 22}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 7, "source_confidence": 15, "target_start_line": 1, "target_confidence": 22}, {"target_end_line": 59, "source_start_line": 58, "source_end_line": 60, "source_confidence": 15, "target_start_line": 56, "target_confidence": 22}]}, {"source": "tmcw_5147590", "value": 46, "target": "wboykinm_7388233", "links": [{"target_end_line": 92, "source_start_line": 57, "source_end_line": 64, "source_confidence": 59, "target_start_line": 85, "target_confidence": 33}, {"target_end_line": 47, "source_start_line": 23, "source_end_line": 38, "source_confidence": 59, "target_start_line": 32, "target_confidence": 33}, {"target_end_line": 55, "source_start_line": 38, "source_end_line": 46, "source_confidence": 59, "target_start_line": 47, "target_confidence": 33}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 9, "source_confidence": 59, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 28, "source_start_line": 15, "source_end_line": 20, "source_confidence": 59, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 92, "source_start_line": 57, "source_end_line": 64, "source_confidence": 59, "target_start_line": 85, "target_confidence": 33}, {"target_end_line": 47, "source_start_line": 23, "source_end_line": 38, "source_confidence": 59, "target_start_line": 32, "target_confidence": 33}, {"target_end_line": 55, "source_start_line": 38, "source_end_line": 46, "source_confidence": 59, "target_start_line": 47, "target_confidence": 33}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 9, "source_confidence": 59, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 28, "source_start_line": 15, "source_end_line": 20, "source_confidence": 59, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 92, "source_start_line": 57, "source_end_line": 64, "source_confidence": 59, "target_start_line": 85, "target_confidence": 33}, {"target_end_line": 47, "source_start_line": 23, "source_end_line": 38, "source_confidence": 59, "target_start_line": 32, "target_confidence": 33}, {"target_end_line": 55, "source_start_line": 38, "source_end_line": 46, "source_confidence": 59, "target_start_line": 47, "target_confidence": 33}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 9, "source_confidence": 59, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 28, "source_start_line": 15, "source_end_line": 20, "source_confidence": 59, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 92, "source_start_line": 57, "source_end_line": 64, "source_confidence": 59, "target_start_line": 85, "target_confidence": 33}, {"target_end_line": 47, "source_start_line": 23, "source_end_line": 38, "source_confidence": 59, "target_start_line": 32, "target_confidence": 33}, {"target_end_line": 55, "source_start_line": 38, "source_end_line": 46, "source_confidence": 59, "target_start_line": 47, "target_confidence": 33}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 9, "source_confidence": 59, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 28, "source_start_line": 15, "source_end_line": 20, "source_confidence": 59, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 92, "source_start_line": 57, "source_end_line": 64, "source_confidence": 59, "target_start_line": 85, "target_confidence": 33}, {"target_end_line": 47, "source_start_line": 23, "source_end_line": 38, "source_confidence": 59, "target_start_line": 32, "target_confidence": 33}, {"target_end_line": 55, "source_start_line": 38, "source_end_line": 46, "source_confidence": 59, "target_start_line": 47, "target_confidence": 33}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 9, "source_confidence": 59, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 28, "source_start_line": 15, "source_end_line": 20, "source_confidence": 59, "target_start_line": 23, "target_confidence": 33}]}, {"source": "tommct_5671250", "value": 11, "target": "dustinlarimer_5701438", "links": [{"target_end_line": 35, "source_start_line": 73, "source_end_line": 35, "source_confidence": 10, "target_start_line": 77, "target_confidence": 17}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 10, "source_confidence": 10, "target_start_line": 7, "target_confidence": 17}, {"target_end_line": 35, "source_start_line": 73, "source_end_line": 35, "source_confidence": 10, "target_start_line": 77, "target_confidence": 17}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 10, "source_confidence": 10, "target_start_line": 7, "target_confidence": 17}]}, {"source": "renecnielsen_f11624fe14195cf8a1c5", "value": 18, "target": "xaranke_b956ee7215b7b50bc78a", "links": [{"target_end_line": 45, "source_start_line": 17, "source_end_line": 23, "source_confidence": 12, "target_start_line": 39, "target_confidence": 30}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 7, "source_confidence": 12, "target_start_line": 1, "target_confidence": 30}, {"target_end_line": 45, "source_start_line": 17, "source_end_line": 23, "source_confidence": 12, "target_start_line": 39, "target_confidence": 30}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 7, "source_confidence": 12, "target_start_line": 1, "target_confidence": 30}]}, {"source": "mbostock_6123708", "value": 14, "target": "wrobstory_7630406", "links": [{"target_end_line": 105, "source_start_line": 14, "source_end_line": 21, "source_confidence": 21, "target_start_line": 98, "target_confidence": 10}, {"target_end_line": 80, "source_start_line": 3, "source_end_line": 8, "source_confidence": 21, "target_start_line": 75, "target_confidence": 10}, {"target_end_line": 105, "source_start_line": 14, "source_end_line": 21, "source_confidence": 21, "target_start_line": 98, "target_confidence": 10}, {"target_end_line": 80, "source_start_line": 3, "source_end_line": 8, "source_confidence": 21, "target_start_line": 75, "target_confidence": 10}]}, {"source": "ZJONSSON_3918369", "value": 14, "target": "tommct_8049508", "links": [{"target_end_line": 54, "source_start_line": 31, "source_end_line": 35, "source_confidence": 15, "target_start_line": 50, "target_confidence": 8}, {"target_end_line": 32, "source_start_line": 18, "source_end_line": 26, "source_confidence": 15, "target_start_line": 24, "target_confidence": 8}, {"target_end_line": 54, "source_start_line": 31, "source_end_line": 35, "source_confidence": 15, "target_start_line": 50, "target_confidence": 8}, {"target_end_line": 32, "source_start_line": 18, "source_end_line": 26, "source_confidence": 15, "target_start_line": 24, "target_confidence": 8}]}, {"source": "rphv_0d6c8f05b3afe882e166", "value": 20, "target": "GitNoise_1768f929ffafb7a2238f7438a866dc37", "links": [{"target_end_line": 178, "source_start_line": 26, "source_end_line": 178, "source_confidence": 24, "target_start_line": 29, "target_confidence": 10}, {"target_end_line": 190, "source_start_line": 39, "source_end_line": 190, "source_confidence": 24, "target_start_line": 43, "target_confidence": 10}, {"target_end_line": 147, "source_start_line": 58, "source_end_line": 147, "source_confidence": 24, "target_start_line": 60, "target_confidence": 10}, {"target_end_line": 164, "source_start_line": 76, "source_end_line": 164, "source_confidence": 24, "target_start_line": 83, "target_confidence": 10}, {"target_end_line": 178, "source_start_line": 26, "source_end_line": 178, "source_confidence": 24, "target_start_line": 29, "target_confidence": 10}, {"target_end_line": 190, "source_start_line": 39, "source_end_line": 190, "source_confidence": 24, "target_start_line": 43, "target_confidence": 10}, {"target_end_line": 147, "source_start_line": 58, "source_end_line": 147, "source_confidence": 24, "target_start_line": 60, "target_confidence": 10}, {"target_end_line": 164, "source_start_line": 76, "source_end_line": 164, "source_confidence": 24, "target_start_line": 83, "target_confidence": 10}, {"target_end_line": 178, "source_start_line": 26, "source_end_line": 178, "source_confidence": 24, "target_start_line": 29, "target_confidence": 10}, {"target_end_line": 190, "source_start_line": 39, "source_end_line": 190, "source_confidence": 24, "target_start_line": 43, "target_confidence": 10}, {"target_end_line": 147, "source_start_line": 58, "source_end_line": 147, "source_confidence": 24, "target_start_line": 60, "target_confidence": 10}, {"target_end_line": 164, "source_start_line": 76, "source_end_line": 164, "source_confidence": 24, "target_start_line": 83, "target_confidence": 10}, {"target_end_line": 178, "source_start_line": 26, "source_end_line": 178, "source_confidence": 24, "target_start_line": 29, "target_confidence": 10}, {"target_end_line": 190, "source_start_line": 39, "source_end_line": 190, "source_confidence": 24, "target_start_line": 43, "target_confidence": 10}, {"target_end_line": 147, "source_start_line": 58, "source_end_line": 147, "source_confidence": 24, "target_start_line": 60, "target_confidence": 10}, {"target_end_line": 164, "source_start_line": 76, "source_end_line": 164, "source_confidence": 24, "target_start_line": 83, "target_confidence": 10}]}, {"source": "enjalot_ce9a88c24e5e11563e06", "value": 16, "target": "rvross_b3a10c9d95945216a0a889249ec421b0", "links": [{"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 6, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 27, "source_start_line": 234, "source_end_line": 239, "source_confidence": 6, "target_start_line": 22, "target_confidence": 44}, {"target_end_line": 17, "source_start_line": 122, "source_end_line": 125, "source_confidence": 6, "target_start_line": 13, "target_confidence": 44}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 6, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 27, "source_start_line": 234, "source_end_line": 239, "source_confidence": 6, "target_start_line": 22, "target_confidence": 44}, {"target_end_line": 17, "source_start_line": 122, "source_end_line": 125, "source_confidence": 6, "target_start_line": 13, "target_confidence": 44}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 6, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 27, "source_start_line": 234, "source_end_line": 239, "source_confidence": 6, "target_start_line": 22, "target_confidence": 44}, {"target_end_line": 17, "source_start_line": 122, "source_end_line": 125, "source_confidence": 6, "target_start_line": 13, "target_confidence": 44}]}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "value": 28, "target": "emeeks_790788687df9e560e288", "links": [{"target_end_line": 63, "source_start_line": 116, "source_end_line": 63, "source_confidence": 12, "target_start_line": 143, "target_confidence": 33}]}, {"source": "balajikvijayan_f7b24a7a56e5caa479d2", "value": 98, "target": "Jay-Oh-eN_9337d41b59b2bcee149004e811d5b266", "links": [{"target_end_line": 42, "source_start_line": 24, "source_end_line": 42, "source_confidence": 79, "target_start_line": 41, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 79, "target_start_line": 21, "target_confidence": 60}, {"target_end_line": 97, "source_start_line": 72, "source_end_line": 97, "source_confidence": 79, "target_start_line": 85, "target_confidence": 60}, {"target_end_line": 74, "source_start_line": 56, "source_end_line": 74, "source_confidence": 79, "target_start_line": 69, "target_confidence": 60}, {"target_end_line": 131, "source_start_line": 97, "source_end_line": 131, "source_confidence": 79, "target_start_line": 109, "target_confidence": 60}, {"target_end_line": 56, "source_start_line": 44, "source_end_line": 56, "source_confidence": 79, "target_start_line": 53, "target_confidence": 60}, {"target_end_line": 110, "source_start_line": 87, "source_end_line": 110, "source_confidence": 79, "target_start_line": 92, "target_confidence": 60}, {"target_end_line": 42, "source_start_line": 24, "source_end_line": 42, "source_confidence": 79, "target_start_line": 41, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 79, "target_start_line": 21, "target_confidence": 60}, {"target_end_line": 97, "source_start_line": 72, "source_end_line": 97, "source_confidence": 79, "target_start_line": 85, "target_confidence": 60}, {"target_end_line": 74, "source_start_line": 56, "source_end_line": 74, "source_confidence": 79, "target_start_line": 69, "target_confidence": 60}, {"target_end_line": 131, "source_start_line": 97, "source_end_line": 131, "source_confidence": 79, "target_start_line": 109, "target_confidence": 60}, {"target_end_line": 56, "source_start_line": 44, "source_end_line": 56, "source_confidence": 79, "target_start_line": 53, "target_confidence": 60}, {"target_end_line": 110, "source_start_line": 87, "source_end_line": 110, "source_confidence": 79, "target_start_line": 92, "target_confidence": 60}, {"target_end_line": 42, "source_start_line": 24, "source_end_line": 42, "source_confidence": 79, "target_start_line": 41, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 79, "target_start_line": 21, "target_confidence": 60}, {"target_end_line": 97, "source_start_line": 72, "source_end_line": 97, "source_confidence": 79, "target_start_line": 85, "target_confidence": 60}, {"target_end_line": 74, "source_start_line": 56, "source_end_line": 74, "source_confidence": 79, "target_start_line": 69, "target_confidence": 60}, {"target_end_line": 131, "source_start_line": 97, "source_end_line": 131, "source_confidence": 79, "target_start_line": 109, "target_confidence": 60}, {"target_end_line": 56, "source_start_line": 44, "source_end_line": 56, "source_confidence": 79, "target_start_line": 53, "target_confidence": 60}, {"target_end_line": 110, "source_start_line": 87, "source_end_line": 110, "source_confidence": 79, "target_start_line": 92, "target_confidence": 60}, {"target_end_line": 42, "source_start_line": 24, "source_end_line": 42, "source_confidence": 79, "target_start_line": 41, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 79, "target_start_line": 21, "target_confidence": 60}, {"target_end_line": 97, "source_start_line": 72, "source_end_line": 97, "source_confidence": 79, "target_start_line": 85, "target_confidence": 60}, {"target_end_line": 74, "source_start_line": 56, "source_end_line": 74, "source_confidence": 79, "target_start_line": 69, "target_confidence": 60}, {"target_end_line": 131, "source_start_line": 97, "source_end_line": 131, "source_confidence": 79, "target_start_line": 109, "target_confidence": 60}, {"target_end_line": 56, "source_start_line": 44, "source_end_line": 56, "source_confidence": 79, "target_start_line": 53, "target_confidence": 60}, {"target_end_line": 110, "source_start_line": 87, "source_end_line": 110, "source_confidence": 79, "target_start_line": 92, "target_confidence": 60}, {"target_end_line": 42, "source_start_line": 24, "source_end_line": 42, "source_confidence": 79, "target_start_line": 41, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 79, "target_start_line": 21, "target_confidence": 60}, {"target_end_line": 97, "source_start_line": 72, "source_end_line": 97, "source_confidence": 79, "target_start_line": 85, "target_confidence": 60}, {"target_end_line": 74, "source_start_line": 56, "source_end_line": 74, "source_confidence": 79, "target_start_line": 69, "target_confidence": 60}, {"target_end_line": 131, "source_start_line": 97, "source_end_line": 131, "source_confidence": 79, "target_start_line": 109, "target_confidence": 60}, {"target_end_line": 56, "source_start_line": 44, "source_end_line": 56, "source_confidence": 79, "target_start_line": 53, "target_confidence": 60}, {"target_end_line": 110, "source_start_line": 87, "source_end_line": 110, "source_confidence": 79, "target_start_line": 92, "target_confidence": 60}, {"target_end_line": 42, "source_start_line": 24, "source_end_line": 42, "source_confidence": 79, "target_start_line": 41, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 79, "target_start_line": 21, "target_confidence": 60}, {"target_end_line": 97, "source_start_line": 72, "source_end_line": 97, "source_confidence": 79, "target_start_line": 85, "target_confidence": 60}, {"target_end_line": 74, "source_start_line": 56, "source_end_line": 74, "source_confidence": 79, "target_start_line": 69, "target_confidence": 60}, {"target_end_line": 131, "source_start_line": 97, "source_end_line": 131, "source_confidence": 79, "target_start_line": 109, "target_confidence": 60}, {"target_end_line": 56, "source_start_line": 44, "source_end_line": 56, "source_confidence": 79, "target_start_line": 53, "target_confidence": 60}, {"target_end_line": 110, "source_start_line": 87, "source_end_line": 110, "source_confidence": 79, "target_start_line": 92, "target_confidence": 60}, {"target_end_line": 42, "source_start_line": 24, "source_end_line": 42, "source_confidence": 79, "target_start_line": 41, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 79, "target_start_line": 21, "target_confidence": 60}, {"target_end_line": 97, "source_start_line": 72, "source_end_line": 97, "source_confidence": 79, "target_start_line": 85, "target_confidence": 60}, {"target_end_line": 74, "source_start_line": 56, "source_end_line": 74, "source_confidence": 79, "target_start_line": 69, "target_confidence": 60}, {"target_end_line": 131, "source_start_line": 97, "source_end_line": 131, "source_confidence": 79, "target_start_line": 109, "target_confidence": 60}, {"target_end_line": 56, "source_start_line": 44, "source_end_line": 56, "source_confidence": 79, "target_start_line": 53, "target_confidence": 60}, {"target_end_line": 110, "source_start_line": 87, "source_end_line": 110, "source_confidence": 79, "target_start_line": 92, "target_confidence": 60}]}, {"source": "tommct_5671250", "value": 11, "target": "dustinlarimer_5716840", "links": [{"target_end_line": 22, "source_start_line": 73, "source_end_line": 22, "source_confidence": 10, "target_start_line": 77, "target_confidence": 18}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 10, "source_confidence": 10, "target_start_line": 7, "target_confidence": 18}, {"target_end_line": 22, "source_start_line": 73, "source_end_line": 22, "source_confidence": 10, "target_start_line": 77, "target_confidence": 18}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 10, "source_confidence": 10, "target_start_line": 7, "target_confidence": 18}]}, {"source": "emeeks_a0b5a95c999628547494", "value": 88, "target": "renecnielsen_d44783b9a0a12f3ccc3a", "links": [{"target_end_line": 88, "source_start_line": 1, "source_end_line": 88, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "tommct_8191276", "value": 17, "target": "d3noob_8323795", "links": [{"target_end_line": 47, "source_start_line": 105, "source_end_line": 47, "source_confidence": 8, "target_start_line": 109, "target_confidence": 25}, {"target_end_line": 35, "source_start_line": 3, "source_end_line": 35, "source_confidence": 8, "target_start_line": 7, "target_confidence": 25}, {"target_end_line": 41, "source_start_line": 10, "source_end_line": 41, "source_confidence": 8, "target_start_line": 15, "target_confidence": 25}, {"target_end_line": 47, "source_start_line": 105, "source_end_line": 47, "source_confidence": 8, "target_start_line": 109, "target_confidence": 25}, {"target_end_line": 35, "source_start_line": 3, "source_end_line": 35, "source_confidence": 8, "target_start_line": 7, "target_confidence": 25}, {"target_end_line": 41, "source_start_line": 10, "source_end_line": 41, "source_confidence": 8, "target_start_line": 15, "target_confidence": 25}, {"target_end_line": 47, "source_start_line": 105, "source_end_line": 47, "source_confidence": 8, "target_start_line": 109, "target_confidence": 25}, {"target_end_line": 35, "source_start_line": 3, "source_end_line": 35, "source_confidence": 8, "target_start_line": 7, "target_confidence": 25}, {"target_end_line": 41, "source_start_line": 10, "source_end_line": 41, "source_confidence": 8, "target_start_line": 15, "target_confidence": 25}]}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "value": 29, "target": "emeeks_e6f72fbca42e77be0eb3", "links": [{"target_end_line": 65, "source_start_line": 115, "source_end_line": 65, "source_confidence": 12, "target_start_line": 143, "target_confidence": 35}]}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "value": 26, "target": "emeeks_905bb4f399e0855e08fe", "links": [{"target_end_line": 95, "source_start_line": 116, "source_end_line": 95, "source_confidence": 10, "target_start_line": 136, "target_confidence": 24}, {"target_end_line": 103, "source_start_line": 137, "source_end_line": 103, "source_confidence": 10, "target_start_line": 141, "target_confidence": 24}, {"target_end_line": 95, "source_start_line": 116, "source_end_line": 95, "source_confidence": 10, "target_start_line": 136, "target_confidence": 24}, {"target_end_line": 103, "source_start_line": 137, "source_end_line": 103, "source_confidence": 10, "target_start_line": 141, "target_confidence": 24}]}, {"source": "d3noob_9211665", "value": 23, "target": "clhenrick_dd664d262a4c3fbe02b9", "links": [{"target_end_line": 52, "source_start_line": 36, "source_end_line": 52, "source_confidence": 35, "target_start_line": 45, "target_confidence": 47}, {"target_end_line": 28, "source_start_line": 12, "source_end_line": 28, "source_confidence": 35, "target_start_line": 16, "target_confidence": 47}, {"target_end_line": 59, "source_start_line": 54, "source_end_line": 59, "source_confidence": 35, "target_start_line": 56, "target_confidence": 47}, {"target_end_line": 52, "source_start_line": 36, "source_end_line": 52, "source_confidence": 35, "target_start_line": 45, "target_confidence": 47}, {"target_end_line": 28, "source_start_line": 12, "source_end_line": 28, "source_confidence": 35, "target_start_line": 16, "target_confidence": 47}, {"target_end_line": 59, "source_start_line": 54, "source_end_line": 59, "source_confidence": 35, "target_start_line": 56, "target_confidence": 47}, {"target_end_line": 52, "source_start_line": 36, "source_end_line": 52, "source_confidence": 35, "target_start_line": 45, "target_confidence": 47}, {"target_end_line": 28, "source_start_line": 12, "source_end_line": 28, "source_confidence": 35, "target_start_line": 16, "target_confidence": 47}, {"target_end_line": 59, "source_start_line": 54, "source_end_line": 59, "source_confidence": 35, "target_start_line": 56, "target_confidence": 47}]}, {"source": "veltman_1b43f61887e89c371f1c8c73341540a3", "value": 14, "target": "larsenmtl_86077bddc91c3de8d3db6a53216b2f47", "links": [{"target_end_line": 16, "source_start_line": 7, "source_end_line": 16, "source_confidence": 18, "target_start_line": 11, "target_confidence": 16}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 18, "target_start_line": 5, "target_confidence": 16}, {"target_end_line": 16, "source_start_line": 7, "source_end_line": 16, "source_confidence": 18, "target_start_line": 11, "target_confidence": 16}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 18, "target_start_line": 5, "target_confidence": 16}]}, {"source": "boeric_e16ad218bc241dfd2d6e", "value": 83, "target": "devssunil_5485fa28d3fdd422930b53ab330f96e3", "links": [{"target_end_line": 35, "source_start_line": 1, "source_end_line": 36, "source_confidence": 36, "target_start_line": 1, "target_confidence": 50}, {"target_end_line": 57, "source_start_line": 37, "source_end_line": 58, "source_confidence": 36, "target_start_line": 36, "target_confidence": 50}, {"target_end_line": 82, "source_start_line": 124, "source_end_line": 132, "source_confidence": 36, "target_start_line": 75, "target_confidence": 50}, {"target_end_line": 115, "source_start_line": 157, "source_end_line": 162, "source_confidence": 36, "target_start_line": 110, "target_confidence": 50}, {"target_end_line": 127, "source_start_line": 170, "source_end_line": 174, "source_confidence": 36, "target_start_line": 123, "target_confidence": 50}, {"target_end_line": 107, "source_start_line": 150, "source_end_line": 154, "source_confidence": 36, "target_start_line": 103, "target_confidence": 50}, {"target_end_line": 35, "source_start_line": 1, "source_end_line": 36, "source_confidence": 36, "target_start_line": 1, "target_confidence": 50}, {"target_end_line": 57, "source_start_line": 37, "source_end_line": 58, "source_confidence": 36, "target_start_line": 36, "target_confidence": 50}, {"target_end_line": 82, "source_start_line": 124, "source_end_line": 132, "source_confidence": 36, "target_start_line": 75, "target_confidence": 50}, {"target_end_line": 115, "source_start_line": 157, "source_end_line": 162, "source_confidence": 36, "target_start_line": 110, "target_confidence": 50}, {"target_end_line": 127, "source_start_line": 170, "source_end_line": 174, "source_confidence": 36, "target_start_line": 123, "target_confidence": 50}, {"target_end_line": 107, "source_start_line": 150, "source_end_line": 154, "source_confidence": 36, "target_start_line": 103, "target_confidence": 50}, {"target_end_line": 35, "source_start_line": 1, "source_end_line": 36, "source_confidence": 36, "target_start_line": 1, "target_confidence": 50}, {"target_end_line": 57, "source_start_line": 37, "source_end_line": 58, "source_confidence": 36, "target_start_line": 36, "target_confidence": 50}, {"target_end_line": 82, "source_start_line": 124, "source_end_line": 132, "source_confidence": 36, "target_start_line": 75, "target_confidence": 50}, {"target_end_line": 115, "source_start_line": 157, "source_end_line": 162, "source_confidence": 36, "target_start_line": 110, "target_confidence": 50}, {"target_end_line": 127, "source_start_line": 170, "source_end_line": 174, "source_confidence": 36, "target_start_line": 123, "target_confidence": 50}, {"target_end_line": 107, "source_start_line": 150, "source_end_line": 154, "source_confidence": 36, "target_start_line": 103, "target_confidence": 50}, {"target_end_line": 35, "source_start_line": 1, "source_end_line": 36, "source_confidence": 36, "target_start_line": 1, "target_confidence": 50}, {"target_end_line": 57, "source_start_line": 37, "source_end_line": 58, "source_confidence": 36, "target_start_line": 36, "target_confidence": 50}, {"target_end_line": 82, "source_start_line": 124, "source_end_line": 132, "source_confidence": 36, "target_start_line": 75, "target_confidence": 50}, {"target_end_line": 115, "source_start_line": 157, "source_end_line": 162, "source_confidence": 36, "target_start_line": 110, "target_confidence": 50}, {"target_end_line": 127, "source_start_line": 170, "source_end_line": 174, "source_confidence": 36, "target_start_line": 123, "target_confidence": 50}, {"target_end_line": 107, "source_start_line": 150, "source_end_line": 154, "source_confidence": 36, "target_start_line": 103, "target_confidence": 50}, {"target_end_line": 35, "source_start_line": 1, "source_end_line": 36, "source_confidence": 36, "target_start_line": 1, "target_confidence": 50}, {"target_end_line": 57, "source_start_line": 37, "source_end_line": 58, "source_confidence": 36, "target_start_line": 36, "target_confidence": 50}, {"target_end_line": 82, "source_start_line": 124, "source_end_line": 132, "source_confidence": 36, "target_start_line": 75, "target_confidence": 50}, {"target_end_line": 115, "source_start_line": 157, "source_end_line": 162, "source_confidence": 36, "target_start_line": 110, "target_confidence": 50}, {"target_end_line": 127, "source_start_line": 170, "source_end_line": 174, "source_confidence": 36, "target_start_line": 123, "target_confidence": 50}, {"target_end_line": 107, "source_start_line": 150, "source_end_line": 154, "source_confidence": 36, "target_start_line": 103, "target_confidence": 50}, {"target_end_line": 35, "source_start_line": 1, "source_end_line": 36, "source_confidence": 36, "target_start_line": 1, "target_confidence": 50}, {"target_end_line": 57, "source_start_line": 37, "source_end_line": 58, "source_confidence": 36, "target_start_line": 36, "target_confidence": 50}, {"target_end_line": 82, "source_start_line": 124, "source_end_line": 132, "source_confidence": 36, "target_start_line": 75, "target_confidence": 50}, {"target_end_line": 115, "source_start_line": 157, "source_end_line": 162, "source_confidence": 36, "target_start_line": 110, "target_confidence": 50}, {"target_end_line": 127, "source_start_line": 170, "source_end_line": 174, "source_confidence": 36, "target_start_line": 123, "target_confidence": 50}, {"target_end_line": 107, "source_start_line": 150, "source_end_line": 154, "source_confidence": 36, "target_start_line": 103, "target_confidence": 50}]}, {"source": "mpmckenna8_434839f120c552ad0048", "value": 29, "target": "cpietsch_dc76fc25863458a6a83e", "links": [{"target_end_line": 38, "source_start_line": 18, "source_end_line": 38, "source_confidence": 28, "target_start_line": 46, "target_confidence": 43}]}, {"source": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "value": 36, "target": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "links": [{"target_end_line": 29, "source_start_line": 31, "source_end_line": 35, "source_confidence": 60, "target_start_line": 24, "target_confidence": 65}, {"target_end_line": 63, "source_start_line": 58, "source_end_line": 65, "source_confidence": 60, "target_start_line": 56, "target_confidence": 65}, {"target_end_line": 44, "source_start_line": 39, "source_end_line": 46, "source_confidence": 60, "target_start_line": 35, "target_confidence": 65}, {"target_end_line": 16, "source_start_line": 9, "source_end_line": 17, "source_confidence": 60, "target_start_line": 10, "target_confidence": 65}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 60, "target_start_line": 1, "target_confidence": 65}, {"target_end_line": 29, "source_start_line": 31, "source_end_line": 35, "source_confidence": 60, "target_start_line": 24, "target_confidence": 65}, {"target_end_line": 63, "source_start_line": 58, "source_end_line": 65, "source_confidence": 60, "target_start_line": 56, "target_confidence": 65}, {"target_end_line": 44, "source_start_line": 39, "source_end_line": 46, "source_confidence": 60, "target_start_line": 35, "target_confidence": 65}, {"target_end_line": 16, "source_start_line": 9, "source_end_line": 17, "source_confidence": 60, "target_start_line": 10, "target_confidence": 65}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 60, "target_start_line": 1, "target_confidence": 65}, {"target_end_line": 29, "source_start_line": 31, "source_end_line": 35, "source_confidence": 60, "target_start_line": 24, "target_confidence": 65}, {"target_end_line": 63, "source_start_line": 58, "source_end_line": 65, "source_confidence": 60, "target_start_line": 56, "target_confidence": 65}, {"target_end_line": 44, "source_start_line": 39, "source_end_line": 46, "source_confidence": 60, "target_start_line": 35, "target_confidence": 65}, {"target_end_line": 16, "source_start_line": 9, "source_end_line": 17, "source_confidence": 60, "target_start_line": 10, "target_confidence": 65}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 60, "target_start_line": 1, "target_confidence": 65}, {"target_end_line": 29, "source_start_line": 31, "source_end_line": 35, "source_confidence": 60, "target_start_line": 24, "target_confidence": 65}, {"target_end_line": 63, "source_start_line": 58, "source_end_line": 65, "source_confidence": 60, "target_start_line": 56, "target_confidence": 65}, {"target_end_line": 44, "source_start_line": 39, "source_end_line": 46, "source_confidence": 60, "target_start_line": 35, "target_confidence": 65}, {"target_end_line": 16, "source_start_line": 9, "source_end_line": 17, "source_confidence": 60, "target_start_line": 10, "target_confidence": 65}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 60, "target_start_line": 1, "target_confidence": 65}, {"target_end_line": 29, "source_start_line": 31, "source_end_line": 35, "source_confidence": 60, "target_start_line": 24, "target_confidence": 65}, {"target_end_line": 63, "source_start_line": 58, "source_end_line": 65, "source_confidence": 60, "target_start_line": 56, "target_confidence": 65}, {"target_end_line": 44, "source_start_line": 39, "source_end_line": 46, "source_confidence": 60, "target_start_line": 35, "target_confidence": 65}, {"target_end_line": 16, "source_start_line": 9, "source_end_line": 17, "source_confidence": 60, "target_start_line": 10, "target_confidence": 65}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 60, "target_start_line": 1, "target_confidence": 65}]}, {"source": "ZJONSSON_3918369", "value": 14, "target": "tommct_8047063", "links": [{"target_end_line": 56, "source_start_line": 31, "source_end_line": 35, "source_confidence": 15, "target_start_line": 52, "target_confidence": 10}, {"target_end_line": 34, "source_start_line": 18, "source_end_line": 26, "source_confidence": 15, "target_start_line": 26, "target_confidence": 10}, {"target_end_line": 56, "source_start_line": 31, "source_end_line": 35, "source_confidence": 15, "target_start_line": 52, "target_confidence": 10}, {"target_end_line": 34, "source_start_line": 18, "source_end_line": 26, "source_confidence": 15, "target_start_line": 26, "target_confidence": 10}]}, {"source": "sivartravis_348fc7cd3f3d8ad9db3f", "value": 16, "target": "nguyenbq_85a4c204a61fa6407aed", "links": [{"target_end_line": 34, "source_start_line": 25, "source_end_line": 34, "source_confidence": 20, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 20, "target_start_line": 8, "target_confidence": 33}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 20, "target_start_line": 14, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 25, "source_confidence": 20, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 34, "source_start_line": 25, "source_end_line": 34, "source_confidence": 20, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 20, "target_start_line": 8, "target_confidence": 33}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 20, "target_start_line": 14, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 25, "source_confidence": 20, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 34, "source_start_line": 25, "source_end_line": 34, "source_confidence": 20, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 20, "target_start_line": 8, "target_confidence": 33}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 20, "target_start_line": 14, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 25, "source_confidence": 20, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 34, "source_start_line": 25, "source_end_line": 34, "source_confidence": 20, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 20, "target_start_line": 8, "target_confidence": 33}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 20, "target_start_line": 14, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 25, "source_confidence": 20, "target_start_line": 23, "target_confidence": 33}]}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "value": 28, "target": "emeeks_86da8f19e58ccb668750", "links": [{"target_end_line": 63, "source_start_line": 116, "source_end_line": 63, "source_confidence": 12, "target_start_line": 143, "target_confidence": 42}]}, {"source": "nivas8292_222939d7c74c5de09387", "value": 137, "target": "ptvans_461585105bdbc14b4e85", "links": [{"target_end_line": 137, "source_start_line": 1, "source_end_line": 137, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "value": 29, "target": "emeeks_aea3c7fc1acc0eca4d44", "links": [{"target_end_line": 67, "source_start_line": 115, "source_end_line": 67, "source_confidence": 12, "target_start_line": 143, "target_confidence": 34}]}, {"source": "clhenrick_20fd8f959b965d647f83", "value": 26, "target": "wboykinm_6a14e910b5738c89e239", "links": [{"target_end_line": 46, "source_start_line": 53, "source_end_line": 65, "source_confidence": 53, "target_start_line": 33, "target_confidence": 49}, {"target_end_line": 30, "source_start_line": 43, "source_end_line": 51, "source_confidence": 53, "target_start_line": 22, "target_confidence": 49}, {"target_end_line": 57, "source_start_line": 68, "source_end_line": 70, "source_confidence": 53, "target_start_line": 55, "target_confidence": 49}, {"target_end_line": 46, "source_start_line": 53, "source_end_line": 65, "source_confidence": 53, "target_start_line": 33, "target_confidence": 49}, {"target_end_line": 30, "source_start_line": 43, "source_end_line": 51, "source_confidence": 53, "target_start_line": 22, "target_confidence": 49}, {"target_end_line": 57, "source_start_line": 68, "source_end_line": 70, "source_confidence": 53, "target_start_line": 55, "target_confidence": 49}, {"target_end_line": 46, "source_start_line": 53, "source_end_line": 65, "source_confidence": 53, "target_start_line": 33, "target_confidence": 49}, {"target_end_line": 30, "source_start_line": 43, "source_end_line": 51, "source_confidence": 53, "target_start_line": 22, "target_confidence": 49}, {"target_end_line": 57, "source_start_line": 68, "source_end_line": 70, "source_confidence": 53, "target_start_line": 55, "target_confidence": 49}]}, {"source": "mpmckenna8_9179084", "value": 22, "target": "hunzy_11110940", "links": [{"target_end_line": 58, "source_start_line": 22, "source_end_line": 58, "source_confidence": 38, "target_start_line": 28, "target_confidence": 32}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 38, "target_start_line": 7, "target_confidence": 32}, {"target_end_line": 65, "source_start_line": 32, "source_end_line": 65, "source_confidence": 38, "target_start_line": 39, "target_confidence": 32}, {"target_end_line": 58, "source_start_line": 22, "source_end_line": 58, "source_confidence": 38, "target_start_line": 28, "target_confidence": 32}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 38, "target_start_line": 7, "target_confidence": 32}, {"target_end_line": 65, "source_start_line": 32, "source_end_line": 65, "source_confidence": 38, "target_start_line": 39, "target_confidence": 32}, {"target_end_line": 58, "source_start_line": 22, "source_end_line": 58, "source_confidence": 38, "target_start_line": 28, "target_confidence": 32}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 38, "target_start_line": 7, "target_confidence": 32}, {"target_end_line": 65, "source_start_line": 32, "source_end_line": 65, "source_confidence": 38, "target_start_line": 39, "target_confidence": 32}]}, {"source": "rveciana_5181105", "value": 60, "target": "espinielli_4d17fa15a7a5084e217992f985fba484", "links": [{"target_end_line": 60, "source_start_line": 1, "source_end_line": 60, "source_confidence": 99, "target_start_line": 60, "target_confidence": 99}]}, {"source": "bewest_4260548", "value": 31, "target": "wboykinm_4716561", "links": [{"target_end_line": 225, "source_start_line": 60, "source_end_line": 67, "source_confidence": 66, "target_start_line": 218, "target_confidence": 15}, {"target_end_line": 162, "source_start_line": 8, "source_end_line": 19, "source_confidence": 66, "target_start_line": 151, "target_confidence": 15}, {"target_end_line": 207, "source_start_line": 33, "source_end_line": 41, "source_confidence": 66, "target_start_line": 201, "target_confidence": 15}, {"target_end_line": 211, "source_start_line": 43, "source_end_line": 44, "source_confidence": 66, "target_start_line": 210, "target_confidence": 15}, {"target_end_line": 225, "source_start_line": 60, "source_end_line": 67, "source_confidence": 66, "target_start_line": 218, "target_confidence": 15}, {"target_end_line": 162, "source_start_line": 8, "source_end_line": 19, "source_confidence": 66, "target_start_line": 151, "target_confidence": 15}, {"target_end_line": 207, "source_start_line": 33, "source_end_line": 41, "source_confidence": 66, "target_start_line": 201, "target_confidence": 15}, {"target_end_line": 211, "source_start_line": 43, "source_end_line": 44, "source_confidence": 66, "target_start_line": 210, "target_confidence": 15}, {"target_end_line": 225, "source_start_line": 60, "source_end_line": 67, "source_confidence": 66, "target_start_line": 218, "target_confidence": 15}, {"target_end_line": 162, "source_start_line": 8, "source_end_line": 19, "source_confidence": 66, "target_start_line": 151, "target_confidence": 15}, {"target_end_line": 207, "source_start_line": 33, "source_end_line": 41, "source_confidence": 66, "target_start_line": 201, "target_confidence": 15}, {"target_end_line": 211, "source_start_line": 43, "source_end_line": 44, "source_confidence": 66, "target_start_line": 210, "target_confidence": 15}, {"target_end_line": 225, "source_start_line": 60, "source_end_line": 67, "source_confidence": 66, "target_start_line": 218, "target_confidence": 15}, {"target_end_line": 162, "source_start_line": 8, "source_end_line": 19, "source_confidence": 66, "target_start_line": 151, "target_confidence": 15}, {"target_end_line": 207, "source_start_line": 33, "source_end_line": 41, "source_confidence": 66, "target_start_line": 201, "target_confidence": 15}, {"target_end_line": 211, "source_start_line": 43, "source_end_line": 44, "source_confidence": 66, "target_start_line": 210, "target_confidence": 15}]}, {"source": "boeric_e16ad218bc241dfd2d6e", "value": 66, "target": "devssunil_ce488bb628eb9e4468521b001f027a55", "links": [{"target_end_line": 35, "source_start_line": 1, "source_end_line": 36, "source_confidence": 33, "target_start_line": 1, "target_confidence": 43}, {"target_end_line": 55, "source_start_line": 99, "source_end_line": 104, "source_confidence": 33, "target_start_line": 51, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 40, "source_end_line": 47, "source_confidence": 33, "target_start_line": 40, "target_confidence": 43}, {"target_end_line": 114, "source_start_line": 157, "source_end_line": 162, "source_confidence": 33, "target_start_line": 109, "target_confidence": 43}, {"target_end_line": 126, "source_start_line": 170, "source_end_line": 174, "source_confidence": 33, "target_start_line": 122, "target_confidence": 43}, {"target_end_line": 106, "source_start_line": 150, "source_end_line": 154, "source_confidence": 33, "target_start_line": 102, "target_confidence": 43}, {"target_end_line": 35, "source_start_line": 1, "source_end_line": 36, "source_confidence": 33, "target_start_line": 1, "target_confidence": 43}, {"target_end_line": 55, "source_start_line": 99, "source_end_line": 104, "source_confidence": 33, "target_start_line": 51, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 40, "source_end_line": 47, "source_confidence": 33, "target_start_line": 40, "target_confidence": 43}, {"target_end_line": 114, "source_start_line": 157, "source_end_line": 162, "source_confidence": 33, "target_start_line": 109, "target_confidence": 43}, {"target_end_line": 126, "source_start_line": 170, "source_end_line": 174, "source_confidence": 33, "target_start_line": 122, "target_confidence": 43}, {"target_end_line": 106, "source_start_line": 150, "source_end_line": 154, "source_confidence": 33, "target_start_line": 102, "target_confidence": 43}, {"target_end_line": 35, "source_start_line": 1, "source_end_line": 36, "source_confidence": 33, "target_start_line": 1, "target_confidence": 43}, {"target_end_line": 55, "source_start_line": 99, "source_end_line": 104, "source_confidence": 33, "target_start_line": 51, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 40, "source_end_line": 47, "source_confidence": 33, "target_start_line": 40, "target_confidence": 43}, {"target_end_line": 114, "source_start_line": 157, "source_end_line": 162, "source_confidence": 33, "target_start_line": 109, "target_confidence": 43}, {"target_end_line": 126, "source_start_line": 170, "source_end_line": 174, "source_confidence": 33, "target_start_line": 122, "target_confidence": 43}, {"target_end_line": 106, "source_start_line": 150, "source_end_line": 154, "source_confidence": 33, "target_start_line": 102, "target_confidence": 43}, {"target_end_line": 35, "source_start_line": 1, "source_end_line": 36, "source_confidence": 33, "target_start_line": 1, "target_confidence": 43}, {"target_end_line": 55, "source_start_line": 99, "source_end_line": 104, "source_confidence": 33, "target_start_line": 51, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 40, "source_end_line": 47, "source_confidence": 33, "target_start_line": 40, "target_confidence": 43}, {"target_end_line": 114, "source_start_line": 157, "source_end_line": 162, "source_confidence": 33, "target_start_line": 109, "target_confidence": 43}, {"target_end_line": 126, "source_start_line": 170, "source_end_line": 174, "source_confidence": 33, "target_start_line": 122, "target_confidence": 43}, {"target_end_line": 106, "source_start_line": 150, "source_end_line": 154, "source_confidence": 33, "target_start_line": 102, "target_confidence": 43}, {"target_end_line": 35, "source_start_line": 1, "source_end_line": 36, "source_confidence": 33, "target_start_line": 1, "target_confidence": 43}, {"target_end_line": 55, "source_start_line": 99, "source_end_line": 104, "source_confidence": 33, "target_start_line": 51, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 40, "source_end_line": 47, "source_confidence": 33, "target_start_line": 40, "target_confidence": 43}, {"target_end_line": 114, "source_start_line": 157, "source_end_line": 162, "source_confidence": 33, "target_start_line": 109, "target_confidence": 43}, {"target_end_line": 126, "source_start_line": 170, "source_end_line": 174, "source_confidence": 33, "target_start_line": 122, "target_confidence": 43}, {"target_end_line": 106, "source_start_line": 150, "source_end_line": 154, "source_confidence": 33, "target_start_line": 102, "target_confidence": 43}, {"target_end_line": 35, "source_start_line": 1, "source_end_line": 36, "source_confidence": 33, "target_start_line": 1, "target_confidence": 43}, {"target_end_line": 55, "source_start_line": 99, "source_end_line": 104, "source_confidence": 33, "target_start_line": 51, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 40, "source_end_line": 47, "source_confidence": 33, "target_start_line": 40, "target_confidence": 43}, {"target_end_line": 114, "source_start_line": 157, "source_end_line": 162, "source_confidence": 33, "target_start_line": 109, "target_confidence": 43}, {"target_end_line": 126, "source_start_line": 170, "source_end_line": 174, "source_confidence": 33, "target_start_line": 122, "target_confidence": 43}, {"target_end_line": 106, "source_start_line": 150, "source_end_line": 154, "source_confidence": 33, "target_start_line": 102, "target_confidence": 43}]}, {"source": "benkimball_8570073", "value": 14, "target": "larsenmtl_2862c433899f63456f5279e4a6281f5e", "links": [{"target_end_line": 36, "source_start_line": 50, "source_end_line": 56, "source_confidence": 30, "target_start_line": 30, "target_confidence": 20}, {"target_end_line": 8, "source_start_line": 9, "source_end_line": 15, "source_confidence": 30, "target_start_line": 3, "target_confidence": 20}, {"target_end_line": 36, "source_start_line": 50, "source_end_line": 56, "source_confidence": 30, "target_start_line": 30, "target_confidence": 20}, {"target_end_line": 8, "source_start_line": 9, "source_end_line": 15, "source_confidence": 30, "target_start_line": 3, "target_confidence": 20}]}, {"source": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "value": 76, "target": "aax951_40d4e8f220b5dfe0e6339b5a37d687bc", "links": [{"target_end_line": 76, "source_start_line": 1, "source_end_line": 76, "source_confidence": 99, "target_start_line": 76, "target_confidence": 99}]}, {"source": "erlenstar_11295915", "value": 16, "target": "d3noob_38744a17f9c0141bcd04", "links": [{"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 33}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 33}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 33}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 33}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 33}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 33}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 33}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 33}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 33}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 33}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 33}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 33}]}, {"source": "ecerulm_f0a36710e3ccbf0cfc01", "value": 30, "target": "larskotthoff_085bb57f710aa417af41", "links": [{"target_end_line": 40, "source_start_line": 18, "source_end_line": 38, "source_confidence": 78, "target_start_line": 20, "target_confidence": 79}, {"target_end_line": 17, "source_start_line": 9, "source_end_line": 17, "source_confidence": 78, "target_start_line": 9, "target_confidence": 79}, {"target_end_line": 40, "source_start_line": 18, "source_end_line": 38, "source_confidence": 78, "target_start_line": 20, "target_confidence": 79}, {"target_end_line": 17, "source_start_line": 9, "source_end_line": 17, "source_confidence": 78, "target_start_line": 9, "target_confidence": 79}]}, {"source": "d3noob_464c92429ac05c6a19a1", "value": 16, "target": "RandomEtc_cff3610e7dd47bef2d01", "links": [{"target_end_line": 36, "source_start_line": 28, "source_end_line": 36, "source_confidence": 26, "target_start_line": 34, "target_confidence": 14}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 26, "target_start_line": 8, "target_confidence": 14}, {"target_end_line": 81, "source_start_line": 44, "source_end_line": 81, "source_confidence": 26, "target_start_line": 47, "target_confidence": 14}, {"target_end_line": 36, "source_start_line": 28, "source_end_line": 36, "source_confidence": 26, "target_start_line": 34, "target_confidence": 14}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 26, "target_start_line": 8, "target_confidence": 14}, {"target_end_line": 81, "source_start_line": 44, "source_end_line": 81, "source_confidence": 26, "target_start_line": 47, "target_confidence": 14}, {"target_end_line": 36, "source_start_line": 28, "source_end_line": 36, "source_confidence": 26, "target_start_line": 34, "target_confidence": 14}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 26, "target_start_line": 8, "target_confidence": 14}, {"target_end_line": 81, "source_start_line": 44, "source_end_line": 81, "source_confidence": 26, "target_start_line": 47, "target_confidence": 14}]}, {"source": "sivartravis_348fc7cd3f3d8ad9db3f", "value": 16, "target": "nguyenbq_a350280a02c8105529d0", "links": [{"target_end_line": 34, "source_start_line": 25, "source_end_line": 34, "source_confidence": 20, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 20, "target_start_line": 8, "target_confidence": 33}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 20, "target_start_line": 14, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 25, "source_confidence": 20, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 34, "source_start_line": 25, "source_end_line": 34, "source_confidence": 20, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 20, "target_start_line": 8, "target_confidence": 33}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 20, "target_start_line": 14, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 25, "source_confidence": 20, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 34, "source_start_line": 25, "source_end_line": 34, "source_confidence": 20, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 20, "target_start_line": 8, "target_confidence": 33}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 20, "target_start_line": 14, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 25, "source_confidence": 20, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 34, "source_start_line": 25, "source_end_line": 34, "source_confidence": 20, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 20, "target_start_line": 8, "target_confidence": 33}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 20, "target_start_line": 14, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 25, "source_confidence": 20, "target_start_line": 23, "target_confidence": 33}]}, {"source": "jdarling_06019d16cb5fd6795edf", "value": 19, "target": "d3noob_e1aa61856118edfa624d", "links": [{"target_end_line": 37, "source_start_line": 62, "source_end_line": 37, "source_confidence": 15, "target_start_line": 66, "target_confidence": 18}, {"target_end_line": 7, "source_start_line": 41, "source_end_line": 7, "source_confidence": 15, "target_start_line": 47, "target_confidence": 18}, {"target_end_line": 14, "source_start_line": 50, "source_end_line": 14, "source_confidence": 15, "target_start_line": 55, "target_confidence": 18}, {"target_end_line": 37, "source_start_line": 62, "source_end_line": 37, "source_confidence": 15, "target_start_line": 66, "target_confidence": 18}, {"target_end_line": 7, "source_start_line": 41, "source_end_line": 7, "source_confidence": 15, "target_start_line": 47, "target_confidence": 18}, {"target_end_line": 14, "source_start_line": 50, "source_end_line": 14, "source_confidence": 15, "target_start_line": 55, "target_confidence": 18}, {"target_end_line": 37, "source_start_line": 62, "source_end_line": 37, "source_confidence": 15, "target_start_line": 66, "target_confidence": 18}, {"target_end_line": 7, "source_start_line": 41, "source_end_line": 7, "source_confidence": 15, "target_start_line": 47, "target_confidence": 18}, {"target_end_line": 14, "source_start_line": 50, "source_end_line": 14, "source_confidence": 15, "target_start_line": 55, "target_confidence": 18}]}, {"source": "tarekrached_a7628dd96c62155068dd", "value": 210, "target": "wcjohnson11_7a0309cc11757a3e5b3e", "links": [{"target_end_line": 210, "source_start_line": 1, "source_end_line": 210, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "sivartravis_348fc7cd3f3d8ad9db3f", "value": 13, "target": "ashtonburg_4384949715de645a77ef", "links": [{"target_end_line": 17, "source_start_line": 25, "source_end_line": 17, "source_confidence": 15, "target_start_line": 31, "target_confidence": 54}, {"target_end_line": 8, "source_start_line": 6, "source_end_line": 8, "source_confidence": 15, "target_start_line": 11, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 25, "source_end_line": 17, "source_confidence": 15, "target_start_line": 31, "target_confidence": 54}, {"target_end_line": 8, "source_start_line": 6, "source_end_line": 8, "source_confidence": 15, "target_start_line": 11, "target_confidence": 54}]}, {"source": "sivartravis_348fc7cd3f3d8ad9db3f", "value": 13, "target": "ashtonburg_60e84ea5cdffa49356e4", "links": [{"target_end_line": 18, "source_start_line": 25, "source_end_line": 18, "source_confidence": 15, "target_start_line": 31, "target_confidence": 63}, {"target_end_line": 8, "source_start_line": 6, "source_end_line": 8, "source_confidence": 15, "target_start_line": 11, "target_confidence": 63}, {"target_end_line": 18, "source_start_line": 25, "source_end_line": 18, "source_confidence": 15, "target_start_line": 31, "target_confidence": 63}, {"target_end_line": 8, "source_start_line": 6, "source_end_line": 8, "source_confidence": 15, "target_start_line": 11, "target_confidence": 63}]}, {"source": "dustinlarimer_5716840", "value": 12, "target": "wrobstory_7612013", "links": [{"target_end_line": 103, "source_start_line": 17, "source_end_line": 22, "source_confidence": 19, "target_start_line": 99, "target_confidence": 10}, {"target_end_line": 78, "source_start_line": 6, "source_end_line": 11, "source_confidence": 19, "target_start_line": 73, "target_confidence": 10}, {"target_end_line": 103, "source_start_line": 17, "source_end_line": 22, "source_confidence": 19, "target_start_line": 99, "target_confidence": 10}, {"target_end_line": 78, "source_start_line": 6, "source_end_line": 11, "source_confidence": 19, "target_start_line": 73, "target_confidence": 10}]}, {"source": "iros_36a18c646f3b3b5b9001ad758bfd8a08", "value": 41, "target": "guillaumechaumet_bc4afdac1469587ac97a67760e0c204d", "links": [{"target_end_line": 38, "source_start_line": 45, "source_end_line": 38, "source_confidence": 33, "target_start_line": 64, "target_confidence": 63}, {"target_end_line": 55, "source_start_line": 71, "source_end_line": 55, "source_confidence": 33, "target_start_line": 82, "target_confidence": 63}, {"target_end_line": 16, "source_start_line": 4, "source_end_line": 16, "source_confidence": 33, "target_start_line": 11, "target_confidence": 63}, {"target_end_line": 38, "source_start_line": 45, "source_end_line": 38, "source_confidence": 33, "target_start_line": 64, "target_confidence": 63}, {"target_end_line": 55, "source_start_line": 71, "source_end_line": 55, "source_confidence": 33, "target_start_line": 82, "target_confidence": 63}, {"target_end_line": 16, "source_start_line": 4, "source_end_line": 16, "source_confidence": 33, "target_start_line": 11, "target_confidence": 63}, {"target_end_line": 38, "source_start_line": 45, "source_end_line": 38, "source_confidence": 33, "target_start_line": 64, "target_confidence": 63}, {"target_end_line": 55, "source_start_line": 71, "source_end_line": 55, "source_confidence": 33, "target_start_line": 82, "target_confidence": 63}, {"target_end_line": 16, "source_start_line": 4, "source_end_line": 16, "source_confidence": 33, "target_start_line": 11, "target_confidence": 63}]}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "value": 28, "target": "emeeks_066e20c1ce5008f884eb", "links": [{"target_end_line": 81, "source_start_line": 116, "source_end_line": 81, "source_confidence": 12, "target_start_line": 143, "target_confidence": 32}]}, {"source": "Jay-Oh-eN_522d3842f27e2581f0d9", "value": 44, "target": "margeigh_201b1e8e5a25dfcf76d4", "links": [{"target_end_line": 43, "source_start_line": 13, "source_end_line": 43, "source_confidence": 94, "target_start_line": 13, "target_confidence": 97}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 13, "source_confidence": 94, "target_start_line": 1, "target_confidence": 97}, {"target_end_line": 43, "source_start_line": 13, "source_end_line": 43, "source_confidence": 94, "target_start_line": 13, "target_confidence": 97}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 13, "source_confidence": 94, "target_start_line": 1, "target_confidence": 97}]}, {"source": "mbostock_6123708", "value": 14, "target": "wrobstory_7630654", "links": [{"target_end_line": 105, "source_start_line": 14, "source_end_line": 21, "source_confidence": 21, "target_start_line": 98, "target_confidence": 10}, {"target_end_line": 80, "source_start_line": 3, "source_end_line": 8, "source_confidence": 21, "target_start_line": 75, "target_confidence": 10}, {"target_end_line": 105, "source_start_line": 14, "source_end_line": 21, "source_confidence": 21, "target_start_line": 98, "target_confidence": 10}, {"target_end_line": 80, "source_start_line": 3, "source_end_line": 8, "source_confidence": 21, "target_start_line": 75, "target_confidence": 10}]}, {"source": "d3noob_464c92429ac05c6a19a1", "value": 14, "target": "nivas8292_222939d7c74c5de09387", "links": [{"target_end_line": 21, "source_start_line": 8, "source_end_line": 16, "source_confidence": 20, "target_start_line": 13, "target_confidence": 11}, {"target_end_line": 85, "source_start_line": 44, "source_end_line": 45, "source_confidence": 20, "target_start_line": 81, "target_confidence": 11}, {"target_end_line": 21, "source_start_line": 8, "source_end_line": 16, "source_confidence": 20, "target_start_line": 13, "target_confidence": 11}, {"target_end_line": 85, "source_start_line": 44, "source_end_line": 45, "source_confidence": 20, "target_start_line": 81, "target_confidence": 11}]}, {"source": "llb4ll_8709363", "value": 15, "target": "armollica_a2adf7b67f73316f64be", "links": [{"target_end_line": 39, "source_start_line": 41, "source_end_line": 39, "source_confidence": 11, "target_start_line": 46, "target_confidence": 26}, {"target_end_line": 30, "source_start_line": 48, "source_end_line": 30, "source_confidence": 11, "target_start_line": 54, "target_confidence": 26}, {"target_end_line": 81, "source_start_line": 162, "source_end_line": 81, "source_confidence": 11, "target_start_line": 163, "target_confidence": 26}, {"target_end_line": 39, "source_start_line": 41, "source_end_line": 39, "source_confidence": 11, "target_start_line": 46, "target_confidence": 26}, {"target_end_line": 30, "source_start_line": 48, "source_end_line": 30, "source_confidence": 11, "target_start_line": 54, "target_confidence": 26}, {"target_end_line": 81, "source_start_line": 162, "source_end_line": 81, "source_confidence": 11, "target_start_line": 163, "target_confidence": 26}, {"target_end_line": 39, "source_start_line": 41, "source_end_line": 39, "source_confidence": 11, "target_start_line": 46, "target_confidence": 26}, {"target_end_line": 30, "source_start_line": 48, "source_end_line": 30, "source_confidence": 11, "target_start_line": 54, "target_confidence": 26}, {"target_end_line": 81, "source_start_line": 162, "source_end_line": 81, "source_confidence": 11, "target_start_line": 163, "target_confidence": 26}]}, {"source": "daluu_d43ec5e610dd5dedbbe1", "value": 22, "target": "renecnielsen_777884b900d913917ec3", "links": [{"target_end_line": 151, "source_start_line": 87, "source_end_line": 99, "source_confidence": 16, "target_start_line": 139, "target_confidence": 4}, {"target_end_line": 7, "source_start_line": 6, "source_end_line": 9, "source_confidence": 16, "target_start_line": 4, "target_confidence": 4}, {"target_end_line": 47, "source_start_line": 57, "source_end_line": 60, "source_confidence": 16, "target_start_line": 43, "target_confidence": 4}, {"target_end_line": 151, "source_start_line": 87, "source_end_line": 99, "source_confidence": 16, "target_start_line": 139, "target_confidence": 4}, {"target_end_line": 7, "source_start_line": 6, "source_end_line": 9, "source_confidence": 16, "target_start_line": 4, "target_confidence": 4}, {"target_end_line": 47, "source_start_line": 57, "source_end_line": 60, "source_confidence": 16, "target_start_line": 43, "target_confidence": 4}, {"target_end_line": 151, "source_start_line": 87, "source_end_line": 99, "source_confidence": 16, "target_start_line": 139, "target_confidence": 4}, {"target_end_line": 7, "source_start_line": 6, "source_end_line": 9, "source_confidence": 16, "target_start_line": 4, "target_confidence": 4}, {"target_end_line": 47, "source_start_line": 57, "source_end_line": 60, "source_confidence": 16, "target_start_line": 43, "target_confidence": 4}]}, {"source": "timelyportfolio_5152233", "value": 66, "target": "bewest_5177174", "links": [{"target_end_line": 66, "source_start_line": 1, "source_end_line": 66, "source_confidence": 99, "target_start_line": 66, "target_confidence": 99}]}, {"source": "phoebebright_4124200", "value": 66, "target": "timelyportfolio_5152233", "links": [{"target_end_line": 66, "source_start_line": 1, "source_end_line": 66, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "jczaplew_6457917", "value": 24, "target": "mpmckenna8_8874545", "links": [{"target_end_line": 40, "source_start_line": 44, "source_end_line": 62, "source_confidence": 24, "target_start_line": 22, "target_confidence": 37}, {"target_end_line": 46, "source_start_line": 62, "source_end_line": 66, "source_confidence": 24, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 40, "source_start_line": 44, "source_end_line": 62, "source_confidence": 24, "target_start_line": 22, "target_confidence": 37}, {"target_end_line": 46, "source_start_line": 62, "source_end_line": 66, "source_confidence": 24, "target_start_line": 42, "target_confidence": 37}]}, {"source": "eesur_be2abfb3155a38be4de4", "value": 205, "target": "renecnielsen_46c782526409787e0d44", "links": [{"target_end_line": 205, "source_start_line": 1, "source_end_line": 205, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "dustinlarimer_5716840", "value": 12, "target": "wrobstory_7629900", "links": [{"target_end_line": 36, "source_start_line": 17, "source_end_line": 22, "source_confidence": 19, "target_start_line": 32, "target_confidence": 30}, {"target_end_line": 16, "source_start_line": 6, "source_end_line": 11, "source_confidence": 19, "target_start_line": 11, "target_confidence": 30}, {"target_end_line": 36, "source_start_line": 17, "source_end_line": 22, "source_confidence": 19, "target_start_line": 32, "target_confidence": 30}, {"target_end_line": 16, "source_start_line": 6, "source_end_line": 11, "source_confidence": 19, "target_start_line": 11, "target_confidence": 30}]}, {"source": "fabid_0c4cf357ab5ed3e90382", "value": 22, "target": "scresawn_3bbeb8116590df58f95ee3db7f728e5e", "links": [{"target_end_line": 35, "source_start_line": 43, "source_end_line": 47, "source_confidence": 36, "target_start_line": 31, "target_confidence": 31}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 11, "source_confidence": 36, "target_start_line": 1, "target_confidence": 31}, {"target_end_line": 63, "source_start_line": 50, "source_end_line": 55, "source_confidence": 36, "target_start_line": 58, "target_confidence": 31}, {"target_end_line": 35, "source_start_line": 43, "source_end_line": 47, "source_confidence": 36, "target_start_line": 31, "target_confidence": 31}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 11, "source_confidence": 36, "target_start_line": 1, "target_confidence": 31}, {"target_end_line": 63, "source_start_line": 50, "source_end_line": 55, "source_confidence": 36, "target_start_line": 58, "target_confidence": 31}, {"target_end_line": 35, "source_start_line": 43, "source_end_line": 47, "source_confidence": 36, "target_start_line": 31, "target_confidence": 31}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 11, "source_confidence": 36, "target_start_line": 1, "target_confidence": 31}, {"target_end_line": 63, "source_start_line": 50, "source_end_line": 55, "source_confidence": 36, "target_start_line": 58, "target_confidence": 31}]}, {"source": "git-ashish_8959381", "value": 14, "target": "d3noob_fa0f16e271cb191ae85f", "links": [{"target_end_line": 20, "source_start_line": 11, "source_end_line": 20, "source_confidence": 22, "target_start_line": 15, "target_confidence": 20}, {"target_end_line": 8, "source_start_line": 3, "source_end_line": 8, "source_confidence": 22, "target_start_line": 7, "target_confidence": 20}, {"target_end_line": 69, "source_start_line": 44, "source_end_line": 69, "source_confidence": 22, "target_start_line": 46, "target_confidence": 20}, {"target_end_line": 20, "source_start_line": 11, "source_end_line": 20, "source_confidence": 22, "target_start_line": 15, "target_confidence": 20}, {"target_end_line": 8, "source_start_line": 3, "source_end_line": 8, "source_confidence": 22, "target_start_line": 7, "target_confidence": 20}, {"target_end_line": 69, "source_start_line": 44, "source_end_line": 69, "source_confidence": 22, "target_start_line": 46, "target_confidence": 20}, {"target_end_line": 20, "source_start_line": 11, "source_end_line": 20, "source_confidence": 22, "target_start_line": 15, "target_confidence": 20}, {"target_end_line": 8, "source_start_line": 3, "source_end_line": 8, "source_confidence": 22, "target_start_line": 7, "target_confidence": 20}, {"target_end_line": 69, "source_start_line": 44, "source_end_line": 69, "source_confidence": 22, "target_start_line": 46, "target_confidence": 20}]}, {"source": "tommct_8191276", "value": 12, "target": "d3noob_8375092", "links": [{"target_end_line": 50, "source_start_line": 105, "source_end_line": 50, "source_confidence": 6, "target_start_line": 109, "target_confidence": 11}, {"target_end_line": 38, "source_start_line": 3, "source_end_line": 38, "source_confidence": 6, "target_start_line": 9, "target_confidence": 11}, {"target_end_line": 50, "source_start_line": 105, "source_end_line": 50, "source_confidence": 6, "target_start_line": 109, "target_confidence": 11}, {"target_end_line": 38, "source_start_line": 3, "source_end_line": 38, "source_confidence": 6, "target_start_line": 9, "target_confidence": 11}]}, {"source": "daluu_d43ec5e610dd5dedbbe1", "value": 17, "target": "renecnielsen_6ec52e5a9b88f7ca86ca", "links": [{"target_end_line": 6, "source_start_line": 6, "source_end_line": 9, "source_confidence": 13, "target_start_line": 3, "target_confidence": 10}, {"target_end_line": 87, "source_start_line": 58, "source_end_line": 60, "source_confidence": 13, "target_start_line": 85, "target_confidence": 10}, {"target_end_line": 121, "source_start_line": 87, "source_end_line": 95, "source_confidence": 13, "target_start_line": 112, "target_confidence": 10}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 9, "source_confidence": 13, "target_start_line": 3, "target_confidence": 10}, {"target_end_line": 87, "source_start_line": 58, "source_end_line": 60, "source_confidence": 13, "target_start_line": 85, "target_confidence": 10}, {"target_end_line": 121, "source_start_line": 87, "source_end_line": 95, "source_confidence": 13, "target_start_line": 112, "target_confidence": 10}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 9, "source_confidence": 13, "target_start_line": 3, "target_confidence": 10}, {"target_end_line": 87, "source_start_line": 58, "source_end_line": 60, "source_confidence": 13, "target_start_line": 85, "target_confidence": 10}, {"target_end_line": 121, "source_start_line": 87, "source_end_line": 95, "source_confidence": 13, "target_start_line": 112, "target_confidence": 10}]}, {"source": "d3noob_e1aa61856118edfa624d", "value": 21, "target": "timelyportfolio_5c136de85de1c2abb6fc", "links": [{"target_end_line": 10, "source_start_line": 4, "source_end_line": 9, "source_confidence": 18, "target_start_line": 5, "target_confidence": 13}, {"target_end_line": 87, "source_start_line": 31, "source_end_line": 34, "source_confidence": 18, "target_start_line": 85, "target_confidence": 13}, {"target_end_line": 30, "source_start_line": 23, "source_end_line": 28, "source_confidence": 18, "target_start_line": 25, "target_confidence": 13}, {"target_end_line": 15, "source_start_line": 10, "source_end_line": 14, "source_confidence": 18, "target_start_line": 13, "target_confidence": 13}, {"target_end_line": 10, "source_start_line": 4, "source_end_line": 9, "source_confidence": 18, "target_start_line": 5, "target_confidence": 13}, {"target_end_line": 87, "source_start_line": 31, "source_end_line": 34, "source_confidence": 18, "target_start_line": 85, "target_confidence": 13}, {"target_end_line": 30, "source_start_line": 23, "source_end_line": 28, "source_confidence": 18, "target_start_line": 25, "target_confidence": 13}, {"target_end_line": 15, "source_start_line": 10, "source_end_line": 14, "source_confidence": 18, "target_start_line": 13, "target_confidence": 13}, {"target_end_line": 10, "source_start_line": 4, "source_end_line": 9, "source_confidence": 18, "target_start_line": 5, "target_confidence": 13}, {"target_end_line": 87, "source_start_line": 31, "source_end_line": 34, "source_confidence": 18, "target_start_line": 85, "target_confidence": 13}, {"target_end_line": 30, "source_start_line": 23, "source_end_line": 28, "source_confidence": 18, "target_start_line": 25, "target_confidence": 13}, {"target_end_line": 15, "source_start_line": 10, "source_end_line": 14, "source_confidence": 18, "target_start_line": 13, "target_confidence": 13}, {"target_end_line": 10, "source_start_line": 4, "source_end_line": 9, "source_confidence": 18, "target_start_line": 5, "target_confidence": 13}, {"target_end_line": 87, "source_start_line": 31, "source_end_line": 34, "source_confidence": 18, "target_start_line": 85, "target_confidence": 13}, {"target_end_line": 30, "source_start_line": 23, "source_end_line": 28, "source_confidence": 18, "target_start_line": 25, "target_confidence": 13}, {"target_end_line": 15, "source_start_line": 10, "source_end_line": 14, "source_confidence": 18, "target_start_line": 13, "target_confidence": 13}]}, {"source": "devssunil_ce488bb628eb9e4468521b001f027a55", "value": 53, "target": "nguyenbq_7988fb7f4cabdf119637e9cf7b186499", "links": [{"target_end_line": 59, "source_start_line": 32, "source_end_line": 59, "source_confidence": 41, "target_start_line": 32, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 5, "source_end_line": 21, "source_confidence": 41, "target_start_line": 5, "target_confidence": 60}, {"target_end_line": 126, "source_start_line": 126, "source_end_line": 127, "source_confidence": 41, "target_start_line": 125, "target_confidence": 60}, {"target_end_line": 119, "source_start_line": 115, "source_end_line": 120, "source_confidence": 41, "target_start_line": 114, "target_confidence": 60}, {"target_end_line": 59, "source_start_line": 32, "source_end_line": 59, "source_confidence": 41, "target_start_line": 32, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 5, "source_end_line": 21, "source_confidence": 41, "target_start_line": 5, "target_confidence": 60}, {"target_end_line": 126, "source_start_line": 126, "source_end_line": 127, "source_confidence": 41, "target_start_line": 125, "target_confidence": 60}, {"target_end_line": 119, "source_start_line": 115, "source_end_line": 120, "source_confidence": 41, "target_start_line": 114, "target_confidence": 60}, {"target_end_line": 59, "source_start_line": 32, "source_end_line": 59, "source_confidence": 41, "target_start_line": 32, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 5, "source_end_line": 21, "source_confidence": 41, "target_start_line": 5, "target_confidence": 60}, {"target_end_line": 126, "source_start_line": 126, "source_end_line": 127, "source_confidence": 41, "target_start_line": 125, "target_confidence": 60}, {"target_end_line": 119, "source_start_line": 115, "source_end_line": 120, "source_confidence": 41, "target_start_line": 114, "target_confidence": 60}, {"target_end_line": 59, "source_start_line": 32, "source_end_line": 59, "source_confidence": 41, "target_start_line": 32, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 5, "source_end_line": 21, "source_confidence": 41, "target_start_line": 5, "target_confidence": 60}, {"target_end_line": 126, "source_start_line": 126, "source_end_line": 127, "source_confidence": 41, "target_start_line": 125, "target_confidence": 60}, {"target_end_line": 119, "source_start_line": 115, "source_end_line": 120, "source_confidence": 41, "target_start_line": 114, "target_confidence": 60}]}, {"source": "boeric_3b57a788a4b96e1af211", "value": 86, "target": "seemantk_3112c37d079d6fdce4be", "links": [{"target_end_line": 34, "source_start_line": 1, "source_end_line": 34, "source_confidence": 96, "target_start_line": 1, "target_confidence": 99}, {"target_end_line": 85, "source_start_line": 38, "source_end_line": 89, "source_confidence": 96, "target_start_line": 34, "target_confidence": 99}, {"target_end_line": 34, "source_start_line": 1, "source_end_line": 34, "source_confidence": 96, "target_start_line": 1, "target_confidence": 99}, {"target_end_line": 85, "source_start_line": 38, "source_end_line": 89, "source_confidence": 96, "target_start_line": 34, "target_confidence": 99}]}, {"source": "patricksurry_6478178", "value": 75, "target": "llb4ll_8709363", "links": [{"target_end_line": 74, "source_start_line": 24, "source_end_line": 74, "source_confidence": 53, "target_start_line": 64, "target_confidence": 41}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 53, "target_start_line": 23, "target_confidence": 41}, {"target_end_line": 177, "source_start_line": 109, "source_end_line": 177, "source_confidence": 53, "target_start_line": 116, "target_confidence": 41}, {"target_end_line": 158, "source_start_line": 100, "source_end_line": 158, "source_confidence": 53, "target_start_line": 102, "target_confidence": 41}, {"target_end_line": 74, "source_start_line": 24, "source_end_line": 74, "source_confidence": 53, "target_start_line": 64, "target_confidence": 41}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 53, "target_start_line": 23, "target_confidence": 41}, {"target_end_line": 177, "source_start_line": 109, "source_end_line": 177, "source_confidence": 53, "target_start_line": 116, "target_confidence": 41}, {"target_end_line": 158, "source_start_line": 100, "source_end_line": 158, "source_confidence": 53, "target_start_line": 102, "target_confidence": 41}, {"target_end_line": 74, "source_start_line": 24, "source_end_line": 74, "source_confidence": 53, "target_start_line": 64, "target_confidence": 41}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 53, "target_start_line": 23, "target_confidence": 41}, {"target_end_line": 177, "source_start_line": 109, "source_end_line": 177, "source_confidence": 53, "target_start_line": 116, "target_confidence": 41}, {"target_end_line": 158, "source_start_line": 100, "source_end_line": 158, "source_confidence": 53, "target_start_line": 102, "target_confidence": 41}, {"target_end_line": 74, "source_start_line": 24, "source_end_line": 74, "source_confidence": 53, "target_start_line": 64, "target_confidence": 41}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 53, "target_start_line": 23, "target_confidence": 41}, {"target_end_line": 177, "source_start_line": 109, "source_end_line": 177, "source_confidence": 53, "target_start_line": 116, "target_confidence": 41}, {"target_end_line": 158, "source_start_line": 100, "source_end_line": 158, "source_confidence": 53, "target_start_line": 102, "target_confidence": 41}]}, {"source": "mortenjohs_4739921", "value": 22, "target": "mpmckenna8_434839f120c552ad0048", "links": [{"target_end_line": 39, "source_start_line": 32, "source_end_line": 42, "source_confidence": 8, "target_start_line": 29, "target_confidence": 25}, {"target_end_line": 28, "source_start_line": 9, "source_end_line": 19, "source_confidence": 8, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 39, "source_start_line": 32, "source_end_line": 42, "source_confidence": 8, "target_start_line": 29, "target_confidence": 25}, {"target_end_line": 28, "source_start_line": 9, "source_end_line": 19, "source_confidence": 8, "target_start_line": 18, "target_confidence": 25}]}, {"source": "d3noob_5d621a60e2d1d02086bf", "value": 18, "target": "jdarling_06019d16cb5fd6795edf", "links": [{"target_end_line": 66, "source_start_line": 30, "source_end_line": 36, "source_confidence": 16, "target_start_line": 62, "target_confidence": 15}, {"target_end_line": 47, "source_start_line": 1, "source_end_line": 7, "source_confidence": 16, "target_start_line": 41, "target_confidence": 15}, {"target_end_line": 55, "source_start_line": 11, "source_end_line": 14, "source_confidence": 16, "target_start_line": 50, "target_confidence": 15}, {"target_end_line": 66, "source_start_line": 30, "source_end_line": 36, "source_confidence": 16, "target_start_line": 62, "target_confidence": 15}, {"target_end_line": 47, "source_start_line": 1, "source_end_line": 7, "source_confidence": 16, "target_start_line": 41, "target_confidence": 15}, {"target_end_line": 55, "source_start_line": 11, "source_end_line": 14, "source_confidence": 16, "target_start_line": 50, "target_confidence": 15}, {"target_end_line": 66, "source_start_line": 30, "source_end_line": 36, "source_confidence": 16, "target_start_line": 62, "target_confidence": 15}, {"target_end_line": 47, "source_start_line": 1, "source_end_line": 7, "source_confidence": 16, "target_start_line": 41, "target_confidence": 15}, {"target_end_line": 55, "source_start_line": 11, "source_end_line": 14, "source_confidence": 16, "target_start_line": 50, "target_confidence": 15}]}, {"source": "tommct_8191276", "value": 17, "target": "d3noob_8326869", "links": [{"target_end_line": 47, "source_start_line": 105, "source_end_line": 47, "source_confidence": 8, "target_start_line": 109, "target_confidence": 25}, {"target_end_line": 35, "source_start_line": 3, "source_end_line": 35, "source_confidence": 8, "target_start_line": 7, "target_confidence": 25}, {"target_end_line": 41, "source_start_line": 10, "source_end_line": 41, "source_confidence": 8, "target_start_line": 15, "target_confidence": 25}, {"target_end_line": 47, "source_start_line": 105, "source_end_line": 47, "source_confidence": 8, "target_start_line": 109, "target_confidence": 25}, {"target_end_line": 35, "source_start_line": 3, "source_end_line": 35, "source_confidence": 8, "target_start_line": 7, "target_confidence": 25}, {"target_end_line": 41, "source_start_line": 10, "source_end_line": 41, "source_confidence": 8, "target_start_line": 15, "target_confidence": 25}, {"target_end_line": 47, "source_start_line": 105, "source_end_line": 47, "source_confidence": 8, "target_start_line": 109, "target_confidence": 25}, {"target_end_line": 35, "source_start_line": 3, "source_end_line": 35, "source_confidence": 8, "target_start_line": 7, "target_confidence": 25}, {"target_end_line": 41, "source_start_line": 10, "source_end_line": 41, "source_confidence": 8, "target_start_line": 15, "target_confidence": 25}]}, {"source": "ZJONSSON_3918369", "value": 13, "target": "d3noob_4414436", "links": [{"target_end_line": 33, "source_start_line": 31, "source_end_line": 35, "source_confidence": 20, "target_start_line": 28, "target_confidence": 30}, {"target_end_line": 6, "source_start_line": 4, "source_end_line": 6, "source_confidence": 20, "target_start_line": 4, "target_confidence": 30}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 14, "source_confidence": 20, "target_start_line": 12, "target_confidence": 30}, {"target_end_line": 33, "source_start_line": 31, "source_end_line": 35, "source_confidence": 20, "target_start_line": 28, "target_confidence": 30}, {"target_end_line": 6, "source_start_line": 4, "source_end_line": 6, "source_confidence": 20, "target_start_line": 4, "target_confidence": 30}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 14, "source_confidence": 20, "target_start_line": 12, "target_confidence": 30}, {"target_end_line": 33, "source_start_line": 31, "source_end_line": 35, "source_confidence": 20, "target_start_line": 28, "target_confidence": 30}, {"target_end_line": 6, "source_start_line": 4, "source_end_line": 6, "source_confidence": 20, "target_start_line": 4, "target_confidence": 30}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 14, "source_confidence": 20, "target_start_line": 12, "target_confidence": 30}]}, {"source": "sivartravis_348fc7cd3f3d8ad9db3f", "value": 13, "target": "ashtonburg_40448d691c1cc22dd00b", "links": [{"target_end_line": 18, "source_start_line": 25, "source_end_line": 18, "source_confidence": 15, "target_start_line": 31, "target_confidence": 54}, {"target_end_line": 8, "source_start_line": 6, "source_end_line": 8, "source_confidence": 15, "target_start_line": 11, "target_confidence": 54}, {"target_end_line": 18, "source_start_line": 25, "source_end_line": 18, "source_confidence": 15, "target_start_line": 31, "target_confidence": 54}, {"target_end_line": 8, "source_start_line": 6, "source_end_line": 8, "source_confidence": 15, "target_start_line": 11, "target_confidence": 54}]}, {"source": "Rico3734_fa14dff4959ccb0886a9", "value": 17, "target": "zaccagbj_dd67a952700b2f2dcf89", "links": [{"target_end_line": 24, "source_start_line": 19, "source_end_line": 29, "source_confidence": 67, "target_start_line": 14, "target_confidence": 70}, {"target_end_line": 8, "source_start_line": 9, "source_end_line": 14, "source_confidence": 67, "target_start_line": 3, "target_confidence": 70}, {"target_end_line": 24, "source_start_line": 19, "source_end_line": 29, "source_confidence": 67, "target_start_line": 14, "target_confidence": 70}, {"target_end_line": 8, "source_start_line": 9, "source_end_line": 14, "source_confidence": 67, "target_start_line": 3, "target_confidence": 70}]}, {"source": "Jay-Oh-eN_522d3842f27e2581f0d9", "value": 44, "target": "margeigh_9d0251925a6bf6409533", "links": [{"target_end_line": 43, "source_start_line": 13, "source_end_line": 43, "source_confidence": 94, "target_start_line": 13, "target_confidence": 97}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 13, "source_confidence": 94, "target_start_line": 1, "target_confidence": 97}, {"target_end_line": 43, "source_start_line": 13, "source_end_line": 43, "source_confidence": 94, "target_start_line": 13, "target_confidence": 97}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 13, "source_confidence": 94, "target_start_line": 1, "target_confidence": 97}]}, {"source": "Jay-Oh-eN_522d3842f27e2581f0d9", "value": 45, "target": "margeigh_5cc8033ab729fbd9a4c9", "links": [{"target_end_line": 44, "source_start_line": 13, "source_end_line": 43, "source_confidence": 94, "target_start_line": 13, "target_confidence": 97}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 13, "source_confidence": 94, "target_start_line": 1, "target_confidence": 97}, {"target_end_line": 44, "source_start_line": 13, "source_end_line": 43, "source_confidence": 94, "target_start_line": 13, "target_confidence": 97}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 13, "source_confidence": 94, "target_start_line": 1, "target_confidence": 97}]}, {"source": "phoebebright_3176159", "value": 107, "target": "GerHobbelt_3695277", "links": [{"target_end_line": 235, "source_start_line": 1, "source_end_line": 235, "source_confidence": 99, "target_start_line": 107, "target_confidence": 29}]}, {"source": "erlenstar_11295915", "value": 13, "target": "d3noob_473f0cf66196a008cf99", "links": [{"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 16, "target_start_line": 31, "target_confidence": 20}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 16, "target_start_line": 8, "target_confidence": 20}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 16, "target_start_line": 14, "target_confidence": 20}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 16, "target_start_line": 31, "target_confidence": 20}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 16, "target_start_line": 8, "target_confidence": 20}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 16, "target_start_line": 14, "target_confidence": 20}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 16, "target_start_line": 31, "target_confidence": 20}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 16, "target_start_line": 8, "target_confidence": 20}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 16, "target_start_line": 14, "target_confidence": 20}]}, {"source": "pavelloz_0abaf1549c7a2910108150ceef1b8c3c", "value": 16, "target": "veltman_1b43f61887e89c371f1c8c73341540a3", "links": [{"target_end_line": 11, "source_start_line": 24, "source_end_line": 29, "source_confidence": 32, "target_start_line": 7, "target_confidence": 23}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 32, "target_start_line": 1, "target_confidence": 23}, {"target_end_line": 27, "source_start_line": 12, "source_end_line": 16, "source_confidence": 32, "target_start_line": 22, "target_confidence": 23}, {"target_end_line": 11, "source_start_line": 24, "source_end_line": 29, "source_confidence": 32, "target_start_line": 7, "target_confidence": 23}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 32, "target_start_line": 1, "target_confidence": 23}, {"target_end_line": 27, "source_start_line": 12, "source_end_line": 16, "source_confidence": 32, "target_start_line": 22, "target_confidence": 23}, {"target_end_line": 11, "source_start_line": 24, "source_end_line": 29, "source_confidence": 32, "target_start_line": 7, "target_confidence": 23}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 32, "target_start_line": 1, "target_confidence": 23}, {"target_end_line": 27, "source_start_line": 12, "source_end_line": 16, "source_confidence": 32, "target_start_line": 22, "target_confidence": 23}]}, {"source": "timelyportfolio_5c136de85de1c2abb6fc", "value": 23, "target": "DStruths_9c042e3a6b66048b5bd4", "links": [{"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 14, "target_start_line": 10, "target_confidence": 4}, {"target_end_line": 47, "source_start_line": 85, "source_end_line": 47, "source_confidence": 14, "target_start_line": 87, "target_confidence": 4}, {"target_end_line": 147, "source_start_line": 112, "source_end_line": 147, "source_confidence": 14, "target_start_line": 121, "target_confidence": 4}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 14, "target_start_line": 10, "target_confidence": 4}, {"target_end_line": 47, "source_start_line": 85, "source_end_line": 47, "source_confidence": 14, "target_start_line": 87, "target_confidence": 4}, {"target_end_line": 147, "source_start_line": 112, "source_end_line": 147, "source_confidence": 14, "target_start_line": 121, "target_confidence": 4}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 14, "target_start_line": 10, "target_confidence": 4}, {"target_end_line": 47, "source_start_line": 85, "source_end_line": 47, "source_confidence": 14, "target_start_line": 87, "target_confidence": 4}, {"target_end_line": 147, "source_start_line": 112, "source_end_line": 147, "source_confidence": 14, "target_start_line": 121, "target_confidence": 4}]}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "value": 13, "target": "emeeks_c569f8852013e07abf57", "links": [{"target_end_line": 154, "source_start_line": 131, "source_end_line": 154, "source_confidence": 9, "target_start_line": 143, "target_confidence": 10}]}, {"source": "erlenstar_11295915", "value": 16, "target": "d3noob_7030f35b72de721622b8", "links": [{"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 25}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 25}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 25}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 25}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 25}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 25}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 25}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 25}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 25}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 25}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 25}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 25}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 34, "source_confidence": 19, "target_start_line": 31, "target_confidence": 25}, {"target_end_line": 6, "source_start_line": 6, "source_end_line": 6, "source_confidence": 19, "target_start_line": 8, "target_confidence": 25}, {"target_end_line": 13, "source_start_line": 10, "source_end_line": 13, "source_confidence": 19, "target_start_line": 14, "target_confidence": 25}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 19, "target_start_line": 25, "target_confidence": 25}]}, {"source": "malcolm-decuire_95314ea75aed1c988f7c", "value": 60, "target": "ivandgreat_a1dbc93ad94d30112cd5", "links": [{"target_end_line": 82, "source_start_line": 41, "source_end_line": 82, "source_confidence": 45, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 210, "source_start_line": 117, "source_end_line": 210, "source_confidence": 45, "target_start_line": 128, "target_confidence": 28}, {"target_end_line": 60, "source_start_line": 26, "source_end_line": 60, "source_confidence": 45, "target_start_line": 40, "target_confidence": 28}, {"target_end_line": 102, "source_start_line": 65, "source_end_line": 102, "source_confidence": 45, "target_start_line": 73, "target_confidence": 28}, {"target_end_line": 38, "source_start_line": 15, "source_end_line": 38, "source_confidence": 45, "target_start_line": 19, "target_confidence": 28}, {"target_end_line": 82, "source_start_line": 41, "source_end_line": 82, "source_confidence": 45, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 210, "source_start_line": 117, "source_end_line": 210, "source_confidence": 45, "target_start_line": 128, "target_confidence": 28}, {"target_end_line": 60, "source_start_line": 26, "source_end_line": 60, "source_confidence": 45, "target_start_line": 40, "target_confidence": 28}, {"target_end_line": 102, "source_start_line": 65, "source_end_line": 102, "source_confidence": 45, "target_start_line": 73, "target_confidence": 28}, {"target_end_line": 38, "source_start_line": 15, "source_end_line": 38, "source_confidence": 45, "target_start_line": 19, "target_confidence": 28}, {"target_end_line": 82, "source_start_line": 41, "source_end_line": 82, "source_confidence": 45, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 210, "source_start_line": 117, "source_end_line": 210, "source_confidence": 45, "target_start_line": 128, "target_confidence": 28}, {"target_end_line": 60, "source_start_line": 26, "source_end_line": 60, "source_confidence": 45, "target_start_line": 40, "target_confidence": 28}, {"target_end_line": 102, "source_start_line": 65, "source_end_line": 102, "source_confidence": 45, "target_start_line": 73, "target_confidence": 28}, {"target_end_line": 38, "source_start_line": 15, "source_end_line": 38, "source_confidence": 45, "target_start_line": 19, "target_confidence": 28}, {"target_end_line": 82, "source_start_line": 41, "source_end_line": 82, "source_confidence": 45, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 210, "source_start_line": 117, "source_end_line": 210, "source_confidence": 45, "target_start_line": 128, "target_confidence": 28}, {"target_end_line": 60, "source_start_line": 26, "source_end_line": 60, "source_confidence": 45, "target_start_line": 40, "target_confidence": 28}, {"target_end_line": 102, "source_start_line": 65, "source_end_line": 102, "source_confidence": 45, "target_start_line": 73, "target_confidence": 28}, {"target_end_line": 38, "source_start_line": 15, "source_end_line": 38, "source_confidence": 45, "target_start_line": 19, "target_confidence": 28}, {"target_end_line": 82, "source_start_line": 41, "source_end_line": 82, "source_confidence": 45, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 210, "source_start_line": 117, "source_end_line": 210, "source_confidence": 45, "target_start_line": 128, "target_confidence": 28}, {"target_end_line": 60, "source_start_line": 26, "source_end_line": 60, "source_confidence": 45, "target_start_line": 40, "target_confidence": 28}, {"target_end_line": 102, "source_start_line": 65, "source_end_line": 102, "source_confidence": 45, "target_start_line": 73, "target_confidence": 28}, {"target_end_line": 38, "source_start_line": 15, "source_end_line": 38, "source_confidence": 45, "target_start_line": 19, "target_confidence": 28}]}, {"source": "emeeks_c8ef9d67acc044b368ef", "value": 59, "target": "tarekrached_a7628dd96c62155068dd", "links": [{"target_end_line": 82, "source_start_line": 41, "source_end_line": 59, "source_confidence": 41, "target_start_line": 64, "target_confidence": 26}, {"target_end_line": 60, "source_start_line": 26, "source_end_line": 40, "source_confidence": 41, "target_start_line": 46, "target_confidence": 26}, {"target_end_line": 209, "source_start_line": 117, "source_end_line": 127, "source_confidence": 41, "target_start_line": 198, "target_confidence": 26}, {"target_end_line": 102, "source_start_line": 65, "source_end_line": 73, "source_confidence": 41, "target_start_line": 95, "target_confidence": 26}, {"target_end_line": 38, "source_start_line": 15, "source_end_line": 19, "source_confidence": 41, "target_start_line": 34, "target_confidence": 26}, {"target_end_line": 82, "source_start_line": 41, "source_end_line": 59, "source_confidence": 41, "target_start_line": 64, "target_confidence": 26}, {"target_end_line": 60, "source_start_line": 26, "source_end_line": 40, "source_confidence": 41, "target_start_line": 46, "target_confidence": 26}, {"target_end_line": 209, "source_start_line": 117, "source_end_line": 127, "source_confidence": 41, "target_start_line": 198, "target_confidence": 26}, {"target_end_line": 102, "source_start_line": 65, "source_end_line": 73, "source_confidence": 41, "target_start_line": 95, "target_confidence": 26}, {"target_end_line": 38, "source_start_line": 15, "source_end_line": 19, "source_confidence": 41, "target_start_line": 34, "target_confidence": 26}, {"target_end_line": 82, "source_start_line": 41, "source_end_line": 59, "source_confidence": 41, "target_start_line": 64, "target_confidence": 26}, {"target_end_line": 60, "source_start_line": 26, "source_end_line": 40, "source_confidence": 41, "target_start_line": 46, "target_confidence": 26}, {"target_end_line": 209, "source_start_line": 117, "source_end_line": 127, "source_confidence": 41, "target_start_line": 198, "target_confidence": 26}, {"target_end_line": 102, "source_start_line": 65, "source_end_line": 73, "source_confidence": 41, "target_start_line": 95, "target_confidence": 26}, {"target_end_line": 38, "source_start_line": 15, "source_end_line": 19, "source_confidence": 41, "target_start_line": 34, "target_confidence": 26}, {"target_end_line": 82, "source_start_line": 41, "source_end_line": 59, "source_confidence": 41, "target_start_line": 64, "target_confidence": 26}, {"target_end_line": 60, "source_start_line": 26, "source_end_line": 40, "source_confidence": 41, "target_start_line": 46, "target_confidence": 26}, {"target_end_line": 209, "source_start_line": 117, "source_end_line": 127, "source_confidence": 41, "target_start_line": 198, "target_confidence": 26}, {"target_end_line": 102, "source_start_line": 65, "source_end_line": 73, "source_confidence": 41, "target_start_line": 95, "target_confidence": 26}, {"target_end_line": 38, "source_start_line": 15, "source_end_line": 19, "source_confidence": 41, "target_start_line": 34, "target_confidence": 26}, {"target_end_line": 82, "source_start_line": 41, "source_end_line": 59, "source_confidence": 41, "target_start_line": 64, "target_confidence": 26}, {"target_end_line": 60, "source_start_line": 26, "source_end_line": 40, "source_confidence": 41, "target_start_line": 46, "target_confidence": 26}, {"target_end_line": 209, "source_start_line": 117, "source_end_line": 127, "source_confidence": 41, "target_start_line": 198, "target_confidence": 26}, {"target_end_line": 102, "source_start_line": 65, "source_end_line": 73, "source_confidence": 41, "target_start_line": 95, "target_confidence": 26}, {"target_end_line": 38, "source_start_line": 15, "source_end_line": 19, "source_confidence": 41, "target_start_line": 34, "target_confidence": 26}]}, {"source": "ptvans_741ef9b6879861b5b9dc", "value": 12, "target": "renecnielsen_f11624fe14195cf8a1c5", "links": [{"target_end_line": 23, "source_start_line": 25, "source_end_line": 31, "source_confidence": 13, "target_start_line": 17, "target_confidence": 12}, {"target_end_line": 7, "source_start_line": 6, "source_end_line": 10, "source_confidence": 13, "target_start_line": 3, "target_confidence": 12}, {"target_end_line": 23, "source_start_line": 25, "source_end_line": 31, "source_confidence": 13, "target_start_line": 17, "target_confidence": 12}, {"target_end_line": 7, "source_start_line": 6, "source_end_line": 10, "source_confidence": 13, "target_start_line": 3, "target_confidence": 12}]}, {"source": "tommct_8191276", "value": 17, "target": "d3noob_8324872", "links": [{"target_end_line": 62, "source_start_line": 105, "source_end_line": 62, "source_confidence": 8, "target_start_line": 109, "target_confidence": 21}, {"target_end_line": 50, "source_start_line": 3, "source_end_line": 50, "source_confidence": 8, "target_start_line": 7, "target_confidence": 21}, {"target_end_line": 56, "source_start_line": 10, "source_end_line": 56, "source_confidence": 8, "target_start_line": 15, "target_confidence": 21}, {"target_end_line": 62, "source_start_line": 105, "source_end_line": 62, "source_confidence": 8, "target_start_line": 109, "target_confidence": 21}, {"target_end_line": 50, "source_start_line": 3, "source_end_line": 50, "source_confidence": 8, "target_start_line": 7, "target_confidence": 21}, {"target_end_line": 56, "source_start_line": 10, "source_end_line": 56, "source_confidence": 8, "target_start_line": 15, "target_confidence": 21}, {"target_end_line": 62, "source_start_line": 105, "source_end_line": 62, "source_confidence": 8, "target_start_line": 109, "target_confidence": 21}, {"target_end_line": 50, "source_start_line": 3, "source_end_line": 50, "source_confidence": 8, "target_start_line": 7, "target_confidence": 21}, {"target_end_line": 56, "source_start_line": 10, "source_end_line": 56, "source_confidence": 8, "target_start_line": 15, "target_confidence": 21}]}, {"source": "iros_36a18c646f3b3b5b9001ad758bfd8a08", "value": 41, "target": "guillaumechaumet_10f11d806be9009d5f6bcaa1006cd18b", "links": [{"target_end_line": 38, "source_start_line": 45, "source_end_line": 38, "source_confidence": 33, "target_start_line": 64, "target_confidence": 63}, {"target_end_line": 55, "source_start_line": 71, "source_end_line": 55, "source_confidence": 33, "target_start_line": 82, "target_confidence": 63}, {"target_end_line": 16, "source_start_line": 4, "source_end_line": 16, "source_confidence": 33, "target_start_line": 11, "target_confidence": 63}, {"target_end_line": 38, "source_start_line": 45, "source_end_line": 38, "source_confidence": 33, "target_start_line": 64, "target_confidence": 63}, {"target_end_line": 55, "source_start_line": 71, "source_end_line": 55, "source_confidence": 33, "target_start_line": 82, "target_confidence": 63}, {"target_end_line": 16, "source_start_line": 4, "source_end_line": 16, "source_confidence": 33, "target_start_line": 11, "target_confidence": 63}, {"target_end_line": 38, "source_start_line": 45, "source_end_line": 38, "source_confidence": 33, "target_start_line": 64, "target_confidence": 63}, {"target_end_line": 55, "source_start_line": 71, "source_end_line": 55, "source_confidence": 33, "target_start_line": 82, "target_confidence": 63}, {"target_end_line": 16, "source_start_line": 4, "source_end_line": 16, "source_confidence": 33, "target_start_line": 11, "target_confidence": 63}]}, {"source": "mpmckenna8_f6245adc7a3cd3930a11", "value": 19, "target": "emeeks_540b1b884b80b14a44c6", "links": [{"target_end_line": 70, "source_start_line": 125, "source_end_line": 70, "source_confidence": 12, "target_start_line": 143, "target_confidence": 33}]}, {"source": "emeeks_3a54620a4751a7d68c1e", "value": 14, "target": "micahstubbs_948378950dd7b3e31e8cda3b33ebbcc8", "links": [{"target_end_line": 107, "source_start_line": 15, "source_end_line": 21, "source_confidence": 15, "target_start_line": 95, "target_confidence": 3}, {"target_end_line": 172, "source_start_line": 34, "source_end_line": 34, "source_confidence": 15, "target_start_line": 172, "target_confidence": 3}, {"target_end_line": 107, "source_start_line": 15, "source_end_line": 21, "source_confidence": 15, "target_start_line": 95, "target_confidence": 3}, {"target_end_line": 172, "source_start_line": 34, "source_end_line": 34, "source_confidence": 15, "target_start_line": 172, "target_confidence": 3}]}, {"source": "ninestar09_39e32b697d31e979040d", "value": 26, "target": "caHaber_6f3c3cdf063f22cd98b040477488c8df", "links": [{"target_end_line": 26, "source_start_line": 1, "source_end_line": 26, "source_confidence": 93, "target_start_line": 26, "target_confidence": 87}]}, {"source": "ninestar09_39e32b697d31e979040d", "value": 26, "target": "caHaber_315b9fe31effcfa9d06e8522cd354e18", "links": [{"target_end_line": 26, "source_start_line": 1, "source_end_line": 26, "source_confidence": 93, "target_start_line": 26, "target_confidence": 84}]}]}