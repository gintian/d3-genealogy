[{"uid": "SpaceActuary_17088cd9314c08d6928fffc1dea5d7be", "created_at": "2016-05-24T15:07:06Z", "updated_at": "2016-05-24T15:19:59Z", "api": ["d3.scale.linear", "d3.select", "d3.layout.force"], "readme": "This example is from my blog on how to [Create a Gooey effect during a transition](http://www.visualcinnamon.com/2015/05/gooey-effect.html) and shows multiple gooey circles coming out of a center stationary circle and then falling back in\n\nThe other two examples\n- [Gooey appearing from a circle](http://bl.ocks.org/nbremer/f6952f1ef900d84be918)\n- [Gooey falling out of a rectangle](http://bl.ocks.org/nbremer/a3684c52fb527c8fa415)\n\nforked from <a href='http://bl.ocks.org/nbremer/'>nbremer</a>'s block: <a href='http://bl.ocks.org/nbremer/69808ec7ec07542ed7df'>Gooey Effect - Circle</a>", "description": "Gooey Effect - Circle"}, {"uid": "Utopiah_fec8aa2c70a72bcd5f2a81e1b48cc978", "created_at": "2016-05-22T15:58:10Z", "updated_at": "2016-05-22T16:41:12Z", "api": ["d3.select", "d3.scale.category20", "d3.layout.force", "d3.json"], "readme": "Testing out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org).\n\nSince AFrame works with DOM elements, you can use d3's selection API to generate and modify 3D elements, as well as handle \"mouse\" events (including the VR friendly \"fuse cursor\") as if it was SVG.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/8be32e6f1f32920ba841'>aframe + d3 test</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/2b3d47f42279357aa86f00c69ccf74ed'>VR graph</a>", "description": "VR graph"}, {"uid": "veltman_1b43f61887e89c371f1c8c73341540a3", "created_at": "2016-05-19T15:48:28Z", "updated_at": "2016-05-20T11:36:32Z", "api": ["d3.select", "d3.geom.quadtree", "d3.scale.linear", "d3.svg.axis", "d3.mouse", "d3.range"], "readme": "Canvas scatterplot w/ quadtree for point picking on hover, per: [https://twitter.com/mbostock/status/733317794419212288](https://twitter.com/mbostock/status/733317794419212288)\n\nIf you don't want the full Voronoi effect because your chart has some big dead zones, you could add a distance threshold and only trigger the highlighting when the nearest point is within that distance.\n\nIf you need behavior that more closely mimics mouse/touch because your shapes have significant dimensions or their layer order matters, you could try [colorpicking](https://bl.ocks.org/veltman/f539d97e922b918d47e2b2d1a8bcd2dd) instead.\n", "description": "Canvas scatterplot with quadtree"}, {"uid": "veltman_f539d97e922b918d47e2b2d1a8bcd2dd", "created_at": "2016-05-18T19:08:44Z", "updated_at": "2016-05-20T11:05:25Z", "api": ["d3.select", "d3.scale.linear", "d3.svg.axis", "d3.mouse", "d3.range"], "readme": "Canvas scatterplot w/ colorpicking for mouse events. Renders lots of dots on a `<canvas>` for speed, but uses a hidden canvas with a color-to-data dictionary to get the value under a mouse event. Hover over some dots.\n\nUsing nonrectangular shapes creates the chance of weirdness from antialiasing when triggered on the very edge of a shape. If you wanted to prevent them entirely you could verify that the resulting data center point is within `r` pixels of the current mouse position or you could sample additional pixels near the event.\n\nThis approach handles layer order and weird shapes, but if your points are all tiny dots, a [quadtree approach](https://bl.ocks.org/veltman/1b43f61887e89c371f1c8c73341540a3) is probably faster and more effective.\n\nSee also: [Needles, Haystacks, and the Canvas API](https://bocoup.com/weblog/2d-picking-in-canvas), [WebGL Beginner's Guide - Picking](http://voxelent.com/html/beginners-guide/chapter_8/ch8_Picking.html)\n", "description": "Canvas scatterplot with mouse events"}, {"uid": "sxywu_5318e9bea8063442a7790be88e9c45b3", "created_at": "2016-05-18T00:23:17Z", "updated_at": "2016-05-19T05:40:20Z", "api": ["d3.time.format", "d3.json", "d3.select"], "readme": "Spread of tweets during the two days of Openvis Conf.\n\n--\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/92841c212b11c534713782544cfdf10f'>openvis tweets #1</a>\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/8b7d381614a093195eec2636cab9ef2f'>openvis tweets #2</a>\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/9ea31a49cc0af1fdeed189619f651f5b'>openvis tweets #3</a>\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/2b22df50909a1d3359fe647f51e97506'>openvis tweets #4</a>", "description": "openvis tweets #4.5: data crunch"}, {"uid": "SpaceActuary_79463d7246511748ea0245ec4bf12140", "created_at": "2016-05-13T19:06:37Z", "updated_at": "2016-05-13T19:06:37Z", "api": ["d3.scale.category20", "d3.layout.force", "d3.select", "d3.json"], "readme": "This simple force-directed graph shows character co-occurence in *Les Mis\u00e9rables*. A physical simulation of charged particles and springs places related characters in closer proximity, while unrelated characters are farther apart. Layout algorithm inspired by [Tim Dwyer](http://www.csse.monash.edu.au/~tdwyer/) and [Thomas Jakobsen](http://web.archive.org/web/20080410171619/http://www.teknikus.dk/tj/gdc2001.htm). Data based on character coappearence in Victor Hugo's *Les Mis\u00e9rables*, compiled by [Donald Knuth](http://www-cs-faculty.stanford.edu/~uno/sgb.html).\n\nCompare this display to a force layout with [curved links](/mbostock/4600693), a force layout with [fisheye distortion](http://bost.ocks.org/mike/fisheye/) and a [matrix diagram](http://bost.ocks.org/mike/miserables/).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4062045'>Force-Directed Graph</a>", "description": "Force-Directed Graph"}, {"uid": "stjacqrm_344e9c52fa580966d47b1e13ca7fee11", "created_at": "2016-05-13T16:39:27Z", "updated_at": "2016-05-13T16:39:27Z", "api": ["d3.select", "d3.json", "d3.svg.line", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/1d3dcaefadd4c8f33318fe017cf730d6'>genome browser for final group project</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/d9330fbe7bbf1a68e3d634602eb4d7a2'>genome browser for final group project</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/f405977b9bf51851a6b86476992c6ce9'>Two tooltips and fade out</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/794e8d9eb8c153a1778cc487ff4465ff'>Two tooltips and fade out</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/444730d0628d814b9ce02be0636e01f4'>Conserved Domains</a>", "description": "Conserved Domains"}, {"uid": "Utopiah_8a409c16a4422a56e27f84ff2465a89c", "created_at": "2016-05-12T13:46:56Z", "updated_at": "2016-05-12T13:46:56Z", "api": ["d3.tsv", "d3.scale.ordinal", "d3.range", "d3.select", "d3.scale.linear", "d3.extent", "d3.max", "d3.svg.area"], "readme": "## Slave Voyages - Embarking\n\nThis is an attempt at visualizing the relative scale of the slave trade by country. The data comes from [slavevoyages.org](http://slavevoyages.org/tast/assessment/estimates.faces).\n\nThe visualization is inpsired by the [Mountains-out-of-molehills](http://www.informationisbeautiful.net/visualizations/mountains-out-of-molehills/) visualization. The focus is to communicate the relative scale over time, giving us a sense of activity over time of this attrocious part of our history.\n\n\n\n\n\n\n\n\n\n\n\n\nforked from <a href='http://bl.ocks.org/rcrocker13/'>rcrocker13</a>'s block: <a href='http://bl.ocks.org/rcrocker13/c8a7905bda0f5825efbd'>slave voyages - embarking</a>", "description": "slave voyages - embarking"}, {"uid": "syntagmatic_ac5b726c53ec02618de7795429c6f833", "created_at": "2016-05-08T00:11:15Z", "updated_at": "2016-05-09T14:23:46Z", "api": ["d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.scaleCategory20", "d3.csv", "d3.extent", "d3.select"], "readme": "Scatterplot matrix design invented by J. A. Hartigan. 1986 baseball statistics data from the R package [Visualizing Categorical Data](https://vincentarelbundock.github.io/Rdatasets/datasets.html).\n\nBased on [Scatterplot Matrix Brushing](http://bl.ocks.org/mbostock/4063663), but still awaiting the [d3.v4 brush component](https://github.com/mbostock/d3/issues/2461).\n", "description": "Baseball Scatterplot Matrix"}, {"uid": "syntagmatic_1f48d7abcd8e4cb040bd9263cff10700", "created_at": "2016-05-04T05:38:29Z", "updated_at": "2016-05-04T22:41:23Z", "api": ["d3.select", "d3.scaleLog", "d3.scaleLinear", "d3.scaleSqrt", "d3.axisBottom", "d3.format", "d3.axisLeft", "d3.scaleOrdinal", "d3.csv", "d3.extent", "d3.selectAll"], "readme": "A scatterplot of the [PHL Exoplanets Catalog](http://phl.upr.edu/projects/habitable-exoplanets-catalog/data/database). Excluded planets with Period of zero days and undefined Eccentricity. Radius sized to planet Mass.\n\n[![Habitable Classes](https://gist.githubusercontent.com/syntagmatic/1f48d7abcd8e4cb040bd9263cff10700/raw/1fd0c1e60c58560b74d6a6d73e09cd188a354a58/HEC_View.jpg)](http://phl.upr.edu/library/notes/athermalplanetaryhabitabilityclassificationforexoplanets)\n", "description": "Exoplanets Scatterplot"}, {"uid": "slayerscouts_55ad90827ac81c85912550d1bc89c59e", "created_at": "2016-04-29T20:08:47Z", "updated_at": "2016-04-29T20:08:47Z", "api": ["d3.select", "d3.json", "d3.scale.threshold", "d3.geo.transform", "d3.geo.path"], "readme": "Unemployment rate in french \u00cele-de-France\n\nforked from <a href='http://bl.ocks.org/bricedev/'>bricedev</a>'s block: <a href='http://bl.ocks.org/bricedev/8aa78379efd19ca584c9'>Unemployment rate</a>", "description": "Unemployment rate"}, {"uid": "slayerscouts_7d1296a8dd977700b0edf7709a21a2dd", "created_at": "2016-04-29T20:07:53Z", "updated_at": "2016-04-29T20:07:53Z", "api": ["d3.map", "d3.scale.quantize", "d3.range", "d3.geo.albersUsa", "d3.geo.path", "d3.select"], "readme": "This choropleth encodes unemployment rates from 2008 with a [quantize scale](https://github.com/mbostock/d3/wiki/Quantitative-Scales#wiki-quantize) ranging from 0 to 15%. A [threshold scale](../3306362) is a useful alternative for coloring arbitrary ranges.\n\nforked from <a href='http://bl.ocks.org/wboykinm/'>wboykinm</a>'s block: <a href='http://bl.ocks.org/wboykinm/224ec8403aa16da1937e'>Choropleth</a>", "description": "Choropleth"}, {"uid": "slayerscouts_de99b8b25f7c68a40dd4b3d351d1c26e", "created_at": "2016-04-29T19:59:59Z", "updated_at": "2016-04-29T19:59:59Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.json", "d3.max", "d3.rgb"], "readme": "Inspired by an [example](http://bl.ocks.org/mbostock/3887051) from [Mike Bostock](http://bost.ocks.org). Colors from [Every ColorBrewer Scale](http://bl.ocks.org/mbostock/5577023).\n\nforked from <a href='http://bl.ocks.org/bricedev/'>bricedev</a>'s block: <a href='http://bl.ocks.org/bricedev/0d95074b6d83a77dc3ad'>Grouped bar chart</a>", "description": "Grouped bar chart"}, {"uid": "ThanisataS_8fd328b681644fe4468c76d09ebdd59d", "created_at": "2016-04-28T02:08:43Z", "updated_at": "2016-04-28T02:10:41Z", "api": ["d3.json", "d3.select", "d3.max", "d3.range", "d3.format", "d3.rgb", "d3.scale.linear"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/7b750aac02c274ce7be1a2ec65681b6b'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/adf2f396ed6f7a06bcee6e03a6f2a375'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e594934db447063ce886b35c2e3ea0c3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/63b313292ecb948800fb1bebaef690b3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/73d2088a4754f9a3b46db81c3a12ca42'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/752ff3769123dd6f733dd1a0fd139698'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8e82406ccf2abef3600b5c63db1830ca'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/0bc494cbfc5dab3fbea588a6a7cc0cdb'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/e08d1b622815450a47a52deb8644533d'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e844a36eff424d262f3de5d9baa16b91'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/ThanisataS/'>ThanisataS</a>'s block: <a href='http://bl.ocks.org/ThanisataS/1e629563fec7314eae2a09fa71d732a7'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/ThanisataS/'>ThanisataS</a>'s block: <a href='http://bl.ocks.org/ThanisataS/237c8eea17f00059191c179f1452ebbf'>genome browser</a>", "description": "genome browser"}, {"uid": "ThanisataS_4e114e528f1184baf4f067f181a4b4c7", "created_at": "2016-04-28T01:25:08Z", "updated_at": "2016-04-28T02:37:51Z", "api": ["d3.json", "d3.select", "d3.max", "d3.range", "d3.format", "d3.rgb", "d3.scale.linear"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/7b750aac02c274ce7be1a2ec65681b6b'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/adf2f396ed6f7a06bcee6e03a6f2a375'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e594934db447063ce886b35c2e3ea0c3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/63b313292ecb948800fb1bebaef690b3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/73d2088a4754f9a3b46db81c3a12ca42'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/752ff3769123dd6f733dd1a0fd139698'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8e82406ccf2abef3600b5c63db1830ca'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/0bc494cbfc5dab3fbea588a6a7cc0cdb'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/e08d1b622815450a47a52deb8644533d'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e844a36eff424d262f3de5d9baa16b91'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/ThanisataS/'>ThanisataS</a>'s block: <a href='http://bl.ocks.org/ThanisataS/1e629563fec7314eae2a09fa71d732a7'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/ThanisataS/'>ThanisataS</a>'s block: <a href='http://bl.ocks.org/ThanisataS/237c8eea17f00059191c179f1452ebbf'>genome browser</a>", "description": "genome browser"}, {"uid": "ThanisataS_237c8eea17f00059191c179f1452ebbf", "created_at": "2016-04-28T01:18:32Z", "updated_at": "2016-04-28T02:12:35Z", "api": ["d3.json", "d3.select", "d3.max", "d3.range", "d3.format", "d3.rgb", "d3.scale.linear"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/7b750aac02c274ce7be1a2ec65681b6b'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/adf2f396ed6f7a06bcee6e03a6f2a375'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e594934db447063ce886b35c2e3ea0c3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/63b313292ecb948800fb1bebaef690b3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/73d2088a4754f9a3b46db81c3a12ca42'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/752ff3769123dd6f733dd1a0fd139698'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8e82406ccf2abef3600b5c63db1830ca'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/0bc494cbfc5dab3fbea588a6a7cc0cdb'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/e08d1b622815450a47a52deb8644533d'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e844a36eff424d262f3de5d9baa16b91'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/ThanisataS/'>ThanisataS</a>'s block: <a href='http://bl.ocks.org/ThanisataS/1e629563fec7314eae2a09fa71d732a7'>genome browser</a>", "description": "genome browser"}, {"uid": "ThanisataS_1e629563fec7314eae2a09fa71d732a7", "created_at": "2016-04-27T23:14:31Z", "updated_at": "2016-04-28T00:07:02Z", "api": ["d3.json", "d3.select", "d3.max", "d3.range", "d3.format", "d3.rgb", "d3.scale.linear"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/7b750aac02c274ce7be1a2ec65681b6b'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/adf2f396ed6f7a06bcee6e03a6f2a375'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e594934db447063ce886b35c2e3ea0c3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/63b313292ecb948800fb1bebaef690b3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/73d2088a4754f9a3b46db81c3a12ca42'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/752ff3769123dd6f733dd1a0fd139698'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8e82406ccf2abef3600b5c63db1830ca'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/0bc494cbfc5dab3fbea588a6a7cc0cdb'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/e08d1b622815450a47a52deb8644533d'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e844a36eff424d262f3de5d9baa16b91'>genome browser</a>", "description": "genome browser"}, {"uid": "ThanisataS_3f8c09885e3e91afa4990878d0580986", "created_at": "2016-04-27T21:08:07Z", "updated_at": "2016-04-27T21:08:07Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range", "d3.format", "d3.rgb", "d3.scale.linear"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/7b750aac02c274ce7be1a2ec65681b6b'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/adf2f396ed6f7a06bcee6e03a6f2a375'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e594934db447063ce886b35c2e3ea0c3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/63b313292ecb948800fb1bebaef690b3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/73d2088a4754f9a3b46db81c3a12ca42'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/752ff3769123dd6f733dd1a0fd139698'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8e82406ccf2abef3600b5c63db1830ca'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/0bc494cbfc5dab3fbea588a6a7cc0cdb'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/e08d1b622815450a47a52deb8644533d'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e844a36eff424d262f3de5d9baa16b91'>genome browser</a>", "description": "genome browser"}, {"uid": "smith13mr_276640f2685969051a51e53a2e31c9d2", "created_at": "2016-04-27T14:35:19Z", "updated_at": "2016-04-28T14:52:42Z", "api": ["d3.select", "d3.json", "d3.svg.line", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/1d3dcaefadd4c8f33318fe017cf730d6'>genome browser for final group project</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/d9330fbe7bbf1a68e3d634602eb4d7a2'>genome browser for final group project</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/f405977b9bf51851a6b86476992c6ce9'>Two tooltips and fade out</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/794e8d9eb8c153a1778cc487ff4465ff'>Final genome browser with two tooltips</a>", "description": "Final genome browser with two tooltips"}, {"uid": "smith13mr_76f3246806b240d1ac4f6b5d46dbbc82", "created_at": "2016-04-27T13:19:35Z", "updated_at": "2016-04-27T14:33:20Z", "api": ["d3.select", "d3.json", "d3.svg.line", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/1d3dcaefadd4c8f33318fe017cf730d6'>genome browser for final group project</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/d9330fbe7bbf1a68e3d634602eb4d7a2'>genome browser for final group project</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/f405977b9bf51851a6b86476992c6ce9'>Two tooltips and fade out</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/794e8d9eb8c153a1778cc487ff4465ff'>Two tooltips and fade out</a>", "description": "Finished Two tooltips and fade out"}, {"uid": "ThanisataS_5e87818a12b3ef84f43e9c8415ad16a6", "created_at": "2016-04-26T15:48:39Z", "updated_at": "2016-04-26T15:48:39Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range", "d3.format", "d3.rgb", "d3.scale.linear"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/7b750aac02c274ce7be1a2ec65681b6b'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/adf2f396ed6f7a06bcee6e03a6f2a375'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e594934db447063ce886b35c2e3ea0c3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/63b313292ecb948800fb1bebaef690b3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/73d2088a4754f9a3b46db81c3a12ca42'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/752ff3769123dd6f733dd1a0fd139698'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8e82406ccf2abef3600b5c63db1830ca'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/0bc494cbfc5dab3fbea588a6a7cc0cdb'>genome browser</a>", "description": "genome browser"}, {"uid": "timelyportfolio_5c8c25d957ea26a56a840fe043ad02df", "created_at": "2016-04-25T22:30:45Z", "updated_at": "2016-04-26T03:26:45Z", "api": ["d3.select", "d3.geo.path"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "topogram experiments"}, {"uid": "uptownnickbrown_fe8c1e55474262b5c911a94f6a4ddc53", "created_at": "2016-04-23T16:22:38Z", "updated_at": "2016-04-23T16:22:38Z", "api": ["d3.layout.tree", "d3.svg.bracketDiagonal", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/a7620d9cede7a438442c7c38cbee604d'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/8d8799663837823d58113e0a888c3d58'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/20dc10aba69aaad411443c550706f3f7'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/3ed54fcd445baf031a09f7f55fd5f521'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2fffef82c66cf73d624cd77af84b10af'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/7f1185acb04135c30553f05e034c97c3'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/df96fd6607f39cc8f646b2eb3a23589a'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/5e8b1dae3cc40b437112f387b3ed6ed4'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2cbc64340199b8835e0dd9a5d05825fa'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/9570495318793c2a31c0ec6e8f3f2405'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/eaca021463c16f7103a67bd69f64debe'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2f0c412a84ef08eda232a139e2593f4c'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/938b1c9daefa1be01bc6218366c04f38'>exploring-trees</a>", "description": "exploring-trees"}, {"uid": "uptownnickbrown_938b1c9daefa1be01bc6218366c04f38", "created_at": "2016-04-23T16:17:09Z", "updated_at": "2016-04-23T16:17:09Z", "api": ["d3.layout.tree", "d3.svg.bracketDiagonal", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/a7620d9cede7a438442c7c38cbee604d'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/8d8799663837823d58113e0a888c3d58'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/20dc10aba69aaad411443c550706f3f7'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/3ed54fcd445baf031a09f7f55fd5f521'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2fffef82c66cf73d624cd77af84b10af'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/7f1185acb04135c30553f05e034c97c3'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/df96fd6607f39cc8f646b2eb3a23589a'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/5e8b1dae3cc40b437112f387b3ed6ed4'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2cbc64340199b8835e0dd9a5d05825fa'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/9570495318793c2a31c0ec6e8f3f2405'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/eaca021463c16f7103a67bd69f64debe'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2f0c412a84ef08eda232a139e2593f4c'>exploring-trees</a>", "description": "exploring-trees"}, {"uid": "uptownnickbrown_2f0c412a84ef08eda232a139e2593f4c", "created_at": "2016-04-23T16:16:53Z", "updated_at": "2016-04-23T16:16:53Z", "api": ["d3.layout.tree", "d3.svg.bracketDiagonal", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/a7620d9cede7a438442c7c38cbee604d'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/8d8799663837823d58113e0a888c3d58'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/20dc10aba69aaad411443c550706f3f7'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/3ed54fcd445baf031a09f7f55fd5f521'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2fffef82c66cf73d624cd77af84b10af'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/7f1185acb04135c30553f05e034c97c3'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/df96fd6607f39cc8f646b2eb3a23589a'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/5e8b1dae3cc40b437112f387b3ed6ed4'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2cbc64340199b8835e0dd9a5d05825fa'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/9570495318793c2a31c0ec6e8f3f2405'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/eaca021463c16f7103a67bd69f64debe'>exploring-trees</a>", "description": "exploring-trees"}, {"uid": "uptownnickbrown_eaca021463c16f7103a67bd69f64debe", "created_at": "2016-04-23T16:05:27Z", "updated_at": "2016-04-23T16:05:27Z", "api": ["d3.layout.tree", "d3.svg.bracketDiagonal", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/a7620d9cede7a438442c7c38cbee604d'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/8d8799663837823d58113e0a888c3d58'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/20dc10aba69aaad411443c550706f3f7'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/3ed54fcd445baf031a09f7f55fd5f521'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2fffef82c66cf73d624cd77af84b10af'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/7f1185acb04135c30553f05e034c97c3'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/df96fd6607f39cc8f646b2eb3a23589a'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/5e8b1dae3cc40b437112f387b3ed6ed4'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2cbc64340199b8835e0dd9a5d05825fa'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/9570495318793c2a31c0ec6e8f3f2405'>exploring-trees</a>", "description": "exploring-trees"}, {"uid": "uptownnickbrown_9570495318793c2a31c0ec6e8f3f2405", "created_at": "2016-04-23T15:59:13Z", "updated_at": "2016-04-23T15:59:13Z", "api": ["d3.layout.tree", "d3.svg.bracketDiagonal", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/a7620d9cede7a438442c7c38cbee604d'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/8d8799663837823d58113e0a888c3d58'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/20dc10aba69aaad411443c550706f3f7'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/3ed54fcd445baf031a09f7f55fd5f521'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2fffef82c66cf73d624cd77af84b10af'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/7f1185acb04135c30553f05e034c97c3'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/df96fd6607f39cc8f646b2eb3a23589a'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/5e8b1dae3cc40b437112f387b3ed6ed4'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2cbc64340199b8835e0dd9a5d05825fa'>exploring-trees</a>", "description": "exploring-trees"}, {"uid": "uptownnickbrown_2cbc64340199b8835e0dd9a5d05825fa", "created_at": "2016-04-23T15:55:32Z", "updated_at": "2016-04-23T15:55:32Z", "api": ["d3.layout.tree", "d3.svg.bracketDiagonal", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/a7620d9cede7a438442c7c38cbee604d'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/8d8799663837823d58113e0a888c3d58'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/20dc10aba69aaad411443c550706f3f7'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/3ed54fcd445baf031a09f7f55fd5f521'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2fffef82c66cf73d624cd77af84b10af'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/7f1185acb04135c30553f05e034c97c3'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/df96fd6607f39cc8f646b2eb3a23589a'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/5e8b1dae3cc40b437112f387b3ed6ed4'>exploring-trees</a>", "description": "exploring-trees"}, {"uid": "uptownnickbrown_5e8b1dae3cc40b437112f387b3ed6ed4", "created_at": "2016-04-23T15:55:04Z", "updated_at": "2016-04-23T15:55:04Z", "api": ["d3.layout.tree", "d3.svg.bracketDiagonal", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/a7620d9cede7a438442c7c38cbee604d'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/8d8799663837823d58113e0a888c3d58'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/20dc10aba69aaad411443c550706f3f7'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/3ed54fcd445baf031a09f7f55fd5f521'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2fffef82c66cf73d624cd77af84b10af'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/7f1185acb04135c30553f05e034c97c3'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/df96fd6607f39cc8f646b2eb3a23589a'>exploring-trees</a>", "description": "exploring-trees"}, {"uid": "uptownnickbrown_df96fd6607f39cc8f646b2eb3a23589a", "created_at": "2016-04-23T15:26:24Z", "updated_at": "2016-04-23T15:26:24Z", "api": ["d3.layout.tree", "d3.svg.bracketDiagonal", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/a7620d9cede7a438442c7c38cbee604d'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/8d8799663837823d58113e0a888c3d58'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/20dc10aba69aaad411443c550706f3f7'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/3ed54fcd445baf031a09f7f55fd5f521'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2fffef82c66cf73d624cd77af84b10af'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/7f1185acb04135c30553f05e034c97c3'>exploring-trees</a>", "description": "exploring-trees"}, {"uid": "uptownnickbrown_7f1185acb04135c30553f05e034c97c3", "created_at": "2016-04-23T15:22:41Z", "updated_at": "2016-04-23T15:22:41Z", "api": ["d3.layout.tree", "d3.svg.bracketDiagonal", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/a7620d9cede7a438442c7c38cbee604d'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/8d8799663837823d58113e0a888c3d58'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/20dc10aba69aaad411443c550706f3f7'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/3ed54fcd445baf031a09f7f55fd5f521'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/2fffef82c66cf73d624cd77af84b10af'>exploring-trees</a>", "description": "exploring-trees"}, {"uid": "uptownnickbrown_2fffef82c66cf73d624cd77af84b10af", "created_at": "2016-04-23T15:21:55Z", "updated_at": "2016-04-23T15:21:55Z", "api": ["d3.layout.tree", "d3.svg.bracketDiagonal", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/a7620d9cede7a438442c7c38cbee604d'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/8d8799663837823d58113e0a888c3d58'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/20dc10aba69aaad411443c550706f3f7'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/3ed54fcd445baf031a09f7f55fd5f521'>exploring-trees</a>", "description": "exploring-trees"}, {"uid": "uptownnickbrown_3ed54fcd445baf031a09f7f55fd5f521", "created_at": "2016-04-23T15:13:54Z", "updated_at": "2016-04-23T15:13:54Z", "api": ["d3.layout.tree", "d3.svg.rightAngleDiagonal", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/a7620d9cede7a438442c7c38cbee604d'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/8d8799663837823d58113e0a888c3d58'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/20dc10aba69aaad411443c550706f3f7'>exploring-trees</a>", "description": "exploring-trees"}, {"uid": "uptownnickbrown_20dc10aba69aaad411443c550706f3f7", "created_at": "2016-04-23T15:12:56Z", "updated_at": "2016-04-23T15:12:56Z", "api": ["d3.layout.tree", "d3.svg.rightAngleDiagonal", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/a7620d9cede7a438442c7c38cbee604d'>exploring-trees</a>\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/8d8799663837823d58113e0a888c3d58'>exploring-trees</a>", "description": "exploring-trees"}, {"uid": "uptownnickbrown_8d8799663837823d58113e0a888c3d58", "created_at": "2016-04-23T15:10:23Z", "updated_at": "2016-04-23T15:10:23Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/uptownnickbrown/'>uptownnickbrown</a>'s block: <a href='http://bl.ocks.org/uptownnickbrown/a7620d9cede7a438442c7c38cbee604d'>exploring-trees</a>", "description": "exploring-trees"}, {"uid": "uptownnickbrown_a7620d9cede7a438442c7c38cbee604d", "created_at": "2016-04-23T15:09:42Z", "updated_at": "2016-04-23T15:09:42Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "exploring-trees"}, {"uid": "ThanisataS_0e38c911a61196c017ec075d3509606c", "created_at": "2016-04-21T15:32:55Z", "updated_at": "2016-04-21T15:32:55Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range", "d3.format"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/7b750aac02c274ce7be1a2ec65681b6b'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/adf2f396ed6f7a06bcee6e03a6f2a375'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e594934db447063ce886b35c2e3ea0c3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/63b313292ecb948800fb1bebaef690b3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/73d2088a4754f9a3b46db81c3a12ca42'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/752ff3769123dd6f733dd1a0fd139698'>genome browser</a>", "description": "genome browser"}, {"uid": "smith13mr_e2d6c44e9d049860ec655c0c36a05c3b", "created_at": "2016-04-21T15:17:31Z", "updated_at": "2016-04-21T15:17:32Z", "api": ["d3.select", "d3.json", "d3.svg.line", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/1d3dcaefadd4c8f33318fe017cf730d6'>genome browser for final group project</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/d9330fbe7bbf1a68e3d634602eb4d7a2'>fade out</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/ccd1e45b15a98832496b3a3a9f42cff4'>fade out</a>\n\nforked from <a href='http://bl.ocks.org/Ivanhound/'>Ivanhound</a>'s block: <a href='http://bl.ocks.org/Ivanhound/94b930342d0c8b08b307b42be071236a'>fade out and tooltip</a>", "description": "fade out and tooltip"}, {"uid": "smith13mr_f405977b9bf51851a6b86476992c6ce9", "created_at": "2016-04-21T13:32:50Z", "updated_at": "2016-04-26T16:15:20Z", "api": ["d3.select", "d3.json", "d3.svg.line", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/1d3dcaefadd4c8f33318fe017cf730d6'>genome browser for final group project</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/d9330fbe7bbf1a68e3d634602eb4d7a2'>genome browser for final group project</a>", "description": "Two tooltips and fade out"}, {"uid": "ThanisataS_753ede9e1db6becc994307ec086418f5", "created_at": "2016-04-20T19:27:43Z", "updated_at": "2016-04-20T19:27:43Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/8d5ca1a03cb79019687d'>Multi-Series Line Chart</a>", "description": "Multi-Series Line Chart"}, {"uid": "ThanisataS_c43c04a7fe0185ff10e0cc0c8d5ef625", "created_at": "2016-04-20T19:07:47Z", "updated_at": "2016-04-27T23:27:20Z", "api": ["d3.json", "d3.selectAll", "d3.select", "d3.max", "d3.range", "d3.format"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/7b750aac02c274ce7be1a2ec65681b6b'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/adf2f396ed6f7a06bcee6e03a6f2a375'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e594934db447063ce886b35c2e3ea0c3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/63b313292ecb948800fb1bebaef690b3'>genome browser</a>", "description": "genome browser"}, {"uid": "smith13mr_b270ae8c0a39871047e880abc55d50d8", "created_at": "2016-04-20T15:46:51Z", "updated_at": "2016-04-20T15:47:13Z", "api": ["d3.select", "d3.json", "d3.svg.line", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/1d3dcaefadd4c8f33318fe017cf730d6'>genome browser for final group project</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/d9330fbe7bbf1a68e3d634602eb4d7a2'>genome browser for final group project</a>", "description": "genome browser for final group project 2"}, {"uid": "trebor_613b5c124e879dac7a91e99645ea8af6", "created_at": "2016-04-19T20:23:04Z", "updated_at": "2016-04-19T20:23:04Z", "api": ["d3.layout.tree", "d3.svg.diagonal.radial", "d3.select", "d3.json"], "readme": "The `tree` layout implements the Reingold-Tilford algorithm for efficient, tidy arrangement of layered nodes. The depth of nodes is computed by distance from the root, leading to a ragged appearance. Cartesian orientations are also supported. Implementation based on work by [Jeff Heer](http://jheer.org/) and [Jason Davies](http://www.jasondavies.com/) using [Buchheim et al.](http://www.springerlink.com/content/u73fyc4tlxp3uwt8/)'s linear-time variant of the Reingold-Tilford algorithm. Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, also courtesy Jeff Heer.\n\nCompare to this [Cartesian layout](/mbostock/4339184).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063550'>Radial Reingold\u2013Tilford Tree</a>", "description": "Radial Reingold\u2013Tilford Tree"}, {"uid": "trebor_488e91d1a339a2011b517a6c0bcc04bf", "created_at": "2016-04-19T20:22:10Z", "updated_at": "2016-04-19T20:22:10Z", "api": ["d3.layout.tree", "d3.svg.diagonal.radial", "d3.select", "d3.json"], "readme": "The `tree` layout implements the Reingold-Tilford algorithm for efficient, tidy arrangement of layered nodes. The depth of nodes is computed by distance from the root, leading to a ragged appearance. Cartesian orientations are also supported. Implementation based on work by [Jeff Heer](http://jheer.org/) and [Jason Davies](http://www.jasondavies.com/) using [Buchheim et al.](http://www.springerlink.com/content/u73fyc4tlxp3uwt8/)'s linear-time variant of the Reingold-Tilford algorithm. Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, also courtesy Jeff Heer.\n\nCompare to this [Cartesian layout](/mbostock/4339184).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063550'>Radial Reingold\u2013Tilford Tree</a>\n\nforked from <a href='http://bl.ocks.org/trebor/'>trebor</a>'s block: <a href='http://bl.ocks.org/trebor/125ccc33f37287371c06b05ce2c04e88'>Radial Reingold\u2013Tilford Tree</a>", "description": "Radial Reingold\u2013Tilford Tree"}, {"uid": "trebor_125ccc33f37287371c06b05ce2c04e88", "created_at": "2016-04-19T20:22:00Z", "updated_at": "2016-04-19T20:22:00Z", "api": ["d3.layout.tree", "d3.svg.diagonal.radial", "d3.select", "d3.json"], "readme": "The `tree` layout implements the Reingold-Tilford algorithm for efficient, tidy arrangement of layered nodes. The depth of nodes is computed by distance from the root, leading to a ragged appearance. Cartesian orientations are also supported. Implementation based on work by [Jeff Heer](http://jheer.org/) and [Jason Davies](http://www.jasondavies.com/) using [Buchheim et al.](http://www.springerlink.com/content/u73fyc4tlxp3uwt8/)'s linear-time variant of the Reingold-Tilford algorithm. Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, also courtesy Jeff Heer.\n\nCompare to this [Cartesian layout](/mbostock/4339184).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063550'>Radial Reingold\u2013Tilford Tree</a>", "description": "Radial Reingold\u2013Tilford Tree"}, {"uid": "thoma2nm_0bd045f314b7745320841a27c0d3cf83", "created_at": "2016-04-19T16:11:51Z", "updated_at": "2016-04-19T16:11:51Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/mcgovemc/'>mcgovemc</a>'s block: <a href='http://bl.ocks.org/mcgovemc/9406077edb5a01d13d02'>genome browser with tool tip ####</a>", "description": "genome browser with tool tip ####"}, {"uid": "Wanagram_54293b9d49ee71ebb19822be746c695d", "created_at": "2016-04-19T15:26:46Z", "updated_at": "2016-04-21T13:33:45Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/mcgovemc/'>mcgovemc</a>'s block: <a href='http://bl.ocks.org/mcgovemc/9406077edb5a01d13d02'>Final Genome Browser</a>", "description": "Final Genome Browser"}, {"uid": "trebor_aa39d10006ea6e09fc4b504b5dac8a67", "created_at": "2016-04-17T03:46:02Z", "updated_at": "2016-04-17T03:46:02Z", "api": ["d3.scale.category10", "d3.range", "d3.layout.force", "d3.select", "d3.interpolate", "d3.geom.quadtree"], "readme": "This variation of a [clustered force layout](/mbostock/1747543) uses an entry transition and careful initialization to minimize distracting jitter as the force simulation converges on a stable layout.\n\nBy default, D3\u2019s [force layout](https://github.com/mbostock/d3/wiki/Force-Layout) randomly initializes node positions. You can prevent this by setting each node\u2019s *x* and *y* properties before starting the layout. In this example, because custom forces cluster nodes by color, most of the initial jitter is caused by the initial random placement overlapping clusters. We can reduce the jitter by initially placing nodes of the same color near other.\n\nThe number of clusters in this example is defined by the variable *m*; the local variable *i* is the node\u2019s cluster number. To initialize clusters in a circle of radius 200px around the canvas center, we can define *x* and *y* like so:\n\n```js\nx: Math.cos(i / m * 2 * Math.PI) * 200 + width / 2 + Math.random(),\ny: Math.sin(i / m * 2 * Math.PI) * 200 + height / 2 + Math.random()\n```\n\nEach node is slightly offset from the corresponding cluster\u2019s center using [Math.random](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random). Without this offset, same-colored nodes would be coincident, which would cause divide-by-zero problems for our custom forces.\n\nThis initialization strategy is arbitrary but effective. Many other approaches would work, such as D3\u2019s [circle-packing layout](/mbostock/7882658), so feel free to experiment! A good strategy is one that is simple to implement, accelerates convergence, and avoids undesirable artifacts on the final layout. For example, a slightly simpler strategy is to initialize each cluster\u2019s *x*-position along a line. However, this causes striations in the final layout.\n\nAs the force layout converges, its internal temperature cools; nodes move more slowly as the layout stabilizes. We can further reduce jitter by delaying the second custom force \u2014\u00a0collision prevention. This is done using a simple transition:\n\n```js\nnode.transition()\n    .duration(750)\n    .delay(function(d, i) { return i * 5; })\n    .attrTween(\"r\", function(d) {\n      var i = d3.interpolate(0, d.radius);\n      return function(t) { return d.radius = i(t); };\n    });\n```\n\nAs the circles expand, the displayed radius (the `\"r\"` attribute) increases along with the internal `radius` data property that is used by the collision detection force.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/7881887'>Clustered Force Layout III</a>", "description": "Clustered Force Layout III"}, {"uid": "wcjohnson11_bb6169062f11ae588946cc3eb56a4619", "created_at": "2016-04-15T20:29:22Z", "updated_at": "2016-04-15T20:29:22Z", "api": ["d3.format", "d3.scale.category20c", "d3.layout.pack", "d3.select", "d3.json"], "readme": "Bubble charts encode data in the area of circles. Although less perceptually-accurate than bar charts, they can pack hundreds of values into a small space. Implementation based on work by [Jeff Heer](http://jheer.org/). Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, also courtesy Jeff Heer.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063269'>Bubble Chart</a>", "description": "Bubble Chart"}, {"uid": "wcjohnson11_04feb3139aa6a857d67f756afa6abda1", "created_at": "2016-04-15T20:28:50Z", "updated_at": "2016-04-15T20:28:50Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "How to use [d3-tip](https://github.com/caged/d3-tip) with d3's [simple bar chart example](http://bl.ocks.org/mbostock/3885304).\n\n\nforked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>", "description": "Using d3-tip to add tooltips to a d3 bar chart"}, {"uid": "wcjohnson11_ee0871fc62aeadddbc6e380ad1580d7c", "created_at": "2016-04-15T20:24:59Z", "updated_at": "2016-04-15T20:25:00Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1093025'>Collapsible Indented Tree</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/fec2e3b85f3801e380c238b53f621274'>Collapsible Indented Tree</a>", "description": "Collapsible Indented Tree"}, {"uid": "thoma2nm_453c5533f983bbfad177468163088438", "created_at": "2016-04-12T13:56:16Z", "updated_at": "2016-04-21T16:12:04Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/Wanagram/'>Wanagram</a>'s block: <a href='http://bl.ocks.org/Wanagram/abdff74d4f8ebf9b3350'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/eaed208d570610a57c24569d33893ddf'>FinalProject workinprogress</a>", "description": "FinalProject workinprogress"}, {"uid": "SpaceActuary_ac6782e9870b4d2dd5435638b38a2802", "created_at": "2016-04-12T12:56:01Z", "updated_at": "2016-04-28T21:39:10Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.scale.category10", "d3.csv", "d3.keys", "d3.extent", "d3.svg.brush", "d3.select", "d3.legend.color"], "readme": "The scatterplot matrix visualizations pairwise correlations for multi-dimensional data; each cell in the matrix is a scatterplot. This example uses Anderson's data of iris flowers on the Gasp\u00e9 Peninsula. Scatterplot matrix design invented by J. A. Hartigan; see also [R](http://www.r-project.org/) and [GGobi](http://www.ggobi.org/). Data on *Iris* flowers collected by Edgar Anderson and published by Ronald Fisher.\n\nThis version includes a legend created using [d3-legend](http://d3-legend.susielu.com/) and highlighting on hover, in addition to brushing.\n\nSee also this simpler [version with brushing](/mbostock/4063663) and static [version without brushing](/mbostock/3213173).\n", "description": "Scatterplot Matrix Brushing"}, {"uid": "thoma2nm_eb62b01b828c26c0f035a4154f9cac38", "created_at": "2016-04-07T14:57:24Z", "updated_at": "2016-04-07T16:08:58Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/mcgovemc/'>mcgovemc</a>'s block: <a href='http://bl.ocks.org/mcgovemc/9406077edb5a01d13d02'>genome browser with tool tip </a>\n\nforked from <a href='http://bl.ocks.org/Wanagram/'>Wanagram</a>'s block: <a href='http://bl.ocks.org/Wanagram/887677acf92b55b3accd739e77c60fe4'>genome browser with tool tip </a>", "description": "genome browser with tool tip "}, {"uid": "surabhishankar_cfdc7036a7edc6f390f724f933d5d9a4", "created_at": "2016-04-06T04:48:55Z", "updated_at": "2016-04-06T05:37:26Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "Visualization Implementation 10"}, {"uid": "surabhishankar_fc8edd027b0929ba622f507d8599c07a", "created_at": "2016-04-06T04:48:55Z", "updated_at": "2016-04-06T04:48:55Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "Visualization Implementation 10"}, {"uid": "Sokrates86_8b4ac02c3870a832cfb5e2420cdf07e8", "created_at": "2016-04-05T18:15:19Z", "updated_at": "2016-04-05T18:15:59Z", "api": ["d3.select", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.svg.line"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/Sokrates86/'>Sokrates86</a>'s block: <a href='http://bl.ocks.org/Sokrates86/1297670a35e6e0841636'>scatterplot-lines-SAINTS</a>\n\nforked from <a href='http://bl.ocks.org/Sokrates86/'>Sokrates86</a>'s block: <a href='http://bl.ocks.org/Sokrates86/e6a1a8b53e87cadd00aa'>alkoholi-kulutus-kuolema</a>", "description": "alkoholi-kulutus-kuolema2"}, {"uid": "thoma2nm_b4aea3cab7fb1652d1dd5470518ae5ec", "created_at": "2016-04-05T16:03:24Z", "updated_at": "2016-04-05T16:03:35Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/mcgovemc/'>mcgovemc</a>'s block: <a href='http://bl.ocks.org/mcgovemc/9406077edb5a01d13d02'>genome browser with tool tip </a>", "description": "Final Project"}, {"uid": "Wanagram_887677acf92b55b3accd739e77c60fe4", "created_at": "2016-04-05T16:02:49Z", "updated_at": "2016-04-07T11:21:28Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/mcgovemc/'>mcgovemc</a>'s block: <a href='http://bl.ocks.org/mcgovemc/9406077edb5a01d13d02'>genome browser with tool tip </a>", "description": "genome browser with tool tip "}, {"uid": "smith13mr_1d3dcaefadd4c8f33318fe017cf730d6", "created_at": "2016-04-05T15:02:48Z", "updated_at": "2016-04-20T15:45:14Z", "api": ["d3.select", "d3.json", "d3.svg.line", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser for final group project"}, {"uid": "smith13mr_48c9c5aa01b4cca218a6d637d7cf48eb", "created_at": "2016-04-05T14:48:51Z", "updated_at": "2016-04-05T14:48:52Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/9adf74fb08394082c393d8290c00e843'>genome browser</a>", "description": "genome browser"}, {"uid": "smith13mr_9adf74fb08394082c393d8290c00e843", "created_at": "2016-04-05T14:48:39Z", "updated_at": "2016-04-05T14:48:41Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "srinivashavanur_1d7908cc876b58f70c194b29712bfbc6", "created_at": "2016-04-04T20:33:24Z", "updated_at": "2016-04-04T20:33:26Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.scale.category10", "d3.csv", "d3.keys", "d3.extent", "d3.svg.brush", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/srinivashavanur/'>srinivashavanur</a>'s block: <a href='http://bl.ocks.org/srinivashavanur/59c67178982d192c79ddacff46388995'>Visual Implementation 10</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/2db1fae19be3602e539a9b7fef2f8507'>Visual Implementation 10</a>", "description": "Visual Implementation 10"}, {"uid": "srinivashavanur_59c67178982d192c79ddacff46388995", "created_at": "2016-04-04T19:02:48Z", "updated_at": "2016-04-04T21:07:57Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.scale.category10", "d3.csv", "d3.keys", "d3.extent", "d3.svg.brush", "d3.select"], "readme": "---------------------------------------------------\nName: Srinivas Havanur\n \nAssignment: CS 725 - VI10 submission\n \nCourse: Information Visualization\n \nSemester: Spring 2016\n\n---------------------------------------------------\n\nDescription: The graph shown above is the scatterplot matrix which is mainly used to determine the linear correlation between multiple attributes. Here four different attributes are used to determine correlation. They are Passing Attempts, Passing TD, Rushing Attempts, Rushing TD. Color coding is done based on 3 grouping conferences Big Five, Group of Five, Independent. Along with this, linked highlighting is implemented to compare the values for different attributes. \n\n\n---------------------------------------------------\n\nDesign Choices made:\n\n1. Initially, I thought of developing different scatterplots to compare the values using linked highlighting. I rejected this because, there are lot of rework involved to implement this type of visualization.\n\n2. Second, I thought to implement small multiples to generate scatterplots, this would result into too many graphs so I rejected this.\n\n3. Third, I wanted to implement detail on demand scatterplot but this was already implemented in the last assignment and hence rejected this design too.\n\n---------------------------------------------------", "description": "Visual Implementation 10 (Scatterplot matrix with Linked Highlighting)"}, {"uid": "Wanagram_ef2a6485013f23fc0319106d2858888c", "created_at": "2016-04-03T19:36:45Z", "updated_at": "2016-04-03T20:28:09Z", "api": ["d3.select", "d3.json"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "Amino Chain"}, {"uid": "surabhishankar_8ad522c1f98b2e64ea435da61b8ba46a", "created_at": "2016-03-30T15:58:55Z", "updated_at": "2016-03-31T00:00:08Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.scale.ordinal", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/99cd6bb8749e8be95fdaaeb7f40368f3'>fresh block</a>", "description": "Visualization Implementation 9"}, {"uid": "surabhishankar_ce5285e8e144dff4d7d8f1fd8e044fb6", "created_at": "2016-03-30T07:22:15Z", "updated_at": "2016-03-30T15:45:14Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.scale.ordinal", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "Surbhi Shankar\n01012632\n\nSelection and highlighing enhances the view and makes it easier for the viewer to view the information. Although there is a bit of animation in this scatterplot, it is more effective because of the changing of size and highlighting players belonging to one particular kind of Conference. If we want information about one single Conference, then this scatterplot is a good choice. I have retained the different sizes of the circles (based on varying Rushing TD values) initially and after the animation. I chose this graph for highligting and animating because there are different sizes of circles already based on Rushing TD values and I wanted to see if it gets better with highlighting the circles with respect to particular Conference.\nAlso, it gives some information about the Player when we hover over the circles which is helpful.\n\nReferences:\n\nhttps://bost.ocks.org/mike/\n\nhttp://bl.ocks.org/weiglemc/bdc0474429e6567bc320\n\nhttp://bl.ocks.org/Caged/6476579\n\nhttp://bl.ocks.org/WilliamQLiu/bd12f73d0b79d70bfbae\n\nhttps://github.com/mbostock/d3/wiki/Gallery", "description": "Visualization Implementation 9"}, {"uid": "zanarmstrong_884bb566c84775d92b3d", "created_at": "2016-03-26T05:35:48Z", "updated_at": "2016-03-26T06:50:33Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.brush", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.min", "d3.max"], "readme": "Thank you to <a href='http://bl.ocks.org/mbostock/'>mbostock</a> for his block: <a href='http://bl.ocks.org/mbostock/1667367'>Focus+Context via Brushing</a>\n\nThis was forked and adapted from that starting point. ", "description": "Focus+Context via Brushing"}, {"uid": "SpaceActuary_8da10a351057cd76d2e8", "created_at": "2016-03-25T18:51:03Z", "updated_at": "2016-03-28T13:40:38Z", "api": ["d3.merge", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.select", "d3.svg.line", "d3.extent"], "readme": "\n\nforked from <a href='http://bl.ocks.org/SpaceActuary/'>SpaceActuary</a>'s block: <a href='http://bl.ocks.org/SpaceActuary/29c2c89bcdf66c2553c2'>Bar Chart Transitions - Positive to Negative</a>\n\nforked from <a href='http://bl.ocks.org/SpaceActuary/'>SpaceActuary</a>'s block: <a href='http://bl.ocks.org/SpaceActuary/4c0c9844596a2d00938a'>Trapezoid Charts</a>\n\nforked from <a href='http://bl.ocks.org/SpaceActuary/'>SpaceActuary</a>'s block: <a href='http://bl.ocks.org/SpaceActuary/54181ad2cb45d7e41ac8'>Trapezoid Charts 2</a>\n\nforked from <a href='http://bl.ocks.org/SpaceActuary/'>SpaceActuary</a>'s block: <a href='http://bl.ocks.org/SpaceActuary/b408e03229958635c43b'>Bugle Charts</a>", "description": "Bugle Charts"}, {"uid": "SpaceActuary_b408e03229958635c43b", "created_at": "2016-03-25T03:28:23Z", "updated_at": "2016-03-28T20:46:49Z", "api": ["d3.merge", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.select", "d3.svg.line", "d3.extent"], "readme": "\n\nforked from <a href='http://bl.ocks.org/SpaceActuary/'>SpaceActuary</a>'s block: <a href='http://bl.ocks.org/SpaceActuary/29c2c89bcdf66c2553c2'>Bar Chart Transitions - Positive to Negative</a>\n\nforked from <a href='http://bl.ocks.org/SpaceActuary/'>SpaceActuary</a>'s block: <a href='http://bl.ocks.org/SpaceActuary/4c0c9844596a2d00938a'>Trapezoid Charts</a>\n\nforked from <a href='http://bl.ocks.org/SpaceActuary/'>SpaceActuary</a>'s block: <a href='http://bl.ocks.org/SpaceActuary/54181ad2cb45d7e41ac8'>Trapezoid Charts 2</a>", "description": "Bugle Charts"}, {"uid": "zaccagbj_e8f43e594fabb3d6c555", "created_at": "2016-03-24T14:25:26Z", "updated_at": "2016-03-28T19:27:11Z", "api": ["d3.select", "d3.json", "d3.max", "d3.tip"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/f494728af00496ea1aa4'>newer work on genome thing</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/4d76ddafa3682bbcae37'>again newer work on genome thing</a>", "description": "future work on genome stuff"}, {"uid": "surabhishankar_51dd65b995b7c171c564", "created_at": "2016-03-23T06:14:45Z", "updated_at": "2016-03-30T06:03:54Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.scale.ordinal", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "Surbhi Shankar\n01012632\n\na. There are no color restrictions here and hence I chose a set of eye pleasing colors to represent the five different conferences. \n\nb. Here we have to represent five different conferences with five different colors. For this we require minimum of five bins. Colorblind safe and photocopy safe colors limit the number of bins and hence it is not possible to represent this graph with colorblind safe or photocopy safe version.\n\nReferences:\n\nhttp://bl.ocks.org/weiglemc/bdc0474429e6567bc320\n\nhttp://bl.ocks.org/enjalot/raw/211bd42857358a60a936/\n\nhttp://blockbuilder.org/\n\nhttps://bost.ocks.org/mike", "description": "VI8 - Solution to Q2"}, {"uid": "yesoreyeram_c1b07998add14ffc9d03", "created_at": "2016-03-22T11:08:17Z", "updated_at": "2016-03-22T11:08:17Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a simple d3.js graph used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at providing some exposure to some d3.js functions and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "description": "Simple d3.js Graph"}, {"uid": "zaccagbj_4d76ddafa3682bbcae37", "created_at": "2016-03-21T20:13:27Z", "updated_at": "2016-03-24T14:15:30Z", "api": ["d3.json", "d3.tip", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/f494728af00496ea1aa4'>newer work on genome thing</a>", "description": "again newer work on genome thing"}, {"uid": "tomshanley_ea3134a8f64680a1a586", "created_at": "2016-03-21T00:24:10Z", "updated_at": "2016-03-21T00:24:10Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.json", "d3.behavior.drag", "d3.selectAll", "d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest"], "readme": "An adaptation of the Sankey diagram to show traceability of project outputs through to benefits. Double clicking on a node shows the links up and down the model.\n\nWe adapted the sankey.js file so that node heights weren't determined by the number and size of incoming/outgoing links, and aligned the ends of the links to the middle of the nodes.\n\nThanks to Simon Titheridge!\n\nforked from <a href='http://bl.ocks.org/tomshanley/'>tomshanley</a>'s block: <a href='http://bl.ocks.org/tomshanley/11277583'>Sankey with highlighting by doubleclick</a>", "description": "Sankey with highlighting by doubleclick"}, {"uid": "SpaceActuary_795d614b4b298e32131e", "created_at": "2016-03-18T20:40:09Z", "updated_at": "2016-04-26T17:21:43Z", "api": ["d3.geo.albersUsa", "d3.scale.sqrt", "d3.layout.force", "d3.select", "d3.geo.path", "d3.max", "d3.values", "d3.scale.linear", "d3.map", "d3.sum", "d3.legend.color", "d3.geom.quadtree", "d3.selectAll"], "readme": "This is not a true Demers cartogram; it lacks links between adjacent features. Instead of trying to preserve connectedness, this pseudo-cartogram tries to preserve locality, putting each square as close as possible to its origin without overlapping.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4055889'>Pseudo-Demers Cartogram</a>\n\nforked from <a href='http://bl.ocks.org/SpaceActuary/'>SpaceActuary</a>'s block: <a href='http://bl.ocks.org/SpaceActuary/9a92db9794c21d576087'>Pseudo-Demers Cartogram</a>", "description": "Switchable Cartograms"}, {"uid": "smith13mr_782707991344072416e5", "created_at": "2016-03-17T17:21:48Z", "updated_at": "2016-04-12T16:10:47Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/4742802e9cf761912270'>genome browser 2 with numbers</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/9747494f9437c0567eed'>genome browser 4 with numbers</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/5085fcdd086cb5174867'>genome browser 4 with numbers</a>", "description": "genome browser 4 with numbers and tooltip"}, {"uid": "zaccagbj_f494728af00496ea1aa4", "created_at": "2016-03-17T02:33:45Z", "updated_at": "2016-03-21T20:13:24Z", "api": ["d3.json", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "newer work on genome thing"}, {"uid": "zaccagbj_4fda3b86b4774f796774", "created_at": "2016-03-17T02:33:45Z", "updated_at": "2016-03-17T02:33:46Z", "api": ["d3.json", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "fresh block"}, {"uid": "sumanthpopuri567_ab11246f4fab33d762f8", "created_at": "2016-03-16T02:53:47Z", "updated_at": "2016-03-16T03:35:59Z", "api": ["d3.scale.category20", "d3.layout.force", "d3.select", "d3.json"], "readme": "Insight gained from the graph:\n\nFrom this node-link diagram we can know the adjacency of the states.\nStates are divided into regions and the south atlantic region has the highest number of states.\nNodes represents the states and links refers to adjacency.", "description": "VI7 Node-link diagram"}, {"uid": "smith13mr_5085fcdd086cb5174867", "created_at": "2016-03-15T15:20:47Z", "updated_at": "2016-03-17T17:21:44Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/4742802e9cf761912270'>genome browser 2 with numbers</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/9747494f9437c0567eed'>genome browser 4 with numbers</a>", "description": "genome browser 4 with numbers"}, {"uid": "smith13mr_d3bbaade0db970ed2443", "created_at": "2016-03-15T15:02:54Z", "updated_at": "2016-03-15T15:02:54Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser with name numbers</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/a5df54f0c34518424b00'>genome browser with name numbers</a>", "description": "genome browser with name numbers"}, {"uid": "smith13mr_a5df54f0c34518424b00", "created_at": "2016-03-15T14:55:11Z", "updated_at": "2016-03-15T14:55:11Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser with name numbers</a>", "description": "genome browser with name numbers"}, {"uid": "smith13mr_9747494f9437c0567eed", "created_at": "2016-03-15T13:01:20Z", "updated_at": "2016-03-15T15:20:16Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/4742802e9cf761912270'>genome browser 2 with numbers</a>", "description": "genome browser 2 with numbers"}, {"uid": "srinivashavanur_ab441b0f43779f5ea140", "created_at": "2016-03-15T02:35:34Z", "updated_at": "2016-04-03T01:38:55Z", "api": ["d3.select", "d3.entries", "d3.scale.category10", "d3.layout.force", "d3.json"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "Visual Implementation (Node Link View)"}, {"uid": "zaccagbj_3111e0505e7fa967d33a", "created_at": "2016-03-14T23:30:13Z", "updated_at": "2016-03-14T23:30:23Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/6c6dd78bb6502e14b2f2'>Genome Thing</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/62d611e1819e283ce27b'>Genome Thing</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/e0d6f78a0b9549aaa42a'>Genome Thing</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/ec6658b8b875860a6992'>Genome Thing</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8a7380e8d510b7b43891'>Genome Thing</a>", "description": "Genome Thing"}, {"uid": "srinivashavanur_155d3602465fe8f298d7", "created_at": "2016-03-14T03:33:34Z", "updated_at": "2016-04-03T01:39:12Z", "api": ["d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.scale.category20", "d3.range", "d3.json", "d3.ascending", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "Visual Impementation 7 (Matrix View)"}, {"uid": "smilanko_3dd7cd74edaef1d48c46", "created_at": "2016-03-11T19:39:58Z", "updated_at": "2016-03-14T11:28:21Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.scale.category10", "d3.range", "d3.select", "d3.json", "d3.ascending", "d3.selectAll"], "readme": "what we can see with this chart is the different groups that are created by the matrix of different states. Compared to the node link diagram chart, this one shows a more granular grouping, and is much easier to follow. What is also interesting about this visualization, is that based on a particular order of our elements,w e are able to see trends much easier, especially when they re-arrange into their correct positions.", "description": "wk_7_v2"}, {"uid": "smilanko_a4dfe2b721602a7bc840", "created_at": "2016-03-10T22:13:09Z", "updated_at": "2016-03-14T11:30:13Z", "api": ["d3.scale.category20", "d3.layout.force", "d3.select"], "readme": "what we can see with this chart, is that some states are more interconnected than others. By being able to stretch and pull out different elements, we can also see which ones are tied to what element directly. This might be very useful when we are trying to draw out some path of travel, or coorelation between the interconnected states.", "description": "wk7"}, {"uid": "veltman_ee5c340934f3d7a659b6", "created_at": "2016-03-06T07:25:18Z", "updated_at": "2016-03-06T07:25:20Z", "api": ["d3.geo.transverseMercator", "d3.geo.path", "d3.select", "d3.json", "d3.values", "d3.geo.bounds", "d3.nest", "d3.range"], "readme": "Automatically adding some extra context (major cities and interstates) to a county map with [MapZen vector tiles](https://mapzen.com/projects/vector-tiles/).\n", "description": "Locator map + vector tiles"}, {"uid": "sjengle_4b850137b80c6972ab0f", "created_at": "2016-03-04T21:17:16Z", "updated_at": "2016-03-04T21:43:57Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.scale.category10", "d3.csv", "d3.keys", "d3.extent", "d3.select"], "readme": "The scatterplot matrix visualizations pairwise correlations for multi-dimensional data; each cell in the matrix is a scatterplot. This example uses Anderson's data of iris flowers on the Gasp\u00e9 Peninsula. Scatterplot matrix design invented by J. A. Hartigan; see also [R](http://www.r-project.org/) and [GGobi](http://www.ggobi.org/). Data on *Iris* flowers collected by Edgar Anderson and published by Ronald Fisher.\n\nSee also this [version with brushing](/mbostock/4063663).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3213173'>Scatterplot Matrix</a>", "description": "Scatterplot Matrix"}, {"uid": "smith13mr_a39130b6b9dca51f3bed", "created_at": "2016-03-03T15:34:12Z", "updated_at": "2016-03-03T15:56:22Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser 3"}, {"uid": "zaccagbj_56469f146ad6064b2664", "created_at": "2016-03-03T15:28:19Z", "updated_at": "2016-03-03T15:59:05Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "zaccagbj_e0d6f78a0b9549aaa42a", "created_at": "2016-03-03T15:27:40Z", "updated_at": "2016-03-03T15:27:42Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/6c6dd78bb6502e14b2f2'>Genome Thing</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/62d611e1819e283ce27b'>Genome Thing</a>", "description": "Genome Thing"}, {"uid": "smith13mr_87b6de4d11efdf6bc1e9", "created_at": "2016-03-03T15:26:54Z", "updated_at": "2016-03-03T15:27:02Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser 3"}, {"uid": "wwymak_f8d20b9c95510ff7a9ec", "created_at": "2016-02-25T20:36:24Z", "updated_at": "2016-03-13T18:48:00Z", "api": ["d3.select", "d3.geo.mercator", "d3.geo.centroid", "d3.geo.path", "d3.geom.quadtree", "d3.json", "d3.layout.force"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "gridmapTest"}, {"uid": "sliu72_bb84f01ac9ce7dae7281", "created_at": "2016-02-25T19:33:21Z", "updated_at": "2016-02-25T19:33:21Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/sliu72/'>sliu72</a>'s block: <a href='http://bl.ocks.org/sliu72/f80a387b1ce45adfbe08'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/sliu72/'>sliu72</a>'s block: <a href='http://bl.ocks.org/sliu72/ca351b22bc0778e97d79'>Multi-Series Line Chart</a>", "description": "Multi-Series Line Chart"}, {"uid": "smith13mr_4742802e9cf761912270", "created_at": "2016-02-25T15:37:27Z", "updated_at": "2016-03-03T15:26:52Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser 2 with numbers"}, {"uid": "smith13mr_184a5fd71b2b4e1765fc", "created_at": "2016-02-25T15:37:18Z", "updated_at": "2016-02-25T15:37:18Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/Smith5mr/'>Smith5mr</a>'s block: <a href='http://bl.ocks.org/Smith5mr/5d0b0777aa681f849090'>genome browser</a>", "description": "genome browser"}, {"uid": "thoma2nm_f68bfd3712dd3aa478ff", "created_at": "2016-02-25T15:32:59Z", "updated_at": "2016-03-01T17:15:46Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "zaccagbj_6c6dd78bb6502e14b2f2", "created_at": "2016-02-25T15:29:51Z", "updated_at": "2016-03-01T17:16:59Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "zaccagbj_8c033ffa3efd0a81b681", "created_at": "2016-02-25T15:29:33Z", "updated_at": "2016-02-25T15:29:34Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "Wanagram_abdff74d4f8ebf9b3350", "created_at": "2016-02-25T15:28:09Z", "updated_at": "2016-04-12T16:02:21Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "zaccagbj_4f5e642afa8a604b0d2b", "created_at": "2016-02-23T16:10:20Z", "updated_at": "2016-02-23T17:25:55Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "zaccagbj_72570438c3c733a43c7b", "created_at": "2016-02-23T16:10:11Z", "updated_at": "2016-02-23T16:10:12Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "zaccagbj_23a0cda44c83977d7cd5", "created_at": "2016-02-23T16:10:04Z", "updated_at": "2016-02-23T16:10:04Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "thoma2nm_09f906020e025aa72250", "created_at": "2016-02-23T16:09:59Z", "updated_at": "2016-02-23T17:17:42Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "zaccagbj_3ec06ca5a0c4696e38c0", "created_at": "2016-02-23T16:09:50Z", "updated_at": "2016-02-23T16:09:51Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "zaccagbj_e5080a05d52b2d5d32cb", "created_at": "2016-02-23T16:09:39Z", "updated_at": "2016-02-23T16:09:39Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "Smith5mr_5d0b0777aa681f849090", "created_at": "2016-02-23T16:09:03Z", "updated_at": "2016-02-23T16:49:00Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "zaccagbj_62189d919e16b172d8a4", "created_at": "2016-02-23T16:08:57Z", "updated_at": "2016-02-23T16:08:58Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "Smith5mr_c596a667189aa23e6e3b", "created_at": "2016-02-23T16:08:50Z", "updated_at": "2016-02-23T16:08:51Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "zaccagbj_1045b02280a9fe381a57", "created_at": "2016-02-23T16:08:48Z", "updated_at": "2016-02-23T16:08:48Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "Smith5mr_942bbaeed7c55e02b70e", "created_at": "2016-02-23T16:08:39Z", "updated_at": "2016-02-23T16:08:39Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "description": "genome browser"}, {"uid": "Smith5mr_c063cebab4dc0d0456a5", "created_at": "2016-02-23T15:35:58Z", "updated_at": "2016-02-23T15:35:58Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "scale bar 2/23"}, {"uid": "Wanagram_a4a5dbb278ba56f94d98", "created_at": "2016-02-18T16:32:40Z", "updated_at": "2016-02-18T17:13:49Z", "api": ["d3.scale.linear", "d3.select", "d3.svg.axis"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "Ruler"}, {"uid": "sumanthpopuri567_97b5e526fc8a98f9ecfc", "created_at": "2016-02-17T06:38:25Z", "updated_at": "2016-02-17T13:30:34Z", "api": ["d3.csv", "d3.scale.linear", "d3.min", "d3.max", "d3.select", "d3.svg.axis", "d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie"], "readme": "Name: Sumanth Nag Popuri\nCourse: Information Visualization\n```\nExpalanation:\n1. Bubble chart\n  The bubble chart shows the comparision between Participants and Number Of Medals\n  of 13 countries in 2012 olympics.\nChannels used:\nPosition on common scale to show magnitude: \nThe position to the right represents the more number of participants and the\nhigher position shows the higher number of medals won \nspatial region to show identity: size represent the each country\ncolor hue to shoe identity: color  represents the country \n\ndata source: \nhttp://data.london.gov.uk/dataset/alternative-olympics-2012-medal-table\nmarks: each country is represented by a bubble.\nbubble chart generated with tableau:\n```\n![T image](http://s18.postimg.org/bihqn3a1l/part1.png \"T image\")\n```\nPie chart:\nthis pie chart shows the numer of participants from each country \nin 2012 olympics.from the graph we can see china has the highest number\nof participants than other countries listed as it occupies large area.\nchannels that are used:\nArea to show magnitude: the area occupied by each country in the chart \nshows the number of participants from that country.\nColor hue to show identity: each color represents a different country.\nmarks: Area.\nData source:\nhttp://data.london.gov.uk/dataset/alternative-olympics-2012-medal-table\ntutorial: https://bl.ocks.org/mbostock/3887235\nThe pie chart created with tableau:\n```\n![T image](http://s10.postimg.org/v9dlgk3wp/part2.png \"T image\")\n", "description": "VI4 implementation"}, {"uid": "surabhishankar_3139b91d478f35c3b0aa", "created_at": "2016-02-17T05:28:26Z", "updated_at": "2016-02-17T06:45:22Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "VI4_1"}, {"uid": "surabhishankar_4e5eb0b3bf303f2d9909", "created_at": "2016-02-17T03:02:06Z", "updated_at": "2016-02-17T05:12:34Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.scale.category10", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/surabhishankar/'>surabhishankar</a>'s block: <a href='http://bl.ocks.org/surabhishankar/b6a9c376b80a6710f176'>V7666</a>", "description": "V7666"}, {"uid": "surabhishankar_b6a9c376b80a6710f176", "created_at": "2016-02-17T02:52:53Z", "updated_at": "2016-02-17T02:52:53Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.scale.category20", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "V7666"}, {"uid": "srinivashavanur_04ac30607fd17310887a", "created_at": "2016-02-15T23:07:35Z", "updated_at": "2016-04-03T01:37:00Z", "api": ["d3.select", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.tsv", "d3.extent", "d3.scale.category20", "d3.layout.pack"], "readme": "<b>Problem Statement:\n\nPart 1 - d3</b>\n\nUse d3 to create charts that demonstrate the following channel types and channels:\n\nmagnitude as position on a common scale\nmagnitude as area\nidentity as color hue\nidentity as spatial region\nThis may be done in separate charts or some of these may be combined, as long as the separability property is maintained.\n\nYou may use whatever data you wish (and may use different data for each chart).  Be sure to indicate the data source (preferably with a URL). \n\nYou may base your d3 charts off of examples, but you must indicate the URL of the example and make appropriate changes.\n\n<b>Part 2 - R or Tableau</b>\n\nRe-create your d3 charts in Part 1 with either R or Tableau.  Your choice.\n\n---------------------------------------------------\nName: Srinivas Havanur\n \nAssignment: CS 725 - VI4 submission\n \nCourse: Information Visualization\n \nSemester: Spring 2016\n \n\n\n---------------------------------------------------\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nData is obtained from the medicare website cms.gov\n\n(https://www.cms.gov/Research-Statistics-Data-and-Systems/Statistics-Trends-and-Reports/Medicare-Provider-Charge-Data/Physician-and-Other-Supplier2012.html)\n\nSince the dataset is huge. I have made use of portion of the dataset to represent it in the graph.\n\nDiscriminability is achieved in the following way for each of the graphs.\n\n1. From the first graph, individual items or scatter points can be identified just by looking at it. From this graph, one can identify position of a point on a common scale.\n   However, it is difficult to distinguish to which category every point belongs to which is clearly addressed in the second graph.\n\n2. From the second graph, one can easily distinguish the scatter points belonging to every category using suitable color codes.\n    Eg: Correlation between average submitted charge amount and average medicare payment amount is calculated using scatter plot. \n     From the graph, we can identify the points belonging to every state with a color code.\n\n3. From the third graph, one can easily identify the data based on area and category because in the second graph even though we have distinguished it by\n   sizes, sometimes its hard to identify as the size of certain scatter points are close to each other. Hence the bubble chart is suitable.\n   Eg: Average submitted charge amount of every state is identified based on the size and suitable color code as shown.\n\n\nFollowing are the graphs generated using Tableau\n\t\n![scatterplot_magnitude1](https://cloud.githubusercontent.com/assets/17229507/13061760/ef69a110-d407-11e5-9292-4a1798e7ee98.png)\n![scatterplot_2](https://cloud.githubusercontent.com/assets/17229507/13061720/b742c168-d407-11e5-92be-92a9cfb1e62f.png)\n![bubblechart](https://cloud.githubusercontent.com/assets/17229507/13061722/b744bdc4-d407-11e5-95ff-3d3218b7babd.png)", "description": "Channel types and Channels (Visual Implementation 4)"}, {"uid": "sjhavanur_523f886388342eef4205", "created_at": "2016-02-15T07:58:31Z", "updated_at": "2016-02-15T08:02:40Z", "api": ["d3.scale.category20b", "d3.layout.pack", "d3.select", "d3.tsv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "srinivas"}, {"uid": "sjhavanur_8700e7e3362e6317bcad", "created_at": "2016-02-15T07:51:37Z", "updated_at": "2016-02-15T07:51:50Z", "api": ["d3.select", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.tsv", "d3.extent", "d3.scale.category20b", "d3.layout.pack", "d3.map"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/sjhavanur/'>sjhavanur</a>'s block: <a href='http://bl.ocks.org/sjhavanur/2bf284ca648db4f1acfd'>v4</a>\n\nforked from <a href='http://bl.ocks.org/sjhavanur/'>sjhavanur</a>'s block: <a href='http://bl.ocks.org/sjhavanur/d335d1ea06102c47d653'>v4</a>", "description": "t3"}, {"uid": "stelt_1d5ca39bdf5769c4c7b4", "created_at": "2016-02-14T22:08:10Z", "updated_at": "2016-02-18T01:36:10Z", "api": ["d3.layout.cluster", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "A dendrogram is a node-link diagram that places leaf nodes of the tree at the same depth. In this example, the classes (leaf nodes) are aligned on the right edge, with the packages (internal nodes) to the left. Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, courtesy Jeff Heer.\n\nCompare to this [radial layout](/mbostock/4339607).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063570'>Cluster Dendrogram</a>", "description": "Cluster Dendrogram"}, {"uid": "sjhavanur_de7f2382256366cc4eea", "created_at": "2016-02-14T08:48:34Z", "updated_at": "2016-02-15T20:14:26Z", "api": ["d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.scale.category10", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "bar graph"}, {"uid": "sjhavanur_d335d1ea06102c47d653", "created_at": "2016-02-14T05:40:20Z", "updated_at": "2016-02-15T23:03:38Z", "api": ["d3.select", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.tsv", "d3.extent", "d3.scale.category20", "d3.layout.pack"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nData is obtained from the medicare website cms.gov\n\n(https://www.cms.gov/Research-Statistics-Data-and-Systems/Statistics-Trends-and-Reports/Medicare-Provider-Charge-Data/Physician-and-Other-Supplier2012.html)\n\nSince the dataset is huge. I have made use of portion of the dataset to represent it in the graph.\n\nDiscriminability is achieved in the following way for each of the graphs.\n\n1. From the first graph, individual items or scatter points can be identified just by looking at it. From this graph, one can identify position of a point on a common scale.\n   However, it is difficult to distinguish to which category every point belongs to which is clearly addressed in the second graph.\n\n2. From the second graph, one can easily distinguish the scatter points belonging to every category using suitable color codes.\n    Eg: Correlation between average submitted charge amount and average medicare payment amount is calculated using scatter plot. \n     From the graph, we can identify the points belonging to every state with a color code.\n\n3. From the third graph, one can easily identify the data based on area and category because in the second graph even though we have distinguished it by\n   sizes, sometimes its hard to identify as the size of certain scatter points are close to each other. Hence the bubble chart is suitable.\n   Eg: Average submitted charge amount of every state is identified based on the size and suitable color code as shown.\n\t\n![scatterplot_magnitude1](https://cloud.githubusercontent.com/assets/17229507/13061760/ef69a110-d407-11e5-9292-4a1798e7ee98.png)\n![scatterplot_2](https://cloud.githubusercontent.com/assets/17229507/13061720/b742c168-d407-11e5-92be-92a9cfb1e62f.png)\n![bubblechart](https://cloud.githubusercontent.com/assets/17229507/13061722/b744bdc4-d407-11e5-95ff-3d3218b7babd.png)", "description": "v4"}, {"uid": "sjhavanur_2bf284ca648db4f1acfd", "created_at": "2016-02-14T05:39:41Z", "updated_at": "2016-02-14T05:39:41Z", "api": ["d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.select", "d3.tsv", "d3.extent"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "fresh block"}, {"uid": "sjhavanur_e1ad814bfe0c042cd409", "created_at": "2016-02-14T05:39:30Z", "updated_at": "2016-02-14T05:39:30Z", "api": ["d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.select", "d3.tsv", "d3.extent"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/sjhavanur/'>sjhavanur</a>'s block: <a href='http://bl.ocks.org/sjhavanur/f442e33096fc546ae0bc'>vi4</a>", "description": "vi4"}, {"uid": "tacastillo_12ce831c9c85deeaf787", "created_at": "2016-02-12T23:16:08Z", "updated_at": "2016-02-12T23:16:14Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/tacastillo/'>tacastillo</a>'s block: <a href='http://bl.ocks.org/tacastillo/fa5deb2022e829449688'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/tacastillo/'>tacastillo</a>'s block: <a href='http://bl.ocks.org/tacastillo/189bbf2dad71071b9969'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/tacastillo/'>tacastillo</a>'s block: <a href='http://bl.ocks.org/tacastillo/2583342b5b484e70899b'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/tacastillo/'>tacastillo</a>'s block: <a href='http://bl.ocks.org/tacastillo/9da0a8c4e7391243e941'>Multi-Series Line Chart</a>", "description": "Multi-Series Line Chart"}, {"uid": "tacastillo_4c1c511dd9c862ba1eb1", "created_at": "2016-02-12T23:01:01Z", "updated_at": "2016-02-12T23:01:03Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/tacastillo/'>tacastillo</a>'s block: <a href='http://bl.ocks.org/tacastillo/fa5deb2022e829449688'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/tacastillo/'>tacastillo</a>'s block: <a href='http://bl.ocks.org/tacastillo/189bbf2dad71071b9969'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/tacastillo/'>tacastillo</a>'s block: <a href='http://bl.ocks.org/tacastillo/2583342b5b484e70899b'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/tacastillo/'>tacastillo</a>'s block: <a href='http://bl.ocks.org/tacastillo/9da0a8c4e7391243e941'>Multi-Series Line Chart</a>", "description": "Multi-Series Line Chart"}, {"uid": "sliu72_ca351b22bc0778e97d79", "created_at": "2016-02-12T22:50:03Z", "updated_at": "2016-02-19T22:20:34Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/sliu72/'>sliu72</a>'s block: <a href='http://bl.ocks.org/sliu72/f80a387b1ce45adfbe08'>Multi-Series Line Chart</a>", "description": "Multi-Series Line Chart"}, {"uid": "vwrideout_f8fb00797e927eaba27c", "created_at": "2016-02-12T22:38:43Z", "updated_at": "2016-02-12T23:16:21Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/vwrideout/'>vwrideout</a>'s block: <a href='http://bl.ocks.org/vwrideout/a416105e509593928ec5'>Multi-Series Line Chart</a>", "description": "Multi-Series Line Chart"}, {"uid": "ZZSharkUSF_c4d76186287d5fe44636", "created_at": "2016-02-12T22:35:48Z", "updated_at": "2016-02-13T10:48:43Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/ZZSharkUSF/'>ZZSharkUSF</a>'s block: <a href='http://bl.ocks.org/ZZSharkUSF/46122c3abd2ee3acabb8'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/ZZSharkUSF/'>ZZSharkUSF</a>'s block: <a href='http://bl.ocks.org/ZZSharkUSF/70527aca0d1672266971'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/ZZSharkUSF/'>ZZSharkUSF</a>'s block: <a href='http://bl.ocks.org/ZZSharkUSF/d6f21e3971ef4a1dfcfe'>Multi-Series Line Chart</a>", "description": "Multi-Series Line Chart"}, {"uid": "vwrideout_a416105e509593928ec5", "created_at": "2016-02-12T22:30:11Z", "updated_at": "2016-02-12T22:30:11Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>", "description": "Multi-Series Line Chart"}, {"uid": "sliu72_f80a387b1ce45adfbe08", "created_at": "2016-02-12T22:29:55Z", "updated_at": "2016-02-12T22:29:55Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>", "description": "Multi-Series Line Chart"}, {"uid": "tacastillo_9da0a8c4e7391243e941", "created_at": "2016-02-12T19:16:29Z", "updated_at": "2016-02-12T19:16:29Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/tacastillo/'>tacastillo</a>'s block: <a href='http://bl.ocks.org/tacastillo/fa5deb2022e829449688'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/tacastillo/'>tacastillo</a>'s block: <a href='http://bl.ocks.org/tacastillo/189bbf2dad71071b9969'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/tacastillo/'>tacastillo</a>'s block: <a href='http://bl.ocks.org/tacastillo/2583342b5b484e70899b'>Multi-Series Line Chart</a>", "description": "Multi-Series Line Chart"}, {"uid": "zaccagbj_531638895f1f70a88f6c", "created_at": "2016-02-11T16:35:32Z", "updated_at": "2016-02-11T16:35:33Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/533e9ec746874e1a36cd'>Multi-Series Line Chart</a>", "description": "Multi-Series Line Chart"}, {"uid": "Wanagram_202914b557ca3e9204d6", "created_at": "2016-02-11T15:47:15Z", "updated_at": "2016-02-11T16:32:16Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category20", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "Total Deaths"}, {"uid": "thoma2nm_882ceca293eb26143043", "created_at": "2016-02-11T15:47:14Z", "updated_at": "2016-02-11T16:35:56Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "fresh block"}, {"uid": "zaccagbj_533e9ec746874e1a36cd", "created_at": "2016-02-11T15:45:43Z", "updated_at": "2016-02-11T15:45:43Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>", "description": "Multi-Series Line Chart"}, {"uid": "Smith5mr_15f735b977945be0ca2e", "created_at": "2016-02-11T15:45:33Z", "updated_at": "2016-02-11T16:34:51Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>", "description": "Multi-Series Line Chart"}, {"uid": "Smith5mr_46d98cca5d7eca30a072", "created_at": "2016-02-11T15:37:11Z", "updated_at": "2016-02-11T15:37:11Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>", "description": "Multi-Series Line Chart"}, {"uid": "surabhishankar_23e1cbfe765a59d08471", "created_at": "2016-02-10T04:16:27Z", "updated_at": "2016-02-10T17:43:40Z", "api": ["d3.scale.linear", "d3.max", "d3.svg.axis", "d3.select", "d3.range", "d3.keys"], "readme": "Surbhi Shankar\n\n01012632\n\nThree thigs that I learnt through the tutorials:\n\n1. Using \"div\" tag to include two separate codes in a single .html file.\n2. Creating eye pleasing Animations and Transitions using D3. Learning how to do transitions with different shapes and also by changing colors was the best experience.\n3. Plotting a scatterplot by defining X and Y axis.", "description": "Visualization Implementation 3"}, {"uid": "sumanthpopuri567_66b6754a8ae21508c1f4", "created_at": "2016-02-10T02:15:55Z", "updated_at": "2016-02-10T02:32:19Z", "api": ["d3.scale.linear", "d3.max", "d3.svg.axis", "d3.select", "d3.range", "d3.keys"], "readme": "Sumanth Nag Popuri\n```R\nThree things that i have learned working through the tutorials\n1. how to create transitions using D3\n2. creation of animations became easy using D3.\n3. methods such as tween and interpolate are used to update many parts of the visualization if we make changes in one variable.\n```", "description": "VI3"}, {"uid": "timvarga_b2a3d3b33df9690cd69b", "created_at": "2016-02-08T21:48:27Z", "updated_at": "2016-02-10T17:12:18Z", "api": ["d3.nest", "d3.scale.linear", "d3.svg.axis", "d3.scale.ordinal", "d3.scale.pow", "d3.select", "d3.csv", "d3.selectAll"], "readme": "d3 scatterplot example using the Breakfast Cereal Dataset from http://idvbook.com and based on the scatterplot example at http://bl.ocks.org/mbostock/3887118\n\n\nforked from <a href='http://bl.ocks.org/weiglemc/'>weiglemc</a>'s block: <a href='http://bl.ocks.org/weiglemc/6185069'>D3 Scatterplot Example</a>", "description": "Interactive Scatter"}, {"uid": "srinivashavanur_8fa5a1c400398ec54582", "created_at": "2016-02-07T17:21:10Z", "updated_at": "2016-04-03T01:32:14Z", "api": ["d3.select", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.range"], "readme": "<b>Problem Statement:</b>\n\nGenerate a scatter plot and animated transition of an object using D3. Make sure to separate these graphs using the div tag to show complete visualization in blockbuilder.org\n\n---------------------------------------------------\nName: Srinivas Havanur\n \nAssignment: CS 725 - VI3 submission\n \nCourse: Information Visualization\n \nSemester: Spring 2016\n \n\n\n---------------------------------------------------\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nThings that I learn't in D3\n\n1.There was a problem in rendering the two div elements in d3 as the transition graph was giving partial output. Later I learn't how to increase the height of rendering block.\n\t\n\td3.select(self.frameElement).style(\"height\", \"779px\")\n\t\n2.To translate an object from one position to another. D3 has in-built transition() function which can translate either x or y axis based on the value of specific attribute. \n\n3.I also learn't how to control the rotation of an object during its transition using rotate function. The rotate value ranges between 0 to 180.", "description": "Scatter Plot and Animated Transition (Visual Implementation 3)"}, {"uid": "sunnya97_ea4057d2a49e37a655bc", "created_at": "2016-02-05T06:46:11Z", "updated_at": "2016-02-05T06:51:24Z", "api": ["d3.geo.albers", "d3.geo.path", "d3.select", "d3.json"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "fresh block"}, {"uid": "smilanko_e31297aebaf82759ff1a", "created_at": "2016-02-05T01:01:59Z", "updated_at": "2016-02-05T01:01:59Z", "api": ["d3.select", "d3.scale.linear", "d3.max", "d3.format", "d3.svg.axis"], "readme": "Name: Slobodan Milanko\n\n* Below are the three cool things I learned:\n  * When creating transitions, we can chan them by using the end callback function\n  * We can apply scales to our graphs, so that our values do not get too big and fall off the screen\n  * We can use a multi-dimensional array to create data for a scatter plot, where each entry in the array, is its own array of x and y\n  * in D3, we dont have to just grab onto the body, by using the select. We can grab onto the div, by referencing its id for example.\n\nforked from <a href='http://bl.ocks.org/smilanko/'>smilanko</a>'s block: <a href='http://bl.ocks.org/smilanko/e3ed414c647f05828d58'>wk4</a>", "description": "wk4"}, {"uid": "zaccagbj_d70bdcfa5f8a0944a871", "created_at": "2016-02-04T17:13:41Z", "updated_at": "2016-02-04T17:13:41Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/c5d9a583437b19493ba3'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/a7ef0b8473773b3ccda1'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/a2db15a154b360c591c7'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/75878caf6912fe6bfe85'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "zaccagbj_75878caf6912fe6bfe85", "created_at": "2016-02-04T17:12:05Z", "updated_at": "2016-02-04T17:12:05Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/c5d9a583437b19493ba3'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/a7ef0b8473773b3ccda1'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/a2db15a154b360c591c7'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "Smith5mr_13ea59d2d6a615a0f7df", "created_at": "2016-02-04T17:10:37Z", "updated_at": "2016-02-04T17:10:37Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/Smith5mr/'>Smith5mr</a>'s block: <a href='http://bl.ocks.org/Smith5mr/4082de18058c055efe84'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "zaccagbj_a2db15a154b360c591c7", "created_at": "2016-02-04T16:57:32Z", "updated_at": "2016-02-04T16:57:32Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.text", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/c5d9a583437b19493ba3'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/a7ef0b8473773b3ccda1'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "Smith5mr_4082de18058c055efe84", "created_at": "2016-02-04T16:54:08Z", "updated_at": "2016-02-04T16:54:09Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "zaccagbj_a7ef0b8473773b3ccda1", "created_at": "2016-02-04T16:10:25Z", "updated_at": "2016-02-04T16:10:25Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/c5d9a583437b19493ba3'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "Smith5mr_cc65d20c1fda2ddfdc22", "created_at": "2016-02-04T16:02:55Z", "updated_at": "2016-02-04T16:02:56Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/Smith5mr/'>Smith5mr</a>'s block: <a href='http://bl.ocks.org/Smith5mr/1733c62207e0bf614f06'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "thoma2nm_07cbeabf93c7ece31c2d", "created_at": "2016-02-04T16:01:48Z", "updated_at": "2016-02-04T16:01:48Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/5cebc9137ffcd6271071'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/thoma2nm/'>thoma2nm</a>'s block: <a href='http://bl.ocks.org/thoma2nm/59ad8df8112637667982'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "thoma2nm_59ad8df8112637667982", "created_at": "2016-02-04T15:49:29Z", "updated_at": "2016-02-04T16:01:47Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/5cebc9137ffcd6271071'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "Wanagram_3cbdb13afc70c5b23b69", "created_at": "2016-02-04T15:48:33Z", "updated_at": "2016-02-04T15:48:33Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/Wanagram/'>Wanagram</a>'s block: <a href='http://bl.ocks.org/Wanagram/3601e88d5317ab2be0e8'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "Smith5mr_1733c62207e0bf614f06", "created_at": "2016-02-04T15:48:08Z", "updated_at": "2016-02-04T15:48:08Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "zaccagbj_c5d9a583437b19493ba3", "created_at": "2016-02-04T15:48:03Z", "updated_at": "2016-02-04T15:48:04Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "Smith5mr_3b68e9c28545771802a3", "created_at": "2016-02-04T15:25:25Z", "updated_at": "2016-02-04T15:25:27Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "Wanagram_3601e88d5317ab2be0e8", "created_at": "2016-02-04T15:24:46Z", "updated_at": "2016-02-04T15:24:46Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "sivartravis_3d8221f67682112500ec", "created_at": "2016-02-02T21:41:16Z", "updated_at": "2016-02-02T21:41:16Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.area", "d3.svg.line", "d3.csv", "d3.nest", "d3.max", "d3.min", "d3.select"], "readme": "This example shows a few interesting techniques with [D3](http://d3js.org/):\n\n* Stock prices in [CSV format](https://github.com/mbostock/d3/wiki/CSV) are loaded asynchronously.\n* Stock prices are [nested](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_nest) by symbol.\n* The *x*-scale is the minimum and maximum across symbols. (Note Google's IPO.)\n* The *y*-scale is local to each symbol; the domain is set per multiple.\n* [Area](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-area) and [line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) shapes are used to fill and stroke separately.\n\nTwo alternative approaches to small multiples include using [selection.each to create a scope](/mbostock/9490313) and [binding local scales](/mbostock/9490516) to each multiple.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1157787'>Small Multiples</a>", "description": "Small Multiples"}, {"uid": "sivartravis_8d506463a89fcb11d16a", "created_at": "2016-02-02T17:48:15Z", "updated_at": "2016-02-02T17:48:16Z", "api": ["d3.layout.cluster", "d3.svg.diagonal.radial", "d3.select", "d3.json"], "readme": "A dendrogram is a node-link diagram that places leaf nodes of the tree at the same depth. In this example, the classes (leaf nodes) are aligned on the right edge, with the packages (internal nodes) to the left. Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, courtesy Jeff Heer.\n\nCompare to this [Cartesian layout](/mbostock/4063570).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339607'>Cluster Dendrogram</a>", "description": "Cluster Dendrogram"}, {"uid": "sivartravis_348fc7cd3f3d8ad9db3f", "created_at": "2016-02-02T17:45:48Z", "updated_at": "2016-02-02T17:45:48Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.geom.voronoi", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.max", "d3.svg.axis", "d3.nest", "d3.merge"], "readme": "This [multi-line chart](/mbostock/3884955) uses an invisible [Voronoi tessellation](/mbostock/4060366) to handle mouseover; the closest point to the mouse on any line is highlighted. Click the checkbox in the top-right to toggle the visibility of the Voronoi overlay.\n\nNote that because d3.geom.voronoi does not handle coincident points (and this data from the government comes pre-rounded to a tenth of a degree), d3.nest is used to collapse coincident points before constructing the Voronoi.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/8033015'>Multi-Line Voronoi</a>\n\nforked from <a href='http://bl.ocks.org/sivartravis/'>sivartravis</a>'s block: <a href='http://bl.ocks.org/sivartravis/f3708ba3311007a9b4a6'>Multi-Line Voronoi</a>", "description": "Multi-Line Voronoi"}, {"uid": "sivartravis_9570c31758f269538746", "created_at": "2016-02-02T17:45:35Z", "updated_at": "2016-02-02T17:45:36Z", "api": ["d3.time.format", "d3.scale.ordinal", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.select", "d3.tsv", "d3.layout.stack", "d3.max"], "readme": "A recreation of a [Protovis example](http://mbostock.github.com/protovis/ex/crimea-stacked-bar.html) in [D3](http://d3js.org/) using the [stack layout](https://github.com/mbostock/d3/wiki/Stack-Layout).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1134768'>Stacked Bar Chart</a>", "description": "Stacked Bar Chart"}, {"uid": "sivartravis_f3708ba3311007a9b4a6", "created_at": "2016-02-02T17:36:53Z", "updated_at": "2016-02-02T17:36:54Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.geom.voronoi", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.max", "d3.svg.axis", "d3.nest", "d3.merge"], "readme": "This [multi-line chart](/mbostock/3884955) uses an invisible [Voronoi tessellation](/mbostock/4060366) to handle mouseover; the closest point to the mouse on any line is highlighted. Click the checkbox in the top-right to toggle the visibility of the Voronoi overlay.\n\nNote that because d3.geom.voronoi does not handle coincident points (and this data from the government comes pre-rounded to a tenth of a degree), d3.nest is used to collapse coincident points before constructing the Voronoi.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/8033015'>Multi-Line Voronoi</a>", "description": "Multi-Line Voronoi"}, {"uid": "sivartravis_b8b543661cade63c8548", "created_at": "2016-02-02T17:28:13Z", "updated_at": "2016-02-02T17:28:13Z", "api": ["d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.keys", "d3.extent", "d3.min", "d3.max", "d3.svg.symbol", "d3.transition"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n## Horserace tool  \nThis is a tool I built for Google News Lab to compare the Google search indexes of all presidential candidates \n\nforked from <a href='http://bl.ocks.org/jieqianzhang/'>jieqianzhang</a>'s block: <a href='http://bl.ocks.org/jieqianzhang/890c4a214e48bedc8755'>Horserace tool</a>", "description": "Horserace tool"}, {"uid": "sivartravis_ae26b82760734cf7b2b8", "created_at": "2016-02-02T17:27:50Z", "updated_at": "2016-02-02T17:27:50Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.json", "d3.max", "d3.rgb"], "readme": "Inspired by an [example](http://bl.ocks.org/mbostock/3887051) from [Mike Bostock](http://bost.ocks.org). Colors from [Every ColorBrewer Scale](http://bl.ocks.org/mbostock/5577023).\n\nforked from <a href='http://bl.ocks.org/bricedev/'>bricedev</a>'s block: <a href='http://bl.ocks.org/bricedev/0d95074b6d83a77dc3ad'>Grouped bar chart</a>", "description": "Grouped bar chart"}, {"uid": "sivartravis_9a5ba3d2f25d1eebc912", "created_at": "2016-02-02T17:22:16Z", "updated_at": "2016-02-02T17:22:17Z", "api": ["d3.tsv", "d3.scale.ordinal", "d3.range", "d3.select", "d3.scale.linear", "d3.extent", "d3.max", "d3.svg.area"], "readme": "## Slave Voyages - Embarking\n\nThis is an attempt at visualizing the relative scale of the slave trade by country. The data comes from [slavevoyages.org](http://slavevoyages.org/tast/assessment/estimates.faces).\n\nThe visualization is inpsired by the [Mountains-out-of-molehills](http://www.informationisbeautiful.net/visualizations/mountains-out-of-molehills/) visualization. The focus is to communicate the relative scale over time, giving us a sense of activity over time of this attrocious part of our history.\n\n\n\n\n\n\n\n\n\n\n\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/754c7d061c2d0b71be37'>slave voyages - embarking</a>", "description": "slave voyages - embarking"}, {"uid": "sivartravis_7df69f85a04f02b57e02", "created_at": "2016-02-02T17:10:03Z", "updated_at": "2016-02-02T17:10:04Z", "api": ["d3.map", "d3.scale.quantize", "d3.range", "d3.geo.albersUsa", "d3.geo.path", "d3.select"], "readme": "This choropleth encodes unemployment rates from 2008 with a [quantize scale](https://github.com/mbostock/d3/wiki/Quantitative-Scales#wiki-quantize) ranging from 0 to 15%. A [threshold scale](../3306362) is a useful alternative for coloring arbitrary ranges.\n\nforked from <a href='http://bl.ocks.org/wboykinm/'>wboykinm</a>'s block: <a href='http://bl.ocks.org/wboykinm/224ec8403aa16da1937e'>Choropleth</a>", "description": "Choropleth"}, {"uid": "srinivashavanur_589ea5eeae27f37981dc", "created_at": "2016-02-01T20:08:23Z", "updated_at": "2016-04-14T16:43:59Z", "api": ["d3.select"], "readme": "<b>Problem Statement: </b>\n\nWork with the 2014 college football dataset from http://www.cs.odu.edu/~mweigle/courses/cs725-s16/passing-stats-2014.csv (original location is http://www.sports-reference.com/cfb/years/2014-passing.html).  This is the same data used to create the scatterplot in the d3 example at http://bl.ocks.org/weiglemc/bdc0474429e6567bc320\n\n<b>Part 1 - Tableau</b>\n\n<b>Use Tableau to create the following graphs:</b>\n\nBar chart of passing yards per player (best displayed as a horizontal bar chart), with conference mapped to color\nscatterplot of 2 interesting variables, with conference mapped to color\none other interesting graph that uses a derived variable\nFor each graph, what insight does it provide? \n\n<b>Part 2 - D3</b>\n\nContinue to work through Scott Murray's D3 tutorial, through \"Making a Bar Chart\".  The goal is to produce a visualization similar to http://alignedleft.com/content/03-tutorials/01-d3/130-making-a-bar-chart/19.png.  \n\n---------------------------------------------------\nName: Srinivas Havanur\n \nAssignment: CS 725 - VI2 submission\n \nCourse: Information Visualization\n \nSemester: Spring 2016\n \n\n\n---------------------------------------------------\n\n\nComments about using tableau:\n\n1. Tableau is user friendly tool which has most of the features provided in R and D3 that are required to visualize the data. Simple graphs for instance, average of the statistics in the form of bar graph can be generated within few seconds when compared to R and D3 even if you are not expertized using tableau. This is because all we need is simple skills to drag and drop the appropriate fields from the datasets to generate the graphs.\n\n2. There is no need to code to produce the visualization using tableau. However, certain complicated operations cannot be achieved using tableau in such cases R and D3 becomes flexible. Sometimes tableau even helped me for exploring to find the quick patterns and then later I coded the same patterns in R or D3 to produce the visualization.\t\n\n\nThings that I learn't using D3:\n\n1.I came to know how to attach the data values to Document object model(DOM) and used svg to showcase the data.\n\n2.Displaying a dataset value in the individual bars of a bar plot using attribute function. Attribute function is used to set an Html attribute and their respective value on an element. \n\nFor Eg: ```<div class=\"bar\"></div>``` in html can be written as .attr(\"class\", \"bar\")\n\n3.Applying custom colors by implementing custom function using rgb() color definition.\n\n-----------------------------------\n#1. Bar chart of passing yards per player (best displayed as a horizontal bar chart), with conference mapped to color\n-----------------------------------\na) A Bar chart with grouping by color code: This idea got triggered while discussing ICW2 with my group members.\n\nIncite: Passing yards value for each player is represented in the form of bar graph. Passing yards of each player belonging to same conference are grouped together and represented in the form of color code. From this we can get to know the highest passing yards of a particular player in each conference.\n\n![graph11](https://cloud.githubusercontent.com/assets/11856540/12735720/fa0d4f5e-c917-11e5-8f72-8c0072b8be27.png)\n\n-----------------------------------\nb) A Bar chart with grouping by color code.\n\nIncite: Passing yards value for each player is represented in the form of bar graph. Each player belonging to different conference is represnted in a different color code. From the graph we can get to know the first top five players having highest passing yards.\n\n![graph22](https://cloud.githubusercontent.com/assets/11856540/12735723/ff1355d4-c917-11e5-8799-94babde53ddc.png)\n------------------------------------\n\n###2. Scatterplot of 2 interesting variables, with conference mapped to color\n\n\nTwo interesting variables: Passing Attempts, Rushing Attempts\n\nIncite: The main purpose of displaying scatter plot of Passing Attempts and Rushing Attempts is that to find a correlation between two sets of data and how they are linked together. The correlation can be positive when  both the values increase together or it can be negative when one of the value decreases as the other increases. In this case we see that there is no correlation between Passing Attempts and Rushing Attempts as the data is scattered all parts of the graph\n\n\n![scatterplot](https://cloud.githubusercontent.com/assets/11856540/12736075/301f5652-c91b-11e5-9771-98d62365e343.png)\n\n----------------------------------------------------\n###3. One other interesting graph that uses a derived variable\na) Scatter plot of Completions vs Completion percentage\n\nIncite: Here derived variable Completion percentage is taken into account to generate scatter plot with the pass completions. Completion percentage is calculated by taking a ratio of pass completions by passing attempts. My main purpose was to find the correlation between these two variables. From the graph we can conclude saying that there is a slight low positive correlation between pass completions vs completion percentage.\n\n![3rdgraphs](https://cloud.githubusercontent.com/assets/11856540/12740653/352dd47a-c943-11e5-988e-7fede955b2b4.png)\n\nb) Bar graph of Average completion percentage per Conference.\n\nIncite: I got this idea from the previous graph and was interested to know the average completion percentage values for every conference. From this, we can get to know the particular conference that has the highest average completion percentage.\n![imag333](https://cloud.githubusercontent.com/assets/11856540/12768851/e05ca054-c9e0-11e5-9c6e-715197e8b19f.png)", "description": "Barplot Implementation advanced (Visual Implementation 2)"}, {"uid": "smilanko_d65360ca2a9c248491fb", "created_at": "2016-01-30T03:02:11Z", "updated_at": "2016-01-30T03:02:12Z", "api": ["d3.select"], "readme": "Name: Slobodan Milanko\n\n<img src=\"http://www.cs.odu.edu/~smilanko/images/cs825/1a.png\" alt=\"Drawing\" style=\"width: 800px;\"/>\n\nchart #1 shows us a horizontal bar chart of attempted passes per player, within a conference. From here, we are able to mainly see which conferences make the most attempts (by getting a gist of the most dominant colors on the graph) and which players tend to pass the most.\n\n<img src=\"http://www.cs.odu.edu/~smilanko/images/cs825/1b.png\" alt=\"Drawing\" style=\"width: 800px;\"/>\n\nchart #2 shows us a scatterplot of 2 variables (Passing TD and Passing Attempt), with conference mapped to color. This chart can show us the number of passing attempts made by a player, by tallying the TD count. From there, we can compare how many attempts are needed of players within a conferences, who have the same same Passing TD range.\n\n<img src=\"http://www.cs.odu.edu/~smilanko/images/cs825/1c.png\" alt=\"Drawing\" style=\"width: 800px;\"/>\n\nchart #3 shows us a derived variable called Margin_PassA_To_PassTD. This variable takes the total number of attempted passes, and the total passes to TD's, (per player) and returns back a ratio. We color code each ratio by conference. The insight we can gain from this is that we are able to see the conferences with the best, Pass Attempt to Pass TD ratio. This can help us answer a question, such as: Out of all pass attempts, how many lead to a touchdown? By asking this question, we can see that conferences such as Big Ten had nearly a 11% ratio. We can also see that the majority of players per conference, maintained a 3%-7.5% ratio.\n\n* List of 2 comments that you have about using Tableau:\n  * Changing types of charts is really easy Tableau takes care of it for us, where we can select dropdown values.\n  * Adding a color by a specific value is also very easy Drag and drop features make it much more compelling to use, for non-technical people, as comapred to R, or D3\n\n* List of 3 things that you learned while working through the D3 tutorial:\n  * Applying stlyes to svg elements is similar to that of html elemnts, execpt it has no quotes.\n  * We cannot apply a z-index to svg elements, but we can draw them in order, and overlay as needed.\n  * We can apply opacity to svg elements, fill them with colors,and position them within the defined svg area.\n\nforked from <a href='http://bl.ocks.org/smilanko/'>smilanko</a>'s block: <a href='http://bl.ocks.org/smilanko/4e2501f6c3b10565923b'>wk3</a>", "description": "wk3_assignment"}, {"uid": "Sokrates86_4f482330c496e019ffd2", "created_at": "2016-01-20T12:21:04Z", "updated_at": "2016-01-20T14:57:24Z", "api": ["d3.select", "d3.scale.category10", "d3.scale.ordinal", "d3.svg.line"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "fresh block"}, {"uid": "tomshanley_0e891ba348fe88b9ab4d", "created_at": "2016-01-15T03:08:12Z", "updated_at": "2016-03-29T00:32:51Z", "api": ["d3.select", "d3.layout.force", "d3.scale.ordinal", "d3.scale.linear", "d3.scale.category10", "d3.range", "d3.ascending", "d3.svg.line", "d3.selectAll"], "readme": "D3 matrix (based on http://bost.ocks.org/mike/miserables/), and using the same data as (http://bl.ocks.org/tomshanley/raw/de3ee03f25aa9f134ecf/)\n\nIncorporates:\n\n* tabletop.js (https://github.com/jsoma/tabletop) to pull the node and link data from Google Sheets.\n* ShortestPathCalculator.js (https://github.com/julianbrowne/dijkstra) to calculate shortest path between the selected node and the others, for sorting purposes.\n\nBy selecting a service or life event, sorts the nodes by how close each node is to the selected in terms of links. Lines are drawn to delineate between each group of nodes (ie those that directly linked, those that 1 node away, and so on).\n", "description": "D3 matrix, with sort and grouping"}, {"uid": "zanarmstrong_c91e596a3769afcd494f", "created_at": "2016-01-14T00:13:23Z", "updated_at": "2016-01-14T00:14:23Z", "api": ["d3.layout.cluster", "d3.svg.diagonal", "d3.select"], "readme": "A dendrogram is a node-link diagram that places leaf nodes of the tree at the same depth. In this example, the classes (leaf nodes) are aligned on the right edge, with the packages (internal nodes) to the left. Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, courtesy Jeff Heer.\n\nCompare to this [radial layout](/mbostock/4339607).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063570'>Cluster Dendrogram</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/a307b9e5457164864c23'>Cluster Dendrogram</a>", "description": "Cluster Dendrogram"}, {"uid": "VizzzHu_78b84930b339f5f39e18", "created_at": "2016-01-13T19:51:08Z", "updated_at": "2016-01-15T18:14:26Z", "api": ["d3.scale.category20", "d3.layout.pack", "d3.select", "d3.csv"], "readme": "This project by Xianlin Hu is to build an interative visualization on element table. \nThe goal of the project is to use visualization to explore the relationships among elements.\nTechnically, this project is also to help understand how d3 data joint and enter/update/exit pattern works.\nRight now, the layouts include table layout and circle packing. \n\nThis project is under construction...\n", "description": "Element Visualization"}, {"uid": "Sokrates86_e6a1a8b53e87cadd00aa", "created_at": "2016-01-12T19:25:43Z", "updated_at": "2016-04-05T18:15:17Z", "api": ["d3.select", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.svg.line"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/Sokrates86/'>Sokrates86</a>'s block: <a href='http://bl.ocks.org/Sokrates86/1297670a35e6e0841636'>scatterplot-lines-SAINTS</a>", "description": "alkoholi-kulutus-kuolema"}, {"uid": "Sokrates86_1297670a35e6e0841636", "created_at": "2016-01-12T17:08:28Z", "updated_at": "2016-01-12T19:25:42Z", "api": ["d3.select", "d3.scale.linear", "d3.svg.axis", "d3.svg.line"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "scatterplot-lines-SAINTS"}, {"uid": "SpaceActuary_0e20fb7d21cce9ec1302", "created_at": "2016-01-11T15:37:37Z", "updated_at": "2016-01-12T22:24:35Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.csv", "d3.ascending", "d3.nest", "d3.sum"], "readme": "Donut chart circumscribing a pie chart--used for displaying parts of a whole with hierarchical data.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887193'>Donut Chart</a>", "description": "Donut-Pie Chart"}, {"uid": "Sokrates86_91e1130fc45e6ba46a7d", "created_at": "2016-01-11T15:26:02Z", "updated_at": "2016-01-11T15:26:15Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "Fertility and life expectancy"}, {"uid": "Sokrates86_4fb9edb1d6fcd3d52593", "created_at": "2016-01-10T15:13:35Z", "updated_at": "2016-01-12T13:45:59Z", "api": ["d3.select", "d3.scale.ordinal", "d3.range", "d3.scale.linear", "d3.max", "d3.min", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nLottokone", "description": "Lottokone1"}, {"uid": "sxywu_cdff7e8538477e7222b8", "created_at": "2016-01-04T04:39:50Z", "updated_at": "2016-02-16T10:14:18Z", "api": ["d3.select", "d3.interpolate"], "readme": "__Make sure to pop out to a new window, and then scroll.__\n---\n\nAn experiment to see if I can get svg paths to animate only to a certain horizontal line while a user scrolls.  Used in my unreleased wongfu side project.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "description": "Animate SVG path on scroll"}, {"uid": "ssdatar_5e6ed7f25ae06c844ff3", "created_at": "2015-12-23T20:05:04Z", "updated_at": "2015-12-23T20:30:25Z", "api": ["d3.tip", "d3.select", "d3.csv", "d3.max", "d3.scale.linear", "d3.nest", "d3.keys"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "US grid campaign finance"}, {"uid": "SpaceActuary_99493eba71884f555139", "created_at": "2015-12-15T19:40:23Z", "updated_at": "2016-04-16T02:11:17Z", "api": ["d3.select", "d3.max", "d3.tip"], "readme": "A state grid inspired by an [Allison McCann graphic](http://fivethirtyeight.com/features/where-your-state-gets-its-money/) on state taxes. (See also [David Mimno\u2019s implementation](/mimno/4a904031a566a361f2b1).)\n\nMainly, this was an excuse to embed data as ASCII art.\n\n\nforked from <a href='http://bl.ocks.org/SpaceActuary/'>SpaceActuary</a>'s block: <a href='http://bl.ocks.org/SpaceActuary/8da9fcf564d2f741898c'>State Grid</a>", "description": "Mini State Grid"}, {"uid": "veltman_7d893d6f9273e5f920e3", "created_at": "2015-12-14T19:38:55Z", "updated_at": "2015-12-14T19:38:56Z", "api": ["d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.selectAll", "d3.range", "d3.format", "d3.timer"], "readme": "Testing in-browser gif generation from an SVG with [gif.js](https://github.com/jnordberg/gif.js/) and [canvg](https://github.com/gabelerner/canvg).\n\nUses canvg to render out each \"frame\" of the SVG to an in-between canvas, so styling via CSS is still a little iffy.  [Rendering more directly](http://bl.ocks.org/veltman/1071413ad6b5b542a1a3) seems to make more sense. The only upside to this is that the frames can be added synchronously, before the browser paints at all.  At the very least, would need to add [SVG Crowbar](https://github.com/NYTimes/svg-crowbar)-style traversal with explicit styling in before the canvas conversion.", "description": "Gif rendering - canvg"}, {"uid": "xaranke_0fdf81a4857a360078b0", "created_at": "2015-12-11T12:34:59Z", "updated_at": "2015-12-11T14:40:06Z", "api": ["d3.select", "d3.layout.force", "d3.json"], "readme": "This simple force-directed graph shows character co-occurence in *Les Mis\u00e9rables*. A physical simulation of charged particles and springs places related characters in closer proximity, while unrelated characters are farther apart. Layout algorithm inspired by [Tim Dwyer](http://www.csse.monash.edu.au/~tdwyer/) and [Thomas Jakobsen](http://web.archive.org/web/20080410171619/http://www.teknikus.dk/tj/gdc2001.htm). Data based on character coappearence in Victor Hugo's *Les Mis\u00e9rables*, compiled by [Donald Knuth](http://www-cs-faculty.stanford.edu/~uno/sgb.html).\n\nCompare this display to a force layout with [curved links](/mbostock/4600693), a force layout with [fisheye distortion](http://bost.ocks.org/mike/fisheye/) and a [matrix diagram](http://bost.ocks.org/mike/miserables/).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4062045'>Force-Directed Graph</a>", "description": "538 Network"}, {"uid": "Tibicenas_ad43c79f66f0372eaaef", "created_at": "2015-12-04T12:00:25Z", "updated_at": "2015-12-04T12:00:25Z", "api": ["d3.select", "d3.time.format.utc", "d3.time.scale.utc", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.svg.line", "d3.time.format", "d3.extent", "d3.max"], "readme": "as discussed on the d3js #learning-d3 and #help slack channels on 2015/12/03\n\nan 'anonymoyus' block from [micahstubbs](http://bl.ocks.org/micahstubbs)\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/f071774f55de3179be72'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/d56741378cba3d21f7ec'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/469d0de345aca1472012'>circle transitions example for @hectorleon</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/5bfeda3a6fe85b0b0abe'>circle transitions example for @hectorleon</a>", "description": "circle transitions example for @hectorleon"}, {"uid": "xaranke_9ada4c74a87b57ae7308", "created_at": "2015-12-03T16:43:56Z", "updated_at": "2015-12-05T19:09:27Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.json", "d3.behavior.drag", "d3.rgb"], "readme": "Created using the [d3-sankey](https://github.com/d3/d3-sankey) plugin for D3 4.0.\n\nRun `npm install` and then `npm run build` to create `d3.min.js`.  \n\nStolen from Mike Bostock's [original here](http://bost.ocks.org/mike/sankey/).\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "description": "d3-sankey demo"}, {"uid": "veltman_bbbe7947d1def3303f20", "created_at": "2015-11-30T20:58:22Z", "updated_at": "2016-03-23T20:50:25Z", "api": ["d3.select", "d3.geo.conicConformal", "d3.geo.path", "d3.scale.quantile", "d3.scale.linear", "d3.hexbin", "d3.range", "d3.svg.brush", "d3.svg.axis", "d3.mouse", "d3.selectAll"], "readme": "Experimenting with an in-browser hexbinner.\n\nTo dos: add k-means classification option, allow drag-and-drop data uploads, projection selection, more color scales\n\nSee also: [Resizing hexbin test](http://bl.ocks.org/veltman/38149d05ea247cbcebb1)", "description": "Configurable hexbins"}, {"uid": "Treblesteph_d136ae524e587f478a0f", "created_at": "2015-11-30T15:56:07Z", "updated_at": "2015-11-30T16:15:34Z", "api": ["d3.layout.cluster", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "fresh block"}, {"uid": "wboykinm_524e56d5ec2bf514be9f", "created_at": "2015-11-20T16:48:55Z", "updated_at": "2015-11-20T16:50:00Z", "api": [], "readme": "", "description": ""}, {"uid": "zzolo_e07e8f964b334a60201d", "created_at": "2015-11-16T22:13:57Z", "updated_at": "2015-11-16T22:13:57Z", "api": ["d3.scale.linear", "d3.max", "d3.select", "d3.svg.axis"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/zzolo/'>zzolo</a>'s block: <a href='http://bl.ocks.org/zzolo/80097d54d4ec4ce83222'>A scatter plot</a>\n\nforked from <a href='http://bl.ocks.org/zzolo/'>zzolo</a>'s block: <a href='http://bl.ocks.org/zzolo/89de858deaf6f8fc78ba'>A scatter plot</a>", "description": "A scatter plot"}, {"uid": "zzolo_89de858deaf6f8fc78ba", "created_at": "2015-11-16T21:55:24Z", "updated_at": "2015-11-16T21:55:26Z", "api": ["d3.scale.linear", "d3.max", "d3.select", "d3.svg.axis"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/zzolo/'>zzolo</a>'s block: <a href='http://bl.ocks.org/zzolo/80097d54d4ec4ce83222'>A scatter plot</a>", "description": "A scatter plot"}, {"uid": "zzolo_80097d54d4ec4ce83222", "created_at": "2015-11-16T21:51:52Z", "updated_at": "2015-11-16T21:55:21Z", "api": ["d3.scale.linear", "d3.max", "d3.select", "d3.svg.axis"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "A scatter plot"}, {"uid": "thomasgwatson_72953c94d89df97081a5", "created_at": "2015-11-13T20:16:37Z", "updated_at": "2015-11-13T20:50:48Z", "api": ["d3.range", "d3.geo.tile", "d3.geo.mercator", "d3.geo.path", "d3.behavior.zoom", "d3.select", "d3.json"], "readme": "Using [d3.geo.tile](https://github.com/d3/d3-plugins/tree/master/geo/tile) to display raster image tiles underneath some [TopoJSON](https://github.com/mbostock/topojson) vectors, and [d3.behavior.zoom](https://github.com/mbostock/d3/wiki/Zoom-Behavior) for pan & zoom. This version reprojects the geometry on interaction; compare to [updating the transform](/mbostock/5914438). See another variation of this example with points, showing the [U.S. State Capitals](/mbostock/9535021); also see the [static version](/mbostock/94b9fd26e12c586f342d).\n\nTiles copyright [OpenStreetMap contributors](https://www.openstreetmap.org/copyright).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/5342063'>Raster & Vector II + topo</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/360036a08c42226aa6a7'>Raster & Vector II + topo</a>", "description": "Raster & Vector II + topo"}, {"uid": "sugeerth_3ec7767e5de59cba1bf3", "created_at": "2015-11-13T02:34:52Z", "updated_at": "2015-11-13T03:02:08Z", "api": ["d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest", "d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.json", "d3.behavior.drag", "d3.rgb"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/3e20a17f89fa235c2430'>fresh block</a>", "description": "fresh block"}, {"uid": "ssmaroju_85976a005c7badb2f077", "created_at": "2015-11-09T18:48:52Z", "updated_at": "2015-11-09T18:48:52Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.scale.category10", "d3.layout.stack", "d3.select", "d3.csv", "d3.range", "d3.max", "d3.ascending"], "readme": "", "description": "Animated Stacked Bar Chart - Accident Statistics in India (2009 - 2012)"}, {"uid": "wcjohnson11_ffcf40c924167cf15793", "created_at": "2015-11-09T00:10:07Z", "updated_at": "2015-11-09T00:10:07Z", "api": ["d3.scale.ordinal", "d3.select", "d3.sankey", "d3.json", "d3.selectAll"], "readme": "A refactored version of Sara Quigley's [Issue Breakdown](http://bl.ocks.org/saraquigley/raw/5194141/) as a simple example of a [Sankey diagram](http://bost.ocks.org/mike/sankey/)\n\n\nforked from <a href='http://bl.ocks.org/syntagmatic/'>syntagmatic</a>'s block: <a href='http://bl.ocks.org/syntagmatic/28f1fbeb41df9753e120'>Issue Breakdown</a>", "description": "Issue Breakdown"}, {"uid": "vicapow_81bd5d538b825b23856b", "created_at": "2015-11-08T23:42:44Z", "updated_at": "2015-11-08T23:42:45Z", "api": ["d3.geo.aitoff", "d3.geo.albers", "d3.geo.august", "d3.geo.baker", "d3.geo.boggs", "d3.geo.bonne", "d3.geo.bromley", "d3.geo.collignon", "d3.geo.craster", "d3.geo.eckert1", "d3.geo.eckert2", "d3.geo.eckert3", "d3.geo.eckert4", "d3.geo.eckert5", "d3.geo.eckert6", "d3.geo.eisenlohr", "d3.geo.equirectangular", "d3.geo.hammer", "d3.geo.hill", "d3.geo.homolosine", "d3.geo.kavrayskiy7", "d3.geo.cylindricalEqualArea", "d3.geo.lagrange", "d3.geo.larrivee", "d3.geo.laskowski", "d3.geo.loximuthal", "d3.geo.mercator", "d3.geo.miller", "d3.geo.mtFlatPolarParabolic", "d3.geo.mtFlatPolarQuartic", "d3.geo.mtFlatPolarSinusoidal", "d3.geo.mollweide", "d3.geo.naturalEarth", "d3.geo.nellHammer", "d3.geo.polyconic", "d3.geo.robinson", "d3.geo.sinusoidal", "d3.geo.sinuMollweide", "d3.geo.vanDerGrinten", "d3.geo.vanDerGrinten4", "d3.geo.wagner4", "d3.geo.wagner6", "d3.geo.wagner7", "d3.geo.winkel3", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.json", "d3.geo.projection"], "readme": "These projections are available in the [geo.projection plugin](https://github.com/d3/d3-plugins/tree/master/geo/projection).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3711652'>Projection Transitions</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/68e135c8e56cb134ebf2'>Projection Transitions</a>", "description": "Projection Transitions"}, {"uid": "wcjohnson11_a586a063a4fa0be339f6", "created_at": "2015-11-08T23:16:12Z", "updated_at": "2015-11-08T23:16:12Z", "api": ["d3.layout.force", "d3.select"], "readme": "The force graph has been the subject of my fascination in the recent couple weeks.  One of the fun things about the force layout is that the positioning of each node and link is calculated at every tick, which means the normal update-transition paradigm doesn't work too well.\n\nThis was my approach to the enter-update-exit pattern in a force graph, and other then a couple bounces of the nodes, seem to work pretty decently.\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/9358409'>Enter-Update-Exit in Force Layout</a>", "description": "Enter-Update-Exit in Force Layout"}, {"uid": "wcjohnson11_f231ea9216cf089a67b3", "created_at": "2015-11-08T21:36:59Z", "updated_at": "2015-11-08T21:37:01Z", "api": ["d3.scale.linear", "d3.layout.pack", "d3.select", "d3.json", "d3.event.stopPropagation", "d3.transition", "d3.interpolateZoom"], "readme": "Click on any package to zoom in or out. See also this [static circle packing](/mbostock/4063530) example.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/7607535'>Zoomable Circle Packing</a>", "description": "Zoomable Circle Packing"}, {"uid": "wcjohnson11_4299a4b3114309320c71", "created_at": "2015-11-08T21:36:46Z", "updated_at": "2015-11-08T21:36:46Z", "api": ["d3.select", "d3.json", "d3.nest", "d3.scale.ordinal", "d3.layout.pack", "d3.legend.color"], "readme": "## Circle Pack Labels\n\nA technique to hack the current `d3.layout.pack` to add labels by adding a label node into the circle pack data before it is processed. By using the sizes of the children, you add a node to your nested data and create a space using the pack algorithm for the label. You will need to do some filtering to display the labels differently from other nodes at that level, but feel free to use this example as a guide.\n\nI am planning on looking at the d3 code to see how easy it would be to make a build in label layer for this layout. But for now you can follow along with this block if you need circle pack labels today!\n\nReally fun dataset on flight delays that I plan on investigating further: [Airline on-time performance data](http://transtats.bts.gov/Tables.asp?DB_ID=120&DB_Name=Airline%20On-Time%20Performance%20Data&DB_Short_Name=On-Time) provided by the Department of Transportation's [Bureau of Transportation Statistics](http://www.rita.dot.gov/bts/)\n\n**Before**\n\n![Alt text](https://gist.githubusercontent.com/susielu/7c7bae35e0944725363a/raw/2af44953fb83a9005ef356de2efc8a61ad9242a0/before.png)\n\n**After**\n\n![Alt text](https://gist.githubusercontent.com/susielu/7c7bae35e0944725363a/raw/2af44953fb83a9005ef356de2efc8a61ad9242a0/after.png)\n\nforked from <a href='http://bl.ocks.org/susielu/'>susielu</a>'s block: <a href='http://bl.ocks.org/susielu/7c7bae35e0944725363a'>Circle Pack Labels</a>", "description": "Circle Pack Labels"}, {"uid": "wcjohnson11_0e55e10f963dc324ee26", "created_at": "2015-11-08T16:19:17Z", "updated_at": "2015-11-09T15:16:27Z", "api": ["d3.select", "d3.csv", "d3.nest", "d3.layout.pack"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "Circle Pack"}, {"uid": "wcjohnson11_7ebb3f3a28e403745856", "created_at": "2015-11-08T15:01:21Z", "updated_at": "2015-11-08T15:01:21Z", "api": ["d3.dispatch", "d3.rebind", "d3.layout.pie", "d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that shows the different modes:\n\n**\"flat\"** is the default, demonstrated in earlier [examples that use flare.json](http://bl.ocks.org/emeeks/298e07ea67a640b5d9f4).\n\n**\"solar\"** arranges each satellite in its own ring, equally divided from the set size of the layout.\n\n**\"atomic\"** places 2 satellites in orbit in the first ring and 8 in every ring after that.\n\n**\"custom\"** is achieved by passing an array of integers. Each integer sets the number of satellites in that ring, with the final value used to set the number of satellites in all remaining rings. Under the hood, \"solar\" could be achieved by passing [1], \"atomic\" could be achieved by passing [2,8] and \"flat\" could be achieved by passing [9999].", "description": "d3.layout.orbit modes"}, {"uid": "wcjohnson11_7a0309cc11757a3e5b3e", "created_at": "2015-11-08T15:00:38Z", "updated_at": "2015-11-08T15:00:38Z", "api": ["d3.dispatch", "d3.rebind", "d3.layout.pie", "d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that visualizes the D3 API.\n\nWhen you mouseover a node, it displays its label and centers the orbit layout on that node. It also draws spokes to children and parents where applicable.", "description": "Orbital Layout of D3.js API"}, {"uid": "wcjohnson11_4aed5f40513b8a64cb27", "created_at": "2015-11-08T05:54:47Z", "updated_at": "2015-11-08T17:22:18Z", "api": ["d3.select", "d3.range", "d3.scale.linear", "d3.timer"], "readme": "\n\nforked from <a href='http://bl.ocks.org/zanarmstrong/'>zanarmstrong</a>'s block: <a href='http://bl.ocks.org/zanarmstrong/4b6ab7914183dbf7a16f'>Adaption of Jfire.io animation, for teaching purposes</a>\n\nforked from <a href='http://bl.ocks.org/zanarmstrong/'>zanarmstrong</a>'s block: <a href='http://bl.ocks.org/zanarmstrong/3b5f766647e15e23e5b8'>Stripped adaptation of Jfire.io animation, for teaching purposes</a>\n\nforked from <a href='http://bl.ocks.org/zanarmstrong/'>zanarmstrong</a>'s block: <a href='http://bl.ocks.org/zanarmstrong/51ccb8b4f111ef4aec1c'>Stripped adaptation of Jfire.io animation, for teaching purposes: more difficult</a>", "description": "Stripped adaptation of Jfire.io animation, for teaching purposes: more difficult"}, {"uid": "veltman_87596f5a256079b95eb9", "created_at": "2015-11-07T22:13:45Z", "updated_at": "2015-11-12T19:28:41Z", "api": ["d3.scale.linear", "d3.range", "d3.svg.axis", "d3.format", "d3.svg.line", "d3.select", "d3.csv", "d3.selectAll"], "readme": "A variation on Hannah Fairfield's [classic connected scatterplot on gas prices](http://www.nytimes.com/imagepages/2010/05/02/business/02metrics.html?action=click&contentCollection=Business%20Day&module=RelatedCoverage&region=Marginalia&pgtype=article).  Shows the different trends for cost as \"dollars per gallon\" and cost as \"dollars per mile.\"  The peaks and valleys are similar, but factoring in steadily increasing fuel efficiency makes recent gas price increases look less extreme relative to to the 1979 energy crisis and earlier years.\n\nMiles per capita computed from [US Census population estimates](https://www.census.gov/popest/data/historical/) and [FWHA's Vehicle Miles Traveled](https://www.fhwa.dot.gov/policyinformation/statistics/2013/vmt421c.cfm). Fuel prices per gallon from [Table 9.4 of the EIA's Energy Review](http://www.eia.gov/beta/MER/index.cfm?tbl=T09.04). Prices look a little different than the NYT chart because it uses the average regular grade price throughout (presumably leaded for earlier years and unleaded for later years), whereas this uses the broadest average available for a year: regular leaded through 1975, regular unleaded for 1976-77, and all grades for 1978-2013. Fuel prices per mile computed as price per gallon divided by overall fleet efficiency, which is calculated using miles driven and EIA data on [barrels of finished motor fuel supplied per day](http://www.eia.gov/dnav/pet/hist/LeafHandler.ashx?n=PET&s=MGFUPUS2&f=M). All prices in 2014 dollars.", "description": "Gas prices per gallon vs. per mile"}, {"uid": "wcjohnson11_76aaaad02575169046d9", "created_at": "2015-11-07T19:56:33Z", "updated_at": "2015-11-07T19:56:33Z", "api": ["d3.select", "d3.json", "d3.nest", "d3.scale.ordinal", "d3.layout.pack", "d3.legend.color"], "readme": "## Circle Pack Labels\n\nA technique to hack the current `d3.layout.pack` to add labels by adding a label node into the circle pack data before it is processed. By using the sizes of the children, you add a node to your nested data and create a space using the pack algorithm for the label. You will need to do some filtering to display the labels differently from other nodes at that level, but feel free to use this example as a guide.\n\nI am planning on looking at the d3 code to see how easy it would be to make a build in label layer for this layout. But for now you can follow along with this block if you need circle pack labels today!\n\nReally fun dataset on flight delays that I plan on investigating further: [Airline on-time performance data](http://transtats.bts.gov/Tables.asp?DB_ID=120&DB_Name=Airline%20On-Time%20Performance%20Data&DB_Short_Name=On-Time) provided by the Department of Transportation's [Bureau of Transportation Statistics](http://www.rita.dot.gov/bts/)\n\n**Before**\n\n![Alt text](https://gist.githubusercontent.com/susielu/7c7bae35e0944725363a/raw/2af44953fb83a9005ef356de2efc8a61ad9242a0/before.png)\n\n**After**\n\n![Alt text](https://gist.githubusercontent.com/susielu/7c7bae35e0944725363a/raw/2af44953fb83a9005ef356de2efc8a61ad9242a0/after.png)\n\nforked from <a href='http://bl.ocks.org/susielu/'>susielu</a>'s block: <a href='http://bl.ocks.org/susielu/7c7bae35e0944725363a'>Circle Pack Labels</a>", "description": "Circle Pack Labels"}, {"uid": "wcjohnson11_953880e190280533e0a6", "created_at": "2015-11-07T19:07:13Z", "updated_at": "2015-11-07T19:07:13Z", "api": ["d3.scale.ordinal", "d3.select", "d3.csv", "d3.scale.linear", "d3.extent", "d3.selectAll"], "readme": "A very simple example of how to create a correlation matrix of scatterplots with dynamic scales.", "description": "Simple Correlation Matrix - Labels Above Cells"}, {"uid": "zanarmstrong_dc73d339a0f921d638ac", "created_at": "2015-11-07T18:41:23Z", "updated_at": "2015-11-07T18:43:03Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "description": "Bar Chart - no axis"}, {"uid": "zanarmstrong_4b6ab7914183dbf7a16f", "created_at": "2015-11-07T18:19:50Z", "updated_at": "2015-11-07T18:19:51Z", "api": ["d3.select", "d3.range", "d3.timer"], "readme": "", "description": "Adaption of Jfire.io animation, for teaching purposes"}, {"uid": "sxywu_6d685396393800a8792f", "created_at": "2015-11-07T18:13:04Z", "updated_at": "2015-11-07T18:13:36Z", "api": ["d3.scale.ordinal", "d3.select", "d3.csv", "d3.scale.linear", "d3.extent"], "readme": "A very simple scatterplot.", "description": "Simple Scatterplot"}, {"uid": "zanarmstrong_3a7b988cbb91266fc2ba", "created_at": "2015-11-07T07:14:31Z", "updated_at": "2015-11-07T07:16:13Z", "api": ["d3.select", "d3.range", "d3.scale.linear", "d3.timer"], "readme": "\n\nforked from <a href='http://bl.ocks.org/syntagmatic/'>syntagmatic</a>'s block: <a href='http://bl.ocks.org/syntagmatic/895eb781d88148cfd8e5'>Clock</a>", "description": "Clock (annotated)"}, {"uid": "susielu_7c7bae35e0944725363a", "created_at": "2015-11-05T07:18:52Z", "updated_at": "2015-11-05T16:30:13Z", "api": ["d3.select", "d3.json", "d3.nest", "d3.scale.ordinal", "d3.layout.pack", "d3.legend.color"], "readme": "## Circle Pack Labels\n\nA technique to hack the current `d3.layout.pack` to add labels by adding a label node into the circle pack data before it is processed. By using the sizes of the children, you add a node to your nested data and create a space using the pack algorithm for the label. You will need to do some filtering to display the labels differently from other nodes at that level, but feel free to use this example as a guide.\n\nI am planning on looking at the d3 code to see how easy it would be to make a build in label layer for this layout. But for now you can follow along with this block if you need circle pack labels today!\n\nReally fun dataset on flight delays that I plan on investigating further: [Airline on-time performance data](http://transtats.bts.gov/Tables.asp?DB_ID=120&DB_Name=Airline%20On-Time%20Performance%20Data&DB_Short_Name=On-Time) provided by the Department of Transportation's [Bureau of Transportation Statistics](http://www.rita.dot.gov/bts/)\n\n**Before**\n\n![Alt text](https://gist.githubusercontent.com/susielu/7c7bae35e0944725363a/raw/2af44953fb83a9005ef356de2efc8a61ad9242a0/before.png)\n\n**After**\n\n![Alt text](https://gist.githubusercontent.com/susielu/7c7bae35e0944725363a/raw/2af44953fb83a9005ef356de2efc8a61ad9242a0/after.png)", "description": "Circle Pack Labels"}, {"uid": "thomasgwatson_2ccc0d4a59e65c599c50", "created_at": "2015-11-03T04:28:26Z", "updated_at": "2015-11-03T04:28:26Z", "api": ["d3.format", "d3.geo.path", "d3.scale.threshold", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.json", "d3.nest"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "description": "fresh block"}, {"uid": "xaranke_ca3a852e218ac517f00a", "created_at": "2015-10-27T19:13:18Z", "updated_at": "2015-10-27T19:39:49Z", "api": ["d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.select", "d3.csv", "d3.extent"], "readme": "This scatterplot is constructed from a TSV file storing the dimensions of sepals and petals of various iris flowers. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *x*- and *y*-position encoding\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887118'>Scatterplot</a>", "description": "Scatterplot"}, {"uid": "ssdatar_6427d968c3dc27ce48c9", "created_at": "2015-10-25T05:13:30Z", "updated_at": "2015-10-25T06:00:22Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.max", "d3.ascending"], "readme": "State-wise Contributions by Individual Donors \nto Donald Trump's campaign\n", "description": "Who's giving Trump money?"}, {"uid": "ssdatar_b0a668d3e8b6f71cc0a0", "created_at": "2015-10-24T09:35:10Z", "updated_at": "2015-10-24T09:35:40Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.max", "d3.ascending"], "readme": "State-wise Contributions by Individual Donors \nto Donald Trump's campaign", "description": "Trump campaign"}, {"uid": "vanshady_40cff1c874a77b3692fb", "created_at": "2015-10-16T07:15:14Z", "updated_at": "2015-10-16T07:15:15Z", "api": ["d3.scale.category10", "d3.scale.ordinal", "d3.layout.force", "d3.select", "d3.json"], "readme": "", "description": ""}, {"uid": "widged_12a7de911b9c50283ab3", "created_at": "2015-10-14T22:54:36Z", "updated_at": "2015-10-14T22:54:36Z", "api": ["d3.range", "d3.select", "d3.selectAll", "d3.scale.category20", "d3.hcl", "d3.scale.linear", "d3.behavior.drag"], "readme": "### Click on the various examples\nEach example is a random vector in the same \"space\" as the sample in the top left.\n\n### Drag on individual rows\nEach row represents one dimension of our vectors. You can drag them back and forth to change the value of our vector for that dimension.\n\n### Watch how the similarity bar changes\nThe bar below each vector is a measure of how similar it is to the sample in the top left.\n\n### Whats going on?\nI first made [cosine similarity](http://bl.ocks.org/enjalot/c1f459768d09e0c334c1) to try and visualize the process. @mumrah forked the block and modified it to use [Manhattan Distance](https://en.wikipedia.org/wiki/Taxicab_geometry)\n\n\nI made this explanation because I'm trying to use find [similar blocks](https://github.com/enjalot/block-similarity) and in order to do that I need to understand cosine similarity. They say nothing helps you understand better than trying to explain it!\n\n\nforked from <a href='http://bl.ocks.org/mumrah/'>mumrah</a>'s block: <a href='http://bl.ocks.org/mumrah/c9853a630cf49e38b2f3'>manhattan distance</a>", "description": "manhattan distance"}, {"uid": "widged_813ae0bd69dc4e73bb73", "created_at": "2015-10-14T22:53:42Z", "updated_at": "2015-10-14T22:53:43Z", "api": ["d3.range", "d3.select", "d3.selectAll", "d3.scale.ordinal", "d3.hcl", "d3.scale.linear", "d3.behavior.drag"], "readme": "### Click on the various examples\nEach example is a random vector in the same \"space\" as the sample in the top left.\n\n### Drag on individual rows\nEach row represents one dimension of our vectors. You can drag them back and forth to change the value of our vector for that dimension.\n\n### Watch how the similarity bar changes\nThe bar below each vector is a measure of how similar it is to the sample in the top left.\n\n### Whats going on?\n[Cosine similarity](https://en.wikipedia.org/wiki/Cosine_similarity) is a technique for getting the \"distance\" between two vectors in high-dimensional spaces. We intuitively understand distance in 2 and 3 dimensions, but what happens if we have more than that? It can be convenient to calculate a single number that tells us how similar or different two high-dimensional vectors are.\n\n\nI made this explanation because I'm trying to use find [similar blocks](https://github.com/enjalot/block-similarity) and in order to do that I need to understand cosine similarity. They say nothing helps you understand better than trying to explain it!\n", "description": "cosine similarity"}, {"uid": "tarekrached_a7628dd96c62155068dd", "created_at": "2015-10-14T05:37:42Z", "updated_at": "2015-10-14T05:37:43Z", "api": ["d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll", "d3.dispatch", "d3.rebind", "d3.layout.pie"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that visualizes the D3 API.\n\nWhen you mouseover a node, it displays its label and centers the orbit layout on that node. It also draws spokes to children and parents where applicable.", "description": "Orbital Layout of D3.js API"}, {"uid": "xiaonaitong_ce8d624a01531add6b15", "created_at": "2015-10-10T21:53:36Z", "updated_at": "2015-10-10T21:53:37Z", "api": ["d3.select", "d3.json", "d3.scale.ordinal", "d3.geo.armadillo", "d3.geo.path", "d3.svg.line", "d3.max", "d3.interpolateString"], "readme": "A non-photorealistically rendered, purposefully oversimplified map of the world using (d3.sketchy)[https://github.com/sebastian-meier/d3.sketchy] along with some custom sketchy functions. Also implements (Jason Davies' automatic coloration based on neighbors)[http://bl.ocks.org/jasondavies/4188334].", "description": "Sketchy World"}, {"uid": "ufenegga_fcb92a827898969da644", "created_at": "2015-10-10T02:14:19Z", "updated_at": "2015-10-10T17:04:39Z", "api": ["d3.scale.linear", "d3.select", "d3.range", "d3.selectAll"], "readme": "Tweak some stuff\n", "description": "Gooey Effect - Circle"}, {"uid": "ssongalice_2b57db11b3584e7fa826", "created_at": "2015-10-04T03:47:49Z", "updated_at": "2015-10-04T03:47:50Z", "api": ["d3.select", "d3.csv", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis"], "readme": "", "description": ""}, {"uid": "xaranke_9e1d659204bb8f880196", "created_at": "2015-10-01T06:25:03Z", "updated_at": "2015-10-27T17:46:04Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.csv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "walkerjeffd_7ac0d8c5ee1bd8dee8ee", "created_at": "2015-09-29T19:53:00Z", "updated_at": "2015-09-29T20:08:31Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "description": "Bar Chart"}, {"uid": "SpaceActuary_8da9fcf564d2f741898c", "created_at": "2015-09-24T23:54:33Z", "updated_at": "2015-09-24T23:54:35Z", "api": ["d3.select", "d3.max"], "readme": "A state grid inspired by an [Allison McCann graphic](http://fivethirtyeight.com/features/where-your-state-gets-its-money/) on state taxes. (See also [David Mimno\u2019s implementation](/mimno/4a904031a566a361f2b1).)\n\nMainly, this was an excuse to embed data as ASCII art.\n", "description": "State Grid"}, {"uid": "zuzap_280cb98c8e49d05181cd", "created_at": "2015-09-15T21:25:35Z", "updated_at": "2015-09-15T21:25:52Z", "api": ["d3.select", "d3.set", "d3.sum", "d3.interpolate"], "readme": "# hello world\n\nforked from <a href='http://bl.ocks.org/NPashaP/'>NPashaP</a>'s block: <a href='http://bl.ocks.org/NPashaP/9796212'>BiPartite</a>", "description": "BiPartite"}, {"uid": "steveharoz_0638d230c133da1de385", "created_at": "2015-09-14T17:24:53Z", "updated_at": "2015-09-14T18:02:50Z", "api": ["d3.scale.ordinal", "d3.svg.arc", "d3.layout.pie", "d3.select", "d3.json"], "readme": "Stackoverflow question: http://stackoverflow.com/questions/32549683/d3js-json-pie-chart?noredirect=1#comment52995750_32549683", "description": "Pie Chart"}, {"uid": "ufenegga_eb449216394512121db5", "created_at": "2015-09-14T16:27:56Z", "updated_at": "2015-09-14T17:47:26Z", "api": ["d3.dispatch", "d3.rebind", "d3.layout.pie", "d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) forked from emeeks. \n\nA small viz to present myself. \n\nHello !", "description": "Quantified self :)"}, {"uid": "SpaceActuary_96ac7c3514b5f97bf19b", "created_at": "2015-09-10T22:02:07Z", "updated_at": "2015-09-10T22:15:21Z", "api": ["d3.csv", "d3.scale.linear", "d3.max", "d3.select", "d3.svg.axis"], "readme": "## hello markdown\n\n\n\n\n\n\n\n\n\n\n", "description": "Challenger"}, {"uid": "tmcw_b28768df2a8943d2c552", "created_at": "2015-09-01T15:44:33Z", "updated_at": "2015-09-01T15:44:46Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max"], "readme": "", "description": "/dev/chartpipe"}, {"uid": "skokenes_fd6b142c0f38e71424ab", "created_at": "2015-08-31T14:24:15Z", "updated_at": "2015-08-31T14:24:15Z", "api": ["d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.select", "d3.lasso", "d3.tsv", "d3.extent", "d3.selectAll", "d3.behavior.drag", "d3.mouse"], "readme": "", "description": "Scatterplot with Lasso on points"}, {"uid": "vanshady_92d3d9f189048666b797", "created_at": "2015-08-31T11:27:31Z", "updated_at": "2015-08-31T11:27:31Z", "api": ["d3.scale.ordinal", "d3.select", "d3.range", "d3.scale.linear", "d3.timer.flush", "d3.functor", "d3.quantile", "d3.svg.line", "d3.svg.axis", "d3.csv", "d3.keys", "d3.extent", "d3.svg.brush", "d3.box"], "readme": "", "description": ""}, {"uid": "syntagmatic_ebec037138b5866ff0d3", "created_at": "2015-08-30T08:51:21Z", "updated_at": "2015-09-02T13:14:58Z", "api": ["d3.select", "d3.geom.voronoi", "d3.timer", "d3.lab"], "readme": "Pulsating version of [Color Mesh II](http://bl.ocks.org/mbostock/76342abc327062128604).\n", "description": "Breathing Color Mesh"}, {"uid": "syntagmatic_0475e4fb201315a10b70", "created_at": "2015-08-27T11:20:39Z", "updated_at": "2015-08-28T04:37:22Z", "api": ["d3.timer", "d3.select", "d3.range", "d3.scale.linear"], "readme": "", "description": "Clock II"}, {"uid": "syntagmatic_895eb781d88148cfd8e5", "created_at": "2015-08-20T08:43:38Z", "updated_at": "2015-08-29T14:27:48Z", "api": ["d3.select", "d3.range", "d3.scale.linear", "d3.timer"], "readme": "", "description": "Clock"}, {"uid": "wboykinm_81b9be3f39026a0f3f1f", "created_at": "2015-08-19T01:19:33Z", "updated_at": "2015-08-29T14:27:42Z", "api": ["d3.select", "d3.json", "d3.scale.ordinal", "d3.geo.albers", "d3.geo.path", "d3.svg.line", "d3.max", "d3.interpolateString"], "readme": "A #d3js sketch-style map based on Daniel P. Huffman's [Times Approximate Linework](http://www.projectlinework.org/), using [d3.sketchy](https://github.com/sebastian-meier/d3.sketchy) and [a fill adaptation by Elijah Meeks](http://elijahmeeks.com/#content/blog/2015_08_15_sketchyviz).\n", "description": "Sketchy Continental USA"}, {"uid": "wboykinm_224ec8403aa16da1937e", "created_at": "2015-08-18T00:54:29Z", "updated_at": "2015-08-29T14:27:36Z", "api": ["d3.map", "d3.scale.quantize", "d3.range", "d3.geo.albersUsa", "d3.geo.path", "d3.select"], "readme": "This choropleth encodes unemployment rates from 2008 with a [quantize scale](https://github.com/mbostock/d3/wiki/Quantitative-Scales#wiki-quantize) ranging from 0 to 15%. A [threshold scale](../3306362) is a useful alternative for coloring arbitrary ranges.", "description": "Choropleth"}, {"uid": "syntagmatic_ba569633d51ebec6ec6e", "created_at": "2015-08-16T03:37:26Z", "updated_at": "2015-08-29T14:27:28Z", "api": ["d3.geo.aitoff", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.json", "d3.geo.boggs", "d3.geo.craster", "d3.geo.cylindricalEqualArea", "d3.geo.eckert1", "d3.geo.eckert3", "d3.geo.eckert4", "d3.geo.eckert5", "d3.geo.equirectangular", "d3.geo.fahey", "d3.geo.foucaut", "d3.geo.cylindricalStereographic", "d3.geo.ginzburg8", "d3.geo.kavrayskiy7", "d3.geo.larrivee", "d3.geo.mtFlatPolarSinusoidal", "d3.geo.mercator", "d3.geo.miller", "d3.geo.mollweide", "d3.geo.naturalEarth", "d3.geo.nellHammer", "d3.geo.hammer", "d3.geo.robinson", "d3.geo.sinusoidal", "d3.geo.vanDerGrinten", "d3.geo.wagner6", "d3.geo.wagner7", "d3.geo.winkel3", "d3.scale.ordinal", "d3.scale.linear", "d3.scale.sqrt", "d3.svg.line", "d3.svg.axis", "d3.tsv", "d3.extent", "d3.geo.projection"], "readme": "A mashup of [Map Projection Distortions](http://bl.ocks.org/3709000) and [transitions](http://bl.ocks.org/mbostock/3711652) using the [D3.js extended geographic projections plugin](https://github.com/d3/d3-geo-projection/).\n\nA comparison of map projections by four different types of distortion:\n\n* **Acc. 40\u00b0 150**% \u2013 The Acceptance index is a numerical measure that summarizes overall projection distortion, in this case with a maximum angular distortion of 40\u00b0 and areal distortion of up to 150%.\n* **Scale** \u2013 The weighted mean error for overall scale distortion.\n* **Areal** \u2013 The weighted mean error for areal distortion.\n* **Angular** \u2013 The mean angular deformation index.\n\nLower is better. Data transcribed from the [Natural Earth Projection](http://www.shadedrelief.com/NE_proj/distortion.html) by [@mbostock](http://bost.ocks.org/mike/).\n\nRead more about [map projections on Wikipedia](http://en.wikipedia.org/wiki/Map_projection#Projections_by_surface).\n", "description": "Comparing Map Projections"}, {"uid": "syntagmatic_be815e45b9e172552f43", "created_at": "2015-08-15T05:35:34Z", "updated_at": "2015-08-29T14:27:27Z", "api": ["d3.svg.arc", "d3.select", "d3.range", "d3.scale.linear", "d3.timer"], "readme": "Based on [PolarClock](http://bl.ocks.org/mbostock/1096355)\n", "description": "Polar Clock"}, {"uid": "syntagmatic_4446b31c6cd746eedaeb", "created_at": "2015-08-08T08:13:01Z", "updated_at": "2016-04-29T14:43:20Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.time.scale", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.functor", "d3.svg.brush", "d3.tsv.format", "d3.event.sourceEvent.stopPropagation", "d3.selectAll", "d3.text", "d3.csv.format"], "readme": "[Space station orbit data](http://www.celestrak.com/NORAD/elements/stations.txt) in [Two-Element Format](http://www.celestrak.com/NORAD/documentation/tle-fmt.asp). Data collected at 1:40am PDT August 8, 2015.\n", "description": "Space Stations"}, {"uid": "SkiWether_f2afd0b8a8bacb4f24c8", "created_at": "2015-08-06T21:36:23Z", "updated_at": "2015-08-29T14:26:48Z", "api": ["d3.layout.chord", "d3.scale.ordinal", "d3.range", "d3.select", "d3.svg.arc", "d3.svg.chord"], "readme": "Inspiration from Mike Bostock's chord diagram examples and others. Also the [API reference layout for the chord layout.](https://github.com/mbostock/d3/wiki/Chord-Layout)\n", "description": "Chord diagram showing co-occurrences."}, {"uid": "syntagmatic_94be812f8b410ae29ee2", "created_at": "2015-08-05T01:17:58Z", "updated_at": "2016-04-29T14:45:14Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.time.scale", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.dsv", "d3.functor", "d3.svg.brush", "d3.tsv.format", "d3.event.sourceEvent.stopPropagation", "d3.selectAll"], "readme": "http://www.msha.gov/OpenGovernmentData/OGIMSHA.asp", "description": "Mining Accidents"}, {"uid": "tomshanley_805bdecd1a3257e379be", "created_at": "2015-07-24T03:46:26Z", "updated_at": "2015-08-29T14:25:42Z", "api": ["d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest", "d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.csv", "d3.keys", "d3.behavior.drag", "d3.selectAll"], "readme": "Sankey with highlighting and CSV import\nIncorporates the solution from http://bl.ocks.org/d3noob/c9b90689c1438f57d649 for converting a CSV file with links into the required data format for the Sankey plugin.", "description": "Sankey with highlighting and CSV import"}, {"uid": "trinary_b1a5f453c51231cd7bb5", "created_at": "2015-07-19T18:40:26Z", "updated_at": "2015-08-29T14:25:18Z", "api": ["d3.time.format", "d3.bisector", "d3.format", "d3.scale.linear", "d3.time.scale", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.mouse"], "readme": "A [line chart](../3883245) with mouseover so that you can read the *y*-value based on the closest *x*-value. The *x*-value is found using d3.mouse and scale.invert. The *y*-value is then found by bisecting the data.", "description": null}, {"uid": "steveharoz_a7940564727873993382", "created_at": "2015-07-03T16:00:37Z", "updated_at": "2015-08-29T14:24:13Z", "api": [], "readme": "", "description": ""}, {"uid": "syntagmatic_0613ee9324e989a6fb6b", "created_at": "2015-07-02T17:13:37Z", "updated_at": "2016-05-21T02:43:56Z", "api": ["d3.map", "d3.scale.quantile", "d3.range", "d3.geo.albersUsa", "d3.geo.path", "d3.select", "d3.mouse"], "readme": "Hover over map on left to see zoomed in area on right.\n", "description": "Map Loupe"}, {"uid": "syntagmatic_8ff691209324f1814257", "created_at": "2015-06-24T11:35:49Z", "updated_at": "2015-09-12T10:43:22Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.range", "d3.svg.line", "d3.select", "d3.csv", "d3.shuffle", "d3.functor", "d3.svg.brush", "d3.tsv.format", "d3.event.sourceEvent.stopPropagation", "d3.selectAll"], "readme": "A random sample of 100 infant deaths from 2009 colored by infant's sex.\n\nThis is a work in progress.\n\nSee [2009 Cohort Linked Birth/Infant Death Data Set Guide (pdf)](http://www.nber.org/lbid/docs/LinkCO09Guide.pdf). \n\nSource: [National Bureau of Economic Research](http://www.nber.org/data/linked-birth-infant-death-data-vital-statistics-data.html)\n", "description": "Infant Deaths"}, {"uid": "syntagmatic_0d4f736796ab7b465020", "created_at": "2015-06-21T01:52:58Z", "updated_at": "2016-04-29T14:44:33Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.shuffle", "d3.functor", "d3.svg.brush", "d3.tsv.format", "d3.event.sourceEvent.stopPropagation", "d3.selectAll"], "readme": "A random sample of 750 [Abalone measurements](http://archive.ics.uci.edu/ml/datasets/Abalone) from [UCI Machine Learning Repository](http://archive.ics.uci.edu/ml/datasets.html).\n\n### Dimensions\n\n```\nName    Data Type Meas. Description\n----    --------- ----- -----------\nSex   nominal     M, F, and I (infant)\nLength    continuous  mm  Longest shell measurement\nDiameter  continuous  mm  perpendicular to length\nHeight    continuous  mm  with meat in shell\nWhole weight  continuous  grams whole abalone\nShucked weight  continuous  grams weight of meat\nViscera weight  continuous  grams gut weight (after bleeding)\nShell weight  continuous  grams after being dried\nRings   integer     +1.5 gives the age in years\n\n```\n", "description": "Abalone"}, {"uid": "williaster_c66f80d5b95c4c48c4da", "created_at": "2015-05-26T06:11:14Z", "updated_at": "2015-08-29T14:21:54Z", "api": ["d3.select", "d3.geo.mercator", "d3.geo.path", "d3.scale.category10", "d3.scale.sqrt", "d3.json", "d3.csv", "d3.time.format", "d3.extent", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.svg.brush"], "readme": "", "description": "Linking map data to an interactive timeline in d3"}, {"uid": "williaster_83419dc5b04f7a6f98f4", "created_at": "2015-05-26T06:05:44Z", "updated_at": "2015-08-29T14:21:54Z", "api": ["d3.select", "d3.geo.mercator", "d3.geo.path", "d3.scale.category10", "d3.scale.sqrt", "d3.json", "d3.csv", "d3.time.format", "d3.extent", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.svg.brush"], "readme": "", "description": "Linking map data to an interactive timeline in d3"}, {"uid": "williaster_94424cc846e24f5d2f17", "created_at": "2015-05-26T05:55:50Z", "updated_at": "2015-08-29T14:21:54Z", "api": ["d3.select", "d3.geo.mercator", "d3.geo.path", "d3.scale.category10", "d3.scale.sqrt", "d3.json", "d3.csv", "d3.time.format", "d3.extent", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.svg.brush"], "readme": "", "description": "Linking map data to an interactive timeline in d3"}, {"uid": "stelt_74c8ed68dc9c5ea1e1cc", "created_at": "2015-04-22T23:45:02Z", "updated_at": "2015-08-29T14:19:42Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "", "description": ""}, {"uid": "stelt_5daf817c1506bb6343d7", "created_at": "2015-04-07T13:01:42Z", "updated_at": "2015-08-29T14:18:38Z", "api": ["d3.layout.cluster", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "A dendrogram is a node-link diagram that places leaf nodes of the tree at the same depth. In this example, the classes (leaf nodes) are aligned on the right edge, with the packages (internal nodes) to the left. Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, courtesy Jeff Heer.\n\nCompare to this [radial layout](/mbostock/4339607).", "description": null}, {"uid": "SpaceActuary_69e7f74035787955bcf9", "created_at": "2015-03-26T07:17:51Z", "updated_at": "2016-05-12T15:56:14Z", "api": ["d3.range", "d3.map", "d3.scale.quantize", "d3.zip", "d3.scale.linear", "d3.legend.color", "d3.format", "d3.select", "d3.geo.albersUsa", "d3.geo.path", "d3.selectAll"], "readme": "This choropleth encodes unemployment rates from 2008 with a [quantize scale](https://github.com/mbostock/d3/wiki/Quantitative-Scales#wiki-quantize) ranging from 0 to 15%. A [threshold scale](../3306362) is a useful alternative for coloring arbitrary ranges.", "description": "Choropleth Scales"}, {"uid": "syntagmatic_df47616fe2f7b683c256", "created_at": "2015-03-13T23:22:19Z", "updated_at": "2015-08-29T14:17:04Z", "api": ["d3.time.scale", "d3.scale.ordinal", "d3.svg.axis", "d3.select", "d3.json", "d3.extent"], "readme": "", "description": "EcoEngine Scatterplot"}, {"uid": "syntagmatic_28f1fbeb41df9753e120", "created_at": "2015-03-07T08:33:24Z", "updated_at": "2015-08-29T14:16:42Z", "api": ["d3.scale.ordinal", "d3.select", "d3.sankey", "d3.json", "d3.selectAll"], "readme": "A refactored version of Sara Quigley's [Issue Breakdown](http://bl.ocks.org/saraquigley/raw/5194141/) as a simple example of a [Sankey diagram](http://bost.ocks.org/mike/sankey/)\n", "description": "Issue Breakdown"}, {"uid": "xaranke_35206deb4e16d73be682", "created_at": "2015-01-14T13:33:46Z", "updated_at": "2015-08-29T14:13:26Z", "api": [], "readme": "", "description": "vikings_protest"}, {"uid": "tomgp_77772ee20f8d509ad5b4", "created_at": "2015-01-13T11:28:39Z", "updated_at": "2015-08-29T14:13:22Z", "api": ["d3.range", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select"], "readme": "based on http://bl.ocks.org/mbostock/3310323 this shows how you put gaps in your line for missinng data -- here denoted by randomly inserting NaN values (so you may need to refresh the page if you don't see any breaks)", "description": "line interpolation with gaps"}, {"uid": "thedod_12c2e8a92d521144e146", "created_at": "2014-12-17T11:34:16Z", "updated_at": "2015-08-29T14:11:37Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.json", "d3.time.format.utc", "d3.extent", "d3.max"], "readme": "### Twister daily traffic graph ([demo](http://bl.ocks.org/thedod/12c2e8a92d521144e146))\n\nA [D3](https://d3js.com) visualization of [Twister](http://twister.net.co) traffic statistics from [TwisterIO](https://twisterio.com/statistics).\n\n----\n\nThis code was [forked](https://gist.github.com/d3noob/e34791a32a54e015f57d)\nfrom a [d3noobs example](http://www.d3noob.org/2013/01/using-multiple-axes-for-d3js-graph.html).\n\nThanks.\n\n#### Original readme\n\nThis is a follow on from the [dual line d3.js graph](http://bl.ocks.org/d3noob/8603837) used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt demonstrates the use of dual y axes to represent two different graph lines and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.\n", "description": "Twister daily traffic (D3 visualization of TwisterIO stats)"}, {"uid": "weiglemc_bdc0474429e6567bc320", "created_at": "2014-12-15T16:33:03Z", "updated_at": "2015-08-29T14:11:28Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.scale.category20", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "Scatterplot of 2014 NCAA Passing Statistics\n\nData from http://www.sports-reference.com/cfb/years/2014-passing.html\n\nScatterplot based on http://bl.ocks.org/mbostock/3887118, tooltip example from http://www.d3noob.org/2013/01/adding-tooltips-to-d3js-graph.html", "description": "D3 Scatterplot of 2014 NCAA Passing Statistics"}, {"uid": "wboykinm_6a14e910b5738c89e239", "created_at": "2014-12-09T17:52:52Z", "updated_at": "2015-11-05T18:41:35Z", "api": ["d3.select", "d3.json", "d3.geo.transform", "d3.geo.path"], "readme": "", "description": "Edge blur filter w/ D3"}, {"uid": "wboykinm_e17149be752de37a85fe", "created_at": "2014-12-02T19:15:46Z", "updated_at": "2015-08-29T14:10:42Z", "api": [], "readme": "", "description": "Negative buffer with turf.js"}, {"uid": "skokenes_511c5b658c405ad68941", "created_at": "2014-11-26T18:03:17Z", "updated_at": "2015-08-29T14:10:23Z", "api": ["d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.select", "d3.lasso", "d3.tsv", "d3.extent", "d3.selectAll"], "readme": "This example demonstrates incorporating the d3 lasso plugin with a d3 scatterplot. Clicking and dragging on the plot area will produce a lasso that can be used to hover or loop around the dots in the scatterplot. Functions are then executed based on whether dots were selected or not.\n\nThe lasso plugin can be found [here](https://github.com/skokenes/D3-Lasso-Plugin).", "description": "Scatterplot with Lasso"}, {"uid": "veltman_e71f13cd32169f319625", "created_at": "2014-11-14T22:53:04Z", "updated_at": "2015-08-29T14:09:32Z", "api": [], "readme": "", "description": "Wherewolf.js demo - burger access for random points"}, {"uid": "tomshanley_b800db97f69506752a58", "created_at": "2014-11-14T02:35:37Z", "updated_at": "2015-08-29T14:09:29Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.scale.category10", "d3.csv", "d3.keys", "d3.extent", "d3.svg.brush", "d3.select"], "readme": "Adapted from http://bl.ocks.org/mbostock/4063663, this only chooses certain combinations of dimensions to display in a 3x1 matrix", "description": "Brush scatterplot, three by one matrix"}, {"uid": "tomshanley_65d449e19a24924e28a7", "created_at": "2014-11-14T02:21:30Z", "updated_at": "2015-08-29T14:09:29Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max", "d3.ascending", "d3.selection.prototype.attr.apply", "d3.selection.prototype.style.apply", "d3.functor", "d3.map"], "readme": "Based on http://bl.ocks.org/mbostock/3885705.  Updated for the BA Dev Day talk", "description": "Sortable bar chart"}, {"uid": "tomshanley_eb91ef68c59e544ee312", "created_at": "2014-11-14T02:20:28Z", "updated_at": "2015-08-29T14:09:29Z", "api": ["d3.scale.category20b", "d3.scale.ordinal", "d3.layout.treemap", "d3.select", "d3.selectAll", "d3.csv", "d3.nest"], "readme": "D3 Treemap with mouseover events to show details about each website and link to the site.  PLEASE NOTE - that this is using dummy data!", "description": "Treemap Websites 2"}, {"uid": "wboykinm_51c8120ac8c194ecb629", "created_at": "2014-11-12T02:49:55Z", "updated_at": "2015-08-29T14:09:18Z", "api": ["d3.select", "d3.range", "d3.scale.linear", "d3.timer.flush", "d3.functor", "d3.quantile", "d3.box", "d3.csv", "d3.max"], "readme": "A box-and-whisker plot uses simple glyphs that summarize a quantitative distribution with five standard statistics: the smallest value, lower quartile, median, upper quartile, and largest value. This summary approach allows the viewer to easily recognize differences between distributions. Data from the [Michelson\u2013Morley experiment](http://en.wikipedia.org/wiki/Michelson\u2013Morley_experiment). Implementation contributed by [Jason Davies](http://www.jasondavies.com/). This example periodically randomizes the values to demonstrate transitions.", "description": null}, {"uid": "timelyportfolio_19ec57a6935ca580d00e", "created_at": "2014-11-06T17:40:28Z", "updated_at": "2015-08-29T14:08:46Z", "api": ["d3.select", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.time.scale", "d3.extent", "d3.svg.brush", "d3.time.format", "d3.time.day.offset", "d3.time.month.round", "d3.mouse"], "readme": "Forked from Mike Bostock's [brush as slider example](https://gist.github.com/mbostock/6452972), I use the brush/slider to drive an interactive exploration of the US Yield Curve.  I think this is a much more helpful way of showing the data than the animated GIF from [Treasury yield curve from the Volcker era through Greenspan, Bernanke, and Yellen](http://isomorphism.es/post/101890975168/treasury-yield-curve-from-the-volcker-era-through).\n\n<h4>Original Readme.md</h4>\nBy customizing the display of D3'\u0080\u0099s [brush component](https://github.com/mbostock/d3/wiki/SVG-Controls), you can make a single-handle slider. Or, by using [custom resize handles](/mbostock/4349545), you can make a two-handled slider.", "description": "Yield Curve Animation with a d3.js brush as slider"}, {"uid": "wboykinm_56da040e1ce55a130dc3", "created_at": "2014-11-05T18:57:49Z", "updated_at": "2015-08-29T14:08:40Z", "api": ["d3.scale.linear", "d3.svg.brush", "d3.select", "d3.svg.axis", "d3.mouse", "d3.hsl"], "readme": "By customizing the display of D3\u2019s [brush component](https://github.com/mbostock/d3/wiki/SVG-Controls), you can make a single-handle slider. Or, by using [custom resize handles](/mbostock/4349545), you can make a two-handled slider.", "description": null}, {"uid": "ThomasG77_ba74aeceb82ba00ca603", "created_at": "2014-11-05T04:59:18Z", "updated_at": "2015-08-29T14:08:38Z", "api": ["d3.scale.threshold", "d3.scale.linear", "d3.svg.axis", "d3.select"], "readme": "A Leaflet.js map created with Folium and a custom D3 threshold scale, with data bound between the Pandas DataFrame and the TopoJSON. See the [Gist](https://gist.github.com/wrobstory/5609959#file-choro-py) for the python code to generate the dataframe. The map was generated with the following Python code:\n\n```python\nmap_3 = folium.Map(location=[40, -99], zoom_start=4)\nmap_3.geo_json(geo_path=county_geo, data_out='data3.json', data=df,\n               columns=['GEO_ID', 'Median_Household_Income_2011'],\n               key_on='feature.id',\n               fill_color='PuRd', line_opacity=0.3,\n               legend_name='Median Household Income 2011 ($)',\n               topojson='objects.us_counties_20m')\nmap_3.create_map(path='map_3.html')\n```", "description": null}, {"uid": "xaranke_d11eba32a7fd5109d607", "created_at": "2014-10-30T21:29:22Z", "updated_at": "2016-04-16T03:23:55Z", "api": [], "readme": "", "description": "stVikings"}, {"uid": "thedod_755852663855d680c483", "created_at": "2014-10-28T04:24:11Z", "updated_at": "2015-08-29T14:08:15Z", "api": [], "readme": "### Disclaimer: SATIRE!!!1\nA variation on [torcriminalbrowser.com](http://torcriminalbrowser.com) code that also has a \"criminal mode\". CSS only (can even criminalize a browser with no-JS :) ).\n\n[Watch this live at bl.ocks.org](http://bl.ocks.org/thedod/raw/755852663855d680c483/)\n", "description": "Checkbox to \"criminalizate\" torcriminalbrowser.com :)"}, {"uid": "wboykinm_b90873f4015fd8a8759e", "created_at": "2014-09-22T02:38:07Z", "updated_at": "2015-08-29T14:06:45Z", "api": [], "readme": "", "description": "Leaflet Swipe between OpenCycleMap and Stamen Watercolor"}, {"uid": "ThomasG77_a217bb64a918f19ec244", "created_at": "2014-09-22T02:23:44Z", "updated_at": "2015-08-29T14:06:45Z", "api": [], "readme": "", "description": "Leaflet swipe (Adapted from https://www.mapbox.com/mapbox.js/example/v1.0.0/swipe-layers/ to use only Leaflet and not the MapBox API)"}, {"uid": "tomshanley_4c9b8133d711a32d789d", "created_at": "2014-09-17T18:57:14Z", "updated_at": "2015-08-29T14:06:37Z", "api": ["d3.scale.category20c", "d3.layout.treemap", "d3.select", "d3.json", "d3.selectAll"], "readme": "Treemap with ability to highlight nodes that meet a criteria (OR statement)", "description": "Treemap websites"}, {"uid": "timelyportfolio_862dcabf010da04b9b5b", "created_at": "2014-09-16T01:37:10Z", "updated_at": "2016-04-26T08:08:54Z", "api": ["d3.set", "d3.sum", "d3.interpolate", "d3.select"], "readme": "", "description": null}, {"uid": "timelyportfolio_5c136de85de1c2abb6fc", "created_at": "2014-09-10T19:06:52Z", "updated_at": "2016-04-26T10:57:54Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.brush", "d3.svg.area", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "# Programmatically Control a d3 brush\nForked from Mike Bostock's [focus+context zoom gist](https://gist.github.com/mbostock/1667367) to demonstrate how we can drive a d3 brush with code.\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>anybody know how to brush with code in <a href=\"https://twitter.com/hashtag/d3js?src=hash\">#d3js</a>?</p>&mdash; klr (@timelyportfolio) <a href=\"https://twitter.com/timelyportfolio/status/509701031585148928\">September 10, 2014</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nSo I found [this discussion](https://groups.google.com/forum/#!topic/d3-js/vNaR-vJ9hMg), but I could not find an example demonstrating the steps proposed by Athan Reines.\n\n<pre>\nFor auto-redraw such that the focus of a 1D brush matches the graphed domain, you need to do as follows:\n\n(1) Apply the brush scale to the graphed domain (i.e., the brush extent) --> store in var brushExtent; (units: pixels)\n(2) Within the brush element (class='brush'), select the <rect> with class='extent'.\n(3) If the brush is horizontal (i.e., for the x-axis), set the 'x' attribute to the first value in brushExtent. This moves the start position of the focus <rect> to match the graphed domain. If the brush is vertical (i.e., for the y-axis), set the 'y' attribute to the second value in brushExtent.\n(4) Next, set the 'width' attribute of the extent to brushExtent[1] - brushExtent[0]. The end of the brush focus is brushExtent[1], but the length of the focus is this minus the offset introduced by brushExtent[0]. (If a y-axis brush, switch [0] and [1]).\n\n(*) The extent should now programmatically match the graphed domain.\n\nI use this procedure as part of a resize function. Hope this works. \n\n-KG\n</pre>\n\nI do not follow the steps exactly.  Here is the code that drives our brush when a button is clicked.\n\n```\n  function drawBrush() {\n    // our year will this.innerText\n    console.log(this.innerText)\n\n    // define our brush extent to be begin and end of the year\n    brush.extent([new Date(this.innerText + '-01-01'), new Date(this.innerText + '-12-31')])\n\n    // now draw the brush to match our extent\n    // use transition to slow it down so we can see what is happening\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush(d3.select(\".brush\").transition());\n\n    // now fire the brushstart, brushmove, and brushend events\n    // remove transition so just d3.select(\".brush\") to just draw\n    brush.event(d3.select(\".brush\").transition().delay(1000))\n  }\n```\n\n<hr/>\n### Original Readme.md\nThis examples demonstrates how to use D3's brush component to implement focus + context zooming. Click and drag in the small chart below to pan or zoom.", "description": "demo programmatic control of a d3 brush"}, {"uid": "timelyportfolio_d6f109f8dc5690b59f47", "created_at": "2014-09-09T21:27:39Z", "updated_at": "2015-08-29T14:06:16Z", "api": ["d3.select", "d3.selectAll"], "readme": "", "description": "r calpuff | sparse interactivity example using d3.js"}, {"uid": "timelyportfolio_adc2dfee7aef48ce5485", "created_at": "2014-09-08T20:55:58Z", "updated_at": "2015-08-29T14:06:12Z", "api": ["d3.select", "d3.layout.tree", "d3.svg.diagonal", "d3.transform", "d3.behavior.zoom", "d3.selectAll", "d3.behavior.drag", "d3.event.sourceEvent.stopPropagation", "d3.mouse", "d3.max", "d3.scale.linear"], "readme": "", "description": " rCharts + d3.js view of rpart with sankey-like link width"}, {"uid": "timelyportfolio_d49cb07923eff7a75886", "created_at": "2014-09-05T21:16:36Z", "updated_at": "2015-08-29T14:06:06Z", "api": ["d3.select", "d3.layout.tree", "d3.svg.diagonal", "d3.transform", "d3.behavior.zoom", "d3.selectAll", "d3.behavior.drag", "d3.event.sourceEvent.stopPropagation", "d3.mouse", "d3.max"], "readme": "", "description": "rCharts + d3.js interactive view of a rpart / partykit recursive partioning object"}, {"uid": "syntagmatic_b2fc3a5263e260dc6cb2", "created_at": "2014-08-25T07:05:07Z", "updated_at": "2015-08-29T14:05:39Z", "api": ["d3.scale.category20c", "d3.layout.treemap", "d3.select", "d3.csv", "d3.nest", "d3.mouse"], "readme": "Data scraped from [VFINX 500 holdings](https://personal.vanguard.com/us/FundsAllHoldings?FundId=0040&FundIntExt=INT&tableName=Equity&tableIndex=0) on August 25, 2014.", "description": "VFINX 500 Treemap"}, {"uid": "timelyportfolio_79350d7475a5709b051e", "created_at": "2014-08-21T01:33:44Z", "updated_at": "2015-08-29T14:05:29Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.keys", "d3.nest", "d3.behavior.drag", "d3.rgb", "d3.selectAll"], "readme": "", "description": "color your d3 sankey using rCharts"}, {"uid": "ufenegga_d74b3b7020db99e876ca", "created_at": "2014-08-09T05:52:16Z", "updated_at": "2015-08-29T14:05:06Z", "api": ["d3.quantile", "d3.min", "d3.zip.apply", "d3.event.preventDefault", "d3.ns.qualify", "d3.requote", "d3.select", "d3.map", "d3.rebind", "d3.interpolateZoom", "d3.mouse", "d3.touches", "d3.selectAll", "d3.rgb", "d3.dispatch", "d3.dsv", "d3.round", "d3.formatPrefix", "d3.locale", "d3.geo.stream", "d3.merge", "d3.geo.conicEqualArea", "d3.geo.albers", "d3.geo.albersUsa", "d3.range", "d3.geo.distance", "d3.geom.voronoi", "d3.hcl", "d3.hsl", "d3.lab", "d3.transform", "d3.geom.quadtree", "d3.timer", "d3.behavior.drag", "d3.layout.hierarchy", "d3.sum", "d3.permute", "d3.bisect", "d3.max", "d3.random.normal.apply", "d3.random.irwinHall", "d3.range.apply", "d3.format", "d3.scale.linear", "d3.scale.pow", "d3.scale.ordinal", "d3.svg.diagonal", "d3.ease.apply", "d3.transition"], "readme": "This visualisation removes point from the quadtree, and collapses nodes as necessary", "description": "Quadtree, node removal"}, {"uid": "ufenegga_7d4088b76ff31f27af68", "created_at": "2014-08-08T19:07:30Z", "updated_at": "2015-08-29T14:05:06Z", "api": ["d3.quantile", "d3.min", "d3.zip.apply", "d3.event.preventDefault", "d3.ns.qualify", "d3.requote", "d3.select", "d3.map", "d3.rebind", "d3.interpolateZoom", "d3.mouse", "d3.touches", "d3.selectAll", "d3.rgb", "d3.dispatch", "d3.dsv", "d3.round", "d3.formatPrefix", "d3.locale", "d3.geo.stream", "d3.merge", "d3.geo.conicEqualArea", "d3.geo.albers", "d3.geo.albersUsa", "d3.range", "d3.geo.distance", "d3.geom.voronoi", "d3.hcl", "d3.hsl", "d3.lab", "d3.transform", "d3.geom.quadtree", "d3.timer", "d3.behavior.drag", "d3.layout.hierarchy", "d3.sum", "d3.permute", "d3.bisect", "d3.max", "d3.random.normal.apply", "d3.random.irwinHall", "d3.range.apply", "d3.format", "d3.scale.linear", "d3.scale.pow", "d3.scale.ordinal", "d3.svg.diagonal", "d3.ease.apply", "d3.transition"], "readme": "I am toying with the d3 quadtree.\nA reference to the parent node have been added to each node.\nThis visualisation traverses the points and highlight parent nodes", "description": "Quadtree points and parent nodes"}, {"uid": "ufenegga_ddd15d786ed538d17fbc", "created_at": "2014-08-05T06:37:40Z", "updated_at": "2015-08-29T14:04:54Z", "api": ["d3.select", "d3.timer"], "readme": "Based on [Jason Davies\u2019 implementation](https://www.jasondavies.com/poisson-disc/) of Bridson\u2019s algorithm. See the [related explanation](/mbostock/dbb02448b0f93e4c82c3).\n", "description": null}, {"uid": "steveharoz_440963591fcff26cb10f", "created_at": "2014-08-04T04:33:01Z", "updated_at": "2015-08-29T14:04:53Z", "api": ["d3.geom.polygon", "d3.svg.line", "d3.select", "d3.timer", "d3.geom.voronoi", "d3.range"], "readme": "I'm just adding a little color to [Mike Bostock's demo](http://bl.ocks.org/mbostock/4636377).\n\n[Mario Klingemann](http://mario-klingemann.tumblr.com/) has made some beautiful Voronoi diagrams. This is my attempt to recreate them using [D3](http://d3js.org). To achieve the curved cells, each side of the Voronoi polygon is subdivided into three equal-length segments and then joined using the \"basis-closed\" line interpolator. There are some discontinuities in the animation when the sides of a polygon approach zero which could likely be avoided by adding a minimum-length threshold to the subdivision.\n\nIf you\u2019d like to see other instances of this pattern, Mario [describes the algorithm](http://www.flickr.com/photos/quasimondo/8254540763/) on Flickr.", "description": "Colorful Rotating Voronoi"}, {"uid": "tomshanley_12152907c745fdf070a7", "created_at": "2014-07-06T06:17:05Z", "updated_at": "2016-03-11T01:50:59Z", "api": ["d3.scale.ordinal", "d3.select", "d3.csv", "d3.max", "d3.scale.linear", "d3.svg.brush", "d3.svg.arc", "d3.svg.axis", "d3.svg.line", "d3.nest", "d3.tip", "d3.selectAll", "d3.selection.prototype.attr.apply", "d3.selection.prototype.style.apply", "d3.functor", "d3.map"], "readme": "Customer Experience Mapping with transitions.  Uses Brush and Transitions to allow you select different views and zoom in.", "description": "Customer Experience Mapping with transitions"}, {"uid": "tomshanley_b0b6db443c550dac855c", "created_at": "2014-06-29T19:46:47Z", "updated_at": "2015-08-29T14:03:14Z", "api": ["d3.select", "d3.selection.prototype.attr.apply", "d3.selection.prototype.style.apply", "d3.functor", "d3.map", "d3.scale.ordinal", "d3.csv", "d3.nest", "d3.ascending", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.svg.line", "d3.tip", "d3.mean"], "readme": "Customer Experience Mapping - WIP, so please ignore the attrocious coding.", "description": "Customer Experience Mapping"}, {"uid": "syntagmatic_a9ebf1e41558d6eebdc1", "created_at": "2014-06-24T20:26:48Z", "updated_at": "2015-08-29T14:02:59Z", "api": ["d3.layout.treemap", "d3.scale.log", "d3.select", "d3.json", "d3.extent", "d3.nest", "d3.selectAll", "d3.mouse"], "readme": "", "description": "Reddit Treemap 2"}, {"uid": "syntagmatic_b6821801c222d4d3bfe0", "created_at": "2014-06-22T21:42:39Z", "updated_at": "2015-08-29T14:02:53Z", "api": ["d3.scale.category20c", "d3.layout.treemap", "d3.select", "d3.json", "d3.nest"], "readme": "Based on the [Treemap example](http://bl.ocks.org/mbostock/4063582).\n", "description": "Reddit Treemap"}, {"uid": "timelyportfolio_40c3e561beec61224356", "created_at": "2014-06-10T14:48:13Z", "updated_at": "2015-08-29T14:02:25Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.select", "d3.svg.line", "d3.range", "d3.quantile", "d3.min", "d3.zip.apply", "d3.event.preventDefault", "d3.ns.qualify", "d3.requote", "d3.map", "d3.rebind", "d3.interpolateZoom", "d3.mouse", "d3.touches", "d3.selectAll", "d3.rgb", "d3.dispatch", "d3.dsv", "d3.round", "d3.formatPrefix", "d3.locale", "d3.geo.stream", "d3.merge", "d3.geo.conicEqualArea", "d3.geo.albers", "d3.geo.albersUsa", "d3.geo.distance", "d3.geom.voronoi", "d3.hcl", "d3.hsl", "d3.lab", "d3.transform", "d3.geom.quadtree", "d3.timer", "d3.behavior.drag", "d3.layout.hierarchy", "d3.sum", "d3.permute", "d3.bisect", "d3.max", "d3.random.normal.apply", "d3.random.irwinHall", "d3.range.apply", "d3.format", "d3.scale.pow", "d3.scale.ordinal", "d3.svg.diagonal", "d3.ease.apply", "d3.transition"], "readme": "", "description": null}, {"uid": "VisDockHub_f9c00b6182e85221ecf4", "created_at": "2014-05-21T09:42:53Z", "updated_at": "2015-08-29T14:01:39Z", "api": ["d3.scale.category20", "d3.layout.force", "d3.select", "d3.json", "d3.selectAll"], "readme": "", "description": "Test force directed"}, {"uid": "tomshanley_7a9fd25217466b28f575", "created_at": "2014-05-21T06:35:45Z", "updated_at": "2015-08-29T14:01:38Z", "api": ["d3.select", "d3.selection.prototype.attr.apply", "d3.selection.prototype.style.apply", "d3.functor", "d3.map", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.nest", "d3.layout.stack", "d3.tip", "d3.tsv", "d3.max", "d3.range", "d3.selectAll"], "readme": "Adapts the \"Stacked to multiples\" chart (http://bl.ocks.org/mbostock/4679202) \n\nThis chart shows how small changes in sub-categories affect the total value.", "description": "Capabilities - Stacked to multiple "}, {"uid": "tomshanley_11392275", "created_at": "2014-04-29T06:42:52Z", "updated_at": "2015-08-29T14:00:41Z", "api": ["d3.format", "d3.scale.category20", "d3.sankey", "d3.select", "d3.behavior.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest"], "readme": "", "description": "Sankey with circular references"}, {"uid": "tomshanley_11277583", "created_at": "2014-04-25T04:20:12Z", "updated_at": "2016-03-21T00:49:11Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.json", "d3.behavior.drag", "d3.selectAll", "d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest"], "readme": "An adaptation of the Sankey diagram to show traceability of project outputs through to benefits. Double clicking on a node shows the links up and down the model.\n\nWe adapted the sankey.js file so that node heights weren't determined by the number and size of incoming/outgoing links, and aligned the ends of the links to the middle of the nodes.\n\nThanks to Simon Titheridge!", "description": "Sankey - highlight links by doubleclicking nodes"}, {"uid": "zross_11186669", "created_at": "2014-04-22T16:58:24Z", "updated_at": "2015-12-18T09:31:05Z", "api": ["d3.select", "d3.json", "d3.geo.transform", "d3.geo.path"], "readme": "", "description": "TopoJSON to LeafletJS Using D3.js"}, {"uid": "tomshanley_11097618", "created_at": "2014-04-19T21:10:47Z", "updated_at": "2015-08-29T14:00:10Z", "api": ["d3.format", "d3.scale.category20", "d3.scale.ordinal", "d3.select", "d3.sankey", "d3.json", "d3.selectAll", "d3.behavior.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest"], "readme": "Sankey chart with the sankey.js amended to sort the links alphabetically by d.category.  An improvement will be to sort by d.category and then by its source/target node.", "description": "Sankey chart with links sorted by category"}, {"uid": "wboykinm_10499388", "created_at": "2014-04-11T20:34:16Z", "updated_at": "2015-08-29T13:59:06Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category20c", "d3.svg.axis", "d3.layout.stack", "d3.nest", "d3.svg.area", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "", "description": "Stacked area chart, dead in the water"}, {"uid": "VisDockHub_10224067", "created_at": "2014-04-09T03:40:59Z", "updated_at": "2015-08-29T13:58:33Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.csv", "d3.keys", "d3.select"], "readme": "The VisDock toolkit has been integrated into this Stacked Bar Chart example built with D3.js (found <a href=\"http://bl.ocks.org/mbostock/3886394\">here</a>) by <a href=\"http://bl.ocks.org/mbostock/\">Mike Bostock</a>. This example is similar to another stacked bar example with VisDock, which can be found <a href=\"http://bl.ocks.org/visdockhub/9733594\">here</a>. This example requires only very small change to the original source code. Using selection and other tools, users can query stacked bars made of rectangular elements, and explore the plot closely using Pan & Zoom tools. For more information about VisDock, cick on <a href=\"http://visdockhub.github.io/NewVisDock/\">the link</a>.\n", "description": "VisDock in Normalized Stacked Bar Chart"}, {"uid": "wboykinm_10054222", "created_at": "2014-04-07T21:02:19Z", "updated_at": "2015-08-29T13:58:15Z", "api": ["d3.scale.linear", "d3.svg.brush", "d3.select", "d3.scale.category20", "d3.layout.pie", "d3.svg.arc"], "readme": "Update a donut chart extent based on a dragged brush extent", "description": "Coordinating a brush and a donut"}, {"uid": "wboykinm_10033259", "created_at": "2014-04-07T19:14:50Z", "updated_at": "2015-08-29T13:58:13Z", "api": ["d3.scale.linear", "d3.svg.brush", "d3.select"], "readme": "I put together a stripped-down version of a D3 [brush selector](https://github.com/mbostock/d3/wiki/SVG-Controls) to serve as a pallette for chart interactivity. I'll use it as a controller for other visualization interactions, like sliding extent on a pie chart or time range on a map.", "description": "A Lonely Brush"}, {"uid": "wboykinm_10021376", "created_at": "2014-04-07T14:31:00Z", "updated_at": "2015-08-29T13:58:12Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max"], "readme": "This grouped bar chart is constructed from a CSV file storing the populations of different states by age group. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding and color encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting#wiki-d3_format) - SI prefix formatting (e.g., \u201c10M\u201d for 10,000,000)\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n", "description": null}, {"uid": "wboykinm_9841989", "created_at": "2014-03-28T20:13:14Z", "updated_at": "2015-08-29T13:57:52Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.brush", "d3.svg.area", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This examples demonstrates how to use D3's brush component to implement focus + context zooming. Click and drag in the small chart below to pan or zoom.", "description": null}, {"uid": "VisDockHub_9797269", "created_at": "2014-03-27T00:39:40Z", "updated_at": "2015-08-29T13:57:47Z", "api": ["d3.scale.linear", "d3.layout.pack", "d3.json", "d3.event.stopPropagation", "d3.timer", "d3.selectAll", "d3.select"], "readme": "The VisDock toolkit has been integrated into this Zoomable Circle Packet example built with D3.js (found <a href=\"http://bl.ocks.org/mbostock/7607535\">here</a>) by <a href=\"http://bl.ocks.org/mbostock/\">Mike Bostock</a>. Selection tools can be used to query circle node elements in the diagram. Annotations, Pan & Zoom tools and VisDock lenses can be used to help explore the interactive visualization. For more information about VisDock, cick on <a href=\"http://visdockhub.github.io/NewVisDock/\">the link</a>.\n", "description": "VisDock in Zoomable Circle Packing"}, {"uid": "VisDockHub_9789918", "created_at": "2014-03-26T18:24:34Z", "updated_at": "2015-08-29T13:57:46Z", "api": ["d3.geom.polygon", "d3.svg.line", "d3.timer", "d3.geom.voronoi", "d3.range", "d3.selectAll", "d3.select"], "readme": "The VisDock toolkit has been integrated into this Rotating Voronoi example built with D3.js (found <a href=\"http://bl.ocks.org/mbostock/4636377\">here</a>) by <a href=\"http://bl.ocks.org/mbostock/\">Mike Bostock</a>. Selection tools can be used to query path elements in the diagram. Annotations, Pan & Zoom tools and VisDock lenses can be used for exploration of the rotating elements. For more information about VisDock, cick on <a href=\"http://visdockhub.github.io/NewVisDock/\">the link</a>.\n", "description": "VisDock in Rotating Voronoi"}, {"uid": "VisDockHub_9737639", "created_at": "2014-03-24T10:14:00Z", "updated_at": "2015-08-29T13:57:40Z", "api": ["d3.geo.tile", "d3.geo.mercator", "d3.geo.path", "d3.behavior.zoom", "d3.csv", "d3.select"], "readme": "The VisDock toolkit has been integrated into this Raster & Vector Zoom example built with D3.js (found <a href=\"http://bl.ocks.org/mbostock/9535021\">here</a>) by <a href=\"http://bl.ocks.org/mbostock/\">Mike Bostock</a>. Selection tools do not provide much functionality in this example. Annotations, Pan & Zoom tools and VisDock lenses can be used for exploration of the map. Especially, the BirdEye provides the overview of the map from a higher perspective. For more information about VisDock, cick on <a href=\"http://visdockhub.github.io/NewVisDock/\">the link</a>.\n", "description": "VisDock in Raster & Vector Zoom Example"}, {"uid": "VisDockHub_9733798", "created_at": "2014-03-24T03:48:20Z", "updated_at": "2015-08-29T13:57:40Z", "api": ["d3.layout.force", "d3.json", "d3.selectAll", "d3.select"], "readme": "The VisDock toolkit has been integrated into the Labeled Force Layout example built with D3.js (found <a href=\"http://bl.ocks.org/mbostock/950642\">here</a>) by <a href=\"http://bl.ocks.org/mbostock/\">Mike Bostock</a>. Using selection and other tools, users can query rectangular elements that enclose icons in force directed layout, and explore the plot closely using Pan & Zoom tools. For more information about VisDock, cick on <a href=\"http://visdockhub.github.io/NewVisDock/\">the link</a>.\n", "description": "VisDock in Labeled Force Layout"}, {"uid": "VisDockHub_9733594", "created_at": "2014-03-24T03:20:53Z", "updated_at": "2015-08-29T13:57:40Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.csv", "d3.keys", "d3.max", "d3.selectAll", "d3.select"], "readme": "The VisDock toolkit has been integrated into this Stacked Bar Chart example built with D3.js (found <a href=\"http://bl.ocks.org/mbostock/3886208\">here</a>) by <a href=\"http://bl.ocks.org/mbostock/\">Mike Bostock</a>. Using selection and other tools, users can query stacked bars made of rectangular elements, and explore the plot closely using Pan & Zoom tools. For more information about VisDock, cick on <a href=\"http://visdockhub.github.io/NewVisDock/\">the link</a>.\n", "description": "VisDock in Stacked Bar Chart"}, {"uid": "timelyportfolio_9672236", "created_at": "2014-03-20T19:43:54Z", "updated_at": "2016-05-14T22:43:42Z", "api": ["d3.selectAll", "d3.svg.line", "d3.time.scale", "d3.scale.linear", "d3.extent", "d3.svg.axis", "d3.select"], "readme": "", "description": "rCharts d3.js Interactive Look at bfast breaks"}, {"uid": "StewartNoyce_9625726", "created_at": "2014-03-18T18:00:53Z", "updated_at": "2015-08-29T13:57:29Z", "api": ["d3.format", "d3.json", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.select"], "readme": "", "description": "Ancient Histogram"}, {"uid": "wboykinm_9611865", "created_at": "2014-03-18T01:25:42Z", "updated_at": "2015-08-29T13:57:28Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.max"], "readme": "", "description": "Basic Bar Chart"}, {"uid": "StewartNoyce_9532973", "created_at": "2014-03-13T17:29:41Z", "updated_at": "2015-08-29T13:57:20Z", "api": ["d3.layout.chord", "d3.scale.ordinal", "d3.range", "d3.select", "d3.svg.arc", "d3.svg.chord"], "readme": "", "description": "Open Chord Diagram"}, {"uid": "sxywu_9358409", "created_at": "2014-03-05T00:01:29Z", "updated_at": "2015-12-22T08:48:16Z", "api": ["d3.layout.force", "d3.select"], "readme": "The force graph has been the subject of my fascination in the recent couple weeks.  One of the fun things about the force layout is that the positioning of each node and link is calculated at every tick, which means the normal update-transition paradigm doesn't work too well.\n\nThis was my approach to the enter-update-exit pattern in a force graph, and other then a couple bounces of the nodes, seem to work pretty decently.", "description": "Enter-Update-Exit in Force Layout"}, {"uid": "sxywu_9354026", "created_at": "2014-03-04T19:41:32Z", "updated_at": "2015-11-01T23:27:13Z", "api": ["d3.scale.category20", "d3.layout.force", "d3.select", "d3.json"], "readme": "This is a really simple (and kind of cheap) way to ensure as little link overlap as possible in a force-directed graph.  It is inspired by [Moritz Stefaner](http://github.com/MoritzStefaner)'s [Force-based label placement](/MoritzStefaner/1377729), where he uses invisible nodes to avoid overlap of text labels.\n\nIn this example, I've taken the classic force-directed graph example of the Les Miserables dataset, and made two simple tweaks: I use the links array to calculate the invisible nodes, and place the nodes at the halfway point of each link.  Conceptually, it is very similar to [Mike Bostock](http://github.com/mbostock)'s [Curved Links](http://bl.ocks.org/mbostock/4600693).", "description": "Link Collision Avoidance"}, {"uid": "VisDockHub_9262326", "created_at": "2014-02-27T23:55:33Z", "updated_at": "2015-08-29T13:56:49Z", "api": ["d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.tsv", "d3.extent", "d3.selectAll", "d3.select"], "readme": "The VisDock toolkit has been integrated into this simple Scatterplot example built with D3.js (found <a href=\"http://bl.ocks.org/mbostock/3887118\">here</a>) by <a href=\"http://bl.ocks.org/mbostock/\">Mike Bostock</a>. Using selection and other tools, users can query circle elements which represent datapoints, and explore the plot closely using Pan & Zoom tools. For more information about VisDock, cick on <a href=\"http://visdockhub.github.io/NewVisDock/\">the link</a>.\n", "description": "VisDock in Scatterplot"}, {"uid": "vlandham_9216751", "created_at": "2014-02-25T20:12:38Z", "updated_at": "2015-08-29T13:56:43Z", "api": ["d3.geo.aitoff", "d3.geo.albers", "d3.geo.august", "d3.geo.baker", "d3.geo.berghaus", "d3.geo.boggs", "d3.geo.bonne", "d3.geo.bromley", "d3.geo.collignon", "d3.geo.craster", "d3.geo.eckert1", "d3.geo.eckert2", "d3.geo.eckert3", "d3.geo.eckert4", "d3.geo.eckert5", "d3.geo.eckert6", "d3.geo.eisenlohr", "d3.geo.equirectangular", "d3.geo.fahey", "d3.geo.cylindricalStereographic", "d3.geo.homolosine", "d3.geo.ginzburg4", "d3.geo.ginzburg5", "d3.geo.ginzburg6", "d3.geo.ginzburg8", "d3.geo.ginzburg9", "d3.geo.gringorten", "d3.geo.guyou", "d3.geo.hammer", "d3.geo.hammerRetroazimuthal", "d3.geo.healpix", "d3.geo.hill", "d3.geo.kavrayskiy7", "d3.geo.lagrange", "d3.geo.cylindricalEqualArea", "d3.geo.larrivee", "d3.geo.laskowski", "d3.geo.loximuthal", "d3.geo.mercator", "d3.geo.miller", "d3.geo.mtFlatPolarParabolic", "d3.geo.mtFlatPolarQuartic", "d3.geo.mtFlatPolarSinusoidal", "d3.geo.mollweide", "d3.geo.naturalEarth", "d3.geo.nellHammer", "d3.geo.orthographic", "d3.geo.polyconic", "d3.geo.rectangularPolyconic", "d3.geo.robinson", "d3.geo.sinusoidal", "d3.geo.sinuMollweide", "d3.geo.stereographic", "d3.geo.times", "d3.geo.vanDerGrinten", "d3.geo.vanDerGrinten2", "d3.geo.vanDerGrinten3", "d3.geo.vanDerGrinten4", "d3.geo.wagner4", "d3.geo.wagner6", "d3.geo.wagner7", "d3.geo.polyhedron.waterman", "d3.geo.winkel3", "d3.geo.graticule", "d3.select", "d3.behavior.drag", "d3.geo.path", "d3.json"], "readme": "A quick hack on the [beautifully executed projection example](http://bl.ocks.org/awoodruff/9216081) from [Andy Woodruff](https://twitter.com/awoodruff). I just wanted to see them all on one screen.\n\nClick the [Open in new window](http://bl.ocks.org/vlandham/raw/9216751/) button to see them all.\n\nNovel code Inspired once again by [Jason Davies](https://www.jasondavies.com/maps/clip/). \n\nAndy's original text:\n\nWe've all seen the projected head from [Elements of map projection with applications to map and chart construction](https://archive.org/stream/cu31924003898271#page/n58/mode/1up), but the authors in 1921 did not have D3 to help them show a full range of weird distorted faces. This is based on the [Map Projection Transitions](https://www.jasondavies.com/maps/transition/) example by Jason Davies.\n", "description": null}, {"uid": "wboykinm_9095481", "created_at": "2014-02-19T16:21:04Z", "updated_at": "2015-08-29T13:56:31Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category20", "d3.geom.voronoi", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.max", "d3.svg.axis", "d3.nest", "d3.merge"], "readme": "", "description": ""}, {"uid": "VisDockHub_8973882", "created_at": "2014-02-13T12:00:45Z", "updated_at": "2015-08-29T13:56:18Z", "api": ["d3.format", "d3.scale.category20c", "d3.layout.pack", "d3.json", "d3.selectAll", "d3.select"], "readme": "The Bubble Chart organizes hierarchical data into groups of circles. Each circle represents a datapoint with size, color and text. Users may query datapoints using various selection tools. Once datapoints are selected and new SVG layers are created, the text of the datapoint is brought to front so that the newly created layers do not block the view. The VisDock toolkit has been integrated into the Bundle Chart example built with D3.js (found <a href=\"http://bl.ocks.org/mbostock/4063269\">here</a>) by <a href=\"http://bl.ocks.org/mbostock\">M. Bostock</a>. ", "description": "Bubble Chart"}, {"uid": "VisDockHub_8971734", "created_at": "2014-02-13T08:36:01Z", "updated_at": "2015-08-29T13:56:18Z", "api": ["d3.map", "d3.scale.quantize", "d3.range", "d3.geo.path", "d3.selectAll", "d3.select"], "readme": "The choropleth map shows the US unemployment rates by county with a given color scale. The VisDock toolkit has been integrated into the choropleth map example built with D3.js (found <a href=\"http://bl.ocks.org/mbostock/4060606\">here</a>) by <a href=\"http://bl.ocks.org/mbostock\">M. Bostock</a>. Using selection tools, users can query path elements that represent the counties in the US. ", "description": "The Choropleth Map"}]