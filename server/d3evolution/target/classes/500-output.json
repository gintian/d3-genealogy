{"nodes": [{"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 1255)\n      .attr(\"height\", 500)\n\n    svg.append(\"text\")\n      .text(\"Edit the code below to change me! I just did\")\n      .attr(\"y\", 200)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 26)\n      .style(\"font-family\", \"monospace\");\n    svg.append(\"circle\")\n      .attr(\"cx\", 25)\n      .attr(\"cy\", 25)\n      .attr(\"r\", 25)\n      .style(\"fill\", \"purple\");\n\n    var theData = [ 1, 2, 3 ];\n \n \t\tvar p = d3.select(\"body\").selectAll(\"p\")\n \t\t.data(theData)\n \t\t.enter()\n \t\t.append(\"p\")\n \t\t.text(function (d,i) {\n      return \"i = \" + i + \" d = \"+d;\n    });    \n  </script>", "description": "fresh block", "created_at": "2016-10-13T21:14:02Z", "updated_at": "2016-10-13T21:56:14Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/7da9522a4100b05526318eeb6e45c3df'>fresh block</a>\n\nThis is furhter edited by myself", "uid": "jonasmorwing_1a502d2cc7020219369c5217e2ee4a84"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n\n    svg.append(\"text\")\n      .text(\"Edit the code below to change me!\")\n      .attr(\"y\", 200)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 36)\n      .style(\"font-family\", \"monospace\")\n\n  </script>", "description": "fresh block", "created_at": "2016-10-13T19:52:21Z", "updated_at": "2016-10-13T21:53:37Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "DarienLiang_4f273a510d5bd87d3a250b54d638a0eb"}, {"code": "<script>\n\n    var width = 960,\n        height = 500\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var force = d3.layout.force()\n        .charge(function (d) {\n          return (d.weight * -100);\n        })\n        .size([width, height]);\n    \n    d3.json(\"data.json\", function(error, data) {\n      if (error) throw error;\n      \n      var links = generateLinks(data);\n      \n      force\n          .nodes(data)\n          .links(links)\n          .start();\n\n      var link = svg.selectAll(\".link\")\n          .data(links)\n        .enter().append(\"line\")\n          .attr(\"class\", \"link\");\n\n      var node = svg.selectAll(\".node\")\n          .data(data)\n        .enter().append(\"g\")\n          .attr(\"class\", \"node\")\n          .call(force.drag);\n\n      node.append(\"rect\")\n          .attr(\"x\", -6)\n          .attr(\"y\", -6)\n          .attr(\"width\", 12)\n          .attr(\"height\", 12)\n      \t\t.attr(\"fill\", function (d) {\n        \t\treturn d.properties.color;\n      \t\t});\n\n//       node.append(\"text\")\n//           .attr(\"dx\", 12)\n//           .attr(\"dy\", \".35em\")\n//           .text(function(d) { return d.name });\n\n      force.on(\"tick\", function() {\n        link.attr(\"x1\", function(d) { return d.source.x; })\n            .attr(\"y1\", function(d) { return d.source.y; })\n            .attr(\"x2\", function(d) { return d.target.x; })\n            .attr(\"y2\", function(d) { return d.target.y; });\n\n        node.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n      });\n    });\n    \n    function generateLinks (data) {\n      return _.chain(data)\n      \t.reduce(function (result, d) {\n        \tvar index = d.index;\n        \n        \t_.each(d.properties, function (value, property) {\n            if(!result[property+value]) {\n              result[property+value] = [];\n            }\n            result[property+value].push(index);\n          });\n          \n        \treturn result;\n      \t}, {})\n      \t.toPairs()\n      \t.filter(function (d) {\n        \treturn d[0].length > 1;\n      \t})\n      \t.reduce(function (result, d) {\n        \tvar indices = d[1].sort();\n        \tvar source = indices[0];\n        \tconsole.log(indices);\n        \n        \t_.each( _.slice(indices,1), function (target) {\n            result.push({\n              source: source,\n              target: target\n            })\n          });\n        \n        \treturn result;\n      \t}, [])\n      \t.value();\n    }\n\n  </script>", "description": "", "created_at": "2016-10-12T18:53:05Z", "updated_at": "2016-10-13T07:54:01Z", "api": ["d3.select", "d3.layout.force", "d3.json"], "readme": "WIP\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nUsed http://www.json-generator.com/ to generate random data with the following template: \n```\n[\n  '{{repeat(15, 50)}}',\n  {\n    index: '{{ index() }}',\n    name: function (tags) {\n      var fruits = ['apple', 'banana', 'strawberry', 'mango'];\n      return fruits[tags.integer(0, fruits.length - 1)];\n    },\n    properties: {\n      color: '{{ random(\"red\",\"yellow\",\"purple\",\"green\") }}',\n      //pattern: '{{ random(\"spotted\",\"stripped\",\"none\") }}',\n      size: '{{ random(\"tiny\",\"small\",\"medium\",\"large\",\"giant\") }}',\n      taste: '{{ random(\"bitter\",\"sweet\",\"sour\",\"salty\",\"savoury\") }}',\n      weight: '{{ integer(0,400) }}'\n    }\n  }\n]\n```", "uid": "thomasdobber_68051f5695d5d4282b9555e7ea997ca3"}, {"code": "<script>\n\tconsole.clear()\n  \nvar units = \"claims\";\n\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scale.category20();\n\n// append the svg canvas to the page\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data (using the timelyportfolio csv method)\nd3.csv(\"sankey.csv\", function(error, data) {\n\n  //set up graph in same style as original example but empty\n  graph = {\"nodes\" : [], \"links\" : []};\n\n    data.forEach(function (d) {\n      graph.nodes.push({ \"name\": d.source, \"status\": d.source.split(\":\")[0] });\n      graph.nodes.push({ \"name\": d.target, \"status\": d.source.split(\":\")[0] });\n      graph.links.push({ \"source\": d.source,\n                         \"target\": d.target,\n                         \"value\": +d.value });\n     });\n\n     // return only the distinct / unique nodes\n     graph.nodes = d3.keys(d3.nest()\n       .key(function (d) { return d.name; })\n       .map(graph.nodes));\n\t\n  \tconsole.log(graph.nodes);\n  \n     // loop through each link replacing the text with its index from node\n     graph.links.forEach(function (d, i) {\n       graph.links[i].source = graph.nodes.indexOf(graph.links[i].source);\n       graph.links[i].target = graph.nodes.indexOf(graph.links[i].target);\n     });\n\n     //now loop through each nodes to make nodes an array of objects\n     // rather than an array of strings\n     graph.nodes.forEach(function (d, i) {\n       graph.nodes[i] = { \"name\": d };\n     });\n\n  sankey\n    .nodes(graph.nodes)\n    .links(graph.links)\n    .layout(32);\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n\n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n    \t\treturn d.source.name.replace(/:.*/, \"\") + \"  \" + \n                d.target.name.replace(/:.*/, \"\") + \"\\n\" + \n          \t\t\t\"Time \" + d.source.name.replace(/.*:/, \"\") + \"  \" + \t\n          \t\t\t\t\t\t\t\td.target.name.replace(/.*:/, \"\") + \"\\n\" + \n          \t\t\tformat(d.value); });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n      .origin(function(d) { return d; })\n      .on(\"dragstart\", function() { \n\t\t  this.parentNode.appendChild(this); })\n      .on(\"drag\", dragmove));\n\n  console.log(graph.nodes.map(function(d){\n    return d.name.replace(/:.*/, \"\");\n  }))\n  \n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  \treturn d.color = color(d.name.replace(/:.*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  \treturn d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  \treturn d.name.replace(/:.*/, \"\") + \"\\n\" + format(d.value); \n  \t\t});\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name.replace(/:.*/, \"\"); })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \n        \"translate(\" + d.x + \",\" + (\n                d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n            ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n\n</script>", "description": "Sankey from csv with d3.js", "created_at": "2016-10-12T16:52:12Z", "updated_at": "2016-10-12T18:24:28Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.csv", "d3.keys", "d3.nest", "d3.behavior.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min"], "readme": "This is a sankey diagram used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks). It is based on a [simpler version here](http://bl.ocks.org/d3noob/c2637e28b79fb3bfea13).\n\nIt demonstrates the construction of a [sankey diagram](http://bost.ocks.org/mike/sankey/) using d3.js from external csv data that is formatted using just link data and named values. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/c9b90689c1438f57d649'>Sankey from csv with d3.js</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/649b7a2a2d90b430dcb45eee1cdb1d49'>Sankey from csv with d3.js</a>", "uid": "SpaceActuary_b91f25d80a103736b14477dc8a3a7c76"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar parseTime = d3.timeParse(\"%Y%m%d\");\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal(d3.schemeCategory10);\n\nvar line = d3.line()\n    .curve(d3.curveBasis)\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\n  // manipulate data\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n\t// remove the first column, then iterate over the cities  \n  var cities = data.columns.slice(1).map(function(id) {\n    // the id is the city name.\n    return {\n      id: id,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: d[id]};\n      })\n    };\n  });\n\n  // the data is going to be, the an array of 3 elements, one for each series, then for each element there is an id = name of the time series, and a data array, with the time, and the temperature data.\n  \n  // get the domain for the x axis\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  // domain for the Y axis\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(d) { return d.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.temperature; }); })\n  ]);\n\n  // domain for the colors\n  z.domain(cities.map(function(c) { return c.id; }));\n\n  // append the x axis\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // append the y axis\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y))\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"0.71em\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Temperature, F\");\n\n  // add 3 groups, one for each time series\n  var city = g.selectAll(\".city\")\n    .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  // in each time series, append a path, in the attribute d, assign the temperature values with the function line, and the stroke is the color of the scale\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });\n});\n\nfunction type(d, _, columns) {\n  d.date = parseTime(d.date);\n  for (var i = 1, n = columns.length, c; i < n; ++i) d[c = columns[i]] = +d[c];\n  return d;\n}\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-10-12T15:58:45Z", "updated_at": "2016-10-13T03:13:02Z", "api": ["d3.select", "d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.line", "d3.tsv", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/d62016714ef2c71c643eaa55a022176b'>Multi-Series Line Chart</a>", "uid": "juanprq_42d34c2ebefd1be5d173b802f38bb98a"}, {"code": "<script>\n\nvar n = 4, // number of layers\n    m = 58, // number of samples per layer\n    stack = d3.layout.stack(),\n    layers = stack(d3.range(n).map(function() { return bumpLayer(m, .1); })),\n    yGroupMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y; }); }),\n    yStackMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); });\n\nvar margin = {top: 40, right: 10, bottom: 20, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .domain(d3.range(m))\n    .rangeRoundBands([0, width], .08);\n\nvar y = d3.scale.linear()\n    .domain([0, yStackMax])\n    .range([height, 0]);\n\nvar color = d3.scale.linear()\n    .domain([0, n - 1])\n    .range([\"#aad\", \"#556\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickSize(0)\n    .tickPadding(6)\n    .orient(\"bottom\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar layer = svg.selectAll(\".layer\")\n    .data(layers)\n  .enter().append(\"g\")\n    .attr(\"class\", \"layer\")\n    .style(\"fill\", function(d, i) { return color(i); });\n\nvar rect = layer.selectAll(\"rect\")\n    .data(function(d) { return d; })\n  .enter().append(\"rect\")\n    .attr(\"x\", function(d) { return x(d.x); })\n    .attr(\"y\", height)\n    .attr(\"width\", x.rangeBand())\n    .attr(\"height\", 0);\n\nrect.transition()\n    .delay(function(d, i) { return i * 10; })\n    .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n    .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); });\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nd3.selectAll(\"input\").on(\"change\", function change() {\n  if (this.value === \"grouped\") transitionGrouped();\n  else transitionStacked();\n});\n\nfunction transitionGrouped() {\n  y.domain([0, yGroupMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"x\", function(d, i, j) { return x(d.x) + x.rangeBand() / n * j; })\n      .attr(\"width\", x.rangeBand() / n)\n    .transition()\n      .attr(\"y\", function(d) { return y(d.y); })\n      .attr(\"height\", function(d) { return height - y(d.y); });\n}\n\nfunction transitionStacked() {\n  y.domain([0, yStackMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n      .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); })\n    .transition()\n      .attr(\"x\", function(d) { return x(d.x); })\n      .attr(\"width\", x.rangeBand());\n}\n\n// Inspired by Lee Byron's test data generator.\nfunction bumpLayer(n, o) {\n\n  function bump(a) {\n    var x = 1 / (.1 + Math.random()),\n        y = 2 * Math.random() - .5,\n        z = 10 / (.1 + Math.random());\n    for (var i = 0; i < n; i++) {\n      var w = (i / n - y) * z;\n      a[i] += x * Math.exp(-w * w);\n    }\n  }\n\n  var a = [], i;\n  for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n  for (i = 0; i < 5; ++i) bump(a);\n  return a.map(function(d, i) { return {x: i, y: Math.max(0, d)}; });\n}\n\n</script>", "description": "Stacked-to-Grouped Transition", "created_at": "2016-10-12T13:42:05Z", "updated_at": "2016-10-12T13:42:05Z", "api": ["d3.layout.stack", "d3.range", "d3.max", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.selectAll"], "readme": "Switch between stacked and grouped layouts using sequenced transitions! Animations preserve object constancy and allow the user to follow the data across views. Animation design by [Heer and Robertson](http://vis.berkeley.edu/papers/animated_transitions/). Colors and data generation inspired by [Byron and Wattenberg](http://www.leebyron.com/else/streamgraph/).\n\n\nforked from <a href='http://bl.ocks.org/davo/'>davo</a>'s block: <a href='http://bl.ocks.org/davo/4225021'>Stacked-to-Grouped Transition</a>", "uid": "lorenzopub_898a0e5a9877d47303a57d12e50720fd"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n    margin = { top: 10, bottom: 25, left: 10, right: 50 }, // around the graph\n    spacing = { bottom: 15, right: 5 },\n    n = 8, // number of layers\n    m = 50, // numbe of samples per layer,\n    stack = d3.layout.stack(),\n    data = stack(d3.range(n).map(function() { return bumpLayer(m, .1); })),\n    ySplitMax = d3.max(data, function(layer) { return d3.max(layer, function(d) { return d.y; }); }),\n    yStackMax = d3.max(data, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); }),\n    duration = 1000,\n    isTransition = false;\n\n    svg = d3.select('body').append('svg')\n      .attr('width', width)\n      .attr('height', height);\n\nvar layout = 'stack';\n\nfunction translate(x, y) {\n  return \"translate(\" + x + \", \" + y + \")\";\n}\n\nfunction update(firstTime) {\n  function rowHeight() {\n    return Math.floor((height - margin.top - margin.bottom - (n - 1) * spacing.bottom) / n);\n  };\n\n  var lastRow = n - 1;\n\n  var x = d3.scale.linear()\n    .range([margin.left, width - margin.right])\n    .domain([0, m-1]);\n  var xAxis = d3.svg.axis()\n    .scale(x)\n    .orient('bottom');\n\n  var y = d3.scale.linear()\n\n  if (layout == 'stack') {\n    y.range([height - margin.top - margin.bottom, 0])\n      .domain([0, yStackMax]);\n  } else {\n    y.range([rowHeight(), 0])\n      .domain([0, ySplitMax])\n  }\n\n  yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"right\")\n    .ticks(layout == 'split' ? 3 : 10);\n\n  if (firstTime) {\n    svg.append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', translate(0, height - margin.top - margin.bottom + 5))\n      .call(xAxis)\n  }\n\n  var layers = svg.selectAll('g.layer')\n    .data(data, function(d) { return data.indexOf(d) });\n\n  var enterLayers = layers.enter()\n    .append('g')\n      .attr('class', 'layer')\n      .attr('width', width)\n      .attr('transform', function(d, i) {\n        if (layout == 'split') {\n          return translate(0, (lastRow - i) * (rowHeight() + spacing.bottom));\n        }\n      });\n\n  layers.exit().remove()\n\n  layers.transition()\n    .duration(duration)\n    .attr('transform', function(d, i) {\n      if (layout == 'stack') {\n        return translate(0, 0);\n      } else {\n        return translate(0, (lastRow - i) * (rowHeight() + spacing.bottom));\n      }\n    })\n    .each('start', function() { isTransition = true })\n    .each('end', function() { isTransition = false });\n\n  var zeroArea = d3.svg.area()\n    .x(function(d) { return x(d.x) })\n    .y0(y(0))\n    .y1(y(0));\n\n  var grayGradient = d3.interpolate('#666', '#ddd');\n\n  function color(d, i) {\n    i = data.indexOf(d);\n    return grayGradient(i / n);\n  }\n\n  var areas = enterLayers.append('path')\n    .attr('class', 'area')\n    .attr('d', zeroArea)\n    .style('fill', color)\n    .style('stroke', color)\n    .style('stroke-width', 1) // fill gaps between layers\n    .on('mouseover', function() {\n      !isTransition && d3.select(this).transition()\n        .style('fill', '#d66').style('stroke', '#d66');\n    })\n    .on('mouseout', function() {\n      !isTransition && d3.select(this).transition()\n        .style('fill', color).style('stroke', color);\n    });\n  var area = d3.svg.area()\n    .x(function(d) { return x(d.x) });\n\n  if (layout == 'stack') {\n    area.y0(function(d) { return y(d.y0); })\n      .y1(function(d) { return y(d.y0 + d.y); });\n  } else {\n    area.y0(y(0))\n      .y1(function(d) { return y(d.y)} );\n  }\n\n  layers.selectAll('path.area').transition()\n    .duration(duration)\n    .attr('d', area);\n\n  enterLayers.append('g')\n    .attr('class', 'y-axis')\n    .attr('transform', translate(width - margin.right + spacing.right, 0))\n    .attr('opacity', 0)\n\n  var yAxes = layers.selectAll('g.y-axis');\n  yAxes.transition()\n    .duration(duration)\n    .attr('opacity', function(d, i) {\n      i = data.indexOf(d);\n      if (layout == 'stack') {\n        return 1;\n      } else {\n        return 1;\n      }\n    })\n    .call(yAxis);\n}\n\n// Inspired by Lee Byron's test data generator.\n// Borrowed from http://bl.ocks.org/mbostock/3943967\nfunction bumpLayer(n, o) {\n\n  function bump(a) {\n    var x = 1 / (.1 + Math.random()),\n        y = 2 * Math.random() - .5,\n        z = 10 / (.1 + Math.random());\n    for (var i = 0; i < n; i++) {\n      var w = (i / n - y) * z;\n      a[i] += x * Math.exp(-w * w);\n    }\n  }\n\n  var a = [], i;\n  for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n  for (i = 0; i < 5; ++i) bump(a);\n  return a.map(function(d, i) { return {x: i, y: Math.max(0, d)}; });\n}\n\nupdate(true)\n\nsetTimeout(function() {\n  d3.select('input#stack').attr('checked', 'checked');\n}, duration);\n\nd3.selectAll('input').on('change', function() {\n  var e = d3.select(this);\n  if (e.attr('value') == 'stack' && e.attr('checked')) {\n    layout = 'stack';\n  } else {\n    layout = 'split';\n  }\n  update()\n});\n\n</script>", "description": "Stack-to-Split Transition", "created_at": "2016-10-12T13:41:30Z", "updated_at": "2016-10-12T13:41:30Z", "api": ["d3.layout.stack", "d3.range", "d3.max", "d3.select", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.interpolate", "d3.selectAll"], "readme": "# Stack-Split Transition\n\nTransitions between stacked and split (small multiples) area charts.\n\n\nforked from <a href='http://bl.ocks.org/zachmargolis/'>zachmargolis</a>'s block: <a href='http://bl.ocks.org/zachmargolis/9315833'>Stack-to-Split Transition</a>\n\nforked from <a href='http://bl.ocks.org/mashehu/'>mashehu</a>'s block: <a href='http://bl.ocks.org/mashehu/281584920c26e2d617625270b75818a1'>Stack-to-Split Transition</a>", "uid": "lorenzopub_2c63ce8f3a4d535dd0e65d658f6c80d6"}, {"code": "<script>\n    var svg = d3.select('.d3-viz'),\nmargin = {top: 20, right: 80, bottom: 30, left: 50},\nwidth = svg.attr(\"width\") - margin.left - margin.right,\nheight = svg.attr(\"height\") - margin.top - margin.bottom,\ng = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \nvar parseTime = d3.timeParse(\"%Y%m%d\"),\n    bisect = d3.bisector(function(d) { return parseTime(d.x); }).left;\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal(d3.schemeCategory10);\n\n\nvar line = d3.line()\n.x(function(d) {\n  return x(parseTime(d.x));\n})\n.y(function(d) {\n  return y(d.y);\n});\n\nd3.json('temperature3.json', function(error, data){\n  if (error) throw error;\n\n\n  \n  \n  \n  x.domain(d3.extent(data['0'].values, function(c){return parseTime(c.x)}));\n  y.domain([\n    d3.min(data, function(c) { return d3.min(c.values, function(d) { return d.y; }); }),\n    d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.y; }); })\n  ]);\n  \n  z.domain(data, function(c) { return c.id; });\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y))\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"0.71em\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Temperature, F\");\n\n  var city = g.selectAll(\".city\")\n    .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(parseTime(d.value.x)) + \",\" + y(d.value.y) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });\n  \n  \n  var focus = svg.append(\"g\")\n          .attr(\"class\", \"focus\")\n          .style(\"display\", \"none\");\n\n//       focus.append(\"circle\")\n//           .attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n//           .attr(\"x\", 4)\n//           .attr(\"y\", -1)\n//           .attr(\"r\", 2);\n\n//       focus.append(\"text\")\n//       \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n//           .attr(\"x\", 9)\n//           .attr(\"dy\", \".35em\");\n\n  for(var i=0;i<data.length;i++){\n              focus.append(\"g\")\n                .attr(\"class\", \"focus\"+i)\n                .append(\"circle\")\n              \t.style(\"stroke\",  z(data[i].id))\n              \t.style(\"fill\", z(data[i].id))\n              \t.attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n                .attr(\"r\", 2);\n              svg.select(\".focus\"+i)\n                .append(\"text\")\n              \t.attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n                .attr(\"x\", 9)\n                .attr(\"dy\", \".35em\");\n          }\n  \n      svg.append(\"rect\")\n          .attr(\"class\", \"overlay\")\n          .attr(\"width\", width)\n          .attr(\"height\", height)\n      \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n          .on(\"mouseover\", function() { focus.style(\"display\", null); })\n          .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n          .on(\"mousemove\",  mousemove);\n\n//       function mousemove(c, j) {\n//         console.log(c,j);\n//         var coordinates = d3.mouse(this),\n//         \t\tx0 = x.invert(coordinates[0]),\n//             y0 = y.invert(coordinates[1]),\n//             i = bisect(c.values, x0),\n//             d0 = c.values[i - 1],\n//             d1 = c.values[i],\n//             d = x0 - d0.x > d1.x - x0 ? d1 : d0;\n// //             console.log(x0,y0,i);\n// //         \t\tconsole.log(coordinates) ;\n//         console.log(d0,d1);\n//         focus.attr(\"transform\", \"translate(\" + x(c.values[i].x) + \",\" + y(c.values[i].y) + \")\");\n//         focus.select(\"text\").text(c.values[i].y);\n//       }\n  \n  function mousemove() {\n              var x0 = x.invert(d3.mouse(this)[0]);\n              var series = data.map(function(e) {\n                    var i = bisect(e.values, x0, 1),\n                        d0 = e.values[i - 1],\n                        d1 = e.values[i];\n                    return x0 - d0.x > d1.x - x0 ? d1 : d0;\n                  });\n//     console.log(series);\n              for(var i=0; i<series.length;i++){\n                var selectedFocus = svg.selectAll(\".focus\"+i);\n                selectedFocus.attr(\"transform\", \"translate(\" + x(parseTime(series[i].x)) + \",\" + y(series[i].y) + \")\");\n                selectedFocus.select(\"text\").text(series[i].y);\n              }\n            }\n\n\n  \n  \n// building the nav chart\nvar navWidth = width,\n      navHeight = 100 - margin.top - margin.bottom;\n\nvar navChart = d3.select('.d3-viz-nav').classed('chart', true)\n  .classed('navigator', true)\n  .attr('width', navWidth + margin.left + margin.right)\n  .attr('height', navHeight + margin.top + margin.bottom)\n  .append('g')\n  .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n  \n  \nvar navXScale = d3.scaleTime()\n\t\t\t\t.range([0, navWidth])\n        .domain(d3.extent(data['0'].values, function(c){return parseTime(c.x)}))\n        ,\n    navYScale = d3.scaleLinear()\n\t\t\t\t.range([navHeight, 0])\n        .domain([\n    d3.min(data, function(c) { return d3.min(c.values, function(d) { return d.y; }); }),\n    d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.y; }); })\n  ]);  \n  \n\n\nnavChart.append('g')\n    .attr('class', 'axis axis--x')\n    .attr('transform', 'translate(0,' + navHeight + ')')\n    .call(d3.axisBottom(x));  \n  \n \t\n  \n  var navData = d3.area()\n    .x(function (d) { return navXScale(parseTime(d.x)); })\n    .y0(navHeight)\n    .y1(function (d) { return navYScale(d.y); });\n\nvar navLine = d3.line()\n    .x(function (d) { return navXScale(parseTime(d.x)); })\n    .y(function (d) { return navYScale(d.y); });\n\nnavChart.append('path')\n\t\t.data(data)\n    .attr('class', 'data')\n    .attr('d', function(d) { return navData(d.values); });\n\nnavChart.append('path')\n\t\t.data(data)\n    .attr('class', 'line')\n    .attr('d', function(d) { return navLine(d.values); });\n  \n \n  \n  var viewport = d3.brushX()\n//     .brushX(navXScale)\n    .on(\"brush\", function () {\n        x.domain(d3.select(this).empty() ? navXScale.domain() : viewport.extent());\n        redrawChart();\n    });\n  \n  var xAxis = d3.axisBottom(x)\n//     .scale(x)\n//     .tickSize(-height);\n  \n   navChart.append(\"g\")\n    .attr(\"class\", \"viewport\")\n    .call(viewport)\n    .selectAll(\"rect\")\n  \t.attr('transform', 'translate(0,' + -navHeight + ')')\n    .attr(\"height\", 2*navHeight);\n  \n  \n  function redrawChart() {\n\n//     city.select(\"path\")\n//       .attr(\"class\", \"line\")\n//       .attr(\"d\", function(d) { return line(d.values); })\n//       .style(\"stroke\", function(d) { return z(d.id); })\n    \n//     city.selectAll('path.line')\n// //     \t\t.attr(\"class\", \"line\")\n//     \t\t.data(data)\n// //     \t\t.attr(\"class\", \"line\")\n//       .attr(\"d\", function(d) { return line(d.values); })\n//       .style(\"stroke\", function(d) { return z(d.id); })\n    \n//     city.call(line);\n    \n//     svg.select('.axis--x').call(xAxis);\n    \n    var n = data[0].values.length - 1,\n        i = Math.floor(Math.random() * n / 2),\n        j = i + Math.floor(Math.random() * n / 2) + 1;\n    x.domain([parseTime(data[0].values[i].x),\n    parseTime(data[0].values[j].x) ]);\n    var t = svg.transition().duration(750);\n    t.select(\".axis--x\").call(xAxis);\n//     t.select(\".area\").attr(\"d\", area);\n    t.select(\".line\")\n      .attr('d', line);\n    \n//     var t2 = city.transition().duration(750);\n    \n//     t2.select('.city .line')\n// //     .attr('d', line)\n//     \t.call(line)\n//     ;\n     \n    \n}\n  \n  \n  \n\n  \n});\n    \n    \n    \n\n    \n    \n    \n    // pulled from this jsfiddle http://jsfiddle.net/takuan/gakdeL1u/7/\n\n\n  </script>", "description": "multi-line plot multi-mouseover", "created_at": "2016-10-12T13:36:30Z", "updated_at": "2016-10-12T13:36:30Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.line", "d3.json", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.mouse", "d3.area", "d3.brushX"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/eric-bunch/'>eric-bunch</a>'s block: <a href='http://bl.ocks.org/eric-bunch/0bdef4942ac085a93fa6bd31452cd55c'>multi-line plot multi-mouseover</a>", "uid": "lorenzopub_4b8609d749cd9759a03b74f889a579f0"}, {"code": "<script>\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%Y-%m-%d %H:%M:%S\");\n\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\")\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(10);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.tim); })\n    .y(function(d) { return y(d.count); });\n\n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"final_report_multi.tsv\", function(error, data) {\n    data.forEach(function(d) {\n        d.tim = parseDate.parse(d.tim);\n        d.count = +d.count; // convert it to a number\n\n    });\n\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.tim; }));\n    y.domain(d3.extent(data, function(d) { return d.count; }));\n\n var color = d3.scale.category10();\n\n // Nest the entries by symbol\n    var dataNest = d3.nest()\n        .key(function(d) {return d.dept;})\n        .entries(data)\n\t\t\t\t.sort(function(a, b) { return d3.ascending(a.tim,b.tim); })\n    ;\n    // Loop through each symbol / key\n  \tvar depts = svg.selectAll(\"path\")\n    \t\t.data(dataNest, function(d) { return d.key;}) // join\n    \t.enter().append(\"path\")\n      \t.attr(\"class\", function(d) { return d.key; })\n        .attr(\"d\", function(d) { return valueline(d.values); })\n        .style(\"stroke\", function(d) { return color(d.key); })\n\n    ;\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n\n/*\nvar inter = setInterval(function() {\n                updateData();\n        }, 3000); \n*/\n\n        // ** Update data section (Called from the onclick)\nfunction updateData() {\n\n    // Get the data again\n  d3.tsv(\"final_report_multi.tsv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.tim);\n        d.close = d.count;\n        console.log(d.date);\n        console.log(d.close);\n\n    });\n\n        // Scale the range of the data again \n        x.domain(d3.extent(data, function(d) { return d.date; }));\n        y.domain([0, d3.max(data, function(d) { return d.close; })]);\n       //  y.domain([d3.extent(data, function(d) { return d.close; })]);\n        y.domain([0,100]);\n\n    // Select the section we want to apply our changes to\n    var svg = d3.select(\"body\").transition();\n\n     // Nest the entries by symbol\n    var dataNest = d3.nest()\n        .key(function(d) {return d.dept;})\n        .entries(data);\n\n    // Loop through each symbol / key\n    dataNest.forEach(function(d) {\n        var svg = d3.select(\"body\").transition();\n        console.log(d.values)\n        svg.select(\".line\")   // change the line\n            .duration(750)\n            .attr(\"d\", valueline(d.values)); \n        svg.select(\".x.axis\") // change the x axis\n            .duration(750)\n            .call(xAxis);\n        svg.select(\".y.axis\") // change the y axis\n            .duration(750)\n            .call(yAxis)\n    });\n\n    // Make the changes\n   //     svg.select(\".line\")   // change the line\n   //         .duration(750)\n   //         .attr(\"d\", valueline(data));\n  //      svg.select(\".x.axis\") // change the x axis\n  //          .duration(750)\n  //          .call(xAxis);\n  //      svg.select(\".y.axis\") // change the y axis\n  //          .duration(750)\n  //          .call(yAxis);\n\n    });\n}\n\n  </script>", "description": "fresh block", "created_at": "2016-10-12T06:34:44Z", "updated_at": "2016-10-12T07:33:11Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.scale.category10", "d3.nest", "d3.ascending", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/ca5d734836ff929d4af2cf22a453469c'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/952ab84868355cc75dd5eb04e75a9773'>fresh block</a>", "uid": "seemantk_5eba869f4aa06353d8c9ce6f8d88c714"}, {"code": "<script>\n  var svg = d3.select('svg');\n  var points = [[465.500,366.708], [401.833,303.042], [410.332,287.251], [415.153,269.188], [415.153,250], [415.153,188.095], [364.970,137.912], [303.065,137.912], [269,137.912], [269,50], [303.065,50], [413.522,50], [503.065,139.543], [503.065,250], [503.065,293.558], [489.141,333.863], [465.500,366.708], [465.500,366.708], [429.192,417.153], [369.964,450], [303.065,450], [269,450], [269,362.087], [303.065,362.087], [345.781,362.087], [382.916,338.193], [401.833,303.042], [465.500,366.708], [688.732,349.524], [694.983,314.612], [685.780,278.070], [662.421,250], [692.686,213.630], [699.187,163.040], [679.103,120.200], [659.019,77.360], [615.973,49.999], [568.659,50], [428,50], [428,50], [462.611,71.680], [491.004,101.971], [510.401,137.912], [568.654,137.912], [580.825,137.912], [592.071,144.405], [598.156,154.945], [604.242,165.485], [604.242,178.470], [598.156,189.010], [592.071,199.551], [580.825,206.043], [568.654,206.043], [545.252,206.043], [688.732,349.524], [545.252,206.043], [689.029,349.821], [687.173,360.040], [683.992,370.117], [679.453,379.799], [659.369,422.639], [616.323,450.000], [569.009,450], [548.791,450], [491.233,392.441], [498.479,382.870], [505.009,372.726], [510.751,362.087], [569.004,362.087], [581.175,362.087], [592.421,355.594], [598.506,345.054], [604.592,334.514], [604.592,321.529], [598.506,310.989], [592.421,300.448], [581.175,293.956], [569.004,293.956], [534.938,293.956], [540.445,264.910], [540.445,235.089], [534.938,206.043], [545.252,206.043], [548.791,450], [428,450], [452.437,434.692], [473.774,415.092], [491.034,392.242], [548.791,450]];\n  var colors = ['hsl(341, 100%, 50%)', 'hsl(359, 100%, 50%)', 'hsl(18, 100%, 50%)', 'hsl(35, 100%, 50%)', 'hsl(52, 100%, 50%)', 'hsl(83, 100%, 50%)', 'hsl(127, 100%, 50%)', 'hsl(160, 100%, 50%)', 'hsl(190, 100%, 50%)', 'hsl(212, 100%, 50%)', 'hsl(227, 100%, 50%)', 'hsl(242, 100%, 50%)', 'hsl(259, 100%, 50%)', 'hsl(273, 100%, 50%)', 'hsl(296, 100%, 50%)'];\n  var cLen = colors.length;\n  var clx = 0;\n  var circles = [];\n\n  points.forEach(function(point) {\n    clx = clx < cLen ? clx : 0;\n    var circle = {};\n    circle.reqX = point[0];\n    circle.reqY = point[1];\n    circle.fill = colors[clx];\n    circles.push(circle);\n    clx += 1;\n  });\n\n  var sim = d3.forceSimulation()\n        .force('charge', d3.forceManyBody().distanceMax(50))\n        .force('center', d3.forceCenter( 480, 250 ))\n        .alphaDecay(0.06);\n\n  var circs = svg.selectAll('circle')\n        .data(circles)\n        .enter()\n        .append('circle')\n          .attr('r', 5)\n          .attr('fill', function(d) { return d.fill })\n          .attr('transform', 'translate(480,250)')\n          .attr('opacity', 1);\n\n  sim\n    .nodes(circles)\n    .on('tick', function() {\n      circs\n        .attr('transform', function(d) {\n              return 'translate(' + d.x + ',' + d.y + ')';\n        });\n    })\n    .on('end', function() {\n      circs.each(function(p, i) {\n        d3.select(this)\n          .transition()\n          .duration(500)\n            .attr('transform', function(d) {\n              return 'translate(' + d.reqX + ',' + d.reqY + ')';\n            })\n          .on('end', function () {\n              if (i + 1 == cLen) {\n                blowUpCircs();\n                appendPaths();\n              }\n          });\n      });\n    });\n\n  function blowUpCircs() {\n    circs\n      .transition()\n      .delay(200)\n      .duration(1000)\n      .attr('r', 30)\n      .attr('opacity', 0);\n  }\n\n  function appendPaths() {\n    var paths = [{ id: 'dee-top', style: 'fill:url(#lg-dt)', points: [['M465.500', 366.708], ['L401.833', 303.042], ['C410.332', 287.251], [415.153, 269.188], [415.153, 250], ['C415.153', 188.095], [364.970, 137.912], [303.065, 137.912], ['L269', 137.912], ['L269', 50], ['L303.065', 50], ['C413.522', 50], [503.065, 139.543], [503.065, 250], ['C503.065', 293.558], [489.141, 333.863], [465.500, 366.708]] }, { id: 'dee-bottom', style: 'fill:url(#lg-b)', points: [['M465.500', 366.708], ['C429.192', 417.153], [369.964, 450], [303.065, 450], ['L269', 450], ['L269', 362.087], ['L303.065', 362.087], ['C345.781', 362.087], [382.916, 338.193], [401.833, 303.042], ['L465.500', 366.708]] }, { id: 'three-top', style: 'fill:url(#lg-3t)', points: [['M688.732', 349.524], ['C694.983', 314.612], [685.780, 278.070], [662.421, 250], ['C692.686', 213.630], [699.187, 163.040], [679.103, 120.200], ['C659.019', 77.360], [615.973, 49.999], [568.659, 50], ['L428', 50], ['L428', 50], ['C462.611', 71.680], [491.004, 101.971], [510.401, 137.912], ['L568.654', 137.912], ['C580.825', 137.912], [592.071, 144.405], [598.156, 154.945], ['C604.242', 165.485], [604.242, 178.470], [598.156, 189.010], ['C592.071', 199.551], [580.825, 206.043], [568.654, 206.043], ['L545.252', 206.043], ['L688.732', 349.524]] }, { id: 'three-mid', style: 'fill:url(#lg-3m)', points: [['M545.252', 206.043], ['L689.029', 349.821], ['C687.173', 360.040], [683.992, 370.117], [679.453, 379.799], ['C659.369', 422.639], [616.323, 450.000], [569.009, 450], ['L548.791', 450], ['L491.233', 392.441], ['C498.479', 382.870], [505.009, 372.726], [510.751, 362.087], ['L569.004', 362.087], ['C581.175', 362.087], [592.421, 355.594], [598.506, 345.054], ['C604.592', 334.514], [604.592, 321.529], [598.506, 310.989], ['C592.421', 300.448], [581.175, 293.956], [569.004, 293.956], ['L534.938', 293.956], ['C540.445', 264.910], [540.445, 235.089], [534.938, 206.043], ['L545.252', 206.043]] }, { id: 'three-bottom', style: 'fill:url(#lg-b)', points: [['M688.732', 349.524], ['M548.791', 450], ['L428', 450], ['C452.437', 434.692], [473.774, 415.092], [491.034, 392.242], ['L548.791', 450]] }];\n\n    paths.forEach(function(path) {\n      var d = '';\n      var logoEl;\n      path.points.forEach(function(point){\n        d += point[0] + ',' + point[1] + ' ';\n      });\n      d += ' Z';\n      logoEl = svg.append('path')\n        .attr('id', path.id)\n        .attr('style', path.style)\n        .attr('opacity', 0)\n        .attr('d', d);\n\n      logoEl\n        .transition()\n        .delay(600)\n        .duration(600)\n          .attr('opacity', 1)\n\n    });\n  }\n</script>", "description": "D3 Logo for VisFest", "created_at": "2016-10-12T06:24:20Z", "updated_at": "2016-10-12T06:24:20Z", "api": ["d3.select", "d3.forceSimulation", "d3.forceManyBody", "d3.forceCenter"], "readme": "Created for d3 VisFest unconf 2016\n\nuses forceSimulation and transitions. \n\nforked from <a href='http://bl.ocks.org/kenpenn/'>kenpenn</a>'s block: <a href='http://bl.ocks.org/kenpenn/b557ce50c952677e29354bc3c81f4c93'>D3 Logo for VisFest</a>", "uid": "ptvans_cd5c6e033b4a4b1c7ef8861c82319493"}, {"code": "<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height,\n    tau = 2 * Math.PI;\n\nvar buildings = d3.range(10).map(function(i) {\n  return {\n    x: (-0.5 + Math.random()) * width * 0.8,\n    y: (-0.5 + Math.random()) * height * 0.8,\n  };\n});\n\nvar nodes = d3.range(400).map(function(i) {\n  return {\n    r: Math.random() * 8 + 3,\n    building: Math.floor(Math.random() * buildings.length)\n  };\n});\n\n  \n  function shape(alpha){\n   for (var i = 0, n = nodes.length, node, k = alpha * 0.1; i < n; ++i) {\n    node = nodes[i];\n     var dx = node.x - buildings[node.building].x,\n         dy = node.y - buildings[node.building].y;\n     node.vx -= dx * k;\n     node.vy -= dy * k;\n   }\n  }\n  \nvar simulation = d3.forceSimulation(nodes)\n    //.velocityDecay(0.2)\n    .force(\"shape\", shape)\n    .force(\"collide\", d3.forceCollide().radius(function(d) { return d.r + 0.5; }).iterations(2))\n    .on(\"tick\", ticked);\n\nvar color = d3.scaleOrdinal(d3.schemeCategory10);\n  \nfunction ticked() {\n  context.clearRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n\n  nodes.forEach(function(d,i) {\n    context.beginPath();\n    context.moveTo(d.x + d.r, d.y);\n    context.arc(d.x, d.y, d.r, 0, tau);\n    context.fillStyle = color(d.building);\n    context.fill();\n    context.strokeStyle = \"white\";\n    context.stroke();\n  });\n  \n  context.restore();\n}\n\n</script>", "description": "Force move 400 dots in 10 buildings", "created_at": "2016-10-12T06:21:48Z", "updated_at": "2016-10-12T06:21:48Z", "api": ["d3.range", "d3.forceSimulation", "d3.forceCollide", "d3.scaleOrdinal"], "readme": "This example uses d3.forceCollide to prevent circles from overlapping.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/31ce330646fa8bcb7289ff3b97aab3f5'>Collision Detection</a>\n\nSee also [Bounded Force Layout - very tightly packed](http://bl.ocks.org/Fil/30afeb463ce552414f64).\n\nforked from <a href='http://bl.ocks.org/Fil/'>Fil</a>'s block: <a href='http://bl.ocks.org/Fil/69f1d5f68099bf6350ed42aed0941e5c'>Collision Detection in a tight square</a>\n\nforked from <a href='http://bl.ocks.org/Fil/'>Fil</a>'s block: <a href='http://bl.ocks.org/Fil/07f00f90524c4c2b99c944780c2f4e7c'>Force move 400 dots in 10 buildings</a>", "uid": "ptvans_a05a937fccacdc3275d80e697648ca88"}, {"code": "<script>\n\nvar months,\n    monthKeys,\n    monthParse = d3.timeParse(\"%Y-%m\");\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 30, bottom: 30, left: 40},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar x = d3.scaleTime()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar voronoi = d3.voronoi()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); })\n    .extent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]]);\n\nvar line = d3.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); });\n\nd3.tsv(\"unemployment.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(months));\n  y.domain([0, d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]).nice();\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y).ticks(10, \"%\"))\n    .append(\"text\")\n      .attr(\"x\", 4)\n      .attr(\"y\", 0.5)\n      .attr(\"dy\", \"0.32em\")\n      .style(\"text-anchor\", \"start\")\n      .style(\"fill\", \"#000\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Unemployment Rate\");\n\n  g.append(\"g\")\n      .attr(\"class\", \"cities\")\n    .selectAll(\"path\")\n    .data(data)\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { d.line = this; return line(d.values); });\n\n  var focus = g.append(\"g\")\n      .attr(\"transform\", \"translate(-100,-100)\")\n      .attr(\"class\", \"focus\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 3.5);\n\n  focus.append(\"text\")\n      .attr(\"y\", -10);\n\n  var v = voronoi(d3.merge(data.map(function(d) { return d.values; })));\n\n  /* BEGIN */\n  // this part shows the voronoi, but it is not an active layer anymore\n  var voronoiGroup = g.append(\"g\")\n      .attr(\"class\", \"voronoi\");\n\n  voronoiGroup.selectAll(\"path\")\n    .data(v.polygons())\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { return d ? \"M\" + d.join(\"L\") + \"Z\" : null; });\n\n  d3.select(\"#show-voronoi\")\n      .property(\"disabled\", false)\n      .on(\"change\", function() { voronoiGroup.classed(\"voronoi--show\", this.checked); });\n  /* END */\n\n  // this is the active part\n  var site = null;\n  svg.on(\"mousemove\", function(){\n    var mouse = d3.mouse(this);\n    var newsite = v.find(mouse[0], mouse[1]);\n    if(newsite !== site) {\n       if (site) mouseout(site);\n       site = newsite;\n       if (site) mouseover(site);\n    }\n    \n  });\n  \n  function mouseover(d) {\n    d3.select(d.data.city.line).classed(\"city--hover\", true);\n    d.data.city.line.parentNode.appendChild(d.data.city.line);\n    focus.attr(\"transform\", \"translate(\" + x(d.data.date) + \",\" + y(d.data.value) + \")\");\n    focus.select(\"text\").text(d.data.city.name);\n  }\n\n  function mouseout(d) {\n    d3.select(d.data.city.line).classed(\"city--hover\", false);\n    focus.attr(\"transform\", \"translate(-100,-100)\");\n  }\n});\n\nfunction type(d, i, columns) {\n  if (!months) monthKeys = columns.slice(1), months = monthKeys.map(monthParse);\n  var c = {name: d.name.replace(/ (msa|necta div|met necta|met div)$/i, \"\"), values: null};\n  c.values = monthKeys.map(function(k, i) { return {city: c, date: months[i], value: d[k] / 100}; });\n  return c;\n}\n\n</script>", "description": "Multi-Line Voronoi using Voronoi.find()", "created_at": "2016-10-11T20:53:12Z", "updated_at": "2016-10-11T21:09:13Z", "api": ["d3.timeParse", "d3.select", "d3.scaleTime", "d3.scaleLinear", "d3.voronoi", "d3.line", "d3.tsv", "d3.extent", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.merge", "d3.mouse"], "readme": "This [multi-line chart](/mbostock/3884955) uses a [Voronoi tessellation](/mbostock/4060366) to handle mouseover; the closest point to the mouse on any line is highlighted. Click the checkbox in the top-right to toggle the visibility of the underlying Voronoi diagram.\n\nThe main difference with <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s original block: <a href='http://bl.ocks.org/mbostock/8033015'>Multi-Line Voronoi</a> is that the real action is now happening in [`voronoi.find()`](https://github.com/d3/d3-voronoi/pull/18).\n\nWe don't _need_ a hidden SVG overlay. We just keep it there to display it on demand, but it's not used for the animation. ", "uid": "Fil_425346f63abddee5fea3fdcb76904820"}, {"code": "<script>\n\nvar normalizer;\n\nvar months,\n    monthFormat = d3.time.format(\"%Y-%m\");\n\nvar margin = {top: 20, right: 30, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar voronoi = d3.geom.voronoi()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); })\n    .clipExtent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]]);\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"unemployment.tsv\", type, function(error, cities) {\n  x.domain(d3.extent(months));\n  y.domain([0, d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\"));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .ticks(10, \"%\"))\n    .append(\"text\")\n      .attr(\"x\", 4)\n      .attr(\"dy\", \".32em\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Unemployment Rate\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"cities\")\n    .selectAll(\"path\")\n      .data(cities)\n    .enter().append(\"path\")\n      .each(function(d) { console.log(d.values); })\n      .attr(\"d\", function(d) { d.line = this; return line(d.values); });\n\n  var focus = svg.append(\"g\")\n      .attr(\"transform\", \"translate(-100,-100)\")\n      .attr(\"class\", \"focus\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 3.5);\n\n  focus.append(\"text\")\n      .attr(\"y\", -10);\n\n  var voronoiGroup = svg.append(\"g\")\n      .attr(\"class\", \"voronoi\");\n\n  voronoiGroup.selectAll(\"path\")\n      .data(voronoi(d3.nest()\n          .key(function(d) { return x(d.date) + \",\" + y(d.value); })\n          .rollup(function(v) { return v[0]; })\n          .entries(d3.merge(cities.map(function(d) { return d.values; })))\n          .map(function(d) { return d.values; })))\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; })\n      .datum(function(d) { return d.point; })\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout)\n      .on(\"click\", click);\n\n  d3.select(\"#show-voronoi\")\n      .property(\"disabled\", false)\n      .on(\"change\", function() { voronoiGroup.classed(\"voronoi--show\", this.checked); });\n\n  function mouseover(d) {\n    d3.select(d.city.line).classed(\"city--hover\", true);\n    d.city.line.parentNode.appendChild(d.city.line);\n    focus.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.value) + \")\");\n    focus.select(\"text\").text(d.city.name);\n  }\n\n  function mouseout(d) {\n    d3.select(d.city.line).classed(\"city--hover\", false);\n    focus.attr(\"transform\", \"translate(-100,-100)\");\n  }\n\n  function click(d) {\n    normalizer = d.city.values;\n\n    y.domain([0,2]);\n\n    d3.select(\".axis--y\")\n      .call(d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .ticks(10, \"%\"));\n\n    d3.select(\".axis--y text\")\n      .text(\"Unemployment rate as percentage of \" + d.name);\n\n    var normalLine = d3.svg.line()\n      .x(function(d) { return x(d.date); })\n      .y(function(d, i) { return y(d.value / normalizer[i].value); });\n\n    d3.selectAll(\"g.cities path\")\n      .transition()\n      .duration(5000)\n      .each(function(d) { console.log(d.values); })\n      .attr(\"d\", function(d) { return normalLine(d.values); });\n  }\n});\n\nfunction type(d, i) {\n  if (!i) months = Object.keys(d).map(monthFormat.parse).filter(Number);\n  var city = {\n    name: d.name.replace(/ (msa|necta div|met necta|met div)$/i, \"\"),\n    values: null\n  };\n  city.values = months.map(function(m) {\n    return {\n      city: city,\n      date: m,\n      value: d[monthFormat(m)] / 100\n    };\n  });\n  return city;\n}\n\n</script>", "description": "Multiline indexing", "created_at": "2016-10-11T14:18:51Z", "updated_at": "2016-10-11T14:18:51Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.geom.voronoi", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.max", "d3.svg.axis", "d3.nest", "d3.merge", "d3.selectAll"], "readme": "Based on @mbostock\u2019s [multi-line chart](/mbostock/3884955). Click to re-index all lines by the selected line (i.e. display as a percentage of). Obviously most of it does not work yet (doesn't recompute voronoi, for one thing). Needs an identity line (the original x-axis) so you can click to return to \"absolute\" terms. But like, absolute is always relative, man...\n\nforked from <a href='http://bl.ocks.org/tophtucker/'>tophtucker</a>'s block: <a href='http://bl.ocks.org/tophtucker/de217b74ec93e3c4766c'>Multiline indexing</a>", "uid": "lorenzopub_bd743979d44ebb58868a3b7ee0f74db4"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.temperature = +d.temperature;\n  });\n\n  x.domain([data[0].date, data[data.length - 1].date]);\n  y.domain(d3.extent(data, function(d) { return d.temperature; }));\n\n  svg.append(\"linearGradient\")\n      .attr(\"id\", \"temperature-gradient\")\n      .attr(\"gradientUnits\", \"userSpaceOnUse\")\n      .attr(\"x1\", 0).attr(\"y1\", y(50))\n      .attr(\"x2\", 0).attr(\"y2\", y(60))\n    .selectAll(\"stop\")\n      .data([\n        {offset: \"0%\", color: \"steelblue\"},\n        {offset: \"50%\", color: \"gray\"},\n        {offset: \"100%\", color: \"red\"}\n      ])\n    .enter().append(\"stop\")\n      .attr(\"offset\", function(d) { return d.offset; })\n      .attr(\"stop-color\", function(d) { return d.color; });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (F)\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n});\n\n</script>", "description": "Gradient Encoding", "created_at": "2016-10-11T14:14:26Z", "updated_at": "2016-10-11T14:14:26Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent"], "readme": "This variation of a [line chart](../3883245) demonstrates how to use a linear gradient as a quantitative color encoding redundant with *y*-position. The gradient units are defined as [userSpaceOnUse](http://www.w3.org/TR/SVG/pservers.html#LinearGradientElementGradientUnitsAttribute), such that the gradient stops can be positioned explicitly rather than based on the line\u2019s bounding box.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3969722'>Gradient Encoding</a>", "uid": "lorenzopub_66fee1bf5611f0cc2085ce8f2a60bfe3"}, {"code": "<script>\n    \n    // DATA\n    var nodes = [{}, {}, {}, {}, {}, {}, {}];\n    var links = [\n      \n        // one link\n        { source: 0, target: 1 },\n      \n        // two links\n        { source: 1, target: 2 }, \n      \t{ source: 1, target: 2 },\n      \n        // three links\n        { source: 2, target: 3 }, \n      \t{ source: 2, target: 3 }, \n        { source: 2, target: 3 },\n      \n        // four links\n        { source: 3, target: 4 }, \n        { source: 3, target: 4 }, \n        { source: 3, target: 4 }, \n      \t{ source: 3, target: 4 },\n      \n        // five links\n        { source: 4, target: 5 }, \n        { source: 4, target: 5 }, \n        { source: 4, target: 5 }, \n        { source: 4, target: 5 }, \n        { source: 4, target: 5 },\n\n      \t// twenty links\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 },\n        { source: 5, target: 6 }\n    ];\n\n    // DATA FORMATTING\n\n    _.each(links, function(link) {\n\n        // find other links with same target+source or source+target\n        var same = _.where(links, {\n            'source': link.source,\n            'target': link.target\n        });\n        var sameAlt = _.where(links, {\n            'source': link.target,\n            'target': link.source\n        });\n        var sameAll = same.concat(sameAlt);\n\n        _.each(sameAll, function(s, i) {\n            s.sameIndex = (i + 1);\n            s.sameTotal = sameAll.length;\n            s.sameTotalHalf = (s.sameTotal / 2);\n            s.sameUneven = ((s.sameTotal % 2) !== 0);\n            s.sameMiddleLink = ((s.sameUneven === true) && (Math.ceil(s.sameTotalHalf) === s.sameIndex));\n            s.sameLowerHalf = (s.sameIndex <= s.sameTotalHalf);\n            s.sameArcDirection = s.sameLowerHalf ? 0 : 1;\n            s.sameIndexCorrected = s.sameLowerHalf ? s.sameIndex : (s.sameIndex - Math.ceil(s.sameTotalHalf));\n        });\n    });\n\n    var maxSame = _.chain(links)\n        .sortBy(function(x) {\n            return x.sameTotal;\n        })\n        .last()\n        .value().sameTotal;\n\n    _.each(links, function(link) {\n        link.maxSameHalf = Math.floor(maxSame / 3);\n    });\n\n    // FORCE\n\n    var width = 960,\n        height = 500;\n\n    var force = d3.layout.force()\n        .nodes(nodes)\n        .links(links)\n        .size([width, height])\n        .linkDistance(100)\n        .charge(-200)\n        .on('tick', tick)\n        .start();\n\n    // for a static force uncomment the following\n    //     for ( var i = (nodes.length * nodes.length * nodes.length); i > 0; --i ) {\n    //         force.tick();\n    //     }\n    //     force.stop();\n\n    // RENDER\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var path = svg.append(\"g\").selectAll(\"path\")\n        .data(force.links())\n        .enter().append(\"path\")\n        .style(\"stroke\", function(d) {\n            return d3.scale.category20().range()[d.sameIndex - 1];\n        });\n\n    var circle = svg.append(\"g\").selectAll(\"circle\")\n        .data(force.nodes())\n        .enter().append(\"circle\")\n        .attr(\"r\", 8)\n        .call(force.drag);\n\n    // TICK\n\n    function tick(d) {\n        circle.attr(\"transform\", function(d) {\n            return \"translate(\" + d.x + \",\" + d.y + \")\";\n        });\n        path.attr(\"d\", linkArc);\n    }\n\n    // ARC CALCULATION\n\n    // some more info: http://stackoverflow.com/questions/11368339/drawing-multiple-edges-between-two-nodes-with-d3\n    function linkArc(d) {\n        var dx = (d.target.x - d.source.x),\n            dy = (d.target.y - d.source.y),\n            dr = Math.sqrt(dx * dx + dy * dy),\n            unevenCorrection = (d.sameUneven ? 0 : 0.5),\n            arc = ((dr * d.maxSameHalf) / (d.sameIndexCorrected - unevenCorrection));\n\n        if (d.sameMiddleLink) {\n            arc = 0;\n        }\n\n        return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + arc + \",\" + arc + \" 0 0,\" + d.sameArcDirection + \" \" + d.target.x + \",\" + d.target.y;\n    }\n\n  </script>", "description": "force layout with multiple links between nodes", "created_at": "2016-10-11T07:04:09Z", "updated_at": "2016-10-11T07:05:42Z", "api": ["d3.layout.force", "d3.select", "d3.scale.category20"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "thomasdobber_9b78824119136778052f64a967c070e0"}, {"code": "<script>\n\nlet margin = {top: 100, right: 100, bottom: 100, left: 100};\n\nlet width = 960,\n    height = 500,\n    padding = 1.5, // separation between same-color circles\n    clusterPadding = 6, // separation between different-color circles\n    maxRadius = 12;\n    \nlet n = 200, // total number of nodes\n    m = 10, // number of distinct clusters\n    z = d3.scaleOrdinal(d3.schemeCategory20),\n    clusters = new Array(m);\n\nlet svg = d3.select('body')\n    .append('svg')\n    .attr('height', height)\n    .attr('width', width)\n    .append('g').attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');\n\nlet nodes = d3.range(200).map(() => {\n    let i = Math.floor(Math.random() * m),\n        radius = Math.sqrt((i + 1) / m * -Math.log(Math.random())) * maxRadius,\n        d = {cluster: i, r: radius};\n    if (!clusters[i] || (radius > clusters[i].r)) clusters[i] = d;\n    return d;\n});\n\nlet circles = svg.append('g')\n      .datum(nodes)\n    .selectAll('.circle')\n      .data(d => d)\n    .enter().append('circle')\n      .attr('r', (d) => d.r)\n      .attr('fill', (d) => z(d.cluster))\n      .attr('stroke', 'black')\n      .attr('stroke-width', 1);\n\nlet simulation = d3.forceSimulation(nodes)\n    .velocityDecay(0.2)\n    .force(\"x\", d3.forceX().strength(.0005))\n    .force(\"y\", d3.forceY().strength(.0005))\n    .force(\"collide\", collide)\n    .force(\"cluster\", clustering)\n    .on(\"tick\", ticked);\n\nfunction ticked() {\n    circles\n        .attr('cx', (d) => d.x)\n        .attr('cy', (d) => d.y);\n}   \n\n// These are implementations of the custom forces.\nfunction clustering(alpha) {\n    nodes.forEach(function(d) {\n      var cluster = clusters[d.cluster];\n      if (cluster === d) return;\n      var x = d.x - cluster.x,\n          y = d.y - cluster.y,\n          l = Math.sqrt(x * x + y * y),\n          r = d.r + cluster.r;\n      if (l !== r) {\n        l = (l - r) / l * alpha;\n        d.x -= x *= l;\n        d.y -= y *= l;\n        cluster.x += x;\n        cluster.y += y;\n      }  \n    });\n}\n\nfunction collide(alpha) {\n  var quadtree = d3.quadtree()\n      .x((d) => d.x)\n      .y((d) => d.y)\n      .addAll(nodes);\n\n  nodes.forEach(function(d) {\n    var r = d.r + maxRadius + Math.max(padding, clusterPadding),\n        nx1 = d.x - r,\n        nx2 = d.x + r,\n        ny1 = d.y - r,\n        ny2 = d.y + r;\n    quadtree.visit(function(quad, x1, y1, x2, y2) {\n\n      if (quad.data && (quad.data !== d)) {\n        var x = d.x - quad.data.x,\n            y = d.y - quad.data.y,\n            l = Math.sqrt(x * x + y * y),\n            r = d.r + quad.data.r + (d.cluster === quad.data.cluster ? padding : clusterPadding);\n        if (l < r) {\n          l = (l - r) / l * alpha;\n          d.x -= x *= l;\n          d.y -= y *= l;\n          quad.data.x += x;\n          quad.data.y += y;\n        }\n      }\n      return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n    });\n  });\n}\n</script>", "description": "Clustered Force Layout 4.0", "created_at": "2016-10-11T04:58:05Z", "updated_at": "2016-10-11T04:58:06Z", "api": ["d3.scaleOrdinal", "d3.select", "d3.range", "d3.forceSimulation", "d3.forceX", "d3.forceY", "d3.quadtree"], "readme": "\n\nforked from <a href='http://bl.ocks.org/shancarter/'>shancarter</a>'s block: <a href='http://bl.ocks.org/shancarter/f621ac5d93498aa1223d8d20e5d3a0f4'>Clustered Force Layout 4.0</a>", "uid": "lorenzopub_1dca7b205cfe5b9733afe831c7719a9d"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height / 2 + 20) + \")\");\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar cluster = d3.cluster()\n    .size([360, width / 2 - 120]);\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sort(function(a, b) { return a.height - b.height || a.id.localeCompare(b.id); });\n\n  cluster(root);\n\n  var link = g.selectAll(\".link\")\n      .data(root.descendants().slice(1))\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        return \"M\" + project(d.x, d.y)\n            + \"C\" + project(d.x, (d.y + d.parent.y) / 2)\n            + \" \" + project(d.parent.x, (d.y + d.parent.y) / 2)\n            + \" \" + project(d.parent.x, d.parent.y);\n      });\n\n  var node = g.selectAll(\".node\")\n      .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"); })\n      .attr(\"transform\", function(d) { return \"translate(\" + project(d.x, d.y) + \")\"; });\n\n  node.append(\"circle\")\n      .attr(\"r\", 2.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", \"0.31em\")\n      .attr(\"x\", function(d) { return d.x < 180 === !d.children ? 6 : -6; })\n      .style(\"text-anchor\", function(d) { return d.x < 180 === !d.children ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x < 180 ? d.x - 90 : d.x + 90) + \")\"; })\n      .text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1); });\n});\n\nfunction project(x, y) {\n  var angle = (x - 90) / 180 * Math.PI, radius = y;\n  return [radius * Math.cos(angle), radius * Math.sin(angle)];\n}\n\n</script>", "description": "Radial Dendrogram", "created_at": "2016-10-11T04:57:57Z", "updated_at": "2016-10-11T04:57:57Z", "api": ["d3.select", "d3.stratify", "d3.cluster", "d3.csv"], "readme": "\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4739610f6d96aaad2fb1e78a72b385ab'>Radial Dendrogram</a>", "uid": "lorenzopub_526f5145c24c0a1c9f0b237102b23cd1"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(40,0)\");\n\nvar tree = d3.tree()\n    .size([height - 400, width - 160]);\n\nvar cluster = d3.cluster()\n    .size([height, width - 160]);\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sort(function(a, b) { return (a.height - b.height) || a.id.localeCompare(b.id); });\n\n  cluster(root);\n\n  var link = g.selectAll(\".link\")\n      .data(root.descendants().slice(1))\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal);\n\n  var node = g.selectAll(\".node\")\n      .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"); })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  node.append(\"circle\")\n      .attr(\"r\", 2.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", 3)\n      .attr(\"x\", function(d) { return d.children ? -8 : 8; })\n      .style(\"text-anchor\", function(d) { return d.children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1); });\n\n  d3.selectAll(\"input\")\n      .on(\"change\", changed);\n\n  var timeout = setTimeout(function() {\n    d3.select(\"input[value=\\\"tree\\\"]\")\n        .property(\"checked\", true)\n        .dispatch(\"change\");\n  }, 1000);\n\n  function changed() {\n    timeout = clearTimeout(timeout);\n    (this.value === \"tree\" ? tree : cluster)(root);\n    var t = d3.transition().duration(750);\n    node.transition(t).attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n    link.transition(t).attr(\"d\", diagonal);\n  }\n});\n\nfunction diagonal(d) {\n  return \"M\" + d.y + \",\" + d.x\n      + \"C\" + (d.parent.y + 100) + \",\" + d.x\n      + \" \" + (d.parent.y + 100) + \",\" + d.parent.x\n      + \" \" + d.parent.y + \",\" + d.parent.x;\n}\n\n</script>", "description": "Tidy Tree vs. Dendrogram", "created_at": "2016-10-11T04:57:33Z", "updated_at": "2016-10-11T04:57:33Z", "api": ["d3.select", "d3.tree", "d3.cluster", "d3.stratify", "d3.csv", "d3.selectAll", "d3.transition"], "readme": "\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/e9ba78a2c1070980d1b530800ce7fa2b'>Tidy Tree vs. Dendrogram</a>", "uid": "lorenzopub_edb3d59d8a1a5d5524a6a3efb98fb27d"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d[\"New York\"]); });\n\nvar area = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y1(function(d) { return y(d[\"New York\"]); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d[\"New York\"]= +d[\"New York\"];\n    d[\"San Francisco\"] = +d[\"San Francisco\"];\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(data, function(d) { return Math.min(d[\"New York\"], d[\"San Francisco\"]); }),\n    d3.max(data, function(d) { return Math.max(d[\"New York\"], d[\"San Francisco\"]); })\n  ]);\n\n  svg.datum(data);\n\n  svg.append(\"clipPath\")\n      .attr(\"id\", \"clip-below\")\n    .append(\"path\")\n      .attr(\"d\", area.y0(height));\n\n  svg.append(\"clipPath\")\n      .attr(\"id\", \"clip-above\")\n    .append(\"path\")\n      .attr(\"d\", area.y0(0));\n\n  svg.append(\"path\")\n      .attr(\"class\", \"area above\")\n      .attr(\"clip-path\", \"url(#clip-above)\")\n      .attr(\"d\", area.y0(function(d) { return y(d[\"San Francisco\"]); }));\n\n  svg.append(\"path\")\n      .attr(\"class\", \"area below\")\n      .attr(\"clip-path\", \"url(#clip-below)\")\n      .attr(\"d\", area);\n\n  svg.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (F)\");\n});\n\n</script>", "description": "Difference Chart", "created_at": "2016-10-11T04:55:29Z", "updated_at": "2016-10-11T04:55:29Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.select", "d3.tsv", "d3.extent", "d3.min", "d3.max"], "readme": "This variation of a [bivariate area chart](../3884914) uses clipping to alternate colors. When New York is warmer than San Francisco, the difference between the two is filled in green. When San Francisco is warmer, the difference is filled in red. A similar technique was used by [William Playfair](http://en.wikipedia.org/wiki/William_Playfair) all the way back in 1786.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3894205'>Difference Chart</a>", "uid": "lorenzopub_fca46894abbf8c1180f041ecc087505a"}, {"code": "<script>\n  \n// After position the annotation, run `copy(annotations)` in the browser's\n// console and paste over this array:\nvar annotations = [\n  {\n    \"cx\": 625,\n    \"cy\": 111,\n    \"r\": 109,\n    \"text\": \"The longer Old Faithful lays dormant, the longer the eruption last\",\n    \"textWidth\": 140,\n    \"textOffset\": [\n      121,\n      186\n    ]\n  }\n];\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = function(d) { return d.waiting; },\n    y = function(d) { return d.eruptions; }\n\nvar xScale = d3.scale.linear().range([0, width]),\n    yScale = d3.scale.linear().range([height, 0]);\n\nvar xValue = function(d) { return xScale(x(d)); },\n    yValue = function(d) { return yScale(y(d)); };\n\nvar xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\"),\n    yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar ringNote = d3.ringNote()\n  .draggable(true);\n\nd3.json(\"faithful.json\", function(error, data) {\n  if (error) throw error;\n  \n  xScale.domain(d3.extent(data, x));\n  yScale.domain(d3.extent(data, y));\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Time Between Eruptions (minutes)\");\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Eruption Duration (minutes)\");\n   \n   svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3)\n      .attr(\"cx\", xValue)\n      .attr(\"cy\", yValue);\n      \n   svg.append(\"g\")\n     .attr(\"class\", \"annotations\")\n     .call(ringNote, annotations);\n});\n\n</script>", "description": "Chart Annotation", "created_at": "2016-10-11T04:50:48Z", "updated_at": "2016-10-11T04:50:48Z", "api": ["d3.behavior.drag", "d3.svg.line", "d3.select", "d3.scale.linear", "d3.svg.axis", "d3.ringNote", "d3.json", "d3.extent"], "readme": "Example using the [d3.ringNote](https://github.com/armollica/d3-ring-note)\nplugin to add circle annotations to a chart. Drag the dashed circles and \nthe text to move the annotation elements. These moveable, \ndashed-line circles will disappear if `ringNote.draggable(false)` is called.\n\nThe chart shows the eruption duration and waiting time between eruptions\nfor the Old Faithful geyser in Yellowstone National Park. This is\nfrom the [`datasets`](https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/faithful.html)\nR package. \n\nforked from <a href='http://bl.ocks.org/armollica/'>armollica</a>'s block: <a href='http://bl.ocks.org/armollica/853c9344a7808619d863c8d7410062e6'>Chart Annotation</a>", "uid": "lorenzopub_35c309fc1c476f756ccc569584432b60"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nsvg = svg\n    .append('g');\n\n\nvar projection = d3.geoOrthographic().scale(214),\n    path = d3.geoPath().projection(projection).pointRadius(1);\n\n\nvar g = svg.append('g')\n    .attr('class', 'world')\n    .append('g')\n    .attr(\"class\", \"s\");\n\nvar defs = g.append(\"defs\");\n\ndefs.append(\"path\")\n    .datum({\n        type: \"Sphere\"\n    })\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\ng.append(\"use\")\n    .attr(\"xlink:href\", \"#sphere\")\n    .attr(\"fill\", \"#fcfcff\");\n\ndefs.append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n    .append(\"use\")\n    .attr(\"xlink:href\", \"#sphere\");\n\ng.attr(\"clip-path\", \"url(#clip)\")\n\ng.append('g')\n    .attr('class', 'countries');\n\ng.append(\"g\")\n    .attr(\"class\", \"polygons\")\n\nvar site = g.append(\"g\")\n    .attr(\"class\", \"site\")\n    .selectAll('path')\n    .data([null]);\nvar enter = site\n    .enter() \n    .append('path');\nsite = site.merge(enter);\n\nvar legend = svg\n    .append('text')\n    .attr('transform', 'translate(' + [width / 2, 30] + ')')\n    .attr('class', 'legend')\n    .attr('text-anchor', 'middle')\n    .attr('font-size', '20px')\n    .attr('font-family', 'Helvetica');\n\nvar drag = 0;\n\nd3.queue()\n    .defer(d3.json, 'countries.geojson')\n    .await(function (err, world) {\n        var visit = 0;\n        var countries = d3.select('.countries')\n            .selectAll('path')\n            .data(world.features);\n\n        var enter = countries.enter()\n            .append('path');\n        countries = countries.merge(enter);\n        countries\n            .attr('d', path)\n\n        var subregions = d3.set(world.features.map(function (d) {\n            return d.properties.subregion;\n        })).values();\n\n        go(countries, subregions[visit]);\n\n        d3.interval(visitnext, 1200)\n\n        function visitnext() {\n            if (drag) return;\n            visit = (visit + 1) % subregions.length;\n            go(countries, subregions[visit]);\n        }\n    });\n\nfunction go(countries, subregion) {\n\n    legend.text('The convex hull of ' + (subregion == 'Caribbean' || subregion == 'Seven seas (open ocean)' ? 'the ' : '') + subregion)\n\n    var sites = [],\n        centroids = [];\n\n    countries.data()\n        .filter(function (d) {\n            return d.properties.subregion == subregion;\n        })\n        .map(function (d) {\n            // remove French Guyane for the computation of bounds\n            var e = JSON.parse(JSON.stringify(d));\n            if (e.properties.iso_a3 == 'FRA') {\n                e.geometry.coordinates = d.geometry.coordinates.slice(2);\n            }\n            return e;\n        })\n        .map(function (d) {\n            var convex = d3.geoVoronoi()\n                .hull(d3.geoBounds(d))\n                .coordinates[0];\n            sites.push(convex[0]);\n            sites.push(convex[1]);\n            sites.push([convex[0][0], convex[1][1]]);\n            sites.push([convex[1][0], convex[0][1]]);\n            centroids.push(d3.geoCentroid(d));\n        });\n\n\n\n    var hull = d3.geoVoronoi().hull(sites);\n\n    // special case, sorry!\n    if (subregion == \"Antarctica\") {\n        hull = d3.geoCircle().center([0, -90]).radius(29)();\n    }\n\n    var rotation = d3.geoCentroid({\n            type: 'MultiPoint',\n            coordinates: sites\n        })\n        .map(function (x) {\n            return -x;\n        });\n\n    projection.rotate(rotation);\n\n    countries.attr(\"d\", path);\n\n    d3.select('.polygons path').remove();\n    var poly = d3.select('.polygons')\n        .append(\"path\")\n        .datum(hull)\n        .attr('d', path);\n\n    site.datum({\n            type: \"MultiPoint\",\n            coordinates: sites\n        });\n\n\n\n\n    function draw() {\n        poly.attr('d', path);\n        countries.attr(\"d\", path);\n        site.attr('d', path)\n    }\n\n    draw();\n\n\n    // drag and zoom\n    svg.select('.world')\n        .call(d3.drag()\n            .on(\"start\", dragstarted)\n            .on(\"drag\", dragged)\n            .on(\"end\", dragended)\n        )\n        .call(d3.zoom()\n            .scaleExtent([1, 8])\n            .on(\"zoom\", zoomed)\n            .on(\"start\", function () {\n                drag++;\n            })\n            .on(\"end\", function () {\n                setTimeout(function () {\n                    drag--;\n                }, 1500);\n            })\n        );\n\n    function zoomed() {\n        svg.select('.world').attr(\"transform\", d3.event.transform);\n    }\n\n    function dragstarted() {\n        drag++;\n        q = projection.rotate();\n        r = d3.mouse(this);\n    }\n\n    function dragended() {\n        setTimeout(function () {\n            drag--;\n        }, 2000);\n    }\n\n    var lambda = d3.scaleLinear()\n        .domain([0, width])\n        .range([-180, 180]);\n\n    var phi = d3.scaleLinear()\n        .domain([0, height])\n        .range([90, -90]);\n\n    function dragged() {\n        var p = d3.mouse(this);\n        projection.rotate([lambda(p[0]) - lambda(r[0]) + q[0], phi(p[1]) - phi(r[1]) + q[1]]);\n        draw();\n    }\n\n}\n</script>", "description": "geoVoronoi.hull()", "created_at": "2016-10-11T04:42:30Z", "updated_at": "2016-10-11T04:42:30Z", "api": ["d3.geoLength", "d3.select", "d3.geoOrthographic", "d3.geoPath", "d3.queue", "d3.set", "d3.interval", "d3.geoVoronoi", "d3.geoBounds", "d3.geoCentroid", "d3.geoCircle", "d3.drag", "d3.zoom", "d3.mouse", "d3.scaleLinear"], "readme": "Use [`geoVoronoi.hull`](https://github.com/Fil/d3-geo-voronoi/#geo_voronoi_hull) to compute the convex hull of a set of points in spherical coordinates.\n\nCountries are grouped by their (World Bank) subregion, and we extract the bounding box for each of them. Then we highlight the convex hull of the set of all corners of the bounding boxes.\n\n(With a special treatment for Antarctica and French Guyane.)\n\nWatch, drag, and zoom.\n\nforked from <a href='http://bl.ocks.org/Fil/'>Fil</a>'s block: <a href='http://bl.ocks.org/Fil/6a1ed09f6e5648a5451cb130f2b13d20'>geoVoronoi.hull()</a>", "uid": "lorenzopub_3cd429b7c660163030e9abfcefd3159a"}, {"code": "<script>\n\nvar margin = {\n    top: 1,\n    right: 1,\n    bottom: 6,\n    left: 1\n  },\n  width = 960 - margin.left - margin.right,\n  height = 500 - margin.top - margin.bottom;\n\nvar fontScale = d3.scaleLinear()\n  .range([8, 30]);\n\nvar formatNumber = d3.format(\",.0f\"),\n  format = function(d) {\n    return formatNumber(d) + \" TWh\";\n  },\n  color = d3.scaleOrdinal(d3.schemeCategory20);\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar weightText = svg.append(\"text\")\n  .text(\"Links weighted equally\")\n  .attr(\"x\", width/2-170)\n  .attr(\"y\", height)\n  .style(\"font-size\", \"24px\");\n\nvar sankey = d3.sankey()\n  .nodeWidth(15)\n  .nodePadding(10)\n  .size([width, height]);\n\nvar path = sankey.link();\n\nd3.json(\"energy.json\", function(energy) {\n  var empty_links = energy.links.map(function(d) {\n    d.id = d.source + \" -> \" + d.target;\n    return {\n      source: d.source,\n      target: d.target,\n      id: d.id,\n      value: 1\n    }\n  });\n\n  sankey\n    .nodes(energy.nodes)\n    .links(empty_links)\n    .layout(32);\n\n  fontScale.domain(d3.extent(energy.nodes, function(d) { return d.value }));\n\n  var link = svg.append(\"g\").selectAll(\".link\")\n    .data(empty_links, function(d) { return d.id; })\n    .enter().append(\"path\")\n    .attr(\"class\", \"link\")\n    .attr(\"d\", path)\n    .style(\"stroke-width\", function(d) {\n      return Math.max(1, d.dy) + \"px\";\n    })\n    .sort(function(a, b) {\n      return b.dy - a.dy;\n    });\n\n  link.append(\"title\")\n    .text(function(d) {\n      return d.source.name + \"  \" + d.target.name + \"\\n\" + format(d.value);\n    });\n\n  var node = svg.append(\"g\").selectAll(\".node\")\n    .data(energy.nodes, function(d) { return d.name; })\n    .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .attr(\"transform\", function(d) {\n      return \"translate(\" + d.x + \",\" + d.y + \")\";\n    });\n\n  node.append(\"rect\")\n    .attr(\"height\", function(d) {\n      return d.dy;\n    })\n    .attr(\"width\", sankey.nodeWidth())\n    .style(\"fill\", function(d) {\n      return d.color = color(d.name.replace(/ .*/, \"\"));\n    })\n    .style(\"stroke\", function(d) {\n      return d3.rgb(d.color).darker(1.8);\n    })\n    .append(\"title\")\n    .text(function(d) {\n      return d.name + \"\\n\" + format(d.value);\n    });\n\n  node.append(\"text\")\n    .attr(\"x\", -6)\n    .attr(\"y\", function(d) {\n      return d.dy / 2;\n    })\n    .attr(\"dy\", \".35em\")\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"transform\", null)\n    .style(\"fill\", function(d) {\n      return d3.rgb(d.color).darker(2.4);\n    })\n    .text(function(d) {\n      return d.name;\n    })\n    .style(\"font-size\", function(d) {\n      return Math.floor(fontScale(d.value)) + \"px\";\n    })\n    .filter(function(d) {\n      return d.x < width / 2;\n    })\n    .attr(\"x\", 6 + sankey.nodeWidth())\n    .attr(\"text-anchor\", \"start\");\n\n  function update(nodeData, linkData) {\n    sankey\n      .nodes(nodeData)\n      .links(linkData)\n      .layout(32);\n\n    sankey.relayout();\n    fontScale.domain(d3.extent(nodeData, function(d) { return d.value }));\n\n    svg.selectAll(\".link\")\n      .data(linkData, function(d) { return d.id; })\n      .sort(function(a, b) {\n        return b.dy - a.dy;\n      })\n      .transition()\n      .duration(1300)\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) {\n        return Math.max(1, d.dy) + \"px\";\n      });\n\n    svg.selectAll(\".node\")\n      .data(nodeData, function(d) { return d.name; })\n      .transition()\n      .duration(1300)\n      .attr(\"transform\", function(d) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      });\n\n    svg.selectAll(\".node rect\")\n      .transition()\n      .duration(1300)\n      .attr(\"height\", function(d) {\n        return d.dy;\n      });\n\n    svg.selectAll(\".node text\")\n      .transition()\n      .duration(1300)\n      .attr(\"y\", function(d) {\n        return d.dy / 2;\n      })\n      .style(\"font-size\", function(d) {\n        return Math.floor(fontScale(d.value)) + \"px\";\n      });\n  };\n\n  var counter = 0;\n  function toggleTransition() {\n    counter++;\n    var activeLinks = counter % 2 ? energy.links : empty_links;\n    weightText.text(counter % 2 ? \"Links weighted by value\" : \"Links weighted equally\");\n    update(energy.nodes, activeLinks);\n    setTimeout(toggleTransition, 2400);\n  };\n\n  setTimeout(toggleTransition, 2400);\n});\n\n</script>", "description": "Sankey Transitions", "created_at": "2016-10-11T04:40:42Z", "updated_at": "2016-10-11T04:40:42Z", "api": ["d3.scaleLinear", "d3.format", "d3.scaleOrdinal", "d3.select", "d3.sankey", "d3.json", "d3.extent", "d3.rgb"], "readme": "This example created for development purposes using the [d3-sankey](https://github.com/d3/d3-sankey) plugin for D3 4.0.\n\nBased on [xaranke's port](http://bl.ocks.org/xaranke/9ada4c74a87b57ae7308) of [Mike Bostock's Sankey Diagram](https://bost.ocks.org/mike/sankey/) with drag behavior enabled and several fixes for the d3 version 4.x release.\n\nIt would be nice if d3-sankey's `value` accessor was configurable, to avoid creating the `empty_links` data structure in the code below.\n\n\nforked from <a href='http://bl.ocks.org/syntagmatic/'>syntagmatic</a>'s block: <a href='http://bl.ocks.org/syntagmatic/77c7f7e8802e8824eed473dd065c450b'>Sankey Transitions</a>", "uid": "lorenzopub_cefd53c7fc67018efba0fe0460cdfd2a"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\nvar randomX = d3.random.normal(width / 2, 80),\n    randomY = d3.random.normal(height / 2, 80);\n\nvar data = d3.range(200)\n    .map(function() { return [randomX(), randomY()]; })\n    .filter(function(d) { return 0 <= d[0] && d[0] <= width && 0 <= d[1] && d[1] <= height; });\n\nvar cells = d3.geom.voronoi()\n    .clipExtent([[-1, -1], [width + 1, height + 1]])\n    (data)\n    .map(d3.geom.polygon);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar cell = svg.append(\"g\")\n    .attr(\"class\", \"cell\")\n  .selectAll(\"g\")\n    .data(cells)\n  .enter().append(\"g\");\n\ncell.append(\"path\")\n    .attr(\"class\", \"cell-center\")\n    .attr(\"d\", function(d) { return \"M\" + d.centroid() + \"L\" + d.point; });\n\ncell.append(\"path\")\n    .attr(\"class\", \"cell-border\")\n    .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; });\n\nsvg.append(\"g\")\n    .attr(\"class\", \"dot\")\n  .selectAll(\"circle\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"transform\", function(d) { return \"translate(\" + d + \")\"; })\n    .attr(\"r\", 2.5);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"label\")\n  .selectAll(\"text\")\n    .data(cells.filter(function(d) { return d.area() > 2000; }))\n  .enter().append(\"text\")\n    .attr(\"class\", function(d) {\n      var centroid = d.centroid(),\n          point = d.point,\n          angle = Math.round(Math.atan2(centroid[1] - point[1], centroid[0] - point[0]) / Math.PI * 2);\n      return \"label--\" + (d.orient = angle === 0 ? \"right\"\n          : angle === -1 ? \"top\"\n          : angle === 1 ? \"bottom\"\n          : \"left\");\n    })\n    .attr(\"transform\", function(d) { return \"translate(\" + d.point + \")\"; })\n    .attr(\"dy\", function(d) { return d.orient === \"left\" || d.orient === \"right\" ? \".35em\" : d.orient === \"bottom\" ? \".71em\" : null; })\n    .attr(\"x\", function(d) { return d.orient === \"right\" ? 6 : d.orient === \"left\" ? -6 : null; })\n    .attr(\"y\", function(d) { return d.orient === \"bottom\" ? 6 : d.orient === \"top\" ? -6 : null; })\n    .text(function(d, i) { return i; });\n\n</script>", "description": "Voronoi Labels", "created_at": "2016-10-11T04:32:32Z", "updated_at": "2016-10-11T04:32:32Z", "api": ["d3.random.normal", "d3.range", "d3.geom.voronoi", "d3.select"], "readme": "This example demonstrates the use of a [Voronoi tessellation](http://bl.ocks.org/mbostock/4060366) as a simple heuristic for labeling scatterplots. The area of the Voronoi cell associated with each point in the scatterplot is used to determine which points are labeled: points with large cells likely have enough room to accommodate labels. Then, the vector between the point and the associated cell\u2019s centroid (shown in orange) is used to choose between four label orientations: top, right, bottom and left.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6909318'>Voronoi Labels</a>\n\nforked from <a href='http://bl.ocks.org/domhorvath/'>domhorvath</a>'s block: <a href='http://bl.ocks.org/domhorvath/9de3007d51bbee999b6923b44ec2eb22'>Voronoi Labels</a>", "uid": "lorenzopub_4155479307b8821c910dab05576d421e"}, {"code": "<script>\n\nvar svg = d3.select(\"body\")\n\t.append(\"svg\")\n\t.append(\"g\")\n\nsvg.append(\"g\")\n\t.attr(\"class\", \"slices\");\nsvg.append(\"g\")\n\t.attr(\"class\", \"labels\");\nsvg.append(\"g\")\n\t.attr(\"class\", \"lines\");\n\nvar width = 960,\n    height = 450,\n\tradius = Math.min(width, height) / 2;\n\nvar pie = d3.layout.pie()\n\t.sort(null)\n\t.value(function(d) {\n\t\treturn d.value;\n\t});\n\nvar arc = d3.svg.arc()\n\t.outerRadius(radius * 0.8)\n\t.innerRadius(radius * 0.4);\n\nvar outerArc = d3.svg.arc()\n\t.innerRadius(radius * 0.9)\n\t.outerRadius(radius * 0.9);\n\nsvg.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nvar key = function(d){ return d.data.label; };\n\nvar color = d3.scale.ordinal()\n\t.domain([\"Lorem ipsum\", \"dolor sit\", \"amet\", \"consectetur\", \"adipisicing\", \"elit\", \"sed\", \"do\", \"eiusmod\", \"tempor\", \"incididunt\"])\n\t.range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nfunction randomData (){\n\tvar labels = color.domain();\n\treturn labels.map(function(label){\n\t\treturn { label: label, value: Math.random() }\n\t});\n}\n\nchange(randomData());\n\nd3.select(\".randomize\")\n\t.on(\"click\", function(){\n\t\tchange(randomData());\n\t});\n\n\nfunction change(data) {\n\n\t/* ------- PIE SLICES -------*/\n\tvar slice = svg.select(\".slices\").selectAll(\"path.slice\")\n\t\t.data(pie(data), key);\n\n\tslice.enter()\n\t\t.insert(\"path\")\n\t\t.style(\"fill\", function(d) { return color(d.data.label); })\n\t\t.attr(\"class\", \"slice\");\n\n\tslice\t\t\n\t\t.transition().duration(1000)\n\t\t.attrTween(\"d\", function(d) {\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\treturn arc(interpolate(t));\n\t\t\t};\n\t\t})\n\n\tslice.exit()\n\t\t.remove();\n\n\t/* ------- TEXT LABELS -------*/\n\n\tvar text = svg.select(\".labels\").selectAll(\"text\")\n\t\t.data(pie(data), key);\n\n\ttext.enter()\n\t\t.append(\"text\")\n\t\t.attr(\"dy\", \".35em\")\n\t\t.text(function(d) {\n\t\t\treturn d.data.label;\n\t\t});\n\t\n\tfunction midAngle(d){\n\t\treturn d.startAngle + (d.endAngle - d.startAngle)/2;\n\t}\n\n\ttext.transition().duration(1000)\n\t\t.attrTween(\"transform\", function(d) {\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\tvar pos = outerArc.centroid(d2);\n\t\t\t\tpos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n\t\t\t\treturn \"translate(\"+ pos +\")\";\n\t\t\t};\n\t\t})\n\t\t.styleTween(\"text-anchor\", function(d){\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\treturn midAngle(d2) < Math.PI ? \"start\":\"end\";\n\t\t\t};\n\t\t});\n\n\ttext.exit()\n\t\t.remove();\n\n\t/* ------- SLICE TO TEXT POLYLINES -------*/\n\n\tvar polyline = svg.select(\".lines\").selectAll(\"polyline\")\n\t\t.data(pie(data), key);\n\t\n\tpolyline.enter()\n\t\t.append(\"polyline\");\n\n\tpolyline.transition().duration(1000)\n\t\t.attrTween(\"points\", function(d){\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\tvar pos = outerArc.centroid(d2);\n\t\t\t\tpos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n\t\t\t\treturn [arc.centroid(d2), outerArc.centroid(d2), pos];\n\t\t\t};\t\t\t\n\t\t});\n\t\n\tpolyline.exit()\n\t\t.remove();\n};\n\n</script>", "description": "Pie charts labels", "created_at": "2016-10-11T04:28:57Z", "updated_at": "2016-10-11T04:29:23Z", "api": ["d3.select", "d3.layout.pie", "d3.svg.arc", "d3.scale.ordinal", "d3.interpolate"], "readme": "This variation of a donut chart demonstrates how to add labels with lines. Clicking on the button changes the displayed data.\nCheck [Pie Chart with Labels and Missing Data](http://bl.ocks.org/dbuezas/9572040) to see how to handle transitions with missing/new data.\n\n\n\nforked from <a href='http://bl.ocks.org/dbuezas/'>dbuezas</a>'s block: <a href='http://bl.ocks.org/dbuezas/9306799'>Pie charts labels</a>\n\nforked from <a href='http://bl.ocks.org/domhorvath/'>domhorvath</a>'s block: <a href='http://bl.ocks.org/domhorvath/ba3aa4bdb0652fcd8b98c59a33fcea1d'>Pie charts labels</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/678efd64f24f4eecadc6defbdc96f91e'>Pie charts labels</a>", "uid": "lorenzopub_8634242329da4dfb101c8732d73927ad"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar force = d3.layout.force()\n    .size([width, height]);\n\nd3.csv(\"graph.csv\", function(error, links) {\n  if (error) throw error;\n\n  var nodesByName = {};\n\n  // Create nodes for each unique source and target.\n  links.forEach(function(link) {\n    link.source = nodeByName(link.source);\n    link.target = nodeByName(link.target);\n  });\n\n  // Extract the array of nodes from the map by name.\n  var nodes = d3.values(nodesByName);\n\n  // Create the link lines.\n  var link = svg.selectAll(\".link\")\n      .data(links)\n    .enter().append(\"line\")\n      .attr(\"class\", \"link\");\n\n  // Create the node circles.\n  var node = svg.selectAll(\".node\")\n      .data(nodes)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"node\")\n      .attr(\"r\", 4.5)\n      .call(force.drag);\n\n  // Start the force layout.\n  force\n      .nodes(nodes)\n      .links(links)\n      .on(\"tick\", tick)\n      .start();\n\n  function tick() {\n    link.attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\n    node.attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; });\n  }\n\n  function nodeByName(name) {\n    return nodesByName[name] || (nodesByName[name] = {name: name});\n  }\n});\n\n</script>", "description": "Force Layout from CSV", "created_at": "2016-10-10T22:46:52Z", "updated_at": "2016-10-10T22:46:52Z", "api": ["d3.select", "d3.layout.force", "d3.csv", "d3.values"], "readme": "In response to a Stack Overflow question, [How to convert to D3's JSON format?](http://stackoverflow.com/questions/11088303/how-to-convert-to-d3s-json-format/11089330#11089330).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/2949937'>Force Layout from CSV</a>", "uid": "timvarga_95a9d00fac79b2892072dc6a5522ad08"}, {"code": "<script>\nvar colorScale = d3.scaleOrdinal().range([\"#f8a313\", \"#a5c4c5\", \"#bab218\", \"#f0d976\", \"#e8381b\", \"#ee791e\"]);\n\nvar filter = d3.select(\"svg\").append(\"defs\").append(\"filter\").attr(\"id\", \"gooeyCodeFilter\");\nfilter.append(\"feGaussianBlur\").attr(\"id\", \"gaussblurrer\").attr(\"in\", \"SourceGraphic\").attr(\"stdDeviation\", 4).attr(\"color-interpolation-filters\", \"sRGB\").attr(\"result\", \"blur\");\nfilter.append(\"feColorMatrix\").attr(\"in\", \"blur\").attr(\"mode\", \"matrix\").attr(\"values\", \"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 34 -7\").attr(\"result\", \"gooey\");\n\nvar svg = d3.select(\"svg\");\n\nd3.select(\"svg\").append(\"g\").attr(\"class\", \"bg\")\n\nd3.select(\"svg\").append(\"g\").attr(\"class\", \"fill\")\n    .style(\"filter\", \"url(#gooeyCodeFilter)\")\n\nd3.select(\"svg\").append(\"g\").attr(\"class\", \"border\")\n\nd3.select(\"svg\").append(\"g\").attr(\"class\", \"explosions\")\n    .style(\"filter\", \"url(#gooeyCodeFilter)\")\n\nvar sketchy = d3sketchy();\n\nvar projection = d3.geoArmadillo()\n.scale(300)\n.translate([600, 360])\n.parallel(20)\n.rotate([-12, 0])\n.precision(.1);\n\nvar geoPath = d3.geoPath().projection(projection);\n\nvar line = d3.line()\n  .x(function(d) { return d.x; })\n  .y(function(d) { return d.y; });\n\n\nvar numSides = 6\nvar sources\nvar countries\nvar sideHash\n  d3.json(\"simpleworld.json\", createMap);\n\n  var powers = [\"USA\", \"RUS\", \"CHN\", \"ISR\", \"IND\", \"PAK\", \"GBR\", \"FRA\"]\n\n  function createMap(world) {\n\n    countries = topojson.feature(world, world.objects.world);\n\n      renderMap(countries, projection)\n  }\n\n  function renderMap(countries, projection) {\n  sideHash = {}\n  countries.features = countries.features.filter(function (d) {return d.id !== \"ATA\"})\n  countries.features.forEach(function (d) {\n    sideHash[d.id] = parseInt(Math.random() * numSides)\n  })\n\n  sources = countries.features.filter(function (p) {return powers.indexOf(p.id) !== -1})\n\nd3.select(\"g.bg\")\n.selectAll(\"path\")\n.data(countries.features)\n.enter()\n.append(\"path\")\n.attr(\"d\", geoPath)\n.attr(\"class\", \"countries\")\n.each(function (d, i) {\n  d.centroid = geoPath.centroid(d)\n\n  var originalNode = this;\n  d.geometry.coordinates.forEach(function (p) {\n    if (p.length < 2) {\n      p = p[0];\n    }\n    var projectedArea = [];\n      p.forEach(function (coordinate) {\n        var proj = projection(coordinate);\n        projectedArea.push({x: proj[0], y: proj[1]});\n      })\n\n        sketchy.pathStroke({svg: d3.select(\"g.border\"), path:projectedArea, density:3, sketch:2, stroke: colorScale(sideHash[d.id]), strokeWidth: \"2px\"});\n    })\n})\n\nd3.select(\"g.fill\").selectAll(\"path\")\n  .attr(\"stroke-dasharray\", function () {return \"0,\" + this.getTotalLength()})\n  .transition()\n  .delay(function (d,i) {return i * 10})\n      .transition()\n      .duration(500)\n      .attrTween(\"stroke-dasharray\", tweenDash);\n\nd3.select(\"g.border\").selectAll(\"path\")\n  .style(\"fill\", \"none\")\n  .attr(\"stroke-dasharray\", function () {return \"0,\" + this.getTotalLength()})\n  .transition()\n  .delay(function (d,i) {return i * 10})\n      .transition()\n      .duration(500)\n      .attrTween(\"stroke-dasharray\", tweenDash);\n\n      nuke()\n    }\n\nfunction nuke() {\nd3.select(\"svg\")\n  .selectAll(\"path.nukelines\")\n  .data(d3.range(100))\n  .enter()\n  .append(\"path\")\n  .attr(\"class\", \"nukelines\")\n  .each(function (d,i) {\n    var p1 = parseInt(Math.random() * sources.length)\n    var targets = countries.features.filter(function (p) {return sideHash[p.id] !== sideHash[sources[p1].id]})\n\n    var p2 = parseInt(Math.random() * targets.length)\n    var x1 = sources[p1].centroid[0] + (Math.random() * 30) - 15\n    var y1 = sources[p1].centroid[1]\n    var x2 = targets[p2].centroid[0] + (Math.random() * 50) - 25\n    var y2 = targets[p2].centroid[1] + (Math.random() * 50) - 25\n\n    var delay = i < 10 ? 2000 + i * 150 : 3500 + i * 10\n\n    d3.select(this)\n    .attr(\"d\", \"M\" + x1 + \",\" + y1 + \" S\" + ((x1 + x2)/2) + \",\" + ((y1 + y2)/2 - 200) + \" \" + x2 + \",\" + y2)\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", d3.rgb(colorScale(sideHash[sources[p1].id])).brighter(.25))\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"0 \" + this.getTotalLength())\n    .transition()\n    .delay(delay)\n    .transition()\n    .duration(1000)\n    .style(\"stroke-dasharray\", this.getTotalLength() + \" 0\")\n\n    createExplosion(x2, y2, delay + 500, d3.rgb(colorScale(sideHash[sources[p1].id])).brighter(.5))\n  })\n\n  setTimeout(function(){ d3.selectAll(\"g.blast\").remove(); d3.selectAll(\"path.nukelines\").remove(); nuke() }, 8000);\n}\n\nfunction tweenDash() {\n  var l = this.getTotalLength(),\n      i = d3.interpolateString(\"0,\" + l, l + \",\" + l);\n  return function(t) { return i(t); };\n}\n\nfunction cheapSketchy(path) {\n  var length = path.getTotalLength();\n  var drawCode = \"\";\n  var x = 0;\n  var step = 2.5;\n\n  while (x < length / 2) {\n    var start = path.getPointAtLength(x);\n    var end = path.getPointAtLength(length - x);\n\n    drawCode += \" M\" + (start.x + (Math.random() * step - step/2)) + \" \" + (start.y + (Math.random() * step - step/2)) + \"L\" + (end.x + (Math.random() * step - step/2)) + \" \" + (end.y + (Math.random() * step - step/2));\n\n    x += step + (Math.random() * step);\n  }\n\n  return drawCode;\n}\n\nfunction createExplosion(x, y, delay, color) {\n  var explosionG = d3.select(\"g.explosions\")\n    .append(\"g\")\n    .attr(\"class\", \"blast\")\n    .attr(\"transform\", \"translate(\" + x + \",\" + y + \")\" )\n    .style(\"filter\", \"url(#gooeyCodeFilter)\")\n\n    explosionG\n    .append(\"path\")\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", \"none\")\n    .attr(\"d\", circlePath(20))\n\n    explosionG\n    .each(function (d,i) {\n      var artCircles = cheapPopArtsy(d3.select(this).select(\"path\").node())\n\n        d3.select(this)\n          .selectAll(\"circle\")\n          .data(artCircles)\n          .enter()\n          .append(\"circle\")\n          .attr(\"r\", 0)\n          .style(\"fill\", color)\n    })\n\nvar artBarTransition = explosionG\n      .transition()\n      .delay(delay)\n\n      artBarTransition\n      .selectAll(\"circle\")\n      .transition()\n      .delay(function (d) {return Math.abs(d[0] + d[1])})\n      .transition()\n      .duration(100)\n      .attr(\"r\", function () {return Math.random() * 5})\n      .attr(\"cx\", function (d) {return d[0]})\n      .attr(\"cy\", function (d) {return d[1]})\n\n}\n</script>", "description": "Wargames Aesthetic", "created_at": "2016-10-10T22:35:27Z", "updated_at": "2016-10-10T22:35:50Z", "api": ["d3.arc", "d3.line", "d3.curveCatmullRom.alpha", "d3.hsl", "d3.select", "d3.scaleOrdinal", "d3.geoArmadillo", "d3.geoPath", "d3.json", "d3.range", "d3.rgb", "d3.selectAll", "d3.interpolateString"], "readme": "Strange game. The only way to win is not to play.", "uid": "emeeks_912e24404b85a2af7dc7cb17927e816d"}, {"code": "<script>\n\nvar n = 20,\n    array = d3.shuffle(d3.range(n)),\n    actions = quicksort(array.slice()).reverse();\n\nvar margin = {top: 230, right: 40, bottom: 230, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .domain(d3.range(n))\n    .rangePoints([0, width]);\n\nvar a = d3.scale.linear()\n    .domain([0, n - 1])\n    .range([-45, 45]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar line = svg.append(\"g\")\n    .attr(\"class\", \"line\")\n  .selectAll(\"text\")\n    .data(array)\n  .enter().append(\"text\")\n    //.attr(\"transform\", transform)\n.text(function(d) {return d})\n    //.attr(\"y2\", -height);\n\nvar transition = d3.transition()\n    .duration(150)\n    .each(\"start\", function start() {\n      var action = actions.pop();\n      switch (action.type) {\n        case \"swap\": {\n          var i = action[0],\n              j = action[1],\n              li = line[0][i],\n              lj = line[0][j];\n          line[0][i] = lj;\n          line[0][j] = li;\n          transition.each(function() { line.transition().attr(\"transform\", transform); });\n          break;\n        }\n        case \"partition\": {\n          line.attr(\"class\", function(d, i) {\n            return i === action.pivot ? \"line--pivot\"\n                : action.left <= i && i < action.right ? null\n                : \"line--inactive\";\n          });\n          break;\n        }\n      }\n      if (actions.length) transition = transition.transition().each(\"start\", start);\n      else transition.each(\"end\", function() { line.attr(\"class\", null); });\n    });\n\nfunction transform(d, i) {\n  return \"translate(\" + x(i) + \",\" + height + \")\"//rotate(\" + a(d) + \")\";\n}\n\nfunction quicksort(array) {\n  var actions = [];\n\n  function partition(left, right, pivot) {\n    var v = array[pivot];\n    swap(pivot, --right);\n    for (var i = left; i < right; ++i) if (array[i] <= v) swap(i, left++);\n    swap(left, right);\n    return left;\n  }\n\n  function swap(i, j) {\n    if (i === j) return;\n    var t = array[i];\n    array[i] = array[j];\n    array[j] = t;\n    actions.push({type: \"swap\", \"0\": i, \"1\": j});\n  }\n\n  function recurse(left, right) {\n    if (left < right - 1) {\n      var pivot = (left + right) >> 1;\n      actions.push({type: \"partition\", \"left\": left, \"pivot\": pivot, \"right\": right});\n      pivot = partition(left, right, pivot);\n      recurse(left, pivot);\n      recurse(pivot + 1, right);\n    }\n  }\n\n  recurse(0, array.length);\n  return actions;\n}\n\n</script>", "description": "Quicksort IV", "created_at": "2016-10-10T21:01:11Z", "updated_at": "2016-10-10T21:01:11Z", "api": ["d3.shuffle", "d3.range", "d3.scale.ordinal", "d3.scale.linear", "d3.select", "d3.transition"], "readme": "An improved [quicksort animation](/mbostock/bd012e7bbe5f66c41d39) showing the active partition in black and the active pivot in red.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/e1e1e7e2c360bec054ba'>Quicksort IV</a>", "uid": "alexmacy_1e96757a9a5af1bc1242345b8b73acf0"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var margin = {top: 20, right: 20, bottom: 30, left: 40},\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\t\n    var x = d3.scale.linear()\n        .range([0, width]);\n\n    var y = d3.scale.linear()\n        .range([height, 0]);\n    \n    var select = d3.select('body').append('select').on('change', onChange);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    \n    var points;\n\n    function onChange(){\n      var group = select.property('value');\n      points.style('opacity', function(d){\n        return d.group == group ? 1:0;\n      });\n    }\n\n    d3.csv(\"data.csv\", function(error, data) {\n      if (error) throw error;\n\n      // Coerce the strings to numbers.\n      data.forEach(function(d) {\n        d.x = +d.x;\n        d.y = +d.y;\n      });\n      \n      var groups = d3.set(data.map(function(d){ return d.group; })).values();\n      console.log(groups);\n      \n      // create group filtering select list\n      select.selectAll('option')\n\t\t\t\t.data(groups)\n  \t\t\t.enter().append('option').text(function(d){ return d });\n\t\t\t\n      select.property('value', 1);\n      \n\n      // Compute the scales domains.\n      x.domain(d3.extent(data, function(d) { return d.x; })).nice();\n      y.domain(d3.extent(data, function(d) { return d.y; })).nice();\n\n      // Add the x-axis.\n      svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n      // Add the y-axis.\n      svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(d3.svg.axis().scale(y).orient(\"left\"));\n\n      // Add the points!\n      points = svg.selectAll(\".point\")\n        .data(data)\n        .enter().append(\"path\")\n          .attr(\"class\", \"point\")\n          .attr(\"d\", d3.svg.symbol().type(\"triangle-up\"))\n          .attr(\"transform\", function(d){ return \"translate(\"+x(d.x)+\",\"+y(d.y)+\")\";});\n  });\n    \n  \n  </script>", "description": "select list demo", "created_at": "2016-10-10T19:44:28Z", "updated_at": "2016-10-10T19:50:25Z", "api": ["d3.scale.linear", "d3.select", "d3.csv", "d3.set", "d3.extent", "d3.svg.axis", "d3.svg.symbol"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "pbellon_0c2447557cde990871e32f8cf517e8e2"}, {"code": "<script>\n\nvar svg = d3.select(\"body\")\n\t.append(\"svg\")\n\t.append(\"g\")\n\nsvg.append(\"g\")\n\t.attr(\"class\", \"slices\");\nsvg.append(\"g\")\n\t.attr(\"class\", \"labels\");\nsvg.append(\"g\")\n\t.attr(\"class\", \"lines\");\n\nvar width = 960,\n    height = 450,\n\tradius = Math.min(width, height) / 2;\n\nvar pie = d3.layout.pie()\n\t.sort(null)\n\t.value(function(d) {\n\t\treturn d.value;\n\t});\n\nvar arc = d3.svg.arc()\n\t.outerRadius(radius * 0.8)\n\t.innerRadius(radius * 0.4);\n\nvar outerArc = d3.svg.arc()\n\t.innerRadius(radius * 0.9)\n\t.outerRadius(radius * 0.9);\n\nsvg.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nvar key = function(d){ return d.data.label; };\n\nvar color = d3.scale.ordinal()\n\t.domain([\"Lorem ipsum\", \"dolor sit\", \"amet\", \"consectetur\", \"adipisicing\", \"elit\", \"sed\", \"do\", \"eiusmod\", \"tempor\", \"incididunt\"])\n\t.range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nfunction randomData (){\n\tvar labels = color.domain();\n\treturn labels.map(function(label){\n\t\treturn { label: label, value: Math.random() }\n\t});\n}\n\nchange(randomData());\n\nd3.select(\".randomize\")\n\t.on(\"click\", function(){\n\t\tchange(randomData());\n\t});\n\n\nfunction change(data) {\n\n\t/* ------- PIE SLICES -------*/\n\tvar slice = svg.select(\".slices\").selectAll(\"path.slice\")\n\t\t.data(pie(data), key);\n\n\tslice.enter()\n\t\t.insert(\"path\")\n\t\t.style(\"fill\", function(d) { return color(d.data.label); })\n\t\t.attr(\"class\", \"slice\");\n\n\tslice\t\t\n\t\t.transition().duration(1000)\n\t\t.attrTween(\"d\", function(d) {\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\treturn arc(interpolate(t));\n\t\t\t};\n\t\t})\n\n\tslice.exit()\n\t\t.remove();\n\n\t/* ------- TEXT LABELS -------*/\n\n\tvar text = svg.select(\".labels\").selectAll(\"text\")\n\t\t.data(pie(data), key);\n\n\ttext.enter()\n\t\t.append(\"text\")\n\t\t.attr(\"dy\", \".35em\")\n\t\t.text(function(d) {\n\t\t\treturn d.data.label;\n\t\t});\n\t\n\tfunction midAngle(d){\n\t\treturn d.startAngle + (d.endAngle - d.startAngle)/2;\n\t}\n\n\ttext.transition().duration(1000)\n\t\t.attrTween(\"transform\", function(d) {\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\tvar pos = outerArc.centroid(d2);\n\t\t\t\tpos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n\t\t\t\treturn \"translate(\"+ pos +\")\";\n\t\t\t};\n\t\t})\n\t\t.styleTween(\"text-anchor\", function(d){\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\treturn midAngle(d2) < Math.PI ? \"start\":\"end\";\n\t\t\t};\n\t\t});\n\n\ttext.exit()\n\t\t.remove();\n\n\t/* ------- SLICE TO TEXT POLYLINES -------*/\n\n\tvar polyline = svg.select(\".lines\").selectAll(\"polyline\")\n\t\t.data(pie(data), key);\n\t\n\tpolyline.enter()\n\t\t.append(\"polyline\");\n\n\tpolyline.transition().duration(1000)\n\t\t.attrTween(\"points\", function(d){\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\tvar pos = outerArc.centroid(d2);\n\t\t\t\tpos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n\t\t\t\treturn [arc.centroid(d2), outerArc.centroid(d2), pos];\n\t\t\t};\t\t\t\n\t\t});\n\t\n\tpolyline.exit()\n\t\t.remove();\n};\n\n</script>", "description": "Pie charts labels", "created_at": "2016-10-10T15:30:26Z", "updated_at": "2016-10-10T15:30:27Z", "api": ["d3.select", "d3.layout.pie", "d3.svg.arc", "d3.scale.ordinal", "d3.interpolate"], "readme": "This variation of a donut chart demonstrates how to add labels with lines. Clicking on the button changes the displayed data.\nCheck [Pie Chart with Labels and Missing Data](http://bl.ocks.org/dbuezas/9572040) to see how to handle transitions with missing/new data.\n\n\n\nforked from <a href='http://bl.ocks.org/dbuezas/'>dbuezas</a>'s block: <a href='http://bl.ocks.org/dbuezas/9306799'>Pie charts labels</a>", "uid": "domhorvath_ba3aa4bdb0652fcd8b98c59a33fcea1d"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\nvar randomX = d3.random.normal(width / 2, 80),\n    randomY = d3.random.normal(height / 2, 80);\n\nvar data = d3.range(200)\n    .map(function() { return [randomX(), randomY()]; })\n    .filter(function(d) { return 0 <= d[0] && d[0] <= width && 0 <= d[1] && d[1] <= height; });\n\nvar cells = d3.geom.voronoi()\n    .clipExtent([[-1, -1], [width + 1, height + 1]])\n    (data)\n    .map(d3.geom.polygon);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar cell = svg.append(\"g\")\n    .attr(\"class\", \"cell\")\n  .selectAll(\"g\")\n    .data(cells)\n  .enter().append(\"g\");\n\ncell.append(\"path\")\n    .attr(\"class\", \"cell-center\")\n    .attr(\"d\", function(d) { return \"M\" + d.centroid() + \"L\" + d.point; });\n\ncell.append(\"path\")\n    .attr(\"class\", \"cell-border\")\n    .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; });\n\nsvg.append(\"g\")\n    .attr(\"class\", \"dot\")\n  .selectAll(\"circle\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"transform\", function(d) { return \"translate(\" + d + \")\"; })\n    .attr(\"r\", 2.5);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"label\")\n  .selectAll(\"text\")\n    .data(cells.filter(function(d) { return d.area() > 2000; }))\n  .enter().append(\"text\")\n    .attr(\"class\", function(d) {\n      var centroid = d.centroid(),\n          point = d.point,\n          angle = Math.round(Math.atan2(centroid[1] - point[1], centroid[0] - point[0]) / Math.PI * 2);\n      return \"label--\" + (d.orient = angle === 0 ? \"right\"\n          : angle === -1 ? \"top\"\n          : angle === 1 ? \"bottom\"\n          : \"left\");\n    })\n    .attr(\"transform\", function(d) { return \"translate(\" + d.point + \")\"; })\n    .attr(\"dy\", function(d) { return d.orient === \"left\" || d.orient === \"right\" ? \".35em\" : d.orient === \"bottom\" ? \".71em\" : null; })\n    .attr(\"x\", function(d) { return d.orient === \"right\" ? 6 : d.orient === \"left\" ? -6 : null; })\n    .attr(\"y\", function(d) { return d.orient === \"bottom\" ? 6 : d.orient === \"top\" ? -6 : null; })\n    .text(function(d, i) { return i; });\n\n</script>", "description": "Voronoi Labels", "created_at": "2016-10-10T15:15:25Z", "updated_at": "2016-10-10T15:15:25Z", "api": ["d3.random.normal", "d3.range", "d3.geom.voronoi", "d3.select"], "readme": "This example demonstrates the use of a [Voronoi tessellation](http://bl.ocks.org/mbostock/4060366) as a simple heuristic for labeling scatterplots. The area of the Voronoi cell associated with each point in the scatterplot is used to determine which points are labeled: points with large cells likely have enough room to accommodate labels. Then, the vector between the point and the associated cell\u2019s centroid (shown in orange) is used to choose between four label orientations: top, right, bottom and left.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6909318'>Voronoi Labels</a>", "uid": "domhorvath_9de3007d51bbee999b6923b44ec2eb22"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n    margin = { top: 10, bottom: 25, left: 10, right: 50 }, // around the graph\n    spacing = { bottom: 15, right: 5 },\n    n = 8, // number of layers\n    m = 50, // numbe of samples per layer,\n    stack = d3.layout.stack(),\n    data = stack(d3.range(n).map(function() { return bumpLayer(m, .1); })),\n    ySplitMax = d3.max(data, function(layer) { return d3.max(layer, function(d) { return d.y; }); }),\n    yStackMax = d3.max(data, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); }),\n    duration = 1000,\n    isTransition = false;\n\n    svg = d3.select('body').append('svg')\n      .attr('width', width)\n      .attr('height', height);\n\nvar layout = 'stack';\n\nfunction translate(x, y) {\n  return \"translate(\" + x + \", \" + y + \")\";\n}\n\nfunction update(firstTime) {\n  function rowHeight() {\n    return Math.floor((height - margin.top - margin.bottom - (n - 1) * spacing.bottom) / n);\n  };\n\n  var lastRow = n - 1;\n\n  var x = d3.scale.linear()\n    .range([margin.left, width - margin.right])\n    .domain([0, m-1]);\n  var xAxis = d3.svg.axis()\n    .scale(x)\n    .orient('bottom');\n\n  var y = d3.scale.linear()\n\n  if (layout == 'stack') {\n    y.range([height - margin.top - margin.bottom, 0])\n      .domain([0, yStackMax]);\n  } else {\n    y.range([rowHeight(), 0])\n      .domain([0, ySplitMax])\n  }\n\n  yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"right\")\n    .ticks(layout == 'split' ? 3 : 10);\n\n  if (firstTime) {\n    svg.append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', translate(0, height - margin.top - margin.bottom + 5))\n      .call(xAxis)\n  }\n\n  var layers = svg.selectAll('g.layer')\n    .data(data, function(d) { return data.indexOf(d) });\n\n  var enterLayers = layers.enter()\n    .append('g')\n      .attr('class', 'layer')\n      .attr('width', width)\n      .attr('transform', function(d, i) {\n        if (layout == 'split') {\n          return translate(0, (lastRow - i) * (rowHeight() + spacing.bottom));\n        }\n      });\n\n  layers.exit().remove()\n\n  layers.transition()\n    .duration(duration)\n    .attr('transform', function(d, i) {\n      if (layout == 'stack') {\n        return translate(0, 0);\n      } else {\n        return translate(0, (lastRow - i) * (rowHeight() + spacing.bottom));\n      }\n    })\n    .each('start', function() { isTransition = true })\n    .each('end', function() { isTransition = false });\n\n  var zeroArea = d3.svg.area()\n    .x(function(d) { return x(d.x) })\n    .y0(y(0))\n    .y1(y(0));\n\n  var grayGradient = d3.interpolate('#666', '#ddd');\n\n  function color(d, i) {\n    i = data.indexOf(d);\n    return grayGradient(i / n);\n  }\n\n  var areas = enterLayers.append('path')\n    .attr('class', 'area')\n    .attr('d', zeroArea)\n    .style('fill', color)\n    .style('stroke', color)\n    .style('stroke-width', 1) // fill gaps between layers\n    .on('mouseover', function() {\n      !isTransition && d3.select(this).transition()\n        .style('fill', '#d66').style('stroke', '#d66');\n    })\n    .on('mouseout', function() {\n      !isTransition && d3.select(this).transition()\n        .style('fill', color).style('stroke', color);\n    });\n  var area = d3.svg.area()\n    .x(function(d) { return x(d.x) });\n\n  if (layout == 'stack') {\n    area.y0(function(d) { return y(d.y0); })\n      .y1(function(d) { return y(d.y0 + d.y); });\n  } else {\n    area.y0(y(0))\n      .y1(function(d) { return y(d.y)} );\n  }\n\n  layers.selectAll('path.area').transition()\n    .duration(duration)\n    .attr('d', area);\n\n  enterLayers.append('g')\n    .attr('class', 'y-axis')\n    .attr('transform', translate(width - margin.right + spacing.right, 0))\n    .attr('opacity', 0)\n\n  var yAxes = layers.selectAll('g.y-axis');\n  yAxes.transition()\n    .duration(duration)\n    .attr('opacity', function(d, i) {\n      i = data.indexOf(d);\n      if (layout == 'stack') {\n        return 1;\n      } else {\n        return 1;\n      }\n    })\n    .call(yAxis);\n}\n\n// Inspired by Lee Byron's test data generator.\n// Borrowed from http://bl.ocks.org/mbostock/3943967\nfunction bumpLayer(n, o) {\n\n  function bump(a) {\n    var x = 1 / (.1 + Math.random()),\n        y = 2 * Math.random() - .5,\n        z = 10 / (.1 + Math.random());\n    for (var i = 0; i < n; i++) {\n      var w = (i / n - y) * z;\n      a[i] += x * Math.exp(-w * w);\n    }\n  }\n\n  var a = [], i;\n  for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n  for (i = 0; i < 5; ++i) bump(a);\n  return a.map(function(d, i) { return {x: i, y: Math.max(0, d)}; });\n}\n\nupdate(true)\n\nsetTimeout(function() {\n  d3.select('input#stack').attr('checked', 'checked');\n}, duration);\n\nd3.selectAll('input').on('change', function() {\n  var e = d3.select(this);\n  if (e.attr('value') == 'stack' && e.attr('checked')) {\n    layout = 'stack';\n  } else {\n    layout = 'split';\n  }\n  update()\n});\n\n</script>", "description": "Stack-to-Split Transition", "created_at": "2016-10-10T13:26:11Z", "updated_at": "2016-10-10T13:26:12Z", "api": ["d3.layout.stack", "d3.range", "d3.max", "d3.select", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.interpolate", "d3.selectAll"], "readme": "# Stack-Split Transition\n\nTransitions between stacked and split (small multiples) area charts.\n\n\nforked from <a href='http://bl.ocks.org/zachmargolis/'>zachmargolis</a>'s block: <a href='http://bl.ocks.org/zachmargolis/9315833'>Stack-to-Split Transition</a>", "uid": "mashehu_281584920c26e2d617625270b75818a1"}, {"code": "<script>\n\t\tvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\");\n    \n    var tree = d3.tree()\n    .size([height, width]);\n    \n    var stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\n\t\td3.csv(\"data.csv\", function(error, data) {\n  \t\tif (error) throw error;\n           \n      var root = stratify(data).sort(function(a, b) {\n        return (a.height - b.height) || a.id.localeCompare(b.id); \n      });\n      \n      function collapse(d) {\n        if(d.children) {\n          d._children = d.children;\n          d._children.forEach(collapse);\n          d.children = null;\n        }\n      }\n      root.children.forEach(collapse);\n\n      tree(root);\n      \n      var link = g.selectAll(\".link\")\n      .data(root.descendants().slice(1))\n    \t.enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d,i) {\n            return \"M\" + d.x + \",\" + d.y\n            + \"C\" + (d.x + d.parent.x)/2  + \",\" + d.y/2\n            + \" \" + (d.x + d.parent.x)/2  + \",\" + (d.parent.y/2)\n            + \" \" + d.parent.x + \",\" + (d.parent.y/2); \n      });\n      \n      \n      var node = g.selectAll(\".node\")\n      .data(root.descendants())\n    \t.enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \t\t\t\t\" node--leaf\"); })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y/2 + \")\"; \t\t\t\t});\n      \n      \n            \n      node.append(\"rect\")\n      \t.attr('x',function(d){\n        \t\tif(d.children){\n            \treturn d.children +8;                  \n          \t}\n      \t\t})\n      \t.attr('y',function(d){return d.children -8;})\n      \t.attr('width',50)\n      \t.attr('height',20)\n      \t.attr('class','rect');\n      \n       node.append(\"text\")\n      \t.attr(\"dy\", 3)\n      \t.attr(\"x\", function(d) { return d.children ? -8 : 8; })\n      \t.style(\"text-anchor\", function(d) { return d.children ? \"end\" : \"start\"; })\n      \t.style('fill', 'yellow')\n      \t.text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1); });\n\n      \n     \n      \n\t\t});\n    \n  </script>", "description": "Spacetree ", "created_at": "2016-10-09T20:43:22Z", "updated_at": "2016-10-10T19:37:53Z", "api": ["d3.select", "d3.tree", "d3.stratify", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jorgeehernandez_c19d6eb6085cab208f56e79f22c39e35"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x0 = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar x1 = d3.scale.ordinal();\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#a05d56\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x0)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(d3.format(\".%\"));\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  var ageNames = d3.keys(data[0]).filter(function(key) { return key !== \"State\"; });\n\n  data.forEach(function(d) {\n    d.ages = ageNames.map(function(name) { return {name: name, value: +d[name]}; });\n  });\n\n  x0.domain(data.map(function(d) { return d.State; }));\n  x1.domain(ageNames).rangeRoundBands([0, x0.rangeBand()]);\n  y.domain([0, d3.max(data, function(d) { return d3.max(d.ages, function(d) { return d.value; }); })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Porcentaje\");\n\n  var state = svg.selectAll(\".state\")\n      .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"state\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x0(d.State) + \",0)\"; });\n\n  state.selectAll(\"rect\")\n      .data(function(d) { return d.ages; })\n    .enter().append(\"rect\")\n      .attr(\"width\", x1.rangeBand())\n      .attr(\"x\", function(d) { return x1(d.name); })\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); })\n      .style(\"fill\", function(d) { return color(d.name); });\n\n  var legend = svg.selectAll(\".legend\")\n      .data(ageNames.slice().reverse())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\n</script>", "description": "Grouped Bar Chart Modified", "created_at": "2016-10-09T20:41:22Z", "updated_at": "2016-10-09T21:04:24Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max"], "readme": "This grouped bar chart is constructed from a CSV file storing the populations of different states by age group. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding and color encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting#wiki-d3_format) - SI prefix formatting (e.g., \u201c10M\u201d for 10,000,000)\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887051'>Grouped Bar Chart</a>", "uid": "juanprq_07cc5a33514c56f4bf253d62066ee3f0"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\n  svg = svg\n.append('g')\n.attr(\"transform\", \"scale(-1, 1) translate(\"+ -width+\",0)\") // mirror for interior, remove this line for exterior\n  ;\n\n  var edimburg = [-3.19, 55.95]\n  \nvar projection = d3.geoConicEquidistant() // or geoConicEqualArea ??\n    .rotate([-edimburg[0],90-edimburg[1], 180]) // 180 puts edimburg on the circuference, 0 puts it in the center\n    .scale(80)\n    .translate([width / 2, 1.35 * height / 2])\n    .parallels([30,90])\n    .precision(0.1);\n\nvar graticule = d3.geoGraticule();\n\nvar path = d3.geoPath()\n    .projection(projection);\n\nvar defs = svg.append(\"defs\");\n\ndefs.append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\ndefs.append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"use\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"fill\")\n    .attr(\"xlink:href\", \"#sphere\");\n\n  if(false)\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"d\", path);\n\n  var lines = svg.append(\"g\"),\n      circles = svg.append(\"g\");\n  \nd3.json(\"https://rawgit.com/visionscarto/some-geo-data/master/ne_50m_admin_0_countries/countries.topo.json\", function(error, world) {\n  if (error) throw error;\n\n  if (true)\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.countries))\n      .attr(\"class\", \"land\")\n      .attr(\"clip-path\", \"url(#clip)\")\n      .attr(\"d\", path);\n\n  if (false)\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"clip-path\", \"url(#clip)\")\n      .attr(\"d\", path);\n  \n  var w = topojson.feature(world, world.objects.countries);\n  w.features.forEach(function(d, i){\n\n    // get the larget sub-polygon's coordinates\n    var coord = d.geometry.coordinates;\n    if (d.geometry.type == 'MultiPolygon') {\n      var u = d3.scan(\n        coord.map(function(p){\n          return -d3.polygonArea(p[0]);\n        })\n      );\n      coord = coord[u];\n    }\n\n  });\n\n\n});\n\n</script>", "description": "Hollow Globe [UNLISTED]", "created_at": "2016-10-09T17:47:44Z", "updated_at": "2016-10-10T21:11:04Z", "api": ["d3.select", "d3.geoConicEquidistant", "d3.geoGraticule", "d3.geoPath", "d3.json", "d3.scan", "d3.polygonArea"], "readme": "Trying to visualize the Hollow Globe as invented by Paul Reclus.", "uid": "Fil_d5a3c548be117b87ebd187eadc4510b3"}, {"code": "<script>\n          \n          function pictoGram() {\n          \n            //placeholder div for jquery slider\n            d3.select(\"body\").append(\"div\").attr(\"id\",\"sliderDiv\");\n            \n            \n            //create svg element\n            var svgDoc=d3.select(\"body\").append(\"svg\").attr(\"viewBox\",\"0 0 100 100\");\n            \n             //define an icon store it in svg <defs> elements as a reusable component - this geometry can be generated from Inkscape, Illustrator or similar\n            svgDoc.append(\"defs\")\n                .append(\"g\")\n                .attr(\"id\",\"iconCustom\")\n                .append(\"path\")\n                        .attr(\"d\",\"M3.5,2H2.7C3,1.8,3.3,1.5,3.3,1.1c0-0.6-0.4-1-1-1c-0.6,0-1,0.4-1,1c0,0.4,0.2,0.7,0.6,0.9H1.1C0.7,2,0.4,2.3,0.4,2.6v1.9c0,0.3,0.3,0.6,0.6,0.6h0.2c0,0,0,0.1,0,0.1v1.9c0,0.3,0.2,0.6,0.3,0.6h1.3c0.2,0,0.3-0.3,0.3-0.6V5.3c0,0,0-0.1,0-0.1h0.2c0.3,0,0.6-0.3,0.6-0.6V2.6C4.1,2.3,3.8,2,3.5,2z\");\n            \n            \n            //background rectangle\n            svgDoc.append(\"rect\").attr(\"width\",100).attr(\"height\",50);\n            \n            //specify the number of columns and rows for pictogram layout\n            var numCols = 10;\n            var numRows = 1;\n            \n            //padding for the grid\n            var xPadding = 10;\n            var yPadding = 15;\n            \n            //horizontal and vertical spacing between the icons\n            var hBuffer = 9;\n            var wBuffer = 8;\n            \n            //generate a d3 range for the total number of required elements\n            var myIndex=d3.range(numCols*numRows);\n            \n            //text element to display number of icons highlighted\n            svgDoc.append(\"text\")\n                .attr(\"id\",\"txtValue\")\n                .attr(\"x\",xPadding)\n                .attr(\"y\",yPadding)\n                .attr(\"dy\",-3)\n                .text(\"0\" );\n \n            //create group element and create an svg <use> element for each icon\n            svgDoc.append(\"g\")\n                .attr(\"id\",\"pictoLayer\")\n                .selectAll(\"use\")\n                .data(myIndex)\n                .enter()\n                .append(\"use\")\n                    .attr(\"xlink:href\",\"#iconCustom\")\n                    .attr(\"id\",function(d)    {\n                        return \"icon\"+d;\n                    })\n                    .attr(\"x\",function(d) {\n                        var remainder=d % numCols;//calculates the x position (column number) using modulus\n                        return xPadding+(remainder*wBuffer);//apply the buffer and return value\n                    })\n                      .attr(\"y\",function(d) {\n                        var whole=Math.floor(d/numCols)//calculates the y position (row number)\n                        return yPadding+(whole*hBuffer);//apply the buffer and return the value\n                    })\n                    .classed(\"iconPlain\",true);\n \n            //create a jquery slider to control the pictogram         \n             $( \"#sliderDiv\" ).slider({\n                  orientation: \"horizontal\",\n                  min: 0,\n                  max: 10,\n                  value: 0,\n                  slide: function( event, ui ) {\n                    d3.select(\"#txtValue\").text(ui.value);\n                    d3.selectAll(\"use\").attr(\"class\",function(d,i){\n                       if (d<ui.value)  {\n                           return \"iconSelected\";\n                       }    else    {\n                           return \"iconPlain\";\n                       }\n                    });\n                  }\n             });\n            };\n          \npictoGram();\n          \n          \n          \n        </script>", "description": "fresh block", "created_at": "2016-10-09T16:46:11Z", "updated_at": "2016-10-09T16:46:14Z", "api": ["d3.select", "d3.range", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/59de7dfa17d35c2c6592d9c0995f4f4b'>fresh block</a>", "uid": "Sokrates86_be74ebd338f422474528859b2742ef7a"}, {"code": "<script>\n  \n  \tvar width = 400;\n  \tvar height = 300;\n\n    var svg = d3.select(\"body\").append(\"svg\")\n    \t.attr(\"preserveAspectRatio\", \"xMinYMin meet\");\n  \n  \tvar container = d3.select(svg.parentNode);\n  \n  \tvar color = d3.scaleOrdinal(d3.schemeCategory20);\n    \n\t\tvar simulation = d3.forceSimulation()\n    \t.force(\"charge\", d3.forceManyBody())\n    \t.force(\"collide\", d3.forceCollide()\n       \t.radius(function(d) { return d.group * 5; }).iterations(1)\n       )\n    \t.force(\"link\", d3.forceLink()\n      \t.id(function(d) { return d.id; })\n        .distance(function(d) { return 10; })\n       )\n    \t.force(\"center\", d3.forceCenter(width / 2, height / 2))\n      .force(\"x\", d3.forceX())\n      .force(\"y\", d3.forceY());\n    \n\t\td3.json(\"data.json\", function(error, graph) {\n  \t\t\n      if (error) throw error;\n\n      var link = svg.append(\"g\")\n        .attr(\"class\", \"link\")\n        .selectAll(\".link\")\n        .data(graph.links)\n        .enter()\n      \t.append(\"line\")\n        .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n     \n\t\t\tvar node = svg.append(\"g\")\n      \t.attr(\"class\", \"node\")\n      \t.selectAll(\".node\")\n        .data(graph.nodes)   \t\n    \t\t.enter()\n      \t.append(\"g\");\n      \n      node\n      \t.append(\"circle\")\n      \t.attr(\"cx\", 0)\n      \t.attr(\"cy\", 0)\n      \t.attr(\"r\", 20)\n      \t.attr(\"fill\", function(d) { return color(d.group); });\n      \n// \t\t\tnode\n//       \t.append(\"text\")\n//         .attr(\"dx\", -5)\n//         .attr(\"dy\", \".35em\")\n//         .text(function(d) { return d.id });\n      \n\t\t\tnode\n        .on(\"mouseover\", function(d) {\n          var g = d3.select(this);\n          g.select('circle')\n            .attr('r', 50);\n          g.append('text')\n            .classed('info', true)\n            .attr('dx', -5)\n            .attr('dy', \".35em\")\n            .text(d.id);\n        })\n        .on(\"mouseout\", function() {\n          var g = d3.select(this);\n          g.select('circle')\n            .attr('r', 15);\n          g.select('text.info').remove();\n        });      \n      \n      node\n      \t.call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended)\n        );      \n\n      simulation\n        .nodes(graph.nodes)\n        .on(\"tick\", tick);\n\n  \t\tsimulation.force(\"link\")\n      \t.links(graph.links);\n\n      function tick() {\n        link\n          .attr(\"x1\", function(d) { return d.source.x; })\n          .attr(\"y1\", function(d) { return d.source.y; })\n          .attr(\"x2\", function(d) { return d.target.x; })\n          .attr(\"y2\", function(d) { return d.target.y; });\n        \n\t\t\t\tnode.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });        \n        \n      }\n\t\t});\n  \n  \tresize();\n  \n  \td3.select(window).on(\"resize\", resize);\n   \n    function resize() {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      svg\n      \t.attr(\"viewBox\", \"0 0 \" + width + \" \" + height );\n      simulation\n        .force(\"center\", d3.forceCenter(width / 2, height / 2))\n      \t.restart();\n    };  \n    \n    function dragstarted(d) {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    };\n\n    function dragged(d) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    };\n\n    function dragended(d) {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    };    \n\n</script>", "description": "D3 Force Sandbox", "created_at": "2016-10-08T15:04:29Z", "updated_at": "2016-10-08T21:28:56Z", "api": ["d3.select", "d3.scaleOrdinal", "d3.forceSimulation", "d3.forceManyBody", "d3.forceCollide", "d3.forceLink", "d3.forceCenter", "d3.forceX", "d3.forceY", "d3.json", "d3.drag"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "TomStanczyk_8cd26aabc37de17d837a85eeb3b420d5"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n\n    svg.append(\"text\")\n      .text(\"Edit the code below to change he!\")\n      .attr(\"y\", 200)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 36)\n      .style(\"font-family\", \"monospace\")\n\n  </script>", "description": "fresh block", "created_at": "2016-10-08T12:45:29Z", "updated_at": "2016-10-08T12:45:29Z", "api": ["d3.select"], "readme": "\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "ramtob_805a289ea113bcfa0fc9ca592f4cc5cf"}, {"code": "<script>\n\n// some colour variables\n  var tcBlack = \"#130C0E\";\n\n// rest of vars\nvar w = 960,\n    h = 800,\n    maxNodeSize = 50,\n    x_browser = 20,\n    y_browser = 25,\n    root;\n \nvar vis;\nvar force = d3.layout.force(); \n\nvis = d3.select(\"#vis\").append(\"svg\").attr(\"width\", w).attr(\"height\", h);\n \nd3.json(\"marvel.json\", function(json) {\n \n  root = json;\n  root.fixed = true;\n  root.x = w / 2;\n  root.y = h / 4;\n \n \n        // Build the path\n  var defs = vis.insert(\"svg:defs\")\n      .data([\"end\"]);\n \n \n  defs.enter().append(\"svg:path\")\n      .attr(\"d\", \"M0,-5L10,0L0,5\");\n \n     update();\n});\n \n \n/**\n *   \n */\nfunction update() {\n  var nodes = flatten(root),\n      links = d3.layout.tree().links(nodes);\n \n  // Restart the force layout.\n  force.nodes(nodes)\n        .links(links)\n        .gravity(0.05)\n    .charge(-1500)\n    .linkDistance(100)\n    .friction(0.5)\n    .linkStrength(function(l, i) {return 1; })\n    .size([w, h])\n    .on(\"tick\", tick)\n        .start();\n \n   var path = vis.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n \n    path.enter().insert(\"svg:path\")\n      .attr(\"class\", \"link\")\n      // .attr(\"marker-end\", \"url(#end)\")\n      .style(\"stroke\", \"#eee\");\n \n \n  // Exit any old paths.\n  path.exit().remove();\n \n \n \n  // Update the nodes\n  var node = vis.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id; });\n \n \n  // Enter any new nodes.\n  var nodeEnter = node.enter().append(\"svg:g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n      .on(\"click\", click)\n      .call(force.drag);\n \n  // Append a circle\n  nodeEnter.append(\"svg:circle\")\n      .attr(\"r\", function(d) { return Math.sqrt(d.size) / 10 || 4.5; })\n      .style(\"fill\", \"#eee\");\n \n   \n  // Append images\n  var images = nodeEnter.append(\"svg:image\")\n        .attr(\"xlink:href\",  function(d) { return d.img;})\n        .attr(\"x\", function(d) { return -25;})\n        .attr(\"y\", function(d) { return -25;})\n        .attr(\"height\", 50)\n        .attr(\"width\", 50);\n  \n  // make the image grow a little on mouse over and add the text details on click\n  var setEvents = images\n          // Append hero text\n          .on( 'click', function (d) {\n              d3.select(\"h1\").html(d.hero); \n              d3.select(\"h2\").html(d.name); \n              d3.select(\"h3\").html (\"Take me to \" + \"<a href='\" + d.link + \"' >\"  + d.hero + \" web page \"+ \"</a>\" ); \n           })\n\n          .on( 'mouseenter', function() {\n            // select element in current context\n            d3.select( this )\n              .transition()\n              .attr(\"x\", function(d) { return -60;})\n              .attr(\"y\", function(d) { return -60;})\n              .attr(\"height\", 100)\n              .attr(\"width\", 100);\n          })\n          // set back\n          .on( 'mouseleave', function() {\n            d3.select( this )\n              .transition()\n              .attr(\"x\", function(d) { return -25;})\n              .attr(\"y\", function(d) { return -25;})\n              .attr(\"height\", 50)\n              .attr(\"width\", 50);\n          });\n\n  // Append hero name on roll over next to the node as well\n  nodeEnter.append(\"text\")\n      .attr(\"class\", \"nodetext\")\n      .attr(\"x\", x_browser)\n      .attr(\"y\", y_browser +15)\n      .attr(\"fill\", tcBlack)\n      .text(function(d) { return d.hero; });\n \n \n  // Exit any old nodes.\n  node.exit().remove();\n \n \n  // Re-select for update.\n  path = vis.selectAll(\"path.link\");\n  node = vis.selectAll(\"g.node\");\n \nfunction tick() {\n \n \n    path.attr(\"d\", function(d) {\n \n     var dx = d.target.x - d.source.x,\n           dy = d.target.y - d.source.y,\n           dr = Math.sqrt(dx * dx + dy * dy);\n           return   \"M\" + d.source.x + \",\" \n            + d.source.y \n            + \"A\" + dr + \",\" \n            + dr + \" 0 0,1 \" \n            + d.target.x + \",\" \n            + d.target.y;\n  });\n    node.attr(\"transform\", nodeTransform);    \n  }\n}\n\n \n/**\n * Gives the coordinates of the border for keeping the nodes inside a frame\n * http://bl.ocks.org/mbostock/1129492\n */ \nfunction nodeTransform(d) {\n  d.x =  Math.max(maxNodeSize, Math.min(w - (d.imgwidth/2 || 16), d.x));\n    d.y =  Math.max(maxNodeSize, Math.min(h - (d.imgheight/2 || 16), d.y));\n    return \"translate(\" + d.x + \",\" + d.y + \")\";\n   }\n \n/**\n * Toggle children on click.\n */ \nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n \n  update();\n}\n \n \n/**\n * Returns a list of all nodes under the root.\n */ \nfunction flatten(root) {\n  var nodes = []; \n  var i = 0;\n \n  function recurse(node) {\n    if (node.children) \n      node.children.forEach(recurse);\n    if (!node.id) \n      node.id = ++i;\n    nodes.push(node);\n  }\n \n  recurse(root);\n  return nodes;\n} \n  \n  \n</script>", "description": "d3 | Force layout with images", "created_at": "2016-10-08T01:58:37Z", "updated_at": "2016-10-08T01:58:37Z", "api": ["d3.layout.force", "d3.select", "d3.json", "d3.layout.tree"], "readme": "Force layout test/experiment with images\n\nSources:\n- [Force Layout](https://github.com/mbostock/d3/wiki/Force-Layout)\n- [Force-based label placement](http://bl.ocks.org/MoritzStefaner/1377729)\n- [Collapsible force layout with directed paths and images/text in the nodes.](http://bl.ocks.org/djjupa/5653692)\n- [Labeled Force Layout](http://bl.ocks.org/mbostock/950642)\n\n\nforked from <a href='http://bl.ocks.org/eesur/'>eesur</a>'s block: <a href='http://bl.ocks.org/eesur/be2abfb3155a38be4de4'>d3 | Force layout with images</a>", "uid": "Thanaporn-sk_9e4b66a26b9ffb649511ba89ac71ead7"}, {"code": "<script>\n\nvar margin = {top: 8, right: 10, bottom: 2, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 69 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%b %Y\").parse;\n//var parseDate = d3.time.format(\"%Y-%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nd3.csv(\"post2015.csv\", type, function(error, data) {\n  var groups = d3.nest()\n      .key(function(d) { return d.group; })\n      .entries(data);\n\n  x.domain([\n    d3.min(groups, function(group) { return group.values[0].date; }),\n    d3.max(groups, function(group) { return group.values[group.values.length - 1].date; })\n  ]);\n\n  var svg = d3.select(\"body\").selectAll(\"svg\")\n      .data(groups)\n    .enter().append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .each(function(group) {\n        group.y = d3.scale.linear()\n            .domain([0, d3.max(group.values, function(d) { return d.tweets; })])\n            .range([height, 0]);\n      });\n\n  svg.append(\"path\")\n      .attr(\"class\", \"area\")\n      .attr(\"d\", function(group) {\n        return d3.svg.area()\n            .x(function(d) { return x(d.date); })\n            .y1(function(d) { return group.y(d.tweets); })\n            .y0(height)\n            (group.values);\n      });\n\n  svg.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(group) {\n        return d3.svg.line()\n            .x(function(d) { return x(d.date); })\n            .y(function(d) { return group.y(d.tweets); })\n            (group.values);\n      });\n\n  svg.append(\"text\")\n      .attr(\"x\", width - 6)\n      .attr(\"y\", height - 6)\n      .style(\"text-anchor\", \"end\")\n      .text(function(group) { return group.key; });\n});\n\nfunction type(d) {\n  d.tweets = +d.tweets;\n  d.date = parseDate(d.date);\n  return d;\n}\n\n</script>", "description": "Small Multiples with separate y-scales", "created_at": "2016-10-07T16:29:03Z", "updated_at": "2016-10-07T16:29:03Z", "api": ["d3.time.format", "d3.time.scale", "d3.csv", "d3.nest", "d3.min", "d3.max", "d3.select", "d3.scale.linear", "d3.svg.area", "d3.svg.line"], "readme": "A variant of Mike Bostock's [small multiples example](/mbostock/1157787) which, instead of resetting the domain of the *y*-scale every time it is used, creates a separate *y*-scale for each multiple.\n\nThis a version tailored for a project for [UN Global Pulse](http://www.unglobalpulse.org/).\n\nforked from <a href='http://bl.ocks.org/renecnielsen/'>renecnielsen</a>'s block: <a href='http://bl.ocks.org/renecnielsen/9533702'>Small Multiples with separate y-scales</a>", "uid": "Thanaporn-sk_4c8326c3481b57048cfafcf90f6ce23d"}, {"code": "<script>\n  'use strict';\n  var margin = {top: 30, right: 30, bottom: 2, left: 30},\n      data = [],\n      table, chart,\n      commasFormatter = d3.format(\",.0f\"),\n      mode = \"showInternet\",\n      svgGroup;\n\n  // get the raw data tsv file\n  d3.tsv(\"internetCellularGDP.txt\", function(error, json) {\n\n    var nest = d3.nest()\n        .key(function(d) { return d[\"Country Code\"]; })\n        .key(function(d) { return d[\"Indicator Code\"]; })\n        .entries(json);   \n\n    // create usable data structure, process country by country\n    nest.forEach(function(d) {\n      var include = true;\n      var item = {};\n\n      item.key = d.key;\n      item.countryCode = d.key;\n      item.countryName = d.values[0].values[0][\"Country Name\"];\n\n      [\"GDP\", \"Cellular\", \"Internet\"].forEach(function(c, i) {\n        var value = d.values[i].values[0][\"2012 [YR2012]\"];\n        if (value === \"..\") { include = false; return; } // exclude countries with any null values\n\n        item[\"indicatorName\" + c] = d.values[i].values[0][\"Indicator Name\"];\n        item[\"indicatorCode\" + c] = d.values[i].values[0][\"Indicator Code\"];\n        item[\"value\"         + c] = +value;\n      });\n\n      if (include) data.push(item);\n    });\n\n    // select the chart div\n    var chartDiv = d3.select(\"#chartDiv\")\n      .style(\"overflow\", \"scroll\");\n\n    // select the svg element\n    var svg = d3.select(\"#svgDiv\")\n      .attr(\"width\", \"580px\")\n      .attr(\"height\", \"430px\")\n      .style(\"margin-bottom\", \"10px\")\n      .style(\"margin-right\", \"10px\")\n      .style(\"background-color\", \"white\");\n\n    svgGroup = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \", \" + margin.top + \")\");\n\n    // create chart\n    chart = scatterView()\n      .accessor(mode)\n      .data(data);\n\n    chart(svgGroup);\n\n    // select table div\n    var tableDiv = d3.select(\"#tableDiv\")\n        .style(\"overflow\", \"scroll\")\n        .style(\"width\", \"330px\")\n        .style(\"height\", \"400px\")\n        .style(\"margin\", \"0px\")\n        .style(\"padding-left\", \"0px\");\n\n    // create table\n    table = tableView()\n      .data(data);\n\n    table(tableDiv);\n\n    // define handlers after chart and table are constructed\n    chart.on(\"filter\", function(filtered) {\n        table.data(filtered); \n        table(tableDiv); \n      });\n\n    table.on(\"hover\", function(item) {\n        chart.highlight(item)\n      });\n\n    chart.forceBrushEvent(); //TODO: upon initial load, table is not synced to brush\n\n\n    // chart function -----------------------------------------------------------------------------\n    function scatterView() {\n      var dispatch = d3.dispatch(chart, \"filter\");\n      var data, \n          dataYmax, dataXmax,\n          saveG,\n          radius = 7, radiusSelected = 9,\n          strokeWidth = 1,\n          fillOpacity = 0.5,\n          colorFill,\n          colorStroke,\n          mode = \"internet\",\n          colors = {\n            red:    'rgb(216, 50, 51)',\n            green:  'rgb(51, 164, 51)',\n            blue:   'rgb(42, 126, 184)',\n            orange: 'rgb(255, 134, 26)'\n          }\n\n      function x(g) {\n        // save reference to svg group (for highlight method)\n        saveG = g; \n\n        // get dimensions of parent\n        var container = d3.select(g.node().parentNode);\n        var width = +container.attr(\"width\").replace(\"px\", \"\");\n        var height = +container.attr(\"height\").replace(\"px\", \"\");\n\n        // remove all previous elements in group\n        g.selectAll(\"*\").remove();\n\n        // set dimensions\n        var chartWidth = width - 60;\n        var chartHeight = height - 60;\n\n        var xField = function(d) { return d.valueGDP; };\n        var yField = function(d) { return yAccessor(d); };\n\n        var yAccessor = function(d) {\n          if (mode == \"internet\") return d.valueInternet;\n          else return d.valueCellular;\n        }\n\n        dataYmax = d3.max(data, yField);\n        var yScale = d3.scale.linear()\n          .domain([0, d3.max(data, yField)])\n          .range([chartHeight, 0]);\n\n        dataXmax = d3.max(data, xField) + 10000;\n        var xScale = d3.scale.log()\n          .domain([d3.min(data, xField), d3.max(data, xField) + 10000])\n          .range([0, chartWidth - 10]);\n\n        // set colors for this mode\n        colorFill   = (mode === \"internet\" ? colors.orange : colors.green);\n        colorStroke = (mode === \"internet\" ? colors.orange : colors.green);\n\n        // set color scale for circle color --> not used at the moment\n        var colorScale = d3.scale.linear()\n          .domain([0, d3.max(data, function(d) { return d.valueGDP })])\n          .range([\"#17D84D\", \"#FF1D1D\"])\n          .interpolate(d3.interpolateHsl);  \n\n        // create circles for scatter chart, and bind data\n        var circles = g\n          .selectAll(\"circle\")\n          .data(data)\n          .enter()\n          .append(\"circle\")\n          .attr(\"cx\", function(d, i) { return xScale(xField(d)); })\n          .attr(\"cy\", function(d, i) { return yScale(yField(d)); })\n          .attr(\"r\", radius)\n          .style(\"fill\", colorFill)\n          .style(\"stroke\", colorStroke)\n          .style(\"stroke-width\", strokeWidth)\n          .style(\"fill-opacity\", fillOpacity)\n          .on(\"click\", function(d) { console.log(d.key); });\n\n        // setup y axis\n        var yaxis = d3.svg.axis()\n          .scale(yScale)\n          .orient(\"left\") //left, right, top\n          .ticks(4) //best guess\n\n        // call y axis\n        var yg = g.append(\"g\")\n          .call(yaxis)\n          .attr(\"class\", \"axis\");\n\n        yg\n          .append(\"text\")\n          .attr(\"transform\", \"rotate(-90)\")\n          .attr(\"y\", 10)\n          .attr(\"x\", -10)\n          .attr(\"dy\", \".71em\")\n          .style(\"text-anchor\", \"end\")\n          .text(\"Penetration per 100 people\");\n\n        // format y axis\n        yg.selectAll(\"path\").style({ fill: \"none\", stroke: \"gray\"})\n        //yg.selectAll(\".tick text\").attr(\"transform\", \"rotate(0)\")\n        yg.selectAll(\"line\").style({ stroke: \"#000\"});\n\n        // setup x axis\n        var xaxis = d3.svg.axis()\n          .scale(xScale)\n          .orient(\"bottom\") //left, right, top\n          .ticks(5) // doesn't really work on a log scale\n          //.tickFormat(function(d) { return commasFormatter(d); })\n          .tickFormat(function(d) { return xScale.tickFormat(4,d3.format(\",d\"))(d) });\n\n        // call x axis\n        var xg = g.append(\"g\")\n          .call(xaxis)\n          .attr(\"class\", \"axis\");\n\n        xg.append(\"text\")\n          //.attr(\"transform\", \"rotate(-90)\")\n          .attr(\"y\", -20)\n          .attr(\"x\", chartWidth - 20)\n          .attr(\"dy\", \".71em\")\n          .style(\"text-anchor\", \"end\")\n          .text(\"GDP per capita (curr $)\");\n\n        // format x axis\n        xg.attr(\"transform\", \"translate(\" + [0, chartHeight] + \")\")\n        xg.selectAll(\"path\").style({ fill: \"none\", stroke: \"gray\"})\n        xg.selectAll(\"line\").style({ stroke: \"#000\"})\n        //xg.selectAll(\".tick text\").attr(\"transform\", \"rotate(0)\")\n         \n        // create brush\n        var brush = d3.svg.brush()\n          .x(xScale)\n          .y(yScale)\n          .extent([ [2000, dataYmax * 0.3], [20000, dataYmax * 0.7] ])\n          .on(\"brush\", brushed);\n   \n        // create brush group\n        var brushg = g.append(\"g\")\n          .classed(\"brush\", true)\n          .call(brush);\n\n        // set brush styles (after brush is created)\n        //brushg.selectAll(\".background\").style({visibility: \"visible\"})\n        brushg.selectAll(\".background\").style({visibility: \"none\"})\n        brushg.selectAll(\".extent\").style({visibility: \"visible\"})\n        //brushg.selectAll(\".resize rect\").style({visibility: \"visible\"})\n\n        // initial invokation\n        brushed();\n\n        // brush handler\n        function brushed() {\n          var minext = brush.extent()[0];\n          var xmin = minext[0];\n          var ymin = minext[1];\n     \n          var maxext = brush.extent()[1];\n          var xmax = maxext[0];\n          var ymax = maxext[1];\n          \n          var filtered = data.filter(function(d) {\n            var x = xField(d);\n            var y = yField(d);\n            return x >= xmin \n              && x <= xmax \n              && y >= ymin \n              && y <= ymax;\n          })\n          \n          g.selectAll(\"circle\")\n            .style(\"stroke\", colorStroke)\n            .style(\"fill-opacity\", fillOpacity)\n          \n          g.selectAll(\"circle\")\n            .data(filtered, function(d) { return d.key })\n            //.style(\"stroke\", \"#FFFFFF\")\n            .style(\"stroke\", \"black\")\n            .style(\"fill-opacity\", 0.8)\n     \n          if (filtered.length == 0) filtered = data;\n          dispatch.filter(filtered);\n\n        } // end brush handler\n\n      } // end x function\n\n      x.data = function(_) {\n        if(!arguments.length) return data;\n        data = _;\n\n        return x;\n      }\n\n      x.highlight = function(_) {\n        saveG.selectAll(\"circle\")\n          .attr(\"r\", radius)\n          .style(\"stroke-width\", strokeWidth)\n          .style(\"fill\", colorFill)\n          .style(\"fill-opacity\", fillOpacity)\n          // matching data only\n          .data(_, function(d) { return d.key })\n          .attr(\"r\", radiusSelected)\n          .style(\"stroke-width\", 1)\n          .style(\"fill\", colors.red)\n          .style(\"fill-opacity\", 1);\n\n        return x;\n      }\n\n      x.accessor = function(_) {\n        if(!arguments.length) return mode;\n        if (_ === \"showInternet\") mode = \"internet\";\n        else mode = \"cellular\";\n\n        return x;\n      }\n\n      x.forceBrushEvent = function() {\n        //console.log('x.forceBrushEvent');\n\n        return x;\n      }\n\n      return d3.rebind(x, dispatch, \"on\");\n\n    } // end scatterView function\n\n\n    // table function -----------------------------------------------------------------------------\n    function tableView() {\n      var dispatch = d3.dispatch(x, \"hover\");\n      var data,\n          sortColumn = \"countryCode\";\n\n      function x(div) {\n        div.select(\"#table\").remove();\n\n        var table = div.append(\"table\")\n          .attr(\"class\", \"table table-condensed table-bordered table-striped\")\n          .attr(\"id\", \"table\")\n          .style(\"background-color\", \"white\");\n\n        var columnWidths = [\"10%\", \"30%\", \"20%\", \"20%\", \"20%\"];\n        table.selectAll(\"col\")\n          .data(columnWidths)\n          .enter()\n          .append(\"col\")\n          .style(\"width\", function(d) { return d; });\n\n        var columnHead = [\"Code\", \"Country\", \"Cellular use per 100 people\", \"Internet use per 100 people\", \"GDP per capita ($)\"];\n        var columnData = [\"countryCode\", \"countryName\", \"valueCellular\", \"valueInternet\", \"valueGDP\"];\n\n        var thead = table.append(\"thead\");\n        var tbody = table.append(\"tbody\");\n        thead.append(\"tr\")\n          .selectAll(\"th\")\n          .data(columnHead)\n          .enter()\n          .append(\"th\")\n          .attr(\"id\", function(d, i) { return \"head\" + i ; })\n          .attr(\"class\", \"colHead\")\n          .style(\"background-color\", function(d, i) { \n            return (columnData[i] === sortColumn) ? \"rgb(220, 220, 220)\" : \"white\"; })\n          .text(function(d) { return d; })\n          .on(\"click\", function(d, i) { \n            sortColumn = columnData[i]; \n            x.sort(); \n            x(div); \n          });\n\n        // create table rows\n        var rows = tbody.selectAll(\"tr\")\n          .data(data)\n          .enter()\n          .append(\"tr\");\n\n        // create cells\n        rows.selectAll(\"td\")\n          .data(function(d) {\n            return columnData.map(function(column) {\n              var value = d[column];\n              if (typeof value == \"number\") {\n                if (column === \"valueGDP\") value = commasFormatter(value)\n                else value = value.toFixed(2);\n              }\n              return { value: value };\n            });\n          })\n          .enter()\n          .append(\"td\")\n          .html(function(d) { return d.value; });\n    \n        //rows.exit().remove();\n\n        // handle hover events\n        rows.on(\"mouseover\", function(d, i) { dispatch.hover([d]) })\n        rows.on(\"mouseout\", function(d, i) { dispatch.hover([]) })        \n      }\n\n      x.data = function(_) {\n        if(!arguments.length) return data;\n        data = _;\n        x.sort();\n\n        return x;\n      }\n\n      x.sort = function() {\n        var result = 0;\n        data.sort(function(a, b) {\n          if (a[sortColumn] > b[sortColumn]) result = -1;\n          if (a[sortColumn] < b[sortColumn]) result = 1;\n          if (sortColumn === \"countryCode\" || sortColumn === \"countryName\") result *= -1;\n\n          return result;\n        });\n      }\n\n      return d3.rebind(x, dispatch, \"on\");\n\n    } // end tableView function\n\n\n    // controls -----------------------------------------------------------------------------------\n    d3.selectAll(\"input\").on(\"change\", change);\n\n    function change() {\n      if (this.value === \"internet\") mode = \"showInternet\";\n      else mode = \"showCellular\";\n      //console.log(mode);\n\n      // regenerate the chart\n      chart\n        .accessor(mode)\n        .data(data);\n\n      chart(svgGroup);\n    }\n\n    var helpBtn = d3.select(\"#helpBtn\")\n      .on(\"click\", function(){\n\n        // get current state of help div\n        var helpDiv = d3.select(\"#helpDiv\");\n        if (helpDiv.style(\"display\") == \"none\") helpDiv.style(\"display\", \"block\");\n        else helpDiv.style(\"display\", \"none\");\n\n        helpBtn[0][0].blur(); // remove focus\n    });\n\n\n  }); // end d3.tsv ajax\n\n</script>", "description": "Internet vs. GDP", "created_at": "2016-10-07T16:28:48Z", "updated_at": "2016-10-07T16:28:48Z", "api": ["d3.format", "d3.tsv", "d3.nest", "d3.select", "d3.dispatch", "d3.max", "d3.scale.linear", "d3.scale.log", "d3.min", "d3.svg.axis", "d3.svg.brush", "d3.rebind", "d3.selectAll"], "readme": "## D3 Brush Usage in a Scattergram\nExample of d3.brush to select items in a scattergram and synchronization with table.\n\nSee the script in action [here](http://bl.ocks.org/boeric/9775876)\n\nforked from <a href='http://bl.ocks.org/boeric/'>boeric</a>'s block: <a href='http://bl.ocks.org/boeric/9775876'>Internet vs. GDP</a>", "uid": "Thanaporn-sk_beae236f61cd47cac3bfe12e1d0e2f52"}, {"code": "<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height,\n    tau = 2 * Math.PI;\n\nvar nodes = d3.range(1000).map(function(i) {\n  return {\n    r: Math.random() * 14 + 4\n  };\n});\n\nvar simulation = d3.forceSimulation(nodes)\n    .velocityDecay(0.2)\n    .force(\"x\", d3.forceX().strength(0.002))\n    .force(\"y\", d3.forceY().strength(0.002))\n    .force(\"collide\", d3.forceCollide().radius(d => d.r + 0.5).iterations(5))\n    .on(\"tick\", ticked);\n\nfunction ticked() {\n  context.clearRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n\n  context.beginPath();\n  nodes.forEach(function(d) {\n    var newR = d.r * (1+iteration/2);\n    context.moveTo(d.x + newR, d.y);\n    context.arc(d.x, d.y, newR, 0, tau);\n  });\n  context.fillStyle = \"#ddd\";\n  context.fill();\n  context.strokeStyle = \"#333\";\n  context.stroke();\n\n  context.restore();\n}\n\nvar iteration = false; \nsetInterval(() => {\n  iteration = !iteration; \n  simulation.force(\"collide\").radius(d => d.r * (1+iteration/2)); \n  simulation.alpha(1).restart();\n}, 2000);\n    \n</script>", "description": "Collision Detection", "created_at": "2016-10-07T14:36:57Z", "updated_at": "2016-10-11T19:25:00Z", "api": ["d3.range", "d3.forceSimulation", "d3.forceX", "d3.forceY", "d3.forceCollide"], "readme": "Test if d3.forceCollide can reinitialize after updating the node radii", "uid": "steveharoz_3fc45e398b8bd7a17460698e79c19d03"}, {"code": "<script>\n\t\nvar units = \"Widgets\";\n\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scale.category20();\n\n// append the svg canvas to the page\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data (using the timelyportfolio csv method)\nd3.csv(\"sankey.csv\", function(error, data) {\n\n  //set up graph in same style as original example but empty\n  graph = {\"nodes\" : [], \"links\" : []};\n\n    data.forEach(function (d) {\n      graph.nodes.push({ \"name\": d.source });\n      graph.nodes.push({ \"name\": d.target });\n      graph.links.push({ \"source\": d.source,\n                         \"target\": d.target,\n                         \"value\": +d.value });\n     });\n\n     // return only the distinct / unique nodes\n     graph.nodes = d3.keys(d3.nest()\n       .key(function (d) { return d.name; })\n       .map(graph.nodes));\n\n     // loop through each link replacing the text with its index from node\n     graph.links.forEach(function (d, i) {\n       graph.links[i].source = graph.nodes.indexOf(graph.links[i].source);\n       graph.links[i].target = graph.nodes.indexOf(graph.links[i].target);\n     });\n\n     //now loop through each nodes to make nodes an array of objects\n     // rather than an array of strings\n     graph.nodes.forEach(function (d, i) {\n       graph.nodes[i] = { \"name\": d };\n     });\n\n  sankey\n    .nodes(graph.nodes)\n    .links(graph.links)\n    .layout(32);\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n\n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n    \t\treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n      .origin(function(d) { return d; })\n      .on(\"dragstart\", function() { \n\t\t  this.parentNode.appendChild(this); })\n      .on(\"drag\", dragmove));\n\n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \n        \"translate(\" + d.x + \",\" + (\n                d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n            ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n\n</script>", "description": "Sankey from csv with d3.js", "created_at": "2016-10-07T07:16:15Z", "updated_at": "2016-10-07T07:16:15Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.csv", "d3.keys", "d3.nest", "d3.behavior.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min"], "readme": "This is a sankey diagram used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks). It is based on a [simpler version here](http://bl.ocks.org/d3noob/c2637e28b79fb3bfea13).\n\nIt demonstrates the construction of a [sankey diagram](http://bost.ocks.org/mike/sankey/) using d3.js from external csv data that is formatted using just link data and named values. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/c9b90689c1438f57d649'>Sankey from csv with d3.js</a>\n\nforked from <a href='http://bl.ocks.org/rschuman/'>rschuman</a>'s block: <a href='http://bl.ocks.org/rschuman/916d1e5469e5d4729d4547ebf4dad8b1'>Sankey from csv with d3.js</a>", "uid": "rschuman_354103739605441177d7a0c3f5047222"}, {"code": "<script>\n\t\nvar units = \"Widgets\";\n\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scale.category20();\n\n// append the svg canvas to the page\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data (using the timelyportfolio csv method)\nd3.csv(\"sankey.csv\", function(error, data) {\n\n  //set up graph in same style as original example but empty\n  graph = {\"nodes\" : [], \"links\" : []};\n\n    data.forEach(function (d) {\n      graph.nodes.push({ \"name\": d.source });\n      graph.nodes.push({ \"name\": d.target });\n      graph.links.push({ \"source\": d.source,\n                         \"target\": d.target,\n                         \"value\": +d.value });\n     });\n\n     // return only the distinct / unique nodes\n     graph.nodes = d3.keys(d3.nest()\n       .key(function (d) { return d.name; })\n       .map(graph.nodes));\n\n     // loop through each link replacing the text with its index from node\n     graph.links.forEach(function (d, i) {\n       graph.links[i].source = graph.nodes.indexOf(graph.links[i].source);\n       graph.links[i].target = graph.nodes.indexOf(graph.links[i].target);\n     });\n\n     //now loop through each nodes to make nodes an array of objects\n     // rather than an array of strings\n     graph.nodes.forEach(function (d, i) {\n       graph.nodes[i] = { \"name\": d };\n     });\n\n  sankey\n    .nodes(graph.nodes)\n    .links(graph.links)\n    .layout(32);\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n\n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n    \t\treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n      .origin(function(d) { return d; })\n      .on(\"dragstart\", function() { \n\t\t  this.parentNode.appendChild(this); })\n      .on(\"drag\", dragmove));\n\n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \n        \"translate(\" + d.x + \",\" + (\n                d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n            ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n\n</script>", "description": "Sankey from csv with d3.js", "created_at": "2016-10-07T07:01:44Z", "updated_at": "2016-10-07T07:08:52Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.csv", "d3.keys", "d3.nest", "d3.behavior.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min"], "readme": "This is a sankey diagram used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks). It is based on a [simpler version here](http://bl.ocks.org/d3noob/c2637e28b79fb3bfea13).\n\nIt demonstrates the construction of a [sankey diagram](http://bost.ocks.org/mike/sankey/) using d3.js from external csv data that is formatted using just link data and named values. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/c9b90689c1438f57d649'>Sankey from csv with d3.js</a>", "uid": "rschuman_916d1e5469e5d4729d4547ebf4dad8b1"}, {"code": "<script>\n    //placeholder div for jquery slider\n            d3.select(\"body\").append(\"div\").attr(\"id\",\"sliderDiv\");\n            \n            //create svg element\n            var svgDoc = d3.select(\"body\").append(\"svg\").attr(\"viewBox\",\"0 0 100 100\");\n    var gun = \"\";\n            \n             //define an icon store it in svg <defs> elements as a reusable component - this geometry can be generated from Inkscape, Illustrator or similar\n            svgDoc.append(\"defs\")\n                .append(\"g\")\n                .attr(\"id\",\"iconCustom\")\n                .append(\"path\")\n//             \t\t.attr(\"fill\", \"#f2f2f2\")\n//                 .attr(\"stroke\", \"#b7b7b7\")\n//                 .attr(\"stroke-width\", \"0.5px\")\n            \t\t.attr(\"d\", \"M-12.7846821,-55.8284296 L-0.977060394,-55.8134372 L-0.994476539,-56 L4.84404562,-55.7864004 C4.84404562,-55.7864004 5.13403758,-55.6881496 5.266234,-55.5862771 C5.39843042,-55.4844045 5.49255637,-55.1882204 5.49255637,-55.1882204 C5.49255637,-55.1882204 5.58922036,-55.171754 5.77602821,-55.171754 C5.96283607,-55.171754 6.17646829,-55.3369652 6.17646829,-55.3369652 C6.17646829,-55.3369652 6.23497428,-55.3803 6.39837099,-55.276027 C6.56176769,-55.171754 6.41399301,-54.9184413 6.41399301,-54.9184413 C6.41399301,-54.9184413 5.97504487,-54.400656 5.97504487,-53.9687821 C5.97504487,-53.5369083 6.02147334,-53.4079147 6.21773317,-53.2389132 C6.41399301,-53.0699118 7.06788613,-53.0253557 7.06788613,-53.0253557 C7.06788613,-53.0253557 7.58061221,-52.9079433 7.7780973,-52.8070394 C7.97558239,-52.7061354 8,-52.6207293 8,-52.5461042 C8,-52.4714791 7.96634921,-52.3926426 7.81419861,-52.3480444 C7.66204801,-52.3034463 6.37771666,-52.3151959 6.37771666,-52.3151959 C6.37771666,-52.3151959 5.62497159,-52.2278525 5.44560279,-52.014295 C5.266234,-51.8007375 5.15731745,-51.754539 5.087084,-51.3156322 C5.01685055,-50.8767254 5.08270808,-50.7119774 5.08270808,-50.7119774 L4.92320594,-50.7110088 L6.23322392,-47.3607122 C6.23322392,-47.3607122 6.61664168,-46.8156794 6.61664168,-46.1970322 C6.61664168,-45.5783851 6.28354695,-45.2591648 6.28354695,-45.2591648 L5.34084722,-45.2591648 L5.34084722,-45.0002089 L0.980811689,-45.0002089 C0.980811689,-45.0002089 0.888173801,-44.9909019 0.888173801,-45.0965225 C0.888173801,-45.2021431 1.03494202,-45.2998043 1.03494202,-45.2998043 C1.03494202,-45.2998043 0.912985244,-45.4772706 1.06465449,-45.750924 C1.21632374,-46.0245775 1.35390254,-46.1710482 1.35390254,-46.3503253 C1.35390254,-46.5296025 0.745693976,-49.4587221 0.745693976,-49.4587221 C0.745693976,-49.4587221 0.727140092,-49.6840714 0.593980968,-49.8938808 C0.460821844,-50.1036902 -0.11771801,-50.0473423 -0.11771801,-50.0473423 C-0.11771801,-50.0473423 -2.91756034,-50.0378668 -2.99851479,-50.3388098 C-3.07946924,-50.6397528 -2.85796037,-50.993464 -3.04183636,-51.5525206 C-3.22571235,-52.1115772 -3.41860273,-52.8269591 -4.87070669,-52.8269591 L-11.9475293,-52.8269591 C-11.9475293,-52.8269591 -12.0941625,-52.7744014 -12.2268403,-53.0066573 C-12.3595181,-53.2389132 -12.9623442,-54.6524946 -12.9623442,-54.6524946 C-12.9623442,-54.6524946 -13.0427298,-55.1341887 -12.9686018,-55.3877541 C-12.8944738,-55.6413194 -12.7846821,-55.8284296 -12.7846821,-55.8284296 Z\");\n        \n            \n            //background rectangle\n            svgDoc.append(\"rect\").attr(\"width\",100).attr(\"height\",100);\n            \n            //specify the number of columns and rows for pictogram layout\n            var numCols = 4;\n            var numRows = 6;\n            \n            //padding for the grid\n            var xPadding = 14;\n            var yPadding = 60;\n            \n            //horizontal and vertical spacing between the icons\n            var hBuffer = 15;\n            var wBuffer = 26;\n            \n            //generate a d3 range for the total number of required elements\n            var myIndex=d3.range(numCols*numRows);\n            \n            //text element to display number of icons highlighted\n            svgDoc.append(\"text\")\n                .attr(\"id\",\"txtValue\")\n                .attr(\"x\",xPadding)\n                .attr(\"y\",yPadding)\n                .attr(\"dy\",-3)\n                .text(\"0\");\n \n            //create group element and create an svg <use> element for each icon\n            svgDoc.append(\"g\")\n                .attr(\"id\",\"pictoLayer\")\n                .selectAll(\"use\")\n                .data(myIndex)\n                .enter()\n                .append(\"use\")\n                    .attr(\"xlink:href\",\"#iconCustom\")\n                    .attr(\"id\",function(d)    {\n                        return \"icon\"+d;\n                    })\n                    .attr(\"x\",function(d) {\n                        var remainder=d % numCols;//calculates the x position (column number) using modulus\n                        return xPadding+(remainder*wBuffer);//apply the buffer and return value\n                    })\n                      .attr(\"y\",function(d) {\n                        var whole=Math.floor(d/numCols)//calculates the y position (row number)\n                        return yPadding+(whole*hBuffer);//apply the buffer and return the value\n                    })\n                    .classed(\"iconPlain\",true);\n \n            //create a jquery slider to control the pictogram         \n             $( \"#sliderDiv\" ).slider({\n                  orientation: \"horizontal\",\n                  min: 0,\n                  max: numCols*numRows,\n                  value: 0,\n                  slide: function( event, ui ) {\n                    d3.select(\"#txtValue\").text(ui.value);\n                    d3.selectAll(\"use\").attr(\"class\",function(d,i){\n                       if (d<ui.value)  {\n                           return \"iconSelected\";\n                       }    else    {\n                           return \"iconPlain\";\n                       }\n                    });\n                  }\n             });\n\n  </script>", "description": "fresh block", "created_at": "2016-10-07T02:52:48Z", "updated_at": "2016-10-07T03:36:39Z", "api": ["d3.select", "d3.range", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jermspeaks_25f4772e1b65b5d12997c351ffa491ea"}, {"code": "<script>\n    var width = 960,\n        height = 470;\n\n    var stop = false;\n\n    var pointCount = 20000,\n        polygonCount = 100,\n        steps = 0;\n\n    var voronoi = d3.voronoi().extent([[0, 0],[width, height]]);\n    var colorScale = d3.scaleLinear().range([\"white\", \"green\", \"black\"])\n\n    var pointCoords = randomPoints(pointCount),\n        voronoiPoints = randomPoints(polygonCount),\n        populations = [];\n\n    d3.select(\"#specs\").html(\"  \" + d3.format(\",\")(pointCount) + \" points, \" + polygonCount + \" polygons\")\n    d3.select(\"#average\").html(\" - Average: \" + pointCount/polygonCount)\n\n    var svg = d3.select(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n\n    var points = svg.selectAll(\"circle\")\n        .data(pointCoords)\n      .enter().append(\"circle\")\n        .attr(\"r\", 1)\n        .attr(\"cx\", function(d) {return d[0]})\n        .attr(\"cy\", function(d) {return d[1]})\n\n    var polygons = svg.selectAll(\"polygon\")\n        .data(voronoi(voronoiPoints).polygons())\n      .enter().append(\"polygon\")\n        .attr(\"points\", function(d) {return d})\n\n    var centroids = svg.selectAll(\"text\")\n        .data(voronoiPoints)\n      .enter().append(\"text\")\n        .attr(\"x\", function(d) {return d[0]})\n        .attr(\"y\", function(d) {return d[1]})\n        .attr(\"text-anchor\", \"middle\")\n\n    voronoiPoints.forEach(function(d, i) {return populations[i] = [];})\n\n    pointCoords.forEach(function(d) {populations[findClosest(d)].push(d);})\n\n    d3.select(\"#deviation\").html(\" - Deviation: \" + d3.deviation(populations, function(d) {return d.length}).toFixed(2))\n\n    var extent = d3.extent(populations, function(d) {return d.length});\n    colorScale.domain([extent[0],pointCount/polygonCount,extent[1]])\n\n    centroids.html(function(d, i) {return populations[i].length})\n    polygons.attr(\"fill\", function(d, i) {return colorScale(populations[i].length)})\n\n    function start(){\n        if (stop) {\n            console.log(\"stopping\")\n            return stop = false;\n        }\n\n      \tgroupPoints();\n\n        var stopVal = 0;\n        for (i=0; i<voronoiPoints.length; i++) {\n            var newPoint = getNewCenter(i)\n            stopVal += (voronoiPoints[i][0] == newPoint[0] && voronoiPoints[i][1] == newPoint[1]) ? 1 : 0;\n            voronoiPoints[i] = newPoint;\n            if (stopVal == voronoiPoints.length) {stop = true};\n        }\n\n        if (stop) {\n            console.log(\"stopping\")\n            return stop = false;\n        }\n\n        d3.select(\"#steps\").html(\" - Steps: \" + ++steps)\n\n        centroids.data(voronoiPoints)\n            .attr(\"x\", function(d) {return d[0]})\n            .attr(\"y\", function(d) {return d[1]})\n\n        polygons.data(voronoi(voronoiPoints).polygons())\n            .attr(\"points\", function(d) {return d})\n\n        d3.timeout(start, 50);\n    }\n\n    function groupPoints() {        \n        voronoiPoints.forEach(function(d, i) {return populations[i] = [];})\n\n        pointCoords.forEach(function(d) {populations[findClosest(d)].push(d);})\n\n        d3.select(\"#deviation\").html(\" - Deviation: \" + d3.deviation(populations, function(d) {return d.length}).toFixed(2))\n\n        centroids.html(function(d, i) {return populations[i].length})\n\n        polygons.attr(\"fill\", function(d, i) {return colorScale(populations[i].length)})\n    }\n\n\n    function getNewCenter(n) {\n        var centerX = d3.sum(populations[n], function(d) {return d[0]})/populations[n].length;\n        var centerY = d3.sum(populations[n], function(d) {return d[1]})/populations[n].length;\n        return [centerX, centerY];\n    }\n\n    function randomPoints(count) {\n        return d3.range(count)\n            .map(function() {\n          var angle = Math.random() * 2 * Math.PI,\n              r = Math.random();\n          return [r * Math.sin(angle) * width/2 + width/2, r * Math.cos(angle)  * height/2 + height/2];})    \n    }\n\n    function findClosest(coords) {      \n        var closestDist = Infinity,\n            closestPoint;\n\n        for (i=0; i<voronoiPoints.length; i++) {\n            var thisDist = calcDistance(coords, voronoiPoints[i]);\n            if (thisDist < closestDist) {\n                closestDist = thisDist;\n                closestPoint = i;\n            }\n        }\n\n        function calcDistance(coord1, coord2) {\n            var distX = coord2[0] - coord1[0];\n            var distY = coord2[1] - coord1[1];\n            return Math.sqrt(distX * distX + distY * distY);\n        }\n\n        return closestPoint\n    }\n\n    function redraw() {\n        voronoiPoints = randomPoints(polygonCount);\n        steps = 0;\n\n        polygons.data(voronoi(voronoiPoints).polygons())\n            .attr(\"points\", function(d) {return d})\n\n        centroids.data(voronoiPoints)\n            .attr(\"x\", function(d) {return d[0]})\n            .attr(\"y\", function(d) {return d[1]})\n\n        d3.select(\"#steps\").html(\" - Iteration: \" + steps)\n\n        groupPoints();\n    }\n</script>", "description": "K-Means Voronoi Relaxation [UNLISTED]", "created_at": "2016-10-06T10:36:32Z", "updated_at": "2016-10-06T10:38:00Z", "api": ["d3.voronoi", "d3.scaleLinear", "d3.select", "d3.format", "d3.deviation", "d3.extent", "d3.timeout", "d3.sum", "d3.range"], "readme": "This is an experiment in moving and shaping voronoi polygons to normalize the dispersion of points. The idea arose while <a href=\"http://bl.ocks.org/alexmacy/6272668a45ce0f8a1fed7880814bc21e\" target=\"_blank\">mapping emergency calls logged by the San Francisco Fire Department</a>, and was also inspired by Noah Veltman's <a href=\"http://bl.ocks.org/veltman/3d1fb70e6993d4eb2eff7112c9e7bcf4\" target=\"_blank\">Voronoi relaxation</a>.\n\n\nTo do this, I kind of combined aspects of <a href=\"//en.wikipedia.org/wiki/Lloyd%27s_algorithm\" target=\"_blank\">Lloyd's algorithm</a> and <a href=\"https://en.wikipedia.org/wiki/K-means_clustering\" target=\"_blank\">k-means clustering</a>.\n\nforked from <a href='http://bl.ocks.org/alexmacy/'>alexmacy</a>'s block: <a href='http://bl.ocks.org/alexmacy/3986db72dc4b81db8e788dd837ee6e3b'>K-Means Voronoi Relaxation</a>", "uid": "Fil_8a0d9f3c727608e236d65e7bc50dd015"}, {"code": "<script>\n    var width = 960,\n        height = 470;\n\n    var stop = false;\n\n    var pointCount = 20000,\n        polygonCount = 100,\n        steps = 0;\n\n    var voronoi = d3.voronoi().extent([[0, 0],[width, height]]);\n    var colorScale = d3.scaleLinear().range([\"white\", \"green\", \"black\"])\n\n    var pointCoords = randomPoints(pointCount),\n        voronoiPoints = randomPoints(polygonCount),\n        populations = [];\n\n    d3.select(\"#specs\").html(\"  \" + d3.format(\",\")(pointCount) + \" points, \" + polygonCount + \" polygons\")\n    d3.select(\"#average\").html(\" - Average: \" + pointCount/polygonCount)\n\n    var svg = d3.select(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n\n    var points = svg.selectAll(\"circle\")\n        .data(pointCoords)\n      .enter().append(\"circle\")\n        .attr(\"r\", 1)\n        .attr(\"cx\", function(d) {return d[0]})\n        .attr(\"cy\", function(d) {return d[1]})\n\n    var polygons = svg.selectAll(\"polygon\")\n        .data(voronoi(voronoiPoints).polygons())\n      .enter().append(\"polygon\")\n        .attr(\"points\", function(d) {return d})\n\n    var centroids = svg.selectAll(\"text\")\n        .data(voronoiPoints)\n      .enter().append(\"text\")\n        .attr(\"x\", function(d) {return d[0]})\n        .attr(\"y\", function(d) {return d[1]})\n        .attr(\"text-anchor\", \"middle\")\n\n    voronoiPoints.forEach(function(d, i) {return populations[i] = [];})\n\n    pointCoords.forEach(function(d) {populations[findClosest(d)].push(d);})\n\n    d3.select(\"#deviation\").html(\" - Deviation: \" + d3.deviation(populations, function(d) {return d.length}).toFixed(2))\n\n    var extent = d3.extent(populations, function(d) {return d.length});\n    colorScale.domain([extent[0],pointCount/polygonCount,extent[1]])\n\n    centroids.html(function(d, i) {return populations[i].length})\n    polygons.attr(\"fill\", function(d, i) {return colorScale(populations[i].length)})\n\n    function start(){\n        if (stop) {\n            console.log(\"stopping\")\n            return stop = false;\n        }\n\n      \tgroupPoints();\n\n        var stopVal = 0;\n        for (i=0; i<voronoiPoints.length; i++) {\n            var newPoint = getNewCenter(i)\n            stopVal += (voronoiPoints[i][0] == newPoint[0] && voronoiPoints[i][1] == newPoint[1]) ? 1 : 0;\n            voronoiPoints[i] = newPoint;\n            if (stopVal == voronoiPoints.length) {stop = true};\n        }\n\n        if (stop) {\n            console.log(\"stopping\")\n            return stop = false;\n        }\n\n        d3.select(\"#steps\").html(\" - Steps: \" + ++steps)\n\n        centroids.data(voronoiPoints)\n            .attr(\"x\", function(d) {return d[0]})\n            .attr(\"y\", function(d) {return d[1]})\n\n        polygons.data(voronoi(voronoiPoints).polygons())\n            .attr(\"points\", function(d) {return d})\n\n        d3.timeout(start, 50);\n    }\n\n    function groupPoints() {        \n        voronoiPoints.forEach(function(d, i) {return populations[i] = [];})\n\n        pointCoords.forEach(function(d) {populations[findClosest(d)].push(d);})\n\n        d3.select(\"#deviation\").html(\" - Deviation: \" + d3.deviation(populations, function(d) {return d.length}).toFixed(2))\n\n        centroids.html(function(d, i) {return populations[i].length})\n\n        polygons.attr(\"fill\", function(d, i) {return colorScale(populations[i].length)})\n    }\n\n\n    function getNewCenter(n) {\n        var centerX = d3.sum(populations[n], function(d) {return d[0]})/populations[n].length;\n        var centerY = d3.sum(populations[n], function(d) {return d[1]})/populations[n].length;\n        return [centerX, centerY];\n    }\n\n    function randomPoints(count) {\n        return d3.range(count)\n            .map(function() {return [Math.random() * width, Math.random() * height];})    \n    }\n\n    function findClosest(coords) {      \n        var closestDist = Infinity,\n            closestPoint;\n\n        for (i=0; i<voronoiPoints.length; i++) {\n            var thisDist = calcDistance(coords, voronoiPoints[i]);\n            if (thisDist < closestDist) {\n                closestDist = thisDist;\n                closestPoint = i;\n            }\n        }\n\n        function calcDistance(coord1, coord2) {\n            var distX = coord2[0] - coord1[0];\n            var distY = coord2[1] - coord1[1];\n            return Math.sqrt(distX * distX + distY * distY);\n        }\n\n        return closestPoint\n    }\n\n    function redraw() {\n        voronoiPoints = randomPoints(polygonCount);\n        steps = 0;\n\n        polygons.data(voronoi(voronoiPoints).polygons())\n            .attr(\"points\", function(d) {return d})\n\n        centroids.data(voronoiPoints)\n            .attr(\"x\", function(d) {return d[0]})\n            .attr(\"y\", function(d) {return d[1]})\n\n        d3.select(\"#steps\").html(\" - Iteration: \" + steps)\n\n        groupPoints();\n    }\n</script>", "description": "K-Means Voronoi Relaxation", "created_at": "2016-10-06T04:31:39Z", "updated_at": "2016-10-07T02:28:11Z", "api": ["d3.voronoi", "d3.scaleLinear", "d3.select", "d3.format", "d3.deviation", "d3.extent", "d3.timeout", "d3.sum", "d3.range"], "readme": "This is an experiment in moving and shaping voronoi polygons to normalize the dispersion of points. The idea arose while <a href=\"http://bl.ocks.org/alexmacy/6272668a45ce0f8a1fed7880814bc21e\" target=\"_blank\">mapping emergency calls logged by the San Francisco Fire Department</a>, and was also inspired by Noah Veltman's <a href=\"http://bl.ocks.org/veltman/3d1fb70e6993d4eb2eff7112c9e7bcf4\" target=\"_blank\">Voronoi relaxation</a>.\n\n\nTo do this, I kind of combined aspects of <a href=\"//en.wikipedia.org/wiki/Lloyd%27s_algorithm\" target=\"_blank\">Lloyd's algorithm</a> and <a href=\"https://en.wikipedia.org/wiki/K-means_clustering\" target=\"_blank\">k-means clustering</a>.", "uid": "alexmacy_3986db72dc4b81db8e788dd837ee6e3b"}, {"code": "<script>\n      var jsondata = [\n        {\n          \"dayWise\":[\n            { \"currenttime\": \"2015-01-29\", \"avgresptime\": 272.20001220703125}, \n            { \"currenttime\": \"2015-01-30\", \"avgresptime\": 177},\n            { \"currenttime\": \"2015-01-31\", \"avgresptime\": 34}\n          ]\n        }\n      ];\n\n      var format = d3.time.format(\"%Y-%m-%d\");\n      \n      var data = jsondata[0].dayWise.map(function (d){\n        d.date = format.parse(d.currenttime);\n        return d;\n      })\n\n      var margin = {top: 9, right: 31, bottom: 38, left: 36},\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n      var x = d3.time.scale()\n        .range([0, width]);\n      \n      var y = d3.scale.linear()\n        .range([height, 0]);\n\n      var xAxis = d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\");\n\n      var yAxis = d3.svg.axis()\n        .scale(y)\n        .orient(\"left\");\n\n      var line = d3.svg.line()\n        .x(function(d) { return x(d.date); })\n        .y(function(d) { return y(d.avgresptime); })\n\n      var svg = d3.select(\"body\").append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      x.domain(d3.extent(data, function(d) { return d.date; }));\n      y.domain(d3.extent(data, function(d) {return d.avgresptime; }));\n\n      svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n      svg.append(\"g\")\n        \t.attr(\"class\", \"y axis\")\n        \t.call(yAxis)\n        .append(\"text\")\n          .attr(\"transform\", \"rotate(-90)\")\n          .attr(\"y\", 6)\n          .attr(\"dy\", \".71em\")\n          .style(\"text-anchor\", \"end\")\n          .text(\"avgresptime\");\n\n      svg.append(\"path\")\n          .datum(data)\n          .attr(\"class\", \"line\")\n          .attr(\"fill\", \"none\")\n          .attr(\"stroke\", \"blue\")\n          .attr(\"d\", line);\n    </script>", "description": "[Unlisted] Line Chart Example", "created_at": "2016-10-05T05:16:19Z", "updated_at": "2016-10-09T14:38:29Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.extent"], "readme": "This example fixes broken code originally written by Tejashwini S., posted to the D3 mailing list - [constructing line graph in d3.js](https://groups.google.com/forum/#!topic/d3-js/pOJgXVLrvp4).\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "curran_66449dd909dfff72f6b1820e9558444c"}, {"code": "<script>\nvar nodes=[\n\t{name:\"John\", age:35, city:\"Pereira\"},\n\t{name:\"Jose\", age:53, city:\"Bogot\"},\n\t{name:\"Mafe\", age:15, city:\"Pereira\"},\n\t{name:\"Mario\", age:23, city:\"Bogot\"},\n\t{name:\"Pedro\", age:45, city:\"Neiva\"},\n\t{name:\"Jose\", age:22, city:\"Neiva\"},\n\t{name:\"Karla\", age:12, city:\"Bogot\"}\n];\nvar links = [\n\t{source:\"John\", target:\"Mafe\", weight:10},\n\t{source:\"John\", target:\"Jose\", weight:2},\n\t{source:\"Jose\", target:\"Mario\", weight:5},\n\t{source:\"Mario\", target:\"Mafe\", weight:8},\n  {source:\"Mario\", target:\"Karla\", weight:8}\n];\n\nvar width=300,\n\theight=300;\nvar svg = d3.select(\"#chart\")\n\t.append(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height);\n  \nvar rScale = d3.scaleLinear()\n\t.range([2, 20]);\nvar color = d3.scaleOrdinal(d3.schemeCategory10);  \nvar simulation = d3.forceSimulation()\n//    .force(\"charge\", d3.forceManyBody()\n//    \t.strength(-1))    \n\t.force(\"center\", d3.forceCenter(width/2,height/2));\n\nfunction update(nodes, links) {\n\trScale.domain(d3.extent(nodes, \n  \tfunction (d) {\n    \treturn d.age;\n    }));      \n  simulation\n  \t.force(\"link\", \n    \td3.forceLink()\n      \t.id(function(d) { \n        return d.name; \n      }));\n      \n  simulation.nodes(nodes);      \n  simulation.force(\"link\")\n      .links(links);\n  simulation.on(\"tick\", ticked)\n    .force(\"collide\", d3.forceCollide(\n\t\tfunction (d) {\n    \treturn rScale(d.age);\n    }  \n  ).strength(0.7))  \n\n\tvar nodesSel = svg.selectAll(\".nodes\")\n  \t.data(nodes);\n    \n  var nodesEnter = nodesSel.enter()\n  \t.append(\"g\")\n    .attr(\"class\",\"nodes\")\n    .call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n  \n  nodesEnter.append(\"circle\")\n  \t.attr(\"r\", function (d) {\n    \treturn rScale(d.age);\n    })\n    .style(\"fill\", function (d) {\n    \treturn color(d.city);\n    });\n\t    \n\tvar linksSel = svg.selectAll(\".links\")\n  \t.data(links);\n  \n  var linksEnter = linksSel.enter()\n  \t.append(\"path\")\n    .attr(\"class\",\"links\");\n    \n\n\tfunction ticked() {\n  \t//console.log(\"ticked!\");\n    linksSel\n    \t.merge(linksEnter)\n      .attr(\"d\", function (d) {\n      \treturn \"M\" + d.source.x + \n        \t\" \" + d.source.y +\n          \" L \" + d.target.x +\n          \" \" + d.target.y;        \n      });\n    nodesSel\n    \t.merge(nodesEnter)\n    \t.attr(\"transform\",\n    \tfunction (d) {\n      \treturn \"translate(\" + d.x +\",\" + d.y + \")\";\n      });\n  }\n}\n\nupdate(nodes, links);\n\n\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d.fx = d.x, d.fy = d.y;\n}\n\nfunction dragged(d) {\n  d.fx = d3.event.x, d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d.fx = null, d.fy = null;\n}\n\n  </script>", "description": "ForceExample3", "created_at": "2016-10-05T05:05:20Z", "updated_at": "2016-10-05T05:05:43Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleOrdinal", "d3.forceSimulation", "d3.forceManyBody", "d3.forceCenter", "d3.extent", "d3.forceLink", "d3.forceCollide", "d3.drag"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/davidgutierrez/'>davidgutierrez</a>'s block: <a href='http://bl.ocks.org/davidgutierrez/41961f8bce821419faf92f6b72cfc77f'>ForceExample</a>", "uid": "davidgutierrez_ddc1d5ee2dcdcc7172bf004bfedee93d"}, {"code": "<script>\n    \n  var margin = {top: 20, right: 20, bottom: 30, left: 50},\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n  function compute(params) {\n\t  var Zc = params.Zc, // control depth (cm)\n        Zw = params.Zw, // weir depth (cm)\n        W = params.W,     // mean cell width = area / flow path length (km)\n        a = params.a,     // empirical\n        b = params.b,     // empirical\n      pump_capacity = params.pump_capacity;\n\n  var Z_arr = d3.range(0, 100, 1);\n\n  var Q_arr = Z_arr.map(function (Z) {\n    var Q = W * a * Math.pow((Z - Zw), b);\n    //   console.log(Z, Q)\n      return Z < Zc && Z < Zw ? 0 :\n      Q > pump_capacity ? pump_capacity : Q;\n    });\n\n    return d3.zip(Z_arr, Q_arr);\n  }\n\n  var data = compute({Zc: 40, Zw: 40, W: 1, a: 1, b: 1.5, pump_capacity: 100});\n\n  var x = d3.scaleLinear()\n\t  .domain([0, 100])\n    .range([0]);\n\n  var y = d3.scaleLinear()\n    .domain([0, 110])\n    .range([height, 0]);\n\n  var line = d3.line()\n    .x(function(d) { return x(d[0]); })\n    .y(function(d) { return y(d[1]); });\n\n  var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n  \t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n  x.domain(d3.extent(data, function(d) { return d[0]; }));\n  y.domain(d3.extent(data, function(d) { return d[1]; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y))\n    .append(\"text\")\n      .attr(\"class\", \"axis-title\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Q\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n</script>", "description": "fresh block", "created_at": "2016-10-05T01:43:35Z", "updated_at": "2016-10-05T01:44:13Z", "api": ["d3.range", "d3.zip", "d3.scaleLinear", "d3.line", "d3.select", "d3.extent", "d3.axisBottom", "d3.axisLeft"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "walkerjeffd_f106208f55304c0b18d7bbe68a18a591"}, {"code": "<script>\nvar nodes=[\n\t{name:\"John\", age:35, city:\"Pereira\"},\n\t{name:\"Jose\", age:53, city:\"Bogot\"},\n\t{name:\"Mafe\", age:15, city:\"Pereira\"},\n\t{name:\"Mario\", age:23, city:\"Bogot\"},\n\t{name:\"Pedro\", age:45, city:\"Neiva\"},\n\t{name:\"Jose\", age:22, city:\"Neiva\"},\n\t{name:\"Karla\", age:12, city:\"Bogot\"}\n];\nvar links = [\n\t{source:\"John\", target:\"Mafe\", weight:10},\n\t{source:\"John\", target:\"Jose\", weight:2},\n\t{source:\"Jose\", target:\"Mario\", weight:5},\n\t{source:\"Mario\", target:\"Mafe\", weight:8},\n  {source:\"Mario\", target:\"Karla\", weight:8}\n];\n\nvar width=300,\n\theight=300;\nvar svg = d3.select(\"#chart\")\n\t.append(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height);\n  \nvar rScale = d3.scaleLinear()\n\t.range([2, 20]);\nvar color = d3.scaleOrdinal(d3.schemeCategory10);  \nvar simulation = d3.forceSimulation()\n//    .force(\"charge\", d3.forceManyBody()\n//    \t.strength(-1))    \n\t.force(\"center\", d3.forceCenter(width/2,height/2));\n\nfunction update(nodes, links) {\n\trScale.domain(d3.extent(nodes, \n  \tfunction (d) {\n    \treturn d.age;\n    }));      \n  simulation\n  \t.force(\"link\", \n    \td3.forceLink()\n      \t.id(function(d) { \n        return d.name; \n      }));\n      \n  simulation.nodes(nodes);      \n  simulation.force(\"link\")\n      .links(links);\n  simulation.on(\"tick\", ticked)\n    .force(\"collide\", d3.forceCollide(\n\t\tfunction (d) {\n    \treturn rScale(d.age);\n    }  \n  ).strength(0.7))  \n\n\tvar nodesSel = svg.selectAll(\".nodes\")\n  \t.data(nodes);\n    \n  var nodesEnter = nodesSel.enter()\n  \t.append(\"g\")\n    .attr(\"class\",\"nodes\")\n    .call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n  \n  nodesEnter.append(\"circle\")\n  \t.attr(\"r\", function (d) {\n    \treturn rScale(d.age);\n    })\n    .style(\"fill\", function (d) {\n    \treturn color(d.city);\n    });\n\t    \n\tvar linksSel = svg.selectAll(\".links\")\n  \t.data(links);\n  \n  var linksEnter = linksSel.enter()\n  \t.append(\"path\")\n    .attr(\"class\",\"links\");\n    \n\n\tfunction ticked() {\n  \t//console.log(\"ticked!\");\n    linksSel\n    \t.merge(linksEnter)\n      .attr(\"d\", function (d) {\n      \treturn \"M\" + d.source.x + \n        \t\" \" + d.source.y +\n          \" L \" + d.target.x +\n          \" \" + d.target.y;        \n      });\n    nodesSel\n    \t.merge(nodesEnter)\n    \t.attr(\"transform\",\n    \tfunction (d) {\n      \treturn \"translate(\" + d.x +\",\" + d.y + \")\";\n      });\n  }\n}\n\nupdate(nodes, links);\n\n\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d.fx = d.x, d.fy = d.y;\n}\n\nfunction dragged(d) {\n  d.fx = d3.event.x, d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d.fx = null, d.fy = null;\n}\n\n  </script>", "description": "ForceExample", "created_at": "2016-10-05T01:35:12Z", "updated_at": "2016-10-05T05:05:17Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleOrdinal", "d3.forceSimulation", "d3.forceManyBody", "d3.forceCenter", "d3.extent", "d3.forceLink", "d3.forceCollide", "d3.drag"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "davidgutierrez_41961f8bce821419faf92f6b72cfc77f"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n\n    svg.append(\"text\")\n      .text(\"Edit the code below to change me!\")\n      .attr(\"y\", 200)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 36)\n      .style(\"font-family\", \"monospace\")\n\n  </script>", "description": "Drought", "created_at": "2016-10-04T23:58:29Z", "updated_at": "2016-10-04T23:58:29Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "DarienLiang_858e9d1c9b856fd9fdd6b49bc022b9bd"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Collapsible Tree Example by john guerra", "created_at": "2016-10-04T23:30:55Z", "updated_at": "2016-10-04T23:31:06Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a [Reingold\u2013Tilford tree](/4339184). Click on the nodes to expand or collapse.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>\n\nforked from <a href='http://bl.ocks.org/john-guerra/'>john-guerra</a>'s block: <a href='http://bl.ocks.org/john-guerra/32be58cf91f613d45c687095bad39432'>Collapsible Tree</a>", "uid": "jcamilort_1af13c226335fe8547c8d89cbd69097b"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    size = Math.max(width, height);\n\nvar color = d3.scaleRainbow()\n    .domain([0, 2 * Math.PI]);\n\nvar circles = d3.packSiblings(d3.range(2000)\n    .map(d3.randomUniform(8, 26))\n    .map(function(r) { return {r: r}; }))\n  .filter(function(d) { return -500 < d.x && d.x < 500 && -500 < d.y && d.y < 500; });\n\nsvg\n  .select(\"g\")\n  .selectAll(\"circle\")\n  .data(circles)\n  .enter().append(\"circle\")\n    .style(\"fill\", function(d) { return color(d.angle = Math.atan2(d.y, d.x)); })\n    .attr(\"cx\", function(d) { return Math.cos(d.angle) * (size / Math.SQRT2 + 30); })\n    .attr(\"cy\", function(d) { return Math.sin(d.angle) * (size / Math.SQRT2 + 30); })\n    .attr(\"r\", function(d) { return d.r - 0.25; })\n  .transition()\n    .ease(d3.easeCubicOut)\n    .delay(function(d) { return Math.sqrt(d.x * d.x + d.y * d.y) * 8; })\n    .duration(1400)\n    .attr(\"cx\", function(d) { return d.x; })\n    .attr(\"cy\", function(d) { return d.y; });\n\n</script>", "description": "Rainbow Pack (adapted for d3.unconf badge)", "created_at": "2016-10-04T07:27:44Z", "updated_at": "2016-10-04T07:30:02Z", "api": ["d3.select", "d3.scaleRainbow", "d3.packSiblings", "d3.range", "d3.randomUniform"], "readme": "A quick test of [d3-hierarchy](https://github.com/d3/d3-hierarchy)\u2019s new circle-packing layout.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/b07f8ae91c5e9e45719c'>Rainbow Pack</a>\n\nforked from <a href='http://bl.ocks.org/kerryrodden/'>kerryrodden</a>'s block: <a href='http://bl.ocks.org/kerryrodden/1272d31a85475acdc059bafd2fb4e36b'>Rainbow Pack (adapted for d3.unconf badge)</a>", "uid": "enjalot_5fb88c1beadbb93a029cd3797d195c6f"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    size = Math.max(width, height);\n\nvar color = d3.scaleRainbow()\n    .domain([0, 2 * Math.PI]);\n\nvar circles = d3.packSiblings(d3.range(2000)\n    .map(d3.randomUniform(8, 26))\n    .map(function(r) { return {r: r}; }))\n  .filter(function(d) { return -500 < d.x && d.x < 500 && -500 < d.y && d.y < 500; });\n\nsvg\n  .select(\"g\")\n  .selectAll(\"rect\")\n  .data(circles)\n  .enter().append(\"rect\")\n    .style(\"fill\", function(d) { return color(d.angle = Math.atan2(d.y, d.x)); })\n    .attr(\"x\", function(d) { return d.r/2 + Math.cos(d.angle) * (size / Math.SQRT2 + 30); })\n    .attr(\"y\", function(d) { return d.r/2 + Math.sin(d.angle) * (size / Math.SQRT2 + 30); })\n    .attr(\"width\", function(d) { return d.r - 0.25; })\n    .attr(\"height\", function(d) { return d.r - 0.25; })\n  .transition()\n    .ease(d3.easeCubicOut)\n  .delay(function(d) { return Math.sqrt(d.x * d.x + d.y * d.y) * 5; })\n    .duration(1000)\n    .attr(\"x\", function(d) { return d.x; })\n    .attr(\"y\", function(d) { return d.y; });\n\n</script>", "description": "Rainbow Pack (adapted for d3.unconf badge)", "created_at": "2016-10-04T05:39:31Z", "updated_at": "2016-10-04T07:21:33Z", "api": ["d3.select", "d3.scaleRainbow", "d3.packSiblings", "d3.range", "d3.randomUniform"], "readme": "A quick test of [d3-hierarchy](https://github.com/d3/d3-hierarchy)\u2019s new circle-packing layout.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/b07f8ae91c5e9e45719c'>Rainbow Pack</a>\n\nforked from <a href='http://bl.ocks.org/kerryrodden/'>kerryrodden</a>'s block: <a href='http://bl.ocks.org/kerryrodden/1272d31a85475acdc059bafd2fb4e36b'>Rainbow Pack (adapted for d3.unconf badge)</a>", "uid": "enjalot_fe2bc0193873d4a1026e1bd15353878f"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    size = Math.max(width, height);\n\nvar color = d3.scaleRainbow()\n    .domain([0, 2 * Math.PI]);\n\nvar circles = d3.packSiblings(d3.range(2000)\n    .map(d3.randomUniform(8, 26))\n    .map(function(r) { return {r: r}; }))\n  .filter(function(d) { return -500 < d.x && d.x < 500 && -500 < d.y && d.y < 500; });\n\nsvg\n  .select(\"g\")\n  .selectAll(\"circle\")\n  .data(circles)\n  .enter().append(\"circle\")\n    .style(\"fill\", function(d) { return color(d.angle = Math.atan2(d.y, d.x)); })\n    .attr(\"cx\", function(d) { return Math.cos(d.angle) * (size / Math.SQRT2 + 30); })\n    .attr(\"cy\", function(d) { return Math.sin(d.angle) * (size / Math.SQRT2 + 30); })\n    .attr(\"r\", function(d) { return d.r - 0.25; })\n  .transition()\n    .ease(d3.easeCubicOut)\n    .delay(function(d) { return Math.sqrt(d.x * d.x + d.y * d.y) * 10; })\n    .duration(1000)\n    .attr(\"cx\", function(d) { return d.x; })\n    .attr(\"cy\", function(d) { return d.y; });\n\n</script>", "description": "Rainbow Pack (adapted for d3.unconf badge)", "created_at": "2016-10-04T04:57:09Z", "updated_at": "2016-10-04T05:26:32Z", "api": ["d3.select", "d3.scaleRainbow", "d3.packSiblings", "d3.range", "d3.randomUniform"], "readme": "A quick test of [d3-hierarchy](https://github.com/d3/d3-hierarchy)\u2019s new circle-packing layout.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/b07f8ae91c5e9e45719c'>Rainbow Pack</a>", "uid": "kerryrodden_1272d31a85475acdc059bafd2fb4e36b"}, {"code": "<script>\n\nvar margin = {top: 40, right: 40, bottom: 40, left: 40},\n    width = 1050 - margin.left - margin.right,\n    height = 1500 - margin.top - margin.bottom;\n\nvar y = d3.scalePoint()\n    .domain(d3.range(50))\n    .range([0, height]);\n\nvar z = d3.scaleLinear()\n    .domain([10, 0])\n    .range([\"hsl(62,100%,90%)\", \"hsl(228,30%,20%)\"])\n    .interpolate(d3.interpolateHcl);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.selectAll(\"circle\")\n    .data(y.domain())\n  .enter().append(\"circle\")\n    .attr(\"r\", 25)\n    .attr(\"cx\", 0)\n    .attr(\"cy\", y)\n    .style(\"fill\", function(d) { return z(Math.abs(d % 20 - 10)); })\n  .transition()\n    .duration(2500)\n    .delay(function(d) { return d * 40; })\n    .on(\"start\", slide);\n\nfunction slide() {\n  d3.active(this)\n      .attr(\"cx\", width)\n    .transition()\n      .attr(\"cx\", 0)\n    .transition()\n      .on(\"start\", slide);\n}\n\n</script>", "description": "Chained Transitions II (resized for d3.unconf badge)", "created_at": "2016-10-03T23:40:24Z", "updated_at": "2016-10-03T23:42:56Z", "api": ["d3.scalePoint", "d3.range", "d3.scaleLinear", "d3.select", "d3.active"], "readme": "This animation demonstrates the use of [d3.active](https://github.com/d3/d3-transition#active) to create [chained transitions](/mbostock/1125997) in D3 4.0.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/346f4d967650b27c0511'>Chained Transitions II</a>", "uid": "kerryrodden_44fa2ae8b8041ef2c9f89dd888e501ac"}, {"code": "<script>\n!(function(){\n    \"use strict\"\n\n    var width,height\n    var chartWidth, chartHeight\n    var margin\n    var svg = d3.select(\"#graph\").append(\"svg\")\n    var chartLayer = svg.append(\"g\").classed(\"chartLayer\", true)\n    \n    main()\n    \n    function main() {\n        var range = 100\n        var data = {\n            nodes:d3.range(0, range).map(function(d){ return {label: \"l\"+d ,r:~~d3.randomUniform(8, 28)()}}),\n            links:d3.range(0, range).map(function(){ return {source:~~d3.randomUniform(range)(), target:~~d3.randomUniform(range)()} })        \n        }\n        \n        setSize(data)\n        drawChart(data)    \n    }\n    \n    function setSize(data) {\n        width = document.querySelector(\"#graph\").clientWidth\n        height = document.querySelector(\"#graph\").clientHeight\n    \n        margin = {top:0, left:0, bottom:0, right:0 }\n        \n        \n        chartWidth = width - (margin.left+margin.right)\n        chartHeight = height - (margin.top+margin.bottom)\n        \n        svg.attr(\"width\", width).attr(\"height\", height)\n        \n        \n        chartLayer\n            .attr(\"width\", chartWidth)\n            .attr(\"height\", chartHeight)\n            .attr(\"transform\", \"translate(\"+[margin.left, margin.top]+\")\")\n            \n            \n    }\n    \n    function drawChart(data) {\n        \n        var simulation = d3.forceSimulation()\n            .force(\"link\", d3.forceLink().id(function(d) { return d.index }))\n            .force(\"collide\",d3.forceCollide( function(d){return d.r + 8 }).iterations(16) )\n            .force(\"charge\", d3.forceManyBody())\n            .force(\"center\", d3.forceCenter(chartWidth / 2, chartWidth / 2))\n            .force(\"y\", d3.forceY(0))\n            .force(\"x\", d3.forceX(0))\n    \n        var link = svg.append(\"g\")\n            .attr(\"class\", \"links\")\n            .selectAll(\"line\")\n            .data(data.links)\n            .enter()\n            .append(\"line\")\n            .attr(\"stroke\", \"black\")\n        \n        var node = svg.append(\"g\")\n            .attr(\"class\", \"nodes\")\n            .selectAll(\"circle\")\n            .data(data.nodes)\n            .enter().append(\"circle\")\n            .attr(\"r\", function(d){  return d.r })\n            .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended));    \n        \n        \n        var ticked = function() {\n            link\n                .attr(\"x1\", function(d) { return d.source.x; })\n                .attr(\"y1\", function(d) { return d.source.y; })\n                .attr(\"x2\", function(d) { return d.target.x; })\n                .attr(\"y2\", function(d) { return d.target.y; });\n    \n            node\n                .attr(\"cx\", function(d) { return d.x; })\n                .attr(\"cy\", function(d) { return d.y; });\n        }  \n        \n        simulation\n            .nodes(data.nodes)\n            .on(\"tick\", ticked);\n    \n        simulation.force(\"link\")\n            .links(data.links);    \n        \n        \n        \n        function dragstarted(d) {\n            if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n        }\n        \n        function dragged(d) {\n            d.fx = d3.event.x;\n            d.fy = d3.event.y;\n        }\n        \n        function dragended(d) {\n            if (!d3.event.active) simulation.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n        } \n                \n    }\n}());\n</script>", "description": "D3 v4 - force layout", "created_at": "2016-10-03T19:22:07Z", "updated_at": "2016-10-03T19:22:07Z", "api": ["d3.select", "d3.range", "d3.randomUniform", "d3.forceSimulation", "d3.forceLink", "d3.forceCollide", "d3.forceManyBody", "d3.forceCenter", "d3.forceY", "d3.forceX", "d3.drag"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/shimizu/'>shimizu</a>'s block: <a href='http://bl.ocks.org/shimizu/e6209de87cdddde38dadbb746feaf3a3'>D3 v4 - force layout</a>", "uid": "domhorvath_58de10fe06d7f26e47a6e0c900cf1693"}, {"code": "<script>\n\nvar data = d3.range(800).map(Math.random);\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 194, right: 50, bottom: 214, left: 50},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar x = d3.scaleLinear().range([0, width]),\n    y = d3.randomNormal(height / 2, height / 8);\n\nvar brush = d3.brushX()\n    .extent([[0, 0], [width, height]])\n    .on(\"start brush end\", brushmoved);\n\ng.append(\"g\")\n    .attr(\"class\", \"axis axis--x\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x));\n\nvar circle = g.append(\"g\")\n    .attr(\"class\", \"circle\")\n  .selectAll(\"circle\")\n  .data(data)\n  .enter().append(\"circle\")\n    .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \",\" + y() + \")\"; })\n    .attr(\"r\", 3.5);\n\nvar gBrush = g.append(\"g\")\n    .attr(\"class\", \"brush\")\n    .call(brush);\n\n// style brush resize handle\n// https://github.com/crossfilter/crossfilter/blob/gh-pages/index.html#L466\nvar brushResizePath = function(d) {\n    var e = +(d.type == \"e\"),\n        x = e ? 1 : -1,\n        y = height / 2;\n    return \"M\" + (.5 * x) + \",\" + y + \"A6,6 0 0 \" + e + \" \" + (6.5 * x) + \",\" + (y + 6) + \"V\" + (2 * y - 6) + \"A6,6 0 0 \" + e + \" \" + (.5 * x) + \",\" + (2 * y) + \"Z\" + \"M\" + (2.5 * x) + \",\" + (y + 8) + \"V\" + (2 * y - 8) + \"M\" + (4.5 * x) + \",\" + (y + 8) + \"V\" + (2 * y - 8);\n}\n\nvar handle = gBrush.selectAll(\".handle--custom\")\n  .data([{type: \"w\"}, {type: \"e\"}])\n  .enter().append(\"path\")\n    .attr(\"class\", \"handle--custom\")\n    .attr(\"stroke\", \"#000\")\n    .attr(\"cursor\", \"ew-resize\")\n    .attr(\"d\", brushResizePath);\n\ngBrush.call(brush.move, [0.3, 0.5].map(x));\n\nfunction brushmoved() {\n  var s = d3.event.selection;\n  if (s == null) {\n    handle.attr(\"display\", \"none\");\n    circle.classed(\"active\", false);\n  } else {\n    var sx = s.map(x.invert);\n    circle.classed(\"active\", function(d) { return sx[0] <= d && d <= sx[1]; });\n    handle.attr(\"display\", null).attr(\"transform\", function(d, i) { return \"translate(\" + [ s[i], - height / 4] + \")\"; });\n  }\n}\n\n</script>", "description": "Brush Handles d3v4 II", "created_at": "2016-10-03T14:24:38Z", "updated_at": "2016-10-04T03:19:22Z", "api": ["d3.range", "d3.select", "d3.scaleLinear", "d3.randomNormal", "d3.brushX", "d3.axisBottom"], "readme": "Froked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4349545'>Brush Handles</a> (now in d3v4).\n\nSee [issue #14](https://github.com/d3/d3-brush/issues/14) and [crossfilter](https://github.com/crossfilter/crossfilter/blob/gh-pages/index.html#L466).\n", "uid": "Fil_2d43867ba1f36a05459c7113c7f6f98a"}, {"code": "<script>\n\nvar data = d3.range(800).map(Math.random);\n\nvar margin = {top: 194, right: 50, bottom: 214, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleLinear()\n    .range([0, width]);\n\nvar y = d3.randomNormal(height / 2, height / 8);\n\nvar brush = d3.brushX()\n    .extent([[0, 0], [width, height]])\n    .on(\"start\", brushstart)\n    .on(\"brush\", brushmove)\n    .on(\"end\", brushend)\n    .handleSize(height);\n\nvar arc = d3.arc()\n    .outerRadius(height / 2)\n    .innerRadius(0)\n    .startAngle(0)\n    .endAngle(function(d) { return d.type==\"w\" ? -Math.PI : Math.PI; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom().scale(x));\n\nvar circle = svg.append(\"g\").selectAll(\"circle\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \",\" + y() + \")\"; })\n    .attr(\"r\", 3.5);\n\nvar brushg = svg.append(\"g\")\n    .attr(\"class\", \"brush\")\n    .call(brush);\n\nbrushg.call(brush.move, [x(0.3), x(0.5)]);\n  \nbrushg.selectAll(\".resize\")\n    .data([{type:\"w\"}, {type:\"e\"}])\n    .enter()\n    .append(\"path\")\n    .attr(\"class\",\"resize\");\n\nbrushstart();\nbrushmove();\n\nfunction brushstart() {\n  svg.classed(\"selecting\", true);\n  brushg.selectAll('.resize')\n  .attr('d', arc)\n}\n\nfunction brushmove() {\n  var p = d3.brushSelection(brushg.node()),\n      s = p.map(x.invert); \n\n  brushg.selectAll('.resize')\n     .attr('transform', function(d,i){ return 'translate(' + [p[i], height/2] + ')';});\n\n  circle.classed(\"selected\", function(d) { return s[0] <= d && d <= s[1]; });\n  \n}\n\nfunction brushend() {\n  svg.classed(\"selecting\", d3.event.selection);\n  if (!d3.event.selection) brushg.selectAll('.resize')\n  .attr('d', null)\n}\n\n</script>", "description": "Brush Handles d3v4", "created_at": "2016-10-02T20:13:49Z", "updated_at": "2016-10-03T14:30:37Z", "api": ["d3.range", "d3.scaleLinear", "d3.randomNormal", "d3.brushX", "d3.arc", "d3.select", "d3.axisBottom", "d3.brushSelection"], "readme": "This example demonstrates how to add visible and draggable handles to D3\u2019s d3.brush component, rather than that relying on the invisible boundary of the brush extent. The handle sizes here are exaggerated for demonstration purposes!\n\nForked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4349545'>Brush Handles</a> & adapted to d3v4 by Philippe Rivi\u00e8re for [issue #14](https://github.com/d3/d3-brush/issues/14).\n\nNote: looking for a better way to pass the x scale.\n\nSee the variant with <a href=\"http://bl.ocks.org/Fil/2d43867ba1f36a05459c7113c7f6f98a\">nice crossfilter handles</a>.", "uid": "Fil_013d52c3e03aa7b90f71db99eace95af"}, {"code": "<script>\n    color_array = ['#ffffe0','#fff3c6','#ffe5ab','#ffd88e','#ffc970','#ffbc50','#ffad28','#ff9d24','#ff8945','#ff745d','#ff5d72','#ff3a87','#f9128a','#e90d75','#d90862','#c9054f','#bb023d','#aa012a','#9a0017','#8b0000']; \n    var width = 1050;\n    var height = 1500;\n    var arc_width = 43;\n    var arc_round = arc_width/2;\n    var  = 2 * Math.PI;\n    var r = 30;\n    var data = [\n      {index: 0,  color: color_array[0],  start:0, end: 0},\n      {index: 1,  color: color_array[1],  start:0, end: 0},\n      {index: 2,  color: color_array[2],  start:0, end: 0},\n      {index: 3,  color: color_array[3],  start:0, end: 0},\n      {index: 4,  color: color_array[4],  start:0, end: 0},\n      {index: 5,  color: color_array[5],  start:0, end: 0},\n      {index: 6,  color: color_array[6],  start:0, end: 0},\n      {index: 7,  color: color_array[7],  start:0, end: 0},\n      {index: 8,  color: color_array[8],  start:0, end: 0},\n      {index: 9,  color: color_array[9],  start:0, end: 0},\n      {index: 10, color: color_array[10], start:0, end: 0},\n      {index: 11, color: color_array[11], start:0, end: 0},\n      {index: 12, color: color_array[12], start:0, end: 0},\n      {index: 13, color: color_array[13], start:0, end: 0},\n      {index: 14, color: color_array[14], start:0, end: 0},\n      {index: 15, color: color_array[15], start:0, end: 0},\n      {index: 16, color: color_array[16], start:0, end: 0},\n      {index: 17, color: color_array[17], start:0, end: 0},\n      {index: 18, color: color_array[18], start:0, end: 0},\n      {index: 19, color: color_array[19], start:0, end: 0}\n    ];\n    var bg_data = [\n      {index: 0,  color: color_array[0],  start:0, end: 360},\n      {index: 1,  color: color_array[1],  start:0, end: 360},\n      {index: 2,  color: color_array[2],  start:0, end: 360},\n      {index: 3,  color: color_array[3],  start:0, end: 360},\n      {index: 4,  color: color_array[4],  start:0, end: 360},\n      {index: 5,  color: color_array[5],  start:0, end: 360},\n      {index: 6,  color: color_array[6],  start:0, end: 360},\n      {index: 7,  color: color_array[7],  start:0, end: 360},\n      {index: 8,  color: color_array[8],  start:0, end: 360},\n      {index: 9,  color: color_array[9],  start:0, end: 360},\n      {index: 10, color: color_array[10], start:0, end: 360},\n      {index: 11, color: color_array[11], start:0, end: 360},\n      {index: 12, color: color_array[12], start:0, end: 360},\n      {index: 13, color: color_array[13], start:0, end: 360},\n      {index: 14, color: color_array[14], start:0, end: 360},\n      {index: 15, color: color_array[15], start:0, end: 360},\n      {index: 16, color: color_array[16], start:0, end: 360},\n      {index: 17, color: color_array[17], start:0, end: 360},\n      {index: 18, color: color_array[18], start:0, end: 360},\n      {index: 19, color: color_array[19], start:0, end: 360}\n    ];\n\n    //arc generator\n    var arc = d3.svg.arc()\n      .cornerRadius(arc_width/2)\n      .startAngle(function(d) { \n        return d.start *  / 360 - arc_round / (r + (arc_width + 1) * d.index + arc_width - arc_round);\n      })\n      .endAngle(function(d) {\n        return d.end* / 360 + arc_round / (r + (arc_width + 1) * d.index + arc_width - arc_round);\n      })\n      .innerRadius(function(d) { return r + (arc_width + 1) * d.index; })\n      .outerRadius(function(d) { return r + (arc_width + 1) * d.index + arc_width; });\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n    var arcs_bg = svg.append(\"g\").selectAll(\"path.arcbg\")\n        .data(bg_data)\n        .enter().append(\"path\")\n        .attr(\"class\", \"arcbg\")\n        .style(\"opacity\", 0.25)\n        .style(\"fill\", function(d) { return d.color; })\n        .attr(\"d\", arc);\n    var arcs = svg.append(\"g\").selectAll(\"path.arc\")\n      .data(data)\n      .enter().append(\"path\")\n      .attr(\"class\", \"arc\")\n      .style(\"fill\", function(d) { return d.color; })\n      .attr(\"d\", arc)\n      .each(function(d) { this._current = d;});\n\n\n    setTimeout(function() {\n      arcs.data([ \n        {index: 0,  start:0, end: 360},\n        {index: 1,  start:0, end: 360},\n        {index: 2,  start:0, end: 360},\n        {index: 3,  start:0, end: 360},\n        {index: 4,  start:0, end: 360},\n        {index: 5,  start:0, end: 360},\n        {index: 6,  start:0, end: 360},\n        {index: 7,  start:0, end: 360},\n        {index: 8,  start:0, end: 360},\n        {index: 9,  start:0, end: 360},\n        {index: 10, start:0, end: 360},\n        {index: 11, start:0, end: 360},\n        {index: 12, start:0, end: 360},\n        {index: 13, start:0, end: 360},\n        {index: 14, start:0, end: 360},\n        {index: 15, start:0, end: 360},\n        {index: 16, start:0, end: 360},\n        {index: 17, start:0, end: 360},\n        {index: 18, start:0, end: 360},\n        {index: 19, start:0, end: 360}\n      ]);\n\n      arcs.each(function(d, index){\n        console.log(d3.select(this));\n        d3.select(this).transition().duration(3000 + 150 * index).call(arcTween);\n      });\n    }, 800);\n\n    function arcTween(transition) {\n      transition.attrTween(\"d\", function(d) {\n        var interpolate = d3.interpolate(this._current.end, d.end);\n        this._current = interpolate(0);\n        return function(t) {\n          d.end = interpolate(t);\n          return arc(d);\n        };\n      });\n    }\n  </script>", "description": "badgetron", "created_at": "2016-10-02T16:36:34Z", "updated_at": "2016-10-02T23:07:52Z", "api": ["d3.svg.arc", "d3.select", "d3.interpolate"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "thayashi_8e0ec8527695e874e222a66b0f997747"}, {"code": "<script>\n\n  \nvar width = 960,\n    height = 500;\n\nvar projection = d3.geoConicEqualArea()\n    .scale(155)\n    .parallels([-31,-10])\n    .translate([width / 2, height / 2])\n    .precision(.1);\n\nvar path = d3.geoPath()\n    .projection(projection);\n\nvar graticule = d3.geoGraticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"defs\").append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\nsvg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"fill\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\nd3.json(\"https://gist.githubusercontent.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/world-50m.json\", function(error, world) {\n  if (error) throw error;\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n\n  var points = d3.range(20).map(function(i) {\n    return [i*4,i*4];\n  });\n  var lines = points.map(function(point) {\n    return {type: \"FeatureCollection\", features: [{type: \"Feature\", geometry:{type:'LineString', coordinates: [point, projection.invert(projection(point))]}}, {type: \"Feature\", geometry:{type:'Point', coordinates: point}}, {type: \"Feature\", geometry:{type:'Point', coordinates: projection.invert(projection(point))}}]};\n  })\n  svg.selectAll('.test')\n      .data(lines)\n  .enter()\n  .append('path')\n  .attr('class', 'test')\n  .attr(\"d\", function(d) { console.log(d, path(d)); return path(d);})\n\n});\n\n\n</script>", "description": "Conic projection with negative parallels [UNLISTED]", "created_at": "2016-10-02T07:26:28Z", "updated_at": "2016-10-02T09:15:52Z", "api": ["d3.geoConicEqualArea", "d3.geoPath", "d3.geoGraticule", "d3.select", "d3.json", "d3.range"], "readme": "Investigating [d3 issue #2707](https://github.com/d3/d3/issues/2707).\n\nThe bug is when the parallel with the highest latitude (in absolute value) is south of the Equator, in other words when the cone's apex is south.\n\nFixed by [#61](https://github.com/d3/d3-geo/pull/61).", "uid": "Fil_bdf4e2b18aff57b7c7b3411e3609e546"}, {"code": "<script>\n \nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar color = d3.scaleOrdinal().range(d3.schemeCategory20b);\n\nvar n = 4000;\n  \nvar data = d3.range(n)\n    .map(function(d,i) { return [Math.random() * width, Math.random() * height, color(i), Math.random()]; });\n\nvar voronoi = d3.voronoi() \n    .size([width, height]);\n\nvar sites = data.sort(function(a,b) {\n  return d3.descending(a[3], b[3]);\n})\n.slice(0,n/10); \n\nvar diagram = voronoi(sites);\ndiagram.find = find;\n\n\nd3.select('svg')\n.append('g')\n.selectAll('circle')\n.data(data)\n.enter()\n.append('circle')\n.attr('r', function(d) {return 10 * d[3] * d[3];})\n.attr('transform', function(d) { return 'translate('+ [ d[0], d[1] ] +')'; })\n.attr('fill', function(d) {\n  var found = diagram.find(d[0],d[1]);\n  return sites[found.index][2];\n});\n\n\nfunction find (x, y, radius){ \n  // optimization: start from most recent result  \n  var i, next = diagram.find.found || Math.floor(Math.random() * diagram.cells.length);\n  var cell = diagram.cells[next] || diagram.cells[next=0];\n  var dx = x - cell.site[0], \n      dy = y - cell.site[1],\n      dist = dx*dx + dy*dy;\n  \n \n  do { \n    cell = diagram.cells[i=next]; \n    next = null;\n    cell.halfedges.forEach(function(e) {\n      var edge = diagram.edges[e];\n      var ea = edge.left;\n      if (ea === cell.site || !ea) {\n        ea = edge.right;\n      }\n      if (ea){\n\t\t\t\tvar dx = x - ea[0],\n            dy = y - ea[1],\n            ndist = dx*dx + dy*dy;\n        if (ndist < dist){\n          dist = ndist;\n          next = ea.index;\n          return;\n        }\n      }\n    });\n\n  } while (next !== null);\n\n  diagram.find.found = i;\n  if (!radius || dist < radius * radius) return cell.site;\n}\n\n</script>", "description": "Voronoi binning", "created_at": "2016-10-01T16:51:47Z", "updated_at": "2016-10-01T16:51:48Z", "api": ["d3.select", "d3.scaleOrdinal", "d3.range", "d3.voronoi", "d3.descending"], "readme": "Use <a href='http://bl.ocks.org/Fil/1b7ddbcd71454d685d1259781968aefc'>Voronoi.find()</a> to group data by the Voronoi cells of the top 10% data points.\n\n\nSee also the <a href='//bl.ocks.org/Fil/959437d834f4a01eb4d1023cdd107554'>animated version</a>.\n\nOriginal work by Philippe Rivi\u00e8re for d3-voronoi ([issue 17](https://github.com/d3/d3-voronoi/issues/17)).\n\n\n\nforked from <a href='http://bl.ocks.org/Fil/'>Fil</a>'s block: <a href='http://bl.ocks.org/Fil/7c3c41f1524dcf2caea54290cceddf0a'>Voronoi binning</a>", "uid": "jermspeaks_135b6e0db7d35aa4bfed34c9e946e751"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar x = d3.scaleBand()\n    .rangeRound([0, width])\n    .padding(0.1)\n    .align(0.1);\n\nvar y = d3.scaleLinear()\n    .rangeRound([height, 0]);\n\nvar z = d3.scaleOrdinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar stack = d3.stack();\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  data.sort(function(a, b) { return b.total - a.total; });\n\n  x.domain(data.map(function(d) { return d.State; }));\n  y.domain([0, d3.max(data, function(d) { return d.total; })]).nice();\n  z.domain(data.columns.slice(1));\n\n  stack.keys(data.columns.slice(1));\n  \n  g.selectAll(\".serie\")\n    .data(stack(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"serie\")\n      .attr(\"fill\", function(d) { return z(d.key); })\n    .selectAll(\"rect\")\n    .data(function(d) { return d; })\n    .enter().append(\"rect\")\n      .attr(\"x\", function(d) { return x(d.data.State); })\n      .attr(\"y\", function(d) { return y(d[1]); })\n      .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n      .attr(\"width\", x.bandwidth());\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y).ticks(10, \"s\"))\n    .append(\"text\")\n      .attr(\"x\", 2)\n      .attr(\"y\", y(y.ticks(10).pop()))\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Population\");\n\n  var legend = g.selectAll(\".legend\")\n    .data(data.columns.slice(1).reverse())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; })\n      .style(\"font\", \"10px sans-serif\");\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .attr(\"fill\", z);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n});\n\nfunction type(d, i, columns) {\n  for (i = 1, t = 0; i < columns.length; ++i) t += d[columns[i]] = +d[columns[i]];\n  d.total = t;\n  return d;\n}\n\n</script>", "description": "Stacked Bar Chart", "created_at": "2016-10-01T01:02:27Z", "updated_at": "2016-10-01T01:02:27Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.stack", "d3.csv", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This stacked bar chart is constructed from a CSV file storing the populations of different states by age group. The chart employs [conventional margins](/mbostock/3019563) and a number of D3 features:\n\n* [d3-dsv](https://github.com/d3/d3-dsv) - load and parse data\n* [d3-scale](https://github.com/d3/d3-scale) - *x*- and *y*-position, and color encoding\n* [d3-format](https://github.com/d3/d3-format) - SI prefix formatting (e.g., \u201c10M\u201d for 10,000,000)\n* [d3-array](https://github.com/d3/d3-array) - compute simple statistics (e.g., max)\n* [d3-axis](https://github.com/d3/d3-axis) - display axes\n* [d3-shape](https://github.com/d3/d3-shape) - computed stacked positions\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3886208'>Stacked Bar Chart</a>", "uid": "john-guerra_95c69d114b7d59f934c282fc643d2234"}, {"code": "<script>\n    \n    \nd3.csv('trends.csv', function(err, d){\n  if(err) console.log(err);\n  //console.log(d)\n  \n  var nested_data = d3.nest()\n\t\t.key(function(d) { return d.date; })\n\t\t.entries(d);\n  \n  //console.log(nested_data);\n  \n  var mqpdata = nested_data.map(function(d){\n    var obj = {\n      month: new Date(d.key, 0, 1)\n    }\n    \n    d.values.forEach(function(v){\n      obj[v.key] = +v.value;\n    })\n    \n    return obj;\n  })\n  \n  buildStreamGraph(mqpdata);\n  \n})\n\n\nfunction buildStreamGraph(mqpdata) {\nvar data = mqpdata;\n  \n\nvar stack = d3.stack()\n    .keys([\"AE\", \"AREN\", \"BBT\", \"BC\", \"BME\", \"CE\", \"CH\", \"CM\", \"CS\", \"ECE\", \"EV\", \"HU\", \"ID\", \"IE\", \"IMGD\", \"MA\", \"ME\", \"MG\", \"PH\", \"RBE\", \"SSPS\"])\n    .order(d3.stackOrderNone)\n    .offset(d3.stackOffsetWiggle);\n\nvar series = stack(data);\n\nvar width = 800,\n    height = 500;\n\nvar x = d3.scaleTime()\n    .domain(d3.extent(data, function(d){ return d.month; }))\n    .range([100, width]);\n\n// setup axis\nvar xAxis = d3.axisBottom(x);\n\nvar y = d3.scaleLinear()\n    .domain([0, d3.max(series, function(layer) { return d3.max(layer, function(d){ return d[0] + d[1];}); })])\n    .range([height/2, -200]);\n\nvar color = d3.scaleLinear()\n    .range([\"#51D0D7\", \"#31B5BB\"]);\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20);\n\n\nvar area = d3.area()\n    .x(function(d) { console.info('in area function', d); return x(d.data.month); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); })\n    .curve(d3.curveBasis);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"path\")\n    .data(series)\n    .enter().append(\"path\")\n    .attr(\"d\", area)\n    .style(\"fill\", function() { return color(Math.random()); })\n    .on('mouseover', function(d){      \n      d3.select(this).style('fill',d3.rgb( d3.select(this).style(\"fill\") ).brighter());\n  \t\td3.select(\"#major\").text(d.key);\n    })\n    .on('mouseout', function(d){      \n      d3.select(this).style('fill', \n         d3.rgb( d3.select(this).style(\"fill\") ).darker());\n         d3.select(\"#major\").text(\"Mouse over\");\n})\n\nsvg.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + (height) + \")\")\n            .call(xAxis);  \n}\n  </script>", "description": "Streamgraph", "created_at": "2016-09-30T20:08:30Z", "updated_at": "2016-09-30T20:19:04Z", "api": ["d3.csv", "d3.nest", "d3.stack", "d3.scaleTime", "d3.extent", "d3.axisBottom", "d3.scaleLinear", "d3.max", "d3.scaleOrdinal", "d3.area", "d3.select", "d3.rgb"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/ivanempire/'>ivanempire</a>'s block: <a href='http://bl.ocks.org/ivanempire/0e4e400b7f56a59e59719c7b01bc2cd8'>Streamgraph</a>\n\nforked from <a href='http://bl.ocks.org/codementum/'>codementum</a>'s block: <a href='http://bl.ocks.org/codementum/c82471c137b3744ed8c28006fc1da41d'>Streamgraph</a>", "uid": "ivanempire_b6a1d0d2c5bc40a1e3f85b8980f189ef"}, {"code": "<script>\n    \n    \nd3.csv('trends.csv', function(err, d){\n  if(err) console.log(err);\n  //console.log(d)\n  \n  var nested_data = d3.nest()\n\t\t.key(function(d) { return d.date; })\n\t\t.entries(d);\n  \n  //console.log(nested_data);\n  \n  var mqpdata = nested_data.map(function(d){\n    var obj = {\n      month: new Date(d.key, 0, 1)\n    }\n    \n    d.values.forEach(function(v){\n      obj[v.key] = +v.value;\n    })\n    \n    return obj;\n  })\n  \n  console.log(mqpdata);\n  buildStreamGraph(mqpdata);\n  \n})\n\n\nfunction buildStreamGraph(mqpdata) {\n    \nvar data = [\n  {month: new Date(2015, 0, 1), apples: 3840, bananas: 1920, cherries: 960, dates: 400},\n  {month: new Date(2015, 1, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 2, 1), apples:  34, bananas:  60, cherries: 640, dates: 400},\n  {month: new Date(2015, 3, 1), apples:  320, bananas:  480, cherries: 640, dates: 400},\n  {month: new Date(2015, 4, 1), apples:  500, bananas:  23, cherries: 100, dates: 50},\n  {month: new Date(2015, 5, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 6, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 7, 1), apples: 320, bananas: 1000, cherries: 640, dates: 700},\n  {month: new Date(2015, 8, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 400},\n  {month: new Date(2015, 9, 1), apples: 34, bananas: 1000, cherries: 640, dates: 1000},\n  {month: new Date(2015, 10, 1), apples: 3840, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 11, 1), apples: 1200, bananas: 480, cherries: 100, dates: 2000},\n];\n  \n  console.log(data)\n  \ndata = mqpdata;\n  \n\nvar stack = d3.stack()\n    .keys([\"AE\", \"AREN\", \"BBT\", \"BC\", \"BME\", \"CE\", \"CH\", \"CM\", \"CS\", \"ECE\", \"EV\", \"HU\", \"ID\", \"IE\", \"IMGD\", \"MA\", \"ME\", \"MG\", \"PH\", \"RBE\", \"SSPS\"])\n    .order(d3.stackOrderNone)\n    .offset(d3.stackOffsetWiggle);\n\nvar series = stack(data);\n\nvar width = 800,\n    height = 500;\n\nvar x = d3.scaleTime()\n    .domain(d3.extent(data, function(d){ return d.month; }))\n    .range([100, width]);\n\n// setup axis\nvar xAxis = d3.axisBottom(x);\n\nvar y = d3.scaleLinear()\n    .domain([0, d3.max(series, function(layer) { return d3.max(layer, function(d){ return d[0] + d[1];}); })])\n    .range([height/2, -200]);\n\nvar color = d3.scaleLinear()\n    .range([\"#51D0D7\", \"#31B5BB\"]);\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20);\n\n\nvar area = d3.area()\n    .x(function(d) { console.info('in area function', d); return x(d.data.month); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); })\n    .curve(d3.curveBasis);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"path\")\n    .data(series)\n    .enter().append(\"path\")\n    .attr(\"d\", area)\n    .style(\"fill\", function() { return color(Math.random()); })\n    .on('mouseover', function(d){      \n      d3.select(this).style('fill', \n         d3.rgb( d3.select(this).style(\"fill\") ).brighter() \n      )\n    })\n    .on('mouseout', function(d){      \n      d3.select(this).style('fill', \n         d3.rgb( d3.select(this).style(\"fill\") ).darker() \n      )\n    })\n\nsvg.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + (height) + \")\")\n            .call(xAxis);  \n}\n  </script>", "description": "Streamgraph", "created_at": "2016-09-30T19:24:29Z", "updated_at": "2016-09-30T20:08:42Z", "api": ["d3.csv", "d3.nest", "d3.stack", "d3.scaleTime", "d3.extent", "d3.axisBottom", "d3.scaleLinear", "d3.max", "d3.scaleOrdinal", "d3.area", "d3.select", "d3.rgb"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/ivanempire/'>ivanempire</a>'s block: <a href='http://bl.ocks.org/ivanempire/0e4e400b7f56a59e59719c7b01bc2cd8'>Streamgraph</a>", "uid": "codementum_c82471c137b3744ed8c28006fc1da41d"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n\n    svg.append(\"text\")\n      .text(\"Edit the code below to change me!\")\n      .attr(\"y\", 200)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 36)\n      .style(\"font-family\", \"monospace\")\n\n  </script>", "description": "Grades report", "created_at": "2016-09-30T19:21:08Z", "updated_at": "2016-09-30T19:21:08Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "john-guerra_bc102eb539b845cb378183cdbab9c73d"}, {"code": "<script>\nvar data = [\n  {month: new Date(2015, 0, 1), apples: 3840, bananas: 1920, cherries: 960, dates: 400},\n  {month: new Date(2015, 1, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 2, 1), apples:  34, bananas:  60, cherries: 640, dates: 400},\n  {month: new Date(2015, 3, 1), apples:  320, bananas:  480, cherries: 640, dates: 400},\n  {month: new Date(2015, 4, 1), apples:  500, bananas:  23, cherries: 100, dates: 50},\n  {month: new Date(2015, 5, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 6, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 7, 1), apples: 320, bananas: 1000, cherries: 640, dates: 700},\n  {month: new Date(2015, 8, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 400},\n  {month: new Date(2015, 9, 1), apples: 34, bananas: 1000, cherries: 640, dates: 1000},\n  {month: new Date(2015, 10, 1), apples: 3840, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 11, 1), apples: 1200, bananas: 480, cherries: 100, dates: 2000},\n];\n\nvar stack = d3.stack()\n    .keys([\"apples\", \"bananas\", \"cherries\", \"dates\"])\n    .order(d3.stackOrderNone)\n    .offset(d3.stackOffsetWiggle);\n\nvar series = stack(data);\n\nvar width = 600,\n    height = 500;\n\nvar x = d3.scaleTime()\n    .domain(d3.extent(data, function(d){ return d.month; }))\n    .range([0, width]);\n\n// setup axis\nvar xAxis = d3.axisBottom(x);\n\nvar y = d3.scaleLinear()\n    .domain([0, d3.max(series, function(layer) { return d3.max(layer, function(d){ return d[0] + d[1];}); })])\n    .range([height, 0]);\n\nvar color = d3.scaleLinear()\n    .range([\"#51D0D7\", \"#31B5BB\"]);\n\nvar area = d3.area()\n    .x(function(d) { console.info('in area function', d); return x(d.data.month); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); })\n    .curve(d3.curveBasis);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"path\")\n    .data(series)\n    .enter().append(\"path\")\n    .attr(\"d\", area)\n    .style(\"fill\", function() { return color(Math.random()); });\n\nsvg.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + (height) + \")\")\n            .call(xAxis);  \n  </script>", "description": "Streamgraph", "created_at": "2016-09-30T19:20:55Z", "updated_at": "2016-09-30T19:20:55Z", "api": ["d3.stack", "d3.scaleTime", "d3.extent", "d3.axisBottom", "d3.scaleLinear", "d3.max", "d3.area", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/ivanempire/'>ivanempire</a>'s block: <a href='http://bl.ocks.org/ivanempire/0e4e400b7f56a59e59719c7b01bc2cd8'>Streamgraph</a>", "uid": "codementum_2ee76715d716e59efab283ce915de740"}, {"code": "<script>\nvar data = [\n  {month: new Date(2015, 0, 1), apples: 3840, bananas: 1920, cherries: 960, dates: 400},\n  {month: new Date(2015, 1, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 2, 1), apples:  34, bananas:  60, cherries: 640, dates: 400},\n  {month: new Date(2015, 3, 1), apples:  320, bananas:  480, cherries: 640, dates: 400},\n  {month: new Date(2015, 4, 1), apples:  500, bananas:  23, cherries: 100, dates: 50},\n  {month: new Date(2015, 5, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 6, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 7, 1), apples: 320, bananas: 1000, cherries: 640, dates: 700},\n  {month: new Date(2015, 8, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 400},\n  {month: new Date(2015, 9, 1), apples: 34, bananas: 1000, cherries: 640, dates: 1000},\n  {month: new Date(2015, 10, 1), apples: 3840, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 11, 1), apples: 1200, bananas: 480, cherries: 100, dates: 2000},\n];\n\nvar stack = d3.stack()\n    .keys([\"apples\", \"bananas\", \"cherries\", \"dates\"])\n    .order(d3.stackOrderNone)\n    .offset(d3.stackOffsetWiggle);\n\nvar series = stack(data);\n\nvar width = 600,\n    height = 500;\n\nvar x = d3.scaleTime()\n    .domain(d3.extent(data, function(d){ return d.month; }))\n    .range([0, width]);\n\n// setup axis\nvar xAxis = d3.axisBottom(x);\n\nvar y = d3.scaleLinear()\n    .domain([0, d3.max(series, function(layer) { return d3.max(layer, function(d){ return d[0] + d[1];}); })])\n    .range([height, 0]);\n\nvar color = d3.scaleLinear()\n    .range([\"#51D0D7\", \"#31B5BB\"]);\n\nvar area = d3.area()\n    .x(function(d) { console.info('in area function', d); return x(d.data.month); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); })\n    .curve(d3.curveBasis);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"path\")\n    .data(series)\n    .enter().append(\"path\")\n    .attr(\"d\", area)\n    .style(\"fill\", function() { return color(Math.random()); });\n\nsvg.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + (height) + \")\")\n            .call(xAxis);  \n  </script>", "description": "Streamgraph", "created_at": "2016-09-30T19:20:39Z", "updated_at": "2016-09-30T19:20:39Z", "api": ["d3.stack", "d3.scaleTime", "d3.extent", "d3.axisBottom", "d3.scaleLinear", "d3.max", "d3.area", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/ivanempire/'>ivanempire</a>'s block: <a href='http://bl.ocks.org/ivanempire/0e4e400b7f56a59e59719c7b01bc2cd8'>Streamgraph</a>", "uid": "codementum_ae610a1e44e562afcaa327982629a37c"}, {"code": "<script>\nvar data = [\n  {month: new Date(2015, 0, 1), apples: 3840, bananas: 1920, cherries: 960, dates: 400},\n  {month: new Date(2015, 1, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 2, 1), apples:  34, bananas:  60, cherries: 640, dates: 400},\n  {month: new Date(2015, 3, 1), apples:  320, bananas:  480, cherries: 640, dates: 400},\n  {month: new Date(2015, 4, 1), apples:  500, bananas:  23, cherries: 100, dates: 50},\n  {month: new Date(2015, 5, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 6, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 7, 1), apples: 320, bananas: 1000, cherries: 640, dates: 700},\n  {month: new Date(2015, 8, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 400},\n  {month: new Date(2015, 9, 1), apples: 34, bananas: 1000, cherries: 640, dates: 1000},\n  {month: new Date(2015, 10, 1), apples: 3840, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 11, 1), apples: 1200, bananas: 480, cherries: 100, dates: 2000},\n];\n\nvar stack = d3.stack()\n    .keys([\"apples\", \"bananas\", \"cherries\", \"dates\"])\n    .order(d3.stackOrderNone)\n    .offset(d3.stackOffsetWiggle);\n\nvar series = stack(data);\n\nvar width = 600,\n    height = 500;\n\nvar x = d3.scaleTime()\n    .domain(d3.extent(data, function(d){ return d.month; }))\n    .range([0, width]);\n\n// setup axis\nvar xAxis = d3.axisBottom(x);\n\nvar y = d3.scaleLinear()\n    .domain([0, d3.max(series, function(layer) { return d3.max(layer, function(d){ return d[0] + d[1];}); })])\n    .range([height, 0]);\n\nvar color = d3.scaleLinear()\n    .range([\"#51D0D7\", \"#31B5BB\"]);\n\nvar area = d3.area()\n    .x(function(d) { console.info('in area function', d); return x(d.data.month); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); })\n    .curve(d3.curveBasis);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"path\")\n    .data(series)\n    .enter().append(\"path\")\n    .attr(\"d\", area)\n    .style(\"fill\", function() { return color(Math.random()); });\n\nsvg.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + (height) + \")\")\n            .call(xAxis);  \n  </script>", "description": "Streamgraph", "created_at": "2016-09-30T19:12:43Z", "updated_at": "2016-09-30T19:24:15Z", "api": ["d3.stack", "d3.scaleTime", "d3.extent", "d3.axisBottom", "d3.scaleLinear", "d3.max", "d3.area", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "ivanempire_0e4e400b7f56a59e59719c7b01bc2cd8"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20);\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\nd3.json(\"miserables.json\", function(error, graph) {\n  if (error) throw error;\n\n  var link = svg.append(\"g\")\n      .attr(\"class\", \"links\")\n    .selectAll(\"line\")\n    .data(graph.links)\n    .enter().append(\"line\")\n      .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n  var node = svg.append(\"g\")\n      .attr(\"class\", \"nodes\")\n    .selectAll(\"circle\")\n    .data(graph.nodes)\n    .enter().append(\"circle\")\n      .attr(\"r\", 5)\n      .attr(\"fill\", function(d) { return color(d.group); })\n      .call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  node.append(\"title\")\n      .text(function(d) { return d.id; });\n\n  simulation\n      .nodes(graph.nodes)\n      .on(\"tick\", ticked);\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  function ticked() {\n    link\n        .attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\n    node\n        .attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; });\n  }\n});\n\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d.fx = d.x;\n  d.fy = d.y;\n}\n\nfunction dragged(d) {\n  d.fx = d3.event.x;\n  d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d.fx = null;\n  d.fy = null;\n}\n\n</script>", "description": "Force-Directed Graph", "created_at": "2016-09-29T19:12:03Z", "updated_at": "2016-09-29T19:12:03Z", "api": ["d3.select", "d3.scaleOrdinal", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceCenter", "d3.json", "d3.drag"], "readme": "This simple force-directed graph shows character co-occurence in *Les Mis\u00e9rables*. A physical simulation of charged particles and springs places related characters in closer proximity, while unrelated characters are farther apart. Layout algorithm inspired by [Tim Dwyer](http://www.csse.monash.edu.au/~tdwyer/) and [Thomas Jakobsen](http://web.archive.org/web/20080410171619/http://www.teknikus.dk/tj/gdc2001.htm). Data based on character coappearence in Victor Hugo's *Les Mis\u00e9rables*, compiled by [Donald Knuth](http://www-cs-faculty.stanford.edu/~uno/sgb.html).\n\nCompare this display to a force layout with [curved links](/mbostock/4600693), a force layout with [fisheye distortion](http://bost.ocks.org/mike/fisheye/) and a [matrix diagram](http://bost.ocks.org/mike/miserables/).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4062045'>Force-Directed Graph</a>", "uid": "riyazshaikh_2a2ad9a6eed7f21c66b10f11155d9bac"}, {"code": "<script>\n\n\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 80, bottom: 40, left: 50},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar parseTime = d3.timeParse(\"%x\"),\n    bisectDate = d3.bisector(function(d) { return d.date; }).left,\n    toolTime = d3.timeFormat(\"%B %d, \" + \"20\" + \"%y\"),\n    abbreviateNum = d3.format('.2s');\n\nvar xAxisTime = d3.timeFormat(\"%b\");\n\nvar x0AxisYear = d3.timeFormat(\"20\" + \"%y\")\n\nvar viridisColors = [\"#440154\",\"#440256\",\"#450457\",\"#450559\",\"#46075a\",\"#46085c\",\"#460a5d\",\"#460b5e\",\"#470d60\",\"#470e61\",\"#471063\",\"#471164\",\"#471365\",\"#481467\",\"#481668\",\"#481769\",\"#48186a\",\"#481a6c\",\"#481b6d\",\"#481c6e\",\"#481d6f\",\"#481f70\",\"#482071\",\"#482173\",\"#482374\",\"#482475\",\"#482576\",\"#482677\",\"#482878\",\"#482979\",\"#472a7a\",\"#472c7a\",\"#472d7b\",\"#472e7c\",\"#472f7d\",\"#46307e\",\"#46327e\",\"#46337f\",\"#463480\",\"#453581\",\"#453781\",\"#453882\",\"#443983\",\"#443a83\",\"#443b84\",\"#433d84\",\"#433e85\",\"#423f85\",\"#424086\",\"#424186\",\"#414287\",\"#414487\",\"#404588\",\"#404688\",\"#3f4788\",\"#3f4889\",\"#3e4989\",\"#3e4a89\",\"#3e4c8a\",\"#3d4d8a\",\"#3d4e8a\",\"#3c4f8a\",\"#3c508b\",\"#3b518b\",\"#3b528b\",\"#3a538b\",\"#3a548c\",\"#39558c\",\"#39568c\",\"#38588c\",\"#38598c\",\"#375a8c\",\"#375b8d\",\"#365c8d\",\"#365d8d\",\"#355e8d\",\"#355f8d\",\"#34608d\",\"#34618d\",\"#33628d\",\"#33638d\",\"#32648e\",\"#32658e\",\"#31668e\",\"#31678e\",\"#31688e\",\"#30698e\",\"#306a8e\",\"#2f6b8e\",\"#2f6c8e\",\"#2e6d8e\",\"#2e6e8e\",\"#2e6f8e\",\"#2d708e\",\"#2d718e\",\"#2c718e\",\"#2c728e\",\"#2c738e\",\"#2b748e\",\"#2b758e\",\"#2a768e\",\"#2a778e\",\"#2a788e\",\"#29798e\",\"#297a8e\",\"#297b8e\",\"#287c8e\",\"#287d8e\",\"#277e8e\",\"#277f8e\",\"#27808e\",\"#26818e\",\"#26828e\",\"#26828e\",\"#25838e\",\"#25848e\",\"#25858e\",\"#24868e\",\"#24878e\",\"#23888e\",\"#23898e\",\"#238a8d\",\"#228b8d\",\"#228c8d\",\"#228d8d\",\"#218e8d\",\"#218f8d\",\"#21908d\",\"#21918c\",\"#20928c\",\"#20928c\",\"#20938c\",\"#1f948c\",\"#1f958b\",\"#1f968b\",\"#1f978b\",\"#1f988b\",\"#1f998a\",\"#1f9a8a\",\"#1e9b8a\",\"#1e9c89\",\"#1e9d89\",\"#1f9e89\",\"#1f9f88\",\"#1fa088\",\"#1fa188\",\"#1fa187\",\"#1fa287\",\"#20a386\",\"#20a486\",\"#21a585\",\"#21a685\",\"#22a785\",\"#22a884\",\"#23a983\",\"#24aa83\",\"#25ab82\",\"#25ac82\",\"#26ad81\",\"#27ad81\",\"#28ae80\",\"#29af7f\",\"#2ab07f\",\"#2cb17e\",\"#2db27d\",\"#2eb37c\",\"#2fb47c\",\"#31b57b\",\"#32b67a\",\"#34b679\",\"#35b779\",\"#37b878\",\"#38b977\",\"#3aba76\",\"#3bbb75\",\"#3dbc74\",\"#3fbc73\",\"#40bd72\",\"#42be71\",\"#44bf70\",\"#46c06f\",\"#48c16e\",\"#4ac16d\",\"#4cc26c\",\"#4ec36b\",\"#50c46a\",\"#52c569\",\"#54c568\",\"#56c667\",\"#58c765\",\"#5ac864\",\"#5cc863\",\"#5ec962\",\"#60ca60\",\"#63cb5f\",\"#65cb5e\",\"#67cc5c\",\"#69cd5b\",\"#6ccd5a\",\"#6ece58\",\"#70cf57\",\"#73d056\",\"#75d054\",\"#77d153\",\"#7ad151\",\"#7cd250\",\"#7fd34e\",\"#81d34d\",\"#84d44b\",\"#86d549\",\"#89d548\",\"#8bd646\",\"#8ed645\",\"#90d743\",\"#93d741\",\"#95d840\",\"#98d83e\",\"#9bd93c\",\"#9dd93b\",\"#a0da39\",\"#a2da37\",\"#a5db36\",\"#a8db34\",\"#aadc32\",\"#addc30\",\"#b0dd2f\",\"#b2dd2d\",\"#b5de2b\",\"#b8de29\",\"#bade28\",\"#bddf26\",\"#c0df25\",\"#c2df23\",\"#c5e021\",\"#c8e020\",\"#cae11f\",\"#cde11d\",\"#d0e11c\",\"#d2e21b\",\"#d5e21a\",\"#d8e219\",\"#dae319\",\"#dde318\",\"#dfe318\",\"#e2e418\",\"#e5e419\",\"#e7e419\",\"#eae51a\",\"#ece51b\",\"#efe51c\",\"#f1e51d\",\"#f4e61e\",\"#f6e620\",\"#f8e621\",\"#fbe723\",\"#fde725\"]\nvar viridisThreeColors = [viridisColors[110],viridisColors[25],viridisColors[200]]\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal(viridisThreeColors);\n\nvar line = d3.line()\n    .curve(d3.curveBasis)\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.area); });\n\nd3.csv(\"data_updated.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  var bands = data.columns.slice(1).map(function(id) {\n    return {\n      id: id,\n      values: data.map(function(d) {\n        return {date: d.date, area: d[id]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(bands, function(c) { return d3.min(c.values, function(d) { return d.area; }); }),\n    d3.max(bands, function(c) { return d3.max(c.values, function(d) { return d.area; }); })\n  ]);\n\n  z.domain(bands.map(function(c) { return c.id; }));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x months\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).tickFormat(xAxisTime).tickSizeOuter(0).tickPadding(10).ticks(d3.timeMonth));\n\n  g.append('g')\n      .attr('class', 'axis axis--x years')\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).tickFormat(x0AxisYear).tickSizeOuter(0).tickPadding(25).ticks(d3.timeYear));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y).ticks(5, \"s\").tickSizeOuter(0).tickPadding(5))\n    .append(\"text\")\n      // .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"x\", 92)\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"0.71em\")\n      .attr(\"fill\", \"#3d3d3d\")\n      .text(\"Area in square kilometers\");\n\n  // g.append(\"g\")\n  //     .attr(\"class\", \"axis axis--y\")\n  //     .attr(\"transform\", \"translate( \" + (width + 20) + \", 0 )\")\n  //     .call(d3.axisRight(y).ticks(5, \"s\").tickSizeOuter(0).tickPadding(5));\n\n  var band = g.selectAll(\".band\")\n    .data(bands)\n    .enter().append(\"g\")\n      .attr(\"class\", \"band\");\n\n  band.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) {  console.log(d.values[1]); return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  band.append(\"text\")\n      .attr('class', 'bands')\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + (x(d.value.date) - 10) + \",\" + (y(d.value.area) - 8) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      // .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });\n\n  //set your focus circle and make sure it's invisible\n  var focus = band.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .style(\"display\", \"none\");\n\n  focus.append('line')\n      .attr('x1', 0)\n      .attr('y1', 0)\n      .attr('x2', 0)\n      .attr('y2', height)\n      .style('stroke-width', 1)\n      .style('stroke-dasharray', '1,6')\n      .style('stroke', '#12BCC2');\n\n  focus.append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dy\", \".35em\");\n\n  //Create area of focus for your mouse event\n  band.append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"mouseover\", function() { focus.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  //Mouse move function for watching over focus.\n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        y0 = y(d3.mouse(this)[0]),\n        i = bisectDate(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.date > d1.date - x0 ? d1 : d0,\n        thisBand = \"\";\n    focus.transition()\n      .duration(50)\n      .attr('transform', 'translate(' + x(x0) + ', 0)');\n    // focus.append('line')\n    // console.log(xx0);\n    // focus.select('text').text('Test');\n    d3.select(\"#tooltip\")\n      // .style(\"left\", width - 50 + \"px\")\n      // .style(\"top\", \"50px\")\n      .select('#date')\n      .text(\"Coverage for \" + toolTime(d.date));\n    d3.select(\"#tooltip\")\n      .select(\"#value\")\n      .html('<span id=\"box\" class=\"legendTitle\">Total</span><div id=\"boxSpacer\">' + abbreviateNum(d.Total) + '</div>    ' + '<span id=\"box\" class=\"legendRGB\">RGB</span><div id=\"boxSpacer\">' + abbreviateNum(d.RGB) + '</div>    ' + '<span id=\"box\" class=\"legendNIR\">NIR</span>' + abbreviateNum(d.NIR) + ' sq. km  ');\n    //Show the tooltip\n    d3.select(\"#tooltip\").classed(\"hidden\", false);\n  }\n\n  //Annotations\n  var annotations = g.append('g').attr('class','annotations');\n\n  // Doves //\n  // Flock 1D\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 97)\n      .attr('y1', y(5000000))\n      .attr('x2', 97)\n      .attr('y2', y(1000000))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 78)\n      .attr('y', y(6000000))\n      .text('Flock 1d');\n\n  // FLOCK 1E\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 184)\n      .attr('y1', y(8000000))\n      .attr('x2', 184)\n      .attr('y2', y(1000000))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 166)\n      .attr('y', y(9000000))\n      .text('Flock 1e');\n\n  // FLOCK 2B\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 303)\n      .attr('y1', y(13000000))\n      .attr('x2', 303)\n      .attr('y2', y(3000000))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 285)\n      .attr('y', y(14000000))\n      .text('Flock 2b');\n\n  //Flock 2e\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 408)\n      .attr('y1', y(20300000))\n      .attr('x2', 408)\n      .attr('y2', y(14500000))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 390)\n      .attr('y', y(21200000))\n      .text('Flock 2e');\n\n  //Flock 2e'\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 508)\n      .attr('y1', y(24900000))\n      .attr('x2', 508)\n      .attr('y2', y(19200000))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 490)\n      .attr('y', y(25800000))\n      .text(\"Flock 2e'\");\n\n  //Flock 2p\n  // annotations.append('g')\n  //   .append('line')\n  //     .attr('x1', 594)\n  //     .attr('y1', y(29000000))\n  //     .attr('x2', 594)\n  //     .attr('y2', y(13500000))\n  //     .attr(\"stroke-width\", 1)\n  //     .attr('stroke-dasharray', '1, 2')\n  //     .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 594)\n      .attr('y1', y(12500000))\n      .attr('x2', 594)\n      .attr('y2', y(29000000))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 576)\n      .attr('y', y(30000000))\n      .text('Flock 2p');\n\n  //Build 12 Deployment\n  // annotations.append('g')\n  //   .append('text')\n  //     .attr('x', 460)\n  //     .attr('y', y(30500000))\n  //     .text('Build 12 Dove Satellites Deployed');\n  // annotations.append('g')\n  //   .append('line')\n  //     .attr('x1', 533)\n  //     .attr('y1', y(1000000))\n  //     .attr('x2', 533)\n  //     .attr('y2', y(29000000))\n  //     .attr(\"stroke-width\", 1)\n  //     .attr('stroke-dasharray', '2, 2, 5')\n  //     .attr(\"stroke\", \"rgb(119,119,119)\");\n});\n\nfunction type(d, _, columns) {\n  d.date = parseTime(d.date);\n  for (var i = 1, n = columns.length, c; i < n; ++i) d[c = columns[i]] = +d[c];\n  return d;\n}\n\n\n</script>", "description": "Multi-Series Line Chart (Planet Coverage)", "created_at": "2016-09-29T18:17:15Z", "updated_at": "2016-10-06T17:46:19Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.timeFormat", "d3.format", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.line", "d3.csv", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.axisRight", "d3.mouse"], "readme": "**Planet Coverage**\n\nSimple multi series line chart looking at Planet's coverage of the Earth overtime.\n\n**Credits**\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>", "uid": "sadbumblebee_cf960bdddd53ae832d980f5c70c48e5c"}, {"code": "<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height,\n    tau = 2 * Math.PI;\n\nvar buildings = d3.range(10).map(function(i) {\n  return {\n    x: (-0.5 + Math.random()) * width * 0.8,\n    y: (-0.5 + Math.random()) * height * 0.8,\n  };\n});\n\nvar nodes = d3.range(400).map(function(i) {\n  return {\n    r: Math.random() * 8 + 3,\n    building: Math.floor(Math.random() * buildings.length)\n  };\n});\n\n  \n  function shape(alpha){\n   for (var i = 0, n = nodes.length, node, k = alpha * 0.1; i < n; ++i) {\n    node = nodes[i];\n     var dx = node.x - buildings[node.building].x,\n         dy = node.y - buildings[node.building].y;\n     node.vx -= dx * k;\n     node.vy -= dy * k;\n   }\n  }\n  \nvar simulation = d3.forceSimulation(nodes)\n    //.velocityDecay(0.2)\n    .force(\"shape\", shape)\n    .force(\"collide\", d3.forceCollide().radius(function(d) { return d.r + 0.5; }).iterations(2))\n    .on(\"tick\", ticked);\n\nvar color = d3.scaleOrdinal(d3.schemeCategory10);\n  \nfunction ticked() {\n  context.clearRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n\n  nodes.forEach(function(d,i) {\n    context.beginPath();\n    context.moveTo(d.x + d.r, d.y);\n    context.arc(d.x, d.y, d.r, 0, tau);\n    context.fillStyle = color(d.building);\n    context.fill();\n    context.strokeStyle = \"white\";\n    context.stroke();\n  });\n  \n  context.restore();\n}\n\n</script>", "description": "Force move 400 dots in 10 buildings", "created_at": "2016-09-29T14:10:47Z", "updated_at": "2016-10-02T13:11:49Z", "api": ["d3.range", "d3.forceSimulation", "d3.forceCollide", "d3.scaleOrdinal"], "readme": "This example uses d3.forceCollide to prevent circles from overlapping.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/31ce330646fa8bcb7289ff3b97aab3f5'>Collision Detection</a>\n\nSee also [Bounded Force Layout - very tightly packed](http://bl.ocks.org/Fil/30afeb463ce552414f64).\n\nforked from <a href='http://bl.ocks.org/Fil/'>Fil</a>'s block: <a href='http://bl.ocks.org/Fil/69f1d5f68099bf6350ed42aed0941e5c'>Collision Detection in a tight square</a>", "uid": "Fil_07f00f90524c4c2b99c944780c2f4e7c"}, {"code": "<script>\n\nvar width = 960,\n    height = 700,\n    radius = Math.min(width, height) / 2;\n\nvar x = d3.scale.linear()\n    .range([0, 2 * Math.PI]);\n\nvar y = d3.scale.linear()\n    .range([0, radius]);\n\nvar color = d3.scale.category20c();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height / 2 + 10) + \")\");\n\nvar partition = d3.layout.partition()\n    .value(function(d) { return d.size; });\n\nvar arc = d3.svg.arc()\n    .startAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, x(d.x))); })\n    .endAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))); })\n    .innerRadius(function(d) { return Math.max(0, y(d.y)); })\n    .outerRadius(function(d) { return Math.max(0, y(d.y + d.dy)); });\n\nd3.json(\"flare.json\", function(error, root) {\n  var g = svg.selectAll(\"g\")\n      .data(partition.nodes(root))\n    .enter().append(\"g\");\n\n  var path = g.append(\"path\")\n    .attr(\"d\", arc)\n    .style(\"fill\", function(d) { return color((d.children ? d : d.parent).name); })\n    .on(\"click\", click);\n\n  var text = g.append(\"text\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + computeTextRotation(d) + \")\"; })\n    .attr(\"x\", function(d) { return y(d.y); })\n    .attr(\"dx\", \"6\") // margin\n    .attr(\"dy\", \".35em\") // vertical-align\n    .text(function(d) { return d.name; });\n\n  function click(d) {\n    // fade out all text elements\n    text.transition().attr(\"opacity\", 0);\n\n    path.transition()\n      .duration(750)\n      .attrTween(\"d\", arcTween(d))\n      .each(\"end\", function(e, i) {\n          // check if the animated element's data e lies within the visible angle span given in d\n          if (e.x >= d.x && e.x < (d.x + d.dx)) {\n            // get a selection of the associated text element\n            var arcText = d3.select(this.parentNode).select(\"text\");\n            // fade in the text element and recalculate positions\n            arcText.transition().duration(750)\n              .attr(\"opacity\", 1)\n              .attr(\"transform\", function() { return \"rotate(\" + computeTextRotation(e) + \")\" })\n              .attr(\"x\", function(d) { return y(d.y); });\n          }\n      });\n  }\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n// Interpolate the scales!\nfunction arcTween(d) {\n  var xd = d3.interpolate(x.domain(), [d.x, d.x + d.dx]),\n      yd = d3.interpolate(y.domain(), [d.y, 1]),\n      yr = d3.interpolate(y.range(), [d.y ? 20 : 0, radius]);\n  return function(d, i) {\n    return i\n        ? function(t) { return arc(d); }\n        : function(t) { x.domain(xd(t)); y.domain(yd(t)).range(yr(t)); return arc(d); };\n  };\n}\n\nfunction computeTextRotation(d) {\n  return (x(d.x + d.dx / 2) - Math.PI / 2) / Math.PI * 180;\n}\n\n</script>", "description": "Zoomable Sunburst with Labels", "created_at": "2016-09-29T07:40:08Z", "updated_at": "2016-09-29T07:40:09Z", "api": ["d3.scale.linear", "d3.scale.category20c", "d3.select", "d3.layout.partition", "d3.svg.arc", "d3.json", "d3.interpolate"], "readme": "Zoomable Sunburst with Labels\n\nforked from <a href='http://bl.ocks.org/metmajer/'>metmajer</a>'s block: <a href='http://bl.ocks.org/metmajer/5480307'>Zoomable Sunburst with Labels</a>", "uid": "matt1306_5ef518ec9d7153f9624e46c7ca97b77d"}, {"code": "<script>\n\n// From http://mkweb.bcgsc.ca/circos/guide/tables/\nvar matrix = [\n  [11975,  5871, 8916, 2868],\n  [ 1951, 10048, 2060, 6171],\n  [ 8010, 16145, 8090, 8045],\n  [ 1013,   990,  940, 6907]\n];\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    outerRadius = Math.min(width, height) * 0.5 - 40,\n    innerRadius = outerRadius - 30;\n\nvar formatValue = d3.formatPrefix(\",.0\", 1e3);\n\nvar chord = d3.chord()\n    .padAngle(0.05)\n    .sortSubgroups(d3.descending);\n\nvar arc = d3.arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\nvar ribbon = d3.ribbon()\n    .radius(innerRadius);\n\nvar color = d3.scaleOrdinal()\n    .domain(d3.range(4))\n    .range([\"#000000\", \"#FFDD89\", \"#957244\", \"#F26223\"]);\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\")\n    .datum(chord(matrix));\n\nvar group = g.append(\"g\")\n    .attr(\"class\", \"groups\")\n  .selectAll(\"g\")\n    .data(function(chords) { return chords.groups; })\n  .enter().append(\"g\");\n\ngroup.append(\"path\")\n    .style(\"fill\", function(d) { return color(d.index); })\n    .style(\"stroke\", function(d) { return d3.rgb(color(d.index)).darker(); })\n    .attr(\"d\", arc);\n\nvar groupTick = group.selectAll(\".group-tick\")\n    .data(function(d) { return groupTicks(d, 1e3); })\n  .enter().append(\"g\")\n    .attr(\"class\", \"group-tick\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d.angle * 180 / Math.PI - 90) + \") translate(\" + outerRadius + \",0)\"; });\n\ngroupTick.append(\"line\")\n    .attr(\"x2\", 6);\n\ngroupTick\n  .filter(function(d) { return d.value % 5e3 === 0; })\n  .append(\"text\")\n    .attr(\"x\", 8)\n    .attr(\"dy\", \".35em\")\n    .attr(\"transform\", function(d) { return d.angle > Math.PI ? \"rotate(180) translate(-16)\" : null; })\n    .style(\"text-anchor\", function(d) { return d.angle > Math.PI ? \"end\" : null; })\n    .text(function(d) { return formatValue(d.value); });\n\ng.append(\"g\")\n    .attr(\"class\", \"ribbons\")\n  .selectAll(\"path\")\n    .data(function(chords) { return chords; })\n  .enter().append(\"path\")\n    .attr(\"d\", ribbon)\n    .style(\"fill\", function(d) { return color(d.target.index); })\n    .style(\"stroke\", function(d) { return d3.rgb(color(d.target.index)).darker(); });\n\n// Returns an array of tick angles and values for a given group and step.\nfunction groupTicks(d, step) {\n  var k = (d.endAngle - d.startAngle) / d.value;\n  return d3.range(0, d.value, step).map(function(value) {\n    return {value: value, angle: value * k + d.startAngle};\n  });\n}\n\n</script>", "description": "Chord Diagram", "created_at": "2016-09-29T05:22:34Z", "updated_at": "2016-09-29T05:22:34Z", "api": ["d3.select", "d3.formatPrefix", "d3.chord", "d3.arc", "d3.ribbon", "d3.scaleOrdinal", "d3.range", "d3.rgb"], "readme": "[Chord diagrams](https://github.com/d3/d3-chord) show directed relationships among a group of entities. Layout inspired by [Martin Krzywinski](http://mkweb.bcgsc.ca/)'s beautiful work on [Circos](http://mkweb.bcgsc.ca/circos/).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4062006'>Chord Diagram</a>", "uid": "n1n9-jp_8e8bbbb12f61fb6d2fef3f3c7fa41382"}, {"code": "<script>\n    var projection = d3.geoAlbersUsa();\n    var path = d3.geoPath().projection(projection);\n    var svg = d3.select(\"#container\")\n    .append(\"svg\")\n    .attr(\"width\", 960)\n    .attr(\"height\", 500);\n\n    d3.json(\"congress.json\", function(error, us) {\n      svg.selectAll(\".region\")\n        .data(topojson.feature(us, us.objects.congress).features)\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"region\")\n        .attr(\"d\", path)\n        .style(\"fill\", function(d){\n           if(d.properties.PARTY_AFF==\"Democrat\") {\n              return \"#295899\";\n           } else {\n             return \"#b4362b\"; \n           }\n         })\n        .style(\"stroke\", \"#aaa\")\n        .style(\"stroke-width\", \".6px\");\n});\n\n  </script>", "description": "114th Congress (AlbersUSA)", "created_at": "2016-09-29T04:26:06Z", "updated_at": "2016-09-29T04:26:06Z", "api": ["d3.geoAlbersUsa", "d3.geoPath", "d3.select", "d3.json"], "readme": "Inspired by the [113th Congress map](http://bl.ocks.org/mbostock/4657115) and the [Congressional](http://bl.ocks.org/rveciana/fe6b452c853146e674dd6dd09c1cc6e3) map.\n\nData is from [Atlas-make/us-congress](https://github.com/bradoyler/atlas-make/tree/master/us-congress) Github repo\n", "uid": "bradoyler_e9d70c6b1ce76e1ba8b83d94cfd4296c"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n    padding = 6, // separation between same-color nodes\n    clusterPadding = 15, // separation between different-color nodes\n    maxRadius = 40,\n    x_browser = 20,\n    y_browser = 25;\n\nvar n = 20, // total number of nodes\n    m = 3; // number of distinct clusters\n\nvar color = d3.scale.category10()\n    .domain(d3.range(m));\n\n// The largest node for each cluster.\nvar clusters = new Array(m);\nvar tags = [\"cute\", \"sassy\", \"tidy\", \"grumpy\"];\nvar title = [\"lord\", \"lady\", \"sir\", \"madame\", \"monsieur\"];\nvar names = [\"fluffykins\", \"fuzzington\", \"furstonly\", \"floppybottom\"];\n//prevent default autocomplete helper text\n$(\"#search\").autocomplete({\n    source: tags,\n    messages: {\n        noResults: '',\n        results: function() {}\n    }\n});\n\nvar nodes = d3.range(n).map(function() {\n  var i = Math.floor(Math.random() * m),\n      r = Math.sqrt((i + 1) / m * -Math.log(Math.random())) * maxRadius,\n      d = {\n        link: \"https://placekitten.com/g/48/48\",\n        tag: tags[Math.floor(Math.random() * 3)],\n        hero: title[Math.floor(Math.random() * 4)] + \" \" + names[Math.floor(Math.random() * 4)],\n        cluster: i,\n        radius: r,\n        x: Math.cos(i / m * 2 * Math.PI) * 200 + width / 2 + Math.random(),\n        y: Math.sin(i / m * 2 * Math.PI) * 200 + height / 2 + Math.random()\n      };\n  if (!clusters[i] || (r > clusters[i].radius)) clusters[i] = d;\n  return d;\n});\n  console.log(JSON.stringify(nodes, null, 4));\n\nvar force = d3.layout.force()\n    .nodes(nodes)\n    .size([width, height])\n    .gravity(.02)\n    .charge(0)\n    .on(\"tick\", tick)\n    .start();\n\nvar svg = d3.select(\"#vis\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n    //pan and zoom behavior (competes with dragging nodes)\n  // .call(d3.behavior.zoom().on(\"zoom\", function () {\n  //   svg.attr(\"transform\", \"translate(\" + d3.event.translate + \")\" + \" scale(\" + d3.event.scale + \")\")\n  // }))\n  // .append(\"g\");\n\n// var node = svg.selectAll(\"circle\")\n//     .data(nodes)\n//   .enter().append(\"circle\")\n//     .style(\"fill\", function(d) { return color(d.cluster); })\n//     .call(force.drag);\n\nvar node = svg.selectAll(\"image\")\n    .data(nodes)\n    .enter().append(\"image\")\n    .attr(\"class\", function(d){return d.tag;})\n    .attr(\"xlink:href\",  \"http://placekitten.com/g/48/48\")\n    .attr(\"x\", function(d){ return d.x; })\n    .attr(\"y\", function(d){ return d.y; })\n    .attr(\"height\", 50)\n    .attr(\"width\", 50)\n    .call(force.drag);\n\n\nnode.transition()\n    .duration(750)\n    .delay(function(d, i) { return i * 5; })\n    .attrTween(\"r\", function(d) {\n      var i = d3.interpolate(0, d.radius);\n      return function(t) { return d.radius = i(t); };\n    });\n\n    // make the image grow a little on mouse over and add the text details on click\n      var setEvents = node\n              // Append hero text\n              .on( 'click', function (d) {\n                  d3.select(\"h1\").html(d.hero);\n                  d3.select(\"h2\").html(d.name);\n                  d3.select(\"h3\").html (\"Take me to \" + \"<a href='\" + d.link + \"' >\"  + d.hero + \" web page \"+ \"</a>\" );\n               })\n\n              .on( 'mouseenter', function() {\n                // select element in current context\n                d3.select( this )\n                  .transition()\n                  // .attr(\"x\", function(d) { return d.x-60;})\n                  // .attr(\"y\", function(d) { return d.y-60;})\n                  .attr(\"height\", 100)\n                  .attr(\"width\", 100);\n              })\n              // set back\n              .on( 'mouseleave', function() {\n                d3.select( this )\n                  .transition()\n                  // .attr(\"x\", function(d) { return d.x+25;})\n                  // .attr(\"y\", function(d) { return d.y+25;})\n                  .attr(\"height\", 50)\n                  .attr(\"width\", 50);\n              });\n\n      // Append hero name on roll over next to the node as well\n      node.append(\"text\")\n          .attr(\"class\", function(d){return d.tag;})\n          .attr(\"x\", x_browser)\n          .attr(\"y\", y_browser +15)\n          .attr(\"fill\", \"#130C0E\")\n          .text(function(d) { return d.hero; });\n\n      //search\n      var optArray = [];\n      for (var i = 0; i < node.length - 1; i++) {\n          optArray.push(node[i].tag);\n      }\n      optArray = optArray.sort();\n      $(function () {\n          $(\"#search\").autocomplete({\n              source: optArray\n          });\n      });\n      function searchNode() {\n        console.log(\"inside search\");\n          //find the node\n          var selectedVal = document.getElementById('search').value;\n          // var node = svg.selectAll(\".node\");\n          if (selectedVal == \"none\") {\n            console.log(\"inside none\");\n              node.style(\"stroke\", \"white\").style(\"stroke-width\", \"1\");\n          } else {\n            console.log(\"inside not none\");\n            console.log(\"node\");\n            console.log(node);\n              var selected = node.filter(function (d) {\n                console.log(\"data\");\n                console.log(d);\n                console.log(\"selectedVal\");\n                console.log(selectedVal);\n                  return d.tag !== selectedVal;\n              });\n              console.log(\"selected\");\n              console.log(selected);\n              selected.style(\"opacity\", \"0\");\n              // var link = svg.selectAll(\".link\")\n              // link.style(\"opacity\", \"0\");\n              d3.selectAll(\"image\").transition()\n                  .duration(15000)\n                  .style(\"opacity\", 1);\n          }\n      }\n\nfunction tick(e) {\n  node\n      .each(cluster(10 * e.alpha * e.alpha))\n      .each(collide(.5))\n      .attr(\"x\", function(d) { return d.x; })\n      .attr(\"y\", function(d) { return d.y; });\n}\n\n// Move d to be adjacent to the cluster node.\nfunction cluster(alpha) {\n  return function(d) {\n    var cluster = clusters[d.cluster];\n    if (cluster === d) return;\n    var x = d.x - cluster.x,\n        y = d.y - cluster.y,\n        l = Math.sqrt(x * x + y * y),\n        r = d.radius + cluster.radius;\n    if (l != r) {\n      l = (l - r) / l * alpha;\n      d.x -= x *= l;\n      d.y -= y *= l;\n      cluster.x += x;\n      cluster.y += y;\n    }\n  };\n}\n\n// Resolves collisions between d and all other circles.\nfunction collide(alpha) {\n  var quadtree = d3.geom.quadtree(nodes);\n  return function(d) {\n    var r = d.radius + maxRadius + Math.max(padding, clusterPadding),\n        nx1 = d.x - r,\n        nx2 = d.x + r,\n        ny1 = d.y - r,\n        ny2 = d.y + r;\n    quadtree.visit(function(quad, x1, y1, x2, y2) {\n      if (quad.point && (quad.point !== d)) {\n        var x = d.x - quad.point.x,\n            y = d.y - quad.point.y,\n            l = Math.sqrt(x * x + y * y),\n            r = d.radius + quad.point.radius + (d.cluster === quad.point.cluster ? padding : clusterPadding);\n        if (l < r) {\n          l = (l - r) / l * alpha;\n          d.x -= x *= l;\n          d.y -= y *= l;\n          quad.point.x += x;\n          quad.point.y += y;\n        }\n      }\n      return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n    });\n  };\n}\n\n</script>", "description": "Kittenpile", "created_at": "2016-09-28T23:31:31Z", "updated_at": "2016-09-28T23:31:39Z", "api": ["d3.scale.category10", "d3.range", "d3.layout.force", "d3.select", "d3.behavior.zoom", "d3.interpolate", "d3.selectAll", "d3.geom.quadtree"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nHelpful references:\n\nd3 | Force layout with images\nhttp://bl.ocks.org/eesur/be2abfb3155a38be4de4\n\nCluster Force Layout IV\nhttps://bl.ocks.org/mbostock/7882658\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/10169c6b43ddd04286c7f61502fd00af'>Kittenpile</a>", "uid": "cehsu_fa7324f633d7f99cf3d2c68e027ec1da"}, {"code": "<script>\n\nvar margin = {top: 20, right: 50, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar bisecttime = d3.bisector(function(d) { return d.time; }).left,\n    formatValue = d3.format(\",.2f\"),\n    displayValue = function(d) { return formatValue(d); };\n    \nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.time); })\n    .y(function(d) { return y(d.sentiment); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.time = +d.time;\n    d.sentiment = +d.sentiment;\n  });\n\n  data.sort(function(a, b) {\n    return a.time - b.time;\n  });\n  \n  x.domain([data[0].time, data[data.length - 1].time]);\n  y.domain(d3.extent(data, function(d) { return d.sentiment; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sentiment\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  var focus = svg.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .style(\"display\", \"none\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  focus.append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dy\", \".35em\");\n\n  svg.append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"mouseover\", function() { focus.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        i = bisecttime(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.time > d1.time - x0 ? d1 : d0;\n    focus.attr(\"transform\", \"translate(\" + x(d.time) + \",\" + y(d.sentiment) + \")\");\n    focus.select(\"text\").text(\"Sentiment Value: \" \n                              + displayValue(d.sentiment) \n                              + \"\\n Words: \"\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ d.words\n                             );\n  }\n});\n\n</script>", "description": "sentiment time-series mouseover", "created_at": "2016-09-28T23:01:22Z", "updated_at": "2016-09-28T23:04:25Z", "api": ["d3.bisector", "d3.format", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.mouse"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/lgoerl/'>lgoerl</a>'s block: <a href='http://bl.ocks.org/lgoerl/8cd5584d81953601ef1d90ba6a7821b6'>sentiment time-series mouseover</a>", "uid": "BBischof_75ed4879d155c31412f58840480ae1d6"}, {"code": "<script>\nvar diameter = 500, //max size of the bubbles\n    color    = d3.scale.category20b(); //color category\n\nvar bubble = d3.layout.pack()\n    .sort(null)\n    .size([diameter, diameter])\n    .padding(1.5);\n\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n    .attr(\"class\", \"bubble\");\n\nd3.csv(\"fruit.csv\", function(error, data){\n\n    //convert numerical values from strings to numbers\n    data = data.map(function(d){ d.value = +d[\"Count\"]; return d; });\n\n    //bubbles needs very specific format, convert data to this.\n    var nodes = bubble.nodes({children:data}).filter(function(d) { return !d.children; });\n\n    //setup the chart\n    var bubbles = svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,0)\")\n        .selectAll(\".bubble\")\n        .data(nodes)\n        .enter();\n\n    //create the bubbles\n    bubbles.append(\"circle\")\n        .attr(\"r\", function(d){ return d.r; })\n        .attr(\"cx\", function(d){ return d.x; })\n        .attr(\"cy\", function(d){ return d.y; })\n        .style(\"fill\", function(d) { return color(d.value); });\n\n    //format the text for each bubble\n    bubbles.append(\"text\")\n        .attr(\"x\", function(d){ return d.x; })\n        .attr(\"y\", function(d){ return d.y + 5; })\n        .attr(\"text-anchor\", \"middle\")\n        .text(function(d){ return d[\"Fruit\"]; })\n        .style({\n            \"fill\":\"white\", \n            \"font-family\":\"Helvetica Neue, Helvetica, Arial, san-serif\",\n            \"font-size\": \"12px\"\n        });\n})\n</script>", "description": "Bubble Chart", "created_at": "2016-09-28T22:20:39Z", "updated_at": "2016-09-28T22:22:34Z", "api": ["d3.scale.category20b", "d3.layout.pack", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "DarienLiang_cbcdffc45ac4e6edf5cac6f193dff5c6"}, {"code": "<script>\n\nvar margin = {top: 20, right: 50, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar bisecttime = d3.bisector(function(d) { return d.time; }).left,\n    formatValue = d3.format(\",.2f\"),\n    displayValue = function(d) { return formatValue(d); };\n    \nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n\t\t.interpolate(\"cardinal\")\n    .x(function(d) { return x(d.time); })\n    .y(function(d) { return y(d.sentiment); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.time = +d.time;\n    d.sentiment = +d.sentiment;\n  });\n\n  data.sort(function(a, b) {\n    return a.time - b.time;\n  });\n  \n  x.domain([data[0].time, data[data.length - 1].time]);\n  y.domain(d3.extent(data, function(d) { return d.sentiment; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sentiment\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  var focus = svg.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .style(\"display\", \"none\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  focus.append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dy\", \".35em\");\n\n  svg.append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"mouseover\", function() { focus.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        i = bisecttime(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.time > d1.time - x0 ? d1 : d0;\n    focus.attr(\"transform\", \"translate(\" + x(d.time) + \",\" + y(d.sentiment) + \")\");\n    focus.select(\"text\").text(\"Sentiment Value: \" \n                              + displayValue(d.sentiment) \n                              + \"\\n Topics: \"\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ d.topics\n                             );\n  }\n});\n\n</script>", "description": "sentiment time-series mouseover", "created_at": "2016-09-28T21:46:15Z", "updated_at": "2016-10-13T21:56:16Z", "api": ["d3.bisector", "d3.format", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.mouse"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "lgoerl_8cd5584d81953601ef1d90ba6a7821b6"}, {"code": "<script>\nvar width = 960,\n    height = 500;\n\nvar projection = d3.geoAlbersUsaTerritories();\nvar path = d3.geoPath()\n    .projection(projection);\n\nvar svg = d3.select(\"#container\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n    var t = d3.transition();\nd3.json(\"us_congressional_districts.json\", function(error, us) {\n  var us = topojson.feature(us, us.objects.us_congressional_districts);\n  svg.selectAll(\".region\")\n      .data(us.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"region\")\n      .attr(\"d\", path)\n      .style(\"fill\", function(d){\n        if(d.properties.PARTY_AFF==\"Democrat\")\n          return \"#4a86e8\";\n        else\n          return \"#e84a4a\";})\n      .style(\"stroke\", \"#000\")\n      .style(\"stroke-width\", \"0.5px\")\n      .on(\"mouseover\", function(d){\n        //Show the tooltip\n        var x = d3.event.pageX;\n        var y = d3.event.pageY - 40;\n\n        d3.select(\"#tooltip\")\n          .style(\"left\", x + \"px\")\n          .style(\"top\", y + \"px\")\n          .style(\"opacity\", 1)\n          .html( d.properties.STATE + \" dist: \" + d.properties.CONG_DIST + \"<br/>\" +d.properties.CONG_REP + \"<br/>\" + d.properties.PARTY_AFF );\n        })\n        .on(\"mouseout\", function(){\n          //Hide the tooltip\n          d3.select(\"#tooltip\")\n            .style(\"opacity\", 0);\n        });;\n\n  svg\n    .append(\"path\")\n      .style(\"fill\",\"none\")\n      .style(\"stroke\",\"#000\")\n      .style(\"stroke-dasharray\",\"5,5\")\n      .attr(\"d\", projection.getCompositionBorders());\n\n});\n\n</script>", "description": "Congressional representatives dataset", "created_at": "2016-09-28T20:27:02Z", "updated_at": "2016-09-29T08:08:08Z", "api": ["d3.geoAlbersUsaTerritories", "d3.geoPath", "d3.select", "d3.transition", "d3.json"], "readme": "Based on [this data](https://github.com/bradoyler/atlas-make/tree/master/us-congress), contains a [Shapefile](us_congressional_districts.zip) and two topojson with the US congressional Districts. \n\nThe *[atlas-make](https://github.com/bradoyler/atlas-make)* project has a better maintained version of this data.\n\nThe difference from the data is based on, is that the American Samoa, Guam and Northern Marianas are included from the [Natural Earth dataset](http://www.naturalearthdata.com/). The Congress Representative data is included too.\n\nget_areas.py is a script to calculate the area paoperties for the new objects. The name of the Congressional Representatives in the added territories has been taken from the Wikipedia.\n\nThe topojson has been calculated using the command:\n    topojson -o us_congressional_district.json cgd114p010g.shp -p\n    \nThe topojson data can be used with d3 and the [d3-composite-projections library](http://geoexamples.com/d3-composite-projections/), as seen in the example.\n", "uid": "rveciana_fe6b452c853146e674dd6dd09c1cc6e3"}, {"code": "<script>\n\nfunction rectWidth(word, value) {\n  return word.length * value\n}\n\nvalueScale = d3.scaleLinear().domain([1,40]).range([2,80])\n\nvar data = [{segment: -1.5, word: \"Trump\", value: 40, speaker: \"trump\"},\n{segment: -1.5, word: \"Holt\", value: 40, speaker: \"holt\"},\n{segment: -1.5, word: \"Clinton\", value: 40, speaker: \"clinton\"}]\nholt.documentTerms.terms.forEach(function (d) {\n  d.distributions.forEach(function (dist, i) {\n    if (dist !== 0 && d.term !== \"bar\" && dist > 3) {\n      data.push({ segment: i, word: d.term, value: valueScale(dist), speaker: \"holt\" })\n    }\n  })\n})\n\ntrump.documentTerms.terms.forEach(function (d) {\n  d.distributions.forEach(function (dist, i) {\n    if (dist !== 0 && d.term !== \"bar\" && dist > 3) {\n      data.push({ segment: i, word: d.term, value: valueScale(dist), speaker: \"trump\" })\n    }\n  })\n})\n\nclinton.documentTerms.terms.forEach(function (d) {\n  d.distributions.forEach(function (dist, i) {\n    if (dist !== 0 && d.term !== \"bar\" && dist > 3) {\n      data.push({ segment: i, word: d.term, value: valueScale(dist), speaker: \"clinton\" })\n    }\n  })\n})\n\nvar speakerHash = {\n  holt: \"#222127\",\n  trump: \"#d4324a\",\n  clinton: \"#6475bb\"\n}\n\nvar speakerColumn = {\n  holt: 1,\n  trump: 2,\n  clinton: 0\n}\n\nvar widthMod = 1\nvar heightMod = 0.5\n\nvar networkCenter = d3.forceCenter().x(400).y(480);\n\nvar forceX = d3\n//  .forceX(function (d) {return 250})\n  .forceX(function (d) {return speakerColumn[d.speaker] * 200 + 50})\n    .strength(1)\n\n var forceY = d3.forceY(function (d) {return d.segment * 40})\n    .strength(1)\n\nvar collide = d3.bboxCollide(function (d,i) {\n    var width = rectWidth(d.word, d.value)\n    return [[-width / 2, -d.value * heightMod],[width / 2, d.value * heightMod]]\n  })\n  .strength(1)\n  .iterations(2)\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20b)\n\n  var force = d3.forceSimulation(data)\n    .velocityDecay(0.6)\n    .force(\"center\", networkCenter)\n    .force(\"x\", forceX)\n    .force(\"y\", forceY)\n    .force(\"collide\", collide)\n    .on(\"tick\", updateNetwork);\n\n  var nodeEnter = d3.select(\"svg.main\")\n  .append(\"g\")\n  .selectAll(\"g.node\")\n  .data(data)\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n\n  nodeEnter.append(\"text\")\n    .style(\"font-size\", function (d) {return d.value})\n    .style(\"text-anchor\", \"middle\")\n    .attr(\"y\", function (d) {return d.value / 4})\n    .style(\"fill\", function (d, i) {return speakerHash[d.speaker]})\n    .style(\"font-weight\", 600)\n    .text(function (d) {return d.word})\n\n  function updateNetwork() {\n    d3.select(\"svg.main\").selectAll(\"g.node\")\n      .attr(\"transform\", function (d) {return \"translate(\" + d.x + \",\" + d.y + \")\"})\n  }\n</script>", "description": "Word Trails", "created_at": "2016-09-28T16:50:15Z", "updated_at": "2016-09-28T16:50:41Z", "api": ["d3.scaleLinear", "d3.forceCenter", "d3.forceY", "d3.bboxCollide", "d3.scaleOrdinal", "d3.forceSimulation", "d3.select"], "readme": "[d3-bboxCollide](https://github.com/emeeks/d3-bboxCollide) allows for rectangular collision detection. This means we can do word cloud-like visualizations with more rules and constraints. In this case, the word clouds are split into columns based on speaker and laid out down the y-axis based on the segment of the debate for the term density of that word.\n\nThe data comes from the first Presidential debate of 2016, processed using [Voyant Tools](http://voyant-tools.org) with custom stop words removed and then processed for term density into the 20 bins.", "uid": "emeeks_19a1d77fc6ad812faedb648218b7ad60"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n\n    svg.append('rect')\n                    .attr('x', 10)\n                    .attr('y', 20)\n                    .style('fill', '#593');\n    \n    svg.append(\"text\")\n      .text(\"Edit the code below to change me!\")\n      .attr(\"y\", 200)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 36)\n      .style(\"font-family\", \"monospace\")\n\n  </script>", "description": "fresh block", "created_at": "2016-09-28T11:06:12Z", "updated_at": "2016-09-28T11:06:12Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "skimlik_596ab625e10c488ed8078c7d74c8b95f"}, {"code": "<script>\n    /* things to do:\n       - graph (SVG?) of %age of mobile cars over time\n       - user-editable parameters\n       - wrap (either just L/R, or U/D as well)\n     */\n    \n    const EMPTY = 0, A = 1, B = 2;\t// A = L -> R, B = U -> D\n    const TIMEW = 400;\n    \n    // user-settable things\n    var width = 500, height = 400, \t// size of grid\n        perc = 40,\t\t\t\t\t\t\t\t\t// %age of cars\n        scale = 1;\t\t\t\t\t\t\t\t\t// scale factor (canvas is scale*w by scale*h)\t\n        \n    var grid, imgGrid, canvasw = width*scale, canvash = height*scale,\n        nCars, nMovable, historyMovable = [], lastNow, nSec;    \n    \n    // --- canvas one-time setup\n    \n    var canvas = d3.select(\"body\").append(\"canvas\")\n      .attr(\"width\", canvasw)\n      .attr(\"height\", canvash);\n\n    var ctx = canvas.node().getContext(\"2d\");\n    \n    var imgData = ctx.getImageData(0, 0, canvasw, canvash);\n    var data = imgData.data;\n    \n    // --- svg one-time setup\n        \n    var svg = d3.select(\"body\").append(\"svg\")\n    \t.attr(\"width\", TIMEW)\n      .attr(\"height\", 300);\n    \n    var  margin = {top: 20, right: 20, bottom: 30, left: 50},\n    \t\t  gwidth = svg.attr(\"width\") - margin.left - margin.right,\n     \t\tgheight = svg.attr(\"height\") - margin.top - margin.bottom,\n     \t\tg = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"),\n         x = d3.scaleLinear().range([0, gwidth]),\n     \t\ty = d3.scaleLinear().range([gheight, 0]).domain([0,100]);   \n     \n    var xAxis = g.append(\"g\")\n       .attr(\"class\", \"axis\")\n       .attr(\"transform\", \"translate(0,\" + gheight + \")\")\n       .call(d3.axisBottom(x));\n \n    var yAxis = g.append(\"g\")\n       .attr(\"class\", \"axis\")\n       .call(d3.axisLeft(y));\n    yAxis.append(\"text\")\n       .attr(\"transform\", \"rotate(-90)\")\n       .attr(\"y\", 6)\n       .attr(\"dy\", \"-3.5em\")\n       .attr(\"fill\", \"#000\")\n       .text(\"%age movable cars\");\n    var speedText = yAxis.append(\"text\")\n    \t .attr(\"y\", 6)\n       .attr(\"x\", 100)\n       .attr(\"fill\", \"#000\");\n    \n    var lineGen = d3.line()\n    \t.curve(d3.curveBasis)\n    \t.x(function(d, i) {\n        return x(i); })\n    \t.y(function(d, i) {\n        return y(d); });\n    \n    var lineKeys = [ 'A', 'B', 'total'],\n    \t\tline = g.selectAll('path')\n    \t.data(lineKeys);\n    \n    line = line.enter().append(\"path\")\n       .attr(\"class\", \"line\")\n    \t .merge(line);\n    console.log(line.data());\n    \n    line = g.selectAll('path');\n    console.log(line.data())\n \n    var updateHistory = function() {\n      x.domain([0, d3.max([gwidth, historyMovable.total.length])]);\n      xAxis.call(d3.axisBottom(x));\n      console.log(line.data());\n      line.attr(\"d\", function(which) {\n        return lineGen(historyMovable[which]);\n                       });\n    }\n    \n    var grid2img = function() {\n      grid.forEach(function(v, i) {\n        if (imgGrid[i] == v) { return; }\n        \n        var x = i%width, y = Math.floor(i/width),\n            xx = x*scale, yy = y*scale, \n            r = v == EMPTY ? 255 : v == A ? 255 : 0,\n            g = v == EMPTY ? 255 : 0,\n            b = v == EMPTY ? 255 : v == B ? 255 : 0,\n            dx, dy;\n        for (dx = 0; dx < scale; dx++) {\n          for (dy = 0; dy < scale; dy++) {\n            var j = ((yy+dy) * canvasw + (xx+dx))*4;\n            data[j+0] = r;\n            data[j+1] = g;\n            data[j+2] = b;\n            data[j+3] = 255; // alpha\n          }\n        }\n      });\n      \n      ctx.putImageData(imgData, 0, 0);\n      imgGrid = grid.slice();\n    }\n    \n    var resetSimulation = function() {\n      nCars = 0;\n      grid = d3.range(width * height).map(function() {\n        if (Math.floor(Math.random() * 100) > perc) {\n          return EMPTY;\n        } \n        nCars += 1;\n        return (Math.random() >= 0.5) ? A : B;\n      });\n      imgGrid = grid.slice();\n      \n      historyMovable = { A: [], B: [], total: [] };\n      \n      grid2img();\n      updateHistory();\n      \n      lastNow = performance.now();\n      nSec = 0;\n      \n      window.requestAnimationFrame(tick);\n    }\n    \n    var tickOne = function(which) {\n      var gridCopy = grid.slice();\n      gridCopy.forEach(function(v, i) {\n        if (v != which) { return; }\n        \n        var x = i%width, y = Math.floor(i/width), newx, newy, newi;\n        if (v == A) { // A cars go left-to-right\n          // TODO change following line if we wrap and flip\n          newx = (x == width-1) ? 0 : x+1;\n          newy = y;\n        } else if (v == B) {\n          newx = x;\n          newy = (y == height-1) ? 0 : y+1;\n        }\n        newi = newy*width + newx;\n        if (gridCopy[newi] == EMPTY) {\n          // move the car\n          grid[i] = EMPTY;\n          grid[newi] = v;\n          nMovable[which] += 1;\n        }\n      });\n    }\n    \n    var tick = function() {\n      nMovable = { A: 0, B: 0 };\n      tickOne(A);\n      tickOne(B);\n      \n      historyMovable.A.push(nMovable.A*100/nCars);\n      historyMovable.B.push(nMovable.B*100/nCars);\n      historyMovable.total.push((nMovable.A+nMovable.B)*100/nCars);\n      \n      grid2img();\n      updateHistory();\n      \n      nSec += 1;\n      var now = performance.now();\n      if (now > (lastNow + 1000)) {\n        speedText.text(\"\" + nSec + \" frames/sec\");\n        lastNow = now;\n        nSec = 0;\n      }\n      \n      if (nMovable.total > 0) {\n      \twindow.requestAnimationFrame(tick)  \n      //} else {\n      //  console.log('done')\n      //  setTimeout(resetSimulation, 5000)\n      }\n      \n    }\n    \n    resetSimulation()\n    \n    \n  </script>", "description": "Biham\u2013Middleton\u2013Levine traffic model", "created_at": "2016-09-28T10:29:01Z", "updated_at": "2016-09-30T08:35:05Z", "api": ["d3.select", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.line", "d3.max", "d3.range"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nDemo of [Biham\u2013Middleton\u2013Levine traffic model](https://en.wikipedia.org/wiki/Biham%E2%80%93Middleton%E2%80%93Levine_traffic_model)", "uid": "lookoutjames_c07f84aaf69de9f38503578217e05046"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\")\n    \t.append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n\n    svg.append(\"line\")\n    \t.attr('x1', 120)\n    \t.attr('y1', 55)\n    \t.attr('x2', 840)\n    \t.attr('y2', 55)\n    \t.attr('stroke', '#3E5')\n      .attr('stroke-width', 2);\n    \n    svg.append(\"text\")\n      .text(\"This is how we draw line!\")\n      .attr(\"y\", 50)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 24)\n      .style(\"font-family\", \"monospace\")\n\n    var matrix = [\n      [11975,  5871, 8916, 2868],\n      [ 1951, 10048, 2060, 6171],\n      [ 8010, 16145, 8090, 8045],\n      [ 1013,   990,  940, 6907]\n    ];\n\n    var tr = d3.select('body').append(\"table\").selectAll(\"tr\")\n        .data(matrix)\n      \t.enter()\n    \t\t.append(\"tr\");\n\n    var td = tr.selectAll(\"td\")\n        .data(function(d) { return d; })\n      \t.enter()\n    \t\t.append(\"td\")\n    \t\t.text(function(d) { return d; });\n  </script>", "description": "fresh block", "created_at": "2016-09-28T08:00:58Z", "updated_at": "2016-09-28T08:00:58Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "skimlik_20bc5d340153c03977c0b7bbe27a72b1"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n\n    svg.append(\"text\")\n      .text(\"Hello :O\")\n      .attr(\"y\", 200)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 36)\n      .style(\"font-family\", \"monospace\")\n\n  </script>", "description": "Bono!", "created_at": "2016-09-28T03:15:48Z", "updated_at": "2016-09-28T03:15:48Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "cis321_b395b990d020370584a58ac95a7bcccf"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#e54e25\", inside:\"#018040\",accidentally:\"#9a3a96\",lost:\"#2c3e50\",poor:\"#593718\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar  pC = pieChart(tF); // create the pie-chart.\n  var leg= legend(tF);  // create the legend.\t\n\tvar hG = histoGram(sF); // create the histogram.\n  \t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n  var status = 'none';\n  var pieCreated = 'no';\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){      \n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        \n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else if(status != name.method){\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n          p[i].style.fontWeight=\"normal\";\n        }else{\n          if(status != name.method ){\n          \t  \n          }\n          try {\n      \t\t\tdocument.getElementById(\"p_\"+name.method).remove();  \t\n\t\t\t\t\t}\n\t\t\t\t\tcatch(err) {}\n      \t\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n\n  \n  function action_hacked() {\n     if(status == 'hacked'){\n       return;\n     }\n   \n    window.alert(\"entra hacked: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'hacked';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'hacked';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n        startPie();\n     \n  }\n  \n    function action_inside() {\n     if(status == 'inside'){\n       return;\n     }\n    window.alert(\"entra inside: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'inside';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'inside';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n          startPie();\n   \n    }\n  \n    function action_lost() {\n     if(status == 'lost'){\n       return;\n     }\n    window.alert(\"entra lost\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'lost';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'lost';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n            startPie();\n  }\n  \n    function action_accidentally() {\n     if(status == 'accidentally'){\n       return;\n     }\n    window.alert(\"entra accidentally\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'accidentally';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'accidentally';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n       startPie();\n  }\n  \n  \n    function action_poor() {\n     if(status == 'poor'){\n       return;\n     }\n    window.alert(\"entra poor\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'poor';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'poor';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n      startPie();\n    }\n  \n  function startPie(){\n       if(pieCreated != 'yes'){\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    pieCreated='yes';\n    dashboard('#td_pie',freqData);\n         \n       }\n  }\n  \n  \n  \n  \n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches", "created_at": "2016-09-27T21:14:21Z", "updated_at": "2016-09-27T21:14:21Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/3845b2a1ebddd45ea0bd8dd0a360845a'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/42e11366b38e106c8ad071b011d41861'>World's Biggest Data Breaches</a>", "uid": "apolan_b450cdd26523642c1286a8f850a536b9"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#e54e25\", inside:\"#018040\",accidentally:\"#9a3a96\",lost:\"#2c3e50\",poor:\"#593718\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar  pC = pieChart(tF); // create the pie-chart.\n  var leg= legend(tF);  // create the legend.\t\n\tvar hG = histoGram(sF); // create the histogram.\n  \t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n  var status = 'none';\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){      \n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        \n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else if(status != name.method){\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n          p[i].style.fontWeight=\"normal\";\n        }else{\n          if(status != name.method ){\n          \t  \n          }\n          try {\n      \t\t\tdocument.getElementById(\"p_\"+name.method).remove();  \t\n\t\t\t\t\t}\n\t\t\t\t\tcatch(err) {}\n      \t\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n\n  \n  function action_hacked() {\n     if(status == 'hacked'){\n       return;\n     }\n   \n    window.alert(\"entra hacked: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'hacked';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'hacked';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n     \n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n    \n  }\n  \n    function action_inside() {\n     if(status == 'inside'){\n       return;\n     }\n    window.alert(\"entra inside: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'inside';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'inside';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n    \n   \n    }\n  \n    function action_lost() {\n     if(status == 'lost'){\n       return;\n     }\n    window.alert(\"entra lost\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'lost';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'lost';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n  }\n  \n    function action_accidentally() {\n     if(status == 'accidentally'){\n       return;\n     }\n    window.alert(\"entra accidentally\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'accidentally';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'accidentally';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n  }\n  \n  \n    function action_poor() {\n     if(status == 'poor'){\n       return;\n     }\n    window.alert(\"entra poor\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'poor';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'poor';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n    }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "fresh block", "created_at": "2016-09-27T20:53:24Z", "updated_at": "2016-09-27T20:53:24Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/3845b2a1ebddd45ea0bd8dd0a360845a'>fresh block</a>", "uid": "apolan_42e11366b38e106c8ad071b011d41861"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#e54e25\", inside:\"#018040\",accidentally:\"#9a3a96\",lost:\"#2c3e50\",poor:\"#593718\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar  pC = pieChart(tF); // create the pie-chart.\n  var leg= legend(tF);  // create the legend.\t\n\tvar hG = histoGram(sF); // create the histogram.\n  \t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n  var status = 'none';\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){      \n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        \n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else if(status != name.method){\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n          p[i].style.fontWeight=\"normal\";\n        }else{\n          if(status != name.method ){\n          \t  \n          }\n          try {\n      \t\t\tdocument.getElementById(\"p_\"+name.method).remove();  \t\n\t\t\t\t\t}\n\t\t\t\t\tcatch(err) {}\n      \t\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n\n  \n  function action_hacked() {\n     if(status == 'hacked'){\n       return;\n     }\n   \n    window.alert(\"entra hacked: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'hacked';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'hacked';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n     \n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n    \n  }\n  \n    function action_inside() {\n     if(status == 'inside'){\n       return;\n     }\n    window.alert(\"entra inside: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'inside';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'inside';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n    \n   \n    }\n  \n    function action_lost() {\n     if(status == 'lost'){\n       return;\n     }\n    window.alert(\"entra lost\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'lost';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'lost';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n  }\n  \n    function action_accidentally() {\n     if(status == 'accidentally'){\n       return;\n     }\n    window.alert(\"entra accidentally\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'accidentally';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'accidentally';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n  }\n  \n  \n    function action_poor() {\n     if(status == 'poor'){\n       return;\n     }\n    window.alert(\"entra poor\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'poor';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'poor';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n    }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "fresh block", "created_at": "2016-09-27T20:53:17Z", "updated_at": "2016-09-27T20:53:17Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "apolan_3845b2a1ebddd45ea0bd8dd0a360845a"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#e54e25\", inside:\"#018040\",accidentally:\"#9a3a96\",lost:\"#2c3e50\",poor:\"#593718\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n  var status = 'none';\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){      \n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        \n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else if(status != name.method){\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          if(status != name.method ){\n          \tp[i].style.fontWeight=\"normal\";  \n          }\n               try {\n      document.getElementById(\"p_\"+name.method).remove();  \t\n\t\t\t}\n\t\tcatch(err) {\n \t\t}\n      \t\t\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n\n  \n  function action_hacked() {\n     if(status == 'hacked'){\n       return;\n     }\n   \n    window.alert(\"entra hacked: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'hacked';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'hacked';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n     \n    var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){   \n        if(p[i].id == status+\"_style\"){ \n           p[i].style.fontWeight=\"normal\";\n        }\n      }\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n    \n  }\n  \n    function action_inside() {\n     if(status == 'inside'){\n       return;\n     }\n    window.alert(\"entra inside: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'inside';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'inside';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n    \n   \n    }\n  \n    function action_lost() {\n     if(status == 'lost'){\n       return;\n     }\n    window.alert(\"entra lost\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'lost';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'lost';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n  }\n  \n    function action_accidentally() {\n     if(status == 'accidentally'){\n       return;\n     }\n    window.alert(\"entra accidentally\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'accidentally';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'accidentally';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n  }\n  \n  \n    function action_poor() {\n     if(status == 'poor'){\n       return;\n     }\n    window.alert(\"entra poor\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'poor';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'poor';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n    }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:43:49Z", "updated_at": "2016-09-27T20:39:12Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/d333b5f5e38c55d4914df30bdcd7bdf9'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f544e6f2a795c4d080d1096b2811d874'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/e7b8bb30c2824dac837743397ac120e7'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/dd366a46fdf36a20c13d1b9feb4bf360'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8a3bca89ab69d0c7f18999c49cd07bb0'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/eefbf8a634c47a355133a1c9ef7626ec'>World's Biggest Data Breaches1</a>", "uid": "apolan_f5b1cc1c6a98bf5e00b9b4cb92bbf261"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:32:25Z", "updated_at": "2016-09-27T19:43:48Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/d333b5f5e38c55d4914df30bdcd7bdf9'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f544e6f2a795c4d080d1096b2811d874'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/e7b8bb30c2824dac837743397ac120e7'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/dd366a46fdf36a20c13d1b9feb4bf360'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8a3bca89ab69d0c7f18999c49cd07bb0'>World's Biggest Data Breaches1</a>", "uid": "apolan_eefbf8a634c47a355133a1c9ef7626ec"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:30:37Z", "updated_at": "2016-09-27T19:30:37Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/d333b5f5e38c55d4914df30bdcd7bdf9'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f544e6f2a795c4d080d1096b2811d874'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/e7b8bb30c2824dac837743397ac120e7'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/dd366a46fdf36a20c13d1b9feb4bf360'>World's Biggest Data Breaches1</a>", "uid": "apolan_8a3bca89ab69d0c7f18999c49cd07bb0"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:28:43Z", "updated_at": "2016-09-27T19:28:43Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/d333b5f5e38c55d4914df30bdcd7bdf9'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f544e6f2a795c4d080d1096b2811d874'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/e7b8bb30c2824dac837743397ac120e7'>World's Biggest Data Breaches1</a>", "uid": "apolan_dd366a46fdf36a20c13d1b9feb4bf360"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:27:41Z", "updated_at": "2016-09-27T19:27:42Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/d333b5f5e38c55d4914df30bdcd7bdf9'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f544e6f2a795c4d080d1096b2811d874'>World's Biggest Data Breaches1</a>", "uid": "apolan_e7b8bb30c2824dac837743397ac120e7"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:26:56Z", "updated_at": "2016-09-27T19:26:56Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/d333b5f5e38c55d4914df30bdcd7bdf9'>World's Biggest Data Breaches1</a>", "uid": "apolan_f544e6f2a795c4d080d1096b2811d874"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:26:03Z", "updated_at": "2016-09-27T19:26:03Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>", "uid": "apolan_d333b5f5e38c55d4914df30bdcd7bdf9"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:25:15Z", "updated_at": "2016-09-27T19:25:15Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>", "uid": "apolan_16c60f32c2cbc187689546b0228cc9cf"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:22:19Z", "updated_at": "2016-09-27T19:22:19Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>", "uid": "apolan_ff1d445a5f258d15642c2db9a3a350d4"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:21:33Z", "updated_at": "2016-09-27T19:22:14Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>", "uid": "apolan_8e147b3a6df133f8382d62456fb5a195"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:10:59Z", "updated_at": "2016-09-27T19:10:59Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>", "uid": "apolan_ad60c13c34ec6b9f5e24704ed044670f"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:10:26Z", "updated_at": "2016-09-27T19:10:26Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>", "uid": "apolan_0d2b2dc43fbdc1d30c4fb1aab3c5ea0a"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:09:21Z", "updated_at": "2016-09-27T19:10:18Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>", "uid": "apolan_a2e4a101c3e40087233129ac543b8898"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:08:31Z", "updated_at": "2016-09-27T19:08:31Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>", "uid": "apolan_5894e4fe188966b8e48bd23e4b7b66fb"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:06:47Z", "updated_at": "2016-09-27T19:06:47Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>", "uid": "apolan_9ccd1766410275a223944f7782308669"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:06:02Z", "updated_at": "2016-09-27T19:06:02Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>", "uid": "apolan_1b05b8274792a54d35d9f78afe2c6e5b"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:04:42Z", "updated_at": "2016-09-27T19:04:42Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>", "uid": "apolan_82eb96fb0b4bc0c2561f9ae460125b17"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:00:23Z", "updated_at": "2016-09-27T19:04:15Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>", "uid": "apolan_f1d01b567b46dea43a5703963466781b"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n    \n    /**\n    var data = d3.csv(\"dataC.csv\", function(data) {\n  \t\tconsole.log(data[0]);\n\t\t});*/\n    \n    \n    /**\n    var data = psv.parse(\"dataC.csv\", function(data) {\n  \t\tconsole.log(data[0]);\n\t\t});\n    */\n    \n    /**\n    var data = d3.dsvFormat(\";\")\n    d3.request(\"dataT.csv\")\n    \t.mimeType(\"text/csv\")\n    \t.response(function(xhr) { return d3.dsvFormat(\";\").parse(xhr.responseText); })\n    \t.get(function(d){\n      \tconsole.log(data[0]);\n    \t});\n    */\n    /**\n    var data = d3.csv(\"dataC.csv\", function(d) {\n      return {\n    \t\tname : d.name,\n   \t\t\talternativename : d.alternativename,\n    \t\tnotes : d.notes\n  \t\t};\n\t\t}, function(data) {\n  \t\tconsole.log(data[0]);\n\t\t});\n\t\t*/      \n\n    \n    svg.append(\"text\")\n      .text(\"Edit the code below to change me!\")\n      .attr(\"y\", 200)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 36)\n      .style(\"font-family\", \"monospace\")\n\n  </script>", "description": "fresh block", "created_at": "2016-09-27T18:15:45Z", "updated_at": "2016-09-27T21:59:09Z", "api": ["d3.select", "d3.csv", "d3.dsvFormat", "d3.request"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jcamilort_0c9809f5e4ead2d924cd304b625cadb1"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 60, right: 350, bottom: 110, left: 100},\n    margin2 = {top: 60, right: 590, bottom: 100, left: 400},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    width2 = +svg.attr(\"width\") - margin2.right;\n\nvar formatValue = d3.format(\",d\");\nvar parseTime = d3.timeParse(\"%Y\");\n\nvar x = d3.scaleTime().range([0, width]), \n    y = d3.scaleLinear().range([0, height])\n    y2 = y.copy();\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  \nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    \n  \nvar context = svg.append(\"g\")\n    .attr(\"class\", \"context\")\n    .attr(\"transform\", \"translate(\" + 20 + \",\" + 58 + \")\");\n  \nd3.csv(\"Data_Breaches.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(data, function(d) { return d.Year; }));\n  y.domain(d3.extent(data, function(d) { return d.RecordsStolen; }));\n    y2.domain(d3.extent(data, function(d) { return d.RecordsStolen; }));\n\n  var simulation = d3.forceSimulation(data)\n      .force(\"x\", d3.forceX(function(d) { return x(d.Year); }).strength(1))\n      .force(\"y\", d3.forceY(function(d) { return y(d.RecordsStolen); }).strength(1))\n      .force(\"collide\", d3.forceCollide(4))\n      .stop();\n\n  for (var i = 0; i < 120; ++i) simulation.tick();\n\n  \n  var xAxis = d3.axisTop(x),\n    yAxis = d3.axisLeft(y).ticks(20, \".0s\");\n  \n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .call(xAxis);\n\nfocus.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(yAxis);\n  \n  var cell = g.append(\"g\")\n      .attr(\"class\", \"cells\")\n    .selectAll(\"g\").data(d3.voronoi()\n        .extent([[-margin.left, -margin.top], [width + margin.right, height + margin.top]])\n        .x(function(d) { return d.x; })\n        .y(function(d) { return d.y; })\n      .polygons(data)).enter().append(\"g\");\n\n  var div = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n  // set the colour scale\n  var color = d3.scaleOrdinal(d3.schemeCategory20);\n\n\n  cell.append(\"circle\")\n    .attr('class', 'dot')\n    .attr(\"r\", 3)\n    .attr(\"cx\", function(d) { return d.data.x; })\n    .attr(\"cy\", function(d) { return d.data.y; })\n\t\t.style(\"fill\", function(d) { return color(d.data.MethodOfLeak); });\n\tcell.on(\"mouseover\", function(d) {\n    div.transition()\n      .duration(400)\n      .style(\"background-color\", color(d.data.MethodOfLeak) )\n      .style(\"opacity\", .8);\n\t\tdiv.html(\n        '<a href= \"'+d.data.Source+'\" target=\"_blank\">' + //with a link\n        d.data.Entity +\n        \"</a>\" +\n        \"<br/>Records: <b>\"  + numberWithCommas(d.data.RecordsStolen)+\n        \"</b><br/>Method Of Leak: <b>\"  + d.data.MethodOfLeak +\"</b>\")     \n        .style(\"left\", (d3.event.pageX+10) + \"px\")             \n        .style(\"top\", (d3.event.pageY - 28) + \"px\");\n       }); \n  \n  // draw legend\n  var legend = svg.append(\"g\")\n    .attr(\"class\", \"legend\")\n    .attr(\"transform\", \"translate(120,\"+height/2+\")\");\n  var legendItem = legend.selectAll(\".legendItem\")\n      .data(color.domain())\n      .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(220,\" + i * 20 + \")\"; });\n\n  // draw legend colored rectangles\n  legendItem.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  // draw legendItem text\n  legendItem.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d;})\n\n});\n\n\n     \nfocus.append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 0 - margin.left)\n      .attr(\"x\",0 - (height / 2))\n      .attr(\"dy\", \"1em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Records Stolen\");  \n  \nsvg.append(\"text\")             \n      .attr(\"transform\",\n            \"translate(\" + ((width + margin.left)/2) + \" ,\" + 30 + \")\")\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Year\");\n\nfunction type(d) {\n  d.Year = parseTime(d.Year);\n  if (!d.RecordsStolen) return;\n  d.RecordsStolen = +d.RecordsStolen;\n  return d;\n}  \n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n\n</script>", "description": "Data Breaches Force", "created_at": "2016-09-27T05:23:26Z", "updated_at": "2016-10-05T01:02:23Z", "api": ["d3.select", "d3.format", "d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.csv", "d3.extent", "d3.forceSimulation", "d3.forceX", "d3.forceY", "d3.forceCollide", "d3.axisTop", "d3.axisLeft", "d3.voronoi", "d3.scaleOrdinal"], "readme": "A static beeswarm plot implemented using [d3-force](https://github.com/d3/d3-force)\u2019s [collision constraint](https://github.com/d3/d3-force#collision). A Voronoi overlay improves hover interaction.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6526445e2b44303eebf21da3b6627320'>Beeswarm</a>\n\nAdded new Data, Legend, Colors Tittle ", "uid": "davidgutierrez_4bb1ae1e5c71f8c8112b6782c62c528f"}, {"code": "<script>\n  var start = Date.now();\n  var svg = d3.select('svg');\n  var cyclerColors = ['hsl(273, 100%, 50%)', 'hsl(212, 100%, 50%)', 'hsl(127, 100%, 50%)', 'hsl(52, 100%, 50%)', 'hsl(35, 100%, 50%)', 'hsl(341, 100%, 50%)'];\n  var cyx = 0;\n  var cyLen = cyclerColors.length;\n  var cyclers = d3.selectAll('.cycler');\n  var points = [[500.948995,905.346405], [395.340687,799.738097], [409.437025,773.544805], [417.43529,743.583227], [417.43529,711.753555], [417.43529,609.068457], [334.192571,525.825738], [231.507474,525.825738], [175,525.825738], [175,380], [231.507474,380], [414.729902,380], [563.261028,528.531126], [563.261028,711.753555], [563.261028,784.006278], [540.163333,850.864247], [500.948995,905.346405], [500.948995,905.276555], [440.721461,988.953248], [342.477178,1043.43726], [231.507474,1043.43726], [175,1043.43726], [175,897.61152], [231.507474,897.61152], [302.362898,897.61152], [363.961099,857.976633], [395.340687,799.668246], [500.948995,905.276555],[871.239524,876.842108], [881.607931,818.931422], [866.342126,758.316347], [827.595698,711.753555], [877.796722,651.425417], [888.581847,567.508324], [855.267199,496.446652], [821.95255,425.38498], [750.548548,379.999234], [672.065257,380], [438.744076,380], [438.744076,380], [496.156385,415.962562], [543.253253,466.20887], [575.429457,525.825738], [672.057966,525.825738], [692.246142,525.825738], [710.900786,536.596001], [720.994874,554.079475], [731.088963,571.562948], [731.088963,593.103476], [720.994874,610.586949], [710.900786,628.070422], [692.246142,638.840686], [672.057966,638.840685], [633.238095,638.840685], [871.239523,876.842113],[634.495842,638.840685], [871.475641,875.820485], [868.44033,893.290466], [863.075829,910.523553], [855.323111,927.060457], [822.008462,998.122129], [750.60446,1043.50788], [672.121169,1043.50711], [639.12732,1043.50711], [543.343182,947.722971], [555.269613,931.93619], [566.02272,915.214001], [575.485369,897.681371], [672.113878,897.681371], [692.302054,897.681371], [710.956698,886.911108], [721.050787,869.427634], [731.144875,851.944161], [731.144875,830.403633], [721.050787,812.92016], [710.956698,795.436687], [692.302054,784.666423], [672.113878,784.666424], [615.606404,784.666424], [624.739964,736.486894], [624.739964,687.020215], [615.606404,638.840685], [634.495842,638.840685]];\n  var ptLen = points.length;\n  var colors = ['hsl(341, 100%, 50%)', 'hsl(359, 100%, 50%)', 'hsl(18, 100%, 50%)', 'hsl(35, 100%, 50%)', 'hsl(52, 100%, 50%)', 'hsl(83, 100%, 50%)', 'hsl(127, 100%, 50%)', 'hsl(160, 100%, 50%)', 'hsl(190, 100%, 50%)', 'hsl(212, 100%, 50%)', 'hsl(227, 100%, 50%)', 'hsl(242, 100%, 50%)', 'hsl(259, 100%, 50%)', 'hsl(273, 100%, 50%)', 'hsl(296, 100%, 50%)'];\n  var cLen = colors.length;\n  var clx = 0;\n  var circles = [];\n  var stopCycling = false;\n\n  //console.log(cyclerColors.reverse());\n\n  function setCycleColors() {\n    cyclers.each(function() {\n      cyx = cyx < cyLen ? cyx : 0;\n      d3.select(this)\n        .attr('fill', cyclerColors[cyx])\n        .datum({'cyx': cyx});\n      cyx += 1;\n    });\n  }\n\n  setCycleColors();\n\n  function cycleColors() {\n    if(stopCycling) { return; }\n    cyclers.each(function(d) {\n      var idx = d.cyx + 1 < cyLen ? d.cyx + 1 : 0;\n      d3.select(this)\n        .attr('fill', cyclerColors[idx])\n        .datum({'cyx': idx});\n    });\n    setTimeout(cycleColors, 200);\n  }\n\n  cycleColors();\n\n  points.forEach(function(point) {\n    clx = clx < cLen ? clx : 0;\n    var circle = {};\n    circle.reqX = point[0];\n    circle.reqY = point[1];\n    circle.fill = colors[clx];\n    circles.push(circle);\n    clx += 1;\n  });\n\n  var sim = d3.forceSimulation()\n        .force('charge', d3.forceManyBody().distanceMax(50))\n        .force('center', d3.forceCenter( 525, 737 ))\n        .alphaDecay(0.06);\n\n  var circs = svg.selectAll('circle')\n        .data(circles)\n        .enter()\n        .append('circle')\n          .attr('r', 5)\n          .attr('fill', function(d) { return d.fill })\n          .attr('transform', 'translate(525,750)')\n          .attr('opacity', 1);\n\n  sim\n    .nodes(circles)\n    .on('tick', function() {\n      circs\n        .attr('transform', function(d) {\n          return 'translate(' + d.x + ',' + d.y + ')';\n        });\n    })\n    .on('end', function() {\n      var elapsed = Date.now() - start;\n      console.log('force end: ' + elapsed + 'ms');\n      circs.each(function(p, i) {\n        d3.select(this)\n          .transition()\n          .duration(300)\n            .attr('transform', function(d) {\n              return 'translate(' + d.reqX + ',' + d.reqY + ')';\n            })\n          .on('end', function () {\n            var elapsed = Date.now() - start;\n            if (i + 1 == cLen) {\n              console.log('move end: ' + elapsed + 'ms');\n              blowUpCircs();\n              appendPaths();\n            }\n          });\n      });\n    });\n\n  function blowUpCircs() {\n    var px = 0;\n    circs\n      .transition()\n      .delay(200)\n      .duration(700)\n      .attr('r', 30)\n      .attr('opacity', 0)\n      .on('end', function () {\n        var elapsed = Date.now() - start;\n        px += 1;\n        if (px == ptLen) {\n          console.log('blowup end: ' + elapsed + 'ms');\n        }\n      });\n  }\n\n  function appendPaths() {\n    var paths = [\n         { id: \"dee-top\", style: \"fill:url(#lg-dt)\", points: [[\"M500.948995\",\"905.346405\"], [\"L395.340687\",\"799.738097\"], [\"C409.437025\",\"773.544805\"], [\"417.43529\",\"743.583227\"], [\"417.43529\",\"711.753555\"], [\"C417.43529\",\"609.068457\"], [\"334.192571\",\"525.825738\"], [\"231.507474\",\"525.825738\"], [\"L175\",\"525.825738\"], [\"L175\",\"380\"], [\"L231.507474\",\"380\"], [\"C414.729902\",\"380\"], [\"563.261028\",\"528.531126\"], [\"563.261028\",\"711.753555\"], [\"C563.261028\",\"784.006278\"], [\"540.163333\",\"850.864247\"], [\"500.948995\",\"905.346405\"]] },\n         { id: \"dee-bottom\", style: \"fill:url(#lg-b)\", points: [[\"M500.948995\",\"905.276555\"], [\"C440.721461\",\"988.953248\"], [\"342.477178\",\"1043.43726\"], [\"231.507474\",\"1043.43726\"], [\"L175\",\"1043.43726\"], [\"L175\",\"897.61152\"], [\"L231.507474\",\"897.61152\"], [\"C302.362898\",\"897.61152\"], [\"363.961099\",\"857.976633\"], [\"395.340687\",\"799.668246\"], [\"L500.948995\",\"905.276555\"]] },\n         { id: \"three-top\", style: \"fill:url(#lg-3t)\", points: [[\"M871.239524\",\"876.842108\"], [\"C881.607931\",\"818.931422\"], [\"866.342126\",\"758.316347\"], [\"827.595698\",\"711.753555\"], [\"C877.796722\",\"651.425417\"], [\"888.581847\",\"567.508324\"], [\"855.267199\",\"496.446652\"], [\"C821.95255\",\"425.38498\"], [\"750.548548\",\"379.999234\"], [\"672.065257\",\"380\"], [\"L438.744076\",\"380\"], [\"L438.744076\",\"380\"], [\"C496.156385\",\"415.962562\"], [\"543.253253\",\"466.20887\"], [\"575.429457\",\"525.825738\"], [\"L672.057966\",\"525.825738\"], [\"C692.246142\",\"525.825738\"], [\"710.900786\",\"536.596001\"], [\"720.994874\",\"554.079475\"], [\"C731.088963\",\"571.562948\"], [\"731.088963\",\"593.103476\"], [\"720.994874\",\"610.586949\"], [\"C710.900786\",\"628.070422\"], [\"692.246142\",\"638.840686\"], [\"672.057966\",\"638.840685\"], [\"L633.238095\",\"638.840685\"], [\"L871.239523\",\"876.842113\"]] },\n         { id: \"three-mid\", style: \"fill:url(#lg-3m)\", points: [[\"M634.495842\",\"638.840685\"], [\"L871.475641\",\"875.820485\"], [\"C868.44033\",\"893.290466\"], [\"863.075829\",\"910.523553\"], [\"855.323111\",\"927.060457\"], [\"C822.008462\",\"998.122129\"], [\"750.60446\",\"1043.50788\"], [\"672.121169\",\"1043.50711\"], [\"L639.12732\",\"1043.50711\"], [\"L543.343182\",\"947.722971\"], [\"C555.269613\",\"931.93619\"], [\"566.02272\",\"915.214001\"], [\"575.485369\",\"897.681371\"], [\"L672.113878\",\"897.681371\"], [\"C692.302054\",\"897.681371\"], [\"710.956698\",\"886.911108\"], [\"721.050787\",\"869.427634\"], [\"C731.144875\",\"851.944161\"], [\"731.144875\",\"830.403633\"], [\"721.050787\",\"812.92016\"], [\"C710.956698\",\"795.436687\"], [\"692.302054\",\"784.666423\"], [\"672.113878\",\"784.666424\"], [\"L615.606404\",\"784.666424\"], [\"C624.739964\",\"736.486894\"], [\"624.739964\",\"687.020215\"], [\"615.606404\",\"638.840685\"], [\"L634.495842\",\"638.840685\"]] },\n         { id: \"three-bottom\", style: \"fill:url(#lg-b)\", points: [[\"M639.109699\",\"1043.50711\"], [\"L438.744076\",\"1043.50711\"], [\"C479.279866\",\"1018.11585\"], [\"514.673385\",\"985.604107\"], [\"543.303748\",\"947.701158\"], [\"L639.109699\",\"1043.50711\"]] }\n        ];\n    var pax = 0;\n    var paLen = paths.length;\n\n    paths.forEach(function(path) {\n      var d = '';\n      var logoEl;\n      path.points.forEach(function(point){\n        d += point[0] + ',' + point[1] + ' ';\n      });\n      d += ' Z';\n      logoEl = svg.append('path')\n        .attr('id', path.id)\n        .attr('style', path.style)\n        .attr('opacity', 0)\n        .attr('d', d);\n\n      logoEl\n        .transition()\n        .delay(600)\n        .duration(600)\n          .attr('opacity', 1)\n        .on('end', function() {\n          var elapsed = Date.now() - start;\n          pax += 1;\n          if (pax == paLen) {\n            console.log('logo end: ' + elapsed + 'ms');\n            stopCycling = true;\n          }\n        });\n    });\n  }\n</script>", "description": "D3 badge for viSFest", "created_at": "2016-09-27T04:55:13Z", "updated_at": "2016-09-28T07:14:19Z", "api": ["d3.select", "d3.selectAll", "d3.forceSimulation", "d3.forceManyBody", "d3.forceCenter"], "readme": "Badge for d3 viSFest unconf 2016\n\nuses forceSimulation and transitions.\n\ntweaked for [badgetron](http://badgetron.com) using [blockbuilder](http://blockbuilder.org)", "uid": "kenpenn_02163b2968906ad90857cdf681c0304b"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-26T19:29:30Z", "updated_at": "2016-09-27T19:00:10Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "apolan_9dd1ec5c7529a419db0336bb906fd192"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n\n    svg.append(\"text\")\n      .text(\"Edit the code below to change me!\")\n      .attr(\"y\", 200)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 36)\n      .style(\"font-family\", \"monospace\")\n\n  </script>", "description": "World's Biggest Data Breaches", "created_at": "2016-09-26T19:02:40Z", "updated_at": "2016-09-26T19:02:40Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "apolan_945f8b260c4e40ffea19cbae59062e05"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\nvar nodes = d3.range(20).map(function() { return {radius: Math.random() * 12 + 4}; }),\n    root = nodes[0],\n    color = d3.scale.category10();\n\nroot.radius = 0;\nroot.fixed = true;\n\nvar force = d3.layout.force()\n    .gravity(0.05)\n    .charge(function(d, i) { return i ? 0 : -2000; })\n    .nodes(nodes)\n    .size([width, height]);\n\nforce.start();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"circle\")\n    .data(nodes.slice(1))\n  .enter().append(\"circle\")\n    .attr(\"r\", function(d) { return d.radius; })\n    .style(\"fill\", function(d, i) { return color(i % 3); });\n\nforce.on(\"tick\", function(e) {\n//   var q = d3.geom.quadtree(nodes),\n//       i = 0,\n//       n = nodes.length;\n\n  // while (++i < n) q.visit(collide(nodes[i]));\n\n  svg.selectAll(\"circle\")\n      .attr(\"cx\", function(d) { return d.x; })\n      .attr(\"cy\", function(d) { return d.y; });\n});\n\nsvg.on(\"mousemove\", function() {\n  var p1 = d3.mouse(this);\n  root.px = p1[0];\n  root.py = p1[1];\n  force.resume();\n});\n\nfunction collide(node) {\n  var r = node.radius + 16,\n      nx1 = node.x - r,\n      nx2 = node.x + r,\n      ny1 = node.y - r,\n      ny2 = node.y + r;\n  return function(quad, x1, y1, x2, y2) {\n    if (quad.point && (quad.point !== node)) {\n      var x = node.x - quad.point.x,\n          y = node.y - quad.point.y,\n          l = Math.sqrt(x * x + y * y),\n          r = node.radius + quad.point.radius;\n      if (l < r) {\n        l = (l - r) / l * .5;\n        node.x -= x *= l;\n        node.y -= y *= l;\n        quad.point.x += x;\n        quad.point.y += y;\n      }\n    }\n    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n  };\n}\n\n</script>", "description": "Collision Detection", "created_at": "2016-09-26T15:35:23Z", "updated_at": "2016-09-26T15:35:23Z", "api": ["d3.range", "d3.scale.category10", "d3.layout.force", "d3.select", "d3.geom.quadtree", "d3.mouse"], "readme": "Mouseover to repel nodes. Adapted from my [talk on force layouts](http://vimeo.com/29458354). Compare to the [canvas version](/mbostock/3231307).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3231298'>Collision Detection</a>", "uid": "iansinnott_d25e6ebe9526b3cc0b82344e13727309"}, {"code": "<script>\nvar width = 360,\n    height = 360;\n\n// Config for the Radar chart\nvar config = {\n    w: width,\n    h: height,\n    maxValue: 100,\n    levels: 5,\n    ExtraWidthX: 300\n}\n\n//Call function to draw the Radar chart\nd3.json(\"data.json\", function(error, data) {\n    if (error) throw error;\n    RadarChart.draw(\"#chart\", data, config);\n});\n\nvar svg = d3.select('body')\n\t.selectAll('svg')\n\t.append('svg')\n\t.attr(\"width\", width)\n\t.attr(\"height\", height);\n</script>", "description": "Radar Chart D3 V4", "created_at": "2016-09-26T14:26:25Z", "updated_at": "2016-09-26T14:26:26Z", "api": ["d3.scaleOrdinal", "d3.format", "d3.select", "d3.json"], "readme": "A redesign of the radar chart function that was created by alangrafu, used in my blog on [Making the D3 Radar Chart look a bit better](http://www.visualcinnamon.com/2013/09/making-d3-radar-chart-look-bit-better.html)\n\nAn even newer version created 2 years later can be found [here](http://bl.ocks.org/nbremer/21746a9668ffdf6d8242)\n\nforked from <a href='http://bl.ocks.org/nbremer/'>nbremer</a>'s block: <a href='http://bl.ocks.org/nbremer/6506614'>D3.js - Radar Chart or Spider Chart - Adjusted from radar-chart-d3</a>\n\nforked from <a href='http://bl.ocks.org/alandunning/'>alandunning</a>'s block: <a href='http://bl.ocks.org/alandunning/4c36eb1abdb248de34c64f5672afd857'>Radar Chart D3 V4</a>", "uid": "Ananda90_7c0517b1b4d80c1ff44d2c092ab89ca8"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n  \nvar tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\nvar x = d3.scaleBand().rangeRound([0, width]).padding(0.1),\n    y = d3.scaleLinear().rangeRound([height, 0]);\n  \nvar colours = d3.scaleOrdinal()\n    .range([\"#6F257F\", \"#CA0D59\"]);\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"data.json\", function(error, data) {\n    if (error) throw error;\n\n    x.domain(data.map(function(d) { return d.area; }));\n    y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    g.append(\"g\")\n      \t.attr(\"class\", \"axis axis--y\")\n      \t.call(d3.axisLeft(y).ticks(5).tickFormat(function(d) { return parseInt(d / 1000) + \"K\"; }).tickSizeInner([-width]))\n      .append(\"text\")\n    \t\t.attr(\"class\", \"axis-title\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \"0.71em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(\"Average House Price - ()\");\n\n    g.selectAll(\".bar\")\n      \t.data(data)\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.area); })\n        .attr(\"y\", function(d) { return y(d.value); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function(d) { return height - y(d.value); })\n        .attr(\"fill\", function(d) { return colours(d.area); })\n        .on(\"mousemove\", function(d){\n            tooltip\n              .style(\"left\", d3.event.pageX - 50 + \"px\")\n              .style(\"top\", d3.event.pageY - 70 + \"px\")\n              .style(\"display\", \"inline-block\")\n      \t\t\t\t.html((d.area) + \"<br><span>\" + \"\" + (d.value) + \"</span>\");\n        })\n    \t\t.on(\"mouseout\", function(d){ tooltip.style(\"display\", \"none\");});\n    });\n</script>", "description": "Bar Chart with Tooltip with Tooltip D3 V4", "created_at": "2016-09-26T14:17:11Z", "updated_at": "2016-09-26T14:17:11Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.json", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This chart is based on <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>. \n\nit uses a json file storing area names and average house prices. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\nforked from <a href='http://bl.ocks.org/alandunning/'>alandunning</a>'s block: <a href='http://bl.ocks.org/alandunning/274bf248fd0f362d64674920e85c1eb7'>Bar Chart with Tooltip with Tooltip D3 V4</a>\n\nforked from <a href='http://bl.ocks.org/Ananda90/'>Ananda90</a>'s block: <a href='http://bl.ocks.org/Ananda90/d4e8bbacefa42f1bc74caf82f971eea4'>Bar Chart with Tooltip with Tooltip D3 V4</a>", "uid": "Ananda90_45cb6fc5500665cb3bddb12a4a1c9345"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n  \nvar tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\nvar x = d3.scaleBand().rangeRound([0, width]).padding(0.1),\n    y = d3.scaleLinear().rangeRound([height, 0]);\n  \nvar colours = d3.scaleOrdinal()\n    .range([\"#6F257F\", \"#CA0D59\"]);\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"data.json\", function(error, data) {\n    if (error) throw error;\n\n    x.domain(data.map(function(d) { return d.area; }));\n    y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    g.append(\"g\")\n      \t.attr(\"class\", \"axis axis--y\")\n      \t.call(d3.axisLeft(y).ticks(5).tickFormat(function(d) { return parseInt(d / 1000) + \"K\"; }).tickSizeInner([-width]))\n      .append(\"text\")\n    \t\t.attr(\"class\", \"axis-title\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \"0.71em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(\"Average House Price  ()\");\n\n    g.selectAll(\".bar\")\n      \t.data(data)\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.area); })\n        .attr(\"y\", function(d) { return y(d.value); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function(d) { return height - y(d.value); })\n        .attr(\"fill\", function(d) { return colours(d.area); })\n        .on(\"mousemove\", function(d){\n            tooltip\n              .style(\"left\", d3.event.pageX - 50 + \"px\")\n              .style(\"top\", d3.event.pageY - 70 + \"px\")\n              .style(\"display\", \"inline-block\")\n      \t\t\t\t.html((d.area) + \"<br><span>\" + \"\" + (d.value) + \"</span>\");\n        })\n    \t\t.on(\"mouseout\", function(d){ tooltip.style(\"display\", \"none\");});\n    });\n</script>", "description": "Bar Chart with Tooltip with Tooltip D3 V4", "created_at": "2016-09-26T14:03:06Z", "updated_at": "2016-09-26T14:21:45Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.json", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This chart is based on <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>. \n\nit uses a json file storing area names and average house prices. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\nforked from <a href='http://bl.ocks.org/alandunning/'>alandunning</a>'s block: <a href='http://bl.ocks.org/alandunning/274bf248fd0f362d64674920e85c1eb7'>Bar Chart with Tooltip with Tooltip D3 V4</a>", "uid": "Ananda90_d4e8bbacefa42f1bc74caf82f971eea4"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n\nvar parseTime = d3.timeParse(\"%Y\")\n    bisectDate = d3.bisector(function(d) { return d.year; }).left;\n\nvar x = d3.scaleTime().range([0, width]);\nvar y = d3.scaleLinear().range([height, 0]);\n\nvar line = d3.line()\n    .x(function(d) { return x(d.year); })\n    .y(function(d) { return y(d.value); });\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"data.json\", function(error, data) {\n    if (error) throw error;\n\n    data.forEach(function(d) {\n      d.year = parseTime(d.year);\n      d.value = +d.value;\n    });\n\n    x.domain(d3.extent(data, function(d) { return d.year; }));\n    y.domain([d3.min(data, function(d) { return d.value; }) / 1.005, d3.max(data, function(d) { return d.value; }) * 1.005]);\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--y\")\n        .call(d3.axisLeft(y).ticks(6).tickFormat(function(d) { return parseInt(d / 1000) + \"k\"; }))\n      .append(\"text\")\n        .attr(\"class\", \"axis-title\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .text(\"Population\");\n\n    g.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"line\")\n        .attr(\"d\", line);\n\n    var focus = g.append(\"g\")\n        .attr(\"class\", \"focus\")\n        .style(\"display\", \"none\");\n\n    focus.append(\"line\")\n        .attr(\"class\", \"x-hover-line hover-line\")\n        .attr(\"y1\", 0)\n        .attr(\"y2\", height);\n\n    focus.append(\"line\")\n        .attr(\"class\", \"y-hover-line hover-line\")\n        .attr(\"x1\", width)\n        .attr(\"x2\", width);\n\n    focus.append(\"circle\")\n        .attr(\"r\", 6);\n\n    focus.append(\"text\")\n        .attr(\"x\", 15)\n      \t.attr(\"dy\", \".31em\");\n\n    svg.append(\"rect\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .on(\"mouseover\", function() { focus.style(\"display\", null); })\n        .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n        .on(\"mousemove\", mousemove);\n\n    function mousemove() {\n      var x0 = x.invert(d3.mouse(this)[0]),\n          i = bisectDate(data, x0, 1),\n          d0 = data[i - 1],\n          d1 = data[i],\n          d = x0 - d0.year > d1.year - x0 ? d1 : d0;\n      focus.attr(\"transform\", \"translate(\" + x(d.year) + \",\" + y(d.value) + \")\");\n      focus.select(\"text\").text(function() { return d.value; });\n      focus.select(\".x-hover-line\").attr(\"y2\", height - y(d.value));\n      focus.select(\".y-hover-line\").attr(\"x2\", width + width);\n    }\n});\n\n</script>", "description": "Line Chart with Circle Tooltip D3 V4", "created_at": "2016-09-26T13:33:46Z", "updated_at": "2016-09-26T13:33:46Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.scaleTime", "d3.scaleLinear", "d3.line", "d3.json", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.mouse"], "readme": "This chart is based on <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3883245'>Line Chart</a>\n\nit uses a json file storing year values and population values. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/alandunning/'>alandunning</a>'s block: <a href='http://bl.ocks.org/alandunning/cfb7dcd7951826b9eacd54f0647f48d3'>Line Chart with Circle Tooltip D3 V4</a>", "uid": "Ananda90_fe3056ca5c47fd949cdb4a4df6513e9a"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 50, bottom: 30, left: 100},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n  \nvar tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n  \nvar x = d3.scaleLinear().range([0, width]);\nvar y = d3.scaleBand().range([height, 0]);\n\nvar g = svg.append(\"g\")\n\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \nd3.json(\"data.json\", function(error, data) {\n  \tif (error) throw error;\n  \n  \tdata.sort(function(a, b) { return a.value - b.value; });\n  \n  \tx.domain([0, d3.max(data, function(d) { return d.value; })]);\n    y.domain(data.map(function(d) { return d.area; })).padding(0.1);\n\n    g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n       \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n      \t.call(d3.axisBottom(x).ticks(5).tickFormat(function(d) { return parseInt(d / 1000); }).tickSizeInner([-height]));\n\n    g.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(d3.axisLeft(y));\n\n    g.selectAll(\".bar\")\n        .data(data)\n      .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", 0)\n        .attr(\"height\", y.bandwidth())\n        .attr(\"y\", function(d) { return y(d.area); })\n        .attr(\"width\", function(d) { return x(d.value); })\n        .on(\"mousemove\", function(d){\n      // Replace hard coded vals (50, 90) with 50% of the tooltip wioth and height + a top buffer\n            tooltip\n              .style(\"left\", d3.event.pageX - 50 + \"px\")\n              .style(\"top\", d3.event.pageY - 90 + \"px\")\n              .style(\"display\", \"inline-block\")\n              .html((d.area) + \"<br><span>\" + \"\" + (d.value) + \"</span>\");\n        })\n    \t\t.on(\"mouseout\", function(d){ tooltip.style(\"display\", \"none\");});\n});\n</script>", "description": "Horizontal Bar Chart with Tooltip D3 V4", "created_at": "2016-09-26T10:28:16Z", "updated_at": "2016-09-26T14:22:02Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.json", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This chart shows average house prices in various areas of Liverpool, UK\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\nforked from <a href='http://bl.ocks.org/alandunning/'>alandunning</a>'s block: <a href='http://bl.ocks.org/alandunning/7008d0332cc28a826b37b3cf6e7bd998'>Horizontal Bar Chart with Tooltip D3 V4</a>", "uid": "Ananda90_c181d1fc7b6e5acd63f2155319387412"}, {"code": "<script>\n\nvar margin = {right: 30, left: 30},\n    width = 400 - margin.left - margin.right,\n    height = 20;\n\t\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar table = d3.select(\"table\");\n  \n// header 1  \nvar headRow = table.append(\"thead\").append(\"tr\");\nheadRow.append(\"th\");\nheadRow.append(\"th\").html(\"Margin\");\nheadRow.append(\"th\");  \n  \n// header 2  \nvar infoRow = table.append(\"tr\")\ninfoRow.append(\"th\").classed(\"info\", true).html(\"Location\");\n  \nvar limits = infoRow.append(\"th\").classed(\"info\", true).append(\"svg\");\ninfoRow.append(\"th\").classed(\"info\", true).html(\"Result\");\n\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  \n  x.domain([-100, 100]);\n  \n  [-50, -25, 0, 25, 50].forEach(function(d) { \n  \tlimits.append(\"text\")\n      .classed(\"info\", true)\n    \t.attr(\"x\", x(d) - (d === 0 ? 23 : 35))\n    \t.text(function() {\n      \tvar sign = d === 0 ? '' : '+';\n    \t\treturn sign + Math.abs(d); \n    \t}); \n  });\n  \n  var tr = table.selectAll(\".bar\")\n      .data(data)\n  \t\t.enter()\n  \t\t.append(\"tr\");\n\n  // add name\n  tr.append(\"td\").html(function(d) { return d.name });\n  \n  // add graph\n  var svg = tr.append(\"td\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n  svg\n    .append(\"rect\")\n      .attr(\"class\", function(d) { return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\"); })\n      .attr(\"x\", function(d) { return x(Math.min(0, d.value)); })\n      .attr(\"y\", 0)\n      .attr(\"width\", function(d) { return Math.abs(x(d.value) - x(0)); })\n      .attr(\"height\", 20);\n  \n  svg\n  \t.append(\"line\")\n      .classed(\"middle\", true)\n      .attr({\n        x1: x(0),\n        x2: x(0),\n        y1: -20,\n        y2: height + 20\n    });\n  \n  [-50, -25, 25, 50].forEach(function(d) {    \n    svg\n  \t.append(\"line\")\n      .classed(\"ldiv\", true)\n      .attr({\n        x1: x(d),\n        x2: x(d),\n        y1: -20,\n        y2: height + 5\n    });\n  });\n          \n  // add result\n  tr.append(\"td\")\n    .attr(\"class\", function(d) { return \"bar bar--\" + (d.value < 0 ? \"negative\" : \"positive\"); })\n    .html(function(d) { \n      var name = d.value < 0 ? \"Humpty\": \"Dumpty\";\n      return name + \" +\" + Math.abs(d.value); \n  \t});\n}) \n\n</script>", "description": "bar negative table #2", "created_at": "2016-09-26T09:35:15Z", "updated_at": "2016-09-26T11:06:15Z", "api": ["d3.scale.linear", "d3.select", "d3.tsv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/GitNoise/'>GitNoise</a>'s block: <a href='http://bl.ocks.org/GitNoise/eaac49889336173e58df52a105daa4f9'>bar negative table</a>", "uid": "GitNoise_790ec4081ca86165ce2deecaf020c210"}, {"code": "<script>\n\nvar margin = {top: 20, right: 30, bottom: 20, left: 60};\nvar width = 1000 - margin.left - margin.right;\nvar height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .range([0, width])\n    .padding(0.2)\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar yAxis = d3.axisLeft(y)\n  .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\");\n\nd3.csv(\"pokemon.csv\", function(poke) {  \n  poke = poke.map(function(d) {\n    d.value = +d.value;\n    return d;\n  });\n\n  x.domain(poke.map(function(d) { return d.pokemon; }));\n  y.domain(d3.extent(poke, function(d) { return d.value; }));\n\n  svg.selectAll(\".bar\") \n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", function(d) {\n      return \"bar \" + d.type;\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return y(d.value);\n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height - y(d.value); })\n\n  svg.selectAll(\".topofbar\")\n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", function(d) {\n      return \"topofbar\";\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return 0; \n    })\n    .attr(\"width\", x.bandwidth() + 1)\n    .attr(\"height\", function(d) { return height; })\n    .on(\"mouseover\", function(pokemon) {      \n      y.domain([0, pokemon.value+1]);\n      \n      svg.selectAll(\".bar\")\n        .attr(\"class\", function(d) {\n          if (d.value <= 2 * (+pokemon.value) && d.pokemon == pokemon.pokemon) {\n            return \"bar \" + d.type;            \n          } else if (d.value <= 2 * (+pokemon.value)) {\n            return \"bar \" + d.type + \" dim\";\n          } else {\n            return \"bar \" + d.type + \" grayedout\";\n          }\n        })\n        .attr(\"x\", function(d) {\n          return x(d.pokemon);\n        })\n         .attr(\"y\", function(d) {\n           return y(d.value);\n         })\n         .attr(\"height\", function(d) { return height - y(d.value); })\n\n       svg.select(\".axis\")\n         .call(yAxis)\n             \n       tooltip.html(\"\");\n       tooltip.append(\"img\").attr(\"src\", pokemon.thumb);\n       tooltip.append(\"pre\");\n       tooltip.select(\"pre\")\n         .text(pokemon.pokemon + \"\\n\" + pokemon.type.split(\"_\").join(\",\") + \"\\n\" + pokemon.value);\n       \n       return tooltip.style(\"visibility\", \"visible\");\n     })\n     .on(\"mousemove\", function() {\n       return tooltip.style(\"top\", (d3.event.pageY-20) + \"px\").style(\"left\", (d3.event.pageX+10) + \"px\");\n     })\n     .on(\"mouseout\", function() {\n       return tooltip.style(\"visibility\", \"hidden\");\n     });\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .call(yAxis);\n});\n</script>", "description": "Pokemon #2", "created_at": "2016-09-26T08:28:01Z", "updated_at": "2016-09-26T08:43:43Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisLeft", "d3.select", "d3.csv", "d3.extent"], "readme": "New version of Pokemon, designed with [Syntagmatic](http://bl.ocks.org/syntagmatic). We also suspect this dataset is related to Pokemon Go. Mainly because of all the Pidgeys.\n", "uid": "dhoboy_116056d5a74c478c49058952fc14b98c"}, {"code": "<script>\n\nvar margin = {top: 20, right: 30, bottom: 50, left: 60};\nvar width = 1000 - margin.left - margin.right;\nvar height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .range([0, width])\n    .padding(0.2)\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar yAxis = d3.axisLeft(y)\n  .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\");\n\nd3.csv(\"pokemon.csv\", function(poke) {  \n  poke = poke.map(function(d) {\n    d.value = +d.value;\n    return d;\n  });\n\n  x.domain(poke.map(function(d) { return d.pokemon; }));\n  y.domain(d3.extent(poke, function(d) { return d.value; }));\n\n  var bars = svg.selectAll(\".bar\") \n    .data(poke);\n\n  bars.enter()\n    .append(\"rect\")\n    .attr(\"id\", function(d,i) { \n      return d.pokemon; \n    })\n    .attr(\"class\", function(d) {\n      return \"bar \" + d.type;\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return y(d.value);\n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height - y(d.value); })\n\n  svg.selectAll(\".topofbar\")\n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", function(d) {\n      return \"topofbar\";\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return 0; \n    })\n    .attr(\"width\", x.bandwidth() + 1)\n    .attr(\"height\", function(d) { return height; })\n    .on(\"mouseover\", function(pokemon) {\n      console.log(\"mouseover \" + pokemon.pokemon)\n       y.domain([0, pokemon.value+1]);\n       var filteredPoke = poke.filter(function(d) {\n        return +d.value <= +pokemon.value+1;\n       });\n\n       console.log(\"filteredPoke: \", filteredPoke)\n\n       //svg.select(\"#\" + d.pokemon)\n       var bars = svg.selectAll(\".bar\")\n         .data(filteredPoke, function(d) { return d.pokemon; }); // if a bar is out of the range, don't show\n \n       bars.exit().remove();\n\n       bars.enter()\n       .append(\"rect\")\n        .attr(\"id\", function(d,i) { \n          return d.pokemon; \n        })\n        .attr(\"class\", function(d) {\n          return \"bar \" + d.type;\n        })\n        .attr(\"x\", function(d) {\n          return x(d.pokemon);\n        })\n        .merge(bars)//.transition.duration(550)\n         .attr(\"y\", function(d) {\n           return y(d.value);\n         })\n         .attr(\"height\", function(d) { return height - y(d.value); })\n\n       svg.select(\".axis\")\n         .call(yAxis)\n             \n       tooltip.html(\"\");\n       tooltip.append(\"img\").attr(\"src\", pokemon.thumb);\n       tooltip.append(\"pre\");\n       tooltip.select(\"pre\")\n         .text(pokemon.pokemon + \"\\n\" + pokemon.type.split(\"_\").join(\",\") + \"\\n\" + pokemon.value);\n       return tooltip.style(\"visibility\", \"visible\");\n     })\n     .on(\"mousemove\", function(pokemon) {\n       return tooltip.style(\"top\", (d3.event.pageY-20) + \"px\").style(\"left\", (d3.event.pageX+10) + \"px\");\n     })\n     .on(\"mouseout\", function(pokemon) {\n      console.log(\"mouseout: \", pokemon.pokemon)\n       y.domain(d3.extent(poke, function(d) { return d.value; }));\n       //var filteredPoke = poke.filter(function(p) {\n       // return +p.value <= d.value+1;\n       //});\n\n       //svg.select(\"#\" + d.pokemon)\n       var bars = svg.selectAll(\".bar\")\n         .data(poke, function(d) { return d.pokemon; }); // if a bar is out of the range, don't show\n\n       bars.exit().remove();\n     \n       bars.enter()\n       .append(\"rect\")\n        .attr(\"id\", function(d,i) { \n          return d.pokemon; \n        })\n        .attr(\"class\", function(d) {\n          return \"bar \" + d.type;\n        })\n        .attr(\"x\", function(d) {\n          return x(d.pokemon);\n        })\n        .merge(bars)//.transition.duration(550)\n         .attr(\"y\", function(d) {\n           return y(d.value);\n         })\n         .attr(\"height\", function(d) { return height - y(d.value); })\n\n       svg.select(\".axis\")\n         .call(yAxis)\n         \n       return tooltip.style(\"visibility\", \"hidden\");\n     });\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .call(yAxis);\n});\n</script>", "description": "Pokemon 4", "created_at": "2016-09-26T07:31:02Z", "updated_at": "2016-09-26T07:38:16Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisLeft", "d3.select", "d3.csv", "d3.extent"], "readme": "", "uid": "dhoboy_8136f9742eac4dfa09643ee0d40fc1f9"}, {"code": "<script>\n\nvar margin = {top: 20, right: 30, bottom: 50, left: 60};\nvar width = 1000 - margin.left - margin.right;\nvar height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .range([0, width])\n    .padding(0.2)\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar yAxis = d3.axisLeft(y)\n  .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\");\n\nd3.csv(\"pokemon.csv\", function(poke) {  \n  poke = poke.map(function(d) {\n    d.value = +d.value;\n    return d;\n  });\n\n  x.domain(poke.map(function(d) { return d.pokemon; }));\n  y.domain(d3.extent(poke, function(d) { return d.value; }));\n\n  var bars = svg.selectAll(\".bar\") \n    .data(poke);\n\n  bars.enter()\n    .append(\"rect\")\n    .attr(\"id\", function(d,i) { \n      return d.pokemon; \n    })\n    .attr(\"class\", function(d) {\n      return \"bar \" + d.type;\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return y(d.value);\n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height - y(d.value); })\n\n  svg.selectAll(\".topofbar\")\n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", function(d) {\n      return \"topofbar\";\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return 0; \n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height; })\n    .on(\"mouseover\", function(d) {\n       y.domain([0, d.value+1]);\n       svg.select(\"#\" + d.pokemon)\n       //.transition().duration(550)\n         .attr(\"y\", function(d) {\n           return y(d.value);\n         })\n         .attr(\"height\", function(d) { return height - y(d.value); })\n\n       //svg.select(\".axis\")\n       //  .call(yAxis)\n             \n       tooltip.html(\"\");\n       tooltip.append(\"img\").attr(\"src\", d.thumb);\n       tooltip.append(\"pre\");\n       tooltip.select(\"pre\")\n         .text(d.pokemon + \"\\n\" + d.type.split(\"_\").join(\",\") + \"\\n\" + d.value);\n       return tooltip.style(\"visibility\", \"visible\");\n     })\n     .on(\"mousemove\", function(d) {\n       return tooltip.style(\"top\", (d3.event.pageY-20) + \"px\").style(\"left\", (d3.event.pageX+10) + \"px\");\n     })\n     .on(\"mouseout\", function(d) {\n       y.domain(d3.extent(poke, function(d) { return d.value; }));\n       svg.selectAll(\".bar\")\n         .attr(\"y\", function(d) {\n           return y(d.value);\n         })\n         .attr(\"height\", function(d) { return height - y(d.value); })\n        \n       return tooltip.style(\"visibility\", \"hidden\");\n     });\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .call(yAxis);\n});\n</script>", "description": "Pokemon 3", "created_at": "2016-09-26T06:47:35Z", "updated_at": "2016-09-26T06:55:33Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisLeft", "d3.select", "d3.csv", "d3.extent"], "readme": "", "uid": "dhoboy_16e9d71cec3b05b4da60b977e44e5d25"}, {"code": "<script>\n\nvar margin = {top: 20, right: 30, bottom: 50, left: 60};\nvar width = 1000 - margin.left - margin.right;\nvar height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .range([0, width])\n    .padding(0.2)\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar yAxis = d3.axisLeft(y)\n  .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\");\n\nd3.csv(\"pokemon.csv\", function(poke) {  \n  poke = poke.map(function(d) {\n    d.value = +d.value;\n    return d;\n  });\n\n  x.domain(poke.map(function(d) { return d.pokemon; }));\n  y.domain(d3.extent(poke, function(d) { return d.value; }));\n\n  var bars = svg.selectAll(\".bar\") \n    .data(poke);\n\n  bars.enter()\n    .append(\"rect\")\n    .attr(\"id\", function(d,i) { \n      return d.pokemon; \n    })\n    .attr(\"class\", function(d) {\n      return \"bar \" + d.type;\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return y(d.value);\n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height - y(d.value); })\n\n  svg.selectAll(\".topofbar\")\n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", function(d) {\n      return \"topofbar\";\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return 0; \n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height; })\n    .on(\"mouseover\", function(d) {\n       y.domain([0, (d.value + 1)*2]);\n       //svg.select(\"#\" + d.pokemon)\n       svg.selectAll(\".bar\")\n       .transition().duration(550)\n         .attr(\"y\", function(d) {\n           return y(d.value);\n         })\n         .attr(\"height\", function(d) { return height - y(d.value); })\n\n       svg.select(\".axis\")\n         .call(yAxis)\n             \n       tooltip.html(\"\");\n       tooltip.append(\"img\").attr(\"src\", d.thumb);\n       tooltip.append(\"pre\");\n       tooltip.select(\"pre\")\n         .text(d.pokemon + \"\\n\" + d.type.split(\"_\").join(\",\") + \"\\n\" + d.value);\n       return tooltip.style(\"visibility\", \"visible\");\n     })\n     .on(\"mousemove\", function(d) {\n       return tooltip.style(\"top\", (d3.event.pageY-20) + \"px\").style(\"left\", (d3.event.pageX+10) + \"px\");\n     })\n     .on(\"mouseout\", function(d) {\n       /*y.domain(d3.extent(poke, function(d) { return d.value; }));\n       svg.selectAll(\".bar\")\n         .attr(\"y\", function(d) {\n           return y(d.value);\n         })\n         .attr(\"height\", function(d) { return height - y(d.value); })\n        */\n       return tooltip.style(\"visibility\", \"hidden\");\n     });\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .call(yAxis);\n});\n</script>", "description": "Pokemon 2", "created_at": "2016-09-26T06:43:38Z", "updated_at": "2016-09-26T06:45:38Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisLeft", "d3.select", "d3.csv", "d3.extent"], "readme": "", "uid": "dhoboy_3b60a1892ecad3d5b28f71ab40ad5886"}, {"code": "<script>\n\nvar margin = {top: 20, right: 30, bottom: 50, left: 60};\nvar width = 1000 - margin.left - margin.right;\nvar height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .range([0, width])\n    .padding(0.2)\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar yAxis = d3.axisLeft(y)\n  .ticks(10)\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\");\n\nd3.csv(\"pokemon.csv\", function(poke) {  \n  poke = poke.map(function(d) {\n    d.value = +d.value;\n    return d;\n  });\n\n  x.domain(poke.map(function(d) { return d.pokemon; }));\n  y.domain(d3.extent(poke, function(d) { return d.value; }));\n\n/*  var types = d3.nest()\n                .key(function(d) { return d.type; })\n                .entries(poke);\n\n  console.log(\"types: \", types) */\n\n  svg.selectAll(\".bar\") \n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return y(d.value);\n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height - y(d.value); })\n    .attr(\"class\", \"bar\")\n\n  svg.selectAll(\".topofbar\")\n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", function(d) {\n      return \"topofbar \" + d.type;\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return 0; \n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height; })\n    .on(\"mouseover\", function(d) {\n       tooltip.html(\"\");\n       tooltip.append(\"img\").attr(\"src\", d.thumb);\n       tooltip.append(\"pre\");\n       tooltip.select(\"pre\")\n         .text(d.pokemon + \"\\n\" + d.type.split(\"_\").join(\",\") + \"\\n\" + d.value);\n       return tooltip.style(\"visibility\", \"visible\");\n     })\n     .on(\"mousemove\", function() {\n       return tooltip.style(\"top\", (d3.event.pageY-20) + \"px\").style(\"left\", (d3.event.pageX+10) + \"px\");\n     })\n     .on(\"mouseout\", function() {\n       return tooltip.style(\"visibility\", \"hidden\");\n     });\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .call(yAxis);\n});\n</script>", "description": "Pokemon", "created_at": "2016-09-26T05:26:15Z", "updated_at": "2016-09-26T05:38:31Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisLeft", "d3.select", "d3.csv", "d3.extent", "d3.nest"], "readme": "Meaningless Pokemon data from pastebin graphed. Supplemented with types and thumbnails from [bulbapedia](http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_National_Pok%C3%A9dex_number).\nHover colors from [iwanthue](http://tools.medialab.sciences-po.fr/iwanthue/) based on the Pokemon's type.", "uid": "dhoboy_1178601925731459c224bd4d69a1791d"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 60, right: 20, bottom: 110, left: 100},\n    margin2 = {top: 60, right: 590, bottom: 100, left: 400},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    width2 = +svg.attr(\"width\") - margin2.right;\n \nvar parseTime = d3.timeParse(\"%Y\");\nvar x = d3.scaleTime().range([7, width-10]), \n    x2 = d3.scaleTime().range([7, width2]),\n    y = d3.scaleLinear().range([1,height-10]),\n    y2 = y.copy();\n \nvar xAxis = d3.axisTop(x),\n    yAxis = d3.axisLeft(y);\n\n  var force = d3.forceManyBody()\n      .strength(10);\n\n  var simulation = d3.forceSimulation()\n      .force(\"charge\", force)\n  \nvar brush = d3.brushY()\n    .extent([[0, 0], [width2, height]])\n    .on(\"brush\", brushed);\n  \nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  \t.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  \nvar context = svg.append(\"g\")\n    .attr(\"class\", \"context\")\n    .attr(\"transform\", \"translate(\" + 20 + \",\" + 58 + \")\");\n  \nd3.csv(\"Data_Breaches.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  \n  x.domain(d3.extent(data, function(d) { return d.Year; }));\n  y.domain([d3.min(data, function(d) { return d.RecordsStolen; }), d3.max(data, function(d) { return d.RecordsStolen; })]);\n  x2.domain(x.domain());\n  y2.domain(y.domain()); \nvar div = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n  \n  // set the colour scale\n  var color = d3.scaleOrdinal(d3.schemeCategory20);\n// append scatter plot to main chart area \n var dots = focus.append(\"g\");\n    dots.attr(\"clip-path\", \"url(#clip)\");\n    dots.selectAll(\"dot\") \n        .data(data)\n        .enter()\n      \t.append(\"circle\")\n        .attr('class', 'dot')\n        .attr(\"r\",3)\n        .style(\"opacity\", .7)\n        .attr(\"cx\", function(d) { return x(d.Year); })\n        .attr(\"cy\", function(d) { return y(d.RecordsStolen); })\n      .style(\"fill\", function(d) { return color(d.MethodOfLeak); })\n \n.on(\"mouseover\", function(d) {\n       div.transition()\n         .duration(200)\n      .style(\"background-color\", color(d.MethodOfLeak) )\n         .style(\"opacity\", .9);\n    div .html(\n        '<a href= \"'+d.Source+'\" target=\"_blank\">' + //with a link\n        d.Entity +\n        \"</a>\" +\n        \"<br/>\"  + numberWithCommas(d.RecordsStolen)+\n        \"<br/>\"  + d.MethodOfLeak)     \n        .style(\"left\", (d3.event.pageX+10) + \"px\")             \n        .style(\"top\", (d3.event.pageY - 28) + \"px\");\n       });\n  \nfocus.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .call(xAxis);\n\nfocus.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(yAxis);\n      \nfocus.append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 0 - margin.left)\n      .attr(\"x\",0 - (height / 2))\n      .attr(\"dy\", \"1em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Records Stolen\");  \n      \nsvg.append(\"text\")             \n      .attr(\"transform\",\n            \"translate(\" + ((width + margin.right + margin.left)/2) + \" ,\" + 30 + \")\")\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Year\");\n        \n\ncontext.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(brush)\n      .call(brush.move, y2.range());\n  \n});\n\n\n//create brush function redraw scatterplot with selection\nfunction brushed() {\n  \n  var selection = d3.event.selection;\n  y.domain(selection.map(y2.invert, y));\n  focus.selectAll(\".dot\")\n        .attr(\"cx\", function(d) { return x(d.Year); })\n        .attr(\"cy\", function(d) { return y(d.RecordsStolen); });\n  focus.select(\".axis--y\").call(yAxis);\n}\n\n\n  \nfunction type(d) {\n  d.Year = parseTime(d.Year);\n  d.RecordsStolen = +d.RecordsStolen;\n  return d;\n}\n\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n</script>", "description": "Data Breaches zoom", "created_at": "2016-09-25T22:04:55Z", "updated_at": "2016-09-30T15:45:39Z", "api": ["d3.select", "d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.axisTop", "d3.axisLeft", "d3.forceManyBody", "d3.forceSimulation", "d3.brushY", "d3.csv", "d3.extent", "d3.min", "d3.max", "d3.scaleOrdinal"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "davidgutierrez_858fa2687bc3067c6f1a58c944050709"}, {"code": "<script>\n\n      // Configuration parameters.\n      var width = 960,\n          height = 960,\n          outerPadding = 150,\n          labelPadding = 5,\n          chordPadding = 0.03,\n          arcThickness = 30,\n          opacity = 0.5,\n          fadedOpacity = 0.01,\n          transitionDuration = 300,\n          outerRadius = width / 2 - outerPadding,\n          innerRadius = outerRadius - arcThickness,\n          valueFormat = d3.format(\",\");\n\n      // DOM Elements.\n      var svg = d3.select(\"body\").append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n          g = svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\"),\n          ribbonsG = g.append(\"g\"),\n          groupsG = g.append(\"g\");\n\n      // D3 layouts, shapes and scales.\n      var ribbon = d3.ribbon()\n            .radius(innerRadius),\n          chord = d3.chord()\n            .padAngle(chordPadding)\n            .sortSubgroups(d3.descending),\n          arc = d3.arc()\n            .innerRadius(innerRadius)\n            .outerRadius(outerRadius),\n          color = d3.scaleOrdinal()\n            .range(d3.schemeCategory20);\n      \n      var popoverOptions = {\n        html : true,\n        template: '<div class=\"popover\" role=\"tooltip\"><div class=\"popover-arrow\"></div><div class=\"popover-content\"></div></div>'\n      };\n\n      // Renders the given data as a chord diagram.\n      function render(data){\n\n        var matrix = generateMatrix(data),\n            chords = chord(matrix);\n\n        color.domain(matrix.map(function (d, i){\n          return i;\n        }));\n\n        // Render the ribbons.\n        ribbonsG.selectAll(\"path\")\n            .data(chords)\n          .enter().append(\"path\")\n            .attr(\"class\", \"ribbon\")\n            .attr(\"d\", ribbon)\n            .style(\"fill\", function(d) {\n              return color(d.source.index);\n            })\n            .style(\"stroke\", function(d) {\n              return d3.rgb(color(d.source.index)).darker();\n            })\n            .style(\"opacity\", opacity)\n            .on(\"mouseenter\", function(d){\n              var src = matrix.names[d.source.index];\n              var dest = matrix.names[d.target.index];\n              popoverOptions.content = [\n                \"<strong>\" + src +\" to \" + dest +\"</strong>\",\n                valueFormat(d.target.value),\n                \"<br><strong>\" + dest +\" to \" + src +\"</strong>\",\n                valueFormat(d.source.value)\n              ].join(\"<br>\");\n              $(this).popover(popoverOptions);\n              $(this).popover(\"show\");\n            }) \n            .on(\"mouseleave\", function (d){\n              $(this).popover(\"hide\");\n            })\n\n\n        // Scaffold the chord groups.\n        var groups = groupsG\n          .selectAll(\"g\")\n            .data(chords.groups)\n          .enter().append(\"g\");\n\n        // Render the chord group arcs.\n        groups\n          .append(\"path\")\n            .attr(\"class\", \"arc\")\n            .attr(\"d\", arc)\n            .style(\"fill\", function(group) {\n              return color(group.index);\n            })\n            .style(\"stroke\", function(group) {\n              return d3.rgb(color(group.index)).darker();\n            })\n            .style(\"opacity\", opacity)\n            .call(groupHover);\n\n        // Render the chord group labels.\n        var angle = d3.local(),\n            flip = d3.local();\n        groups\n          .append(\"text\")\n            .each(function(d) {\n              angle.set(this, (d.startAngle + d.endAngle) / 2)\n              flip.set(this, angle.get(this) > Math.PI);\n            })\n            .attr(\"transform\", function(d) {\n              return [\n                \"rotate(\" + (angle.get(this) / Math.PI * 180 - 90) + \")\",\n                \"translate(\" + (outerRadius + labelPadding) + \")\",\n                flip.get(this) ? \"rotate(180)\" : \"\"\n              ].join(\"\");\n            })\n            .attr(\"text-anchor\", function(d) {\n              return flip.get(this) ? \"end\" : \"start\";\n            })\n            .text(function(d) {\n              return matrix.names[d.index];\n            })\n            .attr(\"alignment-baseline\", \"central\")\n            .style(\"font-family\", '\"Helvetica Neue\", Helvetica')\n            .style(\"font-size\", \"10pt\")\n            .style(\"cursor\", \"default\")\n            .call(groupHover);\n      }\n\n      // Sets up hover interaction to highlight a chord group.\n      // Used for both the arcs and the text labels.\n      function groupHover(selection){\n        selection\n          .on(\"mouseover\", function (group){\n            g.selectAll(\".ribbon\")\n                .filter(function(ribbon) {\n                  return (\n                    (ribbon.source.index !== group.index) &&\n                    (ribbon.target.index !== group.index)\n                  );\n                })\n              .transition().duration(transitionDuration)\n                .style(\"opacity\", fadedOpacity);\n          })\n          .on(\"mouseout\", function (){\n            g.selectAll(\".ribbon\")\n              .transition().duration(transitionDuration)\n                .style(\"opacity\", opacity);\n          });\n      }\n\n      // Generates a matrix (2D array) from the given data, which is expected to\n      // have fields {origin, destination, count}. The matrix data structure is required\n      // for use with the D3 Chord layout.\n      function generateMatrix(data){\n        var nameToIndex = {},\n            names = [],\n            matrix = [],\n            n = 0, i, j;\n        \n\n        function recordName(name){\n          if( !(name in nameToIndex) ){\n            nameToIndex[name] = n++;\n            names.push(name);\n          }\n        }\n\n        data.forEach(function (d){\n          recordName(d.origin);\n          recordName(d.destination);\n        });\n\n        for(i = 0; i < n; i++){\n          matrix.push([]);\n          for(j = 0; j < n; j++){\n            matrix[i].push(0);\n          }\n        }\n\n        data.forEach(function (d){\n          i = nameToIndex[d.origin];\n          j = nameToIndex[d.destination];\n          matrix[j][i] = d.count;\n        });\n\n        matrix.names = names;\n\n        return matrix;\n      }\n\n      d3.csv(\"migration.csv\", type, function (dataForCountries){\n        d3.json(\"hierarchy.json\", function (hierarchy){\n\n          // Aggretate country data into regional data.\n          var dataForRegions = aggregate(dataForCountries, hierarchy)\n\n            // Reduce clutter by filtering out links with relatively low counts.\n            .filter(function (d){\n              return d.count > 10000;\n            });\n\n          render(dataForRegions);\n        });\n\n      });\n\n      // Parses a single row of the input table.\n      function type(d){\n        d.count = +d.count;\n        return d;\n      }\n\n      // Aggregates data from countries to regions.\n      function aggregate(data, hierarchy){\n        var links = {},\n            parent = {},\n            descendants = d3.hierarchy(hierarchy).descendants();\n\n        descendants.forEach(function (node){\n          if(node.parent){\n            parent[node.data.data.id] = node.parent.data.data.id;\n          }\n        });\n\n        function getLink(origin, destination){\n          var key = origin + \"|\" + destination;\n          return (key in links) ? links[key] : (links[key] = {\n            origin: origin,\n            destination: destination,\n            count: 0\n          });\n        }\n\n        data.forEach(function (d){\n          getLink(parent[d.origin], parent[d.destination]).count += d.count;\n\n          //console.log(d.origin + \" is in \" + parent[d.origin]);\n          //console.log(d.destination + \" is in \" + parent[d.destination]);\n        });\n\n        return Object.keys(links).map(function (key){\n          return links[key];\n        });\n\n      }\n\n    </script>", "description": "Global Migration in 2015", "created_at": "2016-09-25T15:52:41Z", "updated_at": "2016-09-25T15:52:41Z", "api": ["d3.format", "d3.select", "d3.ribbon", "d3.chord", "d3.arc", "d3.scaleOrdinal", "d3.rgb", "d3.local", "d3.csv", "d3.json", "d3.hierarchy"], "readme": "A Chord Diagram visualization of global migration data from 2015. Data is from the [United Nations International Migrant Stock Database](https://github.com/curran/data/tree/gh-pages/un/migration). Inspired by:\n\n * [d3-chord](https://github.com/d3/d3-chord)\n * [Mike Bostock\u2019s Block - Chord Diagram](http://bl.ocks.org/mbostock/4062006)\n * [Nadieh Bremer\u2019s Block - Chord diagram 2014 - End result](http://bl.ocks.org/nbremer/7d0a91497fc64f30d1ab)\n\n<!-- Start of SimpleHitCounter Code -->\n<div align=\"center\"><a href=\"http://www.simplehitcounter.com\" target=\"_blank\"><img src=\"http://simplehitcounter.com/hit.php?uid=2134553&f=16777215&b=0\" border=\"0\" height=\"18\" width=\"83\" alt=\"web counter\"></a></div>\n<!-- End of SimpleHitCounter Code -->\n\n\nforked from <a href='http://bl.ocks.org/curran/'>curran</a>'s block: <a href='http://bl.ocks.org/curran/8c5bb1e0dd8ea98695d28c8a0ccfc533'>Global Migration in 2015</a>", "uid": "sunilchandra007_28d85075448d5b2d0c7b586a51ceda7a"}, {"code": "<script>\n    var height = 500\n    var width = 500\n  \n    \nvar svg = d3.select(\"body\").append(\"svg\")\n     .attr(\"width\", width)\n    .attr(\"height\", height)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + 0 + \",\" + 0 + \")\");\n    \nvar circle_size = 4;\n    \nvar colour_scale = d3.scaleOrdinal(d3.schemeCategory10);\n\nfunction flatten(root) {\n    var nodes = [],\n        i = 0; \n\n    function recurse(node) {\n        if (node.children) node.children.forEach(recurse);\n        if (!node.id) node.id = ++i;\n        nodes.push(node);\n    }\n\n    recurse(root);\n    return nodes; \n}\n    \nfunction add_label_leaves(csv_data, root) {\n\n  function recurse(tree) {\n    if (!(tree.children))  {\n      //add to csv data with correct parent id and uniform size. \n\n      new_record = {}\n      new_record[\"name\"] = tree.data.name + \"_label\"\n      new_record[\"parent\"] = tree.data.id \n      new_record[\"id\"] =  tree.data.id + \"_label\"\n      new_record[\"data\"] = 20\n      new_record[\"text\"] = tree.data.text\n\n      csv_data.push(new_record)\n    } else {\n      _.each(tree.children, function(this_tree) {\n\n      \trecurse(this_tree)\n      })\n    }\n  }\n  \n  recurse(root) \n  \n  \n}\n    \nd3.csv(\"data2.csv\", function(csv_data) {\n\n \n    var root_fn = d3.stratify()\n        .id(function(d) {\n            return d.id;\n        })\n        .parentId(function(d) {\n            return d.parent;\n        })\n        \n    \n \t\tvar root = root_fn(csv_data);\n  \n    //Recurse into root's children, and when we find \n    \n  \n\n    var links = root.links()\n    var nodes = flatten(root)\n\t\n    add_label_leaves(csv_data, root)\n    \n    var root = root_fn(csv_data)\n     var links = root.links()\n    var nodes = flatten(root)\n    \n\n    var simulation = d3.forceSimulation(nodes)\n        .force(\"link\",\n            d3.forceLink(links)\n            .distance(function(d) {\n          \t\t\t//We want the distance to be equal so they are spaced in a circle around the parent\n                return Math.pow(d.source.data.data, 0.5)  * circle_size*1.5;\n            })\n            .strength(function(d) {\n       \t\t\t\t\t//Strength just needs to be enough so that length is uniform\n                return 0.1\n            })\n        )\n        .force(\"charge\", d3.forceManyBody()\n                                .strength(function(d) {\n\n                                    var force = -Math.pow(d.data.data,0.5)*circle_size;\n             \n                                    return force})\n                                .distanceMin(0)\n                                .distanceMax(200)\n                )\n        .force(\"center\", d3.forceCenter(width / 2, height / 2))\n      \t.force(\"collide\", d3.forceCollide(function(d) {return Math.pow(d.data.data,0.5)*circle_size}))\n        .velocityDecay(0.05)\n        .alphaMin(0.0001)\n        .alphaDecay(0.01) \n\n    .on(\"tick\", ticked)\n\n    function ticked() {\n\n        var selection = svg.selectAll(\".my_links\")\n            .data(links)\n\n        selection.enter()\n            .append(\"line\")\n            .attr(\"class\", \"my_links\")\n            .merge(selection)\n            .attr(\"x1\", function(d) {\n                return d.source.x;\n            })\n            .attr(\"y1\", function(d) {\n                return d.source.y;\n            })\n            .attr(\"x2\", function(d) {\n                return d.target.x;\n            })\n            .attr(\"y2\", function(d) {\n                return d.target.y;\n            })\n        \t\t.attr(\"stroke-width\", function(d) {\n          \t\tif (d.target.children) {\n\t\t\t\t\t\t\t\treturn 1\n              \t} else {\n                  return 0\n                }\n           \n        })\n\n        selection.exit().remove();\n\n        // Update the nodes\n        selection = svg.selectAll(\".my_nodes\")\n            .data(nodes, function(d) {\n                return d.id;\n            })\n\n        //Entering\n        enterSelection = selection\n            .enter()\n        \t\t.append(\"g\")\n        \t\t.attr(\"class\", \"my_nodes\")\n        \t\t\n\n    \n        circles = enterSelection.append(\"circle\")\n        \n        rectangles = enterSelection.append(\"text\")\n   \n      .text(function(d) { return d.data.text; })\n  \n      .style(\"font-size\", function(d) { \n          var r = Math.pow(d.data.data, 0.5)*circle_size\n          return Math.min(2 * r, (2 * r - 8) / this.getComputedTextLength() * 24) + \"px\"; })\n      .attr(\"dy\", \".35em\")\n      .style(\"fill\", function(d) {\n          if (d.children) {\n\t\t\t\t\t\t\t\treturn \"white\"\n              \t} else {\n                  return \"black\"\n                }\n        })\n    \n       \n        //Update\n       enterSelection.merge(selection)\n        \t.attr(\"transform\", function(d) {return \"translate(\" + d.x + \",\" + d.y + \")\" });\n       \n      enterSelection.merge(selection).select(\"circle\")\n             .attr(\"r\", function(d) {\n             return Math.pow(d.data.data, 0.5)*circle_size;\n           })\n      .attr(\"fill\", function(d,i) {\n        \n      \t\tif (d.children) {\n\t\t\t\t\t\t\t\treturn colour_scale(i)\n              \t} else {\n                  return \"white\"\n                }\n      })\n   \n       \n   \n    }\n  \n  \n\n});\n    \n\n  </script>", "description": "force directed text fit labels", "created_at": "2016-09-25T15:45:11Z", "updated_at": "2016-09-25T15:45:18Z", "api": ["d3.select", "d3.scaleOrdinal", "d3.csv", "d3.stratify", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceCenter", "d3.forceCollide"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/RobinL/'>RobinL</a>'s block: <a href='http://bl.ocks.org/RobinL/b676e77ef1341149be14cac937c31aaa'>force directed test</a>\n\nforked from <a href='http://bl.ocks.org/RobinL/'>RobinL</a>'s block: <a href='http://bl.ocks.org/RobinL/6cdc2d3cf90ea0f1600f210ebf1cf00c'>force directed text fit</a>\n\nforked from <a href='http://bl.ocks.org/RobinL/'>RobinL</a>'s block: <a href='http://bl.ocks.org/RobinL/256be6a22a5ac0649f6003022423937e'>force directed text fit done</a>\n\nforked from <a href='http://bl.ocks.org/RobinL/'>RobinL</a>'s block: <a href='http://bl.ocks.org/RobinL/8174dec97312214594084755f6f65096'>force directed text fit labels</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/74e50415a806c8771d10d255953c03bc'>force directed text fit labels</a>", "uid": "sunilchandra007_e69797b98bcd56146a3d4d1ba6f1ecbc"}, {"code": "<script>\n\nvar margin = {top: 30, right: 40, bottom: 20, left: 200},\n    width = 900 - margin.left - margin.right,\n    height = 800 - margin.top - margin.bottom;\n\nvar dimensions = [\n  /*{\n    name: \"Entity\",\n    scale: d3.scale.ordinal().rangePoints([0, height]),\n    type: \"string\"\n  },*/\n  {\n    name: \"Year\",\n    scale: d3.scale.ordinal().rangePoints([0, height]),\n    type: \"string\"\n  },\n  {\n    name: \"RecordsLost\",\n    scale: d3.scale.linear().range([0,height]),\n    type: \"number\"\n  },\n  {\n    name: \"MethodLeak\",\n    scale: d3.scale.ordinal().rangePoints([0, height]),\n    type: \"string\"\n  },\n];\n\nvar x = d3.scale.ordinal()\n    .domain(dimensions.map(function(d) { return d.name; }))\n    .rangePoints([0, width]);\n\nvar line = d3.svg.line()\n    .defined(function(d) { return !isNaN(d[1]); });\n\nvar yAxis = d3.svg.axis()\n    .orient(\"left\");\n\nvar div = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n  \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar dimension = svg.selectAll(\".dimension\")\n    .data(dimensions)\n  .enter().append(\"g\")\n    .attr(\"class\", \"dimension\")\n    .attr(\"transform\", function(d) { return \"translate(\" + x(d.name) + \")\"; });\n\nd3.csv(\"DataLeak.csv\", function(data) {\n  dimensions.forEach(function(dimension) {\n    dimension.scale.domain(dimension.type === \"number\"\n        ? d3.extent(data, function(d) { return +d[dimension.name]; })\n        : data.map(function(d) { return d[dimension.name]; }).sort());\n  });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n      .data(data)\n    .enter().append(\"path\")\n      .attr(\"d\", draw);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(data)\n    .enter().append(\"path\")\n      .attr(\"d\", draw);\n\n  dimension.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(yAxis.scale(d.scale)); })\n    .append(\"text\")\n      .attr(\"class\", \"title\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { return d.name; });\n\n  var ordinal_labels = svg.selectAll(\".axis text\")\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout);\n\n  var projection = svg.selectAll(\".background path,.foreground path\")\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout);\n\n  function mouseover(d) {\n    svg.classed(\"active\", true).on(\"mouseover\", function (e) {\n          div.transition()\n             .duration(200)\n             .style(\"opacity\", .9);\n          div.html(d.Entity)\n             .style(\"left\", (d3.event.pageX) + \"px\")\n             .style(\"top\", (d3.event.pageY - 28) + \"px\");\n       })\n       .on(\"mouseout\", function (d) {\n            div.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        });\n\n    // this could be more elegant\n    if (typeof d === \"string\") {\n      \n      projection.classed(\"inactive\", function(p) { return p.name !== d; });\n      projection.filter(function(p) { return p.name === d; }).each(moveToFront);\n      ordinal_labels.classed(\"inactive\", function(p) { return p !== d; });\n      ordinal_labels.filter(function(p) { return p === d; }).each(moveToFront);\n    } else {\n      projection.classed(\"inactive\", function(p) { return p !== d; });\n      projection.filter(function(p) { return p === d; }).each(moveToFront);\n      ordinal_labels.classed(\"inactive\", function(p) { return p !== d.name; });\n      ordinal_labels.filter(function(p) { return p === d.name; }).each(moveToFront);\n    }\n  }\n\n  function mouseout(d) {\n    svg.classed(\"active\", false);\n    projection.classed(\"inactive\", false);\n    ordinal_labels.classed(\"inactive\", false);\n  }\n\n  function moveToFront() {\n    this.parentNode.appendChild(this);\n  }\n});\n\nfunction draw(d) {\n  return line(dimensions.map(function(dimension) {\n    return [x(dimension.name), dimension.scale(d[dimension.name])];\n  }));\n}\n\n</script>", "description": "BonoVisual", "created_at": "2016-09-25T04:15:36Z", "updated_at": "2016-09-27T02:55:18Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.extent"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "Franramy_5e7efcb2c53be893f3c1be6f456cce30"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {hacked:\"#807dba\", Lost:\"#e08214\",InsideJob:\"#41ab5d\",Others:\"#aa406a\"}[c]; }\n    \n    // compute total for each state.\n    fData.forEach(function(d){d.total=d.freq.hacked+d.freq.Lost+d.freq.InsideJob+d.freq.Others;});\n    \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n     \n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scaleBand().range([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; })).padding(.1);\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.axisBottom().scale(x));\n\n        // Create function for y-axis map.\n        var y = d3.scaleLinear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar1\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.bandwidth())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){ return d3.format(\",\")(d[1])})\n            .attr(\"x\", function(d) { return x(d[0])+x.bandwidth()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n        \n            .attr(\"text-anchor\", \"middle\")\n        ;\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.State == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar1\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){ return d3.format(\",\")(d[1])})\n                .attr(\"y\", function(d) {return y(d[1])-5; });            \n        }        \n        return hG;\n    }\n    \n    // function to handle pieChart.\n  \n  \n  function secondBarChart(pD){\n    var pC={},    hGDim = {t: 60, r: 2, b: 30, l: 10};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n    \n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scaleBand().range([0, hGDim.w], 0.1)\n                .domain(pD.map(function(d) { return (d.type); })).padding(.1);\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.axisBottom().scale(x));\n\n        // Create function for y-axis map.\n        var y = d3.scaleLinear().range([hGDim.h, 0])\n                .domain([0, d3.max(pD, function(d) { return d.freq; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars2 = hGsvg.selectAll(\".bar\").data(pD).enter()\n                .append(\"g\").attr(\"class\", \"bar2\");\n        \n        //create the rectangles.\n        bars2.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d.type); })\n            .attr(\"y\", function(d) { return y(d.freq); })\n            .attr(\"width\", x.bandwidth())\n            .attr(\"height\", function(d) { return hGDim.h - y(d.freq); })\n            .attr('fill',function(d) { return segColor(d.type); })\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n    \n        //Create the frequency labels above the rectangles.\n        bars2.append(\"text\").text(function(d){ return getPercent(d,tF);})\n            .attr(\"x\", function(d) { return x(d.type)+x.bandwidth()/2; })\n            .attr(\"y\", function(d) { return y(d.freq)-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n       pC.update = function(nD){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d.freq; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar2\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d.freq); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d.freq); })\n                .attr(\"fill\",  function(d) { return segColor(d.type); });\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){ return getPercent(d,nD);})\n                .attr(\"y\", function(d) {return y(d.freq)-5; });            \n        } \n       \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            hG.update(fData.map(function(v){ \n                return [v.State,v.freq[d.type]];}),segColor(d.type));\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n           hG.update(fData.map(function(v){\n                return [v.State,v.total];}), barColor);\n        }\n    \n     function getPercent(d,aD){ // Utility function to compute percentage.\n       var p = Math.max(0, d3.precisionFixed(0.05) - 2),\n    f = d3.format(\".\" + p + \"%\")\n       return f((d.freq/d3.sum(aD.map(function(v){ return v.freq; }))));\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n            \n        return pC;\n  }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['hacked','Lost','InsideJob','Others'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))\n               }; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.State,d.total];});\n\n    var hG = histoGram(sF), // create the histogram.\n        pC = secondBarChart(tF), // create the pie-chart.\n        leg= legend(tF);  // create the legend.\n}\n  \nfunction dashboard1( data){\n  var chartWidth       = 700,\n    barHeight        = 20,\n    groupHeight      = barHeight * data.series.length,\n    gapBetweenGroups = 10,\n    spaceForLabels   = 150,\n    spaceForLegend   = 150;\n\n// Zip the series data together (first values, second values, etc.)\nvar zippedData = [];\nfor (var i=0; i<data.labels.length; i++) {\n  for (var j=0; j<data.series.length; j++) {\n    zippedData.push(data.series[j].values[i]);\n  }\n}\n\n// Color scale\nvar color =d3.scaleOrdinal(d3.schemeCategory20);\nvar chartHeight = barHeight * zippedData.length + gapBetweenGroups * data.labels.length;\n\nvar x = d3.scaleLinear()\n    .domain([0, d3.max(zippedData)])\n    .range([0, chartWidth]);\n\nvar y = d3.scaleLinear()\n    .range([chartHeight + gapBetweenGroups, 0]);\n\nvar yAxis = d3.axisLeft()\n    .scale(y)\n    .tickFormat('')\n    .tickSize(0);\n\n// Specify the chart area and dimensions\nvar chart = d3.select(\".chart\").append(\"svg\")\n    .attr(\"width\", spaceForLabels + chartWidth + spaceForLegend)\n    .attr(\"height\", chartHeight);\n\n// Create bars\nvar bar = chart.selectAll(\"g\")\n    .data(zippedData)\n    .enter().append(\"g\")\n    .attr(\"transform\", function(d, i) {\n      return \"translate(\" + spaceForLabels + \",\" + (i * barHeight + gapBetweenGroups * (0.5 + Math.floor(i/data.series.length))) + \")\";\n    });\n\n// Create rectangles of the correct width\nbar.append(\"rect\")\n    .attr(\"fill\", function(d,i) { return color(i % data.series.length); })\n    .attr(\"class\", \"bar\")\n    .attr(\"width\", x)\n    .attr(\"height\", barHeight - 1);\n\n// Add text label in bar\nbar.append(\"text\")\n    .attr(\"x\", function(d) { return x(d) - 3; })\n    .attr(\"y\", barHeight / 2)\n    .attr(\"fill\", \"red\")\n    .attr(\"dy\", \".35em\")\n    .text(function(d) { return d; });\n\n// Draw labels\nbar.append(\"text\")\n    .attr(\"class\", \"label\")\n    .attr(\"x\", function(d) { return - 10; })\n    .attr(\"y\", groupHeight / 2)\n    .attr(\"dy\", \".35em\")\n    .text(function(d,i) {\n      if (i % data.series.length === 0)\n        return data.labels[Math.floor(i/data.series.length)];\n      else\n        return \"\"});\n\nchart.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + spaceForLabels + \", \" + -gapBetweenGroups/2 + \")\")\n      .call(yAxis);\n\n// Draw legend\nvar legendRectSize = 18,\n    legendSpacing  = 4;\n\nvar legend = chart.selectAll('.legend')\n    .data(data.series)\n    .enter()\n    .append('g')\n    .attr('transform', function (d, i) {\n        var height = legendRectSize + legendSpacing;\n        var offset = -gapBetweenGroups/2;\n        var horz = spaceForLabels + chartWidth + 40 - legendRectSize;\n        var vert = i * height - offset;\n        return 'translate(' + horz + ',' + vert + ')';\n    });\n\nlegend.append('rect')\n    .attr('width', legendRectSize)\n    .attr('height', legendRectSize)\n    .style('fill', function (d, i) { return color(i); })\n    .style('stroke', function (d, i) { return color(i); });\n\nlegend.append('text')\n    .attr('class', 'legend')\n    .attr('x', legendRectSize + legendSpacing)\n    .attr('y', legendRectSize - legendSpacing)\n    .text(function (d) { return d.label; });\n}\n  \n  \nfunction drawBars() {\n\nvar margin = {top: 80, right: 180, bottom: 80, left: 180},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar svg = d3.select(\"#barras3\").append(\"svg\")\n\t.attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n\t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"YearsVsEntities.tsv\", function(error, dataG){\n\n  \n\t// filter year\n\tvar data = dataG.filter(function(d){return d.Year == '2005';});\n \n\t// Get every column value\n\tvar elements = Object.keys(data[0])\n\t\t.filter(function(d){\n\t\t\treturn ((d != \"Year\") & (d != \"Entity\"));\n\t\t});\n  \n\n\tvar y = d3.scaleLinear()\n\t\t\t.domain([0, d3.max(data, function(d){\n\t\t\t\treturn +d.Records;\n\t\t\t})])\n\t\t\t.range([height, 0]);\n\n\tvar x = d3.scaleBand()\n\t\t\t.domain(data.map(function(d){ return d.Entity;}))\n\t\t\t.range([0, width]);\n\n\n\tvar xAxis = d3.axisBottom()\n\t\t.scale(x);\n\n\tvar yAxis = d3.axisLeft()\n\t\t.scale(y);\n\n\tsvg.append(\"g\")\n    \t.attr(\"class\", \"x axis\")\n    \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n    \t.call(xAxis)\n    \t.selectAll(\"text\")\n    \t.style(\"font-size\", \"8px\")\n      \t.style(\"text-anchor\", \"end\")\n      \t.attr(\"dx\", \"-.8em\")\n      \t.attr(\"dy\", \"-.55em\")\n      \t.attr(\"transform\", \"rotate(-90)\" );\n\n\n \tsvg.append(\"g\")\n    \t.attr(\"class\", \"y axis\")\n    \t.call(yAxis);\n\n\tsvg.selectAll(\"rectangle\")\n\t\t.data(data)\n\t\t.enter()\n\t\t.append(\"rect\")\n\t\t.attr(\"class\",\"rectangle\")\n\t\t.attr(\"width\", width/data.length)\n\t\t.attr(\"height\", function(d){\n\t\t\treturn height - y(+d.Records);\n\t\t})\n\t\t.attr(\"x\", function(d, i){\n\t\t\treturn (width / data.length) * i ;\n\t\t})\n\t\t.attr(\"y\", function(d){\n\t\t\treturn y(+d.Records);\n\t\t})\n\t\t.append(\"title\")\n\t\t.text(function(d){\n\t\t\treturn d.Entity + \" : \" + d.Records;\n\t\t});\n\n\n\t\n  var selector = d3.select(\"#drop\")\n    \t.append(\"select\")\n    \t.attr(\"id\",\"dropdown\")\n    \t.on(\"change\", function(d){\n        \tselection = document.getElementById(\"dropdown\");\n        \n\t\t\tvar dataS = dataG.filter(function(d){return d.Year == selection.value;});\n\t\t      \n        \ty.domain([0, d3.max(dataS, function(d){\n\t\t\t\treturn +d.Records;})]);\n        \tx.domain(dataS.map(function(d){ return d.Entity;}))\n\t\t\t.range([0, width]);\n\n        \tyAxis.scale(y);\n        \txAxis.scale(x);\n  svg.selectAll(\".rectangle\").remove();\n\n        \n\n        \n    svg.selectAll(\"rectangle\")\n\t\t.data(dataS)\n\t\t.enter()\n\t\t.append(\"rect\")\n\t\t.attr(\"class\",\"rectangle\")\n\t\t.attr(\"width\", width/dataS.length)\n\t\t.attr(\"height\", function(d){\n\t\t\treturn height - y(+d.Records);\n\t\t})\n\t\t.attr(\"x\", function(d, i){\n\t\t\treturn (width / dataS.length) * i ;\n\t\t})\n\t\t.attr(\"y\", function(d){\n\t\t\treturn y(+d.Records);\n\t\t})\n\t\t.append(\"title\")\n\t\t.text(function(d){\n\t\t\treturn d.Entity + \" : \" + d.Records;\n\t\t});\n\n      \n        d3.selectAll(\"g.y.axis\")\n           \t\t.transition()\n           \t\t.call(yAxis);\n d3.selectAll(\"g.x.axis\")\n           .attr(\"transform\", \"translate(0,\" + height + \")\")\n           .call(xAxis)\n        \t .selectAll(\"text\")\n    \t\t\t .style(\"font-size\", \"8px\")\n      \t   .style(\"text-anchor\", \"end\")\n      \t   .attr(\"dx\", \"-.8em\")\n      \t   .attr(\"dy\", \"-.55em\")\n      \t   .attr(\"transform\", \"rotate(-90)\" );\n\n         });\n\n  var elementosSelector=[\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\"];\n    selector.selectAll(\"option\")\n      .data(elementosSelector)\n      .enter().append(\"option\")\n      .attr(\"value\", function(d){\n        return d;\n      })\n      .text(function(d){\n        return d;\n      })\n\n});\n\n}\n  \n</script>\n\n<script>\nvar freqData=[\n{State:'2004',freq:{hacked:0, Lost:0, InsideJob:92000000, Others:0}}\n,{State:'2005',freq:{hacked:40000000, Lost:4100000, InsideJob:0, Others:125000}}\n,{State:'2006',freq:{hacked:4000000, Lost:43700000, InsideJob:2600000, Others:20000000}}\n,{State:'2007',freq:{hacked:106100000, Lost:31960000, InsideJob:18226405, Others:0}}\n,{State:'2008',freq:{hacked:24500000, Lost:18916500, InsideJob:11100000, Others:11550000}}\n,{State:'2009',freq:{hacked:176521778, Lost:80290788, InsideJob:0, Others:0}}\n,{State:'2010',freq:{hacked:5976400, Lost:9214156, InsideJob:903000, Others:43000}}\n,{State:'2011',freq:{hacked:198735838, Lost:21450838, InsideJob:2500000, Others:6276811}}\n,{State:'2012',freq:{hacked:467760000, Lost:800000, InsideJob:208200000, Others:27766024}}\n,{State:'2013',freq:{hacked:236376000, Lost:4300000, InsideJob:3700000, Others:7926000}}\n,{State:'2014',freq:{hacked:892870000, Lost:0, InsideJob:20000000, Others:128000}}\n,{State:'2015',freq:{hacked:187197000, Lost:0, InsideJob:0, Others:195450000}}\n,{State:'2016',freq:{hacked:458461160, Lost:0, InsideJob:0, Others:68614115}}\n];\n\n  \n  \n  var dataGroup = {\n  labels: [\n    '2007', '2009', '2011',\n    '2013', '2015'\n  ],\n  series: [\n    {\n      label: 'goverment',\n      values: [31249000,84460378, 5998461, 2076000, 26100000]\n    },\n    {\n      label: 'Otros',\n      values: [123437405, 140352188, 124801594, 68776000, 13590000]\n    },\n    {\n      label: 'web',\n      values: [1600000, 32000000, 93262000, 18145000, 342957000]\n    },\n  ]\n};\n\n\ndashboard('#dashboard',freqData);\ndashboard1(dataGroup);\ndrawBars();\n\n</script>", "description": "Bonus", "created_at": "2016-09-25T00:20:54Z", "updated_at": "2016-09-28T02:48:55Z", "api": ["d3.select", "d3.scaleBand", "d3.axisBottom", "d3.scaleLinear", "d3.max", "d3.format", "d3.keys", "d3.precisionFixed", "d3.sum", "d3.scaleOrdinal", "d3.axisLeft", "d3.tsv", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "nychi713_23d300d92301d0ba57bd5f155c30cb9a"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n\n    svg.append(\"text\")\n      .text(\"Edit the code below to change me!\")\n      .attr(\"y\", 200)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 36)\n      .style(\"font-family\", \"monospace\")\n\n  </script>", "description": "fresh block", "created_at": "2016-09-24T14:53:09Z", "updated_at": "2016-09-24T14:53:09Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "fotisz_a60c07f22b33597f80c303463c0fdd6b"}, {"code": "<script>\n    var margin = {margin:60, top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n   \n\nvar x = d3.scaleBand()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\n\nvar xAxis = d3.axisBottom(x)\n    .scale(x);\n\nvar yAxis = d3.axisLeft(y)\n    .scale(y);\n    \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \nvar tooltip = d3.select(\"body\")\n        .append(\"label\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"10\")\n        .style(\"visibility\", \"hidden\");\n    \n\n\nd3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.value = +d.value;\n  });\n\n\n  x.domain(data.map(function(d) { return d.index; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"x\", 70)\n      .attr(\"dy\", \"-0.2296em\")\n      .attr(\"transform\", \"rotate(-90)\")\n  \t\t.style(\"font-weight\",\"bold\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    \t.append(\"text\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.index); })\n      .attr('width', x.bandwidth()-50)\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); })\n    .style(\"fill\", function(d){\n    \tif(d.method == \"poor security\"){\n      \treturn \"red\";\n      }else if(d.method == \"lost / stolen media\"){\n        return \"blue\";\n      }else if(d.method == \"accidentally published\"){\n        return \"green\";\n      }else if(d.method == \"hacked\"){\n        return \"purple\";\n      }else if(d.method == \"inside job\"){\n        return \"purple\";\n      }\n  });\n\n  d3.select(\"input\").on(\"change\", change);\n\n  var sortTimeout = setTimeout(function() {\n    d3.select(\"input\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data.sort(this.checked\n        ? function(a, b) { return b.value - a.value; }\n        : function(a, b) { return d3.ascending(a.index, b.index); })\n        .map(function(d) { return d.index; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.index) - x0(b.index); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.index); });\n\n    transition.select(\".x.axis\")\n        .call(xAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n  }\n  \n  $('rect').tipsy({ \n      gravity: 'w', \n      html: true, \n      title: function() {\n        var d = this.__data__;\n        return +d.value +\" \"+d.index +\" Metodo:\"+d.method; \n            }\n    });\n   \n});\n</script>", "description": "Bono parcial 1", "created_at": "2016-09-24T00:04:29Z", "updated_at": "2016-09-28T04:55:10Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.select", "d3.tsv", "d3.max", "d3.ascending"], "readme": "", "uid": "carlosfelipetorres_ddf6bfd96d1bdf9a90c1888c207b9318"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var margin = {margin:60, top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n    \nvar EPI_Score =\t80.47;\nvar Ten_Year_Percent_Change = 1.89;\n\nvar x = d3.scaleBand()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\n\nvar xAxis = d3.axisBottom(x)\n    .scale(x);\n\nvar yAxis = d3.axisLeft(y)\n    .scale(y);\n    \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \nvar tooltip = d3.select(\"body\")\n        .append(\"label\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"10\")\n        .style(\"visibility\", \"hidden\");\n    \n\n\nd3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.value = +d.value;\n  });\n\n\n  x.domain(data.map(function(d) { return d.index; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"x\", 70)\n      .attr(\"dy\", \"-0.2296em\")\n      .attr(\"transform\", \"rotate(-90)\")\n  \t\t.style(\"font-weight\",\"bold\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    \t.append(\"text\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.index); })\n      .attr('width', x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); })\n    .style(\"opacity\", function(d){\n    \tif(d.value > 0 && d.value <= 40){\n      \treturn 0.3;\n      }else if(d.value > 40 && d.value <= 80){\n        return 0.5;\n      }else if(d.value > 80 && d.value <= 90){\n        return 0.7;\n      }else if(d.value > 90 && d.value <= 100){\n        return 0.9;\n      }\n  });\n\n  d3.select(\"input\").on(\"change\", change);\n\n  var sortTimeout = setTimeout(function() {\n    d3.select(\"input\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data.sort(this.checked\n        ? function(a, b) { return b.value - a.value; }\n        : function(a, b) { return d3.ascending(a.index, b.index); })\n        .map(function(d) { return d.index; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.index) - x0(b.index); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.index); });\n\n    transition.select(\".x.axis\")\n        .call(xAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n  }\n  \n  $('rect').tipsy({ \n      gravity: 'w', \n      html: true, \n      title: function() {\n        var d = this.__data__;\n        return +d.value +\" \"+d.index; \n            }\n    });\n   \n});\n</script>", "description": "Bono parcial", "created_at": "2016-09-23T23:57:52Z", "updated_at": "2016-09-23T23:57:52Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.select", "d3.tsv", "d3.max", "d3.ascending"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "carlosfelipetorres_1e477d3c4bca8daedbd6cce0af1e3567"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var margin = {margin:60, top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n    \nvar EPI_Score =\t80.47;\nvar Ten_Year_Percent_Change = 1.89;\n\nvar x = d3.scaleBand()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\n\nvar xAxis = d3.axisBottom(x)\n    .scale(x);\n\nvar yAxis = d3.axisLeft(y)\n    .scale(y);\n    \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \nvar tooltip = d3.select(\"body\")\n        .append(\"label\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"10\")\n        .style(\"visibility\", \"hidden\");\n    \n\n\nd3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.value = +d.value;\n  });\n\n\n  x.domain(data.map(function(d) { return d.index; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"x\", 70)\n      .attr(\"dy\", \"-0.2296em\")\n      .attr(\"transform\", \"rotate(-90)\")\n  \t\t.style(\"font-weight\",\"bold\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    \t.append(\"text\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.index); })\n      .attr('width', x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); })\n    .style(\"opacity\", function(d){\n    \tif(d.value > 0 && d.value <= 40){\n      \treturn 0.3;\n      }else if(d.value > 40 && d.value <= 80){\n        return 0.5;\n      }else if(d.value > 80 && d.value <= 90){\n        return 0.7;\n      }else if(d.value > 90 && d.value <= 100){\n        return 0.9;\n      }\n  });\n\n  d3.select(\"input\").on(\"change\", change);\n\n  var sortTimeout = setTimeout(function() {\n    d3.select(\"input\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data.sort(this.checked\n        ? function(a, b) { return b.value - a.value; }\n        : function(a, b) { return d3.ascending(a.index, b.index); })\n        .map(function(d) { return d.index; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.index) - x0(b.index); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.index); });\n\n    transition.select(\".x.axis\")\n        .call(xAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n  }\n  \n  $('rect').tipsy({ \n      gravity: 'w', \n      html: true, \n      title: function() {\n        var d = this.__data__;\n        return +d.value +\" \"+d.index; \n            }\n    });\n   \n});\n</script>", "description": "Bono parcial", "created_at": "2016-09-23T23:57:51Z", "updated_at": "2016-09-24T00:00:08Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.select", "d3.tsv", "d3.max", "d3.ascending"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "carlosfelipetorres_658b04db6bcc17c65fe8050ecde99261"}, {"code": "<script>\nif (!window.d3) {\n    document.write('<script src=\"js/d3.min.js\"><\\/script>');\n}\n</script>\n\n\n<div id=\"container\">\n\n<!--[if lte IE 8]><a href=\"http://i1.wp.com/fundersandfounders.com/wp-content/uploads/2014/06/never-too-late-when-companies-started-infographic.png\" class=\"cboxElement\"><img class=\"aligncenter size-full wp-image-21566\" alt=\"The Aha Moments Of Entrepreneurs\" src=\"http://i1.wp.com/fundersandfounders.com/wp-content/uploads/2014/06/never-too-late-when-companies-started-infographic.png?zoom=2&amp;resize=660%2C587\" width=\"650\" height=\"577\" src-orig=\"http://i1.wp.com/fundersandfounders.com/wp-content/uploads/2014/06/never-too-late-when-companies-started-infographic.png?resize=660%2C587\" scale=\"2\"></a><![endif]-->\n<svg id=\"latetostart-graph\" version=\"1.2\" baseProfile=\"tiny\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n\t y=\"0px\" width=\"970px\" height=\"800px\" viewBox=\"0 0 970 800\" preserveAspectRatio=\"xMidYMid\" style=\"background-color: #ece8e3;\" xml:space=\"preserve\">\n<g id=\"Footer\">\n\t<text transform=\"matrix(1.0001 0 0 1 35.0942 765.6021)\" fill=\"#554263\" font-family=\"'BebasNeue'\" font-size=\"51.768\">IT'S NEVER TOO LATE.</text>\n<a xlink:href=\"http://fundersandfounders.com/\"  target=\"_top\">\t\n<g id=\"logo\">\n\t<g id=\"letters\">\n\t\t<path fill=\"#238FCF\" d=\"M716.82,751.874h-5.808v4.058h5.601v2.396h-5.601v8.041h-2.517v-16.893h8.324V751.874z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M721.698,755.714v6.114c0,1.767,0.687,2.649,2.062,2.649s2.061-0.883,2.061-2.649v-6.114h2.429v6.169\n\t\t\tc0,0.855-0.104,1.592-0.312,2.211c-0.202,0.555-0.551,1.054-1.048,1.498c-0.819,0.723-1.864,1.084-3.13,1.084\n\t\t\tc-1.261,0-2.301-0.361-3.119-1.084c-0.503-0.444-0.861-0.943-1.07-1.498c-0.199-0.496-0.302-1.232-0.302-2.211v-6.169H721.698z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M731.313,755.714h2.44v0.984c0.849-0.854,1.807-1.28,2.87-1.28c1.224,0,2.178,0.391,2.862,1.172\n\t\t\tc0.589,0.662,0.885,1.747,0.885,3.248v6.531h-2.44v-5.943c0-1.049-0.144-1.773-0.432-2.175c-0.282-0.407-0.791-0.611-1.533-0.611\n\t\t\tc-0.806,0-1.379,0.269-1.716,0.808c-0.332,0.532-0.496,1.461-0.496,2.787v5.135h-2.44V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M751.186,747.891h2.438v18.479h-2.438v-1.115c-0.957,0.949-2.041,1.422-3.251,1.422\n\t\t\tc-1.437,0-2.632-0.533-3.581-1.596c-0.944-1.088-1.415-2.445-1.415-4.07c0-1.592,0.471-2.918,1.415-3.982\n\t\t\tc0.937-1.072,2.111-1.609,3.53-1.609c1.229,0,2.329,0.512,3.302,1.531V747.891z M745.422,761.01c0,1.02,0.269,1.852,0.81,2.493\n\t\t\tc0.553,0.649,1.251,0.975,2.095,0.975c0.898,0,1.625-0.313,2.18-0.94c0.553-0.65,0.83-1.474,0.83-2.473\n\t\t\tc0-1.001-0.277-1.824-0.83-2.474c-0.555-0.634-1.274-0.951-2.16-0.951c-0.834,0-1.53,0.321-2.094,0.961\n\t\t\tC745.698,759.252,745.422,760.054,745.422,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M766.262,761.621h-7.531c0.063,0.877,0.345,1.572,0.841,2.091c0.496,0.511,1.135,0.766,1.911,0.766\n\t\t\tc0.604,0,1.104-0.146,1.5-0.438c0.389-0.291,0.831-0.832,1.327-1.617l2.051,1.158c-0.316,0.547-0.651,1.016-1.003,1.406\n\t\t\tc-0.352,0.389-0.729,0.71-1.134,0.961c-0.402,0.253-0.839,0.438-1.307,0.555c-0.468,0.115-0.975,0.174-1.521,0.174\n\t\t\tc-1.569,0-2.829-0.51-3.777-1.532c-0.951-1.026-1.424-2.391-1.424-4.091c0-1.686,0.459-3.049,1.381-4.092\n\t\t\tc0.928-1.029,2.157-1.543,3.69-1.543c1.548,0,2.771,0.5,3.672,1.5c0.89,0.99,1.338,2.366,1.338,4.125L766.262,761.621z\n\t\t\t M763.771,759.609c-0.339-1.314-1.154-1.97-2.449-1.97c-0.297,0-0.573,0.046-0.833,0.136c-0.259,0.092-0.495,0.224-0.706,0.395\n\t\t\tc-0.212,0.172-0.394,0.377-0.546,0.618c-0.151,0.24-0.266,0.514-0.344,0.821H763.771z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M768.919,755.714h2.429v0.952c0.445-0.475,0.841-0.8,1.188-0.973c0.351-0.184,0.769-0.275,1.252-0.275\n\t\t\tc0.641,0,1.309,0.211,2.006,0.635l-1.109,2.254c-0.463-0.336-0.911-0.504-1.35-0.504c-1.324,0-1.986,1.016-1.986,3.043v5.523\n\t\t\th-2.429V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M783.297,757.53l-2.01,1.081c-0.314-0.647-0.709-0.972-1.176-0.972c-0.224,0-0.414,0.074-0.572,0.224\n\t\t\ts-0.236,0.341-0.236,0.574c0,0.406,0.467,0.812,1.403,1.213c1.286,0.561,2.155,1.078,2.6,1.552\n\t\t\tc0.448,0.473,0.671,1.109,0.671,1.911c0,1.027-0.375,1.889-1.125,2.579c-0.727,0.655-1.603,0.983-2.632,0.983\n\t\t\tc-1.764,0-3.013-0.871-3.744-2.614l2.07-0.975c0.289,0.511,0.506,0.835,0.659,0.975c0.295,0.277,0.646,0.416,1.058,0.416\n\t\t\tc0.82,0,1.23-0.38,1.23-1.138c0-0.438-0.317-0.848-0.951-1.227c-0.243-0.123-0.489-0.243-0.732-0.359\n\t\t\tc-0.245-0.117-0.495-0.238-0.744-0.363c-0.708-0.348-1.203-0.699-1.491-1.049c-0.367-0.445-0.552-1.018-0.552-1.719\n\t\t\tc0-0.926,0.314-1.691,0.939-2.298c0.644-0.604,1.419-0.907,2.333-0.907C781.64,755.418,782.64,756.122,783.297,757.53z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M800.727,755.714h2.438v10.655h-2.438v-1.115c-1,0.949-2.077,1.422-3.227,1.422\n\t\t\tc-1.454,0-2.656-0.533-3.604-1.596c-0.943-1.088-1.416-2.445-1.416-4.07c0-1.599,0.473-2.928,1.416-3.994\n\t\t\tc0.941-1.064,2.122-1.598,3.538-1.598c1.225,0,2.322,0.512,3.293,1.531V755.714z M794.963,761.01c0,1.02,0.27,1.852,0.81,2.493\n\t\t\tc0.555,0.649,1.252,0.975,2.094,0.975c0.9,0,1.627-0.313,2.182-0.94c0.552-0.65,0.828-1.474,0.828-2.473\n\t\t\tc0-1.001-0.276-1.824-0.828-2.474c-0.555-0.634-1.273-0.951-2.159-0.951c-0.835,0-1.533,0.321-2.095,0.961\n\t\t\tC795.239,759.252,794.963,760.054,794.963,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M806.232,755.714h2.438v0.984c0.85-0.854,1.808-1.28,2.872-1.28c1.223,0,2.176,0.391,2.859,1.172\n\t\t\tc0.59,0.662,0.885,1.747,0.885,3.248v6.531h-2.439v-5.943c0-1.049-0.144-1.773-0.432-2.175c-0.279-0.407-0.79-0.611-1.531-0.611\n\t\t\tc-0.806,0-1.379,0.269-1.717,0.808c-0.332,0.532-0.497,1.461-0.497,2.787v5.135h-2.438V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M826.102,747.891h2.438v18.479h-2.438v-1.115c-0.958,0.949-2.041,1.422-3.249,1.422\n\t\t\tc-1.438,0-2.634-0.533-3.583-1.596c-0.943-1.088-1.413-2.445-1.413-4.07c0-1.592,0.47-2.918,1.413-3.982\n\t\t\tc0.937-1.072,2.11-1.609,3.529-1.609c1.229,0,2.332,0.512,3.303,1.531V747.891z M820.338,761.01c0,1.02,0.271,1.852,0.809,2.493\n\t\t\tc0.554,0.649,1.253,0.975,2.096,0.975c0.899,0,1.625-0.313,2.179-0.94c0.555-0.65,0.831-1.474,0.831-2.473\n\t\t\tc0-1.001-0.276-1.824-0.831-2.474c-0.554-0.634-1.272-0.951-2.158-0.951c-0.835,0-1.532,0.321-2.095,0.961\n\t\t\tC820.615,759.252,820.338,760.054,820.338,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M847.213,751.874h-5.807v4.058h5.601v2.396h-5.601v8.041h-2.515v-16.893h8.321V751.874z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M849.167,760.965c0-1.539,0.543-2.848,1.63-3.929c1.087-1.077,2.409-1.618,3.973-1.618\n\t\t\tc1.567,0,2.897,0.544,3.992,1.63c1.081,1.087,1.62,2.423,1.62,4.005c0,1.596-0.544,2.936-1.631,4.016\n\t\t\tc-1.093,1.072-2.436,1.607-4.025,1.607c-1.576,0-2.896-0.547-3.962-1.641C849.7,763.955,849.167,762.599,849.167,760.965z\n\t\t\t M851.649,761.01c0,1.064,0.28,1.908,0.842,2.527c0.575,0.627,1.336,0.94,2.278,0.94c0.949,0,1.707-0.31,2.278-0.932\n\t\t\tc0.567-0.619,0.851-1.446,0.851-2.481c0-1.036-0.283-1.865-0.851-2.484c-0.579-0.628-1.336-0.94-2.278-0.94\n\t\t\tc-0.93,0-1.681,0.312-2.255,0.94C851.938,759.207,851.649,760.018,851.649,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M865.378,755.714v6.114c0,1.767,0.686,2.649,2.064,2.649c1.373,0,2.06-0.883,2.06-2.649v-6.114h2.428\n\t\t\tv6.169c0,0.855-0.104,1.592-0.314,2.211c-0.2,0.555-0.548,1.054-1.043,1.498c-0.821,0.723-1.865,1.084-3.13,1.084\n\t\t\tc-1.264,0-2.301-0.361-3.121-1.084c-0.505-0.444-0.86-0.943-1.068-1.498c-0.203-0.496-0.303-1.232-0.303-2.211v-6.169H865.378z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M874.995,755.714h2.44v0.984c0.848-0.854,1.806-1.28,2.87-1.28c1.224,0,2.177,0.391,2.861,1.172\n\t\t\tc0.589,0.662,0.885,1.747,0.885,3.248v6.531h-2.44v-5.943c0-1.049-0.143-1.773-0.431-2.175c-0.281-0.407-0.793-0.611-1.533-0.611\n\t\t\tc-0.806,0-1.378,0.269-1.716,0.808c-0.332,0.532-0.496,1.461-0.496,2.787v5.135h-2.44V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M894.865,747.891h2.441v18.479h-2.441v-1.115c-0.957,0.949-2.039,1.422-3.249,1.422\n\t\t\tc-1.438,0-2.632-0.533-3.582-1.596c-0.943-1.088-1.414-2.445-1.414-4.07c0-1.592,0.471-2.918,1.414-3.982\n\t\t\tc0.937-1.072,2.11-1.609,3.529-1.609c1.231,0,2.33,0.512,3.302,1.531V747.891z M889.104,761.01c0,1.02,0.269,1.852,0.809,2.493\n\t\t\tc0.554,0.649,1.252,0.975,2.092,0.975c0.902,0,1.628-0.313,2.184-0.94c0.553-0.65,0.83-1.474,0.83-2.473\n\t\t\tc0-1.001-0.277-1.824-0.83-2.474c-0.556-0.634-1.274-0.951-2.161-0.951c-0.833,0-1.53,0.321-2.094,0.961\n\t\t\tC889.378,759.252,889.104,760.054,889.104,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M909.944,761.621h-7.534c0.065,0.877,0.346,1.572,0.844,2.091c0.497,0.511,1.133,0.766,1.909,0.766\n\t\t\tc0.604,0,1.104-0.146,1.5-0.438c0.389-0.291,0.832-0.832,1.328-1.617l2.052,1.158c-0.318,0.547-0.652,1.016-1.004,1.406\n\t\t\tc-0.354,0.389-0.73,0.71-1.134,0.961c-0.404,0.253-0.839,0.438-1.308,0.555c-0.468,0.115-0.974,0.174-1.521,0.174\n\t\t\tc-1.569,0-2.828-0.51-3.775-1.532c-0.952-1.026-1.428-2.391-1.428-4.091c0-1.686,0.461-3.049,1.382-4.092\n\t\t\tc0.931-1.029,2.16-1.543,3.693-1.543c1.547,0,2.77,0.5,3.67,1.5c0.892,0.99,1.339,2.366,1.339,4.125L909.944,761.621z\n\t\t\t M907.452,759.609c-0.338-1.314-1.155-1.97-2.452-1.97c-0.294,0-0.57,0.046-0.83,0.136c-0.259,0.092-0.495,0.224-0.708,0.395\n\t\t\tc-0.21,0.172-0.392,0.377-0.543,0.618c-0.151,0.24-0.266,0.514-0.345,0.821H907.452z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M912.6,755.714h2.43v0.952c0.445-0.475,0.842-0.8,1.187-0.973c0.352-0.184,0.77-0.275,1.251-0.275\n\t\t\tc0.643,0,1.311,0.211,2.007,0.635l-1.112,2.254c-0.459-0.336-0.907-0.504-1.346-0.504c-1.326,0-1.986,1.016-1.986,3.043v5.523\n\t\t\th-2.43V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M926.976,757.53l-2.006,1.081c-0.316-0.647-0.711-0.972-1.178-0.972c-0.222,0-0.412,0.074-0.571,0.224\n\t\t\tc-0.158,0.149-0.237,0.341-0.237,0.574c0,0.406,0.468,0.812,1.401,1.213c1.289,0.561,2.155,1.078,2.603,1.552\n\t\t\tc0.445,0.473,0.67,1.109,0.67,1.911c0,1.027-0.375,1.889-1.123,2.579c-0.726,0.655-1.604,0.983-2.632,0.983\n\t\t\tc-1.766,0-3.014-0.871-3.748-2.614l2.072-0.975c0.288,0.511,0.507,0.835,0.66,0.975c0.295,0.277,0.646,0.416,1.057,0.416\n\t\t\tc0.819,0,1.231-0.38,1.231-1.138c0-0.438-0.317-0.848-0.951-1.227c-0.243-0.123-0.489-0.243-0.733-0.359\n\t\t\tc-0.245-0.117-0.494-0.238-0.744-0.363c-0.706-0.348-1.203-0.699-1.49-1.049c-0.367-0.445-0.55-1.018-0.55-1.719\n\t\t\tc0-0.926,0.312-1.691,0.937-2.298c0.642-0.604,1.42-0.907,2.336-0.907C925.319,755.418,926.321,756.122,926.976,757.53z\"/>\n\t</g>\n\t<g id=\"foundation\">\n\t\t<defs>\n\t\t\t<rect id=\"SVGID_1_\" x=\"640\" y=\"739.99\" width=\"307\" height=\"39.402\"/>\n\t\t</defs>\n\t\t<clipPath id=\"SVGID_2_\">\n\t\t\t<use xlink:href=\"#SVGID_1_\"  overflow=\"visible\"/>\n\t\t</clipPath>\n\t\t<path clip-path=\"url(#SVGID_2_)\" fill=\"#238FCF\" d=\"M669.63,763.875c-1.371,0-2.481-1.113-2.481-2.481v-7.728\n\t\t\tc0-1.371,1.11-2.481,2.481-2.481h2.768v-2.37c0-1.43-1.163-2.59-2.595-2.59h-22.259c-1.433,0-2.593,1.161-2.593,2.59v18.045\n\t\t\tc0,1.432,1.16,2.594,2.593,2.594h13.357l8.583,6.209l-2.974-6.209h3.292c1.432,0,2.595-1.162,2.595-2.594v-2.985H669.63z\n\t\t\t M662.454,753.008c0,0.188-0.102,0.282-0.312,0.282h-0.427c-0.13,0-0.216-0.028-0.254-0.082c-0.041-0.056-0.086-0.233-0.136-0.538\n\t\t\tc-0.117-0.732-0.317-1.225-0.604-1.48c-0.288-0.253-0.706-0.381-1.255-0.381h-1.143v6.387h0.716c0.284,0,0.481-0.064,0.594-0.191\n\t\t\tc0.113-0.125,0.226-0.384,0.342-0.766c0.087-0.285,0.148-0.445,0.18-0.484c0.034-0.039,0.118-0.061,0.257-0.061h0.477\n\t\t\tc0.188,0,0.284,0.088,0.284,0.26v3.756c0,0.182-0.075,0.271-0.229,0.271h-0.531c-0.125,0-0.207-0.023-0.246-0.07\n\t\t\tc-0.04-0.049-0.092-0.176-0.155-0.386c-0.142-0.487-0.291-0.782-0.45-0.888c-0.157-0.104-0.332-0.158-0.522-0.158h-0.716v5.908\n\t\t\tc0,0.377,0.137,0.66,0.413,0.848c0.187,0.123,0.281,0.27,0.281,0.434v0.492c0,0.167-0.094,0.248-0.281,0.248h-3.395\n\t\t\tc-0.16,0-0.238-0.075-0.238-0.229v-0.512c0-0.157,0.093-0.303,0.282-0.434c0.275-0.196,0.412-0.479,0.412-0.848v-12.883\n\t\t\tc0-0.368-0.145-0.651-0.435-0.845c-0.195-0.125-0.292-0.27-0.292-0.435v-0.491c0-0.157,0.081-0.239,0.24-0.239h5.633\n\t\t\tc0.166,0,0.432-0.016,0.794-0.043c0.197-0.022,0.312-0.033,0.347-0.033c0.175,0,0.281,0.022,0.317,0.067\n\t\t\tc0.037,0.042,0.053,0.135,0.053,0.281V753.008z\"/>\n\t\t<path clip-path=\"url(#SVGID_2_)\" fill=\"#238FCF\" d=\"M699.28,746.213h-22.259c-1.434,0-2.594,1.159-2.594,2.591v2.381h2.809\n\t\t\tc1.368,0,2.479,1.11,2.479,2.48v7.729c0,1.368-1.111,2.481-2.479,2.481h-2.809v2.977c0,1.431,1.16,2.592,2.594,2.592h3.295\n\t\t\tl-2.976,6.208l8.584-6.208h13.355c1.435,0,2.595-1.161,2.595-2.592v-18.048C701.875,747.372,700.715,746.213,699.28,746.213\n\t\t\t M691.856,750.212c0,0.166-0.099,0.31-0.295,0.435c-0.291,0.195-0.435,0.478-0.435,0.847v12.88c0,0.37,0.136,0.655,0.412,0.849\n\t\t\tc0.187,0.131,0.281,0.277,0.281,0.436v0.512c0,0.152-0.079,0.227-0.239,0.227h-3.393c-0.188,0-0.284-0.082-0.284-0.248v-0.49\n\t\t\tc0-0.166,0.096-0.312,0.284-0.436c0.275-0.189,0.413-0.472,0.413-0.849v-5.907h-0.72c-0.186,0-0.361,0.055-0.521,0.16\n\t\t\tc-0.16,0.103-0.311,0.398-0.447,0.885c-0.063,0.211-0.115,0.34-0.155,0.387c-0.041,0.047-0.125,0.071-0.247,0.071h-0.533\n\t\t\tc-0.149,0-0.229-0.093-0.229-0.274v-3.752c0-0.172,0.095-0.26,0.282-0.26h0.479c0.138,0,0.223,0.02,0.257,0.06\n\t\t\tc0.033,0.04,0.093,0.2,0.179,0.485c0.116,0.383,0.229,0.639,0.343,0.764c0.111,0.127,0.312,0.192,0.592,0.192h0.72v-6.384h-1.145\n\t\t\tc-0.549,0-0.968,0.126-1.254,0.378c-0.289,0.255-0.488,0.747-0.604,1.478c-0.051,0.305-0.098,0.484-0.139,0.541\n\t\t\tc-0.04,0.053-0.123,0.08-0.255,0.08h-0.424c-0.212,0-0.315-0.093-0.315-0.281v-3.243c0-0.145,0.02-0.239,0.053-0.282\n\t\t\tc0.039-0.044,0.144-0.065,0.316-0.065c0.037,0,0.154,0.009,0.348,0.032c0.365,0.03,0.628,0.043,0.795,0.043h5.638\n\t\t\tc0.158,0,0.24,0.082,0.24,0.241V750.212z\"/>\n\t</g>\n\t<g>\n\t\t<path fill=\"#238FCF\" d=\"M676.855,762.039c-0.237-0.238-0.463-0.476-0.789-0.827c-0.727,0.676-1.541,0.964-2.468,0.964\n\t\t\tc-1.641,0-2.593-1.103-2.593-2.368c0-1.152,0.688-1.942,1.653-2.468v-0.038c-0.438-0.551-0.701-1.165-0.701-1.767\n\t\t\tc0-1.027,0.738-2.08,2.142-2.08c1.053,0,1.867,0.702,1.867,1.792c0,0.89-0.514,1.591-1.854,2.255v0.038\n\t\t\tc0.714,0.827,1.516,1.754,2.055,2.355c0.389-0.589,0.651-1.403,0.814-2.468h1.002c-0.226,1.328-0.589,2.38-1.215,3.12\n\t\t\tc0.45,0.476,0.889,0.952,1.391,1.491H676.855z M675.528,760.586c-0.501-0.551-1.441-1.579-2.381-2.656\n\t\t\tc-0.451,0.288-1.09,0.827-1.09,1.716c0,0.964,0.714,1.704,1.729,1.704C674.514,761.35,675.127,761.024,675.528,760.586z\n\t\t\t M672.96,755.437c0,0.602,0.275,1.065,0.639,1.516c0.852-0.489,1.403-0.94,1.403-1.654c0-0.514-0.288-1.09-0.978-1.09\n\t\t\tC673.323,754.209,672.96,754.786,672.96,755.437z\"/>\n\t</g>\n</g>\n</a>\n<g id=\"lifeline\">\n\t<path fill-rule=\"evenodd\" fill=\"none\" stroke=\"#ED145B\" stroke-width=\"2.9594\" stroke-miterlimit=\"10\" d=\"M45.749,263.686\n\t\tc0,0,128.451-0.846,258.228-0.584c32.683,0.063,26.091-18.948,39.901-18.948c13.811,0,11.825,19.022,41.78,18.79\n\t\tc13.959,0.184,26.474,0.346,41.41,0.49c31.9,0.135,25.73-49.361,44.366-49.361c18.635,0,11.062,49.904,42.592,49.975\n\t\tc196.096,0.969,432.558,0.637,432.558,0.637\"/>\n\t<g id=\"Ellipse_1\">\n\t\t<circle fill=\"#ED145B\" cx=\"37.167\" cy=\"263.686\" r=\"8.583\"/>\n\t</g>\n\t<g id=\"growth_stages\">\n\t\t<path id=\"old_2_\" fill=\"#554263\" d=\"M505.136,189.292c0.342-1.685-0.666-2.909-1.909-3.377c0.775-1.133,1.232-2.505,1.232-3.989\n\t\t\tc0-3.866-3.088-7.001-6.901-7.001c-3.811,0-6.901,3.135-6.901,7.001c0,3.868,3.09,7.002,6.901,7.002\n\t\t\tc0.666,0,1.304-0.1,1.912-0.279c-0.704,3.019-1.819,5.889-3.026,8.728c-0.651-1.013-1.325-2.013-1.982-3.022\n\t\t\tc0.907-4.445-3.805-9.742-8.9-6.791c-5.716,3.309-10.22,8.66-12.827,14.762c-1.302,3.048-0.879,6.53,2.202,8.334\n\t\t\tc0.092,0.056,0.191,0.1,0.288,0.148c0.542,0.393,1.207,0.662,2,0.738c5.921,0.569,11.899,0.682,17.859,0.726\n\t\t\tc-1.819,5.581-3.941,11.072-6.094,16.515c-1.872,4.728,5.657,6.761,7.503,2.097c2.798-7.07,5.548-14.224,7.641-21.548\n\t\t\tc0.889-3.11-1.807-5.078-4.254-4.86c-0.107-0.021-0.214-0.04-0.329-0.051C501.581,199.43,504.058,194.624,505.136,189.292z\n\t\t\t M490.583,198.779c1.191,1.804,2.353,3.625,3.288,5.586c-2.821-0.025-5.646-0.074-8.465-0.184\n\t\t\tC486.802,202.046,488.506,200.202,490.583,198.779z\"/>\n\t\t<path id=\"older_2_\" fill=\"#554263\" d=\"M349.294,188.247c-9.975,1.869-16.944,11.187-16.343,21.435\n\t\t\tc0.011,0.189,0.033,0.368,0.058,0.547c-0.366,1.837,0.324,4.01,2.493,4.896c3.459,1.418,7.407,3.581,8.714,7.368\n\t\t\tc1.398,4.055-1.631,8.376-4.075,11.275c-3.226,3.827,2.234,9.407,5.487,5.552c4.403-5.226,7.531-11.101,6.274-18.123\n\t\t\tc-0.035-0.193-0.09-0.376-0.133-0.564c0.299-0.43,0.517-0.941,0.583-1.561c0.805-7.585,2.917-14.945,3.646-22.543\n\t\t\tc0.594-1.29,0.776-2.785,0.42-4.116C355.549,189.126,352.411,187.664,349.294,188.247z M347.011,213.094\n\t\t\tc-0.783-0.692-1.617-1.333-2.491-1.922c0.071-0.435,0.098-0.903,0.07-1.407c-0.035-0.583-0.008-1.168,0.027-1.749\n\t\t\tc0.015-0.205,0.032-0.405,0.052-0.607c0.01-0.054,0.02-0.11,0.034-0.186c0.139-0.786,0.352-1.556,0.588-2.317\n\t\t\tc0.101-0.274,0.155-0.425,0.165-0.468c0.174-0.371,0.365-0.733,0.562-1.092c0.645-1.173,0.286-0.605,1.246-1.594\n\t\t\tc0.498-0.515,1.205-0.938,2.038-1.283C348.666,204.696,347.75,208.881,347.011,213.094z M369.03,190.552\n\t\t\tc0,3.395-2.72,6.148-6.075,6.148c-3.358,0-6.078-2.753-6.078-6.148c0-3.396,2.72-6.147,6.078-6.147\n\t\t\tC366.31,184.404,369.03,187.156,369.03,190.552z\"/>\n\t\t<g id=\"married_3_\">\n\t\t\t<path fill=\"#554263\" d=\"M310.222,217.412L310.222,217.412L310.222,217.412L310.222,217.412z M301.229,201.511\n\t\t\t\tc-0.536-1.28-1.549-2.312-2.811-2.88c0.005-0.052,0.016-0.104,0.016-0.159c0-1.329-1.077-2.406-2.408-2.406\n\t\t\t\tc-1.329,0-2.407,1.077-2.407,2.406c0,0.106,0.017,0.206,0.028,0.306c-1.197,0.632-2.128,1.697-2.595,2.983\n\t\t\t\tc-1.665,1.851-3.661,4.484-5.605,8.05c-1.893-2.446-5.057-3.787-8.072-4.567l-2.822,5.801l0.613-5.175h0.104v-0.859h-2.135v0.859\n\t\t\t\th0.109l0.724,5.179l-2.823-6.038c-0.262,0.073,0.065,0.012-0.184,0.108c-4.414,1.064-8.322,3.025-9.969,7.482\n\t\t\t\tc-1.736,4.7-0.996,10.46-0.437,15.206c0.346,2.944,5.006,2.976,4.656,0c-0.463-3.947-0.218-7.871-0.109-11.863\n\t\t\t\tc0.044-1.656,0.648-2.866,1.573-3.779l-0.053,20.432v20.342c0,1.674,1.225,3.027,2.945,3.027s3.114-1.354,3.114-3.027v-21.194\n\t\t\t\tc0,0,0.099-1.073,1.194-1.087c1.095-0.011,1.067,1.034,1.067,1.034v21.187c0,1.673,1.395,3.029,3.115,3.029\n\t\t\t\ts3.114-1.356,3.114-3.029l0.104-21.866c0-0.207,0.021-14.781,0.026-18.663c0.731,0.814,0.796,2.066,1.419,3.294\n\t\t\t\tc-0.184,0.459-0.365,0.927-0.543,1.409l-0.132,0.36h1.591c0.828,1.879,1.223,3.944,1.32,6.027\n\t\t\t\tc-0.113,1.261-0.165,2.539-0.173,3.822c-0.001,0.073,0.013,0.134,0.019,0.202c-0.339,2.969,4.312,2.932,4.657-0.009\n\t\t\t\tc0.209-1.793,0.112-3.566-0.161-5.33c0.165-1.232,0.457-2.431,0.973-3.621c0.468,0.783,1.847,3.742-0.337,8.867\n\t\t\t\tc-4.493,10.535-3.522,20.137-3.511,20.235c0.028,0.271,0.26,0.478,0.532,0.478h3.427v5.149c0,1.539,0.961,2.786,2.309,2.786\n\t\t\t\tc1.348,0,2.439-1.247,2.439-2.786v-5.149h1.773v5.097c0,1.537,1.09,2.783,2.442,2.783c1.348,0,2.44-1.246,2.44-2.783l0.041-5.097\n\t\t\t\th3.141c0.264,0,0.488-0.193,0.53-0.455c0.059-0.391,1.447-9.708-3.052-20.258c-1.764-4.142-1.22-6.848-0.689-8.16\n\t\t\t\tc0.862,2.312,1.751,5.227,1.767,8.05c0.018,2.76,4.298,2.76,4.28,0c-0.022-3.404-0.322-6.769-1.413-9.849h3.832l-0.113-0.352\n\t\t\t\tC309.937,216.551,306.708,207.022,301.229,201.511z M274.177,223.227c-0.524,0-0.948-0.425-0.948-0.95\n\t\t\t\tc0-0.522,0.424-0.949,0.948-0.949c0.523,0,0.949,0.426,0.949,0.949C275.127,222.802,274.701,223.227,274.177,223.227z\n\t\t\t\t M274.177,220.242c-0.524,0-0.948-0.425-0.948-0.949c0-0.524,0.424-0.948,0.948-0.948c0.523,0,0.949,0.424,0.949,0.948\n\t\t\t\tC275.127,219.816,274.701,220.242,274.177,220.242z M274.248,217.255c-0.525,0-0.949-0.426-0.949-0.95\n\t\t\t\tc0-0.523,0.424-0.948,0.949-0.948c0.523,0,0.949,0.425,0.949,0.948C275.197,216.829,274.771,217.255,274.248,217.255z\n\t\t\t\t M278.14,211.877l0.473-1.382l-1.455,1.964l1.455-3.928l0.51,3.928L278.14,211.877z M282.815,216.877\n\t\t\t\tc0.08-0.209,0.161-0.413,0.241-0.617c0.115,0.204,0.224,0.409,0.328,0.617H282.815z M291.259,203.573\n\t\t\t\tc0.743-0.232,2.067-0.771,3.199-1.902c2.975,2.376,5.793,2.217,6.648,2.102c-0.085,2.64-2.255,4.766-4.918,4.766\n\t\t\t\tc-2.718,0-4.928-2.209-4.928-4.926C291.257,203.6,291.259,203.586,291.259,203.573z M301.462,227.792\n\t\t\t\tc3.822,8.969,3.247,17.233,3.031,19.222h-17.042c-0.129-2.035-0.348-10.277,3.462-19.222c2.198-5.146,1.065-8.371,0.408-9.604\n\t\t\t\tc0.559-0.229,1.557-0.569,2.863-0.775h4.381c1.188,0.198,2.033,0.519,2.509,0.741\n\t\t\t\tC300.421,219.362,299.246,222.598,301.462,227.792z M293.126,211.974c-0.481,0-0.871-0.389-0.871-0.87\n\t\t\t\tc0-0.48,0.39-0.869,0.871-0.869c0.479,0,0.868,0.389,0.868,0.869C293.994,211.584,293.605,211.974,293.126,211.974z\n\t\t\t\t M294.864,213.939c0,0.48-0.39,0.87-0.87,0.87c-0.481,0-0.868-0.389-0.868-0.87c0-0.479,0.386-0.869,0.868-0.869\n\t\t\t\tC294.474,213.071,294.864,213.46,294.864,213.939z M295.357,215.733c0-0.48,0.389-0.869,0.87-0.869\n\t\t\t\tc0.06,0,0.118,0.004,0.176,0.018c0.459,0.023,0.826,0.4,0.826,0.865c0,0.159-0.045,0.309-0.121,0.437\n\t\t\t\tc-0.227-0.01-0.46-0.017-0.704-0.017c-0.309,0-0.605,0.011-0.896,0.028C295.42,216.061,295.357,215.907,295.357,215.733z\n\t\t\t\t M299.464,213.954c0,0.479-0.39,0.869-0.869,0.869c-0.481,0-0.871-0.39-0.871-0.869s0.39-0.869,0.871-0.869\n\t\t\t\tC299.074,213.084,299.464,213.474,299.464,213.954z M298.595,211.119c0-0.481,0.389-0.871,0.869-0.871\n\t\t\t\tc0.479,0,0.869,0.389,0.869,0.871c0,0.479-0.391,0.869-0.869,0.869C298.984,211.988,298.595,211.598,298.595,211.119z\n\t\t\t\t M306.199,216.877c-0.74-1.903-1.799-3.69-3.301-5.3c-0.726-0.775-4.865-2.277-6.526-2.277c-1.689,0-5.92,1.464-6.681,2.277\n\t\t\t\tc-0.901,0.967-1.637,2-2.248,3.082c-0.199-0.684-0.399-1.37-0.591-2.06c-0.239-0.855-0.604-1.617-1.059-2.302\n\t\t\t\tc1.689-3.15,3.43-5.569,4.951-7.368c-0.041,0.262-0.065,0.525-0.065,0.797c0,0,0.021-0.004,0.051-0.012\n\t\t\t\tc0.057,2.965,2.481,5.357,5.458,5.357c3.011,0,5.462-2.449,5.462-5.46c0-0.32-0.033-0.632-0.086-0.938\n\t\t\t\tc4.437,4.963,7.299,12.496,7.913,14.203H306.199z M273.85,203.855c2.925,0,5.295-2.37,5.295-5.294\n\t\t\t\tc0-2.922-2.37-5.292-5.295-5.292c-2.924,0-5.295,2.37-5.295,5.292C268.555,201.485,270.926,203.855,273.85,203.855z\"/>\n\t\t</g>\n\t\t<g id=\"graduated_3_\">\n\t\t\t<path fill=\"#554263\" d=\"M221.743,201.814c0,2.791,2.259,5.052,5.044,5.052c2.784,0,5.043-2.261,5.043-5.052H221.743z\n\t\t\t\t M221.164,201.046l11.46-0.044l-0.004-0.786l1.119-0.625c0.158,0.18,0.285,0.387,0.354,0.616\n\t\t\t\tc0.104,0.354,0.048,0.716-0.174,1.108c-0.381,0.676-0.44,1.173-0.178,1.479c0.139,0.166,0.36,0.236,0.623,0.236\n\t\t\t\tc0.443-0.002,1.017-0.213,1.556-0.531l0.014,0.058l1.64-0.583l-0.144-0.551l-1.076,0.383l-0.037-0.064\n\t\t\t\tc-0.067,0.052-0.134,0.1-0.2,0.148l-0.324,0.116l0.022,0.083c-0.822,0.5-1.61,0.648-1.817,0.405\n\t\t\t\tc-0.119-0.135-0.032-0.488,0.223-0.945c0.283-0.501,0.353-0.999,0.214-1.48c-0.074-0.251-0.2-0.472-0.355-0.67l0.267-0.149\n\t\t\t\tl-7.745-4.66l-6.938,4.713l1.496,0.776L221.164,201.046z M223.456,207.828l3.44,8.147l4.163-8.064\n\t\t\t\tC228.65,207.549,225.764,207.625,223.456,207.828z M234.818,209.625c-0.141-0.166-0.292-0.302-0.445-0.425\n\t\t\t\tc-0.075-0.155-0.167-0.299-0.28-0.428c-0.196-0.098-0.409-0.188-0.63-0.27l-6.784,13.146l-5.711-13.522\n\t\t\t\tc-0.12,0.019-0.247,0.037-0.354,0.055c-3.123-3.489-5.323-7.671-6.626-12.327c-0.099-0.353-0.25-0.646-0.418-0.912l4.103,0.459\n\t\t\t\tl0.251-2.263l-14.615-1.637l-0.251,2.263l5.688,0.638c-0.842,0.694-1.33,1.786-0.946,3.161c2.08,7.433,6.1,13.681,11.895,18.534\n\t\t\t\tl-3.584,27.806h3.66l0.046,9.754c0,1.598,1.327,2.891,2.967,2.891c1.638,0,2.968-1.293,2.968-2.891v-9.754h2.152v9.81\n\t\t\t\tc0,1.595,1.328,2.89,2.966,2.89s2.802-1.295,2.802-2.89v-9.81h3.295l-1.544-14.587c1.759,1.776,5.604,1.07,5.556-2.148\n\t\t\t\tC240.875,220.62,239.116,214.639,234.818,209.625z\"/>\n\t\t</g>\n\t\t<g id=\"child_3_\">\n\t\t\t<path fill=\"#554263\" d=\"M37.149,217.647c3.196,0,5.787-2.569,5.787-5.739c0-3.169-2.591-5.74-5.787-5.74\n\t\t\t\tc-3.196,0-5.788,2.57-5.788,5.74C31.362,215.079,33.953,217.647,37.149,217.647z M50.382,226.969\n\t\t\t\tc-3.131-2.397-6.369-4.639-9.889-6.442c-0.997-0.805-2.254-1.296-3.624-1.306c-1.521-0.01-2.934,0.59-4,1.559\n\t\t\t\tc-2.859,1.619-5.546,3.505-8.156,5.503c-1.192,0.911-1.828,2.338-0.993,3.751c0.689,1.167,2.588,1.901,3.785,0.986\n\t\t\t\tc1.13-0.866,2.277-1.711,3.443-2.522v1.183h11.758v-1.476c1.67,1.102,3.292,2.283,4.884,3.5c1.197,0.917,3.096,0.183,3.785-0.985\n\t\t\t\tC52.21,229.308,51.573,227.881,50.382,226.969z M38.519,237.301c0.41-0.264,0.623-0.551,0.623-0.551l3.564-4.208v-2.52H30.96\n\t\t\t\tl0.04,2.062l3.196,4.476l0.075,0.075c0.47,0.349,0.937,0.618,1.388,0.802l0.068,0.019c0.395,0.074,0.73,0.109,1.057,0.111h0.034\n\t\t\t\tc0.52,0,1.06-0.077,1.605-0.225L38.519,237.301z M36.818,236.883v0.344l-0.03-0.344c-0.274,0-0.561-0.03-0.898-0.091\n\t\t\t\tc-0.374-0.156-0.764-0.383-1.161-0.671l-3.041-4.26l-0.021-1.15h10.35v1.582l-3.417,4.036c-0.004,0.003-0.142,0.188-0.412,0.37\n\t\t\t\tC37.719,236.821,37.259,236.883,36.818,236.883z M34,236.86l-0.055-0.058l-3.208-4.492c-2.235,2.106-3.761,4.597-3.833,7.723\n\t\t\t\tc-0.071,3.081,2.06,5.811,4.289,7.705c2.693,2.288,6.625-1.575,3.911-3.879C32.323,241.494,31.829,239.327,34,236.86z\n\t\t\t\t M39.423,236.948c-0.001,0.002-0.016,0.02-0.025,0.035c2.401,2.559,1.969,4.784-0.896,7.218\n\t\t\t\tc-2.714,2.304,1.218,6.167,3.911,3.878c2.432-2.064,4.008-4.507,4.289-7.703c0.258-2.937-1.694-5.684-3.721-7.623L39.423,236.948\n\t\t\t\tz\"/>\n\t\t</g>\n\t</g>\n</g>\n<g id=\"sub-header\">\n\t<text transform=\"matrix(1.0003 0 0 1 308.4204 161.8794)\" fill=\"#554263\" font-family=\"'Verdana, sans-serif'\" font-size=\"16.2095\" font-style=\"italic\">quarter-life crisis</text>\n\t<text transform=\"matrix(1.0003 0 0 1 445.6016 161.8794)\" fill=\"#554263\" font-family=\"'Verdana, sans-serif'\" font-size=\"16.2095\" font-style=\"italic\">mid-life crisis</text>\n</g>\n<g id=\"header\">\n\t<g id=\"author\">\n\t\t<a xlink:href=\"http://fundersandfounders.com/author/anna-vital/\" target=\"_top\"><text transform=\"matrix(1 0 0 1 840.0454 92.1748)\" fill=\"#8E8099\" font-family=\"'HelveticaCYPlain'\" font-size=\"19\">by Anna Vital</text>\n\t\t</a>\n\t</g>\n\t\n\t\t<text transform=\"matrix(1.0026 0 0 1 159.4043 90.1201)\" fill=\"#554263\" style=\"font-family: Lucida, sans-serif; font-stretch: condensed; font-weight: bold; \" font-size=\"60\">TOO LATE TO START?</text>\n\t\n\t<text transform=\"matrix(1.0003 0 0 1 35.4619 322.2427)\" fill=\"#C2BFC7\" font-family=\"'Helvetica-Oblique'\" font-size=\"16.2095\">years of life</text>\n</g>\n</svg>\n</div>\n<script type=\"text/javascript\">\nvar FnF = FnF || {};\nFnF.founders = {\n \"name\": \"Founders\",\n \"children\": [\n  {\n   \"name\": \"15..19\",\n   \"range\" : 15,\n   \"children\": [\t\t\n\t\t{\"company\": \"Dell\", \"name\": \"Michael\", \"lastname\": \"Dell\", \"birth\": \"1965\", \"founded\": \"1984-11-04\", \"age\": 18, \"more\" : \"assembling computers \\n in his college apartment\", \"link\" : \"en.wikipedia.org/wiki/Michael_Dell\"},\n\t\t{\"company\": \"UPS\", \"name\": \"James\", \"lastname\" : \"Casey\", \"birth\": \"1888-03-29\", \"founded\": \"1907-08-28\", \"age\": 19, \"more\" : \"delivering packages \\n on $100 borrowed from a friend\", \"link\" : \"en.wikipedia.org/wiki/James_E._Casey\"},\n\t\t{\"company\": \"Facebook\", \"name\": \"Mark\", \"lastname\": \"Zuckerberg\", \"birth\": \"1984-05-14\", \"founded\": \"2004-02-04\", \"age\": 19, \"more\" : \"launching the website \\n at his dorm room in Harvard\", \"link\" : \"en.wikipedia.org/wiki/Mark_Zuckerberg\"}\t\t\n  ]},\n  {\n   \"name\": \"20..24\",\n   \"range\" : 20,\n   \"children\": [\t\t\n\t\t{\"company\": \"Microsoft\", \"name\": \"Bill\", \"lastname\" : \"Gates\", \"birth\": \"1955-10-28\", \"founded\": \"1975-04-04\", \"age\": 20, \"more\" : \"selling a program \\nhe did not have\", \"link\" : \"en.wikipedia.org/wiki/Bill_Gates\"},\n\t\t{\"company\": \"Apple\", \"name\": \"Steve\", \"lastname\" : \"Jobs\", \"birth\": \"1955-02-24\", \"founded\": \"1976-04-01\", \"age\": 21, \"more\" : \"making computers in garage\", \"link\" : \"en.wikipedia.org/wiki/Steve_Jobs\"},\n\t\t{\"company\": \"Burberry\", \"name\": \"Thomas\", \"lastname\" : \"Burberry\", \"birth\": \"1835-08-27\", \"founded\": \"1856\", \"age\": 21, \"more\" : \"selling sports clothes \\n from a small London shop\", \"link\" : \"en.wikipedia.org/wiki/Thomas_Burberry\"},\n\t\t{\"company\": \"Tesco\", \"name\": \"Jack\", \"lastname\" : \"Cohen\", \"birth\": \"1898-10-06\", \"founded\": \"1919\", \"age\": 21, \"more\" : \"buying one market stall\", \"link\" : \"en.wikipedia.org/wiki/Jack_Cohen_(businessman)\"},\n\t\t{\"company\": \"Harley-Davidson\", \"name\": \"Arthur\", \"lastname\" : \"Davidson\", \"birth\": \"1881-02-11\", \"founded\": \"1903\", \"age\": 22, \"more\" : \"making a bike easy \\nfor him to go fishing\", \"link\" : \"en.wikipedia.org/wiki/Arthur_Davidson_(motorcycling)\"},\n\t\t{\"company\": \"Microsoft\", \"name\": \"Paul\", \"lastname\" : \"Allen\", \"birth\": \"1953-01-21\", \"founded\": \"1975-04-04\", \"age\": 22, \"more\" : \"selling a program \\nhe did not have\", \"link\" : \"en.wikipedia.org/wiki/Paul_Allen\"},\n\t\t{\"company\": \"Walt Disney\", \"name\": \"Walt\", \"lastname\" : \"Disney\", \"birth\": \"1901-12-05\", \"founded\": \"1923-10-16\", \"age\": 22, \"more\" : \"after his other studio went bust\", \"link\" : \"en.wikipedia.org/wiki/Walt_Disney\"},\n\t\t{\"company\": \"Heineken\", \"name\": \"Gerard\", \"lastname\" : \"Heineken\", \"birth\": \"1841-09-29\", \"founded\": \"1864\", \"age\": 23, \"more\" : \"the first brewery \\nto have a lab\", \"link\" : \"en.wikipedia.org/wiki/Gerard_Adriaan_Heineken\"},\n\t\t{\"company\": \"Harley-Davidson\", \"name\": \"William\", \"lastname\" : \"Harley\", \"birth\": \"1880-12-29\", \"founded\": \"1903\", \"age\": 23, \"more\" : \"making bikes \\n with his friend Arthur\", \"link\" : \"en.wikipedia.org/wiki/William_S._Harley\"}\n  ]},\n  {\n   \"name\": \"25..29\",\n   \"range\" : 25,\n   \"children\": [\t\t\n\t\t{\"company\": \"Best Buy\", \"name\": \"Richard\", \"lastname\" : \"Schulze\", \"birth\": \"1941\", \"founded\": \"1966\", \"age\": 25, \"more\" : \"mortgaging his home \\n to open an audio store\", \"link\" : \"en.wikipedia.org/wiki/Richard_M._Schulze\"},\n\t\t{\"company\": \"Google\", \"name\": \"Sergey\", \"lastname\" : \"Brin\", \"birth\": \"1973-08-21\", \"founded\": \"1998-09-04\", \"age\": 25, \"more\" : \"cramming his dorm with cheap \\ncomputers to index the web\", \"link\" : \"en.wikipedia.org/wiki/Sergey_Brin\"},\n\t\t{\"company\": \"Google\", \"name\": \"Larry\", \"lastname\" : \"Page\", \"birth\": \"1973-03-26\", \"founded\": \"1998-09-04\", \"age\": 25, \"more\" : \"cramming his dorm with cheap \\ncomputers to index the web\", \"link\" : \"en.wikipedia.org/wiki/Larry_Page\"},\n\t\t{\"company\": \"HP\", \"name\": \"William\", \"lastname\" : \"Hewlett\", \"birth\": \"1913-05-20\", \"founded\": \"1939-01-01\", \"age\": 25, \"more\" : \"making a sound oscillator \\nsold to Disney\", \"link\" : \"en.wikipedia.org/wiki/William_Redington_Hewlett\"},\n\t\t{\"company\": \"Sony\", \"name\": \"Akio\", \"lastname\" : \"Morita\", \"birth\": \"1921-01-26\", \"founded\": \"1946-05-07\", \"age\": 25, \"more\" : \"creating audio tape\", \"link\" : \"en.wikipedia.org/wiki/Akio_Morita\"},\n\t\t{\"company\": \"Apple\", \"name\": \"Steve\", \"lastname\" : \"Wozniak\", \"birth\": \"1950-08-11\", \"founded\": \"1976-04-01\", \"age\": 26, \"more\" : \"designed a computer \\nall by himself\", \"link\" : \"en.wikipedia.org/wiki/Steve_Wozniak\"},\n\t\t{\"company\": \"HP\", \"name\": \"David\", \"lastname\" : \"Packard\", \"birth\": \"1912-09-07\", \"founded\": \"1939-01-01\", \"age\": 26, \"more\" : \"making a sound oscillator \\nsold to Disney\", \"link\" : \"en.wikipedia.org/wiki/David_Packard\"},\n\t\t{\"company\": \"Nike\", \"name\": \"Phil\", \"lastname\" : \"Knight\", \"birth\": \"1938-02-24\", \"founded\": \"1964-01-25\", \"age\": 26, \"more\" : \"cold calling a running \\nshoe firm in Japan\", \"link\" : \"en.wikipedia.org/wiki/Phil_Knight\"},\n\t\t{\"company\": \"AOL\", \"name\": \"Steve\", \"lastname\" : \"Case\", \"birth\": \"1958-08-21\", \"founded\": \"1985\", \"age\": 27, \"more\" : \"letting  people connect \\nthrough Internet portal\", \"link\" : \"en.wikipedia.org/wiki/Steve_Case\" },\t\t\n\t\t{\"company\": \"Whole Foods\", \"name\": \"John\", \"lastname\" : \"Mackey\", \"birth\": \"1953-08-15\", \"founded\": \"1980\", \"age\": 27, \"more\" : \"opening a health food store \\nwith his girlfriend\", \"link\" : \"en.wikipedia.org/wiki/John_Mackey(businessman)\"},\n\t\t{\"company\": \"FedEx\", \"name\": \"Fred\", \"lastname\" : \"Smith\", \"birth\": \"1944-08-11\", \"founded\": \"1971-06-18\", \"age\": 27, \"more\" : \"based on his college paper \\nabout overnight delivery\", \"link\" : \"en.wikipedia.org/wiki/Frederick_W._Smith\"},\n\t\t{\"company\": \"Walgreens\", \"name\": \"Charles\", \"lastname\" : \"Walgreen\", \"birth\": \"1873-10-09\", \"founded\": \"1901\", \"age\": 28, \"more\" : \"buying a pharmacy \\nfrom his boss\", \"link\" : \"en.wikipedia.org/wiki/Charles_Rudolph_Walgreen\"},\n\t\t{\"company\": \"eBay\", \"name\": \"Pierre\", \"lastname\" : \"Omidyar\", \"birth\": \"1967-06-21\", \"founded\": \"1995-09-03\", \"age\": 28, \"more\" : \"writing code for \\nauction website\", \"link\" : \"en.wikipedia.org/wiki/Pierre_Omidyar\"},\n\t\t{\"company\": \"L'Oral\", \"name\": \"Eugne\", \"lastname\" : \"Schueller\", \"birth\": \"1881-03-20\", \"founded\": \"1909\", \"age\": 28, \"more\" : \"with a new hair dye formula\", \"link\" : \"en.wikipedia.org/wiki/Eugne_Schueller\"},\n\t\t{\"company\": \"Cisco\", \"name\": \"Sandra\", \"lastname\" : \"Lerner\", \"birth\": \"1955\", \"founded\": \"1984-12\", \"age\": 28, \"more\" : \"selling routers through \\nword of mouth\", \"link\" : \"en.wikipedia.org/wiki/Sandra_Lerner\"},\n\t\t{\"company\": \"Expedia\", \"name\": \"Richard\", \"lastname\" : \"Barton\", \"birth\": \"1967-06-02\", \"founded\": \"1996\", \"age\": 29, \"more\" : \"while working at Microsoft\", \"link\" : \"en.wikipedia.org/wiki/Rich_Barton\"},\n\t\t{\"company\": \"Rolls-Royce\", \"name\": \"Charles\", \"lastname\" : \"Rolls\", \"birth\": \"1877-08-27\", \"founded\": \"1906\", \"age\": 29, \"more\" : \"selling all cars \\nhis partner made\", \"link\" : \"en.wikipedia.org/wiki/Charles_Rolls\"},\n\t\t{\"company\": \"Visa\", \"name\": \"Dee\", \"lastname\" : \"Hock\", \"birth\": \"1929\", \"founded\": \"1958\", \"age\": 29, \"more\" : \"convincing banks to give up \\nownership of credit cards\", \"link\" : \"en.wikipedia.org/wiki/Dee_Hock\"}\n   ]},\n  {\n   \"name\": \"30..34\",\n   \"range\" : 30,\n   \"children\": [\t\t\n\t\t{\"company\": \"Amazon\", \"name\": \"Jeff\", \"lastname\" : \"Bezos\", \"birth\": \"1964-01-12\", \"founded\": \"1994\", \"age\": 30, \"more\" : \"pioneering e-commerce, \\nstarting selling books\", \"link\" : \"en.wikipedia.org/wiki/Jeff_Bezos\"},\n\t\t{\"company\": \"H&M\", \"name\": \"Erling\", \"lastname\" : \"Persson\", \"birth\": \"1917-01-21\", \"founded\": \"1947\", \"age\": 30, \"more\" : \"selling women's clothing\", \"link\" : \"en.wikipedia.org/wiki/Erling_Persson\"},\n\t\t{\"company\": \"Nintendo\", \"name\": \"Fusajiro\", \"lastname\" : \"Yamauchi\", \"birth\": \"1859-11-22\", \"founded\": \"1889-09-23\", \"age\": 30, \"more\" : \"from a small hanafuda \\ngame firm\", \"link\" : \"en.wikipedia.org/wiki/Hiroshi_Yamauchi\"},\n\t\t{\"company\": \"Cisco\", \"name\": \"Leonard\", \"lastname\" : \"Bosack\", \"birth\": \"1952\", \"founded\": \"1984-12\", \"age\": 31, \"more\" : \"selling routers through \\nword of mouth\", \"link\" : \"en.wikipedia.org/wiki/Erling_Persson\"},\n\t\t{\"company\": \"Intuit\", \"name\": \"Scott\", \"lastname\" : \"Cook\", \"birth\": \"1952\", \"founded\": 1983, \"age\": 31, \"more\" : \"after hearing wife's complain \\nabout paying bills\", \"link\" : \"en.wikipedia.org/wiki/Scott_Cook\"},\n\t\t{\"company\": \"Siemens\", \"name\": \"Werner\", \"lastname\" : \"von Siemens\", \"birth\": \"1816-12-13\", \"founded\": \"1847-10-12\", \"age\": 31, \"more\" : \"inventing needle telegraph\", \"link\" : \"en.wikipedia.org/wiki/Werner_von_Siemens\"},\n\t\t{\"company\": \"Xerox\", \"name\": \"Chester\", \"lastname\" : \"Carlson\", \"birth\": \"1906-02-08\", \"founded\": \"1938\", \"age\": 32, \"more\" : \"after 22 years of trying \\nto make a dry copy\", \"link\" : \"en.wikipedia.org/wiki/Chester_Carlson\"},\n\t\t{\"company\": \"Acer\", \"name\": \"Stan\", \"lastname\" : \"Shih\", \"birth\": \"1944-12-08\", \"founded\": \"1976\", \"age\": 32, \"more\" : \"selling clones of Apple II \\ncomputer\", \"link\" : \"en.wikipedia.org/wiki/Stan_Shih\"},\n\t\t{\"company\": \"Baidu\", \"name\": \"Robin\", \"lastname\" : \"Li\", \"birth\": \"1968-11-17\", \"founded\": \"2000-01-01\", \"age\": 32, \"more\" : \"developing search algorithms \\nbefore Google\", \"link\" : \"en.wikipedia.org/wiki/Robin_Li\"},\n\t\t{\"company\": \"Peugeot\", \"name\": \"Armand\", \"lastname\" : \"Peugeot\", \"birth\": \"1849-03-26\", \"founded\": \"1882\", \"age\": 32, \"more\" : \"producing coffee grinders \\nand bicycles\", \"link\" : \"en.wikipedia.org/wiki/Armand_Peugeot\"},\n\t\t{\"company\": \"Oracle\", \"name\": \"Larry\", \"lastname\" : \"Ellison\", \"birth\": \"1944-08-17\", \"founded\": \"1977\", \"age\": 33, \"more\" : \"making a database \\nfor the CIA\", \"link\" : \"en.wikipedia.org/wiki/Larry_Ellison\"},\n\t\t{\"company\": \"Procter & Gamble\", \"name\": \"James\", \"lastname\" : \"Gamble\", \"birth\": \"1803-04-03\", \"founded\": \"1837-10-31\", \"age\": 33, \"more\" : \"having invented the formula \\nof ivory soap\", \"link\" : \"en.wikipedia.org/wiki/James_Gamble_%28industrialist%29\"},\n\t\t{\"company\": \"Wells Fargo\", \"name\": \"William\", \"lastname\" : \"Fargo\", \"birth\": \"1818-05-20\", \"founded\": \"1852-03-18\", \"age\": 34, \"more\" : \"pioneering banking \\nin California\", \"link\" : \"en.wikipedia.org/wiki/William_Fargo\"}\n  ]},\n  {\n   \"name\": \"35..39\",\n   \"range\" : 35,\n   \"children\": [\t\n   \t\t{\"company\": \"Procter&Gamble\", \"name\": \"William\", \"lastname\" : \"Procter\", \"birth\": \"1801-12-07\", \"founded\": \"1837-10-31\", \"age\": 35, \"more\" : \"making candles with \\nhis brother-in-law\", \"link\" : \"http://en.wikipedia.org/wiki/William_Procter_%28candlemaker%29\"},\t\n\t\t{\"company\": \"Boeing\", \"name\": \"William\", \"lastname\" : \"Boeing\", \"birth\": \"1881-10-01\", \"founded\": \"1916-07-15\", \"age\": 35, \"more\" : \"after crashing his plane, \\nunable to repair it\", \"link\" : \"en.wikipedia.org/wiki/William_Boeing\"},\n\t\t{\"company\": \"Salesforce\", \"name\": \"Marc\", \"lastname\" : \"Benioff\", \"birth\": \"1964-09-25\", \"founded\": \"1999\", \"age\": 35, \"more\" : \"in his apartment proclaiming \\n'The End of Software'\", \"link\" : \"en.wikipedia.org/wiki/Marc_Benioff\"},\n\t\t{\"company\": \"Carlsberg\", \"name\": \"J. C.\", \"lastname\" : \"Jacobsen\", \"birth\": \"1811-09-02\", \"founded\": \"1847\", \"age\": 36, \"more\" : \"using science to make good \\nbeer consistently\", \"link\" : \"en.wikipedia.org/wiki/J._C._Jacobsen\"},\n\t\t{\"company\": \"Hitachi\", \"name\": \"Namihei\", \"lastname\" : \"Odaira\", \"birth\": \"1874\", \"founded\": \"1910\", \"age\": 36, \"more\" : \"creating electric motor\\n while working in a mine\", \"link\" : \"en.wikipedia.org/wiki/Namihei_Odaira\"},\n\t\t{\"company\": \"LinkedIn\", \"name\": \"Reid\", \"lastname\" : \"Hoffman\", \"birth\": \"1967-08-05\", \"founded\": \"2003-05\", \"age\": 36, \"more\" : \"creating first business-minded \\nsocial network in 2002\", \"link\" : \"en.wikipedia.org/wiki/Reid_Hoffman\"},\n\t\t{\"company\": \"Macy's\", \"name\": \"Rowland\", \"lastname\" : \"Macy\", \"birth\": \"1822-08-30\", \"founded\": \"1858\", \"age\": 36, \"more\" : \"as a dried goods store in NYC \\nafter 4 of his stores failed\", \"link\" : \"en.wikipedia.org/wiki/Rowland_Hussey_Macy\"},\n\t\t{\"company\": \"Gap\", \"name\": \"Doris\", \"lastname\" : \"Fisher\", \"birth\": \"1932\", \"founded\": \"1969\", \"age\": 37, \"more\" : \"selling Levi's jeans \\nand music records\", \"link\" : \"en.wikipedia.org/wiki/Doris_F._Fisher\"},\n\t\t{\"company\": \"Hershey's\", \"name\": \"Milton\", \"lastname\" : \"Hershey\", \"birth\": \"1857-09-13\", \"founded\": \"1894\", \"age\": 37, \"more\" : \"making fresh-milk caramels \\nand hawking them by night\", \"link\" : \"en.wikipedia.org/wiki/Milton_S._Hershey\"},\n\t\t{\"company\": \"Hugo Boss\", \"name\": \"Hugo\", \"lastname\" : \"Boss\", \"birth\": \"1885-07-08\", \"founded\": \"1923\", \"age\": 38, \"more\" : \"with six sewing machines \\nleft from his bankruptcy\", \"link\" : \"en.wikipedia.org/wiki/Hugo_Boss_(fashion_designer)\"},\n\t\t{\"company\": \"Sony\", \"name\": \"Masaru\", \"lastname\" : \"Ibuka\", \"birth\": \"1908-04-11\", \"founded\": \"1946-05-07\", \"age\": 38, \"more\" : \"applying transistor technology \\nto non-military uses\", \"link\" : \"en.wikipedia.org/wiki/Masaru_Ibuka\"},\n\t\t{\"company\": \"Public Storage\", \"name\": \"Wayne\", \"lastname\" : \"Hughes\", \"birth\": \"1934-09-28\", \"founded\": \"1972\", \"age\": 38, \"more\" : \"pioneering self-storage\", \"link\" : \"en.wikipedia.org/wiki/B._Wayne_Hughes\"},\n\t\t{\"company\": \"Garmin\", \"name\": \"Min\", \"lastname\" : \"Kao\", \"birth\": \"1949\", \"founded\": \"1989\", \"age\": 39, \"more\" : \"applying GPS technology \\nto non-military uses\", \"link\" : \"en.wikipedia.org/wiki/Min_Kao\"},\n\t\t{\"company\": \"HTC\", \"name\": \"Cher\", \"lastname\" : \"Wang\", \"birth\": \"1958-09-14\", \"founded\": \"1997-05-15\", \"age\": 39, \"more\" : \"making tablets and \\nsmartphones\", \"link\" : \"en.wikipedia.org/wiki/Cher_Wang\"},\n\t\t{\"company\": \"Zara (Inditex)\", \"name\": \"Amancio\", \"lastname\" : \"Ortega\", \"birth\": \"1936-03-28\", \"founded\": \"1975\", \"age\": 39, \"more\" : \"organizing local women into \t\\na bathrobe sewing firm\", \"link\" : \"en.wikipedia.org/wiki/Amancio_Ortega_Gaona\"},\n\t\t{\"company\": \"Intel\", \"name\": \"Gordon\", \"lastname\" : \"Moore\", \"birth\": \"1929-01-03\", \"founded\": \"1968-07-18\", \"age\": 39, \"more\" : \"creating a faster RAM \\nmemory chips\", \"link\" : \"en.wikipedia.org/wiki/Gordon_Moore\"},\n\t\t{\"company\": \"Lenovo\", \"name\": \"Liu\", \"lastname\" : \"Chuanzhi\", \"birth\": \"1944-04-29\", \"founded\": \"1984\", \"age\": 39, \"more\" : \"importing TVs and \\nservicing computers\", \"link\" : \"en.wikipedia.org/wiki/Liu_Chuanzhi\"}\n  ]},\n  {\n   \"name\": \"40..44\",\n   \"range\" : 40,\n   \"children\": [\t\t\n\t\t{\"company\": \"Costco\", \"name\": \"Jeffrey\", \"lastname\" : \"Brotman\", \"birth\": \"1943\", \"founded\": \"1983-09-15\", \"age\": 40, \"more\" : \"converting a plane hangar \\ninto a warehouse for shopping\", \"link\" : \"en.wikipedia.org/wiki/Jeffrey_Brotman\"},\n\t\t{\"company\": \"Ford\", \"name\": \"Henry\", \"lastname\" : \"Ford\", \"birth\": \"1863-07-30\", \"founded\": \"1903-06-16\", \"age\": 40, \"more\" : \"wanting to build \\na car for the masses\", \"link\" : \"en.wikipedia.org/wiki/Henry_Ford\"},\n\t\t{\"company\": \"Volvo\", \"name\": \"Gustaf\", \"lastname\" : \"Larson\", \"birth\": \"1887-07-08\", \"founded\": \"1927\", \"age\": 40, \"more\" : \"making an oral contract with \\nco-founder to make first 10 cars\", \"link\" : \"en.wikipedia.org/wiki/Gustaf_Larson\"},\n\t\t{\"company\": \"Christian Dior\", \"name\": \"Christian\", \"lastname\" : \"Dior\", \"birth\": \"1905\", \"founded\": \"1946-12-16\", \"age\": 41, \"more\" : \"inventing a voluptuous look \\namid boxy post-war styles\", \"link\" : \"en.wikipedia.org/wiki/Christian_Dior\"},\n\t\t{\"company\": \"Gap\", \"name\": \"Donald\", \"lastname\" : \"Fisher\", \"birth\": \"1928-09-03\", \"founded\": \"1969\", \"age\": 41, \"more\" : \"selling Levi's jeans \\nand music records\", \"link\" : \"en.wikipedia.org/wiki/Donald_Fisher\"},\n\t\t{\"company\": \"Intel\", \"name\": \"Robert\", \"lastname\" : \"Noyce\", \"birth\": \"1927-12-12\", \"founded\": \"1968-07-18\", \"age\": 41, \"more\" : \"co-inventing \\nthe integrated circuit\", \"link\" : \"en.wikipedia.org/wiki/Robert_Noyce\"},\n\t\t{\"company\": \"Coca-Cola\", \"name\": \"Asa\", \"lastname\" : \"Candler\", \"birth\": \"1851-12-30\", \"founded\": \"1892\", \"age\": 41, \"more\" : \"buying the Coca-Cola recipe \\nfor $550 (about $14,000 today)\", \"link\" : \"en.wikipedia.org/wiki/Asa_Griggs_Candler\"},\n\t\t{\"company\": \"Adobe\", \"name\": \"John\", \"lastname\" : \"Warnock\", \"birth\": \"1940-10-06\", \"founded\": \"1982-12\", \"age\": 42, \"more\" : \"creating PostScript, \\npage description language\", \"link\" : \"en.wikipedia.org/wiki/John_Warnock\"},\n\t\t{\"company\": \"Lululemon\", \"name\": \"Chip\", \"lastname\" : \"Wilson\", \"birth\": \"1956-03-03\", \"founded\": \"1998\", \"age\": 42, \"more\" : \"creating cotton yoga pants \\nfor active women\", \"link\" : \"en.wikipedia.org/wiki/Chip_Wilson\"},\n\t\t{\"company\": \"Starbucks\", \"name\": \"Jerry\", \"lastname\" : \"Baldwin\", \"birth\": \"1929\", \"founded\": \"1971-03-30\", \"age\": 42, \"more\" : \"selling freshly roasted \\ncoffee beans by the pound\", \"link\" : \"en.wikipedia.org/wiki/Jerry_Baldwin\"},\n\t\t{\"company\": \"Honda\", \"name\": \"Soichiro\", \"lastname\" : \"Honda\", \"birth\": \"1906-11-17\", \"founded\": \"1948-09-24\", \"age\": 42, \"more\" : \"producing motorized bikes\", \"link\" : \"en.wikipedia.org/wiki/Soichiro_Honda\"},\n\t\t{\"company\": \"Dish Network\", \"name\": \"Charlie\", \"lastname\" : \"Ergen\", \"birth\": \"1953-03-01\", \"founded\": 1996, \"age\": 43, \"more\" : \"selling satellite dishes \\ndoor to door in Colorado\", \"link\" : \"en.wikipedia.org/wiki/Charlie_Ergen\"},\n\t\t{\"company\": \"Adobe\", \"name\": \"Charles\", \"lastname\" : \"Geschke\", \"birth\": \"1939-09-11\", \"founded\": \"1982-12\", \"age\": 43, \"more\" : \"creating PostScript, \\npage description language\", \"link\" : \"en.wikipedia.org/wiki/Charles_Geschke\"},\n\t\t{\"company\": \"Dollar Tree\", \"name\": \"Macon\", \"lastname\" : \"Brock Jr\", \"birth\": \"1943\", \"founded\": \"1986\", \"age\": 43, \"more\" : \"as a toy store in a mall\", \"link\" : \"en.wikipedia.org/wiki/Dollar_Tree\"},\n\t\t{\"company\": \"Comcast\", \"name\": \"Ralph\", \"lastname\" : \"Roberts\", \"birth\": \"1920-03-13\", \"founded\": \"1963\", \"age\": 43, \"more\" : \"buying a small rural \\nantenna TV system\", \"link\" : \"en.wikipedia.org/wiki/Ralph_J._Roberts\"},\n\t\t{\"company\": \"Rolls-Royce\", \"name\": \"Henry\", \"lastname\" : \"Royce\", \"birth\": \"1863-03-27\", \"founded\": \"1906\", \"age\": 43, \"more\" : \"making a deal with Rolls to sell\\nhim all the cars he could make\", \"link\" : \"en.wikipedia.org/wiki/Henry_Royce\"},\n\t\t{\"company\": \"AOL\", \"name\": \"Jim\", \"lastname\" : \"Kimsey\", \"birth\": \"1939-09-15\", \"founded\": \"1983\", \"age\": 44, \"more\" : \"marketing a game \\n console for Atari\", \"link\" : \"en.wikipedia.org/wiki/Jim_Kimsey\"},\n\t\t{\"company\": \"Walmart\", \"name\": \"Sam\", \"lastname\" : \"Walton\", \"birth\": \"1918-03-29\", \"founded\": \"1962\", \"age\": 44, \"more\" : \"purchasing a Ben Franklin \\nvariety store\", \"link\" : \"en.wikipedia.org/wiki/Sam_Walton\"}\n  ]},\n  {\n   \"name\": \"45..49\",\n   \"range\" : 45,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"General Electric\", \"name\": \"Thomas\", \"lastname\" : \"Edison\", \"birth\": \"1847-02-11\", \"founded\": \"1892\", \"age\": 45, \"more\" : \"bringing his various inventions \\ninto one company\", \"link\" : \"en.wikipedia.org/wiki/Thomas_Edison\"},\n\t\t{\"company\": \"Costco\", \"name\": \"James\", \"lastname\" : \"Sinegal\", \"birth\": \"1936-01-01\", \"founded\": \"1983-09-15\", \"age\": 47, \"more\" : \"as one of the first warehouse \\nstores in the U.S.\", \"link\" : \"en.wikipedia.org/wiki/James_Sinegal\"},\n\t\t{\"company\": \"Wells Fargo\", \"name\": \"Henry\", \"lastname\" : \"Wells\", \"birth\": \"1805-12-12\", \"founded\": \"1852-03-18\", \"age\": 47, \"more\" : \"first to introduce banking \\nto the Wild West\", \"link\" : \"en.wikipedia.org/wiki/Henry_Wells\"},\n\t\t{\"company\": \"Goldman Sachs\", \"name\": \"Marcus\", \"lastname\" : \"Goldman\", \"birth\": \"1821-12-09\", \"founded\": \"1869\", \"age\": 48, \"more\" : \"as a one-man broker\\n of debt IOUs\", \"link\" : \"en.wikipedia.org/wiki/Marcus_Goldman\"},\n\t\t{\"company\": \"Home Depot\", \"name\": \"Bernard\", \"lastname\" : \"Marcus\", \"birth\": \"1929\", \"founded\": \"1978\", \"age\": 48, \"more\" : \"after being fired from \\nhome improvement store\", \"link\" : \"en.wikipedia.org/wiki/Bernard_Marcus\"},\n\t\t{\"company\": \"Adidas\", \"name\": \"Adolf\", \"lastname\" : \"Dassler\", \"birth\": \"1900-11-03\", \"founded\": \"1949-08-18\", \"age\": 48, \"more\" : \"vying with his brother to make\\nshoes for Olympic runners\", \"link\" : \"en.wikipedia.org/wiki/Adolf_Dassler\"},\n\t\t{\"company\": \"Ryanair\", \"name\": \"Tony\", \"lastname\" : \"Ryan\", \"birth\": \"1936-02-02\", \"founded\": \"1985\", \"age\": 49, \"more\" : \"with a single 15-seat plane \\nflying from London\", \"link\" : \"nytimes.com/2007/10/04/business/04ryan.html\"},\n\t\t{\"company\": \"Seagate\", \"name\": \"Alan\", \"lastname\" : \"Shugart\", \"birth\": \"1930-09-27\", \"founded\": 1979, \"age\": 49, \"more\" : \"introducing low-cost \\nfloppy disks\", \"link\" : \"en.wikipedia.org/wiki/Alan_Shugart\"}\n  ]},\n  {\n   \"name\": \"50..54\",\n   \"range\" : 50,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"Morgan Stanley\", \"name\": \"Harold\", \"lastname\" : \"Stanley\", \"birth\": \"1885-10-02\", \"founded\": \"1935-09-05\", \"age\": 50, \"more\" : \"trading bonds for companies \\npioneering investment banking\", \"link\" : \"en.wikipedia.org/wiki/Harold_Stanley\"},\n\t\t{\"company\": \"Garmin\", \"name\": \"Gary\", \"lastname\" : \"Burrell\", \"birth\": \"1937\", \"founded\": \"1989\", \"age\": 51, \"more\" : \"first to use GPS technology \\nfor non-military uses\", \"link\" : \"en.wikipedia.org/wiki/Gary_Burrell\"},\n\t\t{\"company\": \"Hyundai Motor\", \"name\": \"Chung\", \"lastname\" : \"Ju-yung\", \"birth\": \"1915-11-25\", \"founded\": \"1967-12-29\", \"age\": 51, \"more\" : \"borrowing money to start \\nan auto service garage\", \"link\" : \"en.wikipedia.org/wiki/Chung_Ju-yung\"},\n\t\t{\"company\": \"Starbucks\", \"name\": \"Gordon\", \"lastname\" : \"Bowker\", \"birth\": \"1920\", \"founded\": \"1971-03-30T08:00:00.000Z\", \"age\": 51, \"more\" : \"selling freshly roasted \\ncoffee beans by the pound\", \"link\" : \"en.wikipedia.org/wiki/Gordon_Bowker\"},\n\t\t{\"company\": \"Campbell Soup\", \"name\": \"Joseph\", \"lastname\" : \"Campbell\", \"birth\": \"1817-05-15\", \"founded\": \"1869\", \"age\": 52, \"more\" : \"condensing soups by halving \\nthe amount of water\", \"link\" : \"en.wikipedia.org/wiki/Joseph_A._Campbell\"},\n\t\t{\"company\": \"Nestl\", \"name\": \"Henri\", \"lastname\" : \"Nestl\", \"birth\": \"1814-08-10\", \"founded\": \"1866\", \"age\": 52, \"more\" : \"inventing powered milk \\nand breast milk substitute\", \"link\" : \"en.wikipedia.org/wiki/Henri_Nestl%C3%A9\"},\n\t\t{\"company\": \"Nissan Motor\", \"name\": \"Yoshisuke\", \"lastname\" : \"Aikawa\", \"birth\": \"1880-11-06\", \"founded\": \"1933-12-26\", \"age\": 52, \"more\" : \"transforming his \\nbrother-in-law's business\", \"link\" : \"en.wikipedia.org/wiki/Yoshisuke_Aikawa\"},\n\t\t{\"company\": \"Este Lauder\", \"name\": \"Este\", \"lastname\" : \"Lauder\", \"birth\": \"1906-07-01\", \"founded\": \"1961\", \"age\": 54, \"more\" : \"selling creams made by\\nher uncle to her friends\", \"link\" : \"en.wikipedia.org/wiki/Est%C3%A9e_Lauder_(businesswoman)\"}\n  ]},\n  {\n   \"name\": \"55..59\",\n   \"range\" : 55,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"Las Vegas Sands\", \"name\": \"Sheldon\", \"lastname\" : \"Adelson\", \"birth\": \"1933-08-04\", \"founded\": \"1988\", \"age\": 55, \"more\" : \"turning an old hotel into the only \\nprivate convention center\", \"link\" : \"en.wikipedia.org/wiki/Sheldon_Adelson\"},\n\t\t{\"company\": \"Porsche\", \"name\": \"Ferdinand\", \"lastname\" : \"Porsche\", \"birth\": \"1875-09-03\", \"founded\": \"1931\", \"age\": 56, \"more\" : \"creating racing car for which \\nhe had no customer\", \"link\" : \"en.wikipedia.org/wiki/Ferdinand_Porsche\"},\n\t\t{\"company\": \"Kawasaki\", \"name\": \"Kawasaki\", \"lastname\" : \"Shz\", \"birth\": \"1837\", \"founded\": \"1896-10-15\", \"age\": 59, \"more\" : \"as a ship building \\ncompany\", \"link\" : \"en.wikipedia.org/wiki/Kawasaki_Sh%C5%8Dz%C5%8D\"}\n  ]},\n  {\n   \"name\": \"60..64\",\n   \"range\" : 60,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"Bank of America\", \"name\": \"Amadeo\", \"lastname\" : \"Giannini\", \"birth\": \"1870-05-06\", \"founded\": \"1930-11-03\", \"age\": 60, \"more\" : \"the first to offer banking \\nfor the middle-class \", \"link\" : \"en.wikipedia.org/wiki/Amadeo_Giannini\"},\n\t\t{\"company\": \"IBM\", \"name\": \"Charles\", \"lastname\" : \"Flint\", \"birth\": \"1850-01-24\", \"founded\": \"1911-06-16\", \"age\": 61, \"more\" : \"foreseeing that punch-card \\n will change the world\", \"link\" : \"en.wikipedia.org/wiki/Charles_Ranlett_Flint\"}\n  ]}\n ]\n}\nFnF.aspectRatio = 970 / 800;\nFnF.chart = d3.select(\"#latetostart-graph\").node();\nFnF.resizeTimer;\nFnF.doResize = function() {\n\tconsole.log('running FnF.doResize()');\n\tclearTimeout(FnF.resizeTimer);\n\tFnF.resizeTimer = setTimeout(function(){\n\t\tvar targetWidth = FnF.chart.parentNode.offsetWidth;\n\t\tconsole.log('resizing to w=' + targetWidth);\n\t\tFnF.chart.style.width = targetWidth + \"px\";\n\t\tFnF.chart.style.height = targetWidth / FnF.aspectRatio + \"px\";\t\n\t}, 100);\n}\nFnF.OFFSET = 120;\nFnF.LEAF_DROP = 50;\nFnF.INITIAL_Y_OFFSET = 300;\nFnF.WIDTH = 970;\nFnF.YEAR_STEP = 4.25;\nFnF.margin = {top: 0, right: 10, bottom: 0, left: 10};\nFnF.width = FnF.WIDTH - FnF.margin.right - FnF.margin.left;\nFnF.height = 800 - FnF.margin.top - FnF.margin.bottom;\n    \nFnF.i = 0;\nFnF.duration = 750;\n// var    root, prevSelected;\nFnF.tree = d3.layout.tree()\n\t.separation(function(a, b) { return a.parent === b.parent ? 1 : 2; })\n    .size([FnF.width, FnF.height]);\nFnF.diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.x, d.y]; });\n    \n    \nvar line = d3.svg.line()\n    .interpolate(\"linear\")\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n    \nFnF.svg = d3.select(\"#container svg\").append(\"svg\")\n    .attr(\"width\", FnF.width + FnF.margin.right + FnF.margin.left)\n    .attr(\"height\", FnF.height + FnF.margin.top + FnF.margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + FnF.margin.left + \",\" + FnF.margin.top + \")\");\nFnF.collapse = function (d) {\n\tif (d.children) {\n\t  d._children = d.children;\n\t  d._children.forEach(FnF.collapse);\n\t  d.children = null;\n\t}\n}\nFnF.root = FnF.founders;\nFnF.root.x0 = FnF.height / 2;\nFnF.root.y0 = 300; // for smooth first transition\nFnF.root.children.forEach(function(d) {\n\tif (!d.range || d.range != 35){\n\t\tFnF.collapse(d);\n\t}\n});\nFnF.svg.append(\"svg:line\")\n\t.attr(\"x1\", 25)\n\t.attr(\"y1\", FnF.INITIAL_Y_OFFSET)\n\t.attr(\"x2\", FnF.WIDTH - 30)\n\t.attr(\"y2\", FnF.INITIAL_Y_OFFSET)\n\t.attr(\"stroke-width\", 4.25)\n\t.attr(\"stroke-dasharray\", \"\" + FnF.YEAR_STEP + \", \" + FnF.YEAR_STEP*2)\n\t.style(\"stroke\", \"rgb(195,190,199)\");\n    \nFnF.doResize();\nFnF.clearInfo = function () {\n  FnF.svg.selectAll(\".year_born\").remove();\n}\nFnF.leafSelect = function(d) {\n  if (d.selected) {\n    d.selected = false;\n    d._selected= true;\n  } else {\n    if (FnF.prevSelected) {\n      FnF.prevSelected.selected = false;\n      FnF.prevSelected._selected = false;\n    }\n     d.selected = true;\n    FnF.prevSelected = d;\n  }\n  var theName = d.name;\n  var theLastName = d.lastname; \n  FnF.clearInfo();\n  FnF.svg.append(\"text\")\n  \t.attr(\"x\", \"15\")\n  \t.attr(\"y\", \"200\")\n  \t.classed(\"year_born\", true)\n  \t.text( d.birth.split(\"-\")[0] );\n}\nFnF.click = function(d) {\n  if (!(d.children || d._children)) {\n  \tFnF.leafSelect(d);\n  \tFnF.update(d);\n  \treturn;\n  }\n  \n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  if (d.parent) {\n    d.parent.children.forEach(function(element) {\n      if (d !== element) {\n        FnF.collapse(element);\n      }\n    });\n  }\n  FnF.update(d);\n  if (FnF.prevSelected) {\n  \tFnF.prevSelected.selected = false;\n  \tFnF.prevSelected._selected = false;\n  }\n  FnF.prevSelected = null;\n  FnF.clearInfo();\n}\n   \nFnF.update = function(source) {\n  // Compute the new tree layout.\n  var nodes = FnF.tree.nodes(FnF.root).reverse();\n  nodes.splice(nodes.length-1,1);\n  links = FnF.tree.links(nodes);\n  nodes.forEach(normalizeNode);\n  // Update the nodes\n  var node = FnF.svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++FnF.i); });\n      \n  var rootNodesCollapsed = node.filter(function(d) {\n        return (d.children || d._children);\n  });\n  \n  rootNodesCollapsed.select(\".info-text\")\n    .select(\"text\")\n  \t.attr(\"dy\",\"-2em\")\n  \t.classed(\"years\", true)\n  \t.text(function(d) {\n  \t\tif (d.children && !d._children)\t{\n  \t\t\treturn d.name;\n  \t\t} else if (d.range == 25 || d.range == 35) {\n      \t\t\treturn d.range;\n      \t}\n  \t});\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.x0 + \",\" + source.y0 + \")\"; })\n      .on(\"click\", FnF.click);\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n  nodeEnter.append(\"g\")\n      .attr(\"class\", function(d) { \n      \treturn \"info-text\" + \n      \t        (d.selected && !d.children && !d._children ? \" selected\" : \"\"); \n      })\n      .attr(\"transform\", \"translate(0,0)\")\n      .attr(\"text-anchor\", \"middle\")\n      .call(function(text){\n      \ttext.each(function(d){\n\t\t\t\t\tvar atext = d3.select(this);\n\t\t\t\t\tif (d.children && !d._children) {\n\t\t\t\t\t\t\tatext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"-2em\").classed(\"years\", true).style(\"fill-opacity\", 1e-6).text(d.name);\n\t\t\t\t\t} else if (d.children || d._children) {\n\t\t\t\t\t\tatext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"-2em\").classed(\"years\", true).style(\"fill-opacity\", 1e-6)\n\t\t\t\t\t\t     .text( (d.range == 25 || d.range == 35) ? d.range : \"\");      \t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar startedAt = atext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"0.8em\").style(\"fill-opacity\", 1e-6);\n\t\t\t\t\tstartedAt.append('tspan').classed(\"more-text\", true).text('at ');\n\t\t\t\t\tstartedAt.append('tspan').text(d.age);\n\t\t\t\t\tvar founder = atext.append('text').classed(\"founder\", true).style(\"fill-opacity\", 1e-6);\n\t\t\t\t\tfounder.append('tspan').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"1.7em\").text(d.name);\n\t\t\t\t\tfounder.append('tspan').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"2.7em\").text(d.lastname);\n\t\t\t\t\tvar company = atext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"4.5em\").classed(\"company\", true).style(\"fill-opacity\", 1e-6);\n\t\t\t\t\tcompany.append('tspan').classed(\"more-text\", true).text('started ');\n\t\t\t\t\tcompany.append('tspan').text(d.company);\n\t\t\t\t\tif (d.more && d.link) {\n            var aStory = d.more.split(\"\\n\");\n            var shortStory = atext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"7em\").classed(\"more-text short-story\", true).style(\"fill-opacity\", 1e-6);\n            shortStory.append('tspan').classed(\"more-text\", true).text(aStory[0]);\n            if (aStory[1]) {\n              shortStory.append('tspan').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"8.5em\").classed(\"more-text\", true).text(aStory[1]);\n            }\n\t\t\t\t\t\tshortStory.append(\"a\").attr(\"xlink:href\", \"http://\"+ d.link).attr(\"target\", \"_blank\").append('tspan').text(\" [..]\");\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tif (d.x > FnF.WIDTH - 60) {\n\t\t\t\t\t\tstartedAt.classed(\"align-right\", true);\n\t\t\t\t\t\tfounder.classed(\"align-right\", true);\n\t\t\t\t\t\tcompany.classed(\"align-right\", true);\n\t\t\t\t\t\tshortStory && shortStory.classed(\"align-right\", true);\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tif (d.x < 50) {\n\t\t\t\t\t\tstartedAt.classed(\"align-left\", true);\n\t\t\t\t\t\tfounder.classed(\"align-left\", true);\n\t\t\t\t\t\tcompany.classed(\"align-left\", true);\n\t\t\t\t\t\tshortStory && shortStory.classed(\"align-left\", true);\n\t\t\t\t\t}\n\t\t\t   }\n      \t})\n      })\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(FnF.duration)\n      .attr(\"transform\", function(d) {\n      \treturn \"translate(\" + d.x + \",\" + d.y  + \")\" + (d.selected && !d.children && !d._children ? \"scale(1.6,1.6)\" : \"\"); \n      });\n      \n  nodeUpdate.select(\".info-text\")\n      .attr(\"class\", function(d) { \n      \treturn \"info-text\" + \n      \t        (d.selected && d.depth > 1 ? \" selected\" : \"\"); \n      })\n      .attr(\"transform\", function(d) { \n      \treturn \"translate(\" + \n      \t        (d.selected && !d.children && !d._children ? (d.x < 50 ? \"-5\" : d.x > FnF.WIDTH - 50 ? \"5\" : \"0\" ) : \"0\") +\n      \t        \",0)\"; \n      });\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", function (d) { return d._children || d.children ? 6.5 : 4.5 } )\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n  nodeUpdate.selectAll(\"text\")\n      .style(\"fill-opacity\", 1);\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(FnF.duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.x + \",\" + source.y + \")\"; })\n      .remove();\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n  nodeExit.selectAll(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n  // Update the links\n  var link = FnF.svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return FnF.diagonal({source: o, target: o});\n      });\n      \n  // Transition links to their new position.\n  link.transition()\n      .duration(FnF.duration)\n      .attr(\"d\", function(d){\n        if (d.target.selected) {\n//           var o = {x: d.source.x, y: d.source.y - FnF.LEAF_DROP};\n//           return FnF.diagonal({source: o, target: o});\n          d.target.y = d.target.y - FnF.LEAF_DROP;\n        }\n\t\treturn FnF.diagonal(d);\n      }).attrTween(\"d\", function (d, i, a) { \n       if (d.target.selected) {\n         return d3.interpolate(a + \"L\" + d.target.x + \",\" + d.target.y,  FnF.diagonal(d) + \"L\" + d.target.x + \",\" + (d.target.y + FnF.LEAF_DROP ));\n       } else if (d.target._selected) {\n         return d3.interpolate(a + \"L\" + d.target.x + \",\" + d.target.y,  FnF.diagonal(d) + \"L\" + d.target.x + \",\" + d.target.y);\n         d.target._selected = false;\n       } else {\n         return d3.interpolate(a, FnF.diagonal(d));\n       }  \n  \t  });\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(FnF.duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return FnF.diagonal({source: o, target: o});\n      }).remove();\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n   \n   \nFnF.update(FnF.root);\nd3.select(window).on(\"resize\", FnF.doResize);\nd3.select(window).on(\"load\", FnF.doResize);\n//d3.select(self.frameElement).style(\"height\", \"800px\");\n// Normalize for fixed-depth.\nfunction normalizeNode(d){\n  \tif (d.parent && d.parent.depth === 0) {\n  \t\td.y = FnF.INITIAL_Y_OFFSET;\n  \t\td.x = d.range * FnF.YEAR_STEP * 3 + 15;\n  \t} else {\n  \t    d.y = FnF.INITIAL_Y_OFFSET + d.depth * FnF.OFFSET;\n        // updating selected node position  \t    \n  \t    if ( d.selected && (d.depth === 2) ) {\n  \t    \td.y = d.y + FnF.LEAF_DROP;\n  \t    }\n  \t}\n}\n</script>", "description": "fresh block", "created_at": "2016-09-23T23:53:08Z", "updated_at": "2016-09-23T23:53:08Z", "api": ["d3.select", "d3.layout.tree", "d3.svg.diagonal", "d3.svg.line", "d3.interpolate"], "readme": "Here is a visualization of the relationship between age and success. Tap on the circles below and investigate for yourself.\nSource: [fundersandfounders.com](http://fundersandfounders.com/too-late-to-start-life-crisis/)", "uid": "markvital_89be160315aca0c92569aa93e883f4a1"}, {"code": "<script>\nif (!window.d3) {\n    document.write('<script src=\"js/d3.min.js\"><\\/script>');\n}\n</script>\n\n\n<div id=\"container\">\n\n<!--[if lte IE 8]><a href=\"http://i1.wp.com/fundersandfounders.com/wp-content/uploads/2014/06/never-too-late-when-companies-started-infographic.png\" class=\"cboxElement\"><img class=\"aligncenter size-full wp-image-21566\" alt=\"The Aha Moments Of Entrepreneurs\" src=\"http://i1.wp.com/fundersandfounders.com/wp-content/uploads/2014/06/never-too-late-when-companies-started-infographic.png?zoom=2&amp;resize=660%2C587\" width=\"650\" height=\"577\" src-orig=\"http://i1.wp.com/fundersandfounders.com/wp-content/uploads/2014/06/never-too-late-when-companies-started-infographic.png?resize=660%2C587\" scale=\"2\"></a><![endif]-->\n<svg id=\"latetostart-graph\" version=\"1.2\" baseProfile=\"tiny\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n\t y=\"0px\" width=\"970px\" height=\"800px\" viewBox=\"0 0 970 800\" preserveAspectRatio=\"xMidYMid\" style=\"background-color: #ece8e3;\" xml:space=\"preserve\">\n<g id=\"Footer\">\n\t<text transform=\"matrix(1.0001 0 0 1 35.0942 765.6021)\" fill=\"#554263\" font-family=\"'BebasNeue'\" font-size=\"51.768\">IT'S NEVER TOO LATE.</text>\n<a xlink:href=\"http://fundersandfounders.com/\"  target=\"_top\">\t\n<g id=\"logo\">\n\t<g id=\"letters\">\n\t\t<path fill=\"#238FCF\" d=\"M716.82,751.874h-5.808v4.058h5.601v2.396h-5.601v8.041h-2.517v-16.893h8.324V751.874z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M721.698,755.714v6.114c0,1.767,0.687,2.649,2.062,2.649s2.061-0.883,2.061-2.649v-6.114h2.429v6.169\n\t\t\tc0,0.855-0.104,1.592-0.312,2.211c-0.202,0.555-0.551,1.054-1.048,1.498c-0.819,0.723-1.864,1.084-3.13,1.084\n\t\t\tc-1.261,0-2.301-0.361-3.119-1.084c-0.503-0.444-0.861-0.943-1.07-1.498c-0.199-0.496-0.302-1.232-0.302-2.211v-6.169H721.698z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M731.313,755.714h2.44v0.984c0.849-0.854,1.807-1.28,2.87-1.28c1.224,0,2.178,0.391,2.862,1.172\n\t\t\tc0.589,0.662,0.885,1.747,0.885,3.248v6.531h-2.44v-5.943c0-1.049-0.144-1.773-0.432-2.175c-0.282-0.407-0.791-0.611-1.533-0.611\n\t\t\tc-0.806,0-1.379,0.269-1.716,0.808c-0.332,0.532-0.496,1.461-0.496,2.787v5.135h-2.44V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M751.186,747.891h2.438v18.479h-2.438v-1.115c-0.957,0.949-2.041,1.422-3.251,1.422\n\t\t\tc-1.437,0-2.632-0.533-3.581-1.596c-0.944-1.088-1.415-2.445-1.415-4.07c0-1.592,0.471-2.918,1.415-3.982\n\t\t\tc0.937-1.072,2.111-1.609,3.53-1.609c1.229,0,2.329,0.512,3.302,1.531V747.891z M745.422,761.01c0,1.02,0.269,1.852,0.81,2.493\n\t\t\tc0.553,0.649,1.251,0.975,2.095,0.975c0.898,0,1.625-0.313,2.18-0.94c0.553-0.65,0.83-1.474,0.83-2.473\n\t\t\tc0-1.001-0.277-1.824-0.83-2.474c-0.555-0.634-1.274-0.951-2.16-0.951c-0.834,0-1.53,0.321-2.094,0.961\n\t\t\tC745.698,759.252,745.422,760.054,745.422,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M766.262,761.621h-7.531c0.063,0.877,0.345,1.572,0.841,2.091c0.496,0.511,1.135,0.766,1.911,0.766\n\t\t\tc0.604,0,1.104-0.146,1.5-0.438c0.389-0.291,0.831-0.832,1.327-1.617l2.051,1.158c-0.316,0.547-0.651,1.016-1.003,1.406\n\t\t\tc-0.352,0.389-0.729,0.71-1.134,0.961c-0.402,0.253-0.839,0.438-1.307,0.555c-0.468,0.115-0.975,0.174-1.521,0.174\n\t\t\tc-1.569,0-2.829-0.51-3.777-1.532c-0.951-1.026-1.424-2.391-1.424-4.091c0-1.686,0.459-3.049,1.381-4.092\n\t\t\tc0.928-1.029,2.157-1.543,3.69-1.543c1.548,0,2.771,0.5,3.672,1.5c0.89,0.99,1.338,2.366,1.338,4.125L766.262,761.621z\n\t\t\t M763.771,759.609c-0.339-1.314-1.154-1.97-2.449-1.97c-0.297,0-0.573,0.046-0.833,0.136c-0.259,0.092-0.495,0.224-0.706,0.395\n\t\t\tc-0.212,0.172-0.394,0.377-0.546,0.618c-0.151,0.24-0.266,0.514-0.344,0.821H763.771z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M768.919,755.714h2.429v0.952c0.445-0.475,0.841-0.8,1.188-0.973c0.351-0.184,0.769-0.275,1.252-0.275\n\t\t\tc0.641,0,1.309,0.211,2.006,0.635l-1.109,2.254c-0.463-0.336-0.911-0.504-1.35-0.504c-1.324,0-1.986,1.016-1.986,3.043v5.523\n\t\t\th-2.429V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M783.297,757.53l-2.01,1.081c-0.314-0.647-0.709-0.972-1.176-0.972c-0.224,0-0.414,0.074-0.572,0.224\n\t\t\ts-0.236,0.341-0.236,0.574c0,0.406,0.467,0.812,1.403,1.213c1.286,0.561,2.155,1.078,2.6,1.552\n\t\t\tc0.448,0.473,0.671,1.109,0.671,1.911c0,1.027-0.375,1.889-1.125,2.579c-0.727,0.655-1.603,0.983-2.632,0.983\n\t\t\tc-1.764,0-3.013-0.871-3.744-2.614l2.07-0.975c0.289,0.511,0.506,0.835,0.659,0.975c0.295,0.277,0.646,0.416,1.058,0.416\n\t\t\tc0.82,0,1.23-0.38,1.23-1.138c0-0.438-0.317-0.848-0.951-1.227c-0.243-0.123-0.489-0.243-0.732-0.359\n\t\t\tc-0.245-0.117-0.495-0.238-0.744-0.363c-0.708-0.348-1.203-0.699-1.491-1.049c-0.367-0.445-0.552-1.018-0.552-1.719\n\t\t\tc0-0.926,0.314-1.691,0.939-2.298c0.644-0.604,1.419-0.907,2.333-0.907C781.64,755.418,782.64,756.122,783.297,757.53z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M800.727,755.714h2.438v10.655h-2.438v-1.115c-1,0.949-2.077,1.422-3.227,1.422\n\t\t\tc-1.454,0-2.656-0.533-3.604-1.596c-0.943-1.088-1.416-2.445-1.416-4.07c0-1.599,0.473-2.928,1.416-3.994\n\t\t\tc0.941-1.064,2.122-1.598,3.538-1.598c1.225,0,2.322,0.512,3.293,1.531V755.714z M794.963,761.01c0,1.02,0.27,1.852,0.81,2.493\n\t\t\tc0.555,0.649,1.252,0.975,2.094,0.975c0.9,0,1.627-0.313,2.182-0.94c0.552-0.65,0.828-1.474,0.828-2.473\n\t\t\tc0-1.001-0.276-1.824-0.828-2.474c-0.555-0.634-1.273-0.951-2.159-0.951c-0.835,0-1.533,0.321-2.095,0.961\n\t\t\tC795.239,759.252,794.963,760.054,794.963,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M806.232,755.714h2.438v0.984c0.85-0.854,1.808-1.28,2.872-1.28c1.223,0,2.176,0.391,2.859,1.172\n\t\t\tc0.59,0.662,0.885,1.747,0.885,3.248v6.531h-2.439v-5.943c0-1.049-0.144-1.773-0.432-2.175c-0.279-0.407-0.79-0.611-1.531-0.611\n\t\t\tc-0.806,0-1.379,0.269-1.717,0.808c-0.332,0.532-0.497,1.461-0.497,2.787v5.135h-2.438V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M826.102,747.891h2.438v18.479h-2.438v-1.115c-0.958,0.949-2.041,1.422-3.249,1.422\n\t\t\tc-1.438,0-2.634-0.533-3.583-1.596c-0.943-1.088-1.413-2.445-1.413-4.07c0-1.592,0.47-2.918,1.413-3.982\n\t\t\tc0.937-1.072,2.11-1.609,3.529-1.609c1.229,0,2.332,0.512,3.303,1.531V747.891z M820.338,761.01c0,1.02,0.271,1.852,0.809,2.493\n\t\t\tc0.554,0.649,1.253,0.975,2.096,0.975c0.899,0,1.625-0.313,2.179-0.94c0.555-0.65,0.831-1.474,0.831-2.473\n\t\t\tc0-1.001-0.276-1.824-0.831-2.474c-0.554-0.634-1.272-0.951-2.158-0.951c-0.835,0-1.532,0.321-2.095,0.961\n\t\t\tC820.615,759.252,820.338,760.054,820.338,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M847.213,751.874h-5.807v4.058h5.601v2.396h-5.601v8.041h-2.515v-16.893h8.321V751.874z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M849.167,760.965c0-1.539,0.543-2.848,1.63-3.929c1.087-1.077,2.409-1.618,3.973-1.618\n\t\t\tc1.567,0,2.897,0.544,3.992,1.63c1.081,1.087,1.62,2.423,1.62,4.005c0,1.596-0.544,2.936-1.631,4.016\n\t\t\tc-1.093,1.072-2.436,1.607-4.025,1.607c-1.576,0-2.896-0.547-3.962-1.641C849.7,763.955,849.167,762.599,849.167,760.965z\n\t\t\t M851.649,761.01c0,1.064,0.28,1.908,0.842,2.527c0.575,0.627,1.336,0.94,2.278,0.94c0.949,0,1.707-0.31,2.278-0.932\n\t\t\tc0.567-0.619,0.851-1.446,0.851-2.481c0-1.036-0.283-1.865-0.851-2.484c-0.579-0.628-1.336-0.94-2.278-0.94\n\t\t\tc-0.93,0-1.681,0.312-2.255,0.94C851.938,759.207,851.649,760.018,851.649,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M865.378,755.714v6.114c0,1.767,0.686,2.649,2.064,2.649c1.373,0,2.06-0.883,2.06-2.649v-6.114h2.428\n\t\t\tv6.169c0,0.855-0.104,1.592-0.314,2.211c-0.2,0.555-0.548,1.054-1.043,1.498c-0.821,0.723-1.865,1.084-3.13,1.084\n\t\t\tc-1.264,0-2.301-0.361-3.121-1.084c-0.505-0.444-0.86-0.943-1.068-1.498c-0.203-0.496-0.303-1.232-0.303-2.211v-6.169H865.378z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M874.995,755.714h2.44v0.984c0.848-0.854,1.806-1.28,2.87-1.28c1.224,0,2.177,0.391,2.861,1.172\n\t\t\tc0.589,0.662,0.885,1.747,0.885,3.248v6.531h-2.44v-5.943c0-1.049-0.143-1.773-0.431-2.175c-0.281-0.407-0.793-0.611-1.533-0.611\n\t\t\tc-0.806,0-1.378,0.269-1.716,0.808c-0.332,0.532-0.496,1.461-0.496,2.787v5.135h-2.44V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M894.865,747.891h2.441v18.479h-2.441v-1.115c-0.957,0.949-2.039,1.422-3.249,1.422\n\t\t\tc-1.438,0-2.632-0.533-3.582-1.596c-0.943-1.088-1.414-2.445-1.414-4.07c0-1.592,0.471-2.918,1.414-3.982\n\t\t\tc0.937-1.072,2.11-1.609,3.529-1.609c1.231,0,2.33,0.512,3.302,1.531V747.891z M889.104,761.01c0,1.02,0.269,1.852,0.809,2.493\n\t\t\tc0.554,0.649,1.252,0.975,2.092,0.975c0.902,0,1.628-0.313,2.184-0.94c0.553-0.65,0.83-1.474,0.83-2.473\n\t\t\tc0-1.001-0.277-1.824-0.83-2.474c-0.556-0.634-1.274-0.951-2.161-0.951c-0.833,0-1.53,0.321-2.094,0.961\n\t\t\tC889.378,759.252,889.104,760.054,889.104,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M909.944,761.621h-7.534c0.065,0.877,0.346,1.572,0.844,2.091c0.497,0.511,1.133,0.766,1.909,0.766\n\t\t\tc0.604,0,1.104-0.146,1.5-0.438c0.389-0.291,0.832-0.832,1.328-1.617l2.052,1.158c-0.318,0.547-0.652,1.016-1.004,1.406\n\t\t\tc-0.354,0.389-0.73,0.71-1.134,0.961c-0.404,0.253-0.839,0.438-1.308,0.555c-0.468,0.115-0.974,0.174-1.521,0.174\n\t\t\tc-1.569,0-2.828-0.51-3.775-1.532c-0.952-1.026-1.428-2.391-1.428-4.091c0-1.686,0.461-3.049,1.382-4.092\n\t\t\tc0.931-1.029,2.16-1.543,3.693-1.543c1.547,0,2.77,0.5,3.67,1.5c0.892,0.99,1.339,2.366,1.339,4.125L909.944,761.621z\n\t\t\t M907.452,759.609c-0.338-1.314-1.155-1.97-2.452-1.97c-0.294,0-0.57,0.046-0.83,0.136c-0.259,0.092-0.495,0.224-0.708,0.395\n\t\t\tc-0.21,0.172-0.392,0.377-0.543,0.618c-0.151,0.24-0.266,0.514-0.345,0.821H907.452z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M912.6,755.714h2.43v0.952c0.445-0.475,0.842-0.8,1.187-0.973c0.352-0.184,0.77-0.275,1.251-0.275\n\t\t\tc0.643,0,1.311,0.211,2.007,0.635l-1.112,2.254c-0.459-0.336-0.907-0.504-1.346-0.504c-1.326,0-1.986,1.016-1.986,3.043v5.523\n\t\t\th-2.43V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M926.976,757.53l-2.006,1.081c-0.316-0.647-0.711-0.972-1.178-0.972c-0.222,0-0.412,0.074-0.571,0.224\n\t\t\tc-0.158,0.149-0.237,0.341-0.237,0.574c0,0.406,0.468,0.812,1.401,1.213c1.289,0.561,2.155,1.078,2.603,1.552\n\t\t\tc0.445,0.473,0.67,1.109,0.67,1.911c0,1.027-0.375,1.889-1.123,2.579c-0.726,0.655-1.604,0.983-2.632,0.983\n\t\t\tc-1.766,0-3.014-0.871-3.748-2.614l2.072-0.975c0.288,0.511,0.507,0.835,0.66,0.975c0.295,0.277,0.646,0.416,1.057,0.416\n\t\t\tc0.819,0,1.231-0.38,1.231-1.138c0-0.438-0.317-0.848-0.951-1.227c-0.243-0.123-0.489-0.243-0.733-0.359\n\t\t\tc-0.245-0.117-0.494-0.238-0.744-0.363c-0.706-0.348-1.203-0.699-1.49-1.049c-0.367-0.445-0.55-1.018-0.55-1.719\n\t\t\tc0-0.926,0.312-1.691,0.937-2.298c0.642-0.604,1.42-0.907,2.336-0.907C925.319,755.418,926.321,756.122,926.976,757.53z\"/>\n\t</g>\n\t<g id=\"foundation\">\n\t\t<defs>\n\t\t\t<rect id=\"SVGID_1_\" x=\"640\" y=\"739.99\" width=\"307\" height=\"39.402\"/>\n\t\t</defs>\n\t\t<clipPath id=\"SVGID_2_\">\n\t\t\t<use xlink:href=\"#SVGID_1_\"  overflow=\"visible\"/>\n\t\t</clipPath>\n\t\t<path clip-path=\"url(#SVGID_2_)\" fill=\"#238FCF\" d=\"M669.63,763.875c-1.371,0-2.481-1.113-2.481-2.481v-7.728\n\t\t\tc0-1.371,1.11-2.481,2.481-2.481h2.768v-2.37c0-1.43-1.163-2.59-2.595-2.59h-22.259c-1.433,0-2.593,1.161-2.593,2.59v18.045\n\t\t\tc0,1.432,1.16,2.594,2.593,2.594h13.357l8.583,6.209l-2.974-6.209h3.292c1.432,0,2.595-1.162,2.595-2.594v-2.985H669.63z\n\t\t\t M662.454,753.008c0,0.188-0.102,0.282-0.312,0.282h-0.427c-0.13,0-0.216-0.028-0.254-0.082c-0.041-0.056-0.086-0.233-0.136-0.538\n\t\t\tc-0.117-0.732-0.317-1.225-0.604-1.48c-0.288-0.253-0.706-0.381-1.255-0.381h-1.143v6.387h0.716c0.284,0,0.481-0.064,0.594-0.191\n\t\t\tc0.113-0.125,0.226-0.384,0.342-0.766c0.087-0.285,0.148-0.445,0.18-0.484c0.034-0.039,0.118-0.061,0.257-0.061h0.477\n\t\t\tc0.188,0,0.284,0.088,0.284,0.26v3.756c0,0.182-0.075,0.271-0.229,0.271h-0.531c-0.125,0-0.207-0.023-0.246-0.07\n\t\t\tc-0.04-0.049-0.092-0.176-0.155-0.386c-0.142-0.487-0.291-0.782-0.45-0.888c-0.157-0.104-0.332-0.158-0.522-0.158h-0.716v5.908\n\t\t\tc0,0.377,0.137,0.66,0.413,0.848c0.187,0.123,0.281,0.27,0.281,0.434v0.492c0,0.167-0.094,0.248-0.281,0.248h-3.395\n\t\t\tc-0.16,0-0.238-0.075-0.238-0.229v-0.512c0-0.157,0.093-0.303,0.282-0.434c0.275-0.196,0.412-0.479,0.412-0.848v-12.883\n\t\t\tc0-0.368-0.145-0.651-0.435-0.845c-0.195-0.125-0.292-0.27-0.292-0.435v-0.491c0-0.157,0.081-0.239,0.24-0.239h5.633\n\t\t\tc0.166,0,0.432-0.016,0.794-0.043c0.197-0.022,0.312-0.033,0.347-0.033c0.175,0,0.281,0.022,0.317,0.067\n\t\t\tc0.037,0.042,0.053,0.135,0.053,0.281V753.008z\"/>\n\t\t<path clip-path=\"url(#SVGID_2_)\" fill=\"#238FCF\" d=\"M699.28,746.213h-22.259c-1.434,0-2.594,1.159-2.594,2.591v2.381h2.809\n\t\t\tc1.368,0,2.479,1.11,2.479,2.48v7.729c0,1.368-1.111,2.481-2.479,2.481h-2.809v2.977c0,1.431,1.16,2.592,2.594,2.592h3.295\n\t\t\tl-2.976,6.208l8.584-6.208h13.355c1.435,0,2.595-1.161,2.595-2.592v-18.048C701.875,747.372,700.715,746.213,699.28,746.213\n\t\t\t M691.856,750.212c0,0.166-0.099,0.31-0.295,0.435c-0.291,0.195-0.435,0.478-0.435,0.847v12.88c0,0.37,0.136,0.655,0.412,0.849\n\t\t\tc0.187,0.131,0.281,0.277,0.281,0.436v0.512c0,0.152-0.079,0.227-0.239,0.227h-3.393c-0.188,0-0.284-0.082-0.284-0.248v-0.49\n\t\t\tc0-0.166,0.096-0.312,0.284-0.436c0.275-0.189,0.413-0.472,0.413-0.849v-5.907h-0.72c-0.186,0-0.361,0.055-0.521,0.16\n\t\t\tc-0.16,0.103-0.311,0.398-0.447,0.885c-0.063,0.211-0.115,0.34-0.155,0.387c-0.041,0.047-0.125,0.071-0.247,0.071h-0.533\n\t\t\tc-0.149,0-0.229-0.093-0.229-0.274v-3.752c0-0.172,0.095-0.26,0.282-0.26h0.479c0.138,0,0.223,0.02,0.257,0.06\n\t\t\tc0.033,0.04,0.093,0.2,0.179,0.485c0.116,0.383,0.229,0.639,0.343,0.764c0.111,0.127,0.312,0.192,0.592,0.192h0.72v-6.384h-1.145\n\t\t\tc-0.549,0-0.968,0.126-1.254,0.378c-0.289,0.255-0.488,0.747-0.604,1.478c-0.051,0.305-0.098,0.484-0.139,0.541\n\t\t\tc-0.04,0.053-0.123,0.08-0.255,0.08h-0.424c-0.212,0-0.315-0.093-0.315-0.281v-3.243c0-0.145,0.02-0.239,0.053-0.282\n\t\t\tc0.039-0.044,0.144-0.065,0.316-0.065c0.037,0,0.154,0.009,0.348,0.032c0.365,0.03,0.628,0.043,0.795,0.043h5.638\n\t\t\tc0.158,0,0.24,0.082,0.24,0.241V750.212z\"/>\n\t</g>\n\t<g>\n\t\t<path fill=\"#238FCF\" d=\"M676.855,762.039c-0.237-0.238-0.463-0.476-0.789-0.827c-0.727,0.676-1.541,0.964-2.468,0.964\n\t\t\tc-1.641,0-2.593-1.103-2.593-2.368c0-1.152,0.688-1.942,1.653-2.468v-0.038c-0.438-0.551-0.701-1.165-0.701-1.767\n\t\t\tc0-1.027,0.738-2.08,2.142-2.08c1.053,0,1.867,0.702,1.867,1.792c0,0.89-0.514,1.591-1.854,2.255v0.038\n\t\t\tc0.714,0.827,1.516,1.754,2.055,2.355c0.389-0.589,0.651-1.403,0.814-2.468h1.002c-0.226,1.328-0.589,2.38-1.215,3.12\n\t\t\tc0.45,0.476,0.889,0.952,1.391,1.491H676.855z M675.528,760.586c-0.501-0.551-1.441-1.579-2.381-2.656\n\t\t\tc-0.451,0.288-1.09,0.827-1.09,1.716c0,0.964,0.714,1.704,1.729,1.704C674.514,761.35,675.127,761.024,675.528,760.586z\n\t\t\t M672.96,755.437c0,0.602,0.275,1.065,0.639,1.516c0.852-0.489,1.403-0.94,1.403-1.654c0-0.514-0.288-1.09-0.978-1.09\n\t\t\tC673.323,754.209,672.96,754.786,672.96,755.437z\"/>\n\t</g>\n</g>\n</a>\n<g id=\"lifeline\">\n\t<path fill-rule=\"evenodd\" fill=\"none\" stroke=\"#ED145B\" stroke-width=\"2.9594\" stroke-miterlimit=\"10\" d=\"M45.749,263.686\n\t\tc0,0,128.451-0.846,258.228-0.584c32.683,0.063,26.091-18.948,39.901-18.948c13.811,0,11.825,19.022,41.78,18.79\n\t\tc13.959,0.184,26.474,0.346,41.41,0.49c31.9,0.135,25.73-49.361,44.366-49.361c18.635,0,11.062,49.904,42.592,49.975\n\t\tc196.096,0.969,432.558,0.637,432.558,0.637\"/>\n\t<g id=\"Ellipse_1\">\n\t\t<circle fill=\"#ED145B\" cx=\"37.167\" cy=\"263.686\" r=\"8.583\"/>\n\t</g>\n\t<g id=\"growth_stages\">\n\t\t<path id=\"old_2_\" fill=\"#554263\" d=\"M505.136,189.292c0.342-1.685-0.666-2.909-1.909-3.377c0.775-1.133,1.232-2.505,1.232-3.989\n\t\t\tc0-3.866-3.088-7.001-6.901-7.001c-3.811,0-6.901,3.135-6.901,7.001c0,3.868,3.09,7.002,6.901,7.002\n\t\t\tc0.666,0,1.304-0.1,1.912-0.279c-0.704,3.019-1.819,5.889-3.026,8.728c-0.651-1.013-1.325-2.013-1.982-3.022\n\t\t\tc0.907-4.445-3.805-9.742-8.9-6.791c-5.716,3.309-10.22,8.66-12.827,14.762c-1.302,3.048-0.879,6.53,2.202,8.334\n\t\t\tc0.092,0.056,0.191,0.1,0.288,0.148c0.542,0.393,1.207,0.662,2,0.738c5.921,0.569,11.899,0.682,17.859,0.726\n\t\t\tc-1.819,5.581-3.941,11.072-6.094,16.515c-1.872,4.728,5.657,6.761,7.503,2.097c2.798-7.07,5.548-14.224,7.641-21.548\n\t\t\tc0.889-3.11-1.807-5.078-4.254-4.86c-0.107-0.021-0.214-0.04-0.329-0.051C501.581,199.43,504.058,194.624,505.136,189.292z\n\t\t\t M490.583,198.779c1.191,1.804,2.353,3.625,3.288,5.586c-2.821-0.025-5.646-0.074-8.465-0.184\n\t\t\tC486.802,202.046,488.506,200.202,490.583,198.779z\"/>\n\t\t<path id=\"older_2_\" fill=\"#554263\" d=\"M349.294,188.247c-9.975,1.869-16.944,11.187-16.343,21.435\n\t\t\tc0.011,0.189,0.033,0.368,0.058,0.547c-0.366,1.837,0.324,4.01,2.493,4.896c3.459,1.418,7.407,3.581,8.714,7.368\n\t\t\tc1.398,4.055-1.631,8.376-4.075,11.275c-3.226,3.827,2.234,9.407,5.487,5.552c4.403-5.226,7.531-11.101,6.274-18.123\n\t\t\tc-0.035-0.193-0.09-0.376-0.133-0.564c0.299-0.43,0.517-0.941,0.583-1.561c0.805-7.585,2.917-14.945,3.646-22.543\n\t\t\tc0.594-1.29,0.776-2.785,0.42-4.116C355.549,189.126,352.411,187.664,349.294,188.247z M347.011,213.094\n\t\t\tc-0.783-0.692-1.617-1.333-2.491-1.922c0.071-0.435,0.098-0.903,0.07-1.407c-0.035-0.583-0.008-1.168,0.027-1.749\n\t\t\tc0.015-0.205,0.032-0.405,0.052-0.607c0.01-0.054,0.02-0.11,0.034-0.186c0.139-0.786,0.352-1.556,0.588-2.317\n\t\t\tc0.101-0.274,0.155-0.425,0.165-0.468c0.174-0.371,0.365-0.733,0.562-1.092c0.645-1.173,0.286-0.605,1.246-1.594\n\t\t\tc0.498-0.515,1.205-0.938,2.038-1.283C348.666,204.696,347.75,208.881,347.011,213.094z M369.03,190.552\n\t\t\tc0,3.395-2.72,6.148-6.075,6.148c-3.358,0-6.078-2.753-6.078-6.148c0-3.396,2.72-6.147,6.078-6.147\n\t\t\tC366.31,184.404,369.03,187.156,369.03,190.552z\"/>\n\t\t<g id=\"married_3_\">\n\t\t\t<path fill=\"#554263\" d=\"M310.222,217.412L310.222,217.412L310.222,217.412L310.222,217.412z M301.229,201.511\n\t\t\t\tc-0.536-1.28-1.549-2.312-2.811-2.88c0.005-0.052,0.016-0.104,0.016-0.159c0-1.329-1.077-2.406-2.408-2.406\n\t\t\t\tc-1.329,0-2.407,1.077-2.407,2.406c0,0.106,0.017,0.206,0.028,0.306c-1.197,0.632-2.128,1.697-2.595,2.983\n\t\t\t\tc-1.665,1.851-3.661,4.484-5.605,8.05c-1.893-2.446-5.057-3.787-8.072-4.567l-2.822,5.801l0.613-5.175h0.104v-0.859h-2.135v0.859\n\t\t\t\th0.109l0.724,5.179l-2.823-6.038c-0.262,0.073,0.065,0.012-0.184,0.108c-4.414,1.064-8.322,3.025-9.969,7.482\n\t\t\t\tc-1.736,4.7-0.996,10.46-0.437,15.206c0.346,2.944,5.006,2.976,4.656,0c-0.463-3.947-0.218-7.871-0.109-11.863\n\t\t\t\tc0.044-1.656,0.648-2.866,1.573-3.779l-0.053,20.432v20.342c0,1.674,1.225,3.027,2.945,3.027s3.114-1.354,3.114-3.027v-21.194\n\t\t\t\tc0,0,0.099-1.073,1.194-1.087c1.095-0.011,1.067,1.034,1.067,1.034v21.187c0,1.673,1.395,3.029,3.115,3.029\n\t\t\t\ts3.114-1.356,3.114-3.029l0.104-21.866c0-0.207,0.021-14.781,0.026-18.663c0.731,0.814,0.796,2.066,1.419,3.294\n\t\t\t\tc-0.184,0.459-0.365,0.927-0.543,1.409l-0.132,0.36h1.591c0.828,1.879,1.223,3.944,1.32,6.027\n\t\t\t\tc-0.113,1.261-0.165,2.539-0.173,3.822c-0.001,0.073,0.013,0.134,0.019,0.202c-0.339,2.969,4.312,2.932,4.657-0.009\n\t\t\t\tc0.209-1.793,0.112-3.566-0.161-5.33c0.165-1.232,0.457-2.431,0.973-3.621c0.468,0.783,1.847,3.742-0.337,8.867\n\t\t\t\tc-4.493,10.535-3.522,20.137-3.511,20.235c0.028,0.271,0.26,0.478,0.532,0.478h3.427v5.149c0,1.539,0.961,2.786,2.309,2.786\n\t\t\t\tc1.348,0,2.439-1.247,2.439-2.786v-5.149h1.773v5.097c0,1.537,1.09,2.783,2.442,2.783c1.348,0,2.44-1.246,2.44-2.783l0.041-5.097\n\t\t\t\th3.141c0.264,0,0.488-0.193,0.53-0.455c0.059-0.391,1.447-9.708-3.052-20.258c-1.764-4.142-1.22-6.848-0.689-8.16\n\t\t\t\tc0.862,2.312,1.751,5.227,1.767,8.05c0.018,2.76,4.298,2.76,4.28,0c-0.022-3.404-0.322-6.769-1.413-9.849h3.832l-0.113-0.352\n\t\t\t\tC309.937,216.551,306.708,207.022,301.229,201.511z M274.177,223.227c-0.524,0-0.948-0.425-0.948-0.95\n\t\t\t\tc0-0.522,0.424-0.949,0.948-0.949c0.523,0,0.949,0.426,0.949,0.949C275.127,222.802,274.701,223.227,274.177,223.227z\n\t\t\t\t M274.177,220.242c-0.524,0-0.948-0.425-0.948-0.949c0-0.524,0.424-0.948,0.948-0.948c0.523,0,0.949,0.424,0.949,0.948\n\t\t\t\tC275.127,219.816,274.701,220.242,274.177,220.242z M274.248,217.255c-0.525,0-0.949-0.426-0.949-0.95\n\t\t\t\tc0-0.523,0.424-0.948,0.949-0.948c0.523,0,0.949,0.425,0.949,0.948C275.197,216.829,274.771,217.255,274.248,217.255z\n\t\t\t\t M278.14,211.877l0.473-1.382l-1.455,1.964l1.455-3.928l0.51,3.928L278.14,211.877z M282.815,216.877\n\t\t\t\tc0.08-0.209,0.161-0.413,0.241-0.617c0.115,0.204,0.224,0.409,0.328,0.617H282.815z M291.259,203.573\n\t\t\t\tc0.743-0.232,2.067-0.771,3.199-1.902c2.975,2.376,5.793,2.217,6.648,2.102c-0.085,2.64-2.255,4.766-4.918,4.766\n\t\t\t\tc-2.718,0-4.928-2.209-4.928-4.926C291.257,203.6,291.259,203.586,291.259,203.573z M301.462,227.792\n\t\t\t\tc3.822,8.969,3.247,17.233,3.031,19.222h-17.042c-0.129-2.035-0.348-10.277,3.462-19.222c2.198-5.146,1.065-8.371,0.408-9.604\n\t\t\t\tc0.559-0.229,1.557-0.569,2.863-0.775h4.381c1.188,0.198,2.033,0.519,2.509,0.741\n\t\t\t\tC300.421,219.362,299.246,222.598,301.462,227.792z M293.126,211.974c-0.481,0-0.871-0.389-0.871-0.87\n\t\t\t\tc0-0.48,0.39-0.869,0.871-0.869c0.479,0,0.868,0.389,0.868,0.869C293.994,211.584,293.605,211.974,293.126,211.974z\n\t\t\t\t M294.864,213.939c0,0.48-0.39,0.87-0.87,0.87c-0.481,0-0.868-0.389-0.868-0.87c0-0.479,0.386-0.869,0.868-0.869\n\t\t\t\tC294.474,213.071,294.864,213.46,294.864,213.939z M295.357,215.733c0-0.48,0.389-0.869,0.87-0.869\n\t\t\t\tc0.06,0,0.118,0.004,0.176,0.018c0.459,0.023,0.826,0.4,0.826,0.865c0,0.159-0.045,0.309-0.121,0.437\n\t\t\t\tc-0.227-0.01-0.46-0.017-0.704-0.017c-0.309,0-0.605,0.011-0.896,0.028C295.42,216.061,295.357,215.907,295.357,215.733z\n\t\t\t\t M299.464,213.954c0,0.479-0.39,0.869-0.869,0.869c-0.481,0-0.871-0.39-0.871-0.869s0.39-0.869,0.871-0.869\n\t\t\t\tC299.074,213.084,299.464,213.474,299.464,213.954z M298.595,211.119c0-0.481,0.389-0.871,0.869-0.871\n\t\t\t\tc0.479,0,0.869,0.389,0.869,0.871c0,0.479-0.391,0.869-0.869,0.869C298.984,211.988,298.595,211.598,298.595,211.119z\n\t\t\t\t M306.199,216.877c-0.74-1.903-1.799-3.69-3.301-5.3c-0.726-0.775-4.865-2.277-6.526-2.277c-1.689,0-5.92,1.464-6.681,2.277\n\t\t\t\tc-0.901,0.967-1.637,2-2.248,3.082c-0.199-0.684-0.399-1.37-0.591-2.06c-0.239-0.855-0.604-1.617-1.059-2.302\n\t\t\t\tc1.689-3.15,3.43-5.569,4.951-7.368c-0.041,0.262-0.065,0.525-0.065,0.797c0,0,0.021-0.004,0.051-0.012\n\t\t\t\tc0.057,2.965,2.481,5.357,5.458,5.357c3.011,0,5.462-2.449,5.462-5.46c0-0.32-0.033-0.632-0.086-0.938\n\t\t\t\tc4.437,4.963,7.299,12.496,7.913,14.203H306.199z M273.85,203.855c2.925,0,5.295-2.37,5.295-5.294\n\t\t\t\tc0-2.922-2.37-5.292-5.295-5.292c-2.924,0-5.295,2.37-5.295,5.292C268.555,201.485,270.926,203.855,273.85,203.855z\"/>\n\t\t</g>\n\t\t<g id=\"graduated_3_\">\n\t\t\t<path fill=\"#554263\" d=\"M221.743,201.814c0,2.791,2.259,5.052,5.044,5.052c2.784,0,5.043-2.261,5.043-5.052H221.743z\n\t\t\t\t M221.164,201.046l11.46-0.044l-0.004-0.786l1.119-0.625c0.158,0.18,0.285,0.387,0.354,0.616\n\t\t\t\tc0.104,0.354,0.048,0.716-0.174,1.108c-0.381,0.676-0.44,1.173-0.178,1.479c0.139,0.166,0.36,0.236,0.623,0.236\n\t\t\t\tc0.443-0.002,1.017-0.213,1.556-0.531l0.014,0.058l1.64-0.583l-0.144-0.551l-1.076,0.383l-0.037-0.064\n\t\t\t\tc-0.067,0.052-0.134,0.1-0.2,0.148l-0.324,0.116l0.022,0.083c-0.822,0.5-1.61,0.648-1.817,0.405\n\t\t\t\tc-0.119-0.135-0.032-0.488,0.223-0.945c0.283-0.501,0.353-0.999,0.214-1.48c-0.074-0.251-0.2-0.472-0.355-0.67l0.267-0.149\n\t\t\t\tl-7.745-4.66l-6.938,4.713l1.496,0.776L221.164,201.046z M223.456,207.828l3.44,8.147l4.163-8.064\n\t\t\t\tC228.65,207.549,225.764,207.625,223.456,207.828z M234.818,209.625c-0.141-0.166-0.292-0.302-0.445-0.425\n\t\t\t\tc-0.075-0.155-0.167-0.299-0.28-0.428c-0.196-0.098-0.409-0.188-0.63-0.27l-6.784,13.146l-5.711-13.522\n\t\t\t\tc-0.12,0.019-0.247,0.037-0.354,0.055c-3.123-3.489-5.323-7.671-6.626-12.327c-0.099-0.353-0.25-0.646-0.418-0.912l4.103,0.459\n\t\t\t\tl0.251-2.263l-14.615-1.637l-0.251,2.263l5.688,0.638c-0.842,0.694-1.33,1.786-0.946,3.161c2.08,7.433,6.1,13.681,11.895,18.534\n\t\t\t\tl-3.584,27.806h3.66l0.046,9.754c0,1.598,1.327,2.891,2.967,2.891c1.638,0,2.968-1.293,2.968-2.891v-9.754h2.152v9.81\n\t\t\t\tc0,1.595,1.328,2.89,2.966,2.89s2.802-1.295,2.802-2.89v-9.81h3.295l-1.544-14.587c1.759,1.776,5.604,1.07,5.556-2.148\n\t\t\t\tC240.875,220.62,239.116,214.639,234.818,209.625z\"/>\n\t\t</g>\n\t\t<g id=\"child_3_\">\n\t\t\t<path fill=\"#554263\" d=\"M37.149,217.647c3.196,0,5.787-2.569,5.787-5.739c0-3.169-2.591-5.74-5.787-5.74\n\t\t\t\tc-3.196,0-5.788,2.57-5.788,5.74C31.362,215.079,33.953,217.647,37.149,217.647z M50.382,226.969\n\t\t\t\tc-3.131-2.397-6.369-4.639-9.889-6.442c-0.997-0.805-2.254-1.296-3.624-1.306c-1.521-0.01-2.934,0.59-4,1.559\n\t\t\t\tc-2.859,1.619-5.546,3.505-8.156,5.503c-1.192,0.911-1.828,2.338-0.993,3.751c0.689,1.167,2.588,1.901,3.785,0.986\n\t\t\t\tc1.13-0.866,2.277-1.711,3.443-2.522v1.183h11.758v-1.476c1.67,1.102,3.292,2.283,4.884,3.5c1.197,0.917,3.096,0.183,3.785-0.985\n\t\t\t\tC52.21,229.308,51.573,227.881,50.382,226.969z M38.519,237.301c0.41-0.264,0.623-0.551,0.623-0.551l3.564-4.208v-2.52H30.96\n\t\t\t\tl0.04,2.062l3.196,4.476l0.075,0.075c0.47,0.349,0.937,0.618,1.388,0.802l0.068,0.019c0.395,0.074,0.73,0.109,1.057,0.111h0.034\n\t\t\t\tc0.52,0,1.06-0.077,1.605-0.225L38.519,237.301z M36.818,236.883v0.344l-0.03-0.344c-0.274,0-0.561-0.03-0.898-0.091\n\t\t\t\tc-0.374-0.156-0.764-0.383-1.161-0.671l-3.041-4.26l-0.021-1.15h10.35v1.582l-3.417,4.036c-0.004,0.003-0.142,0.188-0.412,0.37\n\t\t\t\tC37.719,236.821,37.259,236.883,36.818,236.883z M34,236.86l-0.055-0.058l-3.208-4.492c-2.235,2.106-3.761,4.597-3.833,7.723\n\t\t\t\tc-0.071,3.081,2.06,5.811,4.289,7.705c2.693,2.288,6.625-1.575,3.911-3.879C32.323,241.494,31.829,239.327,34,236.86z\n\t\t\t\t M39.423,236.948c-0.001,0.002-0.016,0.02-0.025,0.035c2.401,2.559,1.969,4.784-0.896,7.218\n\t\t\t\tc-2.714,2.304,1.218,6.167,3.911,3.878c2.432-2.064,4.008-4.507,4.289-7.703c0.258-2.937-1.694-5.684-3.721-7.623L39.423,236.948\n\t\t\t\tz\"/>\n\t\t</g>\n\t</g>\n</g>\n<g id=\"sub-header\">\n\t<text transform=\"matrix(1.0003 0 0 1 308.4204 161.8794)\" fill=\"#554263\" font-family=\"'Verdana, sans-serif'\" font-size=\"16.2095\" font-style=\"italic\">quarter-life crisis</text>\n\t<text transform=\"matrix(1.0003 0 0 1 445.6016 161.8794)\" fill=\"#554263\" font-family=\"'Verdana, sans-serif'\" font-size=\"16.2095\" font-style=\"italic\">mid-life crisis</text>\n</g>\n<g id=\"header\">\n\t<g id=\"author\">\n\t\t<a xlink:href=\"http://fundersandfounders.com/author/anna-vital/\" target=\"_top\"><text transform=\"matrix(1 0 0 1 840.0454 92.1748)\" fill=\"#8E8099\" font-family=\"'HelveticaCYPlain'\" font-size=\"19\">by Anna Vital</text>\n\t\t</a>\n\t</g>\n\t\n\t\t<text transform=\"matrix(1.0026 0 0 1 159.4043 90.1201)\" fill=\"#554263\" style=\"font-family: Lucida, sans-serif; font-stretch: condensed; font-weight: bold; \" font-size=\"60\">TOO LATE TO START?</text>\n\t\n\t<text transform=\"matrix(1.0003 0 0 1 35.4619 322.2427)\" fill=\"#C2BFC7\" font-family=\"'Helvetica-Oblique'\" font-size=\"16.2095\">years of life</text>\n</g>\n</svg>\n</div>\n<script type=\"text/javascript\">\nvar FnF = FnF || {};\nFnF.founders = {\n \"name\": \"Founders\",\n \"children\": [\n  {\n   \"name\": \"15..19\",\n   \"range\" : 15,\n   \"children\": [\t\t\n\t\t{\"company\": \"Dell\", \"name\": \"Michael\", \"lastname\": \"Dell\", \"birth\": \"1965\", \"founded\": \"1984-11-04\", \"age\": 18, \"more\" : \"assembling computers \\n in his college apartment\", \"link\" : \"en.wikipedia.org/wiki/Michael_Dell\"},\n\t\t{\"company\": \"UPS\", \"name\": \"James\", \"lastname\" : \"Casey\", \"birth\": \"1888-03-29\", \"founded\": \"1907-08-28\", \"age\": 19, \"more\" : \"delivering packages \\n on $100 borrowed from a friend\", \"link\" : \"en.wikipedia.org/wiki/James_E._Casey\"},\n\t\t{\"company\": \"Facebook\", \"name\": \"Mark\", \"lastname\": \"Zuckerberg\", \"birth\": \"1984-05-14\", \"founded\": \"2004-02-04\", \"age\": 19, \"more\" : \"launching the website \\n at his dorm room in Harvard\", \"link\" : \"en.wikipedia.org/wiki/Mark_Zuckerberg\"}\t\t\n  ]},\n  {\n   \"name\": \"20..24\",\n   \"range\" : 20,\n   \"children\": [\t\t\n\t\t{\"company\": \"Microsoft\", \"name\": \"Bill\", \"lastname\" : \"Gates\", \"birth\": \"1955-10-28\", \"founded\": \"1975-04-04\", \"age\": 20, \"more\" : \"selling a program \\nhe did not have\", \"link\" : \"en.wikipedia.org/wiki/Bill_Gates\"},\n\t\t{\"company\": \"Apple\", \"name\": \"Steve\", \"lastname\" : \"Jobs\", \"birth\": \"1955-02-24\", \"founded\": \"1976-04-01\", \"age\": 21, \"more\" : \"making computers in garage\", \"link\" : \"en.wikipedia.org/wiki/Steve_Jobs\"},\n\t\t{\"company\": \"Burberry\", \"name\": \"Thomas\", \"lastname\" : \"Burberry\", \"birth\": \"1835-08-27\", \"founded\": \"1856\", \"age\": 21, \"more\" : \"selling sports clothes \\n from a small London shop\", \"link\" : \"en.wikipedia.org/wiki/Thomas_Burberry\"},\n\t\t{\"company\": \"Tesco\", \"name\": \"Jack\", \"lastname\" : \"Cohen\", \"birth\": \"1898-10-06\", \"founded\": \"1919\", \"age\": 21, \"more\" : \"buying one market stall\", \"link\" : \"en.wikipedia.org/wiki/Jack_Cohen_(businessman)\"},\n\t\t{\"company\": \"Harley-Davidson\", \"name\": \"Arthur\", \"lastname\" : \"Davidson\", \"birth\": \"1881-02-11\", \"founded\": \"1903\", \"age\": 22, \"more\" : \"making a bike easy \\nfor him to go fishing\", \"link\" : \"en.wikipedia.org/wiki/Arthur_Davidson_(motorcycling)\"},\n\t\t{\"company\": \"Microsoft\", \"name\": \"Paul\", \"lastname\" : \"Allen\", \"birth\": \"1953-01-21\", \"founded\": \"1975-04-04\", \"age\": 22, \"more\" : \"selling a program \\nhe did not have\", \"link\" : \"en.wikipedia.org/wiki/Paul_Allen\"},\n\t\t{\"company\": \"Walt Disney\", \"name\": \"Walt\", \"lastname\" : \"Disney\", \"birth\": \"1901-12-05\", \"founded\": \"1923-10-16\", \"age\": 22, \"more\" : \"after his other studio went bust\", \"link\" : \"en.wikipedia.org/wiki/Walt_Disney\"},\n\t\t{\"company\": \"Heineken\", \"name\": \"Gerard\", \"lastname\" : \"Heineken\", \"birth\": \"1841-09-29\", \"founded\": \"1864\", \"age\": 23, \"more\" : \"the first brewery \\nto have a lab\", \"link\" : \"en.wikipedia.org/wiki/Gerard_Adriaan_Heineken\"},\n\t\t{\"company\": \"Harley-Davidson\", \"name\": \"William\", \"lastname\" : \"Harley\", \"birth\": \"1880-12-29\", \"founded\": \"1903\", \"age\": 23, \"more\" : \"making bikes \\n with his friend Arthur\", \"link\" : \"en.wikipedia.org/wiki/William_S._Harley\"}\n  ]},\n  {\n   \"name\": \"25..29\",\n   \"range\" : 25,\n   \"children\": [\t\t\n\t\t{\"company\": \"Best Buy\", \"name\": \"Richard\", \"lastname\" : \"Schulze\", \"birth\": \"1941\", \"founded\": \"1966\", \"age\": 25, \"more\" : \"mortgaging his home \\n to open an audio store\", \"link\" : \"en.wikipedia.org/wiki/Richard_M._Schulze\"},\n\t\t{\"company\": \"Google\", \"name\": \"Sergey\", \"lastname\" : \"Brin\", \"birth\": \"1973-08-21\", \"founded\": \"1998-09-04\", \"age\": 25, \"more\" : \"cramming his dorm with cheap \\ncomputers to index the web\", \"link\" : \"en.wikipedia.org/wiki/Sergey_Brin\"},\n\t\t{\"company\": \"Google\", \"name\": \"Larry\", \"lastname\" : \"Page\", \"birth\": \"1973-03-26\", \"founded\": \"1998-09-04\", \"age\": 25, \"more\" : \"cramming his dorm with cheap \\ncomputers to index the web\", \"link\" : \"en.wikipedia.org/wiki/Larry_Page\"},\n\t\t{\"company\": \"HP\", \"name\": \"William\", \"lastname\" : \"Hewlett\", \"birth\": \"1913-05-20\", \"founded\": \"1939-01-01\", \"age\": 25, \"more\" : \"making a sound oscillator \\nsold to Disney\", \"link\" : \"en.wikipedia.org/wiki/William_Redington_Hewlett\"},\n\t\t{\"company\": \"Sony\", \"name\": \"Akio\", \"lastname\" : \"Morita\", \"birth\": \"1921-01-26\", \"founded\": \"1946-05-07\", \"age\": 25, \"more\" : \"creating audio tape\", \"link\" : \"en.wikipedia.org/wiki/Akio_Morita\"},\n\t\t{\"company\": \"Apple\", \"name\": \"Steve\", \"lastname\" : \"Wozniak\", \"birth\": \"1950-08-11\", \"founded\": \"1976-04-01\", \"age\": 26, \"more\" : \"designed a computer \\nall by himself\", \"link\" : \"en.wikipedia.org/wiki/Steve_Wozniak\"},\n\t\t{\"company\": \"HP\", \"name\": \"David\", \"lastname\" : \"Packard\", \"birth\": \"1912-09-07\", \"founded\": \"1939-01-01\", \"age\": 26, \"more\" : \"making a sound oscillator \\nsold to Disney\", \"link\" : \"en.wikipedia.org/wiki/David_Packard\"},\n\t\t{\"company\": \"Nike\", \"name\": \"Phil\", \"lastname\" : \"Knight\", \"birth\": \"1938-02-24\", \"founded\": \"1964-01-25\", \"age\": 26, \"more\" : \"cold calling a running \\nshoe firm in Japan\", \"link\" : \"en.wikipedia.org/wiki/Phil_Knight\"},\n\t\t{\"company\": \"AOL\", \"name\": \"Steve\", \"lastname\" : \"Case\", \"birth\": \"1958-08-21\", \"founded\": \"1985\", \"age\": 27, \"more\" : \"letting  people connect \\nthrough Internet portal\", \"link\" : \"en.wikipedia.org/wiki/Steve_Case\" },\t\t\n\t\t{\"company\": \"Whole Foods\", \"name\": \"John\", \"lastname\" : \"Mackey\", \"birth\": \"1953-08-15\", \"founded\": \"1980\", \"age\": 27, \"more\" : \"opening a health food store \\nwith his girlfriend\", \"link\" : \"en.wikipedia.org/wiki/John_Mackey(businessman)\"},\n\t\t{\"company\": \"FedEx\", \"name\": \"Fred\", \"lastname\" : \"Smith\", \"birth\": \"1944-08-11\", \"founded\": \"1971-06-18\", \"age\": 27, \"more\" : \"based on his college paper \\nabout overnight delivery\", \"link\" : \"en.wikipedia.org/wiki/Frederick_W._Smith\"},\n\t\t{\"company\": \"Walgreens\", \"name\": \"Charles\", \"lastname\" : \"Walgreen\", \"birth\": \"1873-10-09\", \"founded\": \"1901\", \"age\": 28, \"more\" : \"buying a pharmacy \\nfrom his boss\", \"link\" : \"en.wikipedia.org/wiki/Charles_Rudolph_Walgreen\"},\n\t\t{\"company\": \"eBay\", \"name\": \"Pierre\", \"lastname\" : \"Omidyar\", \"birth\": \"1967-06-21\", \"founded\": \"1995-09-03\", \"age\": 28, \"more\" : \"writing code for \\nauction website\", \"link\" : \"en.wikipedia.org/wiki/Pierre_Omidyar\"},\n\t\t{\"company\": \"L'Oral\", \"name\": \"Eugne\", \"lastname\" : \"Schueller\", \"birth\": \"1881-03-20\", \"founded\": \"1909\", \"age\": 28, \"more\" : \"with a new hair dye formula\", \"link\" : \"en.wikipedia.org/wiki/Eugne_Schueller\"},\n\t\t{\"company\": \"Cisco\", \"name\": \"Sandra\", \"lastname\" : \"Lerner\", \"birth\": \"1955\", \"founded\": \"1984-12\", \"age\": 28, \"more\" : \"selling routers through \\nword of mouth\", \"link\" : \"en.wikipedia.org/wiki/Sandra_Lerner\"},\n\t\t{\"company\": \"Expedia\", \"name\": \"Richard\", \"lastname\" : \"Barton\", \"birth\": \"1967-06-02\", \"founded\": \"1996\", \"age\": 29, \"more\" : \"while working at Microsoft\", \"link\" : \"en.wikipedia.org/wiki/Rich_Barton\"},\n\t\t{\"company\": \"Rolls-Royce\", \"name\": \"Charles\", \"lastname\" : \"Rolls\", \"birth\": \"1877-08-27\", \"founded\": \"1906\", \"age\": 29, \"more\" : \"selling all cars \\nhis partner made\", \"link\" : \"en.wikipedia.org/wiki/Charles_Rolls\"},\n\t\t{\"company\": \"Visa\", \"name\": \"Dee\", \"lastname\" : \"Hock\", \"birth\": \"1929\", \"founded\": \"1958\", \"age\": 29, \"more\" : \"convincing banks to give up \\nownership of credit cards\", \"link\" : \"en.wikipedia.org/wiki/Dee_Hock\"}\n   ]},\n  {\n   \"name\": \"30..34\",\n   \"range\" : 30,\n   \"children\": [\t\t\n\t\t{\"company\": \"Amazon\", \"name\": \"Jeff\", \"lastname\" : \"Bezos\", \"birth\": \"1964-01-12\", \"founded\": \"1994\", \"age\": 30, \"more\" : \"pioneering e-commerce, \\nstarting selling books\", \"link\" : \"en.wikipedia.org/wiki/Jeff_Bezos\"},\n\t\t{\"company\": \"H&M\", \"name\": \"Erling\", \"lastname\" : \"Persson\", \"birth\": \"1917-01-21\", \"founded\": \"1947\", \"age\": 30, \"more\" : \"selling women's clothing\", \"link\" : \"en.wikipedia.org/wiki/Erling_Persson\"},\n\t\t{\"company\": \"Nintendo\", \"name\": \"Fusajiro\", \"lastname\" : \"Yamauchi\", \"birth\": \"1859-11-22\", \"founded\": \"1889-09-23\", \"age\": 30, \"more\" : \"from a small hanafuda \\ngame firm\", \"link\" : \"en.wikipedia.org/wiki/Hiroshi_Yamauchi\"},\n\t\t{\"company\": \"Cisco\", \"name\": \"Leonard\", \"lastname\" : \"Bosack\", \"birth\": \"1952\", \"founded\": \"1984-12\", \"age\": 31, \"more\" : \"selling routers through \\nword of mouth\", \"link\" : \"en.wikipedia.org/wiki/Erling_Persson\"},\n\t\t{\"company\": \"Intuit\", \"name\": \"Scott\", \"lastname\" : \"Cook\", \"birth\": \"1952\", \"founded\": 1983, \"age\": 31, \"more\" : \"after hearing wife's complain \\nabout paying bills\", \"link\" : \"en.wikipedia.org/wiki/Scott_Cook\"},\n\t\t{\"company\": \"Siemens\", \"name\": \"Werner\", \"lastname\" : \"von Siemens\", \"birth\": \"1816-12-13\", \"founded\": \"1847-10-12\", \"age\": 31, \"more\" : \"inventing needle telegraph\", \"link\" : \"en.wikipedia.org/wiki/Werner_von_Siemens\"},\n\t\t{\"company\": \"Xerox\", \"name\": \"Chester\", \"lastname\" : \"Carlson\", \"birth\": \"1906-02-08\", \"founded\": \"1938\", \"age\": 32, \"more\" : \"after 22 years of trying \\nto make a dry copy\", \"link\" : \"en.wikipedia.org/wiki/Chester_Carlson\"},\n\t\t{\"company\": \"Acer\", \"name\": \"Stan\", \"lastname\" : \"Shih\", \"birth\": \"1944-12-08\", \"founded\": \"1976\", \"age\": 32, \"more\" : \"selling clones of Apple II \\ncomputer\", \"link\" : \"en.wikipedia.org/wiki/Stan_Shih\"},\n\t\t{\"company\": \"Baidu\", \"name\": \"Robin\", \"lastname\" : \"Li\", \"birth\": \"1968-11-17\", \"founded\": \"2000-01-01\", \"age\": 32, \"more\" : \"developing search algorithms \\nbefore Google\", \"link\" : \"en.wikipedia.org/wiki/Robin_Li\"},\n\t\t{\"company\": \"Peugeot\", \"name\": \"Armand\", \"lastname\" : \"Peugeot\", \"birth\": \"1849-03-26\", \"founded\": \"1882\", \"age\": 32, \"more\" : \"producing coffee grinders \\nand bicycles\", \"link\" : \"en.wikipedia.org/wiki/Armand_Peugeot\"},\n\t\t{\"company\": \"Oracle\", \"name\": \"Larry\", \"lastname\" : \"Ellison\", \"birth\": \"1944-08-17\", \"founded\": \"1977\", \"age\": 33, \"more\" : \"making a database \\nfor the CIA\", \"link\" : \"en.wikipedia.org/wiki/Larry_Ellison\"},\n\t\t{\"company\": \"Procter & Gamble\", \"name\": \"James\", \"lastname\" : \"Gamble\", \"birth\": \"1803-04-03\", \"founded\": \"1837-10-31\", \"age\": 33, \"more\" : \"having invented the formula \\nof ivory soap\", \"link\" : \"en.wikipedia.org/wiki/James_Gamble_%28industrialist%29\"},\n\t\t{\"company\": \"Wells Fargo\", \"name\": \"William\", \"lastname\" : \"Fargo\", \"birth\": \"1818-05-20\", \"founded\": \"1852-03-18\", \"age\": 34, \"more\" : \"pioneering banking \\nin California\", \"link\" : \"en.wikipedia.org/wiki/William_Fargo\"}\n  ]},\n  {\n   \"name\": \"35..39\",\n   \"range\" : 35,\n   \"children\": [\t\n   \t\t{\"company\": \"Procter&Gamble\", \"name\": \"William\", \"lastname\" : \"Procter\", \"birth\": \"1801-12-07\", \"founded\": \"1837-10-31\", \"age\": 35, \"more\" : \"making candles with \\nhis brother-in-law\", \"link\" : \"http://en.wikipedia.org/wiki/William_Procter_%28candlemaker%29\"},\t\n\t\t{\"company\": \"Boeing\", \"name\": \"William\", \"lastname\" : \"Boeing\", \"birth\": \"1881-10-01\", \"founded\": \"1916-07-15\", \"age\": 35, \"more\" : \"after crashing his plane, \\nunable to repair it\", \"link\" : \"en.wikipedia.org/wiki/William_Boeing\"},\n\t\t{\"company\": \"Salesforce\", \"name\": \"Marc\", \"lastname\" : \"Benioff\", \"birth\": \"1964-09-25\", \"founded\": \"1999\", \"age\": 35, \"more\" : \"in his apartment proclaiming \\n'The End of Software'\", \"link\" : \"en.wikipedia.org/wiki/Marc_Benioff\"},\n\t\t{\"company\": \"Carlsberg\", \"name\": \"J. C.\", \"lastname\" : \"Jacobsen\", \"birth\": \"1811-09-02\", \"founded\": \"1847\", \"age\": 36, \"more\" : \"using science to make good \\nbeer consistently\", \"link\" : \"en.wikipedia.org/wiki/J._C._Jacobsen\"},\n\t\t{\"company\": \"Hitachi\", \"name\": \"Namihei\", \"lastname\" : \"Odaira\", \"birth\": \"1874\", \"founded\": \"1910\", \"age\": 36, \"more\" : \"creating electric motor\\n while working in a mine\", \"link\" : \"en.wikipedia.org/wiki/Namihei_Odaira\"},\n\t\t{\"company\": \"LinkedIn\", \"name\": \"Reid\", \"lastname\" : \"Hoffman\", \"birth\": \"1967-08-05\", \"founded\": \"2003-05\", \"age\": 36, \"more\" : \"creating first business-minded \\nsocial network in 2002\", \"link\" : \"en.wikipedia.org/wiki/Reid_Hoffman\"},\n\t\t{\"company\": \"Macy's\", \"name\": \"Rowland\", \"lastname\" : \"Macy\", \"birth\": \"1822-08-30\", \"founded\": \"1858\", \"age\": 36, \"more\" : \"as a dried goods store in NYC \\nafter 4 of his stores failed\", \"link\" : \"en.wikipedia.org/wiki/Rowland_Hussey_Macy\"},\n\t\t{\"company\": \"Gap\", \"name\": \"Doris\", \"lastname\" : \"Fisher\", \"birth\": \"1932\", \"founded\": \"1969\", \"age\": 37, \"more\" : \"selling Levi's jeans \\nand music records\", \"link\" : \"en.wikipedia.org/wiki/Doris_F._Fisher\"},\n\t\t{\"company\": \"Hershey's\", \"name\": \"Milton\", \"lastname\" : \"Hershey\", \"birth\": \"1857-09-13\", \"founded\": \"1894\", \"age\": 37, \"more\" : \"making fresh-milk caramels \\nand hawking them by night\", \"link\" : \"en.wikipedia.org/wiki/Milton_S._Hershey\"},\n\t\t{\"company\": \"Hugo Boss\", \"name\": \"Hugo\", \"lastname\" : \"Boss\", \"birth\": \"1885-07-08\", \"founded\": \"1923\", \"age\": 38, \"more\" : \"with six sewing machines \\nleft from his bankruptcy\", \"link\" : \"en.wikipedia.org/wiki/Hugo_Boss_(fashion_designer)\"},\n\t\t{\"company\": \"Sony\", \"name\": \"Masaru\", \"lastname\" : \"Ibuka\", \"birth\": \"1908-04-11\", \"founded\": \"1946-05-07\", \"age\": 38, \"more\" : \"applying transistor technology \\nto non-military uses\", \"link\" : \"en.wikipedia.org/wiki/Masaru_Ibuka\"},\n\t\t{\"company\": \"Public Storage\", \"name\": \"Wayne\", \"lastname\" : \"Hughes\", \"birth\": \"1934-09-28\", \"founded\": \"1972\", \"age\": 38, \"more\" : \"pioneering self-storage\", \"link\" : \"en.wikipedia.org/wiki/B._Wayne_Hughes\"},\n\t\t{\"company\": \"Garmin\", \"name\": \"Min\", \"lastname\" : \"Kao\", \"birth\": \"1949\", \"founded\": \"1989\", \"age\": 39, \"more\" : \"applying GPS technology \\nto non-military uses\", \"link\" : \"en.wikipedia.org/wiki/Min_Kao\"},\n\t\t{\"company\": \"HTC\", \"name\": \"Cher\", \"lastname\" : \"Wang\", \"birth\": \"1958-09-14\", \"founded\": \"1997-05-15\", \"age\": 39, \"more\" : \"making tablets and \\nsmartphones\", \"link\" : \"en.wikipedia.org/wiki/Cher_Wang\"},\n\t\t{\"company\": \"Zara (Inditex)\", \"name\": \"Amancio\", \"lastname\" : \"Ortega\", \"birth\": \"1936-03-28\", \"founded\": \"1975\", \"age\": 39, \"more\" : \"organizing local women into \t\\na bathrobe sewing firm\", \"link\" : \"en.wikipedia.org/wiki/Amancio_Ortega_Gaona\"},\n\t\t{\"company\": \"Intel\", \"name\": \"Gordon\", \"lastname\" : \"Moore\", \"birth\": \"1929-01-03\", \"founded\": \"1968-07-18\", \"age\": 39, \"more\" : \"creating a faster RAM \\nmemory chips\", \"link\" : \"en.wikipedia.org/wiki/Gordon_Moore\"},\n\t\t{\"company\": \"Lenovo\", \"name\": \"Liu\", \"lastname\" : \"Chuanzhi\", \"birth\": \"1944-04-29\", \"founded\": \"1984\", \"age\": 39, \"more\" : \"importing TVs and \\nservicing computers\", \"link\" : \"en.wikipedia.org/wiki/Liu_Chuanzhi\"}\n  ]},\n  {\n   \"name\": \"40..44\",\n   \"range\" : 40,\n   \"children\": [\t\t\n\t\t{\"company\": \"Costco\", \"name\": \"Jeffrey\", \"lastname\" : \"Brotman\", \"birth\": \"1943\", \"founded\": \"1983-09-15\", \"age\": 40, \"more\" : \"converting a plane hangar \\ninto a warehouse for shopping\", \"link\" : \"en.wikipedia.org/wiki/Jeffrey_Brotman\"},\n\t\t{\"company\": \"Ford\", \"name\": \"Henry\", \"lastname\" : \"Ford\", \"birth\": \"1863-07-30\", \"founded\": \"1903-06-16\", \"age\": 40, \"more\" : \"wanting to build \\na car for the masses\", \"link\" : \"en.wikipedia.org/wiki/Henry_Ford\"},\n\t\t{\"company\": \"Volvo\", \"name\": \"Gustaf\", \"lastname\" : \"Larson\", \"birth\": \"1887-07-08\", \"founded\": \"1927\", \"age\": 40, \"more\" : \"making an oral contract with \\nco-founder to make first 10 cars\", \"link\" : \"en.wikipedia.org/wiki/Gustaf_Larson\"},\n\t\t{\"company\": \"Christian Dior\", \"name\": \"Christian\", \"lastname\" : \"Dior\", \"birth\": \"1905\", \"founded\": \"1946-12-16\", \"age\": 41, \"more\" : \"inventing a voluptuous look \\namid boxy post-war styles\", \"link\" : \"en.wikipedia.org/wiki/Christian_Dior\"},\n\t\t{\"company\": \"Gap\", \"name\": \"Donald\", \"lastname\" : \"Fisher\", \"birth\": \"1928-09-03\", \"founded\": \"1969\", \"age\": 41, \"more\" : \"selling Levi's jeans \\nand music records\", \"link\" : \"en.wikipedia.org/wiki/Donald_Fisher\"},\n\t\t{\"company\": \"Intel\", \"name\": \"Robert\", \"lastname\" : \"Noyce\", \"birth\": \"1927-12-12\", \"founded\": \"1968-07-18\", \"age\": 41, \"more\" : \"co-inventing \\nthe integrated circuit\", \"link\" : \"en.wikipedia.org/wiki/Robert_Noyce\"},\n\t\t{\"company\": \"Coca-Cola\", \"name\": \"Asa\", \"lastname\" : \"Candler\", \"birth\": \"1851-12-30\", \"founded\": \"1892\", \"age\": 41, \"more\" : \"buying the Coca-Cola recipe \\nfor $550 (about $14,000 today)\", \"link\" : \"en.wikipedia.org/wiki/Asa_Griggs_Candler\"},\n\t\t{\"company\": \"Adobe\", \"name\": \"John\", \"lastname\" : \"Warnock\", \"birth\": \"1940-10-06\", \"founded\": \"1982-12\", \"age\": 42, \"more\" : \"creating PostScript, \\npage description language\", \"link\" : \"en.wikipedia.org/wiki/John_Warnock\"},\n\t\t{\"company\": \"Lululemon\", \"name\": \"Chip\", \"lastname\" : \"Wilson\", \"birth\": \"1956-03-03\", \"founded\": \"1998\", \"age\": 42, \"more\" : \"creating cotton yoga pants \\nfor active women\", \"link\" : \"en.wikipedia.org/wiki/Chip_Wilson\"},\n\t\t{\"company\": \"Starbucks\", \"name\": \"Jerry\", \"lastname\" : \"Baldwin\", \"birth\": \"1929\", \"founded\": \"1971-03-30\", \"age\": 42, \"more\" : \"selling freshly roasted \\ncoffee beans by the pound\", \"link\" : \"en.wikipedia.org/wiki/Jerry_Baldwin\"},\n\t\t{\"company\": \"Honda\", \"name\": \"Soichiro\", \"lastname\" : \"Honda\", \"birth\": \"1906-11-17\", \"founded\": \"1948-09-24\", \"age\": 42, \"more\" : \"producing motorized bikes\", \"link\" : \"en.wikipedia.org/wiki/Soichiro_Honda\"},\n\t\t{\"company\": \"Dish Network\", \"name\": \"Charlie\", \"lastname\" : \"Ergen\", \"birth\": \"1953-03-01\", \"founded\": 1996, \"age\": 43, \"more\" : \"selling satellite dishes \\ndoor to door in Colorado\", \"link\" : \"en.wikipedia.org/wiki/Charlie_Ergen\"},\n\t\t{\"company\": \"Adobe\", \"name\": \"Charles\", \"lastname\" : \"Geschke\", \"birth\": \"1939-09-11\", \"founded\": \"1982-12\", \"age\": 43, \"more\" : \"creating PostScript, \\npage description language\", \"link\" : \"en.wikipedia.org/wiki/Charles_Geschke\"},\n\t\t{\"company\": \"Dollar Tree\", \"name\": \"Macon\", \"lastname\" : \"Brock Jr\", \"birth\": \"1943\", \"founded\": \"1986\", \"age\": 43, \"more\" : \"as a toy store in a mall\", \"link\" : \"en.wikipedia.org/wiki/Dollar_Tree\"},\n\t\t{\"company\": \"Comcast\", \"name\": \"Ralph\", \"lastname\" : \"Roberts\", \"birth\": \"1920-03-13\", \"founded\": \"1963\", \"age\": 43, \"more\" : \"buying a small rural \\nantenna TV system\", \"link\" : \"en.wikipedia.org/wiki/Ralph_J._Roberts\"},\n\t\t{\"company\": \"Rolls-Royce\", \"name\": \"Henry\", \"lastname\" : \"Royce\", \"birth\": \"1863-03-27\", \"founded\": \"1906\", \"age\": 43, \"more\" : \"making a deal with Rolls to sell\\nhim all the cars he could make\", \"link\" : \"en.wikipedia.org/wiki/Henry_Royce\"},\n\t\t{\"company\": \"AOL\", \"name\": \"Jim\", \"lastname\" : \"Kimsey\", \"birth\": \"1939-09-15\", \"founded\": \"1983\", \"age\": 44, \"more\" : \"marketing a game \\n console for Atari\", \"link\" : \"en.wikipedia.org/wiki/Jim_Kimsey\"},\n\t\t{\"company\": \"Walmart\", \"name\": \"Sam\", \"lastname\" : \"Walton\", \"birth\": \"1918-03-29\", \"founded\": \"1962\", \"age\": 44, \"more\" : \"purchasing a Ben Franklin \\nvariety store\", \"link\" : \"en.wikipedia.org/wiki/Sam_Walton\"}\n  ]},\n  {\n   \"name\": \"45..49\",\n   \"range\" : 45,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"General Electric\", \"name\": \"Thomas\", \"lastname\" : \"Edison\", \"birth\": \"1847-02-11\", \"founded\": \"1892\", \"age\": 45, \"more\" : \"bringing his various inventions \\ninto one company\", \"link\" : \"en.wikipedia.org/wiki/Thomas_Edison\"},\n\t\t{\"company\": \"Costco\", \"name\": \"James\", \"lastname\" : \"Sinegal\", \"birth\": \"1936-01-01\", \"founded\": \"1983-09-15\", \"age\": 47, \"more\" : \"as one of the first warehouse \\nstores in the U.S.\", \"link\" : \"en.wikipedia.org/wiki/James_Sinegal\"},\n\t\t{\"company\": \"Wells Fargo\", \"name\": \"Henry\", \"lastname\" : \"Wells\", \"birth\": \"1805-12-12\", \"founded\": \"1852-03-18\", \"age\": 47, \"more\" : \"first to introduce banking \\nto the Wild West\", \"link\" : \"en.wikipedia.org/wiki/Henry_Wells\"},\n\t\t{\"company\": \"Goldman Sachs\", \"name\": \"Marcus\", \"lastname\" : \"Goldman\", \"birth\": \"1821-12-09\", \"founded\": \"1869\", \"age\": 48, \"more\" : \"as a one-man broker\\n of debt IOUs\", \"link\" : \"en.wikipedia.org/wiki/Marcus_Goldman\"},\n\t\t{\"company\": \"Home Depot\", \"name\": \"Bernard\", \"lastname\" : \"Marcus\", \"birth\": \"1929\", \"founded\": \"1978\", \"age\": 48, \"more\" : \"after being fired from \\nhome improvement store\", \"link\" : \"en.wikipedia.org/wiki/Bernard_Marcus\"},\n\t\t{\"company\": \"Adidas\", \"name\": \"Adolf\", \"lastname\" : \"Dassler\", \"birth\": \"1900-11-03\", \"founded\": \"1949-08-18\", \"age\": 48, \"more\" : \"vying with his brother to make\\nshoes for Olympic runners\", \"link\" : \"en.wikipedia.org/wiki/Adolf_Dassler\"},\n\t\t{\"company\": \"Ryanair\", \"name\": \"Tony\", \"lastname\" : \"Ryan\", \"birth\": \"1936-02-02\", \"founded\": \"1985\", \"age\": 49, \"more\" : \"with a single 15-seat plane \\nflying from London\", \"link\" : \"nytimes.com/2007/10/04/business/04ryan.html\"},\n\t\t{\"company\": \"Seagate\", \"name\": \"Alan\", \"lastname\" : \"Shugart\", \"birth\": \"1930-09-27\", \"founded\": 1979, \"age\": 49, \"more\" : \"introducing low-cost \\nfloppy disks\", \"link\" : \"en.wikipedia.org/wiki/Alan_Shugart\"}\n  ]},\n  {\n   \"name\": \"50..54\",\n   \"range\" : 50,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"Morgan Stanley\", \"name\": \"Harold\", \"lastname\" : \"Stanley\", \"birth\": \"1885-10-02\", \"founded\": \"1935-09-05\", \"age\": 50, \"more\" : \"trading bonds for companies \\npioneering investment banking\", \"link\" : \"en.wikipedia.org/wiki/Harold_Stanley\"},\n\t\t{\"company\": \"Garmin\", \"name\": \"Gary\", \"lastname\" : \"Burrell\", \"birth\": \"1937\", \"founded\": \"1989\", \"age\": 51, \"more\" : \"first to use GPS technology \\nfor non-military uses\", \"link\" : \"en.wikipedia.org/wiki/Gary_Burrell\"},\n\t\t{\"company\": \"Hyundai Motor\", \"name\": \"Chung\", \"lastname\" : \"Ju-yung\", \"birth\": \"1915-11-25\", \"founded\": \"1967-12-29\", \"age\": 51, \"more\" : \"borrowing money to start \\nan auto service garage\", \"link\" : \"en.wikipedia.org/wiki/Chung_Ju-yung\"},\n\t\t{\"company\": \"Starbucks\", \"name\": \"Gordon\", \"lastname\" : \"Bowker\", \"birth\": \"1920\", \"founded\": \"1971-03-30T08:00:00.000Z\", \"age\": 51, \"more\" : \"selling freshly roasted \\ncoffee beans by the pound\", \"link\" : \"en.wikipedia.org/wiki/Gordon_Bowker\"},\n\t\t{\"company\": \"Campbell Soup\", \"name\": \"Joseph\", \"lastname\" : \"Campbell\", \"birth\": \"1817-05-15\", \"founded\": \"1869\", \"age\": 52, \"more\" : \"condensing soups by halving \\nthe amount of water\", \"link\" : \"en.wikipedia.org/wiki/Joseph_A._Campbell\"},\n\t\t{\"company\": \"Nestl\", \"name\": \"Henri\", \"lastname\" : \"Nestl\", \"birth\": \"1814-08-10\", \"founded\": \"1866\", \"age\": 52, \"more\" : \"inventing powered milk \\nand breast milk substitute\", \"link\" : \"en.wikipedia.org/wiki/Henri_Nestl%C3%A9\"},\n\t\t{\"company\": \"Nissan Motor\", \"name\": \"Yoshisuke\", \"lastname\" : \"Aikawa\", \"birth\": \"1880-11-06\", \"founded\": \"1933-12-26\", \"age\": 52, \"more\" : \"transforming his \\nbrother-in-law's business\", \"link\" : \"en.wikipedia.org/wiki/Yoshisuke_Aikawa\"},\n\t\t{\"company\": \"Este Lauder\", \"name\": \"Este\", \"lastname\" : \"Lauder\", \"birth\": \"1906-07-01\", \"founded\": \"1961\", \"age\": 54, \"more\" : \"selling creams made by\\nher uncle to her friends\", \"link\" : \"en.wikipedia.org/wiki/Est%C3%A9e_Lauder_(businesswoman)\"}\n  ]},\n  {\n   \"name\": \"55..59\",\n   \"range\" : 55,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"Las Vegas Sands\", \"name\": \"Sheldon\", \"lastname\" : \"Adelson\", \"birth\": \"1933-08-04\", \"founded\": \"1988\", \"age\": 55, \"more\" : \"turning an old hotel into the only \\nprivate convention center\", \"link\" : \"en.wikipedia.org/wiki/Sheldon_Adelson\"},\n\t\t{\"company\": \"Porsche\", \"name\": \"Ferdinand\", \"lastname\" : \"Porsche\", \"birth\": \"1875-09-03\", \"founded\": \"1931\", \"age\": 56, \"more\" : \"creating racing car for which \\nhe had no customer\", \"link\" : \"en.wikipedia.org/wiki/Ferdinand_Porsche\"},\n\t\t{\"company\": \"Kawasaki\", \"name\": \"Kawasaki\", \"lastname\" : \"Shz\", \"birth\": \"1837\", \"founded\": \"1896-10-15\", \"age\": 59, \"more\" : \"as a ship building \\ncompany\", \"link\" : \"en.wikipedia.org/wiki/Kawasaki_Sh%C5%8Dz%C5%8D\"}\n  ]},\n  {\n   \"name\": \"60..64\",\n   \"range\" : 60,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"Bank of America\", \"name\": \"Amadeo\", \"lastname\" : \"Giannini\", \"birth\": \"1870-05-06\", \"founded\": \"1930-11-03\", \"age\": 60, \"more\" : \"the first to offer banking \\nfor the middle-class \", \"link\" : \"en.wikipedia.org/wiki/Amadeo_Giannini\"},\n\t\t{\"company\": \"IBM\", \"name\": \"Charles\", \"lastname\" : \"Flint\", \"birth\": \"1850-01-24\", \"founded\": \"1911-06-16\", \"age\": 61, \"more\" : \"foreseeing that punch-card \\n will change the world\", \"link\" : \"en.wikipedia.org/wiki/Charles_Ranlett_Flint\"}\n  ]}\n ]\n}\nFnF.aspectRatio = 970 / 800;\nFnF.chart = d3.select(\"#latetostart-graph\").node();\nFnF.resizeTimer;\nFnF.doResize = function() {\n\tconsole.log('running FnF.doResize()');\n\tclearTimeout(FnF.resizeTimer);\n\tFnF.resizeTimer = setTimeout(function(){\n\t\tvar targetWidth = FnF.chart.parentNode.offsetWidth;\n\t\tconsole.log('resizing to w=' + targetWidth);\n\t\tFnF.chart.style.width = targetWidth + \"px\";\n\t\tFnF.chart.style.height = targetWidth / FnF.aspectRatio + \"px\";\t\n\t}, 100);\n}\nFnF.OFFSET = 120;\nFnF.LEAF_DROP = 50;\nFnF.INITIAL_Y_OFFSET = 300;\nFnF.WIDTH = 970;\nFnF.YEAR_STEP = 4.25;\nFnF.margin = {top: 0, right: 10, bottom: 0, left: 10};\nFnF.width = FnF.WIDTH - FnF.margin.right - FnF.margin.left;\nFnF.height = 800 - FnF.margin.top - FnF.margin.bottom;\n    \nFnF.i = 0;\nFnF.duration = 750;\n// var    root, prevSelected;\nFnF.tree = d3.layout.tree()\n\t.separation(function(a, b) { return a.parent === b.parent ? 1 : 2; })\n    .size([FnF.width, FnF.height]);\nFnF.diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.x, d.y]; });\n    \n    \nvar line = d3.svg.line()\n    .interpolate(\"linear\")\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n    \nFnF.svg = d3.select(\"#container svg\").append(\"svg\")\n    .attr(\"width\", FnF.width + FnF.margin.right + FnF.margin.left)\n    .attr(\"height\", FnF.height + FnF.margin.top + FnF.margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + FnF.margin.left + \",\" + FnF.margin.top + \")\");\nFnF.collapse = function (d) {\n\tif (d.children) {\n\t  d._children = d.children;\n\t  d._children.forEach(FnF.collapse);\n\t  d.children = null;\n\t}\n}\nFnF.root = FnF.founders;\nFnF.root.x0 = FnF.height / 2;\nFnF.root.y0 = 300; // for smooth first transition\nFnF.root.children.forEach(function(d) {\n\tif (!d.range || d.range != 35){\n\t\tFnF.collapse(d);\n\t}\n});\nFnF.svg.append(\"svg:line\")\n\t.attr(\"x1\", 25)\n\t.attr(\"y1\", FnF.INITIAL_Y_OFFSET)\n\t.attr(\"x2\", FnF.WIDTH - 30)\n\t.attr(\"y2\", FnF.INITIAL_Y_OFFSET)\n\t.attr(\"stroke-width\", 4.25)\n\t.attr(\"stroke-dasharray\", \"\" + FnF.YEAR_STEP + \", \" + FnF.YEAR_STEP*2)\n\t.style(\"stroke\", \"rgb(195,190,199)\");\n    \nFnF.doResize();\nFnF.clearInfo = function () {\n  FnF.svg.selectAll(\".year_born\").remove();\n}\nFnF.leafSelect = function(d) {\n  if (d.selected) {\n    d.selected = false;\n    d._selected= true;\n  } else {\n    if (FnF.prevSelected) {\n      FnF.prevSelected.selected = false;\n      FnF.prevSelected._selected = false;\n    }\n     d.selected = true;\n    FnF.prevSelected = d;\n  }\n  var theName = d.name;\n  var theLastName = d.lastname; \n  FnF.clearInfo();\n  FnF.svg.append(\"text\")\n  \t.attr(\"x\", \"15\")\n  \t.attr(\"y\", \"200\")\n  \t.classed(\"year_born\", true)\n  \t.text( d.birth.split(\"-\")[0] );\n}\nFnF.click = function(d) {\n  if (!(d.children || d._children)) {\n  \tFnF.leafSelect(d);\n  \tFnF.update(d);\n  \treturn;\n  }\n  \n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  if (d.parent) {\n    d.parent.children.forEach(function(element) {\n      if (d !== element) {\n        FnF.collapse(element);\n      }\n    });\n  }\n  FnF.update(d);\n  if (FnF.prevSelected) {\n  \tFnF.prevSelected.selected = false;\n  \tFnF.prevSelected._selected = false;\n  }\n  FnF.prevSelected = null;\n  FnF.clearInfo();\n}\n   \nFnF.update = function(source) {\n  // Compute the new tree layout.\n  var nodes = FnF.tree.nodes(FnF.root).reverse();\n  nodes.splice(nodes.length-1,1);\n  links = FnF.tree.links(nodes);\n  nodes.forEach(normalizeNode);\n  // Update the nodes\n  var node = FnF.svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++FnF.i); });\n      \n  var rootNodesCollapsed = node.filter(function(d) {\n        return (d.children || d._children);\n  });\n  \n  rootNodesCollapsed.select(\".info-text\")\n    .select(\"text\")\n  \t.attr(\"dy\",\"-2em\")\n  \t.classed(\"years\", true)\n  \t.text(function(d) {\n  \t\tif (d.children && !d._children)\t{\n  \t\t\treturn d.name;\n  \t\t} else if (d.range == 25 || d.range == 35) {\n      \t\t\treturn d.range;\n      \t}\n  \t});\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.x0 + \",\" + source.y0 + \")\"; })\n      .on(\"click\", FnF.click);\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n  nodeEnter.append(\"g\")\n      .attr(\"class\", function(d) { \n      \treturn \"info-text\" + \n      \t        (d.selected && !d.children && !d._children ? \" selected\" : \"\"); \n      })\n      .attr(\"transform\", \"translate(0,0)\")\n      .attr(\"text-anchor\", \"middle\")\n      .call(function(text){\n      \ttext.each(function(d){\n\t\t\t\t\tvar atext = d3.select(this);\n\t\t\t\t\tif (d.children && !d._children) {\n\t\t\t\t\t\t\tatext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"-2em\").classed(\"years\", true).style(\"fill-opacity\", 1e-6).text(d.name);\n\t\t\t\t\t} else if (d.children || d._children) {\n\t\t\t\t\t\tatext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"-2em\").classed(\"years\", true).style(\"fill-opacity\", 1e-6)\n\t\t\t\t\t\t     .text( (d.range == 25 || d.range == 35) ? d.range : \"\");      \t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar startedAt = atext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"0.8em\").style(\"fill-opacity\", 1e-6);\n\t\t\t\t\tstartedAt.append('tspan').classed(\"more-text\", true).text('at ');\n\t\t\t\t\tstartedAt.append('tspan').text(d.age);\n\t\t\t\t\tvar founder = atext.append('text').classed(\"founder\", true).style(\"fill-opacity\", 1e-6);\n\t\t\t\t\tfounder.append('tspan').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"1.7em\").text(d.name);\n\t\t\t\t\tfounder.append('tspan').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"2.7em\").text(d.lastname);\n\t\t\t\t\tvar company = atext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"4.5em\").classed(\"company\", true).style(\"fill-opacity\", 1e-6);\n\t\t\t\t\tcompany.append('tspan').classed(\"more-text\", true).text('started ');\n\t\t\t\t\tcompany.append('tspan').text(d.company);\n\t\t\t\t\tif (d.more && d.link) {\n            var aStory = d.more.split(\"\\n\");\n            var shortStory = atext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"7em\").classed(\"more-text short-story\", true).style(\"fill-opacity\", 1e-6);\n            shortStory.append('tspan').classed(\"more-text\", true).text(aStory[0]);\n            if (aStory[1]) {\n              shortStory.append('tspan').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"8.5em\").classed(\"more-text\", true).text(aStory[1]);\n            }\n\t\t\t\t\t\tshortStory.append(\"a\").attr(\"xlink:href\", \"http://\"+ d.link).attr(\"target\", \"_blank\").append('tspan').text(\" [..]\");\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tif (d.x > FnF.WIDTH - 60) {\n\t\t\t\t\t\tstartedAt.classed(\"align-right\", true);\n\t\t\t\t\t\tfounder.classed(\"align-right\", true);\n\t\t\t\t\t\tcompany.classed(\"align-right\", true);\n\t\t\t\t\t\tshortStory && shortStory.classed(\"align-right\", true);\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tif (d.x < 50) {\n\t\t\t\t\t\tstartedAt.classed(\"align-left\", true);\n\t\t\t\t\t\tfounder.classed(\"align-left\", true);\n\t\t\t\t\t\tcompany.classed(\"align-left\", true);\n\t\t\t\t\t\tshortStory && shortStory.classed(\"align-left\", true);\n\t\t\t\t\t}\n\t\t\t   }\n      \t})\n      })\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(FnF.duration)\n      .attr(\"transform\", function(d) {\n      \treturn \"translate(\" + d.x + \",\" + d.y  + \")\" + (d.selected && !d.children && !d._children ? \"scale(1.6,1.6)\" : \"\"); \n      });\n      \n  nodeUpdate.select(\".info-text\")\n      .attr(\"class\", function(d) { \n      \treturn \"info-text\" + \n      \t        (d.selected && d.depth > 1 ? \" selected\" : \"\"); \n      })\n      .attr(\"transform\", function(d) { \n      \treturn \"translate(\" + \n      \t        (d.selected && !d.children && !d._children ? (d.x < 50 ? \"-5\" : d.x > FnF.WIDTH - 50 ? \"5\" : \"0\" ) : \"0\") +\n      \t        \",0)\"; \n      });\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", function (d) { return d._children || d.children ? 6.5 : 4.5 } )\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n  nodeUpdate.selectAll(\"text\")\n      .style(\"fill-opacity\", 1);\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(FnF.duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.x + \",\" + source.y + \")\"; })\n      .remove();\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n  nodeExit.selectAll(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n  // Update the links\n  var link = FnF.svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return FnF.diagonal({source: o, target: o});\n      });\n      \n  // Transition links to their new position.\n  link.transition()\n      .duration(FnF.duration)\n      .attr(\"d\", function(d){\n        if (d.target.selected) {\n//           var o = {x: d.source.x, y: d.source.y - FnF.LEAF_DROP};\n//           return FnF.diagonal({source: o, target: o});\n          d.target.y = d.target.y - FnF.LEAF_DROP;\n        }\n\t\treturn FnF.diagonal(d);\n      }).attrTween(\"d\", function (d, i, a) { \n       if (d.target.selected) {\n         return d3.interpolate(a + \"L\" + d.target.x + \",\" + d.target.y,  FnF.diagonal(d) + \"L\" + d.target.x + \",\" + (d.target.y + FnF.LEAF_DROP ));\n       } else if (d.target._selected) {\n         return d3.interpolate(a + \"L\" + d.target.x + \",\" + d.target.y,  FnF.diagonal(d) + \"L\" + d.target.x + \",\" + d.target.y);\n         d.target._selected = false;\n       } else {\n         return d3.interpolate(a, FnF.diagonal(d));\n       }  \n  \t  });\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(FnF.duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return FnF.diagonal({source: o, target: o});\n      }).remove();\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n   \n   \nFnF.update(FnF.root);\nd3.select(window).on(\"resize\", FnF.doResize);\nd3.select(window).on(\"load\", FnF.doResize);\n//d3.select(self.frameElement).style(\"height\", \"800px\");\n// Normalize for fixed-depth.\nfunction normalizeNode(d){\n  \tif (d.parent && d.parent.depth === 0) {\n  \t\td.y = FnF.INITIAL_Y_OFFSET;\n  \t\td.x = d.range * FnF.YEAR_STEP * 3 + 15;\n  \t} else {\n  \t    d.y = FnF.INITIAL_Y_OFFSET + d.depth * FnF.OFFSET;\n        // updating selected node position  \t    \n  \t    if ( d.selected && (d.depth === 2) ) {\n  \t    \td.y = d.y + FnF.LEAF_DROP;\n  \t    }\n  \t}\n}\n</script>", "description": "Too Late To Start", "created_at": "2016-09-23T23:53:07Z", "updated_at": "2016-09-23T23:54:19Z", "api": ["d3.select", "d3.layout.tree", "d3.svg.diagonal", "d3.svg.line", "d3.interpolate"], "readme": "Here is a visualization of the relationship between age and success. Tap on the circles below and investigate for yourself.\nSource: [fundersandfounders.com](http://fundersandfounders.com/too-late-to-start-life-crisis/)", "uid": "markvital_d45fb2d9324dc785136b72f21b5e68b4"}, {"code": "<script>\n\n\nvar margin = {top: 10, right: 10, bottom: 100, left: 40},\n    margin2 = {top: 430, right: 10, bottom: 20, left: 40},\n    margin3 = {top: 0, right: 10, bottom: 0, left: 40},\n    margin4 = {top: 30, right: 10, bottom: 10, left: 10},\n\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    height2 = 500 - margin2.top - margin2.bottom;\n    height3 = 35 - margin3.top - margin3.bottom;\n    height4 = 800 - margin4.top - margin4.bottom;\n\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse,\n    bisectDate = d3.bisector(function(d) { return d.date; }).left;\n\nvar x = d3.time.scale().range([0, width]),\n    x2 = d3.time.scale().range([0, width]),\n    y = d3.scale.linear().range([height, 0]),\n    y2 = d3.scale.linear().range([height2, 0]);\n\nvar xAxis = d3.svg.axis().scale(x).orient(\"bottom\"),\n    xAxis2 = d3.svg.axis().scale(x2).orient(\"bottom\"),\n    yAxis = d3.svg.axis().scale(y).orient(\"left\").innerTickSize(-width);\n\nvar maxDate = 0, minDate =0;\n\nvar line = d3.svg.line()\n    .interpolate(\"step-after\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); }) \n    .defined(function(d) { return d.price; });  // Hiding line value defaults of 0 for missing data\n\nvar area_brush = d3.svg.area()\n    .interpolate(\"monotone\")\n    .x(function(d) { return x2(d.date); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.price); })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom);\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nfocus.append('text')\n      .attr('x', 10)\n      .attr('y', 25)\n      .text(\"Nasdaq Composite Index\")\n      .style(\"font-size\", 14);\n\n  \n  \nvar context = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\nvar lineFunction = d3.svg.line()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; })\n    .interpolate(\"linear\");\n\nvar data;  // stock data global variable\n\n\nvar brush = d3.svg.brush()\n  .x(x2)\n  .extent([0.9, 1])\n  .on(\"brush\", brushed);\n\nvar scan = d3.svg.brush()\n  .x(x)\n  .on(\"brush\", scanned)\n  .on(\"brushstart\", function () {d3.select(\"g.focus_box\").remove();});\n\n  \n  \nd3.csv(\"datapoints.csv\", function(error, csv_data) {\n  data = csv_data;\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.price = +d.price;\n  });\n\n  x.domain(d3.extent(data.map(function(d) { return d.date; })));\n  y.domain([0, d3.max(data.map(function(d) { return d.price; }))]);\n  x2.domain(x.domain());\n  y2.domain(y.domain());\n\n  focus.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n  \n  focus.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n  \n  focus.append(\"g\")\n    .attr(\"class\", \"x scan\")\n    .call(scan)\n  .selectAll(\"rect\")\n    .attr(\"height\", height )\n      .on(\"mouseover\", function() { focus_dropline.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus_dropline.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  // prettify: to block the stroke of the scanner\n  focus.append(\"line\")\n    .style(\"stroke\", \"white\")\n    .style(\"stroke-width\", \"2px\")\n    .attr(\"x1\",2)\n    .attr(\"x2\",width)\n\n\n  // prettify: to block the stroke of the scanner at bottom\n  focus.append(\"line\")\n    .style(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"2px\")\n    .attr(\"x1\",0)\n    .attr(\"x2\",width)\n    .attr(\"y1\",height)\n    .attr(\"y2\",height);\n  \n  \n  // for the drop line\n  var focus_dropline = focus.append(\"g\")\n      .attr(\"class\", \"focus_dropline\")\n      .style(\"display\", \"none\");\n\n  focus_dropline.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  focus_dropline.append(\"line\")\n      .classed(\"x\", true)\n\n  focus_dropline.append(\"line\")\n      .classed(\"y\", true)\n\n  focus_dropline.append(\"text\")\n      .attr(\"x\", 20)\n      .attr(\"y\", 20)\n      .attr(\"dy\", \".35em\");\n  \n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        i = bisectDate(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n    focus_dropline.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\");\n    focus_dropline.select(\"line.x\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", -x(d.date))\n        .attr(\"y1\", 0)\n        .attr(\"y2\", 0)\n    focus_dropline.select(\"line.y\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", 0)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", height - y(d.price))\n    focus_dropline.select(\"text\").text(d.price.toFixed(2));\n  }\n\n  \n  context.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"brush-area\")\n      .attr(\"d\", area_brush);\n\n  context.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"x brush\")\n      .call(brush)\n    .selectAll(\"rect\")\n      .attr(\"y\", -6)\n      .attr(\"height\", height2 + 7);\n});\n\n\nfunction brushed() {\n  x.domain(brush.empty() ? x2.domain() : brush.extent()); \n\n  var dataFiltered = data.filter(function(d, i) {\n    if ( (d.date >= x.domain()[0]) && (d.date <= x.domain()[1]) ) {\n      return d.price;\n    }\n  });\n\n  // to re-scale y-axis\n  y.domain([0.9*d3.min(dataFiltered.map(function(d) { return d.price; })),\n   1.1*d3.max(dataFiltered.map(function(d) { return d.price; }))]);\n\n\n  focus.select(\".line\").attr(\"d\", line);\n  focus.select(\".x.axis\").transition().call(xAxis);\n  focus.select(\".y.axis\").call(yAxis);\n\n  d3.selectAll('circle.dot')\n  .attr(\"cx\",function(d) { return x( d.FileDate ); })\n  .attr(\"cy\", function(d) { \n\n    var i_price = bisectDate(data, d.FileDate, 1),\n    d0_price = data[i_price - 1],\n    d1_price = data[i_price],\n    d_price = d.FileDate - d0_price.date > d1_price.date - d.FileDate ? d1_price.price : d0_price.price;\n    return y( d_price); });\n};\n\n\n// here's the function that is called upon brushing the main chart\nfunction scanned() {\n   // get the brush that is being manipulated\n   var brush_event = d3.event.target;\n   // check if it is empty - if not, then do the analytics box\n   if(!brush_event.empty()) {\n       \n     // get the extent of the brush as a two-element array [min, max]\n       var extent = brush_event.extent();\n\n       minDate = extent[0];\n       maxDate = extent[1];\n\n       console.log(\"minDate\",minDate)\n       console.log(\"maxDate\",maxDate)\n\n       // day difference\n       var timeDiff = Math.abs(maxDate-minDate);\n       var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24)); \n\n       console.log(\"TimeDiff\", Date(timeDiff))\n\n       var i_min = bisectDate(data, minDate, 1),\n          d0_min = data[i_min - 1],\n          d1_min = data[i_min],\n          d_min = minDate - d0_min.date > d1_min.date - minDate ? d1_min : d0_min;\n    \n       var i_max = bisectDate(data, maxDate, 1),\n          d0_max = data[i_max - 1],\n          d1_max = data[i_max],\n          d_max = maxDate - d0_max.date > d1_max.date - maxDate ? d1_max : d0_max;\n\n\n        period_return = (d_max.price - d_min.price) / d_min.price\n        annualized_return = (d_max.price - d_min.price) / d_min.price / (diffDays/365)\n\n\n       // get line data dynamically\n      var lineData = [{\"x\": x(minDate), \"y\":y(d_min.price) }, {\"x\": x(maxDate), \"y\": y(d_max.price)}];\n\n      console.log(lineData);\n      console.log(lineFunction(lineData));\n\n      //focus_box\n      var focus_box = focus.selectAll(\"g.focus_box\")\n                        .data([maxDate]);\n\n      focus_box\n          .enter()\n            .append(\"g\")\n            .attr(\"class\", \"focus_box\")\n\n      focus_box.selectAll(\"*\").remove();\n\n      focus_box\n            .append(\"g\")\n            .attr(\"class\", \"indicator\")\n            .append(\"path\")\n            .attr(\"class\", \"line\")\n            .attr(\"d\", lineFunction(lineData))\n\n      focus_box\n            .append(\"circle\")\n              .attr(\"cx\", x(maxDate))\n              .attr(\"cy\", y(d_max.price))\n              .attr(\"r\", 8)\n              .attr(\"fill\", \"none\")\n              .attr(\"stroke\", \"black\")\n              .attr(\"stroke-width\", 2);\n\n      focus_box\n            .append(\"circle\")\n              .attr(\"cx\", x(maxDate))\n              .attr(\"cy\", y(d_max.price))\n              .attr(\"r\", 2)\n              .attr(\"fill\", \"black\");\n\n      focus_box\n            .append(\"circle\")\n              .attr(\"cx\", x(minDate))\n              .attr(\"cy\", y(d_min.price))\n              .attr(\"r\", 3)\n              .attr(\"fill\", \"black\")\n              .attr(\"stroke\", \"black\")\n              .attr(\"stroke-width\", 1);\n\n      focus_box\n          .append(\"rect\")\n          .attr(\"width\", 120)\n          .attr(\"height\", 65)\n          .attr('x',  Math.min(width - 125, x(maxDate)+14))\n          .attr('y', height - 80)\n          .attr(\"fill\", \"black\")\n          .attr(\"stroke\", \"steelblue\")\n          .attr(\"stroke-width\", \"1px\")\n          .attr(\"opacity\", 0.2);\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 70)\n          .attr(\"dy\", \".3em\")\n          .text(\"Return (period)\");\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 55)\n          .attr(\"dy\", \".35em\")\n          .text(((period_return*100).toFixed(1)).toString().concat(\"%\"));\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 40)\n          .attr(\"dy\", \".3em\")\n          .text(\"Return (annualized)\");\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 25)\n          .attr(\"dy\", \".35em\")\n          .text(((annualized_return*100).toFixed(1)).toString().concat(\"%\"));\n\n\n   } \n};\n  \n  \n\n</script>", "description": "Context+brush+Analytics", "created_at": "2016-09-23T21:58:08Z", "updated_at": "2016-09-24T08:02:14Z", "api": ["d3.time.format", "d3.bisector", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.svg.area", "d3.select", "d3.svg.brush", "d3.csv", "d3.extent", "d3.max", "d3.mouse", "d3.min", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "RicCheng_b467b5b6536dac8b215d22bbb2bb3662"}, {"code": "<script>\nvar width = 300,\n    height = 300;\n\n// Config for the Radar chart\nvar config = {\n    w: width,\n    h: height,\n    maxValue: 100,\n    levels: 5,\n    ExtraWidthX: 300\n}\n\n//Call function to draw the Radar chart\nd3.json(\"data.json\", function(error, data) {\n    if (error) throw error;\n    RadarChart.draw(\"#chart\", data, config);\n});\n\nvar svg = d3.select('body')\n\t.selectAll('svg')\n\t.append('svg')\n\t.attr(\"width\", width)\n\t.attr(\"height\", height);\n</script>", "description": "Radar Chart D3 V4", "created_at": "2016-09-23T21:55:47Z", "updated_at": "2016-10-04T16:09:26Z", "api": ["d3.scaleOrdinal", "d3.format", "d3.select", "d3.json"], "readme": "A redesign of the radar chart function that was created by alangrafu, used in my blog on [Making the D3 Radar Chart look a bit better](http://www.visualcinnamon.com/2013/09/making-d3-radar-chart-look-bit-better.html)\n\nAn even newer version created 2 years later can be found [here](http://bl.ocks.org/nbremer/21746a9668ffdf6d8242)\n\nforked from <a href='http://bl.ocks.org/nbremer/'>nbremer</a>'s block: <a href='http://bl.ocks.org/nbremer/6506614'>D3.js - Radar Chart or Spider Chart - Adjusted from radar-chart-d3</a>", "uid": "alandunning_4c36eb1abdb248de34c64f5672afd857"}, {"code": "<script>\n\nvar margin = {top: 10, right: 10, bottom: 100, left: 40},\n    margin2 = {top: 430, right: 10, bottom: 20, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    height2 = 500 - margin2.top - margin2.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse\n\t\tbisectDate = d3.bisector(function(d) { return d.date; }).left;\n  \nvar x = d3.time.scale().range([0, width]),\n    x2 = d3.time.scale().range([0, width]),\n    y = d3.scale.linear().range([height, 0]),\n    y2 = d3.scale.linear().range([height2, 0]);\n\nvar xAxis = d3.svg.axis().scale(x).orient(\"bottom\"),\n    xAxis2 = d3.svg.axis().scale(x2).orient(\"bottom\"),\n    yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\nvar brush = d3.svg.brush()\n    .x(x2)\n    .on(\"brush\", brush);\n\nvar area = d3.svg.area()\n    .interpolate(\"monotone\")\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.price); });\n\n // to remove\nvar area2 = d3.svg.area()\n    .interpolate(\"monotone\")\n    .x(function(d) { return x2(d.date); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.price); });\n\nvar area = d3.svg.area()\n    .interpolate(\"step-after\")\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.price); });\n\nvar line = d3.svg.line()\n    .interpolate(\"step-after\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); }) \n    .defined(function(d) { return d.price; });  // Hiding line value defaults of 0 for missing data\n\nvar area_brush = d3.svg.area()\n    .interpolate(\"monotone\")\n    .x(function(d) { return x2(d.date); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.price); })\n\nvar data; \n\nvar brush = d3.svg.brush()\n  .x(x2)\n  .extent([0.9, 1])\n  .on(\"brush\", brushed);\n\nvar scan = d3.svg.brush()\n  .x(x)\n  .on(\"brush\", scanned)\n  .on(\"brushstart\", function () {d3.select(\"g.focus_box\").remove();});\n\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom);\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar focus = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar context = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\n  \n  \n  \nd3.csv(\"datapoints.csv\", function(error, csv_data) {\n\tdata = csv_data;\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.price = +d.price;\n  });\n\n  x.domain(d3.extent(data.map(function(d) { return d.date; })));\n  y.domain([0, d3.max(data.map(function(d) { return d.price; }))]);\n  x2.domain(x.domain());\n  y2.domain(y.domain());\n\n\n  // gradient color for the area for decoration\n  focus.append(\"linearGradient\")\n      .attr(\"id\", \"temperature-gradient\")\n      .attr(\"gradientUnits\", \"userSpaceOnUse\")\n      .attr(\"x1\", 0).attr(\"y1\", \"0%\")\n      .attr(\"x2\", 0).attr(\"y2\", \"100%\")\n    .selectAll(\"stop\")\n      .data([\n        {offset: \"0%\", color: \"#ADD8E6\"},\n        {offset: \"70%\", color: \"lightgrey\"},\n        {offset: \"100%\", color: \"white\"}\n      ])\n    .enter().append(\"stop\")\n      .attr(\"offset\", function(d) { return d.offset; })\n      .attr(\"stop-color\", function(d) { return d.color; });\n\n  \n  focus.append(\"path\")\n      .datum(data)\n      //.attr(\"clip-path\", \"url(#clip)\")\n      .attr(\"d\", area);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n  \n  focus.append(\"g\")\n    .attr(\"class\", \"x scan\")\n    .call(scan)\n  .selectAll(\"rect\")\n    .attr(\"height\", height )\n      .on(\"mouseover\", function() { focus_dropline.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus_dropline.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  // prettify: to block the stroke of the scanner\n  focus.append(\"line\")\n    .style(\"stroke\", \"white\")\n    .style(\"stroke-width\", \"2px\")\n    .attr(\"x1\",2)\n    .attr(\"x2\",width)\n\n\n  // prettify: to block the stroke of the scanner at bottom\n  focus.append(\"line\")\n    .style(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"2px\")\n    .attr(\"x1\",0)\n    .attr(\"x2\",width)\n    .attr(\"y1\",height)\n    .attr(\"y2\",height);\n  \n  \n  // for the drop line\n  var focus_dropline = focus.append(\"g\")\n      .attr(\"class\", \"focus_dropline\")\n      .style(\"display\", \"none\");\n\n  focus_dropline.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  focus_dropline.append(\"line\")\n      .classed(\"x\", true)\n\n  focus_dropline.append(\"line\")\n      .classed(\"y\", true)\n\n  focus_dropline.append(\"text\")\n      .attr(\"x\", 20)\n      .attr(\"y\", 20)\n      .attr(\"dy\", \".35em\");\n  \n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        i = bisectDate(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n    focus_dropline.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\");\n    focus_dropline.select(\"line.x\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", -x(d.date))\n        .attr(\"y1\", 0)\n        .attr(\"y2\", 0)\n    focus_dropline.select(\"line.y\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", 0)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", height - y(d.price))\n    focus_dropline.select(\"text\").text(d.price.toFixed(2));\n  }\n\n  \n  context.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"brush-area\")\n      .attr(\"d\", area_brush);\n\n  context.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"x brush\")\n      .call(brush)\n    .selectAll(\"rect\")\n      .attr(\"y\", -6)\n      .attr(\"height\", height2 + 7);\n});\n\n\n\nfunction brushed() {\n  x.domain(brush.empty() ? x2.domain() : brush.extent()); \n\n  var dataFiltered = data.filter(function(d, i) {\n    if ( (d.date >= x.domain()[0]) && (d.date <= x.domain()[1]) ) {\n      return d.price;\n    }\n  });\n\n  // to re-scale y-axis\n  y.domain([0.9*d3.min(dataFiltered.map(function(d) { return d.price; })),\n   1.1*d3.max(dataFiltered.map(function(d) { return d.price; }))]);\n\n\n  focus.select(\".line\").attr(\"d\", line);\n  focus.select(\".area\").attr(\"d\", area);\n  focus.select(\".x.axis\").transition().call(xAxis);\n  focus.select(\".y.axis\").call(yAxis);\n  // focus.select(\".dot\").attr(\"d\", circles);\n\n  d3.selectAll('circle.dot')\n  .attr(\"cx\",function(d) { return x( d.FileDate ); })\n  .attr(\"cy\", function(d) { \n\n    var i_price = bisectDate(data, d.FileDate, 1),\n    d0_price = data[i_price - 1],\n    d1_price = data[i_price],\n    d_price = d.FileDate - d0_price.date > d1_price.date - d.FileDate ? d1_price.price : d0_price.price;\n    return y( d_price); });\n};\n\n\n// here's the function that is called upon brushing the main chart\nfunction scanned() {\n   // get the brush that is being manipulated\n   var brush_event = d3.event.target;\n   // check if it is empty - if not, then do the analytics box\n   if(!brush_event.empty()) {\n       \n     // get the extent of the brush as a two-element array [min, max]\n       var extent = brush_event.extent();\n\n       minDate = extent[0];\n       maxDate = extent[1];\n\n       console.log(\"minDate\",minDate)\n       console.log(\"maxDate\",maxDate)\n\n       // day difference\n       var timeDiff = Math.abs(maxDate-minDate);\n       var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24)); \n\n       console.log(\"TimeDiff\", Date(timeDiff))\n\n       var i_min = bisectDate(data, minDate, 1),\n          d0_min = data[i_min - 1],\n          d1_min = data[i_min],\n          d_min = minDate - d0_min.date > d1_min.date - minDate ? d1_min : d0_min;\n    \n       var i_max = bisectDate(data, maxDate, 1),\n          d0_max = data[i_max - 1],\n          d1_max = data[i_max],\n          d_max = maxDate - d0_max.date > d1_max.date - maxDate ? d1_max : d0_max;\n\n\n        period_return = (d_max.price - d_min.price) / d_min.price\n        annualized_return = (d_max.price - d_min.price) / d_min.price / (diffDays/365)\n\n\n       // get line data dynamically\n      var lineData = [{\"x\": x(minDate), \"y\":y(d_min.price) }, {\"x\": x(maxDate), \"y\": y(d_max.price)}];\n\n      console.log(lineData);\n      console.log(lineFunction(lineData));\n\n      //focus_box\n      var focus_box = focus.selectAll(\"g.focus_box\")\n                        .data([maxDate]);\n\n      focus_box\n          .enter()\n            .append(\"g\")\n            .attr(\"class\", \"focus_box\")\n\n      focus_box.selectAll(\"*\").remove();\n\n      focus_box\n            .append(\"g\")\n            .attr(\"class\", \"indicator\")\n            .append(\"path\")\n            .attr(\"class\", \"line\")\n            .attr(\"d\", lineFunction(lineData))\n\n      focus_box\n            .append(\"circle\")\n              .attr(\"cx\", x(maxDate))\n              .attr(\"cy\", y(d_max.price))\n              .attr(\"r\", 8)\n              .attr(\"fill\", \"none\")\n              .attr(\"stroke\", \"black\")\n              .attr(\"stroke-width\", 2);\n\n      focus_box\n            .append(\"circle\")\n              .attr(\"cx\", x(maxDate))\n              .attr(\"cy\", y(d_max.price))\n              .attr(\"r\", 2)\n              .attr(\"fill\", \"black\");\n\n      focus_box\n            .append(\"circle\")\n              .attr(\"cx\", x(minDate))\n              .attr(\"cy\", y(d_min.price))\n              .attr(\"r\", 3)\n              .attr(\"fill\", \"black\")\n              .attr(\"stroke\", \"black\")\n              .attr(\"stroke-width\", 1);\n\n      focus_box\n          .append(\"rect\")\n          .attr(\"width\", 120)\n          .attr(\"height\", 65)\n          .attr('x',  Math.min(width - 125, x(maxDate)+14))\n          .attr('y', height - 80)\n          .attr(\"fill\", \"black\")\n          .attr(\"stroke\", \"steelblue\")\n          .attr(\"stroke-width\", \"1px\")\n          .attr(\"opacity\", 0.2);\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 70)\n          .attr(\"dy\", \".3em\")\n          .text(\"Return (period)\");\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 55)\n          .attr(\"dy\", \".35em\")\n          .text(((period_return*100).toFixed(1)).toString().concat(\"%\"));\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 40)\n          .attr(\"dy\", \".3em\")\n          .text(\"Return (annualized)\");\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 25)\n          .attr(\"dy\", \".35em\")\n          .text(((annualized_return*100).toFixed(1)).toString().concat(\"%\"));\n\n\n   } \n};\n\n\n  \n  \n\n</script>", "description": "Focus+Context+Scanning", "created_at": "2016-09-23T21:04:00Z", "updated_at": "2016-09-23T21:30:32Z", "api": ["d3.time.format", "d3.bisector", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.brush", "d3.svg.area", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max", "d3.mouse", "d3.min", "d3.selectAll"], "readme": "This examples demonstrates how to use D3's brush component to implement focus + context zooming. Click and drag in the small chart below to pan or zoom.\n\nforked from <a href='http://bl.ocks.org/vlandham/'>vlandham</a>'s block: <a href='http://bl.ocks.org/vlandham/4215939'>Focus+Context via Brushing</a>", "uid": "RicCheng_73aa51d457d0125e314260cbd6842153"}, {"code": "<script>\n\nd3.csv(\"police_killings.csv\", function(err, data) {\n  var allRaces = [\"Black\",\"Hispanic/Latino\",  \"White\", \"Unknown\", \"Asian/Pacific Islander\", \"Native American\"];\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"]\n  console.log(\"original data\", data)\n  // we want to \"pivot\" our data into deaths by month by race\n  // this is a rather ugly way to do it in javascript. would probably be easier\n  // to group the data in another tool (excel, google sheets, etc) and load that\n  var groups = {}\n  var races = {};\n  var gkey = \"raceethnicity\" // what we group by\n  var xkey = \"month\" // the x axis\n  // first we group all the events by race\n  data.forEach(function(d) {\n    if(!groups[d[gkey]]) {\n      groups[d[gkey]] = [d];\n    } else {\n      groups[d[gkey]].push(d)\n    }\n  })\n  console.log(\"groups\",groups)\n  var processed = [];\n  // we are making a \"layer\" for each race\n  allRaces.forEach(function(race,i) {\n    var xdata = {};\n    groups[race].forEach(function(event) {\n      if(!xdata[event[xkey]]) {\n        xdata[event[xkey]] = 1\n      } else {\n        xdata[event[xkey]]++;\n      }\n    })\n    console.log(\"xdata\",xdata)\n    // our \"result\" is an orered array with a count for each month\n    // (for the race we are currently working on)\n     var result = {};\n    months.forEach(function(g, j) {\n      result[\"month\"]= month\n//         result[month]= xdata[g] || 0 })\n    })\n    processed.push(result)\n  })\n  console.log(\"layer data\", processed)\n\n  var n = allRaces.length, // number of layers\n      m = processed.length, // number of samples per layer\n      stack = d3.stack().keys(allRaces);\n\n  var layers = stack(processed); // calculate the stack layout\n  layers.forEach(function(d,i) {\n        d.forEach(function(dd,j){\n            dd.race = allRaces[i]\n        })\n    });\n  console.log(\"layers\",layers)\n  \n\n  var yGroupMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y; }); })\n  var yStackMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); });\n\n  var margin = {top: 40, right: 10, bottom: 20, left: 10},\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n  var x = d3.scaleBand()\n      .domain(months)\n      .rangeRound([0, width])\n      .padding(0.08);\n\n  var y = d3.scaleLinear()\n      .domain([0, yStackMax])\n      .range([height, 0]);\n\n  var color = d3.scaleOrdinal(d3.schemeCategory20c)\n      .domain([0, n-1])\n\n  var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n\tvar xAxis = svg.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .call(d3.axisBottom(x));\n\n  var layer = svg.selectAll(\".layer\")\n      .data(layers)\n    .enter().append(\"g\")\n      .attr(\"class\", \"layer\")\n      .style(\"fill\", function(d, i) { return color(i); });\n\n  var rect = layer.selectAll(\"rect\")\n      .data(function(d) { return d; })\n    .enter().append(\"rect\")\n//       .attr(\"x\", function(d) { return x(d.key); })\n      .attr(\"y\", height)\n      .attr(\"width\", x.bandwidth())\n      .attr(\"height\", 0);\n\n  rect.transition()\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) {\n//           return y(d[1]);\n      })\n      .attr(\"height\", function(d) {\n//           return y(d[0]) - y(d[1]);\n      });\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  var legend = svg.selectAll(\".legend\")\n      .data(allRaces)\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", function(d,i) { return color(i) });\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n  d3.selectAll(\"input\").on(\"change\", change);\n\n  var timeout = setTimeout(function() {\n    d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(timeout);\n    if (this.value === \"grouped\") transitionGrouped();\n    else transitionStacked();\n  }\n\n  function transitionGrouped() {\n    y.domain([0, yGroupMax]);\n\n    rect.transition()\n        .duration(500)\n        .delay(function(d, i) { return i * 10; })\n//         .attr(\"x\", function(d, i, j) { return x(d.x) + x.bandwidth() / n * j; })\n        .attr(\"width\", x.bandwidth() / n)\n      .transition()\n//         .attr(\"y\", function(d) { return y(d.y); })\n//         .attr(\"height\", function(d) { return height - y(d.y); });\n  }\n\n  function transitionStacked() {\n    y.domain([0, yStackMax]);\n\n    rect.transition()\n        .duration(500)\n        .delay(function(d, i) { return i * 10; })\n//         .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n//         .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); })\n      .transition()\n//         .attr(\"x\", function(d) { return x(d.x); })\n        .attr(\"width\", x.bandwidth());\n  }\n});\n</script>", "description": "Stacked-to-Grouped Police Killings v4", "created_at": "2016-09-23T17:30:15Z", "updated_at": "2016-09-24T09:22:51Z", "api": ["d3.csv", "d3.stack", "d3.max", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.select", "d3.axisBottom", "d3.selectAll"], "readme": "D3 Version 4 implementation of the stacked to grouped bar chart.\n\nSwitch between stacked and grouped layouts using sequenced transitions! Animations preserve object constancy and allow the user to follow the data across views. Animation design by [Heer and Robertson](http://vis.berkeley.edu/papers/animated_transitions/). Colors and data generation inspired by [Byron and Wattenberg](http://www.leebyron.com/else/streamgraph/).\n\nPolice killings data for 2015 (up to June) downloaded from [FiveThirtyEight](https://github.com/fivethirtyeight/data/tree/master/police-killings)\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3943967'>Stacked-to-Grouped Bars</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/2b1446f496c3968f6ecd'>Stacked-to-Grouped Police Killings</a>\n\nforked from <a href='http://bl.ocks.org/Nastasi7/'>Nastasi7</a>'s block: <a href='http://bl.ocks.org/Nastasi7/8e4b032ce21ee9291ee8'>Stacked-to-Grouped Police Killings</a>", "uid": "mashehu_de923d763a53d523596ba81c6d1f3233"}, {"code": "<script>\n\n// use d3-hierarchy test data for treemap\n//   https://github.com/d3/d3-hierarchy/blob/master/test/treemap/index-test.js\nvar simple = {\n  \"children\": [\n    {\n      \"value\": 6\n    },\n    {\n      \"value\": 6\n    },\n    {\n      \"value\": 4\n    },\n    {\n      \"value\": 3\n    },\n    {\n      \"value\": 2\n    },\n    {\n      \"value\": 2\n    },\n    {\n      \"value\": 1\n    }\n  ]\n};\n\nvar treemap = d3.treemap().size([400, 300]).round(true),\n    root = treemap(d3.hierarchy(simple).sum(function(d){return d.value}).sort(d3.descending)),\n    nodes = root.descendants();\n  \tnodes = nodes.map(function(d){d.children=null;d.data=null;return d;}).slice(1);\n\nvar networkCenter = d3.forceCenter().x(200).y(150);\n\nvar forceX = d3.forceX(function (d) {return d.x0})\n    .strength(0.1)\n\nvar forceY = d3.forceY(function (d) {return d.y0})\n    .strength(0.1)\n\nvar collide = d3.bboxCollide(function (d,i) {\n    return [[d.x0, d.y1],[d.x1, d.y0]];\n  })\n  .strength(1)\n  .iterations(2)\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20b)\n\nvar force = d3.forceSimulation(nodes)\n  .velocityDecay(0.6)\n  .force(\"center\", networkCenter)\n  .force(\"x\", forceX)\n  .force(\"y\", forceY)\n  .force(\"collide\", collide)\n  .on(\"tick\", updateNetwork);\n\nvar nodeEnter = d3.select(\"svg.main\")\n  .append(\"g\")\n  .selectAll(\"g.node\")\n  .data(nodes)\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n\nnodeEnter.append(\"rect\")\n  .attr(\"class\", \"base\")\n  .style(\"fill-opacity\", 0.75)\n  .style(\"stroke-width\", 1)\n  .style(\"stroke-opacity\", 0.5)\n  .style(\"stroke\", function (d, i) {return d3.color(color(i)).darker(2)})\n  .style(\"fill\", function (d, i) {return d3.color(color(i)).brighter(2)})\n  .style(\"width\", function (d) {return d.x1 - d.x0})\n  .style(\"height\", function (d) {return d.y1 - d.y0})\n  .style(\"x\", function (d) {return 0})\n  .style(\"y\", function (d) {return 0})\n\nfunction updateNetwork() {\n  debugger;\n  d3.select(\"svg.main\").selectAll(\"g.node\")\n    .attr(\"transform\", function (d) {return \"translate(\" + d.x + \",\" + d.y + \")\"})\n}\n</script>", "description": "d3-bboxCollide Treemap", "created_at": "2016-09-23T16:23:19Z", "updated_at": "2016-09-23T17:42:58Z", "api": ["d3.treemap", "d3.hierarchy", "d3.forceCenter", "d3.forceX", "d3.forceY", "d3.bboxCollide", "d3.scaleOrdinal", "d3.forceSimulation", "d3.select", "d3.color"], "readme": "forked from <a href='http://bl.ocks.org/emeeks/'>emeeks</a>'s block: <a href='http://bl.ocks.org/emeeks/7669aa65a172bf69688ace5f6041223d'>d3-bboxCollide</a>\n\nI forked this to see how it might work with boxes assigned a size and initial position by `d3-hierarchy` treemap.  I definitely don't think I have this figured out yet.\n\n<hr/>\n\n### originial readme from [emeeks](https://github.com/emeeks)\n\n[d3-bboxCollide](https://github.com/emeeks/d3-bboxCollide) provides bounding box collision detection for `d3.forceSimulation`. This is useful for label adjustment or rectangular nodes. Each node receives a bounding box array of a top right and bottom left corner of that node relative to its x position. In the case of this dataset, that size is based on the length of the word in the source dataset.\n\nA function for calculating this array based off the data is passed into the `d3.bboxCollide` function, which is later passed as a \"collide\" constraint in your force settings.\n\n```\nvar collide = d3.bboxCollide(function (d,i) {\n    return [[-d.value * 10, -d.value * 5],[d.value * 10, d.value * 5]]\n  })\n```\n\nThe code above creates a rectangle scaled to the size of the randomized data. The data determines the y position creating a sort of rectilinear beeswarm plot.\n", "uid": "timelyportfolio_3cc50e732e46c2f275181c939d899234"}, {"code": "<script>\n\n\nvar randomPoints = d3.range(500).map(function () {\n  return {value: Math.random()}\n})\n\nvar networkCenter = d3.forceCenter().x(250).y(250);\n\nvar forceX = d3.forceX(function (d) {return 100})\n    .strength(0.1)\n\n var forceY = d3.forceY(function (d) {return d.value * 500})\n    .strength(1)\n\nvar collide = d3.bboxCollide(function (d,i) {\n    return [[-d.value * 10, -d.value * 5],[d.value * 10, d.value * 5]]\n  })\n  .strength(1)\n  .iterations(2)\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20b)\n\n  var force = d3.forceSimulation(randomPoints)\n    .velocityDecay(0.6)\n    .force(\"center\", networkCenter)\n    .force(\"x\", forceX)\n    .force(\"y\", forceY)\n    .force(\"collide\", collide)\n    .on(\"tick\", updateNetwork);\n\n  var nodeEnter = d3.select(\"svg.main\")\n  .append(\"g\")\n  .selectAll(\"g.node\")\n  .data(randomPoints)\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n\n  nodeEnter.append(\"rect\")\n    .attr(\"class\", \"base\")\n    .style(\"fill-opacity\", 0.75)\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-opacity\", 0.5)\n    .style(\"stroke\", function (d, i) {return d3.color(color(i)).darker(2)})\n    .style(\"fill\", function (d, i) {return d3.color(color(i)).brighter(2)})\n    .style(\"width\", function (d) {return d.value * 20})\n    .style(\"height\", function (d) {return d.value * 10})\n    .style(\"x\", function (d) {return -d.value * 10})\n    .style(\"y\", function (d) {return -d.value * 5})\n\n  function updateNetwork() {\n    d3.select(\"svg.main\").selectAll(\"g.node\")\n      .attr(\"transform\", function (d) {return \"translate(\" + d.x + \",\" + d.y + \")\"})\n  }\n</script>", "description": "d3-bboxCollide", "created_at": "2016-09-23T15:59:32Z", "updated_at": "2016-09-23T17:38:08Z", "api": ["d3.range", "d3.forceCenter", "d3.forceX", "d3.forceY", "d3.bboxCollide", "d3.scaleOrdinal", "d3.forceSimulation", "d3.select", "d3.color"], "readme": "[d3-bboxCollide](https://github.com/emeeks/d3-bboxCollide) provides bounding box collision detection for `d3.forceSimulation`. This is useful for label adjustment or rectangular nodes. Each node receives a bounding box array of a top right and bottom left corner of that node relative to its x position. In the case of this dataset, that size is based on the length of the word in the source dataset.\n\nA function for calculating this array based off the data is passed into the `d3.bboxCollide` function, which is later passed as a \"collide\" constraint in your force settings.\n\n```\nvar collide = d3.bboxCollide(function (d,i) {\n    return [[-d.value * 10, -d.value * 5],[d.value * 10, d.value * 5]]\n  })\n```\n\nThe code above creates a rectangle scaled to the size of the randomized data. The data determines the y position creating a sort of rectilinear beeswarm plot.", "uid": "emeeks_7669aa65a172bf69688ace5f6041223d"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 80},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n  \nvar tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n  \nvar x = d3.scaleLinear().range([0, width]);\nvar y = d3.scaleBand().range([height, 0]);\n\nvar g = svg.append(\"g\")\n\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \nd3.json(\"data.json\", function(error, data) {\n  \tif (error) throw error;\n  \n  \tdata.sort(function(a, b) { return a.value - b.value; });\n  \n  \tx.domain([0, d3.max(data, function(d) { return d.value; })]);\n    y.domain(data.map(function(d) { return d.area; })).padding(0.1);\n\n    g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n       \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n      \t.call(d3.axisBottom(x).ticks(5).tickFormat(function(d) { return parseInt(d / 1000); }).tickSizeInner([-height]));\n\n    g.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(d3.axisLeft(y));\n\n    g.selectAll(\".bar\")\n        .data(data)\n      .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", 0)\n        .attr(\"height\", y.bandwidth())\n        .attr(\"y\", function(d) { return y(d.area); })\n        .attr(\"width\", function(d) { return x(d.value); })\n        .on(\"mousemove\", function(d){\n            tooltip\n              .style(\"left\", d3.event.pageX - 50 + \"px\")\n              .style(\"top\", d3.event.pageY - 70 + \"px\")\n              .style(\"display\", \"inline-block\")\n              .html((d.area) + \"<br>\" + \"\" + (d.value));\n        })\n    \t\t.on(\"mouseout\", function(d){ tooltip.style(\"display\", \"none\");});\n});\n</script>", "description": "Horizontal Bar Chart with Tooltip D3 V4", "created_at": "2016-09-23T14:22:21Z", "updated_at": "2016-09-23T23:17:05Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.json", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This chart shows average house prices in various areas of Liverpool, UK\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes", "uid": "alandunning_7008d0332cc28a826b37b3cf6e7bd998"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n\nvar parseTime = d3.timeParse(\"%Y\")\n    bisectDate = d3.bisector(function(d) { return d.year; }).left;\n\nvar x = d3.scaleTime().range([0, width]);\nvar y = d3.scaleLinear().range([height, 0]);\n\nvar line = d3.line()\n    .x(function(d) { return x(d.year); })\n    .y(function(d) { return y(d.value); });\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"data.json\", function(error, data) {\n    if (error) throw error;\n\n    data.forEach(function(d) {\n      d.year = parseTime(d.year);\n      d.value = +d.value;\n    });\n\n    x.domain(d3.extent(data, function(d) { return d.year; }));\n    y.domain([d3.min(data, function(d) { return d.value; }) / 1.005, d3.max(data, function(d) { return d.value; }) * 1.005]);\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--y\")\n        .call(d3.axisLeft(y).ticks(6).tickFormat(function(d) { return parseInt(d / 1000) + \"k\"; }))\n      .append(\"text\")\n        .attr(\"class\", \"axis-title\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"fill\", \"#5D6971\")\n        .text(\"Population)\");\n\n    g.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"line\")\n        .attr(\"d\", line);\n\n    var focus = g.append(\"g\")\n        .attr(\"class\", \"focus\")\n        .style(\"display\", \"none\");\n\n    focus.append(\"line\")\n        .attr(\"class\", \"x-hover-line hover-line\")\n        .attr(\"y1\", 0)\n        .attr(\"y2\", height);\n\n    focus.append(\"line\")\n        .attr(\"class\", \"y-hover-line hover-line\")\n        .attr(\"x1\", width)\n        .attr(\"x2\", width);\n\n    focus.append(\"circle\")\n        .attr(\"r\", 7.5);\n\n    focus.append(\"text\")\n        .attr(\"x\", 15)\n      \t.attr(\"dy\", \".31em\");\n\n    svg.append(\"rect\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .on(\"mouseover\", function() { focus.style(\"display\", null); })\n        .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n        .on(\"mousemove\", mousemove);\n\n    function mousemove() {\n      var x0 = x.invert(d3.mouse(this)[0]),\n          i = bisectDate(data, x0, 1),\n          d0 = data[i - 1],\n          d1 = data[i],\n          d = x0 - d0.year > d1.year - x0 ? d1 : d0;\n      focus.attr(\"transform\", \"translate(\" + x(d.year) + \",\" + y(d.value) + \")\");\n      focus.select(\"text\").text(function() { return d.value; });\n      focus.select(\".x-hover-line\").attr(\"y2\", height - y(d.value));\n      focus.select(\".y-hover-line\").attr(\"x2\", width + width);\n    }\n});\n\n</script>", "description": "Line Chart with Circle Tooltip D3 V4", "created_at": "2016-09-22T21:41:43Z", "updated_at": "2016-09-23T21:41:11Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.scaleTime", "d3.scaleLinear", "d3.line", "d3.json", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.mouse"], "readme": "This chart is based on <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3883245'>Line Chart</a>\n\nit uses a json file storing year values and population values. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape", "uid": "alandunning_cfb7dcd7951826b9eacd54f0647f48d3"}, {"code": "<script>\nvar format = d3.format(\",\");\n\n// Set tooltips\nvar tip = d3.tip()\n            .attr('class', 'd3-tip')\n            .offset([-10, 0])\n            .html(function(d) {\n              return \"<strong>Country: </strong><span class='details'>\" + d.properties.name + \"<br></span>\" + \"<strong>Population: </strong><span class='details'>\" + format(d.population) +\"</span>\";\n            })\n\nvar margin = {top: 0, right: 0, bottom: 0, left: 0},\n            width = 960 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\nvar color = d3.scaleThreshold()\n    .domain([10000,100000,500000,1000000,5000000,10000000,50000000,100000000,500000000,1500000000])\n    .range([\"rgb(247,251,255)\", \"rgb(222,235,247)\", \"rgb(198,219,239)\", \"rgb(158,202,225)\", \"rgb(107,174,214)\", \"rgb(66,146,198)\",\"rgb(33,113,181)\",\"rgb(8,81,156)\",\"rgb(8,48,107)\",\"rgb(3,19,43)\"]);\n\nvar path = d3.geoPath();\n\nvar svg = d3.select(\"body\")\n            .append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append('g')\n            .attr('class', 'map');\n\nvar projection = d3.geoMercator()\n                   .scale(130)\n                  .translate( [width / 2, height / 1.5]);\n\nvar path = d3.geoPath().projection(projection);\n\nsvg.call(tip);\n\nqueue()\n    .defer(d3.json, \"world_countries.json\")\n    .defer(d3.tsv, \"world_population.tsv\")\n    .await(ready);\n\nfunction ready(error, data, population) {\n  var populationById = {};\n\n  population.forEach(function(d) { populationById[d.id] = +d.population; });\n  data.features.forEach(function(d) { d.population = populationById[d.id] });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"countries\")\n    .selectAll(\"path\")\n      .data(data.features)\n    .enter().append(\"path\")\n      .attr(\"d\", path)\n      .style(\"fill\", function(d) { return color(populationById[d.id]); })\n      .style('stroke', 'white')\n      .style('stroke-width', 1.5)\n      .style(\"opacity\",0.8)\n      // tooltips\n        .style(\"stroke\",\"white\")\n        .style('stroke-width', 0.3)\n        .on('mouseover',function(d){\n          tip.show(d);\n\n          d3.select(this)\n            .style(\"opacity\", 1)\n            .style(\"stroke\",\"white\")\n            .style(\"stroke-width\",3);\n        })\n        .on('mouseout', function(d){\n          tip.hide(d);\n\n          d3.select(this)\n            .style(\"opacity\", 0.8)\n            .style(\"stroke\",\"white\")\n            .style(\"stroke-width\",0.3);\n        });\n\n  svg.append(\"path\")\n      .datum(topojson.mesh(data.features, function(a, b) { return a.id !== b.id; }))\n       // .datum(topojson.mesh(data.features, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"names\")\n      .attr(\"d\", path);\n}\n\n</script>", "description": "world map 02 update to d3 v4", "created_at": "2016-09-22T20:42:30Z", "updated_at": "2016-09-22T22:58:36Z", "api": ["d3.functor", "d3.format", "d3.tip", "d3.scaleThreshold", "d3.geoPath", "d3.select", "d3.geoMercator"], "readme": "# 02 update to d3 v4 \n\nthis iteration uses [d3 version 4](https://github.com/d3/d3/blob/master/API.md)\n\nthe changes to update from d3v3 to d3v4 were pretty straightforward - mostly camelCasing scale names.  a goal of this series of examples is to make it easier for someone learning to use d3 to understand what is happening.  One way to do that is to make a whole new example at each new conceptual change.\n\ndo check out the other examples in this `world map` series:\n\n[world map 00 original example](https://bl.ocks.org/jeremycflin/b43ab253f3ae02dced07)  \n[world map 01 fix tooltip value](https://bl.ocks.org/micahstubbs/01529b106c93f9b649c4006de5c79b80)  \n**world map 02 d3 v4**  \n[world map 03 es2015 + update code style](https://bl.ocks.org/micahstubbs/281d7b7a7e39a9b59cf80f1b8bd41a72)  \n[world map 04 manual breaks + threshold scale](https://bl.ocks.org/micahstubbs/535e57a3a2954a129c13701fe61c681d)  \n[world map 05 linear breaks + quantize scale](https://bl.ocks.org/micahstubbs/c14d8bda8e337da6c836a526ad1a7c5a)  \n[world map 06 linear breaks + quantiles scale](https://bl.ocks.org/micahstubbs/536bc140537c1f90bf01f0bb9adc87b8)  \n[world map 07 Jenks natural breaks](https://bl.ocks.org/micahstubbs/8fc2a6477f5d731dc97887a958f6826d)  \n[world map 08 ckmeans cluster max breaks](https://bl.ocks.org/micahstubbs/9c2397c1da11c7b5d331653bcd475c1f)  \n[world map 09 ckmeans cluster min breaks](https://bl.ocks.org/micahstubbs/c7f17dcbdc728e0d579d84e47c33dfa6)  ", "uid": "micahstubbs_8e15870eb432a21f0bc4d3d527b2d14f"}, {"code": "<script>\nvar format = d3.format(\",\");\n\n// Set tooltips\nvar tip = d3.tip()\n            .attr('class', 'd3-tip')\n            .offset([-10, 0])\n            .html(function(d) {\n              return \"<strong>Country: </strong><span class='details'>\" + d.properties.name + \"<br></span>\" + \"<strong>Population: </strong><span class='details'>\" + format(d.population) +\"</span>\";\n            })\n\nvar margin = {top: 0, right: 0, bottom: 0, left: 0},\n            width = 960 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\nvar color = d3.scale.threshold()\n    .domain([10000,100000,500000,1000000,5000000,10000000,50000000,100000000,500000000,1500000000])\n    .range([\"rgb(247,251,255)\", \"rgb(222,235,247)\", \"rgb(198,219,239)\", \"rgb(158,202,225)\", \"rgb(107,174,214)\", \"rgb(66,146,198)\",\"rgb(33,113,181)\",\"rgb(8,81,156)\",\"rgb(8,48,107)\",\"rgb(3,19,43)\"]);\n\nvar path = d3.geo.path();\n\nvar svg = d3.select(\"body\")\n            .append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append('g')\n            .attr('class', 'map');\n\nvar projection = d3.geo.mercator()\n                   .scale(130)\n                  .translate( [width / 2, height / 1.5]);\n\nvar path = d3.geo.path().projection(projection);\n\nsvg.call(tip);\n\nqueue()\n    .defer(d3.json, \"world_countries.json\")\n    .defer(d3.tsv, \"world_population.tsv\")\n    .await(ready);\n\nfunction ready(error, data, population) {\n  var populationById = {};\n\n  population.forEach(function(d) { populationById[d.id] = +d.population; });\n  data.features.forEach(function(d) { d.population = populationById[d.id] });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"countries\")\n    .selectAll(\"path\")\n      .data(data.features)\n    .enter().append(\"path\")\n      .attr(\"d\", path)\n      .style(\"fill\", function(d) { return color(populationById[d.id]); })\n      .style('stroke', 'white')\n      .style('stroke-width', 1.5)\n      .style(\"opacity\",0.8)\n      // tooltips\n        .style(\"stroke\",\"white\")\n        .style('stroke-width', 0.3)\n        .on('mouseover',function(d){\n          tip.show(d);\n\n          d3.select(this)\n            .style(\"opacity\", 1)\n            .style(\"stroke\",\"white\")\n            .style(\"stroke-width\",3);\n        })\n        .on('mouseout', function(d){\n          tip.hide(d);\n\n          d3.select(this)\n            .style(\"opacity\", 0.8)\n            .style(\"stroke\",\"white\")\n            .style(\"stroke-width\",0.3);\n        });\n\n  svg.append(\"path\")\n      .datum(topojson.mesh(data.features, function(a, b) { return a.id !== b.id; }))\n       // .datum(topojson.mesh(data.features, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"names\")\n      .attr(\"d\", path);\n}\n\n</script>", "description": "world map 01 fix tooltip value", "created_at": "2016-09-22T20:38:21Z", "updated_at": "2016-09-22T22:57:56Z", "api": ["d3.select", "d3.selection.prototype.attr.apply", "d3.selection.prototype.style.apply", "d3.functor", "d3.map", "d3.format", "d3.tip", "d3.scale.threshold", "d3.geo.path", "d3.geo.mercator"], "readme": "this iteration ensures that a formatted population value appears on the tooltip\n\nit also sets the margins to `0` and\nupdates the width to `960` pixels and the height to `500`pixels\nso that the map fits nicely on [bl.ocks.org](bl.ocks.org)\n\n\ud83d\ude4f to [@Jeremy_CF_Lin](https://twitter.com/jeremy_cf_lin) for creating this nice [world population map bl.ock](https://bl.ocks.org/jeremycflin/b43ab253f3ae02dced07) that is the basis for these iterations\n\ndo check out the other examples in this `world map` series:\n\n[world map 00 original example](https://bl.ocks.org/jeremycflin/b43ab253f3ae02dced07)  \n**world map 01 fix tooltip value**  \n[world map 02 d3 v4](https://bl.ocks.org/micahstubbs/8e15870eb432a21f0bc4d3d527b2d14f)  \n[world map 03 es2015 + update code style](https://bl.ocks.org/micahstubbs/281d7b7a7e39a9b59cf80f1b8bd41a72)  \n[world map 04 manual breaks + threshold scale](https://bl.ocks.org/micahstubbs/535e57a3a2954a129c13701fe61c681d)  \n[world map 05 linear breaks + quantize scale](https://bl.ocks.org/micahstubbs/c14d8bda8e337da6c836a526ad1a7c5a)  \n[world map 06 linear breaks + quantiles scale](https://bl.ocks.org/micahstubbs/536bc140537c1f90bf01f0bb9adc87b8)  \n[world map 07 Jenks natural breaks](https://bl.ocks.org/micahstubbs/8fc2a6477f5d731dc97887a958f6826d)  \n[world map 08 ckmeans cluster max breaks](https://bl.ocks.org/micahstubbs/9c2397c1da11c7b5d331653bcd475c1f)  \n[world map 09 ckmeans cluster min breaks](https://bl.ocks.org/micahstubbs/c7f17dcbdc728e0d579d84e47c33dfa6)  ", "uid": "micahstubbs_01529b106c93f9b649c4006de5c79b80"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n  \nvar tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\nvar x = d3.scaleBand().rangeRound([0, width]).padding(0.1),\n    y = d3.scaleLinear().rangeRound([height, 0]);\n  \nvar colours = d3.scaleOrdinal()\n    .range([\"#6F257F\", \"#CA0D59\"]);\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"data.json\", function(error, data) {\n    if (error) throw error;\n\n    x.domain(data.map(function(d) { return d.area; }));\n    y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    g.append(\"g\")\n      \t.attr(\"class\", \"axis axis--y\")\n      \t.call(d3.axisLeft(y).ticks(5).tickFormat(function(d) { return parseInt(d / 1000) + \"K\"; }).tickSizeInner([-width]))\n      .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \"0.71em\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"fill\", \"#5D6971\")\n        .text(\"Average House Price - ()\");\n\n    g.selectAll(\".bar\")\n      \t.data(data)\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.area); })\n        .attr(\"y\", function(d) { return y(d.value); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function(d) { return height - y(d.value); })\n        .attr(\"fill\", function(d) { return colours(d.area); })\n        .on(\"mousemove\", function(d){\n            tooltip\n              .style(\"left\", d3.event.pageX - 50 + \"px\")\n              .style(\"top\", d3.event.pageY - 70 + \"px\")\n              .style(\"display\", \"inline-block\")\n              .html((d.area) + \"<br>\" + \"\" + (d.value));\n        })\n    \t\t.on(\"mouseout\", function(d){ tooltip.style(\"display\", \"none\");});\n    });\n</script>", "description": "Bar Chart with Tooltip with Tooltip D3 V4", "created_at": "2016-09-22T20:17:39Z", "updated_at": "2016-09-23T23:42:07Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.json", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This chart is based on <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>. \n\nit uses a json file storing area names and average house prices. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes", "uid": "alandunning_274bf248fd0f362d64674920e85c1eb7"}, {"code": "<script>\n    var width = 960\n    var height = 500\n    \n    var projection = d3.geoAlbersUsa()\n\t    .scale(680)\n  \t  .translate([width / 2, height / 2]);\n\n    var path = d3.geoPath().projection(projection)\n\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n    \n    d3.json(\"Florida 2014 Tracts.json\", function(error, tracts) {\n      if (error) throw error\n      console.log(tracts)\n      \n     \tsvg.append(\"g\")\n     \t\t.attr(\"class\", \"tracts\")\n\t\t\t  .selectAll(\"path\")\n      \t.data(topojson.feature(tracts, tracts.objects.cb_2014_12_tract_500k).features)\n    .enter().append(\"path\")\n      //.attr(\"class\", function(d) { return quantile(rateById.get(d.id)); })\n      .attr(\"d\", path);\n\n  svg.append(\"path\")\n      .datum(topojson.mesh(tracts, tracts.objects.cb_2014_12_tract_500k, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"states\")\n      .attr(\"d\", path);\n    })\n  </script>", "description": "Tampa Bay Census Tracts", "created_at": "2016-09-22T18:48:29Z", "updated_at": "2016-09-22T18:48:29Z", "api": ["d3.geoAlbersUsa", "d3.geoPath", "d3.select", "d3.json"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "sirwart_645e044e1df497c7287acbf1883eb945"}, {"code": "<script>\n\nvar width = 900,\n    height = 650,\n    radius = Math.min(width, height) / 2;\n\nvar x = d3.scale.linear()\n    .range([0, 2 * Math.PI]);\n\nvar y = d3.scale.linear()\n    .range([0, radius]);\n\nvar color = d3.scale.category20c();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height / 2 + 10) + \")\");\n\nvar partition = d3.layout.partition()\n    .value(function(d) { return d.size; });\n\nvar arc = d3.svg.arc()\n    .startAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, x(d.x))); })\n    .endAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))); })\n    .innerRadius(function(d) { return Math.max(0, y(d.y)); })\n    .outerRadius(function(d) { return Math.max(0, y(d.y + d.dy)); });\n\n//----- new: reading from csv instead of JSON\n  \n  d3.text(\"flare.csv\", function(text) {\n  var csv = d3.csv.parseRows(text);\n  var json = buildHierarchy(csv);\n    \n    console.log(\"-----------\");\n    console.log(json);\n    var data = json.slice();\n//  createVisualization(json);\n  \n    console.log(\"-----------\");\n    console.log(data);\n  } ) ;\n//  \n\n  \nd3.json(\"flare.json\", function(error, root) {\n  var g = svg.selectAll(\"g\")\n      .data(partition.nodes(root))\n    .enter().append(\"g\");\n\n  var path = g.append(\"path\")\n    .attr(\"d\", arc)\n    .style(\"fill\", function(d) { return color((d.children ? d : d.parent).name); })\n    .on(\"click\", click);\n\n  var text = g.append(\"text\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + computeTextRotation(d) + \")\"; })\n    .attr(\"x\", function(d) { return y(d.y); })\n    .attr(\"dx\", \"6\") // margin\n    .attr(\"dy\", \".35em\") // vertical-align\n    .text(function(d) { return d.name; });\n\n  function click(d) {\n    // fade out all text elements\n    text.transition().attr(\"opacity\", 0);\n\n    path.transition()\n      .duration(750)\n      .attrTween(\"d\", arcTween(d))\n      .each(\"end\", function(e, i) {\n          // check if the animated element's data e lies within the visible angle span given in d\n          if (e.x >= d.x && e.x < (d.x + d.dx)) {\n            // get a selection of the associated text element\n            var arcText = d3.select(this.parentNode).select(\"text\");\n            // fade in the text element and recalculate positions\n            arcText.transition().duration(750)\n              .attr(\"opacity\", 1)\n              .attr(\"transform\", function() { return \"rotate(\" + computeTextRotation(e) + \")\" })\n              .attr(\"x\", function(d) { return y(d.y); });\n          }\n      });\n  }\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n// Interpolate the scales!\nfunction arcTween(d) {\n  var xd = d3.interpolate(x.domain(), [d.x, d.x + d.dx]),\n      yd = d3.interpolate(y.domain(), [d.y, 1]),\n      yr = d3.interpolate(y.range(), [d.y ? 20 : 0, radius]);\n  return function(d, i) {\n    return i\n        ? function(t) { return arc(d); }\n        : function(t) { x.domain(xd(t)); y.domain(yd(t)).range(yr(t)); return arc(d); };\n  };\n}\n\nfunction computeTextRotation(d) {\n  return (x(d.x + d.dx / 2) - Math.PI / 2) / Math.PI * 180;\n}\n\n  function buildHierarchy(csv) {\n  var root = {\"name\": \"root\", \"children\": []};\n  for (var i = 0; i < csv.length; i++) {\n    var sequence = csv[i][0];\n    var size = +csv[i][1];\n    var status = csv[i][2];\n    if (isNaN(size)) { // e.g. if this is a header row\n      continue;\n    }\n    var parts = sequence.split(\"-\");\n    var currentNode = root;\n    for (var j = 0; j < parts.length; j++) {\n      var children = currentNode[\"children\"];\n      var nodeName = parts[j];\n      var childNode;\n      if (j + 1 < parts.length) {\n   // Not yet at the end of the sequence; move down the tree.\n \t\t\t\tvar foundChild = false;\n \t\t\t\tfor (var k = 0; k < children.length; k++) {\n \t  \t\t\tif (children[k][\"name\"] == nodeName) {\n \t    \t\tchildNode = children[k];\n \t    \t\tfoundChild = true;\n \t    \t\tbreak;\n \t  \t}\n \t}\n  // If we don't already have a child node for this branch, create it.\n \tif (!foundChild) {\n \t  childNode = {\"name\": nodeName, \"children\": []};\n \t  children.push(childNode);\n \t}\n \tcurrentNode = childNode;\n      } else {\n \t// Reached the end of the sequence; create a leaf node.\n \tchildNode = {\"name\": nodeName, \"size\": size, \"status\": status, \"child\": foundChild};\n \tchildren.push(childNode);\n      }\n    }\n  }\n  return root;\n};\n\n  \n</script>", "description": "Zoomable Sunburst", "created_at": "2016-09-22T13:20:08Z", "updated_at": "2016-09-22T15:49:37Z", "api": ["d3.scale.linear", "d3.scale.category20c", "d3.select", "d3.layout.partition", "d3.svg.arc", "d3.text", "d3.csv.parseRows", "d3.json", "d3.interpolate"], "readme": "Zoomable Sunburst with Labels\n", "uid": "fotisz_d75dd147aa99fce499902801919d41ba"}, {"code": "<script>\n\nvar width = 700,\n    height =700,\n    radius = Math.min(width, height) / 2;\n\nvar x = d3.scale.linear()\n    .range([0, 2 * Math.PI]);\n\nvar y = d3.scale.linear()\n    .range([0, radius]);\n\n//var color = d3.scale.category10()\n  \nvar color = d3.scale.ordinal()\n    .range([\"#bfd7b7\", \"#55c9c0\", \"#02619b\", \"#b9cddb\",\"#fd9775\",\"#fbd0c4\"]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height / 2 + 10) + \")\");\n\nvar partition = d3.layout.partition()\n    .value(function(d) { return d.size; });\n\nvar arc = d3.svg.arc()\n    .startAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, x(d.x))); })\n    .endAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))); })\n    .innerRadius(function(d) { return Math.max(0, y(d.y)); })\n    .outerRadius(function(d) { return Math.max(0, y(d.y + d.dy)); });\n\nd3.json(\"tree.json\", function(error, root) {\n  var g = svg.selectAll(\"g\")\n      .data(partition.nodes(root))\n    .enter().append(\"g\");\n\n  var path = g.append(\"path\")\n    .attr(\"d\", arc)\n    .style(\"fill\", function(d) { return color((d.children ? d : d.parent).name); })\n    .on(\"click\", click);\n\n  var text = g.append(\"text\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + computeTextRotation(d) + \")\"; })\n    .attr(\"x\", function(d) { return y(d.y); })\n    .attr(\"dx\", \"6\") // margin\n    .attr(\"dy\", \".35em\") // vertical-align\n    .text(function(d) { return d.name; });\n\n  function click(d) {\n    // fade out all text elements\n    text.transition().attr(\"opacity\", 0);\n\n    path.transition()\n      .duration(750)\n      .attrTween(\"d\", arcTween(d))\n      .each(\"end\", function(e, i) {\n          // check if the animated element's data e lies within the visible angle span given in d\n          if (e.x >= d.x && e.x < (d.x + d.dx)) {\n            // get a selection of the associated text element\n            var arcText = d3.select(this.parentNode).select(\"text\");\n            // fade in the text element and recalculate positions\n            arcText.transition().duration(750)\n              .attr(\"opacity\", 1)\n              .attr(\"transform\", function() { return \"rotate(\" + computeTextRotation(e) + \")\" })\n              .attr(\"x\", function(d) { return y(d.y); });\n          }\n      });\n  }\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n// Interpolate the scales!\nfunction arcTween(d) {\n  var xd = d3.interpolate(x.domain(), [d.x, d.x + d.dx]),\n      yd = d3.interpolate(y.domain(), [d.y, 1]),\n      yr = d3.interpolate(y.range(), [d.y ? 20 : 0, radius]);\n  return function(d, i) {\n    return i\n        ? function(t) { return arc(d); }\n        : function(t) { x.domain(xd(t)); y.domain(yd(t)).range(yr(t)); return arc(d); };\n  };\n}\n\nfunction computeTextRotation(d) {\n  return (x(d.x + d.dx / 2) - Math.PI / 2) / Math.PI * 180;\n}\n\n</script>", "description": "Depression Wheel", "created_at": "2016-09-22T13:03:36Z", "updated_at": "2016-09-22T13:03:37Z", "api": ["d3.scale.linear", "d3.scale.category10", "d3.scale.ordinal", "d3.select", "d3.layout.partition", "d3.svg.arc", "d3.json", "d3.interpolate"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/metmajer/'>metmajer</a>'s block: <a href='http://bl.ocks.org/metmajer/5480307'>Zoomable Sunburst with Labels</a>\n\n<b><i>Bibliography (by units of analysis)</i></b>\n\n<b>Molecular</b>\n\n(1)\tAnacker, Christoph et al. \u201cThe Glucocorticoid Receptor: Pivot of Depression and of Antidepressant Treatment?\u201d Psychoneuroendocrinology 36.3 (2011): 415\u2013425. PMC. Web. 8 Oct. 2015.\n-\tShows that GR involvement is tied to neurobiological correlates that underlie depression, ranging from glucocorticoid resistance to HPA-axis hyperactivity. Because GR function can be modified through antidepressants, GRs could be involved in depression.  \n\n(2)\tLee, Heon-Jin, et al. \"Oxytocin: The great facilitator of life.\" Progress in Neurobiology 88.2 (2009): 127-51. Print.\n-\tProvides a review on the role of oxytocin in non-social and social behaviors and in disorders characterized by abnormal affect regulation. \n\n(3)\tSvenningsson, Per, et al. \"Alterations in 5-HT1B Receptor Function by p11 in Depression-Like States.\" Science 311.5757 (2006): 77-80. Print.\n-\tHighlights the role of serotonin receptors (5-HT1B) and their interaction with p11, which is increased in rodent brains by antidepressants. Shows that modulation of serotonin receptors by p11 gene can change molecular adaptations involved in the depressed brain. \n\n<b>Genetic</b>\n\n(4)\tFelten, Andrea, et al. \"Genetically determined dopamine availability predicts disposition for depression.\" Brain and Behavior 1.2 (2011): 109-18. Print.\n-\tFocuses on dopaminergic gene loci related to traits of positive and negative emotionality. Shows influence of two DA gene polymorphisms on Sadness. \n\n(5)\tBufalino, Chiara, et al. \"The role of immune genes in the association between depression and inflammation: A review of recent clinical studies.\" Brain, Behavior, and Immunity 31 (2013): 31-47. Print.\n-\tShows that gene variants related to cytokines, enzymes and the serotonin pathway may increase the risk for depression and that these can influence the mechanisms by which the immune system contributes to depression.\n\n(6)\tLewis, Cathryn M., et al. \"Genome-Wide Association Study of Major Recurrent Depression in the U.K. Population.\" The American Journal of Psychiatry 167.8 (2010): 949-57. Print.\n-\tDescribes a SNP in BICC1 that was found to be associated with female depression though a GWAS done in the U.K. Most importantly, it restates that individual genes tied to depression are likely to have a minor effect but by large genetic analysis we can identify them. \n\n(7)\tThompson, Renee J., et al. \"Oxytocin receptor gene polymorphism (rs2254298) interacts with familial risk for psychopathology to predict symptoms of depression and anxiety in adolescent girls.\" Psychoneuroendocrinology 36.1 (2011): 144-47. Print.\n-\tShows that being heterozygous for the OXTR rs2254298 gene plus having a mother\u2019s history of recurrent MDD increased the risk of offspring in having depression and anxiety symptoms. These findings highlight the potential importance of the OXTR gene polymorphism in the etiology of depression and anxiety disorders.\n\n(8)\tWoody, Mary L., John E. McGeary, and Brandon E. Gibb. \"Brooding rumination and heart rate variability in women at high and low risk for depression: Group differences and moderation by COMT genotype.\" Journal of Abnormal Psychology 123.1 (2014): 61-67. Print.\n-\tShows that several COMT gene polymorphisms have been linked to a heightened amygdala reactivity and deficit in PFC function, both depression-related abnormalities. \n\n<b>Circuit</b>\n\n(9)\tAvery, Jason A., et al. \"Major Depressive Disorder Is Associated With Abnormal Interoceptive Activity and Functional Connectivity in the Insula.\" Biological Psychiatry 76.3 (2014): 258-66. Print.\n-\tHighlights that MDD is associated with abnormal interoceptive representation within the insula, which is known as a structure that regulates \u201cgut feelings.\u201d\n\n(10)\tMayberg, Helen S., et al. \"Deep Brain Stimulation for Treatment-Resistant Depression.\" Neuron 45.5 (2005): 651-60. Print.\n-\tAssociates DBS of white matter adjacent to subgenual cingulate gyrus with sustained remission of depression. Relevant in treating depression because it shows the efficacy of deep brain stimulation in a certain brain region to treat depression. \n\n(11)\tScheuerecker, Johanna, et al. \"Orbitofrontal volume reductions during emotion recognition in patients with major depression.\" Journal of Psychiatry and Neuroscience 35 (2010): 311+. Print.\n-\tProvides evidence that the orbitofrontal cortex is a key area in major depression and that structural changes in it result in alteration within the emotional circuit. \n\n(12)\tSiegle, Greg J., et al. \"Increased Amygdala and Decreased Dorsolateral Prefrontal BOLD Responses in Unipolar Depression: Related and Independent Features.\" Biological Psychiatry 61.2 (2007): 198-209. Print.\n-\tShows depression to be associated with increased limbic activity in response to emotional information and decreased DLPFC activity in response to cognitive tasks. \n\n(13)\tTreadway, Michael T., et al. \"Early Adverse Events, HPA Activity and Rostral Anterior Cingulate Volume in MDD.\" PLoS ONE 4.3 (2009): e4887. Print.\n-\tFinds the grey matter volume of the rostral ACC to correlate with cortisol and early adverse events, which hints to a relationship between ACC morphology and pathophysiology of MDD.  \n\n<b>Physiology</b>\n\n(14)\tDowlati, Yekta, et al. \"A Meta-Analysis of Cytokines in Major Depression.\" Biological Psychiatry 67.5 (2010): 446-57. Print.\n-\tReports a meta-analysis of findings that highlight the role of proinflammatory cytokines in depressed subjects compared to controls. \n\n(15)\tVreeburg, S. A., et al. \"Major depressive disorder and hypothalamic-pituitary-adrenal axis activity: Results from a large cohort study.\" Archives of General Psychiatry 66.6 (2009): 617-26. Print.\n-\tShows associations between MDD and specific HPA axis indicators, which could be an indicative of an increased biological vulnerability for depression. \n\n<b>Behavior</b>\n\n(16)\tJoormann, Jutta, Marco Dkane, and Ian H. Gotlib. \"Adaptive and Maladaptive Components of Rumination? Diagnostic Specificity and Relation to Depressive Biases.\" Behavior Therapy 37.3 (2006): 269-80. Print.\n-\tSupports the idea that rumination is composed of an adaptive reflective factor and a maladaptive brooding factor and shows a correlation between attention to sad faces and depression. \n\n(17)\tMatos, Marcela, Jos\u00e9 Pinto-Gouveia, and V\u00e2nia Costa. \"Understanding the Importance of Attachment in Shame Traumatic Memory Relation to Depression: The Impact of Emotion Regulation Processes.\" Clinical Psychology & Psychotherapy 20.2 (2013): 149-65. Print.\n-\tHighlights the relationship between shame traumatic memory and depressive symptoms and highlights that shame can be an obstacle for patients that seek recovery. Highlights the importance of scientific studies to understand how to treat depression and accelerate recovery.  \n\n(18)\tTreadway, Michael T., and David H. Zald. \"Reconsidering anhedonia in depression: Lessons from translational neuroscience.\" Neuroscience & Biobehavioral Reviews 35.3 (2011): 537-55. Print.\n-\tMoves away from the idea that anhedonia is a steady-state mood-like phenomena and reframes anhedonia in terms of decision-making. Important to understand how depression can affect essential behaviors such as decision-making.\n\n\nforked from <a href='http://bl.ocks.org/mstackmann/'>mstackmann</a>'s block: <a href='http://bl.ocks.org/mstackmann/dc337293689fc46c55d2'>Depression Wheel</a>", "uid": "fotisz_584aef7c050604d35bdfec8ede7844e5"}, {"code": "<script>\n\n// Modify margins here  \nvar margin = {top: 20, right: 80, bottom: 20, left: 80},\n    width = 1200 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  \t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "REINGOLD-TILFORD TREE", "created_at": "2016-09-22T10:07:57Z", "updated_at": "2016-09-23T15:37:15Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a [Reingold\u2013Tilford tree](/4339184). Click on the nodes to expand or collapse.", "uid": "fotisz_0ae06752972bffb47639d576f8ec1c96"}, {"code": "<script>\n\nvar margin = {top: -5, right: -5, bottom: -5, left: -5},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar zoom = d3.behavior.zoom()\n    .scaleExtent([1, 10])\n    .on(\"zoom\", zoomed);\n\nvar drag = d3.behavior.drag()\n    .origin(function(d) { return d; })\n    .on(\"dragstart\", dragstarted)\n    .on(\"drag\", dragged)\n    .on(\"dragend\", dragended);\n\nvar slider = d3.select(\"body\").append(\"p\").append(\"input\")\n  .datum({})\n  .attr(\"type\", \"range\")\n  .attr(\"value\", zoom.scaleExtent()[0])\n  .attr(\"min\", zoom.scaleExtent()[0])\n  .attr(\"max\", zoom.scaleExtent()[1])\n  .attr(\"step\", (zoom.scaleExtent()[1] - zoom.scaleExtent()[0]) / 100)\n  .on(\"input\", slided);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.right + \")\")\n    .call(zoom);\n\nvar rect = svg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .style(\"fill\", \"none\");\n//     .style(\"pointer-events\", \"all\");\n\nvar container = svg.append(\"g\");\n\ncontainer.append(\"g\")\n    .attr(\"class\", \"x axis\")\n  .selectAll(\"line\")\n    .data(d3.range(0, width, 10))\n  .enter().append(\"line\")\n    .attr(\"x1\", function(d) { return d; })\n    .attr(\"y1\", 0)\n    .attr(\"x2\", function(d) { return d; })\n    .attr(\"y2\", height);\n\ncontainer.append(\"g\")\n    .attr(\"class\", \"y axis\")\n  .selectAll(\"line\")\n    .data(d3.range(0, height, 10))\n  .enter().append(\"line\")\n    .attr(\"x1\", 0)\n    .attr(\"y1\", function(d) { return d; })\n    .attr(\"x2\", width)\n    .attr(\"y2\", function(d) { return d; });\n\nd3.tsv(\"dots.tsv\", dottype, function(error, dots) {\n  dot = container.append(\"g\")\n      .attr(\"class\", \"dot\")\n    .selectAll(\"circle\")\n      .data(dots)\n    .enter().append(\"circle\")\n      .attr(\"r\", 5)\n      .attr(\"cx\", function(d) { return d.x; })\n      .attr(\"cy\", function(d) { return d.y; })\n      .call(drag);\n});\n\nfunction dottype(d) {\n  d.x = +d.x;\n  d.y = +d.y;\n  return d;\n}\n\nfunction zoomed() {\n  container.attr(\"transform\", \"translate(\" + d3.event.translate + \")scale(\" + d3.event.scale + \")\");\n  slider.property(\"value\",  d3.event.scale);\n}\n\nfunction dragstarted(d) {\n  d3.event.sourceEvent.stopPropagation();\n  d3.select(this).classed(\"dragging\", true);\n}\n\nfunction dragged(d) {\n  d3.select(this).attr(\"cx\", d.x = d3.event.x).attr(\"cy\", d.y = d3.event.y);\n}\n\nfunction dragended(d) {\n  d3.select(this).classed(\"dragging\", false);\n}\n\nfunction slided(d){\n  zoom.scale(d3.select(this).property(\"value\"))\n    .event(svg);\n}\n\n</script>", "description": "Drag + Zoom + Slider", "created_at": "2016-09-21T19:36:27Z", "updated_at": "2016-09-21T19:36:58Z", "api": ["d3.behavior.zoom", "d3.behavior.drag", "d3.select", "d3.range", "d3.tsv", "d3.event.sourceEvent.stopPropagation"], "readme": "An extension of [this example](http://bl.ocks.org/mbostock/6123708) to include\nan HTML5 slider in answer to [this question](https://groups.google.com/forum/#!topic/d3-js/TMGdXDzyO50).\n\n\nforked from <a href='http://bl.ocks.org/bollwyvl/'>bollwyvl</a>'s block: <a href='http://bl.ocks.org/bollwyvl/871b7c781b92fd0044f5'>Drag + Zoom + Slider</a>", "uid": "RicCheng_82e965adfb0ac2b147522497a51a6c50"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n\n    svg.append(\"text\")\n      .text(\"Edit the code below to change me!\")\n      .attr(\"y\", 200)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 36)\n      .style(\"font-family\", \"monospace\")\n\n  </script>", "description": "What does wind look like?", "created_at": "2016-09-21T09:50:24Z", "updated_at": "2016-09-21T09:56:30Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jarandaf_81d070043502ba36720536ce81803bf8"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n\n    svg.append(\"text\")\n      .text(\"Edit the code below to change me!\")\n      .attr(\"y\", 200)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 36)\n      .style(\"font-family\", \"monospace\")\n\n  </script>", "description": "fresh block", "created_at": "2016-09-21T08:45:50Z", "updated_at": "2016-09-21T08:45:50Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jarandaf_43cc10cbcb4986b5124ca085aeedc2a9"}, {"code": "<script>\n\nvar treeData = [\n  {\n    \"name\": \"CEO's Decision\",\n    \"parent\": \"null\",\n    \"children\": [\n      {\n        \"name\": \"Product A\",\n        \"parent\": \"CEO's Decision\",\n        \"children\": [\n          {\n            \"name\": \"Time Delay (5%)\",\n            \"children\": [\n              {\n                \"name\": \"High Price\",\n                \"children\": [\n                  {\n                    \"name\": \"High Sales (30%)\",\n                    \"children\": [\n                      {\n                        \"name\": \"$5M\",\n                      }]\n                  },\n                  {\n                    \"name\": \"Low Sales (70%)\",\n\t\t\t\t\t\t\t\t\t\t\"children\": [\n                      {\n                        \"name\": \"-$0.5M\",\n                      }]\n                  }\n                ]\n              },\n              {\n                \"name\": \"Low Price\",\n                \"children\": [\n                  {\n                    \"name\": \"High Sales (50%)\",\n                    \"children\": [\n                      {\n                        \"name\": \"$3.5M\",\n                      }]\n                  },\n                  {\n                    \"name\": \"Low Sales (50%)\",\n\t\t\t\t\t\t\t\t\t\t\"children\": [\n                      {\n                        \"name\": \"$1.0M\",\n                      }]\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"name\": \"No Delay (95%)\",\n            \"children\": [\n              {\n                \"name\": \"High Price\",\n                \"children\": [\n                  {\n                    \"name\": \"High Sales (40%)\",\n                    \"children\": [\n                      {\n                        \"name\": \"$8M\",\n                      }]\n                  },\n                  {\n                    \"name\": \"Low Sales (60%)\",\n\t\t\t\t\t\t\t\t\t\t\"children\": [\n                      {\n                        \"name\": \"$0\",\n                      }]\n                  }\n                ]\n              },\n              {\n                \"name\": \"Low Price\",\n                \"children\": [\n                  {\n                    \"name\": \"High Sales (50%)\",\n                    \"children\": [\n                      {\n                        \"name\": \"$4.5M\",\n                      }]\n                  },\n                  {\n                    \"name\": \"Low Sales (50%)\",\n\t\t\t\t\t\t\t\t\t\t\"children\": [\n                      {\n                        \"name\": \"$1.5M\",\n                      }]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      {\n       \"name\": \"Product B\",\n       \"parent\": \"CEO's Decision\",\n       \"children\": [\n        {\n         \"name\": \"High Sales (38%)\",\n         \"parent\": \"Product B\",\n         \"children\": [\n          {\"name\": \"$8M\",\n           \"parent\": \"High Sales (38%)\"\n          }]\n        },\n        {\n         \"name\": \"Medium Sales (12%)\",\n         \"parent\": \"Product B\",\n         \"children\": [\n          {\"name\": \"$4M\",\n           \"parent\": \"Medium Sales (12%)\"\n          }]\n        },\n        {\n         \"name\": \"Low Sales (50%)\",\n         \"parent\": \"Product B\",\n         \"children\": [\n          {\"name\": \"$0\",\n          \"parent\": \"Low Sales (50%)\"\n          }]\n        }\n       ]\n      },\n      {\n       \"name\": \"Product C\",\n       \"parent\": \"CEO's Decision\",\n       \"children\": [\n        { \"name\": \"$1M\",\n        \t\"parent\": \"Product C\"\n        }\n       ]\n      }\n    ]\n  }\n];\n\n\n// ************** Generate the tree diagram\t *****************\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n\twidth = 960 - margin.right - margin.left,\n\theight = 500 - margin.top - margin.bottom;\n\t\nvar i = 0,\n\tduration = 750,\n\troot;\n\nvar tree = d3.layout.tree()\n\t.size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n\t.projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.right + margin.left)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nroot = treeData[0];\nroot.x0 = height / 2;\nroot.y0 = 0;\n  \nupdate(root);\n\nd3.select(self.frameElement).style(\"height\", \"500px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n\t  links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 150; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n\t  .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n\t  .attr(\"class\", \"node\")\n\t  .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n\t  .on(\"click\", click);\n\n  nodeEnter.append(\"square\")\n\t  .attr(\"r\", 1e-6)\n\t  .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n\t  .attr(\"x\", function(d) { return d.children || d._children ? -13 : 13; })\n\t  .attr(\"dy\", \".35em\")\n\t  .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n\t  .text(function(d) { return d.name; })\n\t  .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n\t  .duration(duration)\n\t  .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"square\")\n\t  .attr(\"r\", 10)\n\t  .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n\t  .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n\t  .duration(duration)\n\t  .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n\t  .remove();\n\n  nodeExit.select(\"square\")\n\t  .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n\t  .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n\t  .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n\t  .attr(\"class\", \"link\")\n\t  .attr(\"d\", function(d) {\n\t\tvar o = {x: source.x0, y: source.y0};\n\t\treturn diagonal({source: o, target: o});\n\t  });\n\n  // Transition links to their new position.\n  link.transition()\n\t  .duration(duration)\n\t  .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n\t  .duration(duration)\n\t  .attr(\"d\", function(d) {\n\t\tvar o = {x: source.x, y: source.y};\n\t\treturn diagonal({source: o, target: o});\n\t  })\n\t  .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n\td.x0 = d.x;\n\td.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n\td._children = d.children;\n\td.children = null;\n  } else {\n\td.children = d._children;\n\td._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "IEOR 241 PS4-1 Decision Tree", "created_at": "2016-09-21T06:21:16Z", "updated_at": "2016-09-21T18:59:22Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select"], "readme": "This is an interactive decision tree for IEOR 241 Problem Set 4, Item 1 (Fall 2016).\n\nClick on the nodes to expand or collapse.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/8375092'>Interactive d3.js tree diagram</a>", "uid": "aldrejota_5134ffe02cd512940bb3b9e300c28acb"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\nvar json = {\n \"name\": \"flare\",\n \"children\": [\n  {\n   \"name\": \"analytics\",\n   \"children\": [\n    {\n     \"name\": \"cluster\",\n     \"children\": [\n      {\"name\": \"AgglomerativeCluster\", \"size\": 3938},\n      {\"name\": \"CommunityStructure\", \"size\": 3812},\n      {\"name\": \"HierarchicalCluster\", \"size\": 6714},\n      {\"name\": \"MergeEdge\", \"size\": 743}\n     ]\n    },\n    {\n     \"name\": \"graph\",\n     \"children\": [\n      {\"name\": \"BetweennessCentrality\", \"size\": 3534},\n      {\"name\": \"LinkDistance\", \"size\": 5731},\n      {\"name\": \"MaxFlowMinCut\", \"size\": 7840},\n      {\"name\": \"ShortestPaths\", \"size\": 5914},\n      {\"name\": \"SpanningTree\", \"size\": 3416}\n     ]\n    },\n    {\n     \"name\": \"optimization\",\n     \"children\": [\n      {\"name\": \"AspectRatioBanker\", \"size\": 7074}\n     ]\n    }\n   ]\n  },\n  {\n   \"name\": \"animate\",\n   \"children\": [\n    {\"name\": \"Easing\", \"size\": 17010},\n    {\"name\": \"FunctionSequence\", \"size\": 5842},\n    {\n     \"name\": \"interpolate\",\n     \"children\": [\n      {\"name\": \"ArrayInterpolator\", \"size\": 1983},\n      {\"name\": \"ColorInterpolator\", \"size\": 2047},\n      {\"name\": \"DateInterpolator\", \"size\": 1375},\n      {\"name\": \"Interpolator\", \"size\": 8746},\n      {\"name\": \"MatrixInterpolator\", \"size\": 2202},\n      {\"name\": \"NumberInterpolator\", \"size\": 1382},\n      {\"name\": \"ObjectInterpolator\", \"size\": 1629},\n      {\"name\": \"PointInterpolator\", \"size\": 1675},\n      {\"name\": \"RectangleInterpolator\", \"size\": 2042}\n     ]\n    },\n    {\"name\": \"ISchedulable\", \"size\": 1041},\n    {\"name\": \"Parallel\", \"size\": 5176},\n    {\"name\": \"Pause\", \"size\": 449},\n    {\"name\": \"Scheduler\", \"size\": 5593},\n    {\"name\": \"Sequence\", \"size\": 5534},\n    {\"name\": \"Transition\", \"size\": 9201},\n    {\"name\": \"Transitioner\", \"size\": 19975},\n    {\"name\": \"TransitionEvent\", \"size\": 1116},\n    {\"name\": \"Tween\", \"size\": 6006}\n   ]\n  },\n  {\n   \"name\": \"data\",\n   \"children\": [\n    {\n     \"name\": \"converters\",\n     \"children\": [\n      {\"name\": \"Converters\", \"size\": 721},\n      {\"name\": \"DelimitedTextConverter\", \"size\": 4294},\n      {\"name\": \"GraphMLConverter\", \"size\": 9800},\n      {\"name\": \"IDataConverter\", \"size\": 1314},\n      {\"name\": \"JSONConverter\", \"size\": 2220}\n     ]\n    },\n    {\"name\": \"DataField\", \"size\": 1759},\n    {\"name\": \"DataSchema\", \"size\": 2165},\n    {\"name\": \"DataSet\", \"size\": 586},\n    {\"name\": \"DataSource\", \"size\": 3331},\n    {\"name\": \"DataTable\", \"size\": 772},\n    {\"name\": \"DataUtil\", \"size\": 3322}\n   ]\n  },\n  {\n   \"name\": \"display\",\n   \"children\": [\n    {\"name\": \"DirtySprite\", \"size\": 8833},\n    {\"name\": \"LineSprite\", \"size\": 1732},\n    {\"name\": \"RectSprite\", \"size\": 3623},\n    {\"name\": \"TextSprite\", \"size\": 10066}\n   ]\n  },\n  {\n   \"name\": \"flex\",\n   \"children\": [\n    {\"name\": \"FlareVis\", \"size\": 4116}\n   ]\n  },\n  {\n   \"name\": \"physics\",\n   \"children\": [\n    {\"name\": \"DragForce\", \"size\": 1082},\n    {\"name\": \"GravityForce\", \"size\": 1336},\n    {\"name\": \"IForce\", \"size\": 319},\n    {\"name\": \"NBodyForce\", \"size\": 10498},\n    {\"name\": \"Particle\", \"size\": 2822},\n    {\"name\": \"Simulation\", \"size\": 9983},\n    {\"name\": \"Spring\", \"size\": 2213},\n    {\"name\": \"SpringForce\", \"size\": 1681}\n   ]\n  },\n  {\n   \"name\": \"query\",\n   \"children\": [\n    {\"name\": \"AggregateExpression\", \"size\": 1616},\n    {\"name\": \"And\", \"size\": 1027},\n    {\"name\": \"Arithmetic\", \"size\": 3891},\n    {\"name\": \"Average\", \"size\": 891},\n    {\"name\": \"BinaryExpression\", \"size\": 2893},\n    {\"name\": \"Comparison\", \"size\": 5103},\n    {\"name\": \"CompositeExpression\", \"size\": 3677},\n    {\"name\": \"Count\", \"size\": 781},\n    {\"name\": \"DateUtil\", \"size\": 4141},\n    {\"name\": \"Distinct\", \"size\": 933},\n    {\"name\": \"Expression\", \"size\": 5130},\n    {\"name\": \"ExpressionIterator\", \"size\": 3617},\n    {\"name\": \"Fn\", \"size\": 3240},\n    {\"name\": \"If\", \"size\": 2732},\n    {\"name\": \"IsA\", \"size\": 2039},\n    {\"name\": \"Literal\", \"size\": 1214},\n    {\"name\": \"Match\", \"size\": 3748},\n    {\"name\": \"Maximum\", \"size\": 843},\n    {\n     \"name\": \"methods\",\n     \"children\": [\n      {\"name\": \"add\", \"size\": 593},\n      {\"name\": \"and\", \"size\": 330},\n      {\"name\": \"average\", \"size\": 287},\n      {\"name\": \"count\", \"size\": 277},\n      {\"name\": \"distinct\", \"size\": 292},\n      {\"name\": \"div\", \"size\": 595},\n      {\"name\": \"eq\", \"size\": 594},\n      {\"name\": \"fn\", \"size\": 460},\n      {\"name\": \"gt\", \"size\": 603},\n      {\"name\": \"gte\", \"size\": 625},\n      {\"name\": \"iff\", \"size\": 748},\n      {\"name\": \"isa\", \"size\": 461},\n      {\"name\": \"lt\", \"size\": 597},\n      {\"name\": \"lte\", \"size\": 619},\n      {\"name\": \"max\", \"size\": 283},\n      {\"name\": \"min\", \"size\": 283},\n      {\"name\": \"mod\", \"size\": 591},\n      {\"name\": \"mul\", \"size\": 603},\n      {\"name\": \"neq\", \"size\": 599},\n      {\"name\": \"not\", \"size\": 386},\n      {\"name\": \"or\", \"size\": 323},\n      {\"name\": \"orderby\", \"size\": 307},\n      {\"name\": \"range\", \"size\": 772},\n      {\"name\": \"select\", \"size\": 296},\n      {\"name\": \"stddev\", \"size\": 363},\n      {\"name\": \"sub\", \"size\": 600},\n      {\"name\": \"sum\", \"size\": 280},\n      {\"name\": \"update\", \"size\": 307},\n      {\"name\": \"variance\", \"size\": 335},\n      {\"name\": \"where\", \"size\": 299},\n      {\"name\": \"xor\", \"size\": 354},\n      {\"name\": \"_\", \"size\": 264}\n     ]\n    },\n    {\"name\": \"Minimum\", \"size\": 843},\n    {\"name\": \"Not\", \"size\": 1554},\n    {\"name\": \"Or\", \"size\": 970},\n    {\"name\": \"Query\", \"size\": 13896},\n    {\"name\": \"Range\", \"size\": 1594},\n    {\"name\": \"StringUtil\", \"size\": 4130},\n    {\"name\": \"Sum\", \"size\": 791},\n    {\"name\": \"Variable\", \"size\": 1124},\n    {\"name\": \"Variance\", \"size\": 1876},\n    {\"name\": \"Xor\", \"size\": 1101}\n   ]\n  },\n  {\n   \"name\": \"scale\",\n   \"children\": [\n    {\"name\": \"IScaleMap\", \"size\": 2105},\n    {\"name\": \"LinearScale\", \"size\": 1316},\n    {\"name\": \"LogScale\", \"size\": 3151},\n    {\"name\": \"OrdinalScale\", \"size\": 3770},\n    {\"name\": \"QuantileScale\", \"size\": 2435},\n    {\"name\": \"QuantitativeScale\", \"size\": 4839},\n    {\"name\": \"RootScale\", \"size\": 1756},\n    {\"name\": \"Scale\", \"size\": 4268},\n    {\"name\": \"ScaleType\", \"size\": 1821},\n    {\"name\": \"TimeScale\", \"size\": 5833}\n   ]\n  },\n  {\n   \"name\": \"util\",\n   \"children\": [\n    {\"name\": \"Arrays\", \"size\": 8258},\n    {\"name\": \"Colors\", \"size\": 10001},\n    {\"name\": \"Dates\", \"size\": 8217},\n    {\"name\": \"Displays\", \"size\": 12555},\n    {\"name\": \"Filter\", \"size\": 2324},\n    {\"name\": \"Geometry\", \"size\": 10993},\n    {\n     \"name\": \"heap\",\n     \"children\": [\n      {\"name\": \"FibonacciHeap\", \"size\": 9354},\n      {\"name\": \"HeapNode\", \"size\": 1233}\n     ]\n    },\n    {\"name\": \"IEvaluable\", \"size\": 335},\n    {\"name\": \"IPredicate\", \"size\": 383},\n    {\"name\": \"IValueProxy\", \"size\": 874},\n    {\n     \"name\": \"math\",\n     \"children\": [\n      {\"name\": \"DenseMatrix\", \"size\": 3165},\n      {\"name\": \"IMatrix\", \"size\": 2815},\n      {\"name\": \"SparseMatrix\", \"size\": 3366}\n     ]\n    },\n    {\"name\": \"Maths\", \"size\": 17705},\n    {\"name\": \"Orientation\", \"size\": 1486},\n    {\n     \"name\": \"palette\",\n     \"children\": [\n      {\"name\": \"ColorPalette\", \"size\": 6367},\n      {\"name\": \"Palette\", \"size\": 1229},\n      {\"name\": \"ShapePalette\", \"size\": 2059},\n      {\"name\": \"SizePalette\", \"size\": 2291}\n     ]\n    },\n    {\"name\": \"Property\", \"size\": 5559},\n    {\"name\": \"Shapes\", \"size\": 19118},\n    {\"name\": \"Sort\", \"size\": 6887},\n    {\"name\": \"Stats\", \"size\": 6557},\n    {\"name\": \"Strings\", \"size\": 22026}\n   ]\n  },\n  {\n   \"name\": \"vis\",\n   \"children\": [\n    {\n     \"name\": \"axis\",\n     \"children\": [\n      {\"name\": \"Axes\", \"size\": 1302},\n      {\"name\": \"Axis\", \"size\": 24593},\n      {\"name\": \"AxisGridLine\", \"size\": 652},\n      {\"name\": \"AxisLabel\", \"size\": 636},\n      {\"name\": \"CartesianAxes\", \"size\": 6703}\n     ]\n    },\n    {\n     \"name\": \"controls\",\n     \"children\": [\n      {\"name\": \"AnchorControl\", \"size\": 2138},\n      {\"name\": \"ClickControl\", \"size\": 3824},\n      {\"name\": \"Control\", \"size\": 1353},\n      {\"name\": \"ControlList\", \"size\": 4665},\n      {\"name\": \"DragControl\", \"size\": 2649},\n      {\"name\": \"ExpandControl\", \"size\": 2832},\n      {\"name\": \"HoverControl\", \"size\": 4896},\n      {\"name\": \"IControl\", \"size\": 763},\n      {\"name\": \"PanZoomControl\", \"size\": 5222},\n      {\"name\": \"SelectionControl\", \"size\": 7862},\n      {\"name\": \"TooltipControl\", \"size\": 8435}\n     ]\n    },\n    {\n     \"name\": \"data\",\n     \"children\": [\n      {\"name\": \"Data\", \"size\": 20544},\n      {\"name\": \"DataList\", \"size\": 19788},\n      {\"name\": \"DataSprite\", \"size\": 10349},\n      {\"name\": \"EdgeSprite\", \"size\": 3301},\n      {\"name\": \"NodeSprite\", \"size\": 19382},\n      {\n       \"name\": \"render\",\n       \"children\": [\n        {\"name\": \"ArrowType\", \"size\": 698},\n        {\"name\": \"EdgeRenderer\", \"size\": 5569},\n        {\"name\": \"IRenderer\", \"size\": 353},\n        {\"name\": \"ShapeRenderer\", \"size\": 2247}\n       ]\n      },\n      {\"name\": \"ScaleBinding\", \"size\": 11275},\n      {\"name\": \"Tree\", \"size\": 7147},\n      {\"name\": \"TreeBuilder\", \"size\": 9930}\n     ]\n    },\n    {\n     \"name\": \"events\",\n     \"children\": [\n      {\"name\": \"DataEvent\", \"size\": 2313},\n      {\"name\": \"SelectionEvent\", \"size\": 1880},\n      {\"name\": \"TooltipEvent\", \"size\": 1701},\n      {\"name\": \"VisualizationEvent\", \"size\": 1117}\n     ]\n    },\n    {\n     \"name\": \"legend\",\n     \"children\": [\n      {\"name\": \"Legend\", \"size\": 20859},\n      {\"name\": \"LegendItem\", \"size\": 4614},\n      {\"name\": \"LegendRange\", \"size\": 10530}\n     ]\n    },\n    {\n     \"name\": \"operator\",\n     \"children\": [\n      {\n       \"name\": \"distortion\",\n       \"children\": [\n        {\"name\": \"BifocalDistortion\", \"size\": 4461},\n        {\"name\": \"Distortion\", \"size\": 6314},\n        {\"name\": \"FisheyeDistortion\", \"size\": 3444}\n       ]\n      },\n      {\n       \"name\": \"encoder\",\n       \"children\": [\n        {\"name\": \"ColorEncoder\", \"size\": 3179},\n        {\"name\": \"Encoder\", \"size\": 4060},\n        {\"name\": \"PropertyEncoder\", \"size\": 4138},\n        {\"name\": \"ShapeEncoder\", \"size\": 1690},\n        {\"name\": \"SizeEncoder\", \"size\": 1830}\n       ]\n      },\n      {\n       \"name\": \"filter\",\n       \"children\": [\n        {\"name\": \"FisheyeTreeFilter\", \"size\": 5219},\n        {\"name\": \"GraphDistanceFilter\", \"size\": 3165},\n        {\"name\": \"VisibilityFilter\", \"size\": 3509}\n       ]\n      },\n      {\"name\": \"IOperator\", \"size\": 1286},\n      {\n       \"name\": \"label\",\n       \"children\": [\n        {\"name\": \"Labeler\", \"size\": 9956},\n        {\"name\": \"RadialLabeler\", \"size\": 3899},\n        {\"name\": \"StackedAreaLabeler\", \"size\": 3202}\n       ]\n      },\n      {\n       \"name\": \"layout\",\n       \"children\": [\n        {\"name\": \"AxisLayout\", \"size\": 6725},\n        {\"name\": \"BundledEdgeRouter\", \"size\": 3727},\n        {\"name\": \"CircleLayout\", \"size\": 9317},\n        {\"name\": \"CirclePackingLayout\", \"size\": 12003},\n        {\"name\": \"DendrogramLayout\", \"size\": 4853},\n        {\"name\": \"ForceDirectedLayout\", \"size\": 8411},\n        {\"name\": \"IcicleTreeLayout\", \"size\": 4864},\n        {\"name\": \"IndentedTreeLayout\", \"size\": 3174},\n        {\"name\": \"Layout\", \"size\": 7881},\n        {\"name\": \"NodeLinkTreeLayout\", \"size\": 12870},\n        {\"name\": \"PieLayout\", \"size\": 2728},\n        {\"name\": \"RadialTreeLayout\", \"size\": 12348},\n        {\"name\": \"RandomLayout\", \"size\": 870},\n        {\"name\": \"StackedAreaLayout\", \"size\": 9121},\n        {\"name\": \"TreeMapLayout\", \"size\": 9191}\n       ]\n      },\n      {\"name\": \"Operator\", \"size\": 2490},\n      {\"name\": \"OperatorList\", \"size\": 5248},\n      {\"name\": \"OperatorSequence\", \"size\": 4190},\n      {\"name\": \"OperatorSwitch\", \"size\": 2581},\n      {\"name\": \"SortOperator\", \"size\": 2023}\n     ]\n    },\n    {\"name\": \"Visualization\", \"size\": 16540}\n   ]\n  }\n ]\n}\n\nd3.json(json, function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Decision Tree", "created_at": "2016-09-21T06:06:52Z", "updated_at": "2016-09-21T06:17:29Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a Decision Tree from IEOR 241 Problem Set 4 (Fall 2016).\n\nClick on the nodes to expand or collapse.\n\n(c) John Aldre Jota\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>", "uid": "aldrejota_64de9fbf541f1e87580c2d07d4eae908"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"/mbostock/raw/4063550/flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Collapsible Tree", "created_at": "2016-09-21T06:02:28Z", "updated_at": "2016-09-21T06:02:28Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a [Reingold\u2013Tilford tree](/4339184). Click on the nodes to expand or collapse.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>", "uid": "aldrejota_aced8f7034616f7c4800a62e1db14cd4"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"/mbostock/raw/4063550/flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Decision Tree", "created_at": "2016-09-21T05:38:06Z", "updated_at": "2016-09-21T06:06:06Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "This is an interactive decision tree for IEOR 241 Problem Set 4 (Fall 2016). \n\nClick on the nodes to expand or collapse.\n\n(c) John Aldre Jota</br>\nIndustrial Engineering and Operations Research</br>\nUniversity of California Berkeley\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>", "uid": "aldrejota_4022387132063d889f82956c6c18223c"}, {"code": "<script>\n\n  var data = {\"style\":\"abstract-expressionism\"}\n  var svg = d3.select(\"svg\"),\n      margin = {top: 20, right: 20, bottom: 30, left: 40},\n      width = +svg.attr(\"width\") - margin.left - margin.right,\n      height = +svg.attr(\"height\") - margin.top - margin.bottom;\n\n  var x = d3.scaleBand().rangeRound([0, width]).padding(0.1),\n      y = d3.scaleLinear().rangeRound([height, 0]);\n\n  var g = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n  \t\t.style(\"stroke\", \"white\");\n\t\n  var tooltip = g.append(\"text\")\n\t\t.attr(\"class\", \"tooltip\")\n\t\t.style(\"opacity\", 0);\n  \n      var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\n  d3.tsv(\"data.tsv\", function(d) {\n     d.score = +d.score;\n    return d;\n  }, function(error, data) {\n    if (error) throw error;\n\n    x.domain(data.map(function(d) { return d.style; }));\n    y.domain([0, d3.max(data, function(d) { return d.score; })]);\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n    \t\t.attr(\"transform\", \"rotate(-90)\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--y\")\n        .call(d3.axisLeft(y).ticks(10, \"%\"))\n    \t\t.style(\"stroke\", \"white\")\n    \n      .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \"0.71em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(\"Score\")\n    \t\t.style(\"stroke\", \"white\");\n\n    g.selectAll(\".bar\")\n      .data(data)\n      .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function(d) { return x(d.style); })\n        .attr(\"y\", function(d) { return y(d.score); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function(d) { return height - y(d.score); })\n      \t.on(\"mousemove\", function(d){\n                div.style(\"left\", d3.event.pageX+10+\"px\");\n                div.style(\"top\", d3.event.pageY-25+\"px\");\n                div.style(\"display\", \"inline-block\");\n                div.html((Math.round(d.score*100))+\"%\");\n            })\n      \t.on(\"mouseout\", function(d){\n                div.style(\"display\", \"none\");\n         });\n  });\n</script>", "description": "PaintClassifer Bar Chart", "created_at": "2016-09-21T04:44:46Z", "updated_at": "2016-09-30T17:49:38Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.tsv", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This is a modified bar chart template I used for my [Painting Classifier](https://github.com/sjesupaul/paintingClassifier) passion project at Metis. For the application accompanying my artistic style classifier, I wanted to present a visualization that accurately conveyed the match score for each category in an easily-digestible format. The bar chart was one of the two formats I went with, the other being a radar chart.   \n\nFeatures include scaling y-axis, labels for x-axis, a tooltip with value and emphasis upon hover, and easily customizable background and bar colors.\n\n---\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n", "uid": "sjesupaul_e04542b022e737661701837a471e5dbf"}, {"code": "<script>\n    var margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 40\n    };\n\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    var x = d3.scaleLinear()\n      .range([0, width]);\n\n    var y = d3.scaleBand()\n        .range([height, 0]);\n    \n    var xAxis = d3.axisTop(x)\n    .ticks(10, \"%\");\n\n    var yAxis = d3.axisLeft(y);\n    \n    d3.csv(\"data.csv\", function(error, data) {\n      if (error) throw error;\n\n      data.forEach(function(d) {\n        return d.frequency = +d.frequency;\n      });\n\n      data.sort(function(a, b) {\n        return a.frequency - b.frequency;\n      });\n      \n      x.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n      y.domain(data.map(function(d) { return d.letter; }))\n        .paddingInner(0.1);\n      \n      svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(-3, 0)\")\n      .call(yAxis);\n\n      svg.append(\"g\")\n          .attr(\"class\", \"x axis\")\n          .attr(\"transform\", \"translate(0,-3)\")\n          .call(xAxis);\n      \n      svg.selectAll(\".bar\")\n        .data(data)\n        .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", 0)\n        .attr(\"height\", y.bandwidth())\n        .attr(\"y\", function(d) { return y(d.letter); })\n        .attr(\"width\", function(d) { return x(d.frequency); });\n    });\n    \n\n\n    \n    \n  </script>", "description": "fresh block", "created_at": "2016-09-21T03:39:09Z", "updated_at": "2016-09-21T03:39:09Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.axisTop", "d3.axisLeft", "d3.csv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/aac65b96e29c4c2f3ab7d477887f1876'>fresh block</a>", "uid": "KaitoKid_adc477bc68e8d95e6517bf2767f4fadb"}, {"code": "<script>\n    var margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 40\n    };\n\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\"    + margin.top + \")\");\n    \n    var x = d3.scaleLinear()\n      .range([0, width]);\n\n\t\tvar y = d3.scaleBand()\n    .range([height, 0]);\n    \n    var xAxis = d3.axisTop(x)\n    .ticks(10, \"%\");\n\n\t\tvar yAxis = d3.axisLeft(y);\n  \t\n    d3.csv(\"data.csv\", function(error, data) {\n  \t\tif (error) throw error;\n\t\t\n    console.log(data);\n  \tdata.forEach(function(d) {\n    return d.frequency = +d.frequency;\n  \t});\n\n  \tdata.sort(function(a, b) {\n    \treturn a.frequency - b.frequency;\n  \t});\n    x.domain([0, d3.max(data, function(d) { return \t\t \t\td.frequency; })]);\n\n\t\ty.domain(data.map(function(d) { return d.letter; \t})).paddingInner(0.1);\n\t\n      svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", \"translate(-3, 0)\")\n    .call(yAxis);\n\n\t\tsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,-3)\")\n    .call(xAxis);\n      \n    svg.selectAll(\".bar\")\n    .data(data)\n  .enter().append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"x\", '-5')\n    .attr(\"height\", y.bandwidth())\n    .attr(\"y\", function(d) { return y(d.letter); })\n    .attr(\"width\", function(d) { return x(d.frequency);})\n    .attr(\"title\", function(d){ return d.frequency});\n  \n    \n  });\n    \n    \n    \n \n  </script>", "description": "d3intro", "created_at": "2016-09-21T03:29:03Z", "updated_at": "2016-09-21T07:29:22Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.axisTop", "d3.axisLeft", "d3.csv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/a7d8587507d0c1f3ccfec8e947c8e0bd'>d3intro</a>", "uid": "ShantanuPhadke_fb435b1f08580450be0ae461b66358d8"}, {"code": "<script>\n \n  \nvar svg = d3.select(\".graphsvg\"),\n    margin = {top: 20, right: 100, bottom: 110, left: 40},\n    margin2 = {top: 430, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    height2 = +svg.attr(\"height\") - margin2.top - margin2.bottom;\n\n// var parseDate = d3.timeParse(\"%b %Y\"),\n  var parseTime = d3.timeParse(\"%Y%m%d\"),\n    bisectDate = d3.bisector(function(d) { return d.date; }).left,\n    bisect = d3.bisector(function(d) { return parseTime(d.x); }).left;\n\nvar x = d3.scaleTime().range([0, width]),\n    x2 = d3.scaleTime().range([0, width]),\n    x3 = d3.scaleLinear().range([0,width]),\n    y = d3.scaleLinear().range([height, 0]),\n    y2 = d3.scaleLinear().range([height2, 0])\n\t\tz = d3.scaleOrdinal(d3.schemeCategory10);\n\nvar xAxis = d3.axisBottom(x),\n    xAxis2 = d3.axisBottom(x2),\n    yAxis = d3.axisLeft(y);\n\n\n\nvar zoom = d3.zoom()\n    .scaleExtent([1, Infinity])\n    .translateExtent([[0, 0], [width, height]])\n    .extent([[0, 0], [width, height]])\n    .on(\"zoom\", zoomed);\n\nvar area = d3.area()\n    .curve(d3.curveMonotoneX)\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.price); });\n  \n// var line = d3.line()\n// // \t\t.curve(d3.curveMonotoneX)\n//     .x(function(d) {\n//       return x(d.date);\n//     })\n//     .y(function(d) {\n//       return y(d.price);\n//     });\n  \n  \nvar line = d3.line()\n.x(function(d) {\n  return x(parseTime(d.x));\n})\n.y(function(d) {\n  return y(d.y);\n});  \n\n// var area2 = d3.area()\n//     .curve(d3.curveMonotoneX)\n//     .x(function(d) { return x2(d.date); })\n//     .y0(height2)\n//     .y1(function(d) { return y2(d.price); });\n\n  var area2 = d3.area()\n    .curve(d3.curveMonotoneX)\n    .x(function(d) { return x2(parseTime(d.x)); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.y); });\n\n  \nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar context = svg.append(\"g\")\n    .attr(\"class\", \"context\")\n    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n  \n  \n  var mapsvg = d3.select(\".mapsvg\"),\n    mapwidth = +mapsvg.attr(\"width\"),\n    mapheight = +mapsvg.attr(\"height\");\n    \n  var points = [\n    {\n      date: 20111001,\n      coords: [-122.490402, 37.786453],\n      county_number: 06087,\n      county_name: 'Santa Cruz',\n      sentiment: 0\n    },\n    {\n      date: 20111112,\n      coords: [-94.5786, 39.0997],\n      county_number: 20091,\n      county_name: 'Johnson',\n      sentiment: 0\n    },\n    {\n      date: 20111200,\n      coords: [-97.3308, 32.7555],\n      county_number: 48439,\n      county_name: 'Tarrant',\n      sentiment: 0\n    }\n  ];\n//    var dots = mapsvg.selectAll(\"circle\");\n\n  d3.json(\"temperature3.json\", function(error, data) {\n//     console.log(data);\n// d3.csv(\"sp500.csv\", type, function(error, data) {\n  if (error) throw error;\n    \n  \n    \n    \npts = [];\n    \nfor(var i=0; i<data.length; i++){\n  tmp = data[i].values.filter(function(x) {return x.hasOwnProperty('coords'); });\n  \n  for(var j=0; j<tmp.length; j++){\n    for(var k=0; k<tmp[j].coords.length; k++){\n      pts.push({\n        \tx: tmp[j].x,\n        \tcoords: tmp[j].coords[k]\n        }        \n      );\n    }\n  }\n  \n//   pts = pts.concat(data[i].values.filter(function(x) {return x.hasOwnProperty('coords'); }));\n}\n    \n// console.log(pts);\n    \n    \n    \nvar rateById = d3.map();\n  \nvar quantize = d3.scaleQuantize()\n    .domain([0, 0.15])\n    .range(d3.range(9).map(function(i) { return \"q\" + i + \"-9\"; }));\n\nvar projection = d3.geoAlbersUsa()\n    .scale(1100)\n    .translate([mapwidth / 2, mapheight / 2]);\n\nvar path = d3.geoPath()\n    .projection(projection);\n\n//   x.domain(d3.extent(data, function(d) { return d.date; }));\n//   y.domain([0, d3.max(data, function(d) { return d.price; })]);\n    \nx.domain(d3.extent(data['0'].values, function(c){return parseTime(c.x)}));\n  y.domain([\n    d3.min(data, function(c) { return d3.min(c.values, function(d) { return d.y; }); }),\n    d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.y; }); })\n  ]);    \n  x2.domain(x.domain());\n  y2.domain(y.domain());\n    \n    \n  x3.domain([0, data[0].values.length - 1]);\n    \n  z.domain(data, function(c) { return c.id; });\n\n    \n   \n   \n    \n    \n \n//////// choropleth stuff vvvv\n  \n  \n  \n  \n\n  \n  \nd3.queue()\n    .defer(d3.json, \"https://gist.githubusercontent.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/us.json\")\n    .defer(d3.tsv, \"unemployment.tsv\", function(d) { rateById.set(d.id, +d.rate); })\n    .await(ready);\n \nfunction ready(error, us) {\n  if (error) throw error;\n\n  \n   \n  \n  mapsvg.append(\"g\")\n      .attr(\"class\", \"counties\")\n    .selectAll(\"path\")\n      .data(topojson.feature(us, us.objects.counties).features)\n    .enter().append(\"path\")\n//       .attr(\"class\", function(d) { return quantize(rateById.get(d.id)); })\n  \t\t.attr(\"class\", function(d) {return 'q3-9'} )\n      .attr(\"d\", path);\n\n  mapsvg.append(\"path\")\n      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"states\")\n      .attr(\"d\", path);\n  \n  \n  mapsvg.selectAll('circle')\n   .data(pts)\n   .enter()\n   .append(\"circle\")\n   .attr(\"cx\", function (d) { return projection(d.coords)[0]; })\n\t\t.attr(\"cy\", function (d) { return projection(d.coords)[1]; })\n\t\t.attr(\"r\", 4)\n    .style(\"opacity\", .7)      // set the element opacity\n    .style(\"stroke\", \"#9f5045\")    // set the line colour\n    .style(\"fill\", \"#F0C059\");\n  \n  \n    context.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(brush)\n      .call(brush.move, x.range());\n  \n  \n}  \n  \n  \n////// choropleth stuff ^^^     \n    \n    \n\n    \n var brush = d3.brushX()\n    .extent([[0, 0], [width, height2]])\n    .on(\"brush end\", brushed);    \n    \n\n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(yAxis);\n    \n    \nvar city = focus.selectAll(\".city\")\n    .data(data)\n    .enter().append(\"g\")\n    .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(parseTime(d.value.x)) + \",\" + y(d.value.y) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });    \n    \n    \n\n  context.append(\"path\")\n      .data(data)\n      .attr(\"class\", \"area\")\n//       .attr(\"d\", area2)\n  \t\t.attr('d', function(d) { return area2(d.values); });\n\n  context.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n\n  \n  \n  var circ = svg.append(\"g\")\n      .attr(\"class\", \"circ\")\n      .style(\"display\", \"none\");\n\n   \n    \nfor(var i=0;i<data.length;i++){\n              circ.append(\"g\")\n                .attr(\"class\", \"circ\"+i)\n                .append(\"circle\")\n              \t.style(\"stroke\",  z(data[i].id))\n              \t.style(\"fill\", z(data[i].id))\n              \t.attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n                .attr(\"r\", 2);\n              svg.select(\".circ\"+i)\n                .append(\"text\")\n              \t.attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n                .attr(\"x\", 9)\n                .attr(\"dy\", \".35em\");\n          }    \n  \n  \n\nsvg.append(\"rect\")\n          .attr(\"class\", \"overlay\")\n          .attr(\"width\", width)\n          .attr(\"height\", height)\n      \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n          .on(\"mouseover\", function() { circ.style(\"display\", null); })\n          .on(\"mouseout\", function() { circ.style(\"display\", \"none\"); })\n          .on(\"mousemove\",  mousemove);\n  \n \n   \n    \n    \n    \n  \n//   function mousemove() {\n// //   console.log(\"in mosemove\");\n//     var x0 = x.invert(d3.mouse(this)[0]),\n//         i = bisectDate(data, x0, 1),\n//         d0 = data[i - 1],\n//         d1 = data[i],\n//         d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n//     circ.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\");\n//     circ.select(\"text\").text(d.price);\n//   } \n    \n    \n    function mousemove() {\n              var x0 = x.invert(d3.mouse(this)[0]);\n              var series = data.map(function(e) {\n                    var i = bisect(e.values, x0, 1),\n                        d0 = e.values[i - 1],\n                        d1 = e.values[i];\n                    return x0 - d0.x > d1.x - x0 ? d1 : d0;\n                  });\n//     console.log(series);\n              for(var i=0; i<series.length;i++){\n                var selectedFocus = svg.selectAll(\".circ\"+i);\n                selectedFocus.attr(\"transform\", \"translate(\" + x(parseTime(series[i].x)) + \",\" + y(series[i].y) + \")\");\n                selectedFocus.select(\"text\").text(series[i].y);\n              }\n            }\n  \n\n//     console.log(points);\n    \n function brushed() {\n  if (d3.event.sourceEvent && d3.event.sourceEvent.type === \"zoom\") return; // ignore brush-by-zoom\n  var s = d3.event.selection || x2.range();\n//    console.log(s[0],s[1], Math.floor(x3.invert(s[1])));\n  x.domain(s.map(x2.invert, x2));\n//   focus.select(\".area\").attr(\"d\", area);\n//   focus.select(\".line\").attr(\"d\", line);\n  \t\tfocus.selectAll(\".line\").attr(\"d\", function(d) { return line(d.values); });\n//   city.select(\".line\").attr(\"d\", function(d) { return line(d.values); });\n   city.select(\"text\")\n   \t\t.data(data)\n      .datum(function(d) { return {id: d.id, value: d.values[Math.floor(x3.invert(s[1]))]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(parseTime(d.value.x)) + \",\" + y(d.value.y) + \")\"; });\n  focus.select(\".axis--x\").call(xAxis);\n  svg.select(\".zoom\").call(zoom.transform, d3.zoomIdentity\n      .scale(width / (s[1] - s[0]))\n      .translate(-s[0], 0));\n   \n//    console.log(x2.invert(s[0]),x2.invert(s[1]));\n   \n   // handle map points\n   \n   var points_filter = points.filter(function(x) {return ((parseTime(x.date) >= x2.invert(s[0])) && (parseTime(x.date) <= x2.invert(s[1]))  )});\n   \n   var pts_filter = pts.filter(function(x) {return ((parseTime(x.x) >= x2.invert(s[0])) && (parseTime(x.x) <= x2.invert(s[1]))  )});\n   \n   \n//    console.log(pts_filter);\n//    console.log(parseTime(points_filter[0].date),x2.invert(s[0]));\n//    console.log(points_filter, points_filter.length);\n   \n//    mapsvg.selectAll(\"circle\")\n// \t\t.data(points_filter).enter()\n// \t\t.append(\"circle\")\n// \t\t.attr(\"cx\", function (d) { return projection(d.coords)[0]; })\n// \t\t.attr(\"cy\", function (d) { return projection(d.coords)[1]; })\n// \t\t.attr(\"r\", 4)\n// // \t\t.attr(\"fill\", \"red\")\n//     .style(\"opacity\", .7)      // set the element opacity\n//     .style(\"stroke\", \"#9f5045\")    // set the line colour\n//     .style(\"fill\", \"#F0C059\");\n   \n   mapsvg.selectAll('circle').remove();\n   \n   mapsvg.selectAll('circle')\n   .data(pts_filter)\n   .enter()\n   .append(\"circle\")\n   .attr(\"cx\", function (d) { return projection(d.coords)[0]; })\n\t\t.attr(\"cy\", function (d) { return projection(d.coords)[1]; })\n\t\t.attr(\"r\", 4)\n// \t\t.attr(\"fill\", \"red\")\n    .style(\"opacity\", .7)      // set the element opacity\n    .style(\"stroke\", \"#9f5045\")    // set the line colour\n    .style(\"fill\", \"#F0C059\");\n   \n   \n   \n   \n} \n  \n\n    \n});\n \n  \n\n  \n  \n\n  \n  \n\n\n\nfunction zoomed() {\n  if (d3.event.sourceEvent && d3.event.sourceEvent.type === \"brush\") return; // ignore zoom-by-brush\n  var t = d3.event.transform;\n  x.domain(t.rescaleX(x2).domain());\n  focus.select(\".area\").attr(\"d\", area);\n  focus.select(\".line\").attr(\"d\", line);\n  focus.select(\".axis--x\").call(xAxis);\n  context.select(\".brush\").call(brush.move, x.range().map(t.invertX, t));\n}\n\nfunction type(d) {\n  d.date = parseDate(d.date);\n  d.price = +d.price;\n  return d;\n}\n\n</script>", "description": "Brush & Zoom with choropleth", "created_at": "2016-09-21T03:17:47Z", "updated_at": "2016-10-08T19:19:41Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.axisBottom", "d3.axisLeft", "d3.zoom", "d3.area", "d3.line", "d3.json", "d3.csv", "d3.map", "d3.scaleQuantize", "d3.range", "d3.geoAlbersUsa", "d3.geoPath", "d3.extent", "d3.max", "d3.min", "d3.queue", "d3.brushX", "d3.mouse"], "readme": "Combining [d3-brush](https://github.com/d3/d3-brush) and [d3-zoom](https://github.com/d3/d3-zoom) to implement Focus + Context. Another approach is to [zoom to the brushed region](/mbostock/f48fcdb929a620ed97877e4678ab15e6).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/34f08d5e11952a80609169b7917d4172'>Brush & Zoom</a>\n\nforked from <a href='http://bl.ocks.org/eric-bunch/'>eric-bunch</a>'s block: <a href='http://bl.ocks.org/eric-bunch/8551a58b746bb5673d5fdf7d723b765b'>Brush & Zoom</a>", "uid": "eric-bunch_9b313af64c04c1574681316282cd1ad1"}, {"code": "<script>\n    var margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 40\n  };\n\n\tvar width = 960 - margin.left - margin.right;\n\tvar height = 500 - margin.top - margin.bottom;\n\n\tvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  \t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n  var x = d3.scaleLinear()\n     .range([0, width]);\n\n\tvar y = d3.scaleBand()\n    .range([height, 0]);\n    \n  var xAxis = d3.axisTop(x)\n    .ticks(10, \"%\");\n\n\tvar yAxis = d3.axisLeft(y);\n    \n  d3.csv(\"data.csv\", function(error, data) {\n  \tif (error) throw error;\n\n  \tdata.forEach(function(d) {\n    \treturn d.frequency = +d.frequency;\n  \t});\n\n  \tdata.sort(function(a, b) {\n    \treturn a.frequency - b.frequency;\n  \t});\n    \n    x.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n\t\ty.domain(data.map(function(d) { return d.letter; }))\n  \t\t.paddingInner(0.1);\n\t});\n  </script>", "description": "fresh block", "created_at": "2016-09-21T03:10:33Z", "updated_at": "2016-09-21T03:16:38Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.axisTop", "d3.axisLeft", "d3.csv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/4be82d079f07abf6af1b9a3400b2f601'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8efdd2ae38c3087ed1b1307cd629b2db'>fresh block</a>", "uid": "christopherni_42951cb434a66e3eff916e66961a8ec0"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Collapsible Tree", "created_at": "2016-09-20T21:42:30Z", "updated_at": "2016-09-20T21:55:41Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a [Reingold\u2013Tilford tree](/4339184). Click on the nodes to expand or collapse.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>", "uid": "john-guerra_32be58cf91f613d45c687095bad39432"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n\n    svg.append(\"text\")\n      .text(\"Edit the code below to change me!\")\n      .attr(\"y\", 200)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 36)\n      .style(\"font-family\", \"monospace\");\n\n    d3.json(\"data.json\", function(err, json) {\n      console.log(json.data.length);\n    })\n  </script>", "description": "read json data", "created_at": "2016-09-20T18:51:36Z", "updated_at": "2016-09-20T18:51:36Z", "api": ["d3.select", "d3.json"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "ocarneiro_8b9f71d25102acfb6b010bcf0b66b447"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar rateById = d3.map();\n\nvar quantize = d3.scaleQuantize()\n    .domain([0, 0.15])\n    .range(d3.range(9).map(function(i) { return \"q\" + i + \"-9\"; }));\n\nvar projection = d3.geoAlbersUsa()\n    .scale(1280)\n    .translate([width / 2, height / 2]);\n\nvar path = d3.geoPath()\n    .projection(projection);\n\nd3.queue()\n    .defer(d3.json, \"https://gist.githubusercontent.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/us.json\")\n    .defer(d3.tsv, \"unemployment.tsv\", function(d) { rateById.set(d.id, +d.rate); })\n    .await(ready);\n\nfunction ready(error, us) {\n  if (error) throw error;\n\n  svg.append(\"g\")\n      .attr(\"class\", \"counties\")\n    .selectAll(\"path\")\n      .data(topojson.feature(us, us.objects.counties).features)\n    .enter().append(\"path\")\n      .attr(\"class\", function(d) { return quantize(rateById.get(d.id)); })\n      .attr(\"d\", path);\n\n  svg.append(\"path\")\n      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"states\")\n      .attr(\"d\", path);\n  \n  // points\n  // san francisco\n  a = [-122.490402, 37.786453];\n  // kansas city\n\tb = [-94.5786, 39.0997];\n  points = [\n    {\n      date: 20111001.0,\n      coords: [-122.490402, 37.786453]\n    },\n    {\n      date: 20111002.0,\n      coords: [-94.5786, 39.0997]\n    }\n  ];\n  \n  points_filter = points.filter(function(x) {return x.date > 20111001.0});\n  \n  \n  // add circles to svg\n    svg.selectAll(\"circle\")\n\t\t.data(points_filter).enter()\n\t\t.append(\"circle\")\n\t\t.attr(\"cx\", function (d) { return projection(d.coords)[0]; })\n\t\t.attr(\"cy\", function (d) { return projection(d.coords)[1]; })\n\t\t.attr(\"r\", 4)\n// \t\t.attr(\"fill\", \"red\")\n    .style(\"opacity\", .7)      // set the element opacity\n    .style(\"stroke\", \"#9f5045\")    // set the line colour\n    .style(\"fill\", \"#F0C059\")\n  \n  \n  \n}\n\n</script>", "description": "Choropleth", "created_at": "2016-09-20T03:33:45Z", "updated_at": "2016-09-20T13:02:51Z", "api": ["d3.select", "d3.map", "d3.scaleQuantize", "d3.range", "d3.geoAlbersUsa", "d3.geoPath", "d3.queue"], "readme": "This choropleth encodes unemployment rates from 2008 with a [quantize scale](https://github.com/mbostock/d3/wiki/Quantitative-Scales#wiki-quantize) ranging from 0 to 15%. A [threshold scale](../3306362) is a useful alternative for coloring arbitrary ranges.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4060606'>Choropleth</a>", "uid": "eric-bunch_56537c84511bf604b8044bcbf32cddbc"}, {"code": "<script>\n//var n = 40,\n    //random = d3.randomNormal(100, 150),\n    //data = d3.range(n).map(random);\n  \nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 20, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \nvar x = d3.scaleLinear()\n//     .domain([1, n - 2])\n    .range([0, width]);\n  \nvar y = d3.scaleLinear()\n    //.domain([20, 180])\n    .range([height, 0]);\n  \n var maxIndex = 10;\n  var minIndex = 0;\n  var fullData;\n  var subset;\n  \nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n  fullData = data;\n  data.forEach(function(d) {\n\t\td.index = +d.index;\n    d.Time = +d.Time;\n    d.Heart_Rate = +d.Heart_Rate;\n  });\n  subset = data.slice(minIndex, maxIndex);\n   console.log(subset);\n\n\tx.domain(d3.extent(subset, function(d) { return d.Time; })).nice();\n  y.domain([0, d3.max(data, function(d) {return d.Heart_Rate; })]).nice();\n  \n  var line = d3.line()\n      .curve(d3.curveBasis)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Heart_Rate); });\n\tconsole.log(line)\n//   var alarm_top = d3.line()\n//       .x(function(d, i) { return x(i+10); })\n//       .y(function(d, i) { return y(d+10); });\n\n//   var alarm_bottom = d3.line()\n//       .x(function(d, i) { return x(i+10); })\n//       .y(function(d, i) { return y(d+10); });\n\tg.append(\"defs\").append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n  \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n  \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y));\n  g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n    .append(\"path\")\n      .datum(subset)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", line)\n    .transition()\n      .duration(500)\n      .ease(d3.easeLinear)\n      .on(\"start\", tick);\n  //console.log(data.Time)\n  //console.log(data)\n  //console.log(\"you are now rocking with d3\", d3);\n  function tick() {\n    // Push a new data point onto the back.\n    \n//     subset.pop();\n//     subset.push(fullData.slice(maxIndex, maxIndex+1));\n\t\tsubset.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n    console.log(subset);\n\n    // Redraw the line.\n    d3.select(this)\n        .attr(\"d\", line)\n        .attr(\"transform\", null);\n    // Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) { return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick);\n    // Pop the old data point off the front.\n    subset.shift();\n\tx.domain(d3.extent(subset, function(d) { return d.Time; })).nice();\n\n  d3.select(\"g.axis--x\")\n  \t.transition()\n  \t.call(d3.axisBottom(x));\n  }\n});\n  \n</script>", "description": "FAIL", "created_at": "2016-09-20T00:32:39Z", "updated_at": "2016-09-20T00:34:07Z", "api": ["d3.randomNormal", "d3.range", "d3.select", "d3.scaleLinear", "d3.csv", "d3.extent", "d3.max", "d3.line", "d3.axisBottom", "d3.axisLeft", "d3.active"], "readme": "This example is the second of three in the [Path Transitions tutorial](http://bost.ocks.org/mike/path/); see the [previous example](/mbostock/1643051) for context.\n\nThe desired pairing of numbers for path interpolation is like this:\n\n    M x0, y0 L x1, y1 L x2, y2 L x3, y3 L xR, y4\n       \u2193   \u2193    \u2193   \u2193    \u2193   \u2193    \u2193   \u2193\n    M xl, y0 L x0, y1 L x1, y2 L x2, y3 L x3, y4\n\nWhere `xl` is some negative value off the left side, and `xr` is some positive value off the right side. This way, the first point \u27e8x0,y0\u27e9 is interpolated to \u27e8xl,y0\u27e9; meaning, the x-coordinate is interpolated rather than the y-coordinate, and so the path appears to slide off to the left. Likewise, the incoming point \u27e8xr,y4\u27e9 is interpolated to \u27e8x3,y4\u27e9.\n\nWhile you could write a custom interpolator and use [*transition*.attrTween](https://github.com/d3/d3-transition#transition_attrTween) to achieve this, a much simpler solution is to **interpolate the transform attribute** rather than the path. This way, the shape of the path remains static while the it translates left during the transition.\n\nImmediately prior to the transition, the path is redrawn as follows:\n\n    M x0, y0 L x1, y1 L x2, y2 L x3, y3 L xr, y4\n\nThen, a transform transition is applied:\n\n    translate(0,0)\n              \u2193\n    translate(xl,0)\n\nThis causes the path to slide left. A clip path is used so the path is not visible outside of the chart body.\n\nNote that for charts with spline interpolation, you\u2019ll need to crop the visible part of the line by an extra point, so that the change in tangent is not visible; see the [next example](/mbostock/1642989).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1642874'>HR_alarm</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/33875137e4a93dc2ade33a5b2fd1599d'>HR_alarm</a>\n\nforked from <a href='http://bl.ocks.org/ssaleh2/'>ssaleh2</a>'s block: <a href='http://bl.ocks.org/ssaleh2/dca507b7e0c5213db00d6d85ad85c854'>HR_alarm</a>\n\nforked from <a href='http://bl.ocks.org/sampathweb/'>sampathweb</a>'s block: <a href='http://bl.ocks.org/sampathweb/842d0945d9002ade5fd62457357318e3'>HR_alarm</a>", "uid": "ssaleh2_7a1d58467409a9eb011be8bd6aec7866"}, {"code": "<script>\n\nvar diameter = 890,\n    format = d3.format(\",d\"),\n    color = d3.scale.category20c();\n\nvar bubble = d3.layout.pack()\n    .sort(null)\n    .size([diameter, diameter])\n    .padding(1.5);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n    .attr(\"class\", \"bubble\");\n\nd3.json(\"flare.json\", function(error, root) {\n  if (error) console.log(error);\n  if (error) throw error;\n\n  var node = svg.selectAll(\".node\")\n      .data(bubble.nodes(classes(root))\n      .filter(function(d) { return !d.children; }))\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"title\")\n      .text(function(d) { return d.className + \": \" + format(d.value); });\n\n  node.append(\"circle\")\n      .attr(\"r\", function(d) { return d.r; })\n      .style(\"fill\", function(d) { return color(d.packageName); });\n\n  node.append(\"text\")\n      .attr(\"dy\", \".3em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.className.substring(0, d.r / 3); });\n});\n\n// Returns a flattened hierarchy containing all leaf nodes under the root.\nfunction classes(root) {\n  var classes = [];\n\n  function recurse(name, node) {\n    if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });\n    else classes.push({packageName: name, className: node.name, value: node.size});\n  }\n\n  recurse(null, root);\n  return {children: classes};\n}\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n</script>", "description": "Bubble Chart", "created_at": "2016-09-20T00:30:18Z", "updated_at": "2016-09-20T14:33:06Z", "api": ["d3.format", "d3.scale.category20c", "d3.layout.pack", "d3.select", "d3.json"], "readme": "Bubble charts encode data in the area of circles. Although less perceptually-accurate than bar charts, they can pack hundreds of values into a small space. Implementation based on work by [Jeff Heer](http://jheer.org/). Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, also courtesy Jeff Heer.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063269'>Bubble Chart</a>", "uid": "scresawn_3364c4347d4059ac28b439cb234e6951"}, {"code": "<script>\n\nvar months,\n    monthKeys,\n    monthParse = d3.timeParse(\"%Y-%m\");\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 30, bottom: 30, left: 40},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar x = d3.scaleTime()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar voronoi = d3.voronoi()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); })\n    .extent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]]);\n\nvar line = d3.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); });\n\nd3.tsv(\"unemployment.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(months));\n  y.domain([0, d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]).nice();\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y).ticks(10, \"%\"))\n    .append(\"text\")\n      .attr(\"x\", 4)\n      .attr(\"y\", 0.5)\n      .attr(\"dy\", \"0.32em\")\n      .style(\"text-anchor\", \"start\")\n      .style(\"fill\", \"#000\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Unemployment Rate\");\n\n  g.append(\"g\")\n      .attr(\"class\", \"cities\")\n    .selectAll(\"path\")\n    .data(data)\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { d.line = this; return line(d.values); });\n\n  var focus = g.append(\"g\")\n      .attr(\"transform\", \"translate(-100,-100)\")\n      .attr(\"class\", \"focus\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 3.5);\n\n  focus.append(\"text\")\n      .attr(\"y\", -10);\n\n  var voronoiGroup = g.append(\"g\")\n      .attr(\"class\", \"voronoi\");\n\n  voronoiGroup.selectAll(\"path\")\n    .data(voronoi.polygons(d3.merge(data.map(function(d) { return d.values; }))))\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { return d ? \"M\" + d.join(\"L\") + \"Z\" : null; })\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout);\n\n  d3.select(\"#show-voronoi\")\n      .property(\"disabled\", false)\n      .on(\"change\", function() { voronoiGroup.classed(\"voronoi--show\", this.checked); });\n\n  function mouseover(d) {\n    d3.select(d.data.city.line).classed(\"city--hover\", true);\n    d.data.city.line.parentNode.appendChild(d.data.city.line);\n    focus.attr(\"transform\", \"translate(\" + x(d.data.date) + \",\" + y(d.data.value) + \")\");\n    focus.select(\"text\").text(d.data.city.name);\n  }\n\n  function mouseout(d) {\n    d3.select(d.data.city.line).classed(\"city--hover\", false);\n    focus.attr(\"transform\", \"translate(-100,-100)\");\n  }\n});\n\nfunction type(d, i, columns) {\n  if (!months) monthKeys = columns.slice(1), months = monthKeys.map(monthParse);\n  var c = {name: d.name.replace(/ (msa|necta div|met necta|met div)$/i, \"\"), values: null};\n  c.values = monthKeys.map(function(k, i) { return {city: c, date: months[i], value: d[k] / 100}; });\n  return c;\n}\n\n</script>", "description": "Multi-Line Voronoi", "created_at": "2016-09-20T00:28:52Z", "updated_at": "2016-09-20T00:28:52Z", "api": ["d3.timeParse", "d3.select", "d3.scaleTime", "d3.scaleLinear", "d3.voronoi", "d3.line", "d3.tsv", "d3.extent", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.merge"], "readme": "This [multi-line chart](/mbostock/3884955) uses an invisible [Voronoi tessellation](/mbostock/4060366) to handle mouseover; the closest point to the mouse on any line is highlighted. Click the checkbox in the top-right to toggle the visibility of the Voronoi overlay.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/8033015'>Multi-Line Voronoi</a>", "uid": "allenwko_e4e7af8e140d693da724b66170c8012d"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar parseTime = d3.timeParse(\"%Y%m%d\");\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal(d3.schemeCategory10);\n\nvar line = d3.line()\n    .curve(d3.curveBasis)\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  var cities = data.columns.slice(1).map(function(id) {\n    return {\n      id: id,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: d[id]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(d) { return d.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.temperature; }); })\n  ]);\n\n  z.domain(cities.map(function(c) { return c.id; }));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y))\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"0.71em\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Temperature, F\");\n\n  var city = g.selectAll(\".city\")\n    .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });\n});\n\nfunction type(d, _, columns) {\n  d.date = parseTime(d.date);\n  for (var i = 1, n = columns.length, c; i < n; ++i) d[c = columns[i]] = +d[c];\n  return d;\n}\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-09-20T00:24:45Z", "updated_at": "2016-09-20T00:24:45Z", "api": ["d3.select", "d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.line", "d3.tsv", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>", "uid": "allenwko_4ff3e1e268f0945e6ee4d88f6d74d520"}, {"code": "<script>\n\nvar margin = {top: 20, right: 200, bottom: 100, left: 50},\n    margin2 = { top: 430, right: 10, bottom: 20, left: 40 },\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    height2 = 500 - margin2.top - margin2.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\nvar bisectDate = d3.bisector(function(d) { return d.date; }).left;\n\nvar xScale = d3.time.scale()\n    .range([0, width]),\n\n    xScale2 = d3.time.scale()\n    .range([0, width]); // Duplicate xScale for brushing ref later\n\nvar yScale = d3.scale.linear()\n    .range([height, 0]);\n\n// 40 Custom DDV colors \nvar color = d3.scale.ordinal().range([\"#48A36D\",  \"#56AE7C\",  \"#64B98C\", \"#72C39B\", \"#80CEAA\", \"#80CCB3\", \"#7FC9BD\", \"#7FC7C6\", \"#7EC4CF\", \"#7FBBCF\", \"#7FB1CF\", \"#80A8CE\", \"#809ECE\", \"#8897CE\", \"#8F90CD\", \"#9788CD\", \"#9E81CC\", \"#AA81C5\", \"#B681BE\", \"#C280B7\", \"#CE80B0\", \"#D3779F\", \"#D76D8F\", \"#DC647E\", \"#E05A6D\", \"#E16167\", \"#E26962\", \"#E2705C\", \"#E37756\", \"#E38457\", \"#E39158\", \"#E29D58\", \"#E2AA59\", \"#E0B15B\", \"#DFB95C\", \"#DDC05E\", \"#DBC75F\", \"#E3CF6D\", \"#EAD67C\", \"#F2DE8A\"]);  \n\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\"),\n\n    xAxis2 = d3.svg.axis() // xAxis for brush slider\n    .scale(xScale2)\n    .orient(\"bottom\");    \n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\");  \n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return xScale(d.date); })\n    .y(function(d) { return yScale(d.rating); })\n    .defined(function(d) { return d.rating; });  // Hiding line value defaults of 0 for missing data\n\nvar maxY; // Defined later to update yAxis\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom) //height + margin.top + margin.bottom\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Create invisible rect for mouse tracking\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)                                    \n    .attr(\"x\", 0) \n    .attr(\"y\", 0)\n    .attr(\"id\", \"mouse-tracker\")\n    .style(\"fill\", \"white\"); \n\n//for slider part-----------------------------------------------------------------------------------\n  \nvar context = svg.append(\"g\") // Brushing context box container\n    .attr(\"transform\", \"translate(\" + 0 + \",\" + 410 + \")\")\n    .attr(\"class\", \"context\");\n\n//append clip path for lines plotted, hiding those part out of bounds\nsvg.append(\"defs\")\n  .append(\"clipPath\") \n    .attr(\"id\", \"clip\")\n    .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height); \n\n//end slider part----------------------------------------------------------------------------------- \n\nd3.tsv(\"data.tsv\", function(error, data) { \n  color.domain(d3.keys(data[0]).filter(function(key) { // Set the domain of the color ordinal scale to be all the csv headers except \"date\", matching a color to an issue\n    return key !== \"date\"; \n  }));\n\n  data.forEach(function(d) { // Make every date in the csv data a javascript date object format\n    d.date = parseDate(d.date);\n  });\n\n  var categories = color.domain().map(function(name) { // Nest the data into an array of objects with new keys\n\n    return {\n      name: name, // \"name\": the csv headers except date\n      values: data.map(function(d) { // \"values\": which has an array of the dates and ratings\n        return {\n          date: d.date, \n          rating: +(d[name]),\n          };\n      }),\n      visible: (name === \"Unemployment\" ? true : false) // \"visible\": all false except for economy which is true.\n    };\n  });\n\n  xScale.domain(d3.extent(data, function(d) { return d.date; })); // extent = highest and lowest points, domain is data, range is bouding box\n\n  yScale.domain([0, 100\n    //d3.max(categories, function(c) { return d3.max(c.values, function(v) { return v.rating; }); })\n  ]);\n\n  xScale2.domain(xScale.domain()); // Setting a duplicate xdomain for brushing reference later\n \n //for slider part-----------------------------------------------------------------------------------\n\n var brush = d3.svg.brush()//for slider bar at the bottom\n    .x(xScale2) \n    .on(\"brush\", brushed);\n\n  context.append(\"g\") // Create brushing xAxis\n      .attr(\"class\", \"x axis1\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  var contextArea = d3.svg.area() // Set attributes for area chart in brushing context graph\n    .interpolate(\"monotone\")\n    .x(function(d) { return xScale2(d.date); }) // x is scaled to xScale2\n    .y0(height2) // Bottom line begins at height2 (area chart not inverted) \n    .y1(0); // Top line of area, 0 (area chart not inverted)\n\n  //plot the rect as the bar at the bottom\n  context.append(\"path\") // Path is created using svg.area details\n    .attr(\"class\", \"area\")\n    .attr(\"d\", contextArea(categories[0].values)) // pass first categories data .values to area path generator \n    .attr(\"fill\", \"#F1F1F2\");\n    \n  //append the brush for the selection of subsection  \n  context.append(\"g\")\n    .attr(\"class\", \"x brush\")\n    .call(brush)\n    .selectAll(\"rect\")\n    .attr(\"height\", height2) // Make brush rects same height \n      .attr(\"fill\", \"#E6E7E8\");  \n  //end slider part-----------------------------------------------------------------------------------\n\n  // draw line graph\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"x\", -10)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Issues Rating\");\n\n  var issue = svg.selectAll(\".issue\")\n      .data(categories) // Select nested data and append to new svg group elements\n    .enter().append(\"g\")\n      .attr(\"class\", \"issue\");   \n\n  issue.append(\"path\")\n      .attr(\"class\", \"line\")\n      .style(\"pointer-events\", \"none\") // Stop line interferring with cursor\n      .attr(\"id\", function(d) {\n        return \"line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"); // Give line id of line-(insert issue name, with any spaces replaced with no spaces)\n      })\n      .attr(\"d\", function(d) { \n        return d.visible ? line(d.values) : null; // If array key \"visible\" = true then draw line, if not then don't \n      })\n      .attr(\"clip-path\", \"url(#clip)\")//use clip path to make irrelevant part invisible\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  // draw legend\n  var legendSpace = 450 / categories.length; // 450/number of issues (ex. 40)    \n\n  issue.append(\"rect\")\n      .attr(\"width\", 10)\n      .attr(\"height\", 10)                                    \n      .attr(\"x\", width + (margin.right/3) - 15) \n      .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace) - 8; })  // spacing\n      .attr(\"fill\",function(d) {\n        return d.visible ? color(d.name) : \"#F1F1F2\"; // If array key \"visible\" = true then color rect, if not then make it grey \n      })\n      .attr(\"class\", \"legend-box\")\n\n      .on(\"click\", function(d){ // On click make d.visible \n        d.visible = !d.visible; // If array key for this data selection is \"visible\" = true then make it false, if false then make it true\n\n        maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n        yScale.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n        svg.select(\".y.axis\")\n          .transition()\n          .call(yAxis);   \n\n        issue.select(\"path\")\n          .transition()\n          .attr(\"d\", function(d){\n            return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n          })\n\n        issue.select(\"rect\")\n          .transition()\n          .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\";\n        });\n      })\n\n      .on(\"mouseover\", function(d){\n\n        d3.select(this)\n          .transition()\n          .attr(\"fill\", function(d) { return color(d.name); });\n\n        d3.select(\"#line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"))\n          .transition()\n          .style(\"stroke-width\", 2.5);  \n      })\n\n      .on(\"mouseout\", function(d){\n\n        d3.select(this)\n          .transition()\n          .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\";});\n\n        d3.select(\"#line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"))\n          .transition()\n          .style(\"stroke-width\", 1.5);\n      })\n      \n  issue.append(\"text\")\n      .attr(\"x\", width + (margin.right/3)) \n      .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace); })  // (return (11.25/2 =) 5.625) + i * (5.625) \n      .text(function(d) { return d.name; }); \n\n  // Hover line \n  var hoverLineGroup = svg.append(\"g\") \n            .attr(\"class\", \"hover-line\");\n\n  var hoverLine = hoverLineGroup // Create line with basic attributes\n        .append(\"line\")\n            .attr(\"id\", \"hover-line\")\n            .attr(\"x1\", 10).attr(\"x2\", 10) \n            .attr(\"y1\", 0).attr(\"y2\", height + 10)\n            .style(\"pointer-events\", \"none\") // Stop line interferring with cursor\n            .style(\"opacity\", 1e-6); // Set opacity to zero \n\n  var hoverDate = hoverLineGroup\n        .append('text')\n            .attr(\"class\", \"hover-text\")\n            .attr(\"y\", height - (height-40)) // hover date text position\n            .attr(\"x\", width - 150) // hover date text position\n            .style(\"fill\", \"#E6E7E8\");\n\n  var columnNames = d3.keys(data[0]) //grab the key values from your first data row\n                                     //these are the same as your column names\n                  .slice(1); //remove the first column name (`date`);\n\n  var focus = issue.select(\"g\") // create group elements to house tooltip text\n      .data(columnNames) // bind each column name date to each g element\n    .enter().append(\"g\") //create one <g> for each columnName\n      .attr(\"class\", \"focus\"); \n\n  focus.append(\"text\") // http://stackoverflow.com/questions/22064083/d3-js-multi-series-chart-with-y-value-tracking\n        .attr(\"class\", \"tooltip\")\n        .attr(\"x\", width + 20) // position tooltips  \n        .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace); }); // (return (11.25/2 =) 5.625) + i * (5.625) // position tooltips       \n\n  // Add mouseover events for hover line.\n  d3.select(\"#mouse-tracker\") // select chart plot background rect #mouse-tracker\n  .on(\"mousemove\", mousemove) // on mousemove activate mousemove function defined below\n  .on(\"mouseout\", function() {\n      hoverDate\n          .text(null) // on mouseout remove text for hover date\n\n      d3.select(\"#hover-line\")\n          .style(\"opacity\", 1e-6); // On mouse out making line invisible\n  });\n\n  function mousemove() { \n      var mouse_x = d3.mouse(this)[0]; // Finding mouse x position on rect\n      var graph_x = xScale.invert(mouse_x); // \n\n      //var mouse_y = d3.mouse(this)[1]; // Finding mouse y position on rect\n      //var graph_y = yScale.invert(mouse_y);\n      //console.log(graph_x);\n      \n      var format = d3.time.format('%b %Y'); // Format hover date text to show three letter month and full year\n      \n      hoverDate.text(format(graph_x)); // scale mouse position to xScale date and format it to show month and year\n      \n      d3.select(\"#hover-line\") // select hover-line and changing attributes to mouse position\n          .attr(\"x1\", mouse_x) \n          .attr(\"x2\", mouse_x)\n          .style(\"opacity\", 1); // Making line visible\n\n      // Legend tooltips // http://www.d3noob.org/2014/07/my-favourite-tooltip-method-for-line.html\n\n      var x0 = xScale.invert(d3.mouse(this)[0]), /* d3.mouse(this)[0] returns the x position on the screen of the mouse. xScale.invert function is reversing the process that we use to map the domain (date) to range (position on screen). So it takes the position on the screen and converts it into an equivalent date! */\n      i = bisectDate(data, x0, 1), // use our bisectDate function that we declared earlier to find the index of our data array that is close to the mouse cursor\n      /*It takes our data array and the date corresponding to the position of or mouse cursor and returns the index number of the data array which has a date that is higher than the cursor position.*/\n      d0 = data[i - 1],\n      d1 = data[i],\n      /*d0 is the combination of date and rating that is in the data array at the index to the left of the cursor and d1 is the combination of date and close that is in the data array at the index to the right of the cursor. In other words we now have two variables that know the value and date above and below the date that corresponds to the position of the cursor.*/\n      d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n      /*The final line in this segment declares a new array d that is represents the date and close combination that is closest to the cursor. It is using the magic JavaScript short hand for an if statement that is essentially saying if the distance between the mouse cursor and the date and close combination on the left is greater than the distance between the mouse cursor and the date and close combination on the right then d is an array of the date and close on the right of the cursor (d1). Otherwise d is an array of the date and close on the left of the cursor (d0).*/\n\n      //d is now the data row for the date closest to the mouse position\n\n      focus.select(\"text\").text(function(columnName){\n         //because you didn't explictly set any data on the <text>\n         //elements, each one inherits the data from the focus <g>\n\n         return (d[columnName]);\n      });\n  }; \n\n  //for brusher of the slider bar at the bottom\n  function brushed() {\n\n    xScale.domain(brush.empty() ? xScale2.domain() : brush.extent()); // If brush is empty then reset the Xscale domain to default, if not then make it the brush extent \n\n    svg.select(\".x.axis\") // replot xAxis with transition when brush used\n          .transition()\n          .call(xAxis);\n\n    maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n    yScale.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n    \n    svg.select(\".y.axis\") // Redraw yAxis\n      .transition()\n      .call(yAxis);   \n\n    issue.select(\"path\") // Redraw lines based on brush xAxis scale and domain\n      .transition()\n      .attr(\"d\", function(d){\n          return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n      });\n    \n  };      \n\n}); // End Data callback function\n  \n  function findMaxY(data){  // Define function \"findMaxY\"\n    var maxYValues = data.map(function(d) { \n      if (d.visible){\n        return d3.max(d.values, function(value) { // Return max rating value\n          return value.rating; })\n      }\n    });\n    return d3.max(maxYValues);\n  }\n\n</script>", "description": "d3.js Multi-series line chart interactive", "created_at": "2016-09-20T00:11:39Z", "updated_at": "2016-09-20T00:11:40Z", "api": ["d3.time.format", "d3.bisector", "d3.time.scale", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.max", "d3.svg.brush", "d3.svg.area", "d3.mouse"], "readme": "Please note, data will be randomised until December 2014. It is based on Ipsos MORI's long term Issues Index survey 1974 - 2014.  \n\nforked from <a href='http://bl.ocks.org/DStruths/'>DStruths</a>'s block: <a href='http://bl.ocks.org/DStruths/9c042e3a6b66048b5bd4'>d3.js Multi-series line chart interactive</a>", "uid": "allenwko_ca7e19e3979787a607747861b9b7d48a"}, {"code": "<script>\n//var n = 40,\n//     random = d3.randomNormal(100, 150);\n    //data = d3.range(n).map(random);\n  \nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 20, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \nvar x = d3.scaleLinear()\n\t\t.range([0, width]);\n  \nvar y = d3.scaleLinear()\n    .range([height, 0]);\n    \nvar maxIndex = 10;\nvar minIndex = 0;\nvar fullData;\nvar subset;\n\nvar formatDate = d3.timeParse(\"%Y-%m-%d %H:%M:%S\");\n  \n  \nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n  fullData = data;\n  data.forEach(function(d) {\n\t\td.index = +d.index;\n    d.Time = +d.Time - 2200;\n    d.Heart_Rate = +d.Heart_Rate;\n    d.Alarm_LOW = +d.Alarm_LOW;\n    d.Alarm_HIGH = +d.Alarm_HIGH;\n  });\n  subset = data.slice(minIndex, maxIndex);\n  subset_top = data.slice(minIndex, maxIndex);\n  subset_bottom = data.slice(minIndex, maxIndex);\n\n\tx.domain(d3.extent(subset, function(d) { return d.Time;})).nice();\n  y.domain([20, 180]);\n  \n  \n  var line = d3.line()\n      .curve(d3.curveBasis)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Heart_Rate); });\n\t\n  var alarm_top = d3.line()\n  \t\t.curve(d3.curveStep)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Alarm_HIGH); })\n  \t\t;\n\n  var alarm_bottom = d3.line()\n  \t\t.curve(d3.curveStep)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Alarm_LOW); });\n  \n\tg.append(\"defs\").append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n  \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n  \n \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y));\n  \n  \n  //HEART RATE\n  g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n    .append(\"path\")\n      .datum(subset)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", line)\n    .transition()\n      .duration(500)\n      .ease(d3.easeLinear)\n      .on(\"start\", tick);\n  \n  \n  \n//   BOTTOM ALARM\n  g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n    .append(\"path\")\n      .datum(subset_bottom)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", alarm_bottom)\n    .style(\"stroke\", \"#DD5044\")\n    .transition()\n      .duration(500)\n//       .ease(d3.easeLinear)\n      .on(\"start\", tick_bottom);\n  \n  \n//   TOP ALARM\n  g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n    .append(\"path\")\n      .datum(subset_top)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", alarm_top)\n    .style(\"stroke\", \"#000\")\n//     .style(\"fill\",\"none\")\n//     .style(\"stroke-opacity\", .75)\n//     .style(\"stroke-width\", 1)\n    .transition()\n      .duration(500)\n//       .ease(d3.easeLinear)\n      .on(\"start\", tick_top);\n  \n  \n  //MOVE HEART RATE\n  function tick() {\n    // Push a new data point onto the back.\n    \n    subset.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n \n    // Redraw the line.\n    d3.select(this)\n        .attr(\"d\", line)\n    \t\t.attr(\"transform\", null);\n    \n    d3.select(\"g.axis--x\")\n      .transition()\n      .call(d3.axisBottom(x));\n    \n  \n//     Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) {return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick);\n    \n   \n    // Pop the old data point off the front.\n    subset.shift();\n    x.domain(d3.extent(subset, function(d) { return d.Time; })).nice();\n\n\n  }\n   \n//   MOVE TOP ALARM\n  function tick_top() {\n    // Push a new data point onto the back.\n    subset_top.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n    \n    // Redraw the line.\n    d3.select(this)\n        .attr(\"d\", alarm_top)\n    \t\t.attr(\"transform\", null);\n   \n    // Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) {return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick_top);\n    \n    // Pop the old data point off the front.\n    subset_top.shift();\n\n  }\n  \n  // MOVE BOTTOM ALARM\n  function tick_bottom() {\n    // Push a new data point onto the back.\n    subset_bottom.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n    \n    // Redraw the line.\n    d3.select(this)\n        .attr(\"d\", alarm_bottom)\n    \t\t.attr(\"transform\", null);\n//     d3.select(this)\n//         .attr(\"d\", alarm_top)\n//         .attr(\"transform\", null);\n//     d3.select(this)\n//         .attr(\"d\", alarm_bottom)\n//         .attr(\"transform\", null);\n    \n    \n    // Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) {return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick_bottom);\n    \n    // Pop the old data point off the front.\n    subset_bottom.shift();\n\n  }\n  \n});\n  \n</script>", "description": "HR_alarm_orig", "created_at": "2016-09-19T23:21:44Z", "updated_at": "2016-09-20T06:13:37Z", "api": ["d3.randomNormal", "d3.range", "d3.select", "d3.scaleLinear", "d3.timeParse", "d3.csv", "d3.extent", "d3.line", "d3.axisBottom", "d3.axisLeft", "d3.active"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/ssaleh2/'>ssaleh2</a>'s block: <a href='http://bl.ocks.org/ssaleh2/e1305c6421fe03112422fbef76a10106'>HR_alarm_orig</a>", "uid": "ssaleh2_3db31932ef72d3c4ae5bc3c982daa8e1"}, {"code": "<script>\n \nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\")-80,\n    height = +svg.attr(\"height\") - 260;\n\n  svg\n   .append('text')\n  .text('@recifs    visionscarto.net')\n  .attr('transform', 'translate(350,210)')\n .attr('fill','black')\n .attr('font-size','50')\n .attr('font-family','sans-serif')\n  \n  svg = svg.append('g')\n  .attr('transform', 'translate(40,260)')\n  \nvar warp = 2;\n  \nd3.interval(algo, warp * 9000);\n\nalgo();\n  \n  \nfunction algo() {\n  \nvar color = d3.scaleOrdinal().range(d3.schemeCategory20);\n\n  var n = 3000;\n  \nvar data = d3.range(n)\n    .map(function(d,i) { return [Math.random() * width, Math.random() * height, color(i), Math.random()]; });\n\n  \nvar polygon = svg.append(\"g\")\n    .attr(\"class\", \"polygons\");\n\nvar voronoi = d3.voronoi() \n    .size([width, height]);\n\nvar sites = data.sort(function(a,b) {\n  return d3.descending(a[3], b[3]);\n})\n.slice(0,n/10); \n\nsites.forEach(function(d) {\n    d[4] = true;\n})\n\nvar dots = svg\n.append('g')\n.selectAll('circle')\n.data(data)\n.enter()\n.append('circle')\n.attr('r', function(d) {return 20 * d[3] * d[3];})\n.attr('transform', function(d) { return 'translate('+ [ d[0], d[1] ] +')'; })\n.attr('fill', 'white')\n.attr('stroke', '#444')\n.attr('stroke-width', 1)\n.attr('opacity', 1) \n;\n\n  \nvar diagram = voronoi(sites);\n\ndiagram.find = function (x, y, radius){ \n  // optimization: start from most recent result  \n  var i, next = diagram.find.found || Math.floor(Math.random() * diagram.cells.length);\n  var cell = diagram.cells[next] || diagram.cells[next=0];\n  var dx = x - cell.site[0], \n      dy = y - cell.site[1],\n      dist = dx*dx + dy*dy;\n  \n \n  do { \n    cell = diagram.cells[i=next]; \n    next = null;\n    cell.halfedges.forEach(function(e) {\n      var edge = diagram.edges[e];\n      var ea = edge.left;\n      if (ea === cell.site || !ea) {\n        ea = edge.right;\n      }\n      if (ea){\n\t\t\t\tvar dx = x - ea[0],\n            dy = y - ea[1],\n            ndist = dx*dx + dy*dy;\n        if (ndist < dist){\n          dist = ndist;\n          next = ea.index;\n          return;\n        }\n      }\n    });\n\n  } while (next !== null);\n\n  diagram.find.found = i;\n  if (!radius || dist < radius * radius) return cell.site;\n};\n\npolygon.selectAll(\"path\") \n  .data(diagram.polygons())\n  .enter().append(\"path\")\n      .attr(\"d\", function(d) { return d ? \"M\" + d.join(\"L\") + \"Z\" : null; })\n      .attr(\"fill\", function(d,i) { return sites[i][2] })\n      .attr(\"fill-opacity\", 0.001) \n.attr('stroke', 'white')\n.transition()\n.delay(warp * 2000)\n.duration(warp * 2000)\n.attr(\"stroke\", '#777')\n.attr(\"fill-opacity\", 0.2)\n\ndots.transition()\n.duration(warp * 2000)\n.attr('fill', function(d) { return d[4] ? d[2] : 'white'; })\n.attr('stroke-width', function(d) { return d[4] ? 4 : 0.5; })\n;\n\ndots\n.transition()\n.delay(warp * 1000)\n.attr('opacity', function(d) { return d[4] ? 1 : 0.4; }); \n\ndots\n.transition()\n.delay(warp * 4000)\n.duration(warp * 2000)\n.attr('fill', function(d) {\n  var found = diagram.find(d[0],d[1]);\n  return sites[found.index][2];\n})\n.attr('opacity', 1); \n\n  \npolygon\n.attr('opacity', 1)\n.transition().delay(warp * 6000)\n.duration(warp * 2000)\n.attr('opacity', 0.1)\n.remove();\n\n  svg.selectAll('g')\n  .attr('opacity', 1)\n  .transition()\n  .delay(warp * 8000 + 900)\n  .duration(100)\n  .attr('opacity', 0)\n    .remove();\n\n}\n  \n\n\n</script>", "description": "Voronoi binning (animated for Badgetron) [UNLISTED]", "created_at": "2016-09-19T19:40:02Z", "updated_at": "2016-09-19T22:02:36Z", "api": ["d3.select", "d3.interval", "d3.scaleOrdinal", "d3.range", "d3.voronoi", "d3.descending"], "readme": "Group data points around the largest points.\n\nThe recipe is as follows:\n\n1) sort data points according to their sizes (here size = `d[3]`)\n\n2) use top 10% points as Voronoi sites\n\n3) bin all data points according to their Voronoi cell, using <a href='http://bl.ocks.org/Fil/1b7ddbcd71454d685d1259781968aefc'>voronoi.find()</a>. The binning is rendered by using the Voronoi sites's color.\n\n\nSee also the <a href=\"//bl.ocks.org/Fil/7c3c41f1524dcf2caea54290cceddf0a\">static version</a> \u2014 much less code to parse!\n\nOriginal work by Philippe Rivi\u00e8re for d3-voronoi ([issue 17](https://github.com/d3/d3-voronoi/issues/17)).\n\n\nforked from <a href='http://bl.ocks.org/Fil/'>Fil</a>'s block: <a href='http://bl.ocks.org/Fil/959437d834f4a01eb4d1023cdd107554'>Voronoi binning (animated)</a>", "uid": "Fil_007e6492155fc18906fb184cc486913b"}, {"code": "<script>\nvar margin = {top: 20, right: 50, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n  \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", 960)\n    .attr(\"height\", 500)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \nvar x = d3.scaleLinear()\n    .range([0, width]);\nvar y = d3.scaleLinear()\n    .range([height, 0]);\nvar y2 = d3.scaleLinear()\n    .range([height, 0]);\n\nvar line = d3.line()\n    .x(d => x(d.t))\n    .y(d => y(d.value));\n  \nvar matched = d3.area()\n\t\t.curve(d3.curveMonotoneX)\n    .x(d => x(d.t))\n\t\t.y0(height)\n    .y1(d => y2(d.match));\n  \nvar notch_idx = 87;\nvar template_size = 3;\n  \nd3.csv(\"data.dat\", type, (err, data) => {\n  if (err) throw err;\n  \n  let template = rangeAround(data, notch_idx, template_size);\n  console.log(\"template\", template);\n  template = normalize(template);\n  check(template)\n  console.info(\"normalized template\", template);\n  \n  data = convolve(data, template);\n//   console.log('data', data);\n  \n  x.domain(d3.extent(data, d => d.t));\n  y.domain(d3.extent(data, d => d.value));\n  y2.domain(d3.extent(data, d => Math.max(d.match, 0)));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y));\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"axis axis--match\")\n      .attr(\"transform\", \"translate( \" + width + \", 0 )\")\n      .call(d3.axisRight(y2));\n  \n   // Blood Pressure\n   svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n  \n  \t// Match\n//     svg.append(\"path\")\n//       .datum(data)\n//       .attr(\"class\", \"match\")\n//       .attr(\"d\", matched);\n  \n  var bars = svg.append(\"g\")\n  bars.selectAll(\".bar\")\n    .data(data)\n    .enter().filter(d => \"match\" in d).append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.t) -2.5; })\n      .attr(\"y\", function(d) { return y2(d.match); })\n      .attr(\"width\", 5)\n      .attr(\"height\", (d) => {return Math.max(height - y2(d.match), 0);})\n  \t\t.on(\"mouseover\", mouseover)\n  \n  function mouseover(d) { \n    console.log(\"d\", d);\n  }\n});\n  \nfunction type(d, i) {\n  d.value = +d.value;\n  d.t = i;\n  return d;\n}\n  \nfunction check(template) {\n  sum = 0;\n  template.forEach(t => {\n    sum += t.value;\n  })\n  console.info(\"sum\", sum);\n}\n  \nfunction rangeAround(data, idx, size) {\n  var side = Math.floor(size/2);\n  var result = [];\n  for (var i = idx-side; i <= idx+side; i++) {\n    result.push(data[i]);\n  }\n  return result;\n}\n  \nfunction normalize(values) {\n  var result = [];\n  var side = Math.floor(values.length/2);\n  var ave = d3.mean(values, d => d.value);\n  console.log(\"average\", ave);\n  var j = -side;\n  values.forEach(d => {\n    var val = d.value - ave\n    result.push({value: val, offset: j});\n    j++;\n  })\n  return result;\n}\n  \nfunction convolve(data, template) {\n  var side = Math.floor(template.length/2); \n  for (var i = 0; i < data.length; i++) {\n     \n     if (i + side < data.length && i - side >= 0)\n     {\n       var sum = 0;\n       template.forEach(t => {\n         var j = i + t.offset;\n         sum += (data[j].value * t.value);\n       })\n       data[i][\"match\"] = sum;\n     }\n     \n  }\n  \n  return data;\n}\n  </script>", "description": "Blood Pressure Waveform II", "created_at": "2016-09-19T19:35:58Z", "updated_at": "2016-09-19T22:16:39Z", "api": ["d3.select", "d3.scaleLinear", "d3.line", "d3.area", "d3.csv", "d3.extent", "d3.axisBottom", "d3.axisLeft", "d3.axisRight", "d3.mean"], "readme": "Simple plot of blood pressure in a heart over a short period of time.\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/lwthatcher/'>lwthatcher</a>'s block: <a href='http://bl.ocks.org/lwthatcher/b4a76ddd204da756513237ed4d4e0489'>Blood Pressure Waveform</a>", "uid": "lwthatcher_b7495612e87c29d6c6912329b84f3b81"}, {"code": "<script>\nvar logos = {\n  star: \"M14.615,4.928c0.487-0.986,1.284-0.986,1.771,0l2.249,4.554c0.486,0.986,1.775,1.923,2.864,2.081l5.024,0.73c1.089,0.158,1.335,0.916,0.547,1.684l-3.636,3.544c-0.788,0.769-1.28,2.283-1.095,3.368l0.859,5.004c0.186,1.085-0.459,1.553-1.433,1.041l-4.495-2.363c-0.974-0.512-2.567-0.512-3.541,0l-4.495,2.363c-0.974,0.512-1.618,0.044-1.432-1.041l0.858-5.004c0.186-1.085-0.307-2.6-1.094-3.368L3.93,13.977c-0.788-0.768-0.542-1.525,0.547-1.684l5.026-0.73c1.088-0.158,2.377-1.095,2.864-2.081L14.615,4.928z\",\n  apple: \"M24.32,10.85c-1.743,1.233-2.615,2.719-2.615,4.455c0,2.079,1.078,3.673,3.232,4.786c-0.578,1.677-1.416,3.134-2.514,4.375c-1.097,1.241-2.098,1.862-3.004,1.862c-0.427,0-1.009-0.143-1.748-0.423l-0.354-0.138c-0.725-0.281-1.363-0.423-1.92-0.423c-0.525,0-1.1,0.11-1.725,0.331l-0.445,0.16l-0.56,0.229c-0.441,0.176-0.888,0.264-1.337,0.264c-1.059,0-2.228-0.872-3.507-2.616c-1.843-2.498-2.764-5.221-2.764-8.167c0-2.095,0.574-3.781,1.725-5.061c1.149-1.279,2.673-1.92,4.568-1.92c0.709,0,1.371,0.13,1.988,0.389l0.423,0.172l0.445,0.183c0.396,0.167,0.716,0.251,0.959,0.251c0.312,0,0.659-0.072,1.04-0.217l0.582-0.229l0.435-0.16c0.693-0.251,1.459-0.377,2.297-0.377C21.512,8.576,23.109,9.334,24.32,10.85zM19.615,3.287c0.021,0.267,0.033,0.473,0.033,0.617c0,1.317-0.479,2.473-1.438,3.467s-2.075,1.49-3.347,1.49c-0.038-0.297-0.058-0.51-0.058-0.639c0-1.12,0.445-2.171,1.337-3.153c0.891-0.982,1.922-1.558,3.096-1.725C19.32,3.329,19.447,3.311,19.615,3.287z\",\n  glasses: \"M14.075,9.531c0,0-2.705-1.438-5.158-1.438c-2.453,0-4.862,0.593-4.862,0.593L3.971,9.869c0,0,0.19,0.19,0.528,0.53c0.338,0.336,0.486,3.741,1.838,5.094c1.353,1.354,4.82,1.396,5.963,0.676c1.14-0.718,2.241-3.466,2.241-4.693c0-0.38,0-0.676,0-0.676c0.274-0.275,1.615-0.303,1.917,0c0,0,0,0.296,0,0.676c0,1.227,1.101,3.975,2.241,4.693c1.144,0.72,4.611,0.678,5.963-0.676c1.355-1.353,1.501-4.757,1.839-5.094c0.338-0.34,0.528-0.53,0.528-0.53l-0.084-1.183c0,0-2.408-0.593-4.862-0.593c-2.453,0-5.158,1.438-5.158,1.438C16.319,9.292,14.737,9.32,14.075,9.531z\"\n};\nvar groupLogo = {\n  1: logos.star,\n  2: logos.apple\n}\n\nvar width = 960,\n    height = 500;\n\nvar color = d3.scale.category20();\n\nvar force = d3.layout.force()\n    .charge(-120)\n    .linkDistance(30)\n    .size([width, height]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"camus.json\", function(error, graph) {\n  force\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .start();\n\n  var link = svg.selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"line\")\n      .attr(\"class\", \"link\")\n      .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n  var node = svg.selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .call(force.drag);\n\n  node.append(\"path\")\n      .attr(\"d\", function(d) {\n        if (d.group in groupLogo) return groupLogo[d.group];\n        return logos.glasses;\n      })\n      .attr(\"transform\", \"scale(0.75)\")\n      .style(\"fill\", function(d) { return color(d.group); });\n\n  node.append(\"title\")\n      .text(function(d) { return d.name; });\n\n  force.on(\"tick\", function() {\n    link.attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\n    node.attr(\"transform\", function(d) { return \"translate(\" + (d.x-12) + \",\" + (d.y-12) + \")\"; });\n  });\n});\n\n</script>", "description": "Force-Directed SVG Icons - Very Simple Graph", "created_at": "2016-09-19T18:21:45Z", "updated_at": "2016-09-28T20:42:26Z", "api": ["d3.scale.category20", "d3.layout.force", "d3.select", "d3.json"], "readme": "http://bl.ocks.org/jymiller/aa20a376f8aa1f477cf275f680dd5253\n\nReplaces the circles in the force-directed graph with some [SVG icons](http://raphaeljs.com/icons/#glasses).\n\n\nforked from <a href='http://bl.ocks.org/syntagmatic/'>syntagmatic</a>'s block: <a href='http://bl.ocks.org/syntagmatic/4963194'>Force-Directed SVG Icons</a>", "uid": "jymiller_aa20a376f8aa1f477cf275f680dd5253"}], "links": [{"source": "DarienLiang_4f273a510d5bd87d3a250b54d638a0eb", "value": 12, "target": "jonasmorwing_1a502d2cc7020219369c5217e2ee4a84", "links": [{"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 90, "target_start_line": 1, "target_confidence": 48}]}, {"source": "ramtob_805a289ea113bcfa0fc9ca592f4cc5cf", "value": 14, "target": "DarienLiang_4f273a510d5bd87d3a250b54d638a0eb", "links": [{"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 93, "target_start_line": 14, "target_confidence": 93}]}, {"source": "timvarga_95a9d00fac79b2892072dc6a5522ad08", "value": 16, "target": "thomasdobber_68051f5695d5d4282b9555e7ea997ca3", "links": [{"target_end_line": 57, "source_start_line": 49, "source_end_line": 57, "source_confidence": 29, "target_start_line": 54, "target_confidence": 21}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 29, "target_start_line": 10, "target_confidence": 21}, {"target_end_line": 57, "source_start_line": 49, "source_end_line": 57, "source_confidence": 29, "target_start_line": 54, "target_confidence": 21}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 29, "target_start_line": 10, "target_confidence": 21}]}, {"source": "lorenzopub_898a0e5a9877d47303a57d12e50720fd", "value": 11, "target": "SpaceActuary_b91f25d80a103736b14477dc8a3a7c76", "links": [{"target_end_line": 20, "source_start_line": 32, "source_end_line": 36, "source_confidence": 12, "target_start_line": 15, "target_confidence": 9}, {"target_end_line": 10, "source_start_line": 10, "source_end_line": 14, "source_confidence": 12, "target_start_line": 6, "target_confidence": 9}, {"target_end_line": 20, "source_start_line": 32, "source_end_line": 36, "source_confidence": 12, "target_start_line": 15, "target_confidence": 9}, {"target_end_line": 10, "source_start_line": 10, "source_end_line": 14, "source_confidence": 12, "target_start_line": 6, "target_confidence": 9}]}, {"source": "lorenzopub_4b8609d749cd9759a03b74f889a579f0", "value": 39, "target": "juanprq_42d34c2ebefd1be5d173b802f38bb98a", "links": [{"target_end_line": 9, "source_start_line": 3, "source_end_line": 9, "source_confidence": 15, "target_start_line": 8, "target_confidence": 41}, {"target_end_line": 80, "source_start_line": 59, "source_end_line": 80, "source_confidence": 15, "target_start_line": 66, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 32, "source_end_line": 43, "source_confidence": 15, "target_start_line": 34, "target_confidence": 41}, {"target_end_line": 64, "source_start_line": 42, "source_end_line": 64, "source_confidence": 15, "target_start_line": 52, "target_confidence": 41}, {"target_end_line": 84, "source_start_line": 66, "source_end_line": 84, "source_confidence": 15, "target_start_line": 70, "target_confidence": 41}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 15, "source_confidence": 15, "target_start_line": 16, "target_confidence": 41}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 9, "source_confidence": 15, "target_start_line": 8, "target_confidence": 41}, {"target_end_line": 80, "source_start_line": 59, "source_end_line": 80, "source_confidence": 15, "target_start_line": 66, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 32, "source_end_line": 43, "source_confidence": 15, "target_start_line": 34, "target_confidence": 41}, {"target_end_line": 64, "source_start_line": 42, "source_end_line": 64, "source_confidence": 15, "target_start_line": 52, "target_confidence": 41}, {"target_end_line": 84, "source_start_line": 66, "source_end_line": 84, "source_confidence": 15, "target_start_line": 70, "target_confidence": 41}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 15, "source_confidence": 15, "target_start_line": 16, "target_confidence": 41}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 9, "source_confidence": 15, "target_start_line": 8, "target_confidence": 41}, {"target_end_line": 80, "source_start_line": 59, "source_end_line": 80, "source_confidence": 15, "target_start_line": 66, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 32, "source_end_line": 43, "source_confidence": 15, "target_start_line": 34, "target_confidence": 41}, {"target_end_line": 64, "source_start_line": 42, "source_end_line": 64, "source_confidence": 15, "target_start_line": 52, "target_confidence": 41}, {"target_end_line": 84, "source_start_line": 66, "source_end_line": 84, "source_confidence": 15, "target_start_line": 70, "target_confidence": 41}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 15, "source_confidence": 15, "target_start_line": 16, "target_confidence": 41}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 9, "source_confidence": 15, "target_start_line": 8, "target_confidence": 41}, {"target_end_line": 80, "source_start_line": 59, "source_end_line": 80, "source_confidence": 15, "target_start_line": 66, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 32, "source_end_line": 43, "source_confidence": 15, "target_start_line": 34, "target_confidence": 41}, {"target_end_line": 64, "source_start_line": 42, "source_end_line": 64, "source_confidence": 15, "target_start_line": 52, "target_confidence": 41}, {"target_end_line": 84, "source_start_line": 66, "source_end_line": 84, "source_confidence": 15, "target_start_line": 70, "target_confidence": 41}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 15, "source_confidence": 15, "target_start_line": 16, "target_confidence": 41}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 9, "source_confidence": 15, "target_start_line": 8, "target_confidence": 41}, {"target_end_line": 80, "source_start_line": 59, "source_end_line": 80, "source_confidence": 15, "target_start_line": 66, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 32, "source_end_line": 43, "source_confidence": 15, "target_start_line": 34, "target_confidence": 41}, {"target_end_line": 64, "source_start_line": 42, "source_end_line": 64, "source_confidence": 15, "target_start_line": 52, "target_confidence": 41}, {"target_end_line": 84, "source_start_line": 66, "source_end_line": 84, "source_confidence": 15, "target_start_line": 70, "target_confidence": 41}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 15, "source_confidence": 15, "target_start_line": 16, "target_confidence": 41}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 9, "source_confidence": 15, "target_start_line": 8, "target_confidence": 41}, {"target_end_line": 80, "source_start_line": 59, "source_end_line": 80, "source_confidence": 15, "target_start_line": 66, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 32, "source_end_line": 43, "source_confidence": 15, "target_start_line": 34, "target_confidence": 41}, {"target_end_line": 64, "source_start_line": 42, "source_end_line": 64, "source_confidence": 15, "target_start_line": 52, "target_confidence": 41}, {"target_end_line": 84, "source_start_line": 66, "source_end_line": 84, "source_confidence": 15, "target_start_line": 70, "target_confidence": 41}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 15, "source_confidence": 15, "target_start_line": 16, "target_confidence": 41}]}, {"source": "alexmacy_1e96757a9a5af1bc1242345b8b73acf0", "value": 15, "target": "lorenzopub_898a0e5a9877d47303a57d12e50720fd", "links": [{"target_end_line": 39, "source_start_line": 19, "source_end_line": 26, "source_confidence": 21, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 16, "source_start_line": 7, "source_end_line": 13, "source_confidence": 21, "target_start_line": 10, "target_confidence": 15}, {"target_end_line": 39, "source_start_line": 19, "source_end_line": 26, "source_confidence": 21, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 16, "source_start_line": 7, "source_end_line": 13, "source_confidence": 21, "target_start_line": 10, "target_confidence": 15}]}, {"source": "mashehu_281584920c26e2d617625270b75818a1", "value": 185, "target": "lorenzopub_2c63ce8f3a4d535dd0e65d658f6c80d6", "links": [{"target_end_line": 185, "source_start_line": 1, "source_end_line": 185, "source_confidence": 99, "target_start_line": 185, "target_confidence": 99}]}, {"source": "Fil_425346f63abddee5fea3fdcb76904820", "value": 16, "target": "lorenzopub_4b8609d749cd9759a03b74f889a579f0", "links": [{"target_end_line": 8, "source_start_line": 8, "source_end_line": 13, "source_confidence": 14, "target_start_line": 3, "target_confidence": 6}, {"target_end_line": 46, "source_start_line": 32, "source_end_line": 41, "source_confidence": 14, "target_start_line": 37, "target_confidence": 6}, {"target_end_line": 8, "source_start_line": 8, "source_end_line": 13, "source_confidence": 14, "target_start_line": 3, "target_confidence": 6}, {"target_end_line": 46, "source_start_line": 32, "source_end_line": 41, "source_confidence": 14, "target_start_line": 37, "target_confidence": 6}]}, {"source": "lorenzopub_bd743979d44ebb58868a3b7ee0f74db4", "value": 16, "target": "seemantk_5eba869f4aa06353d8c9ce6f8d88c714", "links": [{"target_end_line": 34, "source_start_line": 27, "source_end_line": 31, "source_confidence": 16, "target_start_line": 28, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 8, "source_end_line": 10, "source_confidence": 16, "target_start_line": 3, "target_confidence": 17}, {"target_end_line": 13, "source_start_line": 12, "source_end_line": 16, "source_confidence": 16, "target_start_line": 12, "target_confidence": 17}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 16, "target_start_line": 23, "target_confidence": 17}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 31, "source_confidence": 16, "target_start_line": 28, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 8, "source_end_line": 10, "source_confidence": 16, "target_start_line": 3, "target_confidence": 17}, {"target_end_line": 13, "source_start_line": 12, "source_end_line": 16, "source_confidence": 16, "target_start_line": 12, "target_confidence": 17}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 16, "target_start_line": 23, "target_confidence": 17}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 31, "source_confidence": 16, "target_start_line": 28, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 8, "source_end_line": 10, "source_confidence": 16, "target_start_line": 3, "target_confidence": 17}, {"target_end_line": 13, "source_start_line": 12, "source_end_line": 16, "source_confidence": 16, "target_start_line": 12, "target_confidence": 17}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 16, "target_start_line": 23, "target_confidence": 17}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 31, "source_confidence": 16, "target_start_line": 28, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 8, "source_end_line": 10, "source_confidence": 16, "target_start_line": 3, "target_confidence": 17}, {"target_end_line": 13, "source_start_line": 12, "source_end_line": 16, "source_confidence": 16, "target_start_line": 12, "target_confidence": 17}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 16, "target_start_line": 23, "target_confidence": 17}]}, {"source": "kenpenn_02163b2968906ad90857cdf681c0304b", "value": 64, "target": "ptvans_cd5c6e033b4a4b1c7ef8861c82319493", "links": [{"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}]}, {"source": "steveharoz_3fc45e398b8bd7a17460698e79c19d03", "value": 11, "target": "ptvans_a05a937fccacdc3275d80e697648ca88", "links": [{"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 19, "target_start_line": 11, "target_confidence": 14}]}, {"source": "lorenzopub_bd743979d44ebb58868a3b7ee0f74db4", "value": 42, "target": "Fil_425346f63abddee5fea3fdcb76904820", "links": [{"target_end_line": 37, "source_start_line": 33, "source_end_line": 37, "source_confidence": 27, "target_start_line": 40, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 19, "source_end_line": 25, "source_confidence": 27, "target_start_line": 23, "target_confidence": 31}, {"target_end_line": 68, "source_start_line": 62, "source_end_line": 68, "source_confidence": 27, "target_start_line": 74, "target_confidence": 31}, {"target_end_line": 114, "source_start_line": 133, "source_end_line": 114, "source_confidence": 27, "target_start_line": 138, "target_confidence": 31}, {"target_end_line": 56, "source_start_line": 52, "source_end_line": 56, "source_confidence": 27, "target_start_line": 61, "target_confidence": 31}, {"target_end_line": 37, "source_start_line": 33, "source_end_line": 37, "source_confidence": 27, "target_start_line": 40, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 19, "source_end_line": 25, "source_confidence": 27, "target_start_line": 23, "target_confidence": 31}, {"target_end_line": 68, "source_start_line": 62, "source_end_line": 68, "source_confidence": 27, "target_start_line": 74, "target_confidence": 31}, {"target_end_line": 114, "source_start_line": 133, "source_end_line": 114, "source_confidence": 27, "target_start_line": 138, "target_confidence": 31}, {"target_end_line": 56, "source_start_line": 52, "source_end_line": 56, "source_confidence": 27, "target_start_line": 61, "target_confidence": 31}, {"target_end_line": 37, "source_start_line": 33, "source_end_line": 37, "source_confidence": 27, "target_start_line": 40, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 19, "source_end_line": 25, "source_confidence": 27, "target_start_line": 23, "target_confidence": 31}, {"target_end_line": 68, "source_start_line": 62, "source_end_line": 68, "source_confidence": 27, "target_start_line": 74, "target_confidence": 31}, {"target_end_line": 114, "source_start_line": 133, "source_end_line": 114, "source_confidence": 27, "target_start_line": 138, "target_confidence": 31}, {"target_end_line": 56, "source_start_line": 52, "source_end_line": 56, "source_confidence": 27, "target_start_line": 61, "target_confidence": 31}, {"target_end_line": 37, "source_start_line": 33, "source_end_line": 37, "source_confidence": 27, "target_start_line": 40, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 19, "source_end_line": 25, "source_confidence": 27, "target_start_line": 23, "target_confidence": 31}, {"target_end_line": 68, "source_start_line": 62, "source_end_line": 68, "source_confidence": 27, "target_start_line": 74, "target_confidence": 31}, {"target_end_line": 114, "source_start_line": 133, "source_end_line": 114, "source_confidence": 27, "target_start_line": 138, "target_confidence": 31}, {"target_end_line": 56, "source_start_line": 52, "source_end_line": 56, "source_confidence": 27, "target_start_line": 61, "target_confidence": 31}, {"target_end_line": 37, "source_start_line": 33, "source_end_line": 37, "source_confidence": 27, "target_start_line": 40, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 19, "source_end_line": 25, "source_confidence": 27, "target_start_line": 23, "target_confidence": 31}, {"target_end_line": 68, "source_start_line": 62, "source_end_line": 68, "source_confidence": 27, "target_start_line": 74, "target_confidence": 31}, {"target_end_line": 114, "source_start_line": 133, "source_end_line": 114, "source_confidence": 27, "target_start_line": 138, "target_confidence": 31}, {"target_end_line": 56, "source_start_line": 52, "source_end_line": 56, "source_confidence": 27, "target_start_line": 61, "target_confidence": 31}]}, {"source": "alexmacy_1e96757a9a5af1bc1242345b8b73acf0", "value": 11, "target": "lorenzopub_bd743979d44ebb58868a3b7ee0f74db4", "links": [{"target_end_line": 31, "source_start_line": 19, "source_end_line": 23, "source_confidence": 18, "target_start_line": 27, "target_confidence": 12}, {"target_end_line": 13, "source_start_line": 7, "source_end_line": 12, "source_confidence": 18, "target_start_line": 8, "target_confidence": 12}, {"target_end_line": 31, "source_start_line": 19, "source_end_line": 23, "source_confidence": 18, "target_start_line": 27, "target_confidence": 12}, {"target_end_line": 13, "source_start_line": 7, "source_end_line": 12, "source_confidence": 18, "target_start_line": 8, "target_confidence": 12}]}, {"source": "juanprq_07cc5a33514c56f4bf253d62066ee3f0", "value": 35, "target": "lorenzopub_66fee1bf5611f0cc2085ce8f2a60bfe3", "links": [{"target_end_line": 35, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 28, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 72, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 60, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 28, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 72, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 60, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 28, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 72, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 60, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 28, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 72, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 60, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 44}]}, {"source": "thayashi_8e0ec8527695e874e222a66b0f997747", "value": 20, "target": "thomasdobber_9b78824119136778052f64a967c070e0", "links": [{"target_end_line": 52, "source_start_line": 88, "source_end_line": 101, "source_confidence": 9, "target_start_line": 33, "target_confidence": 13}]}, {"source": "cehsu_fa7324f633d7f99cf3d2c68e027ec1da", "value": 45, "target": "lorenzopub_1dca7b205cfe5b9733afe831c7719a9d", "links": [{"target_end_line": 104, "source_start_line": 200, "source_end_line": 224, "source_confidence": 24, "target_start_line": 80, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 180, "source_end_line": 186, "source_confidence": 24, "target_start_line": 57, "target_confidence": 48}, {"target_end_line": 68, "source_start_line": 187, "source_end_line": 191, "source_confidence": 24, "target_start_line": 64, "target_confidence": 48}, {"target_end_line": 24, "source_start_line": 32, "source_end_line": 33, "source_confidence": 24, "target_start_line": 23, "target_confidence": 48}, {"target_end_line": 30, "source_start_line": 41, "source_end_line": 46, "source_confidence": 24, "target_start_line": 25, "target_confidence": 48}, {"target_end_line": 104, "source_start_line": 200, "source_end_line": 224, "source_confidence": 24, "target_start_line": 80, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 180, "source_end_line": 186, "source_confidence": 24, "target_start_line": 57, "target_confidence": 48}, {"target_end_line": 68, "source_start_line": 187, "source_end_line": 191, "source_confidence": 24, "target_start_line": 64, "target_confidence": 48}, {"target_end_line": 24, "source_start_line": 32, "source_end_line": 33, "source_confidence": 24, "target_start_line": 23, "target_confidence": 48}, {"target_end_line": 30, "source_start_line": 41, "source_end_line": 46, "source_confidence": 24, "target_start_line": 25, "target_confidence": 48}, {"target_end_line": 104, "source_start_line": 200, "source_end_line": 224, "source_confidence": 24, "target_start_line": 80, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 180, "source_end_line": 186, "source_confidence": 24, "target_start_line": 57, "target_confidence": 48}, {"target_end_line": 68, "source_start_line": 187, "source_end_line": 191, "source_confidence": 24, "target_start_line": 64, "target_confidence": 48}, {"target_end_line": 24, "source_start_line": 32, "source_end_line": 33, "source_confidence": 24, "target_start_line": 23, "target_confidence": 48}, {"target_end_line": 30, "source_start_line": 41, "source_end_line": 46, "source_confidence": 24, "target_start_line": 25, "target_confidence": 48}, {"target_end_line": 104, "source_start_line": 200, "source_end_line": 224, "source_confidence": 24, "target_start_line": 80, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 180, "source_end_line": 186, "source_confidence": 24, "target_start_line": 57, "target_confidence": 48}, {"target_end_line": 68, "source_start_line": 187, "source_end_line": 191, "source_confidence": 24, "target_start_line": 64, "target_confidence": 48}, {"target_end_line": 24, "source_start_line": 32, "source_end_line": 33, "source_confidence": 24, "target_start_line": 23, "target_confidence": 48}, {"target_end_line": 30, "source_start_line": 41, "source_end_line": 46, "source_confidence": 24, "target_start_line": 25, "target_confidence": 48}, {"target_end_line": 104, "source_start_line": 200, "source_end_line": 224, "source_confidence": 24, "target_start_line": 80, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 180, "source_end_line": 186, "source_confidence": 24, "target_start_line": 57, "target_confidence": 48}, {"target_end_line": 68, "source_start_line": 187, "source_end_line": 191, "source_confidence": 24, "target_start_line": 64, "target_confidence": 48}, {"target_end_line": 24, "source_start_line": 32, "source_end_line": 33, "source_confidence": 24, "target_start_line": 23, "target_confidence": 48}, {"target_end_line": 30, "source_start_line": 41, "source_end_line": 46, "source_confidence": 24, "target_start_line": 25, "target_confidence": 48}]}, {"source": "jorgeehernandez_c19d6eb6085cab208f56e79f22c39e35", "value": 23, "target": "lorenzopub_526f5145c24c0a1c9f0b237102b23cd1", "links": [{"target_end_line": 37, "source_start_line": 43, "source_end_line": 47, "source_confidence": 29, "target_start_line": 33, "target_confidence": 30}, {"target_end_line": 18, "source_start_line": 13, "source_end_line": 17, "source_confidence": 29, "target_start_line": 14, "target_confidence": 30}, {"target_end_line": 26, "source_start_line": 29, "source_end_line": 35, "source_confidence": 29, "target_start_line": 20, "target_confidence": 30}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 29, "target_start_line": 1, "target_confidence": 30}, {"target_end_line": 37, "source_start_line": 43, "source_end_line": 47, "source_confidence": 29, "target_start_line": 33, "target_confidence": 30}, {"target_end_line": 18, "source_start_line": 13, "source_end_line": 17, "source_confidence": 29, "target_start_line": 14, "target_confidence": 30}, {"target_end_line": 26, "source_start_line": 29, "source_end_line": 35, "source_confidence": 29, "target_start_line": 20, "target_confidence": 30}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 29, "target_start_line": 1, "target_confidence": 30}, {"target_end_line": 37, "source_start_line": 43, "source_end_line": 47, "source_confidence": 29, "target_start_line": 33, "target_confidence": 30}, {"target_end_line": 18, "source_start_line": 13, "source_end_line": 17, "source_confidence": 29, "target_start_line": 14, "target_confidence": 30}, {"target_end_line": 26, "source_start_line": 29, "source_end_line": 35, "source_confidence": 29, "target_start_line": 20, "target_confidence": 30}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 29, "target_start_line": 1, "target_confidence": 30}, {"target_end_line": 37, "source_start_line": 43, "source_end_line": 47, "source_confidence": 29, "target_start_line": 33, "target_confidence": 30}, {"target_end_line": 18, "source_start_line": 13, "source_end_line": 17, "source_confidence": 29, "target_start_line": 14, "target_confidence": 30}, {"target_end_line": 26, "source_start_line": 29, "source_end_line": 35, "source_confidence": 29, "target_start_line": 20, "target_confidence": 30}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 29, "target_start_line": 1, "target_confidence": 30}]}, {"source": "jorgeehernandez_c19d6eb6085cab208f56e79f22c39e35", "value": 29, "target": "lorenzopub_edb3d59d8a1a5d5524a6a3efb98fb27d", "links": [{"target_end_line": 21, "source_start_line": 10, "source_end_line": 17, "source_confidence": 45, "target_start_line": 14, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 43, "source_end_line": 47, "source_confidence": 45, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 43, "source_start_line": 62, "source_end_line": 65, "source_confidence": 45, "target_start_line": 40, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 45, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 28, "source_start_line": 29, "source_end_line": 34, "source_confidence": 45, "target_start_line": 23, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 17, "source_confidence": 45, "target_start_line": 14, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 43, "source_end_line": 47, "source_confidence": 45, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 43, "source_start_line": 62, "source_end_line": 65, "source_confidence": 45, "target_start_line": 40, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 45, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 28, "source_start_line": 29, "source_end_line": 34, "source_confidence": 45, "target_start_line": 23, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 17, "source_confidence": 45, "target_start_line": 14, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 43, "source_end_line": 47, "source_confidence": 45, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 43, "source_start_line": 62, "source_end_line": 65, "source_confidence": 45, "target_start_line": 40, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 45, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 28, "source_start_line": 29, "source_end_line": 34, "source_confidence": 45, "target_start_line": 23, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 17, "source_confidence": 45, "target_start_line": 14, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 43, "source_end_line": 47, "source_confidence": 45, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 43, "source_start_line": 62, "source_end_line": 65, "source_confidence": 45, "target_start_line": 40, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 45, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 28, "source_start_line": 29, "source_end_line": 34, "source_confidence": 45, "target_start_line": 23, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 17, "source_confidence": 45, "target_start_line": 14, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 43, "source_end_line": 47, "source_confidence": 45, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 43, "source_start_line": 62, "source_end_line": 65, "source_confidence": 45, "target_start_line": 40, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 45, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 28, "source_start_line": 29, "source_end_line": 34, "source_confidence": 45, "target_start_line": 23, "target_confidence": 44}]}, {"source": "juanprq_07cc5a33514c56f4bf253d62066ee3f0", "value": 35, "target": "lorenzopub_fca46894abbf8c1180f041ecc087505a", "links": [{"target_end_line": 40, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 33, "target_confidence": 38}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 38}, {"target_end_line": 93, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 81, "target_confidence": 38}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 38}, {"target_end_line": 40, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 33, "target_confidence": 38}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 38}, {"target_end_line": 93, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 81, "target_confidence": 38}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 38}, {"target_end_line": 40, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 33, "target_confidence": 38}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 38}, {"target_end_line": 93, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 81, "target_confidence": 38}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 38}, {"target_end_line": 40, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 33, "target_confidence": 38}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 38}, {"target_end_line": 93, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 81, "target_confidence": 38}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 38}]}, {"source": "alexmacy_1e96757a9a5af1bc1242345b8b73acf0", "value": 12, "target": "lorenzopub_35c309fc1c476f756ccc569584432b60", "links": [{"target_end_line": 41, "source_start_line": 19, "source_end_line": 25, "source_confidence": 18, "target_start_line": 35, "target_confidence": 24}, {"target_end_line": 23, "source_start_line": 7, "source_end_line": 11, "source_confidence": 18, "target_start_line": 19, "target_confidence": 24}, {"target_end_line": 41, "source_start_line": 19, "source_end_line": 25, "source_confidence": 18, "target_start_line": 35, "target_confidence": 24}, {"target_end_line": 23, "source_start_line": 7, "source_end_line": 11, "source_confidence": 18, "target_start_line": 19, "target_confidence": 24}]}, {"source": "Fil_d5a3c548be117b87ebd187eadc4510b3", "value": 19, "target": "lorenzopub_3cd429b7c660163030e9abfcefd3159a", "links": [{"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 15, "target_start_line": 1, "target_confidence": 6}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 34, "source_confidence": 15, "target_start_line": 20, "target_confidence": 6}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 15, "target_start_line": 1, "target_confidence": 6}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 34, "source_confidence": 15, "target_start_line": 20, "target_confidence": 6}]}, {"source": "alexmacy_1e96757a9a5af1bc1242345b8b73acf0", "value": 19, "target": "lorenzopub_cefd53c7fc67018efba0fe0460cdfd2a", "links": [{"target_end_line": 28, "source_start_line": 19, "source_end_line": 26, "source_confidence": 19, "target_start_line": 21, "target_confidence": 13}, {"target_end_line": 13, "source_start_line": 7, "source_end_line": 11, "source_confidence": 19, "target_start_line": 3, "target_confidence": 13}, {"target_end_line": 28, "source_start_line": 19, "source_end_line": 26, "source_confidence": 19, "target_start_line": 21, "target_confidence": 13}, {"target_end_line": 13, "source_start_line": 7, "source_end_line": 11, "source_confidence": 19, "target_start_line": 3, "target_confidence": 13}]}, {"source": "domhorvath_9de3007d51bbee999b6923b44ec2eb22", "value": 64, "target": "lorenzopub_4155479307b8821c910dab05576d421e", "links": [{"target_end_line": 64, "source_start_line": 1, "source_end_line": 64, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "domhorvath_ba3aa4bdb0652fcd8b98c59a33fcea1d", "value": 146, "target": "lorenzopub_8634242329da4dfb101c8732d73927ad", "links": [{"target_end_line": 146, "source_start_line": 1, "source_end_line": 146, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "riyazshaikh_2a2ad9a6eed7f21c66b10f11155d9bac", "value": 14, "target": "timvarga_95a9d00fac79b2892072dc6a5522ad08", "links": [{"target_end_line": 58, "source_start_line": 46, "source_end_line": 59, "source_confidence": 18, "target_start_line": 48, "target_confidence": 23}]}, {"source": "sunilchandra007_e69797b98bcd56146a3d4d1ba6f1ecbc", "value": 13, "target": "emeeks_912e24404b85a2af7dc7cb17927e816d", "links": [{"target_end_line": 36, "source_start_line": 57, "source_end_line": 36, "source_confidence": 3, "target_start_line": 69, "target_confidence": 2}]}, {"source": "pbellon_0c2447557cde990871e32f8cf517e8e2", "value": 11, "target": "alexmacy_1e96757a9a5af1bc1242345b8b73acf0", "links": [{"target_end_line": 23, "source_start_line": 15, "source_end_line": 23, "source_confidence": 21, "target_start_line": 19, "target_confidence": 18}, {"target_end_line": 12, "source_start_line": 3, "source_end_line": 12, "source_confidence": 21, "target_start_line": 8, "target_confidence": 18}, {"target_end_line": 23, "source_start_line": 15, "source_end_line": 23, "source_confidence": 21, "target_start_line": 19, "target_confidence": 18}, {"target_end_line": 12, "source_start_line": 3, "source_end_line": 12, "source_confidence": 21, "target_start_line": 8, "target_confidence": 18}]}, {"source": "juanprq_07cc5a33514c56f4bf253d62066ee3f0", "value": 11, "target": "pbellon_0c2447557cde990871e32f8cf517e8e2", "links": [{"target_end_line": 19, "source_start_line": 27, "source_end_line": 31, "source_confidence": 18, "target_start_line": 15, "target_confidence": 21}, {"target_end_line": 8, "source_start_line": 3, "source_end_line": 8, "source_confidence": 18, "target_start_line": 3, "target_confidence": 21}, {"target_end_line": 19, "source_start_line": 27, "source_end_line": 31, "source_confidence": 18, "target_start_line": 15, "target_confidence": 21}, {"target_end_line": 8, "source_start_line": 3, "source_end_line": 8, "source_confidence": 18, "target_start_line": 3, "target_confidence": 21}]}, {"source": "Thanaporn-sk_4c8326c3481b57048cfafcf90f6ce23d", "value": 12, "target": "juanprq_07cc5a33514c56f4bf253d62066ee3f0", "links": [{"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 24, "target_start_line": 7, "target_confidence": 17}, {"target_end_line": 31, "source_start_line": 25, "source_end_line": 31, "source_confidence": 24, "target_start_line": 29, "target_confidence": 17}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 24, "target_start_line": 7, "target_confidence": 17}, {"target_end_line": 31, "source_start_line": 25, "source_end_line": 31, "source_confidence": 24, "target_start_line": 29, "target_confidence": 17}]}, {"source": "jermspeaks_25f4772e1b65b5d12997c351ffa491ea", "value": 73, "target": "Sokrates86_be74ebd338f422474528859b2742ef7a", "links": [{"target_end_line": 71, "source_start_line": 16, "source_end_line": 71, "source_confidence": 89, "target_start_line": 16, "target_confidence": 94}, {"target_end_line": 16, "source_start_line": 9, "source_end_line": 13, "source_confidence": 89, "target_start_line": 12, "target_confidence": 94}, {"target_end_line": 10, "source_start_line": 2, "source_end_line": 6, "source_confidence": 89, "target_start_line": 5, "target_confidence": 94}, {"target_end_line": 78, "source_start_line": 73, "source_end_line": 78, "source_confidence": 89, "target_start_line": 73, "target_confidence": 94}, {"target_end_line": 71, "source_start_line": 16, "source_end_line": 71, "source_confidence": 89, "target_start_line": 16, "target_confidence": 94}, {"target_end_line": 16, "source_start_line": 9, "source_end_line": 13, "source_confidence": 89, "target_start_line": 12, "target_confidence": 94}, {"target_end_line": 10, "source_start_line": 2, "source_end_line": 6, "source_confidence": 89, "target_start_line": 5, "target_confidence": 94}, {"target_end_line": 78, "source_start_line": 73, "source_end_line": 78, "source_confidence": 89, "target_start_line": 73, "target_confidence": 94}, {"target_end_line": 71, "source_start_line": 16, "source_end_line": 71, "source_confidence": 89, "target_start_line": 16, "target_confidence": 94}, {"target_end_line": 16, "source_start_line": 9, "source_end_line": 13, "source_confidence": 89, "target_start_line": 12, "target_confidence": 94}, {"target_end_line": 10, "source_start_line": 2, "source_end_line": 6, "source_confidence": 89, "target_start_line": 5, "target_confidence": 94}, {"target_end_line": 78, "source_start_line": 73, "source_end_line": 78, "source_confidence": 89, "target_start_line": 73, "target_confidence": 94}, {"target_end_line": 71, "source_start_line": 16, "source_end_line": 71, "source_confidence": 89, "target_start_line": 16, "target_confidence": 94}, {"target_end_line": 16, "source_start_line": 9, "source_end_line": 13, "source_confidence": 89, "target_start_line": 12, "target_confidence": 94}, {"target_end_line": 10, "source_start_line": 2, "source_end_line": 6, "source_confidence": 89, "target_start_line": 5, "target_confidence": 94}, {"target_end_line": 78, "source_start_line": 73, "source_end_line": 78, "source_confidence": 89, "target_start_line": 73, "target_confidence": 94}]}, {"source": "davidgutierrez_ddc1d5ee2dcdcc7172bf004bfedee93d", "value": 14, "target": "TomStanczyk_8cd26aabc37de17d837a85eeb3b420d5", "links": [{"target_end_line": 130, "source_start_line": 106, "source_end_line": 116, "source_confidence": 14, "target_start_line": 117, "target_confidence": 12}]}, {"source": "DarienLiang_858e9d1c9b856fd9fdd6b49bc022b9bd", "value": 14, "target": "ramtob_805a289ea113bcfa0fc9ca592f4cc5cf", "links": [{"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 93, "target_start_line": 1, "target_confidence": 93}]}, {"source": "jcamilort_1af13c226335fe8547c8d89cbd69097b", "value": 12, "target": "Thanaporn-sk_9e4b66a26b9ffb649511ba89ac71ead7", "links": [{"target_end_line": 81, "source_start_line": 57, "source_end_line": 61, "source_confidence": 8, "target_start_line": 77, "target_confidence": 7}, {"target_end_line": 182, "source_start_line": 132, "source_end_line": 138, "source_confidence": 8, "target_start_line": 176, "target_confidence": 7}, {"target_end_line": 81, "source_start_line": 57, "source_end_line": 61, "source_confidence": 8, "target_start_line": 77, "target_confidence": 7}, {"target_end_line": 182, "source_start_line": 132, "source_end_line": 138, "source_confidence": 8, "target_start_line": 176, "target_confidence": 7}]}, {"source": "rschuman_354103739605441177d7a0c3f5047222", "value": 11, "target": "Thanaporn-sk_4c8326c3481b57048cfafcf90f6ce23d", "links": [{"target_end_line": 29, "source_start_line": 14, "source_end_line": 19, "source_confidence": 10, "target_start_line": 25, "target_confidence": 21}, {"target_end_line": 7, "source_start_line": 5, "source_end_line": 9, "source_confidence": 10, "target_start_line": 3, "target_confidence": 21}, {"target_end_line": 29, "source_start_line": 14, "source_end_line": 19, "source_confidence": 10, "target_start_line": 25, "target_confidence": 21}, {"target_end_line": 7, "source_start_line": 5, "source_end_line": 9, "source_confidence": 10, "target_start_line": 3, "target_confidence": 21}]}, {"source": "GitNoise_790ec4081ca86165ce2deecaf020c210", "value": 11, "target": "Thanaporn-sk_beae236f61cd47cac3bfe12e1d0e2f52", "links": [{"target_end_line": 368, "source_start_line": 36, "source_end_line": 46, "source_confidence": 6, "target_start_line": 359, "target_confidence": 1}]}, {"source": "Fil_07f00f90524c4c2b99c944780c2f4e7c", "value": 11, "target": "steveharoz_3fc45e398b8bd7a17460698e79c19d03", "links": [{"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 14, "target_start_line": 1, "target_confidence": 19}]}, {"source": "curran_66449dd909dfff72f6b1820e9558444c", "value": 11, "target": "rschuman_354103739605441177d7a0c3f5047222", "links": [{"target_end_line": 19, "source_start_line": 41, "source_end_line": 45, "source_confidence": 26, "target_start_line": 14, "target_confidence": 11}, {"target_end_line": 9, "source_start_line": 19, "source_end_line": 23, "source_confidence": 26, "target_start_line": 5, "target_confidence": 11}, {"target_end_line": 19, "source_start_line": 41, "source_end_line": 45, "source_confidence": 26, "target_start_line": 14, "target_confidence": 11}, {"target_end_line": 9, "source_start_line": 19, "source_end_line": 23, "source_confidence": 26, "target_start_line": 5, "target_confidence": 11}]}, {"source": "curran_66449dd909dfff72f6b1820e9558444c", "value": 11, "target": "rschuman_916d1e5469e5d4729d4547ebf4dad8b1", "links": [{"target_end_line": 19, "source_start_line": 41, "source_end_line": 45, "source_confidence": 26, "target_start_line": 14, "target_confidence": 11}, {"target_end_line": 9, "source_start_line": 19, "source_end_line": 23, "source_confidence": 26, "target_start_line": 5, "target_confidence": 11}, {"target_end_line": 19, "source_start_line": 41, "source_end_line": 45, "source_confidence": 26, "target_start_line": 14, "target_confidence": 11}, {"target_end_line": 9, "source_start_line": 19, "source_end_line": 23, "source_confidence": 26, "target_start_line": 5, "target_confidence": 11}]}, {"source": "alexmacy_3986db72dc4b81db8e788dd837ee6e3b", "value": 146, "target": "Fil_8a0d9f3c727608e236d65e7bc50dd015", "links": [{"target_end_line": 109, "source_start_line": 1, "source_end_line": 109, "source_confidence": 97, "target_start_line": 1, "target_confidence": 93}, {"target_end_line": 152, "source_start_line": 113, "source_end_line": 149, "source_confidence": 97, "target_start_line": 116, "target_confidence": 93}, {"target_end_line": 109, "source_start_line": 1, "source_end_line": 109, "source_confidence": 97, "target_start_line": 1, "target_confidence": 93}, {"target_end_line": 152, "source_start_line": 113, "source_end_line": 149, "source_confidence": 97, "target_start_line": 116, "target_confidence": 93}]}, {"source": "walkerjeffd_f106208f55304c0b18d7bbe68a18a591", "value": 21, "target": "curran_66449dd909dfff72f6b1820e9558444c", "links": [{"target_end_line": 47, "source_start_line": 41, "source_end_line": 47, "source_confidence": 29, "target_start_line": 48, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 3, "source_end_line": 21, "source_confidence": 29, "target_start_line": 5, "target_confidence": 35}, {"target_end_line": 68, "source_start_line": 61, "source_end_line": 68, "source_confidence": 29, "target_start_line": 70, "target_confidence": 35}, {"target_end_line": 47, "source_start_line": 41, "source_end_line": 47, "source_confidence": 29, "target_start_line": 48, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 3, "source_end_line": 21, "source_confidence": 29, "target_start_line": 5, "target_confidence": 35}, {"target_end_line": 68, "source_start_line": 61, "source_end_line": 68, "source_confidence": 29, "target_start_line": 70, "target_confidence": 35}, {"target_end_line": 47, "source_start_line": 41, "source_end_line": 47, "source_confidence": 29, "target_start_line": 48, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 3, "source_end_line": 21, "source_confidence": 29, "target_start_line": 5, "target_confidence": 35}, {"target_end_line": 68, "source_start_line": 61, "source_end_line": 68, "source_confidence": 29, "target_start_line": 70, "target_confidence": 35}]}, {"source": "domhorvath_58de10fe06d7f26e47a6e0c900cf1693", "value": 14, "target": "davidgutierrez_ddc1d5ee2dcdcc7172bf004bfedee93d", "links": [{"target_end_line": 116, "source_start_line": 97, "source_end_line": 116, "source_confidence": 14, "target_start_line": 110, "target_confidence": 14}]}, {"source": "BBischof_75ed4879d155c31412f58840480ae1d6", "value": 20, "target": "walkerjeffd_f106208f55304c0b18d7bbe68a18a591", "links": [{"target_end_line": 45, "source_start_line": 29, "source_end_line": 33, "source_confidence": 22, "target_start_line": 41, "target_confidence": 28}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 22, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 70, "source_start_line": 59, "source_end_line": 68, "source_confidence": 22, "target_start_line": 61, "target_confidence": 28}, {"target_end_line": 45, "source_start_line": 29, "source_end_line": 33, "source_confidence": 22, "target_start_line": 41, "target_confidence": 28}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 22, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 70, "source_start_line": 59, "source_end_line": 68, "source_confidence": 22, "target_start_line": 61, "target_confidence": 28}, {"target_end_line": 45, "source_start_line": 29, "source_end_line": 33, "source_confidence": 22, "target_start_line": 41, "target_confidence": 28}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 22, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 70, "source_start_line": 59, "source_end_line": 68, "source_confidence": 22, "target_start_line": 61, "target_confidence": 28}]}, {"source": "domhorvath_58de10fe06d7f26e47a6e0c900cf1693", "value": 14, "target": "davidgutierrez_41961f8bce821419faf92f6b72cfc77f", "links": [{"target_end_line": 116, "source_start_line": 97, "source_end_line": 116, "source_confidence": 14, "target_start_line": 110, "target_confidence": 14}]}, {"source": "john-guerra_bc102eb539b845cb378183cdbab9c73d", "value": 14, "target": "DarienLiang_858e9d1c9b856fd9fdd6b49bc022b9bd", "links": [{"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 93, "target_start_line": 14, "target_confidence": 93}]}, {"source": "kerryrodden_44fa2ae8b8041ef2c9f89dd888e501ac", "value": 14, "target": "jcamilort_1af13c226335fe8547c8d89cbd69097b", "links": [{"target_end_line": 23, "source_start_line": 16, "source_end_line": 23, "source_confidence": 44, "target_start_line": 22, "target_confidence": 12}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 44, "target_start_line": 7, "target_confidence": 12}, {"target_end_line": 23, "source_start_line": 16, "source_end_line": 23, "source_confidence": 44, "target_start_line": 22, "target_confidence": 12}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 44, "target_start_line": 7, "target_confidence": 12}]}, {"source": "kerryrodden_1272d31a85475acdc059bafd2fb4e36b", "value": 32, "target": "enjalot_5fb88c1beadbb93a029cd3797d195c6f", "links": [{"target_end_line": 32, "source_start_line": 1, "source_end_line": 32, "source_confidence": 98, "target_start_line": 32, "target_confidence": 98}]}, {"source": "kerryrodden_1272d31a85475acdc059bafd2fb4e36b", "value": 32, "target": "enjalot_fe2bc0193873d4a1026e1bd15353878f", "links": [{"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 85, "target_start_line": 22, "target_confidence": 77}, {"target_end_line": 33, "source_start_line": 23, "source_end_line": 33, "source_confidence": 85, "target_start_line": 32, "target_confidence": 77}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 85, "target_start_line": 22, "target_confidence": 77}, {"target_end_line": 33, "source_start_line": 23, "source_end_line": 33, "source_confidence": 85, "target_start_line": 32, "target_confidence": 77}]}, {"source": "Fil_013d52c3e03aa7b90f71db99eace95af", "value": 16, "target": "kerryrodden_44fa2ae8b8041ef2c9f89dd888e501ac", "links": [{"target_end_line": 23, "source_start_line": 25, "source_end_line": 34, "source_confidence": 23, "target_start_line": 14, "target_confidence": 47}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 10, "source_confidence": 23, "target_start_line": 3, "target_confidence": 47}, {"target_end_line": 23, "source_start_line": 25, "source_end_line": 34, "source_confidence": 23, "target_start_line": 14, "target_confidence": 47}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 10, "source_confidence": 23, "target_start_line": 3, "target_confidence": 47}]}, {"source": "riyazshaikh_2a2ad9a6eed7f21c66b10f11155d9bac", "value": 36, "target": "domhorvath_58de10fe06d7f26e47a6e0c900cf1693", "links": [{"target_end_line": 110, "source_start_line": 55, "source_end_line": 110, "source_confidence": 54, "target_start_line": 73, "target_confidence": 37}, {"target_end_line": 84, "source_start_line": 48, "source_end_line": 84, "source_confidence": 54, "target_start_line": 55, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 17, "source_end_line": 68, "source_confidence": 54, "target_start_line": 22, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 9, "source_end_line": 49, "source_confidence": 54, "target_start_line": 11, "target_confidence": 37}, {"target_end_line": 110, "source_start_line": 55, "source_end_line": 110, "source_confidence": 54, "target_start_line": 73, "target_confidence": 37}, {"target_end_line": 84, "source_start_line": 48, "source_end_line": 84, "source_confidence": 54, "target_start_line": 55, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 17, "source_end_line": 68, "source_confidence": 54, "target_start_line": 22, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 9, "source_end_line": 49, "source_confidence": 54, "target_start_line": 11, "target_confidence": 37}, {"target_end_line": 110, "source_start_line": 55, "source_end_line": 110, "source_confidence": 54, "target_start_line": 73, "target_confidence": 37}, {"target_end_line": 84, "source_start_line": 48, "source_end_line": 84, "source_confidence": 54, "target_start_line": 55, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 17, "source_end_line": 68, "source_confidence": 54, "target_start_line": 22, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 9, "source_end_line": 49, "source_confidence": 54, "target_start_line": 11, "target_confidence": 37}, {"target_end_line": 110, "source_start_line": 55, "source_end_line": 110, "source_confidence": 54, "target_start_line": 73, "target_confidence": 37}, {"target_end_line": 84, "source_start_line": 48, "source_end_line": 84, "source_confidence": 54, "target_start_line": 55, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 17, "source_end_line": 68, "source_confidence": 54, "target_start_line": 22, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 9, "source_end_line": 49, "source_confidence": 54, "target_start_line": 11, "target_confidence": 37}]}, {"source": "eric-bunch_9b313af64c04c1574681316282cd1ad1", "value": 13, "target": "Fil_2d43867ba1f36a05459c7113c7f6f98a", "links": [{"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 3, "target_start_line": 6, "target_confidence": 15}, {"target_end_line": 21, "source_start_line": 241, "source_end_line": 249, "source_confidence": 3, "target_start_line": 14, "target_confidence": 15}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 3, "target_start_line": 6, "target_confidence": 15}, {"target_end_line": 21, "source_start_line": 241, "source_end_line": 249, "source_confidence": 3, "target_start_line": 14, "target_confidence": 15}]}, {"source": "BBischof_75ed4879d155c31412f58840480ae1d6", "value": 14, "target": "Fil_013d52c3e03aa7b90f71db99eace95af", "links": [{"target_end_line": 33, "source_start_line": 27, "source_end_line": 35, "source_confidence": 18, "target_start_line": 25, "target_confidence": 21}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 7, "source_confidence": 18, "target_start_line": 5, "target_confidence": 21}, {"target_end_line": 33, "source_start_line": 27, "source_end_line": 35, "source_confidence": 18, "target_start_line": 25, "target_confidence": 21}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 7, "source_confidence": 18, "target_start_line": 5, "target_confidence": 21}]}, {"source": "Fil_007e6492155fc18906fb184cc486913b", "value": 56, "target": "jermspeaks_135b6e0db7d35aa4bfed34c9e946e751", "links": [{"target_end_line": 73, "source_start_line": 68, "source_end_line": 100, "source_confidence": 42, "target_start_line": 41, "target_confidence": 80}, {"target_end_line": 34, "source_start_line": 51, "source_end_line": 58, "source_confidence": 42, "target_start_line": 27, "target_confidence": 80}, {"target_end_line": 14, "source_start_line": 27, "source_end_line": 35, "source_confidence": 42, "target_start_line": 7, "target_confidence": 80}, {"target_end_line": 20, "source_start_line": 39, "source_end_line": 44, "source_confidence": 42, "target_start_line": 15, "target_confidence": 80}, {"target_end_line": 73, "source_start_line": 68, "source_end_line": 100, "source_confidence": 42, "target_start_line": 41, "target_confidence": 80}, {"target_end_line": 34, "source_start_line": 51, "source_end_line": 58, "source_confidence": 42, "target_start_line": 27, "target_confidence": 80}, {"target_end_line": 14, "source_start_line": 27, "source_end_line": 35, "source_confidence": 42, "target_start_line": 7, "target_confidence": 80}, {"target_end_line": 20, "source_start_line": 39, "source_end_line": 44, "source_confidence": 42, "target_start_line": 15, "target_confidence": 80}, {"target_end_line": 73, "source_start_line": 68, "source_end_line": 100, "source_confidence": 42, "target_start_line": 41, "target_confidence": 80}, {"target_end_line": 34, "source_start_line": 51, "source_end_line": 58, "source_confidence": 42, "target_start_line": 27, "target_confidence": 80}, {"target_end_line": 14, "source_start_line": 27, "source_end_line": 35, "source_confidence": 42, "target_start_line": 7, "target_confidence": 80}, {"target_end_line": 20, "source_start_line": 39, "source_end_line": 44, "source_confidence": 42, "target_start_line": 15, "target_confidence": 80}, {"target_end_line": 73, "source_start_line": 68, "source_end_line": 100, "source_confidence": 42, "target_start_line": 41, "target_confidence": 80}, {"target_end_line": 34, "source_start_line": 51, "source_end_line": 58, "source_confidence": 42, "target_start_line": 27, "target_confidence": 80}, {"target_end_line": 14, "source_start_line": 27, "source_end_line": 35, "source_confidence": 42, "target_start_line": 7, "target_confidence": 80}, {"target_end_line": 20, "source_start_line": 39, "source_end_line": 44, "source_confidence": 42, "target_start_line": 15, "target_confidence": 80}]}, {"source": "sadbumblebee_cf960bdddd53ae832d980f5c70c48e5c", "value": 11, "target": "john-guerra_95c69d114b7d59f934c282fc643d2234", "links": [{"target_end_line": 9, "source_start_line": 8, "source_end_line": 9, "source_confidence": 2, "target_start_line": 11, "target_confidence": 12}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 2, "target_start_line": 7, "target_confidence": 12}, {"target_end_line": 9, "source_start_line": 8, "source_end_line": 9, "source_confidence": 2, "target_start_line": 11, "target_confidence": 12}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 2, "target_start_line": 7, "target_confidence": 12}]}, {"source": "codementum_c82471c137b3744ed8c28006fc1da41d", "value": 74, "target": "ivanempire_b6a1d0d2c5bc40a1e3f85b8980f189ef", "links": [{"target_end_line": 78, "source_start_line": 54, "source_end_line": 98, "source_confidence": 58, "target_start_line": 35, "target_confidence": 88}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 58, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 83, "source_start_line": 98, "source_end_line": 103, "source_confidence": 58, "target_start_line": 79, "target_confidence": 88}, {"target_end_line": 78, "source_start_line": 54, "source_end_line": 98, "source_confidence": 58, "target_start_line": 35, "target_confidence": 88}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 58, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 83, "source_start_line": 98, "source_end_line": 103, "source_confidence": 58, "target_start_line": 79, "target_confidence": 88}, {"target_end_line": 78, "source_start_line": 54, "source_end_line": 98, "source_confidence": 58, "target_start_line": 35, "target_confidence": 88}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 58, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 83, "source_start_line": 98, "source_end_line": 103, "source_confidence": 58, "target_start_line": 79, "target_confidence": 88}]}, {"source": "ivanempire_0e4e400b7f56a59e59719c7b01bc2cd8", "value": 48, "target": "codementum_c82471c137b3744ed8c28006fc1da41d", "links": [{"target_end_line": 47, "source_start_line": 2, "source_end_line": 47, "source_confidence": 88, "target_start_line": 15, "target_confidence": 63}, {"target_end_line": 73, "source_start_line": 18, "source_end_line": 73, "source_confidence": 88, "target_start_line": 36, "target_confidence": 63}, {"target_end_line": 95, "source_start_line": 41, "source_end_line": 95, "source_confidence": 88, "target_start_line": 55, "target_confidence": 63}, {"target_end_line": 47, "source_start_line": 2, "source_end_line": 47, "source_confidence": 88, "target_start_line": 15, "target_confidence": 63}, {"target_end_line": 73, "source_start_line": 18, "source_end_line": 73, "source_confidence": 88, "target_start_line": 36, "target_confidence": 63}, {"target_end_line": 95, "source_start_line": 41, "source_end_line": 95, "source_confidence": 88, "target_start_line": 55, "target_confidence": 63}, {"target_end_line": 47, "source_start_line": 2, "source_end_line": 47, "source_confidence": 88, "target_start_line": 15, "target_confidence": 63}, {"target_end_line": 73, "source_start_line": 18, "source_end_line": 73, "source_confidence": 88, "target_start_line": 36, "target_confidence": 63}, {"target_end_line": 95, "source_start_line": 41, "source_end_line": 95, "source_confidence": 88, "target_start_line": 55, "target_confidence": 63}]}, {"source": "cis321_b395b990d020370584a58ac95a7bcccf", "value": 14, "target": "john-guerra_bc102eb539b845cb378183cdbab9c73d", "links": [{"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 93, "target_start_line": 1, "target_confidence": 93}]}, {"source": "ivanempire_0e4e400b7f56a59e59719c7b01bc2cd8", "value": 61, "target": "codementum_2ee76715d716e59efab283ce915de740", "links": [{"target_end_line": 61, "source_start_line": 1, "source_end_line": 61, "source_confidence": 99, "target_start_line": 61, "target_confidence": 99}]}, {"source": "ivanempire_0e4e400b7f56a59e59719c7b01bc2cd8", "value": 61, "target": "codementum_ae610a1e44e562afcaa327982629a37c", "links": [{"target_end_line": 61, "source_start_line": 1, "source_end_line": 61, "source_confidence": 99, "target_start_line": 61, "target_confidence": 99}]}, {"source": "sunilchandra007_e69797b98bcd56146a3d4d1ba6f1ecbc", "value": 12, "target": "riyazshaikh_2a2ad9a6eed7f21c66b10f11155d9bac", "links": [{"target_end_line": 51, "source_start_line": 122, "source_end_line": 51, "source_confidence": 6, "target_start_line": 133, "target_confidence": 12}]}, {"source": "BBischof_75ed4879d155c31412f58840480ae1d6", "value": 12, "target": "sadbumblebee_cf960bdddd53ae832d980f5c70c48e5c", "links": [{"target_end_line": 132, "source_start_line": 90, "source_end_line": 94, "source_confidence": 14, "target_start_line": 128, "target_confidence": 3}, {"target_end_line": 123, "source_start_line": 81, "source_end_line": 87, "source_confidence": 14, "target_start_line": 117, "target_confidence": 3}, {"target_end_line": 132, "source_start_line": 90, "source_end_line": 94, "source_confidence": 14, "target_start_line": 128, "target_confidence": 3}, {"target_end_line": 123, "source_start_line": 81, "source_end_line": 87, "source_confidence": 14, "target_start_line": 117, "target_confidence": 3}]}, {"source": "fotisz_d75dd147aa99fce499902801919d41ba", "value": 83, "target": "matt1306_5ef518ec9d7153f9624e46c7ca97b77d", "links": [{"target_end_line": 84, "source_start_line": 47, "source_end_line": 101, "source_confidence": 64, "target_start_line": 30, "target_confidence": 97}, {"target_end_line": 28, "source_start_line": 1, "source_end_line": 28, "source_confidence": 64, "target_start_line": 1, "target_confidence": 97}, {"target_end_line": 84, "source_start_line": 47, "source_end_line": 101, "source_confidence": 64, "target_start_line": 30, "target_confidence": 97}, {"target_end_line": 28, "source_start_line": 1, "source_end_line": 28, "source_confidence": 64, "target_start_line": 1, "target_confidence": 97}]}, {"source": "sunilchandra007_28d85075448d5b2d0c7b586a51ceda7a", "value": 13, "target": "n1n9-jp_8e8bbbb12f61fb6d2fef3f3c7fa41382", "links": [{"target_end_line": 74, "source_start_line": 58, "source_end_line": 74, "source_confidence": 5, "target_start_line": 63, "target_confidence": 11}, {"target_end_line": 47, "source_start_line": 94, "source_end_line": 47, "source_confidence": 5, "target_start_line": 100, "target_confidence": 11}, {"target_end_line": 74, "source_start_line": 58, "source_end_line": 74, "source_confidence": 5, "target_start_line": 63, "target_confidence": 11}, {"target_end_line": 47, "source_start_line": 94, "source_end_line": 47, "source_confidence": 5, "target_start_line": 100, "target_confidence": 11}]}, {"source": "rveciana_fe6b452c853146e674dd6dd09c1cc6e3", "value": 19, "target": "bradoyler_e9d70c6b1ce76e1ba8b83d94cfd4296c", "links": [{"target_end_line": 24, "source_start_line": 17, "source_end_line": 24, "source_confidence": 27, "target_start_line": 28, "target_confidence": 63}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 6, "source_confidence": 27, "target_start_line": 10, "target_confidence": 63}, {"target_end_line": 24, "source_start_line": 17, "source_end_line": 24, "source_confidence": 27, "target_start_line": 28, "target_confidence": 63}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 6, "source_confidence": 27, "target_start_line": 10, "target_confidence": 63}]}, {"source": "iansinnott_d25e6ebe9526b3cc0b82344e13727309", "value": 22, "target": "cehsu_fa7324f633d7f99cf3d2c68e027ec1da", "links": [{"target_end_line": 210, "source_start_line": 56, "source_end_line": 210, "source_confidence": 33, "target_start_line": 61, "target_confidence": 10}, {"target_end_line": 224, "source_start_line": 64, "source_end_line": 224, "source_confidence": 33, "target_start_line": 74, "target_confidence": 10}, {"target_end_line": 204, "source_start_line": 52, "source_end_line": 204, "source_confidence": 33, "target_start_line": 55, "target_confidence": 10}, {"target_end_line": 210, "source_start_line": 56, "source_end_line": 210, "source_confidence": 33, "target_start_line": 61, "target_confidence": 10}, {"target_end_line": 224, "source_start_line": 64, "source_end_line": 224, "source_confidence": 33, "target_start_line": 74, "target_confidence": 10}, {"target_end_line": 204, "source_start_line": 52, "source_end_line": 204, "source_confidence": 33, "target_start_line": 55, "target_confidence": 10}, {"target_end_line": 210, "source_start_line": 56, "source_end_line": 210, "source_confidence": 33, "target_start_line": 61, "target_confidence": 10}, {"target_end_line": 224, "source_start_line": 64, "source_end_line": 224, "source_confidence": 33, "target_start_line": 74, "target_confidence": 10}, {"target_end_line": 204, "source_start_line": 52, "source_end_line": 204, "source_confidence": 33, "target_start_line": 55, "target_confidence": 10}]}, {"source": "lgoerl_8cd5584d81953601ef1d90ba6a7821b6", "value": 98, "target": "BBischof_75ed4879d155c31412f58840480ae1d6", "links": [{"target_end_line": 98, "source_start_line": 27, "source_end_line": 98, "source_confidence": 97, "target_start_line": 99, "target_confidence": 97}, {"target_end_line": 25, "source_start_line": 1, "source_end_line": 25, "source_confidence": 97, "target_start_line": 25, "target_confidence": 97}, {"target_end_line": 98, "source_start_line": 27, "source_end_line": 98, "source_confidence": 97, "target_start_line": 99, "target_confidence": 97}, {"target_end_line": 25, "source_start_line": 1, "source_end_line": 25, "source_confidence": 97, "target_start_line": 25, "target_confidence": 97}]}, {"source": "scresawn_3364c4347d4059ac28b439cb234e6951", "value": 14, "target": "DarienLiang_cbcdffc45ac4e6edf5cac6f193dff5c6", "links": [{"target_end_line": 16, "source_start_line": 5, "source_end_line": 16, "source_confidence": 17, "target_start_line": 17, "target_confidence": 18}]}, {"source": "Ananda90_45cb6fc5500665cb3bddb12a4a1c9345", "value": 17, "target": "lgoerl_8cd5584d81953601ef1d90ba6a7821b6", "links": [{"target_end_line": 39, "source_start_line": 15, "source_end_line": 21, "source_confidence": 15, "target_start_line": 32, "target_confidence": 10}, {"target_end_line": 68, "source_start_line": 34, "source_end_line": 42, "source_confidence": 15, "target_start_line": 60, "target_confidence": 10}, {"target_end_line": 39, "source_start_line": 15, "source_end_line": 21, "source_confidence": 15, "target_start_line": 32, "target_confidence": 10}, {"target_end_line": 68, "source_start_line": 34, "source_end_line": 42, "source_confidence": 15, "target_start_line": 60, "target_confidence": 10}]}, {"source": "timelyportfolio_3cc50e732e46c2f275181c939d899234", "value": 27, "target": "emeeks_19a1d77fc6ad812faedb648218b7ad60", "links": [{"target_end_line": 87, "source_start_line": 45, "source_end_line": 87, "source_confidence": 26, "target_start_line": 69, "target_confidence": 19}, {"target_end_line": 96, "source_start_line": 82, "source_end_line": 96, "source_confidence": 26, "target_start_line": 83, "target_confidence": 19}, {"target_end_line": 87, "source_start_line": 45, "source_end_line": 87, "source_confidence": 26, "target_start_line": 69, "target_confidence": 19}, {"target_end_line": 96, "source_start_line": 82, "source_end_line": 96, "source_confidence": 26, "target_start_line": 83, "target_confidence": 19}]}, {"source": "jcamilort_0c9809f5e4ead2d924cd304b625cadb1", "value": 41, "target": "skimlik_596ab625e10c488ed8078c7d74c8b95f", "links": [{"target_end_line": 7, "source_start_line": 1, "source_end_line": 41, "source_confidence": 59, "target_start_line": 1, "target_confidence": 41}]}, {"source": "allenwko_4ff3e1e268f0945e6ee4d88f6d74d520", "value": 13, "target": "lookoutjames_c07f84aaf69de9f38503578217e05046", "links": [{"target_end_line": 39, "source_start_line": 4, "source_end_line": 7, "source_confidence": 18, "target_start_line": 36, "target_confidence": 8}, {"target_end_line": 58, "source_start_line": 49, "source_end_line": 57, "source_confidence": 18, "target_start_line": 51, "target_confidence": 8}, {"target_end_line": 39, "source_start_line": 4, "source_end_line": 7, "source_confidence": 18, "target_start_line": 36, "target_confidence": 8}, {"target_end_line": 58, "source_start_line": 49, "source_end_line": 57, "source_confidence": 18, "target_start_line": 51, "target_confidence": 8}]}, {"source": "jcamilort_0c9809f5e4ead2d924cd304b625cadb1", "value": 42, "target": "skimlik_20bc5d340153c03977c0b7bbe27a72b1", "links": [{"target_end_line": 9, "source_start_line": 1, "source_end_line": 42, "source_confidence": 66, "target_start_line": 1, "target_confidence": 23}]}, {"source": "jcamilort_0c9809f5e4ead2d924cd304b625cadb1", "value": 48, "target": "cis321_b395b990d020370584a58ac95a7bcccf", "links": [{"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 93, "target_start_line": 48, "target_confidence": 93}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_b450cdd26523642c1286a8f850a536b9", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 524, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 526, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 528, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 530, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 532, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 534, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 524, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 526, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 528, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 530, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 532, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 534, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 524, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 526, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 528, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 530, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 532, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 534, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 524, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 526, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 528, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 530, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 532, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 534, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 524, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 526, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 528, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 530, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 532, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 534, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 524, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 526, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 528, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 530, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 532, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 534, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 524, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 526, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 528, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 530, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 532, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 534, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 524, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 526, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 528, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 530, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 532, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 534, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 524, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 526, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 528, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 530, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 532, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 534, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 524, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 526, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 528, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 530, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 532, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 534, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 524, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 526, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 528, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 530, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 532, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 534, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 524, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 526, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 528, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 530, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 532, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 534, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 524, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 526, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 528, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 530, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 532, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 534, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 524, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 526, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 528, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 530, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 532, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 534, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_42e11366b38e106c8ad071b011d41861", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_3845b2a1ebddd45ea0bd8dd0a360845a", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 512, "source_confidence": 36, "target_start_line": 508, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 514, "source_confidence": 36, "target_start_line": 510, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 516, "source_confidence": 36, "target_start_line": 512, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 518, "source_confidence": 36, "target_start_line": 514, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 520, "source_confidence": 36, "target_start_line": 516, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 522, "source_confidence": 36, "target_start_line": 518, "target_confidence": 34}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_f5b1cc1c6a98bf5e00b9b4cb92bbf261", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 518, "source_confidence": 36, "target_start_line": 508, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 520, "source_confidence": 36, "target_start_line": 510, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 522, "source_confidence": 36, "target_start_line": 512, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 524, "source_confidence": 36, "target_start_line": 514, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 526, "source_confidence": 36, "target_start_line": 516, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 528, "source_confidence": 36, "target_start_line": 518, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 518, "source_confidence": 36, "target_start_line": 508, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 520, "source_confidence": 36, "target_start_line": 510, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 522, "source_confidence": 36, "target_start_line": 512, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 524, "source_confidence": 36, "target_start_line": 514, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 526, "source_confidence": 36, "target_start_line": 516, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 528, "source_confidence": 36, "target_start_line": 518, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 518, "source_confidence": 36, "target_start_line": 508, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 520, "source_confidence": 36, "target_start_line": 510, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 522, "source_confidence": 36, "target_start_line": 512, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 524, "source_confidence": 36, "target_start_line": 514, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 526, "source_confidence": 36, "target_start_line": 516, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 528, "source_confidence": 36, "target_start_line": 518, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 518, "source_confidence": 36, "target_start_line": 508, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 520, "source_confidence": 36, "target_start_line": 510, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 522, "source_confidence": 36, "target_start_line": 512, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 524, "source_confidence": 36, "target_start_line": 514, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 526, "source_confidence": 36, "target_start_line": 516, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 528, "source_confidence": 36, "target_start_line": 518, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 518, "source_confidence": 36, "target_start_line": 508, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 520, "source_confidence": 36, "target_start_line": 510, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 522, "source_confidence": 36, "target_start_line": 512, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 524, "source_confidence": 36, "target_start_line": 514, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 526, "source_confidence": 36, "target_start_line": 516, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 528, "source_confidence": 36, "target_start_line": 518, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 518, "source_confidence": 36, "target_start_line": 508, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 520, "source_confidence": 36, "target_start_line": 510, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 522, "source_confidence": 36, "target_start_line": 512, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 524, "source_confidence": 36, "target_start_line": 514, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 526, "source_confidence": 36, "target_start_line": 516, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 528, "source_confidence": 36, "target_start_line": 518, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 518, "source_confidence": 36, "target_start_line": 508, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 520, "source_confidence": 36, "target_start_line": 510, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 522, "source_confidence": 36, "target_start_line": 512, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 524, "source_confidence": 36, "target_start_line": 514, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 526, "source_confidence": 36, "target_start_line": 516, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 528, "source_confidence": 36, "target_start_line": 518, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 518, "source_confidence": 36, "target_start_line": 508, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 520, "source_confidence": 36, "target_start_line": 510, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 522, "source_confidence": 36, "target_start_line": 512, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 524, "source_confidence": 36, "target_start_line": 514, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 526, "source_confidence": 36, "target_start_line": 516, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 528, "source_confidence": 36, "target_start_line": 518, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 518, "source_confidence": 36, "target_start_line": 508, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 520, "source_confidence": 36, "target_start_line": 510, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 522, "source_confidence": 36, "target_start_line": 512, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 524, "source_confidence": 36, "target_start_line": 514, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 526, "source_confidence": 36, "target_start_line": 516, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 528, "source_confidence": 36, "target_start_line": 518, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 518, "source_confidence": 36, "target_start_line": 508, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 520, "source_confidence": 36, "target_start_line": 510, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 522, "source_confidence": 36, "target_start_line": 512, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 524, "source_confidence": 36, "target_start_line": 514, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 526, "source_confidence": 36, "target_start_line": 516, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 528, "source_confidence": 36, "target_start_line": 518, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 518, "source_confidence": 36, "target_start_line": 508, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 520, "source_confidence": 36, "target_start_line": 510, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 522, "source_confidence": 36, "target_start_line": 512, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 524, "source_confidence": 36, "target_start_line": 514, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 526, "source_confidence": 36, "target_start_line": 516, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 528, "source_confidence": 36, "target_start_line": 518, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 518, "source_confidence": 36, "target_start_line": 508, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 520, "source_confidence": 36, "target_start_line": 510, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 522, "source_confidence": 36, "target_start_line": 512, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 524, "source_confidence": 36, "target_start_line": 514, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 526, "source_confidence": 36, "target_start_line": 516, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 528, "source_confidence": 36, "target_start_line": 518, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 518, "source_confidence": 36, "target_start_line": 508, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 520, "source_confidence": 36, "target_start_line": 510, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 522, "source_confidence": 36, "target_start_line": 512, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 524, "source_confidence": 36, "target_start_line": 514, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 526, "source_confidence": 36, "target_start_line": 516, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 528, "source_confidence": 36, "target_start_line": 518, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 518, "source_confidence": 36, "target_start_line": 508, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 520, "source_confidence": 36, "target_start_line": 510, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 522, "source_confidence": 36, "target_start_line": 512, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 524, "source_confidence": 36, "target_start_line": 514, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 526, "source_confidence": 36, "target_start_line": 516, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 528, "source_confidence": 36, "target_start_line": 518, "target_confidence": 33}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_eefbf8a634c47a355133a1c9ef7626ec", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_8a3bca89ab69d0c7f18999c49cd07bb0", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_dd366a46fdf36a20c13d1b9feb4bf360", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_e7b8bb30c2824dac837743397ac120e7", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_f544e6f2a795c4d080d1096b2811d874", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_d333b5f5e38c55d4914df30bdcd7bdf9", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_16c60f32c2cbc187689546b0228cc9cf", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_ff1d445a5f258d15642c2db9a3a350d4", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_8e147b3a6df133f8382d62456fb5a195", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_ad60c13c34ec6b9f5e24704ed044670f", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_0d2b2dc43fbdc1d30c4fb1aab3c5ea0a", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_a2e4a101c3e40087233129ac543b8898", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_5894e4fe188966b8e48bd23e4b7b66fb", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_9ccd1766410275a223944f7782308669", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_1b05b8274792a54d35d9f78afe2c6e5b", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_82eb96fb0b4bc0c2561f9ae460125b17", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_f1d01b567b46dea43a5703963466781b", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "apolan_945f8b260c4e40ffea19cbae59062e05", "value": 48, "target": "jcamilort_0c9809f5e4ead2d924cd304b625cadb1", "links": [{"target_end_line": 48, "source_start_line": 1, "source_end_line": 14, "source_confidence": 93, "target_start_line": 1, "target_confidence": 93}]}, {"source": "mashehu_de923d763a53d523596ba81c6d1f3233", "value": 20, "target": "davidgutierrez_4bb1ae1e5c71f8c8112b6782c62c528f", "links": [{"target_end_line": 125, "source_start_line": 125, "source_end_line": 125, "source_confidence": 6, "target_start_line": 134, "target_confidence": 7}, {"target_end_line": 22, "source_start_line": 80, "source_end_line": 22, "source_confidence": 6, "target_start_line": 85, "target_confidence": 7}, {"target_end_line": 125, "source_start_line": 125, "source_end_line": 125, "source_confidence": 6, "target_start_line": 134, "target_confidence": 7}, {"target_end_line": 22, "source_start_line": 80, "source_end_line": 22, "source_confidence": 6, "target_start_line": 85, "target_confidence": 7}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_9dd1ec5c7529a419db0336bb906fd192", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 212, "source_confidence": 36, "target_start_line": 232, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 100, "source_confidence": 36, "target_start_line": 89, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 24, "source_confidence": 36, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 51, "source_confidence": 36, "target_start_line": 50, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 217, "source_confidence": 36, "target_start_line": 238, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 120, "source_confidence": 36, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 30, "source_confidence": 36, "target_start_line": 29, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 433, "source_confidence": 36, "target_start_line": 508, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 435, "source_confidence": 36, "target_start_line": 510, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 437, "source_confidence": 36, "target_start_line": 512, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 439, "source_confidence": 36, "target_start_line": 514, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 441, "source_confidence": 36, "target_start_line": 516, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 443, "source_confidence": 36, "target_start_line": 518, "target_confidence": 37}]}, {"source": "fotisz_a60c07f22b33597f80c303463c0fdd6b", "value": 14, "target": "apolan_945f8b260c4e40ffea19cbae59062e05", "links": [{"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 93, "target_start_line": 14, "target_confidence": 93}]}, {"source": "alandunning_4c36eb1abdb248de34c64f5672afd857", "value": 25, "target": "Ananda90_7c0517b1b4d80c1ff44d2c092ab89ca8", "links": [{"target_end_line": 25, "source_start_line": 1, "source_end_line": 25, "source_confidence": 98, "target_start_line": 1, "target_confidence": 98}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 11, "target": "Ananda90_45cb6fc5500665cb3bddb12a4a1c9345", "links": [{"target_end_line": 46, "source_start_line": 127, "source_end_line": 46, "source_confidence": 1, "target_start_line": 132, "target_confidence": 16}, {"target_end_line": 18, "source_start_line": 360, "source_end_line": 18, "source_confidence": 1, "target_start_line": 364, "target_confidence": 16}, {"target_end_line": 46, "source_start_line": 127, "source_end_line": 46, "source_confidence": 1, "target_start_line": 132, "target_confidence": 16}, {"target_end_line": 18, "source_start_line": 360, "source_end_line": 18, "source_confidence": 1, "target_start_line": 364, "target_confidence": 16}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 11, "target": "Ananda90_d4e8bbacefa42f1bc74caf82f971eea4", "links": [{"target_end_line": 46, "source_start_line": 127, "source_end_line": 46, "source_confidence": 1, "target_start_line": 132, "target_confidence": 16}, {"target_end_line": 18, "source_start_line": 360, "source_end_line": 18, "source_confidence": 1, "target_start_line": 364, "target_confidence": 16}, {"target_end_line": 46, "source_start_line": 127, "source_end_line": 46, "source_confidence": 1, "target_start_line": 132, "target_confidence": 16}, {"target_end_line": 18, "source_start_line": 360, "source_end_line": 18, "source_confidence": 1, "target_start_line": 364, "target_confidence": 16}]}, {"source": "RicCheng_b467b5b6536dac8b215d22bbb2bb3662", "value": 14, "target": "Ananda90_fe3056ca5c47fd949cdb4a4df6513e9a", "links": [{"target_end_line": 89, "source_start_line": 160, "source_end_line": 89, "source_confidence": 5, "target_start_line": 167, "target_confidence": 18}, {"target_end_line": 28, "source_start_line": 89, "source_end_line": 28, "source_confidence": 5, "target_start_line": 94, "target_confidence": 18}, {"target_end_line": 89, "source_start_line": 160, "source_end_line": 89, "source_confidence": 5, "target_start_line": 167, "target_confidence": 18}, {"target_end_line": 28, "source_start_line": 89, "source_end_line": 28, "source_confidence": 5, "target_start_line": 94, "target_confidence": 18}]}, {"source": "alandunning_7008d0332cc28a826b37b3cf6e7bd998", "value": 45, "target": "Ananda90_c181d1fc7b6e5acd63f2155319387412", "links": [{"target_end_line": 40, "source_start_line": 1, "source_end_line": 40, "source_confidence": 94, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 46, "source_start_line": 41, "source_end_line": 45, "source_confidence": 94, "target_start_line": 42, "target_confidence": 88}, {"target_end_line": 40, "source_start_line": 1, "source_end_line": 40, "source_confidence": 94, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 46, "source_start_line": 41, "source_end_line": 45, "source_confidence": 94, "target_start_line": 42, "target_confidence": 88}]}, {"source": "davidgutierrez_858fa2687bc3067c6f1a58c944050709", "value": 14, "target": "dhoboy_116056d5a74c478c49058952fc14b98c", "links": [{"target_end_line": 24, "source_start_line": 36, "source_end_line": 41, "source_confidence": 6, "target_start_line": 20, "target_confidence": 9}, {"target_end_line": 52, "source_start_line": 69, "source_end_line": 73, "source_confidence": 6, "target_start_line": 44, "target_confidence": 9}, {"target_end_line": 24, "source_start_line": 36, "source_end_line": 41, "source_confidence": 6, "target_start_line": 20, "target_confidence": 9}, {"target_end_line": 52, "source_start_line": 69, "source_end_line": 73, "source_confidence": 6, "target_start_line": 44, "target_confidence": 9}]}, {"source": "davidgutierrez_858fa2687bc3067c6f1a58c944050709", "value": 14, "target": "dhoboy_8136f9742eac4dfa09643ee0d40fc1f9", "links": [{"target_end_line": 24, "source_start_line": 36, "source_end_line": 41, "source_confidence": 6, "target_start_line": 20, "target_confidence": 6}, {"target_end_line": 56, "source_start_line": 69, "source_end_line": 73, "source_confidence": 6, "target_start_line": 48, "target_confidence": 6}, {"target_end_line": 24, "source_start_line": 36, "source_end_line": 41, "source_confidence": 6, "target_start_line": 20, "target_confidence": 6}, {"target_end_line": 56, "source_start_line": 69, "source_end_line": 73, "source_confidence": 6, "target_start_line": 48, "target_confidence": 6}]}, {"source": "davidgutierrez_858fa2687bc3067c6f1a58c944050709", "value": 14, "target": "dhoboy_16e9d71cec3b05b4da60b977e44e5d25", "links": [{"target_end_line": 24, "source_start_line": 36, "source_end_line": 41, "source_confidence": 6, "target_start_line": 20, "target_confidence": 9}, {"target_end_line": 56, "source_start_line": 69, "source_end_line": 73, "source_confidence": 6, "target_start_line": 48, "target_confidence": 9}, {"target_end_line": 24, "source_start_line": 36, "source_end_line": 41, "source_confidence": 6, "target_start_line": 20, "target_confidence": 9}, {"target_end_line": 56, "source_start_line": 69, "source_end_line": 73, "source_confidence": 6, "target_start_line": 48, "target_confidence": 9}]}, {"source": "davidgutierrez_858fa2687bc3067c6f1a58c944050709", "value": 14, "target": "dhoboy_3b60a1892ecad3d5b28f71ab40ad5886", "links": [{"target_end_line": 24, "source_start_line": 36, "source_end_line": 41, "source_confidence": 6, "target_start_line": 20, "target_confidence": 10}, {"target_end_line": 56, "source_start_line": 69, "source_end_line": 73, "source_confidence": 6, "target_start_line": 48, "target_confidence": 10}, {"target_end_line": 24, "source_start_line": 36, "source_end_line": 41, "source_confidence": 6, "target_start_line": 20, "target_confidence": 10}, {"target_end_line": 56, "source_start_line": 69, "source_end_line": 73, "source_confidence": 6, "target_start_line": 48, "target_confidence": 10}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 13, "target": "dhoboy_1178601925731459c224bd4d69a1791d", "links": [{"target_end_line": 21, "source_start_line": 358, "source_end_line": 21, "source_confidence": 2, "target_start_line": 362, "target_confidence": 17}, {"target_end_line": 57, "source_start_line": 129, "source_end_line": 57, "source_confidence": 2, "target_start_line": 132, "target_confidence": 17}, {"target_end_line": 21, "source_start_line": 358, "source_end_line": 21, "source_confidence": 2, "target_start_line": 362, "target_confidence": 17}, {"target_end_line": 57, "source_start_line": 129, "source_end_line": 57, "source_confidence": 2, "target_start_line": 132, "target_confidence": 17}]}, {"source": "RicCheng_b467b5b6536dac8b215d22bbb2bb3662", "value": 12, "target": "davidgutierrez_858fa2687bc3067c6f1a58c944050709", "links": [{"target_end_line": 37, "source_start_line": 46, "source_end_line": 37, "source_confidence": 3, "target_start_line": 54, "target_confidence": 9}, {"target_end_line": 6, "source_start_line": 4, "source_end_line": 6, "source_confidence": 3, "target_start_line": 6, "target_confidence": 9}, {"target_end_line": 37, "source_start_line": 46, "source_end_line": 37, "source_confidence": 3, "target_start_line": 54, "target_confidence": 9}, {"target_end_line": 6, "source_start_line": 4, "source_end_line": 6, "source_confidence": 3, "target_start_line": 6, "target_confidence": 9}]}, {"source": "jymiller_aa20a376f8aa1f477cf275f680dd5253", "value": 11, "target": "sunilchandra007_e69797b98bcd56146a3d4d1ba6f1ecbc", "links": [{"target_end_line": 133, "source_start_line": 56, "source_end_line": 59, "source_confidence": 13, "target_start_line": 123, "target_confidence": 5}]}, {"source": "carlosfelipetorres_ddf6bfd96d1bdf9a90c1888c207b9318", "value": 14, "target": "Franramy_5e7efcb2c53be893f3c1be6f456cce30", "links": [{"target_end_line": 51, "source_start_line": 20, "source_end_line": 27, "source_confidence": 16, "target_start_line": 44, "target_confidence": 14}, {"target_end_line": 7, "source_start_line": 2, "source_end_line": 7, "source_confidence": 16, "target_start_line": 3, "target_confidence": 14}, {"target_end_line": 51, "source_start_line": 20, "source_end_line": 27, "source_confidence": 16, "target_start_line": 44, "target_confidence": 14}, {"target_end_line": 7, "source_start_line": 2, "source_end_line": 7, "source_confidence": 16, "target_start_line": 3, "target_confidence": 14}]}, {"source": "RicCheng_73aa51d457d0125e314260cbd6842153", "value": 13, "target": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "links": [{"target_end_line": 356, "source_start_line": 4, "source_end_line": 356, "source_confidence": 4, "target_start_line": 6, "target_confidence": 2}, {"target_end_line": 360, "source_start_line": 69, "source_end_line": 360, "source_confidence": 4, "target_start_line": 71, "target_confidence": 2}, {"target_end_line": 364, "source_start_line": 82, "source_end_line": 364, "source_confidence": 4, "target_start_line": 88, "target_confidence": 2}, {"target_end_line": 356, "source_start_line": 4, "source_end_line": 356, "source_confidence": 4, "target_start_line": 6, "target_confidence": 2}, {"target_end_line": 360, "source_start_line": 69, "source_end_line": 360, "source_confidence": 4, "target_start_line": 71, "target_confidence": 2}, {"target_end_line": 364, "source_start_line": 82, "source_end_line": 364, "source_confidence": 4, "target_start_line": 88, "target_confidence": 2}, {"target_end_line": 356, "source_start_line": 4, "source_end_line": 356, "source_confidence": 4, "target_start_line": 6, "target_confidence": 2}, {"target_end_line": 360, "source_start_line": 69, "source_end_line": 360, "source_confidence": 4, "target_start_line": 71, "target_confidence": 2}, {"target_end_line": 364, "source_start_line": 82, "source_end_line": 364, "source_confidence": 4, "target_start_line": 88, "target_confidence": 2}]}, {"source": "jarandaf_81d070043502ba36720536ce81803bf8", "value": 14, "target": "fotisz_a60c07f22b33597f80c303463c0fdd6b", "links": [{"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 93, "target_start_line": 14, "target_confidence": 93}]}, {"source": "RicCheng_b467b5b6536dac8b215d22bbb2bb3662", "value": 11, "target": "carlosfelipetorres_ddf6bfd96d1bdf9a90c1888c207b9318", "links": [{"target_end_line": 4, "source_start_line": 7, "source_end_line": 4, "source_confidence": 4, "target_start_line": 10, "target_confidence": 14}, {"target_end_line": 22, "source_start_line": 42, "source_end_line": 22, "source_confidence": 4, "target_start_line": 44, "target_confidence": 14}, {"target_end_line": 26, "source_start_line": 64, "source_end_line": 26, "source_confidence": 4, "target_start_line": 67, "target_confidence": 14}, {"target_end_line": 4, "source_start_line": 7, "source_end_line": 4, "source_confidence": 4, "target_start_line": 10, "target_confidence": 14}, {"target_end_line": 22, "source_start_line": 42, "source_end_line": 22, "source_confidence": 4, "target_start_line": 44, "target_confidence": 14}, {"target_end_line": 26, "source_start_line": 64, "source_end_line": 26, "source_confidence": 4, "target_start_line": 67, "target_confidence": 14}, {"target_end_line": 4, "source_start_line": 7, "source_end_line": 4, "source_confidence": 4, "target_start_line": 10, "target_confidence": 14}, {"target_end_line": 22, "source_start_line": 42, "source_end_line": 22, "source_confidence": 4, "target_start_line": 44, "target_confidence": 14}, {"target_end_line": 26, "source_start_line": 64, "source_end_line": 26, "source_confidence": 4, "target_start_line": 67, "target_confidence": 14}]}, {"source": "RicCheng_b467b5b6536dac8b215d22bbb2bb3662", "value": 11, "target": "carlosfelipetorres_1e477d3c4bca8daedbd6cce0af1e3567", "links": [{"target_end_line": 5, "source_start_line": 7, "source_end_line": 5, "source_confidence": 4, "target_start_line": 10, "target_confidence": 13}, {"target_end_line": 25, "source_start_line": 42, "source_end_line": 25, "source_confidence": 4, "target_start_line": 44, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 64, "source_end_line": 29, "source_confidence": 4, "target_start_line": 67, "target_confidence": 13}, {"target_end_line": 5, "source_start_line": 7, "source_end_line": 5, "source_confidence": 4, "target_start_line": 10, "target_confidence": 13}, {"target_end_line": 25, "source_start_line": 42, "source_end_line": 25, "source_confidence": 4, "target_start_line": 44, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 64, "source_end_line": 29, "source_confidence": 4, "target_start_line": 67, "target_confidence": 13}, {"target_end_line": 5, "source_start_line": 7, "source_end_line": 5, "source_confidence": 4, "target_start_line": 10, "target_confidence": 13}, {"target_end_line": 25, "source_start_line": 42, "source_end_line": 25, "source_confidence": 4, "target_start_line": 44, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 64, "source_end_line": 29, "source_confidence": 4, "target_start_line": 67, "target_confidence": 13}]}, {"source": "RicCheng_b467b5b6536dac8b215d22bbb2bb3662", "value": 11, "target": "carlosfelipetorres_658b04db6bcc17c65fe8050ecde99261", "links": [{"target_end_line": 5, "source_start_line": 7, "source_end_line": 5, "source_confidence": 4, "target_start_line": 10, "target_confidence": 13}, {"target_end_line": 25, "source_start_line": 42, "source_end_line": 25, "source_confidence": 4, "target_start_line": 44, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 64, "source_end_line": 29, "source_confidence": 4, "target_start_line": 67, "target_confidence": 13}, {"target_end_line": 5, "source_start_line": 7, "source_end_line": 5, "source_confidence": 4, "target_start_line": 10, "target_confidence": 13}, {"target_end_line": 25, "source_start_line": 42, "source_end_line": 25, "source_confidence": 4, "target_start_line": 44, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 64, "source_end_line": 29, "source_confidence": 4, "target_start_line": 67, "target_confidence": 13}, {"target_end_line": 5, "source_start_line": 7, "source_end_line": 5, "source_confidence": 4, "target_start_line": 10, "target_confidence": 13}, {"target_end_line": 25, "source_start_line": 42, "source_end_line": 25, "source_confidence": 4, "target_start_line": 44, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 64, "source_end_line": 29, "source_confidence": 4, "target_start_line": 67, "target_confidence": 13}]}, {"source": "fotisz_0ae06752972bffb47639d576f8ec1c96", "value": 54, "target": "markvital_89be160315aca0c92569aa93e883f4a1", "links": [{"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}]}, {"source": "fotisz_0ae06752972bffb47639d576f8ec1c96", "value": 54, "target": "markvital_d45fb2d9324dc785136b72f21b5e68b4", "links": [{"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}]}, {"source": "mashehu_de923d763a53d523596ba81c6d1f3233", "value": 11, "target": "RicCheng_b467b5b6536dac8b215d22bbb2bb3662", "links": [{"target_end_line": 10, "source_start_line": 62, "source_end_line": 64, "source_confidence": 9, "target_start_line": 7, "target_confidence": 4}, {"target_end_line": 44, "source_start_line": 78, "source_end_line": 80, "source_confidence": 9, "target_start_line": 42, "target_confidence": 4}, {"target_end_line": 67, "source_start_line": 80, "source_end_line": 84, "source_confidence": 9, "target_start_line": 64, "target_confidence": 4}, {"target_end_line": 10, "source_start_line": 62, "source_end_line": 64, "source_confidence": 9, "target_start_line": 7, "target_confidence": 4}, {"target_end_line": 44, "source_start_line": 78, "source_end_line": 80, "source_confidence": 9, "target_start_line": 42, "target_confidence": 4}, {"target_end_line": 67, "source_start_line": 80, "source_end_line": 84, "source_confidence": 9, "target_start_line": 64, "target_confidence": 4}, {"target_end_line": 10, "source_start_line": 62, "source_end_line": 64, "source_confidence": 9, "target_start_line": 7, "target_confidence": 4}, {"target_end_line": 44, "source_start_line": 78, "source_end_line": 80, "source_confidence": 9, "target_start_line": 42, "target_confidence": 4}, {"target_end_line": 67, "source_start_line": 80, "source_end_line": 84, "source_confidence": 9, "target_start_line": 64, "target_confidence": 4}]}, {"source": "mashehu_de923d763a53d523596ba81c6d1f3233", "value": 12, "target": "RicCheng_73aa51d457d0125e314260cbd6842153", "links": [{"target_end_line": 6, "source_start_line": 62, "source_end_line": 64, "source_confidence": 9, "target_start_line": 4, "target_confidence": 4}, {"target_end_line": 71, "source_start_line": 78, "source_end_line": 80, "source_confidence": 9, "target_start_line": 69, "target_confidence": 4}, {"target_end_line": 83, "source_start_line": 80, "source_end_line": 85, "source_confidence": 9, "target_start_line": 79, "target_confidence": 4}, {"target_end_line": 6, "source_start_line": 62, "source_end_line": 64, "source_confidence": 9, "target_start_line": 4, "target_confidence": 4}, {"target_end_line": 71, "source_start_line": 78, "source_end_line": 80, "source_confidence": 9, "target_start_line": 69, "target_confidence": 4}, {"target_end_line": 83, "source_start_line": 80, "source_end_line": 85, "source_confidence": 9, "target_start_line": 79, "target_confidence": 4}, {"target_end_line": 6, "source_start_line": 62, "source_end_line": 64, "source_confidence": 9, "target_start_line": 4, "target_confidence": 4}, {"target_end_line": 71, "source_start_line": 78, "source_end_line": 80, "source_confidence": 9, "target_start_line": 69, "target_confidence": 4}, {"target_end_line": 83, "source_start_line": 80, "source_end_line": 85, "source_confidence": 9, "target_start_line": 79, "target_confidence": 4}]}, {"source": "RicCheng_82e965adfb0ac2b147522497a51a6c50", "value": 11, "target": "mashehu_de923d763a53d523596ba81c6d1f3233", "links": [{"target_end_line": 82, "source_start_line": 26, "source_end_line": 82, "source_confidence": 15, "target_start_line": 30, "target_confidence": 8}, {"target_end_line": 67, "source_start_line": 3, "source_end_line": 67, "source_confidence": 15, "target_start_line": 7, "target_confidence": 8}, {"target_end_line": 82, "source_start_line": 26, "source_end_line": 82, "source_confidence": 15, "target_start_line": 30, "target_confidence": 8}, {"target_end_line": 67, "source_start_line": 3, "source_end_line": 67, "source_confidence": 15, "target_start_line": 7, "target_confidence": 8}]}, {"source": "emeeks_7669aa65a172bf69688ace5f6041223d", "value": 31, "target": "timelyportfolio_3cc50e732e46c2f275181c939d899234", "links": [{"target_end_line": 75, "source_start_line": 19, "source_end_line": 47, "source_confidence": 50, "target_start_line": 47, "target_confidence": 38}, {"target_end_line": 83, "source_start_line": 53, "source_end_line": 54, "source_confidence": 50, "target_start_line": 82, "target_confidence": 38}, {"target_end_line": 75, "source_start_line": 19, "source_end_line": 47, "source_confidence": 50, "target_start_line": 47, "target_confidence": 38}, {"target_end_line": 83, "source_start_line": 53, "source_end_line": 54, "source_confidence": 50, "target_start_line": 82, "target_confidence": 38}]}, {"source": "KaitoKid_adc477bc68e8d95e6517bf2767f4fadb", "value": 29, "target": "alandunning_7008d0332cc28a826b37b3cf6e7bd998", "links": [{"target_end_line": 25, "source_start_line": 36, "source_end_line": 25, "source_confidence": 46, "target_start_line": 47, "target_confidence": 40}, {"target_end_line": 39, "source_start_line": 53, "source_end_line": 39, "source_confidence": 46, "target_start_line": 62, "target_confidence": 40}, {"target_end_line": 12, "source_start_line": 18, "source_end_line": 12, "source_confidence": 46, "target_start_line": 24, "target_confidence": 40}, {"target_end_line": 25, "source_start_line": 36, "source_end_line": 25, "source_confidence": 46, "target_start_line": 47, "target_confidence": 40}, {"target_end_line": 39, "source_start_line": 53, "source_end_line": 39, "source_confidence": 46, "target_start_line": 62, "target_confidence": 40}, {"target_end_line": 12, "source_start_line": 18, "source_end_line": 12, "source_confidence": 46, "target_start_line": 24, "target_confidence": 40}, {"target_end_line": 25, "source_start_line": 36, "source_end_line": 25, "source_confidence": 46, "target_start_line": 47, "target_confidence": 40}, {"target_end_line": 39, "source_start_line": 53, "source_end_line": 39, "source_confidence": 46, "target_start_line": 62, "target_confidence": 40}, {"target_end_line": 12, "source_start_line": 18, "source_end_line": 12, "source_confidence": 46, "target_start_line": 24, "target_confidence": 40}]}, {"source": "sjesupaul_e04542b022e737661701837a471e5dbf", "value": 13, "target": "alandunning_cfb7dcd7951826b9eacd54f0647f48d3", "links": [{"target_end_line": 7, "source_start_line": 4, "source_end_line": 7, "source_confidence": 22, "target_start_line": 9, "target_confidence": 15}, {"target_end_line": 38, "source_start_line": 33, "source_end_line": 38, "source_confidence": 22, "target_start_line": 39, "target_confidence": 15}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 7, "source_confidence": 22, "target_start_line": 9, "target_confidence": 15}, {"target_end_line": 38, "source_start_line": 33, "source_end_line": 38, "source_confidence": 22, "target_start_line": 39, "target_confidence": 15}]}, {"source": "sjesupaul_e04542b022e737661701837a471e5dbf", "value": 20, "target": "alandunning_274bf248fd0f362d64674920e85c1eb7", "links": [{"target_end_line": 7, "source_start_line": 4, "source_end_line": 7, "source_confidence": 36, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 26, "source_start_line": 25, "source_end_line": 26, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 54, "source_end_line": 47, "source_confidence": 36, "target_start_line": 58, "target_confidence": 37}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 7, "source_confidence": 36, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 26, "source_start_line": 25, "source_end_line": 26, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 54, "source_end_line": 47, "source_confidence": 36, "target_start_line": 58, "target_confidence": 37}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 7, "source_confidence": 36, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 26, "source_start_line": 25, "source_end_line": 26, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 54, "source_end_line": 47, "source_confidence": 36, "target_start_line": 58, "target_confidence": 37}]}, {"source": "eric-bunch_9b313af64c04c1574681316282cd1ad1", "value": 17, "target": "sirwart_645e044e1df497c7287acbf1883eb945", "links": [{"target_end_line": 26, "source_start_line": 200, "source_end_line": 206, "source_confidence": 3, "target_start_line": 20, "target_confidence": 56}, {"target_end_line": 31, "source_start_line": 209, "source_end_line": 212, "source_confidence": 3, "target_start_line": 28, "target_confidence": 56}, {"target_end_line": 9, "source_start_line": 152, "source_end_line": 157, "source_confidence": 3, "target_start_line": 5, "target_confidence": 56}, {"target_end_line": 26, "source_start_line": 200, "source_end_line": 206, "source_confidence": 3, "target_start_line": 20, "target_confidence": 56}, {"target_end_line": 31, "source_start_line": 209, "source_end_line": 212, "source_confidence": 3, "target_start_line": 28, "target_confidence": 56}, {"target_end_line": 9, "source_start_line": 152, "source_end_line": 157, "source_confidence": 3, "target_start_line": 5, "target_confidence": 56}, {"target_end_line": 26, "source_start_line": 200, "source_end_line": 206, "source_confidence": 3, "target_start_line": 20, "target_confidence": 56}, {"target_end_line": 31, "source_start_line": 209, "source_end_line": 212, "source_confidence": 3, "target_start_line": 28, "target_confidence": 56}, {"target_end_line": 9, "source_start_line": 152, "source_end_line": 157, "source_confidence": 3, "target_start_line": 5, "target_confidence": 56}]}, {"source": "aldrejota_5134ffe02cd512940bb3b9e300c28acb", "value": 124, "target": "fotisz_0ae06752972bffb47639d576f8ec1c96", "links": [{"target_end_line": 144, "source_start_line": 210, "source_end_line": 272, "source_confidence": 70, "target_start_line": 82, "target_confidence": 90}, {"target_end_line": 81, "source_start_line": 169, "source_end_line": 209, "source_confidence": 70, "target_start_line": 40, "target_confidence": 90}, {"target_end_line": 22, "source_start_line": 145, "source_end_line": 163, "source_confidence": 70, "target_start_line": 4, "target_confidence": 90}, {"target_end_line": 144, "source_start_line": 210, "source_end_line": 272, "source_confidence": 70, "target_start_line": 82, "target_confidence": 90}, {"target_end_line": 81, "source_start_line": 169, "source_end_line": 209, "source_confidence": 70, "target_start_line": 40, "target_confidence": 90}, {"target_end_line": 22, "source_start_line": 145, "source_end_line": 163, "source_confidence": 70, "target_start_line": 4, "target_confidence": 90}, {"target_end_line": 144, "source_start_line": 210, "source_end_line": 272, "source_confidence": 70, "target_start_line": 82, "target_confidence": 90}, {"target_end_line": 81, "source_start_line": 169, "source_end_line": 209, "source_confidence": 70, "target_start_line": 40, "target_confidence": 90}, {"target_end_line": 22, "source_start_line": 145, "source_end_line": 163, "source_confidence": 70, "target_start_line": 4, "target_confidence": 90}]}, {"source": "ocarneiro_8b9f71d25102acfb6b010bcf0b66b447", "value": 12, "target": "jarandaf_81d070043502ba36720536ce81803bf8", "links": [{"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 74, "target_start_line": 12, "target_confidence": 90}]}, {"source": "ocarneiro_8b9f71d25102acfb6b010bcf0b66b447", "value": 12, "target": "jarandaf_43cc10cbcb4986b5124ca085aeedc2a9", "links": [{"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 74, "target_start_line": 12, "target_confidence": 90}]}, {"source": "john-guerra_32be58cf91f613d45c687095bad39432", "value": 124, "target": "aldrejota_5134ffe02cd512940bb3b9e300c28acb", "links": [{"target_end_line": 272, "source_start_line": 81, "source_end_line": 272, "source_confidence": 90, "target_start_line": 143, "target_confidence": 70}, {"target_end_line": 209, "source_start_line": 39, "source_end_line": 209, "source_confidence": 90, "target_start_line": 80, "target_confidence": 70}, {"target_end_line": 163, "source_start_line": 3, "source_end_line": 163, "source_confidence": 90, "target_start_line": 21, "target_confidence": 70}, {"target_end_line": 272, "source_start_line": 81, "source_end_line": 272, "source_confidence": 90, "target_start_line": 143, "target_confidence": 70}, {"target_end_line": 209, "source_start_line": 39, "source_end_line": 209, "source_confidence": 90, "target_start_line": 80, "target_confidence": 70}, {"target_end_line": 163, "source_start_line": 3, "source_end_line": 163, "source_confidence": 90, "target_start_line": 21, "target_confidence": 70}, {"target_end_line": 272, "source_start_line": 81, "source_end_line": 272, "source_confidence": 90, "target_start_line": 143, "target_confidence": 70}, {"target_end_line": 209, "source_start_line": 39, "source_end_line": 209, "source_confidence": 90, "target_start_line": 80, "target_confidence": 70}, {"target_end_line": 163, "source_start_line": 3, "source_end_line": 163, "source_confidence": 90, "target_start_line": 21, "target_confidence": 70}]}, {"source": "john-guerra_32be58cf91f613d45c687095bad39432", "value": 142, "target": "aldrejota_64de9fbf541f1e87580c2d07d4eae908", "links": [{"target_end_line": 523, "source_start_line": 23, "source_end_line": 523, "source_confidence": 98, "target_start_line": 143, "target_confidence": 32}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 98, "target_start_line": 21, "target_confidence": 32}, {"target_end_line": 523, "source_start_line": 23, "source_end_line": 523, "source_confidence": 98, "target_start_line": 143, "target_confidence": 32}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 98, "target_start_line": 21, "target_confidence": 32}]}, {"source": "john-guerra_32be58cf91f613d45c687095bad39432", "value": 143, "target": "aldrejota_aced8f7034616f7c4800a62e1db14cd4", "links": [{"target_end_line": 143, "source_start_line": 1, "source_end_line": 143, "source_confidence": 99, "target_start_line": 143, "target_confidence": 99}]}, {"source": "john-guerra_32be58cf91f613d45c687095bad39432", "value": 143, "target": "aldrejota_4022387132063d889f82956c6c18223c", "links": [{"target_end_line": 143, "source_start_line": 1, "source_end_line": 143, "source_confidence": 99, "target_start_line": 143, "target_confidence": 99}]}, {"source": "ssaleh2_7a1d58467409a9eb011be8bd6aec7866", "value": 11, "target": "sjesupaul_e04542b022e737661701837a471e5dbf", "links": [{"target_end_line": 7, "source_start_line": 6, "source_end_line": 7, "source_confidence": 12, "target_start_line": 9, "target_confidence": 19}, {"target_end_line": 39, "source_start_line": 58, "source_end_line": 39, "source_confidence": 12, "target_start_line": 64, "target_confidence": 19}, {"target_end_line": 7, "source_start_line": 6, "source_end_line": 7, "source_confidence": 12, "target_start_line": 9, "target_confidence": 19}, {"target_end_line": 39, "source_start_line": 58, "source_end_line": 39, "source_confidence": 12, "target_start_line": 64, "target_confidence": 19}]}, {"source": "ShantanuPhadke_fb435b1f08580450be0ae461b66358d8", "value": 62, "target": "KaitoKid_adc477bc68e8d95e6517bf2767f4fadb", "links": [{"target_end_line": 32, "source_start_line": 1, "source_end_line": 32, "source_confidence": 91, "target_start_line": 32, "target_confidence": 96}, {"target_end_line": 59, "source_start_line": 35, "source_end_line": 59, "source_confidence": 91, "target_start_line": 58, "target_confidence": 96}, {"target_end_line": 62, "source_start_line": 59, "source_end_line": 62, "source_confidence": 91, "target_start_line": 61, "target_confidence": 96}, {"target_end_line": 32, "source_start_line": 1, "source_end_line": 32, "source_confidence": 91, "target_start_line": 32, "target_confidence": 96}, {"target_end_line": 59, "source_start_line": 35, "source_end_line": 59, "source_confidence": 91, "target_start_line": 58, "target_confidence": 96}, {"target_end_line": 62, "source_start_line": 59, "source_end_line": 62, "source_confidence": 91, "target_start_line": 61, "target_confidence": 96}, {"target_end_line": 32, "source_start_line": 1, "source_end_line": 32, "source_confidence": 91, "target_start_line": 32, "target_confidence": 96}, {"target_end_line": 59, "source_start_line": 35, "source_end_line": 59, "source_confidence": 91, "target_start_line": 58, "target_confidence": 96}, {"target_end_line": 62, "source_start_line": 59, "source_end_line": 62, "source_confidence": 91, "target_start_line": 61, "target_confidence": 96}]}, {"source": "christopherni_42951cb434a66e3eff916e66961a8ec0", "value": 43, "target": "ShantanuPhadke_fb435b1f08580450be0ae461b66358d8", "links": [{"target_end_line": 32, "source_start_line": 1, "source_end_line": 32, "source_confidence": 95, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 43, "source_confidence": 95, "target_start_line": 35, "target_confidence": 66}, {"target_end_line": 32, "source_start_line": 1, "source_end_line": 32, "source_confidence": 95, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 43, "source_confidence": 95, "target_start_line": 35, "target_confidence": 66}]}, {"source": "allenwko_4ff3e1e268f0945e6ee4d88f6d74d520", "value": 31, "target": "eric-bunch_9b313af64c04c1574681316282cd1ad1", "links": [{"target_end_line": 268, "source_start_line": 56, "source_end_line": 68, "source_confidence": 38, "target_start_line": 256, "target_confidence": 7}, {"target_end_line": 167, "source_start_line": 32, "source_end_line": 39, "source_confidence": 38, "target_start_line": 162, "target_confidence": 7}, {"target_end_line": 272, "source_start_line": 68, "source_end_line": 72, "source_confidence": 38, "target_start_line": 268, "target_confidence": 7}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 38, "target_start_line": 1, "target_confidence": 7}, {"target_end_line": 268, "source_start_line": 56, "source_end_line": 68, "source_confidence": 38, "target_start_line": 256, "target_confidence": 7}, {"target_end_line": 167, "source_start_line": 32, "source_end_line": 39, "source_confidence": 38, "target_start_line": 162, "target_confidence": 7}, {"target_end_line": 272, "source_start_line": 68, "source_end_line": 72, "source_confidence": 38, "target_start_line": 268, "target_confidence": 7}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 38, "target_start_line": 1, "target_confidence": 7}, {"target_end_line": 268, "source_start_line": 56, "source_end_line": 68, "source_confidence": 38, "target_start_line": 256, "target_confidence": 7}, {"target_end_line": 167, "source_start_line": 32, "source_end_line": 39, "source_confidence": 38, "target_start_line": 162, "target_confidence": 7}, {"target_end_line": 272, "source_start_line": 68, "source_end_line": 72, "source_confidence": 38, "target_start_line": 268, "target_confidence": 7}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 38, "target_start_line": 1, "target_confidence": 7}, {"target_end_line": 268, "source_start_line": 56, "source_end_line": 68, "source_confidence": 38, "target_start_line": 256, "target_confidence": 7}, {"target_end_line": 167, "source_start_line": 32, "source_end_line": 39, "source_confidence": 38, "target_start_line": 162, "target_confidence": 7}, {"target_end_line": 272, "source_start_line": 68, "source_end_line": 72, "source_confidence": 38, "target_start_line": 268, "target_confidence": 7}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 38, "target_start_line": 1, "target_confidence": 7}]}, {"source": "allenwko_e4e7af8e140d693da724b66170c8012d", "value": 11, "target": "christopherni_42951cb434a66e3eff916e66961a8ec0", "links": [{"target_end_line": 24, "source_start_line": 11, "source_end_line": 19, "source_confidence": 7, "target_start_line": 14, "target_confidence": 23}]}, {"source": "allenwko_e4e7af8e140d693da724b66170c8012d", "value": 14, "target": "ssaleh2_7a1d58467409a9eb011be8bd6aec7866", "links": [{"target_end_line": 12, "source_start_line": 10, "source_end_line": 13, "source_confidence": 11, "target_start_line": 9, "target_confidence": 11}, {"target_end_line": 64, "source_start_line": 32, "source_end_line": 41, "source_confidence": 11, "target_start_line": 55, "target_confidence": 11}, {"target_end_line": 12, "source_start_line": 10, "source_end_line": 13, "source_confidence": 11, "target_start_line": 9, "target_confidence": 11}, {"target_end_line": 64, "source_start_line": 32, "source_end_line": 41, "source_confidence": 11, "target_start_line": 55, "target_confidence": 11}]}, {"source": "ssaleh2_3db31932ef72d3c4ae5bc3c982daa8e1", "value": 21, "target": "allenwko_e4e7af8e140d693da724b66170c8012d", "links": [{"target_end_line": 19, "source_start_line": 9, "source_end_line": 19, "source_confidence": 10, "target_start_line": 18, "target_confidence": 14}, {"target_end_line": 41, "source_start_line": 64, "source_end_line": 41, "source_confidence": 10, "target_start_line": 74, "target_confidence": 14}, {"target_end_line": 19, "source_start_line": 9, "source_end_line": 19, "source_confidence": 10, "target_start_line": 18, "target_confidence": 14}, {"target_end_line": 41, "source_start_line": 64, "source_end_line": 41, "source_confidence": 10, "target_start_line": 74, "target_confidence": 14}]}, {"source": "ssaleh2_3db31932ef72d3c4ae5bc3c982daa8e1", "value": 15, "target": "allenwko_4ff3e1e268f0945e6ee4d88f6d74d520", "links": [{"target_end_line": 9, "source_start_line": 9, "source_end_line": 9, "source_confidence": 7, "target_start_line": 12, "target_confidence": 14}, {"target_end_line": 48, "source_start_line": 64, "source_end_line": 48, "source_confidence": 7, "target_start_line": 74, "target_confidence": 14}, {"target_end_line": 9, "source_start_line": 9, "source_end_line": 9, "source_confidence": 7, "target_start_line": 12, "target_confidence": 14}, {"target_end_line": 48, "source_start_line": 64, "source_end_line": 48, "source_confidence": 7, "target_start_line": 74, "target_confidence": 14}]}, {"source": "lwthatcher_b7495612e87c29d6c6912329b84f3b81", "value": 18, "target": "ssaleh2_3db31932ef72d3c4ae5bc3c982daa8e1", "links": [{"target_end_line": 18, "source_start_line": 9, "source_end_line": 16, "source_confidence": 10, "target_start_line": 10, "target_confidence": 8}, {"target_end_line": 74, "source_start_line": 48, "source_end_line": 55, "source_confidence": 10, "target_start_line": 66, "target_confidence": 8}, {"target_end_line": 18, "source_start_line": 9, "source_end_line": 16, "source_confidence": 10, "target_start_line": 10, "target_confidence": 8}, {"target_end_line": 74, "source_start_line": 48, "source_end_line": 55, "source_confidence": 10, "target_start_line": 66, "target_confidence": 8}]}]}