{"nodes": [{"code": "<script>\n  // properties\n  var margin = {top: 20, right: 20, bottom: 20, left: 20};\n  var width = 800 - margin.left - margin.right;\n  var height = 600 - margin.top - margin.bottom;\n\n  var svg = d3.select('body').append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n  \t.append('g')\n  \t\t.attr('transform', 'translate(' + [margin.left, margin.top] + ')');\n  \n  var data;\n  var yScale = d3.scaleLinear();\n  var xScale = d3.scaleBand();\n  var duration = 1500;\n  var year = 1927;\n  \n  function update() {\n    var filteredData = data.filter(function(d) {\n      return d.year === year;\n    });\n    \n    var circles = svg.selectAll('circle')\n    \t.data(filteredData, function(d) {return d.gen + d.site});\n    \n    // remove exit selection\n    circles.exit()\n      .transition().duration(duration / 2)\n    \t.attr('r', 20)\n    \t.transition().duration(duration)\n    \t.attr('r', 0)\n      .remove();\n    \n    // create enter selection\n    // and then merge enter+update selections together\n    // set attribute on them\n    // currently, \"circles\" is our update selection\n    // \"enter\" is our enter selection\n    var enter = circles\n        .enter().append('circle')\n        .attr('cx', function(d) {return xScale(d.site);});\n    enter.transition()\n      .delay(function(d, i) {console.log(i, d); return i * 100})\n      .duration(duration)\n      .attr('r', 10)\n      .attr('cy', function(d) {return yScale(d.yield);})\n      .attr('cx', function(d) {return xScale(d.site);})\n      .attr('fill', function(d) {return colorScale(d.gen);});\n    \n    circles.transition()\n      \t.duration(duration)\n        .attr('r', 10)\n        .attr('cy', function(d) {return yScale(d.yield);})\n        .attr('cx', function(d) {return xScale(d.site);})\n        .attr('fill', function(d) {return colorScale(d.gen);});\n  };\n  \n  setInterval(function() {\n    year = year + 1;\n    if (year > 1936) {\n      year = 1927;\n    }\n    update();\n  }, duration * 2);\n  \n  d3.csv('barleyfull.csv', function(err, response) {\n    if (err) {\n      console.log(err);\n      return;\n    }\n    \n    response.forEach(function(d) {\n      // is this what we wanted to do?\n      d.yield = +d.yield;\n      d.year = +d.year;\n    });\n    \n    // create scales\n    var minMaxY = d3.extent(response, function(d) {return d.yield});\n    yScale.domain(minMaxY)\n    \t.range([height, 0]);\n    \n    var xDomain = response.map(function(d) {return d.site}); \n    xScale.domain(xDomain)\n    \t.rangeRound([0, width]);\n    colorScale = d3.scaleOrdinal(d3.schemeCategory20);\n    \n    data = response;\n  });\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n</script>", "description": "Metis Class 3 Starter Block 2", "created_at": "2016-11-03T01:47:16Z", "updated_at": "2016-11-03T01:47:16Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.csv", "d3.extent", "d3.scaleOrdinal"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/183c70739fd7ff333a9f6ceb9762b969'>Metis Class 3 Starter Block</a>\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/45f542968a6fbded8ba93ada05785754'>Metis Class 3 Starter Block 2</a>", "uid": "oliviac12_6f632412e58731ad3764fa95e3214c8f"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Collapsible Tree", "created_at": "2016-11-02T18:55:23Z", "updated_at": "2016-11-02T18:55:23Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a [Reingold\u2013Tilford tree](/4339184). Click on the nodes to expand or collapse.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>", "uid": "Adlopez2016_3c01e7c656d3231cf59266714852cadc"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Collapsible Tree", "created_at": "2016-11-02T18:17:43Z", "updated_at": "2016-11-02T18:34:19Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a [Reingold\u2013Tilford tree](/4339184). Click on the nodes to expand or collapse.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/3800cd1104e341bb40015a1dc3f8bbfb'>Collapsible Tree</a>", "uid": "Adlopez2016_d7e46ecf8505a81ee776c1c8d63c734e"}, {"code": "<script>\n  // properties\n  var margin = {top: 20, right: 20, bottom: 20, left: 20};\n  var width = 800 - margin.left - margin.right;\n  var height = 600 - margin.top - margin.bottom;\n\n  var svg = d3.select('body').append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n  \t.append('g')\n  \t\t.attr('transform', 'translate(' + [margin.left, margin.top] + ')');\n  \n  d3.csv('barleyfull.csv', function(err, response) {\n    if (err) {\n      console.log(err);\n      return;\n    }\n// yield string to integer (Q: WHY NOT YEAR?)    \n    response.forEach(function(d) {\n      d.yield = +d.yield;\n//    d.year = +d.year;\n    });\n    \n// create scales\n\n//     var minMaxY = d3.extent(response, function(d) {return d.yield});    \n//     var yScale = d3.scaleLinear()\n//     \t.domain(minMaxY)\n//     \t.range([height, 0]);\n    \n//     var xDomain = response.map(function(d) {return d.site});\n// // Q: WHY response.map AND NOT extent()?\n//     var xScale = d3.scaleBand()\n//     \t.domain(xDomain)\n//     \t.rangeRound([0, width]);\n// Q: WHY WON'T THIS WORK INSTEAD? (FROM EXAMPLE)   \n var xScale = d3.scaleBand()\n    .rangeRound([0, width]);\n var yScale = d3.scaleLinear()\n    .range([height, 0]);\n       var xDomain = response.map(function(d) {return d.site});\n    xScale.domain(xDomain);\n    var yDomain = d3.extent(response, function(d) {return d.yield});\n    yScale.domain(yDomain);    \n    \n    var colorScale = d3.scaleOrdinal(d3.schemeCategory20);\n    \n    // now let's filter like missy is saying\n    // filter is like map, so capture the result in a variable\n//     var filteredData = response.filter(function(d) {\n//       // make sure this is string (if we had converted to int\n//       // earlier, this should be int)\n//       return d.year === '1927';\n    });\n    \n    // select container, add child elements to it\n    // svg is main container, how to draw circles?\n//     var circles = svg.selectAll('circle')\n//     \t.data(filteredData)\n//     \t.enter().append('circle')\n//     \t.attr('r', 5)\n//     \t.attr('cy', function(d) {return yScale(d.yield);})\n//     \t.attr('cx', function(d) {return xScale(d.site);})\n//     \t.attr('fill', function(d) {return colorScale(d.gen);});\n  var data = [];\n  function update(year) {\n    var filteredData = data.filter(function(d) {\n      return d.year === year;\n    }\n    var circles = svg.selectAll('circle')\n      .data(filteredData, function(d) {return d.key});\n    var exit = circles.exit().remove();\n    var enter = circles.enter().append('circle')\n      .attr('r', radius);\n    circles = enter.merge(circles)\n      .attr('cx', function(d) {return xScale(d.site)})\n      .attr('cy', function(d) {return yScale(d.yield)})\n      .attr('fill', function(d) {return colorScale(d.gen)});\n  }\n  \n  });\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n</script>", "description": "Class 3 - practice", "created_at": "2016-11-02T16:58:09Z", "updated_at": "2016-11-03T01:51:39Z", "api": ["d3.select", "d3.csv", "d3.extent", "d3.scaleLinear", "d3.scaleBand", "d3.scaleOrdinal"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/183c70739fd7ff333a9f6ceb9762b969'>Metis Class 3 Starter Block</a>", "uid": "ohdebby_082cd95ccdce412091f60405f3842e0c"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Collapsible Tree", "created_at": "2016-11-02T06:54:22Z", "updated_at": "2016-11-02T06:54:22Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a [Reingold\u2013Tilford tree](/4339184). Click on the nodes to expand or collapse.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>\n\nforked from <a href='http://bl.ocks.org/john-guerra/'>john-guerra</a>'s block: <a href='http://bl.ocks.org/john-guerra/32be58cf91f613d45c687095bad39432'>Collapsible Tree</a>", "uid": "Adlopez2016_74436cb309936fdc2a35b1bb52b0333f"}, {"code": "<script>\n  // properties\n  var margin = {top: 20, right: 20, bottom: 20, left: 20};\n  var width = 800 - margin.left - margin.right;\n  var height = 600 - margin.top - margin.bottom;\n\n  var svg = d3.select('body').append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n  \t.append('g')\n  \t\t.attr('transform', 'translate('+[margin.left, margin.top + ')'])\n  \n  var data;\n  var yScale = d3.scaleLinear();\n  var xScale = d3.scaleBand();\n  var duration = 1500;\n  \n  function update(year) {\n    console.log(data)\n     var subset = data.filter(function(d){\n     return d.year === year;\n   });\n   \n   var circles = svg.selectAll('circle')\n   \t.data(subset, function(d) {return d.gen + d.site});\n    \n\n    //remove exit selection\n    var exit = circles.exit()\n         .transition().duration(duration)\n         .attr('r', 0)\n         .remove()\n    \n    remove()\n    \n    //enter selection, \n    var enter = circles.enter().append('circle')\n//     \t            .attr('cx', width)  coming from the right \n    \t\t\t\t\t\t\t.attr('cx',function(d) {return   xScale(d.site);}) \n    \t\t\t\t\t\t\t.attr('r', 20)\n    // where does it start to fall, only add to enter \n    \n    //add enter + update together\n    //set attribute on them\n    circles.merge(enter)\n    .transition().duration(duration)\n    .attr('r',5)\n    .attr('cy',function(d) {return yScale(d.yield);})\n    .attr('cx',function(d) {return xScale(d.site);})\n   \t.attr('fill', function(d) {return colorScale(d.gen);})\n   \n  }\n  \n//   setInterval(function(){\n//     year +=1;\n//     if (year > 1936){\n//       year = 1927;\n//     }\n//     update();\n//   }, duration * 2)\n  \n d3.csv(\"barleyfull.csv\", function(error, response) {\n  if (error) console.log(error);\n   \n   response.forEach(function(d){\n     d.yield = +d.yield;\n     d.year = +d.year;\n     \n   });\n   console.log(data);\n   var minMaxY = d3.extent(response,function(d){\n     return d.yield;\n   })\n   yScale \n   \t.domain(minMaxY)\n   \t.range([height, 0]);\n   \n   var xDomain = response.map(function(d){return d.site})\n   xScale \n   \t.domain(xDomain)\n   \t.rangeRound([0, width]);\n   \n   colorScale = d3.scaleOrdinal(d3.schemeCategory20)\n   \n\n   data = response;\n   \n   \n   \n });\n\n  \n</script>", "description": "Metis Class 3 Starter Block", "created_at": "2016-11-01T01:44:18Z", "updated_at": "2016-11-01T04:19:49Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.csv", "d3.extent", "d3.scaleOrdinal"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/183c70739fd7ff333a9f6ceb9762b969'>Metis Class 3 Starter Block</a>", "uid": "oliviac12_b6008dfc1b10a85bc7bfacd6b4522208"}, {"code": "<script>\n  \n  var\tmargin = {top: 20, right: 20, bottom: 30, left: 40},\n\t\t\touterWidth = 960,\n      outerHeight = 500,\n      width = outerWidth - margin.left - margin.right,\n      height = outerHeight - margin.top - margin.bottom,\n      svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", outerWidth)\n        .attr(\"height\", outerHeight),\n      g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"),\n      data = undefined,\n      serie,\n      serieEnter,\n      rect,\n      rectEnter;\n\n  var x = d3.scaleBand()\n  .rangeRound([0, width])\n  .padding(0.1)\n  .align(0.1);\n\n  var y = d3.scaleLinear()\n      .rangeRound([height, 0]);\n\n  var z = d3.scaleOrdinal()\n      .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\n  var stack = d3.stack();\n\n  d3.csv(\"data.csv\", type, function(error, iData) {\n    if (error) throw error;\n\n    data = iData;\n    data.sort(function(a, b) { return b.total - a.total; });\n\n    x.domain(data.map(function(d) { return d.State; }));\n    y.domain([0, d3.max(data, function(d) { return d.total; })]).nice();\n    z.domain(data.columns.slice(1));\n\t\t\n    // Button to generate new data.\n    g.append(\"rect\")\n    \t.attr(\"class\", \"btn-update-data\")\n    \t.attr(\"width\", 60)\n      .attr(\"height\", 20)\n      .attr(\"transform\", \"translate(\"+ (width-200) +\", 0)\")\n      .attr(\"fill\", \"red\")\n    \t.on(\"click\", function() {\n\t\t\t\tupdateChart(jumbleData(data), false);\n      });\n    \n    var legend = g.selectAll(\".legend\")\n      .data(data.columns.slice(1).reverse())\n      .enter().append(\"g\")\n        .attr(\"class\", \"legend\")\n        .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; })\n        .style(\"font\", \"10px sans-serif\");\n\n    legend.append(\"rect\")\n        .attr(\"x\", width - 18)\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .attr(\"fill\", z);\n\n    legend.append(\"text\")\n        .attr(\"x\", width - 24)\n        .attr(\"y\", 9)\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(function(d) { return d; });\n    \n    updateChart(data, true);\n\n  });\n  \n  // Update the chart with the specified data.\n  function updateChart(iData, initializing) {\n    console.log(\"************* ENTER-updateChart\")\n    console.log(\"iData\", iData)\n    \n    x.domain(iData.map(function(d) { return d.State; }));\n    y.domain([0, d3.max(iData, function(d) { return d.total; })]).nice();\n    \n    // ----------------------------------------------------------------\n    // SERIE\n    // ----------------------------------------------------------------\n    \n    // SERIE ENTER -----------------------\n    var stacks = stack.keys(iData.columns.slice(1))(iData);\n\n    console.log(\"stacks\", stacks);\n    \n    // flatten stacks array\n    var stackData = [];\n    for (var i = 0; i < stacks.length; i++) {\n      for (var j = 0; j < stacks[i].length; j++) {\n        stacks[i][j].key = stacks[i].key;\n//         var factor = Math.random() + 0.5;\n//         factor = factor <= 1 ? factor : factor - 1;\n//         var diff = Math.round(stacks[i][j][0] * factor);\n//         stacks[i][j][0] = stacks[i][j][0] - diff;\n        \n        stackData.push(stacks[i][j]);\n      }\n    }\n    \n    console.log(\"stackData\", stackData);\n        \n    if (initializing) {\n      // Parent bar\n      serieEnter = g.append(\"g\").attr(\"class\", \"rects\");\n    } else {\n      \n      serieEnter = g.select(\"g.rects\");\n      \n      rect = serieEnter.selectAll(\"rect.chart-rect\")\n              .data(stackData, function(d){ return d.data.State; });\n\n      \n      rect.enter().append(\"rect\")\n        .attr(\"class\", \"chart-rect\")\n        .attr(\"state\", function(d) {return d.data.State; })\n        .attr(\"fill\", function(d) {  return z(d.key)})\n        .attr(\"x\", function(d) { return x(d.data.State); })\n        .attr(\"y\", function(d) { return y(d[1]); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", 0)\n      \t.transition()\n      \t\t.duration(1000)\n          .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); });\n\n      rect\n        .attr(\"state\", function(d) {return d.data.State; })\n        .attr(\"fill\", function(d) {  return z(d.key)})\n        .attr(\"x\", function(d) { return x(d.data.State); })\n        .attr(\"y\", function(d) { return y(d[1]); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", 0)\n        .transition()\n          .duration(1000)\n          .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); });\n      \n      rect.exit()\n      \t.remove();\n      \n      /*\n      // 1. exit\n      var exitTransition = d3.transition().each(function() {\n        rect.exit()\n          .transition().duration(1000)\n            .style(\"opacity\", 0)\n            .remove();\n      });\n\n      // 2. update\n      console.log(\"update 1\", exitTransition.transition())\n      var updateTransition = exitTransition.transition().each(function() {\n\t\t\t\tconsole.log(\"update\", this)\n        rect\n          .attr(\"state\", function(d) {return d.data.State; })\n          .attr(\"fill\", function(d) {  return z(d.key)})\n          .attr(\"x\", function(d) { return x(d.data.State); })\n          .attr(\"y\", function(d) { return y(d[1]); })\n          .attr(\"width\", x.bandwidth())\n          .attr(\"height\", 0)\n          .transition().duration(1000)\n        \t\t.delay(function(d, i) { return i * 10; })\n            .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); });\n      });\n\n      // 3. enter\n      var enterTransition = updateTransition.transition().each(function() {\n        rect.enter().append(\"rect\")\n          .attr(\"class\", \"chart-rect\")\n          .attr(\"state\", function(d) {return d.data.State; })\n          .attr(\"fill\", function(d) {  return z(d.key)})\n          .attr(\"x\", function(d) { return x(d.data.State); })\n          .attr(\"y\", function(d) { return y(d[1]); })\n          .attr(\"width\", x.bandwidth())\n          .attr(\"height\", 0)\n          .transition().duration(1000)\n        \t\t.delay(function(d, i) { return i * 1000; })\n            .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); });\n      });\n      \n      */\n      \n    }\n\n    // ----------------------------------------------------------------\n    // AXES\n    // ----------------------------------------------------------------\n    \n    if (initializing) {\n      // X axis\n      g.append(\"g\")\n          .attr(\"class\", \"axis axis-x\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(d3.axisBottom(x));\n  \n      // Y axis\n      g.append(\"g\")\n          .attr(\"class\", \"axis axis-y\")\n          .call(d3.axisLeft(y).ticks(10, \"s\"))\n        .append(\"text\")\n          .attr(\"x\", 2)\n          .attr(\"y\", y(y.ticks(10).pop()))\n          .attr(\"dy\", \"0.35em\")\n          .attr(\"text-anchor\", \"start\")\n          .attr(\"fill\", \"#000\")\n          .text(\"Population\");\n    } else {\n//       // remove xAxis\n//       g.select(\"g.axis-x\").remove();\n      \n//       // X axis\n//       g.append(\"g\")\n//           .attr(\"class\", \"axis axis-x\")\n//           .attr(\"transform\", \"translate(0,\" + height + \")\")\n//           .call(d3.axisBottom(x));\n      \n\t\t  d3.transition(g).select(\"g.axis-x\").call(d3.axisBottom(x));\n      d3.transition(g).select(\"g.axis-y\").call(d3.axisLeft(y).ticks(10, \"s\"));\n      \n    }\n  }\n  \n  function jumbleData() {\n\t\t\n    console.log(\"*************** ENTER-jumbleData\")\n//     console.log(\"data\", data)\n    \n    var _result = undefined;\n    var _oldColumns = data.columns;\n    var _data = _.cloneDeep(data);\t\t// for some reason, clone() removes the 'columns' obj in iData, so we don't need to remove it after cloning... nice\n    var _numRandomStates = Math.floor(Math.random() * data.length);\n    \n    console.log(\"_data\", _data)\n    \n    _result = _.sampleSize(_data, _numRandomStates);\n    _result.columns = _oldColumns;\n    \n    console.log(\"_result\", _result)\n    \n    return _result;\n  }\n  \n/*\n  // Jumble the data so we can test transitioning to new data.\n  function jumbleData(iData) {\n\t\t\n//     console.log(\"*************** ENTER-jumbleData\")\n//     console.log(\"iData\", iData)\n    \n    var result = undefined;\n    var oldColumns = iData.columns;\n    var data = _.cloneDeep(iData);\t\t// for some reason, clone() removes the 'columns' obj in iData, so we don't need to remove it after cloning... nice\n    \n//     console.log(\"data\", data)\n        \n    for (var i = 0; i < data.length; i++) {\n\n//       console.log(\"------------- i\", i)\n      \n      var cur = data[i];      \n      var itemToSwapDataWith = _.sample(data)\n      \n//       console.log(\"cur\", cur)\n//       console.log(\"itemToSwapDataWith\", itemToSwapDataWith)\n      \n      // Swap state names for the 2 objects, so their data is swaped, essentially.\n      var curState = cur.State;\n      cur.State = itemToSwapDataWith.State;\n      itemToSwapDataWith.State = curState;\n\n//       console.log(\"----- SWAP -----\")\n//       console.log(\"cur\", cur)\n//       console.log(\"itemToSwapDataWith\", itemToSwapDataWith)\n\n    }\n    \n    data.columns = oldColumns;\n    result = data;\n    \n//     console.log(\"result\", result)\n    \n    return result;\n    \n  }\n*/\n\n  function type(d, i, columns) {\n    for (i = 1, t = 0; i < columns.length; ++i) t += d[columns[i]] = +d[columns[i]];\n    d.total = t;\n    return d;\n  }\n  \n</script>", "description": "Stacked Barchart with Transitions - v3", "created_at": "2016-10-31T21:29:23Z", "updated_at": "2016-11-01T00:26:06Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.stack", "d3.csv", "d3.max", "d3.transition", "d3.axisBottom", "d3.axisLeft"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/jcnesci/'>jcnesci</a>'s block: <a href='http://bl.ocks.org/jcnesci/6e3029c08d9f339910274422b72f9ca5'>Stacked Barchart with Transitions</a>", "uid": "jcnesci_913eaeb5c8807cbef4884319440e43c7"}, {"code": "<script>\nvar alphabet = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(32,\" + (height / 2) + \")\");\nfunction update(data) {\n  var t = d3.transition()\n      .duration(750);\n  // JOIN new data with old elements.\n  var text = g.selectAll(\"text\")\n    .data(data, function(d) { return d; });\n  // EXIT old elements not present in new data.\n  text.exit()\n      .attr(\"class\", \"exit\")\n    .transition(t)\n      .attr(\"y\", 60)\n      .style(\"fill-opacity\", 1e-6)\n      .remove();\n  // UPDATE old elements present in new data.\n  text.attr(\"class\", \"update\")\n      .attr(\"y\", 0)\n      .style(\"fill-opacity\", 1)\n    .transition(t)\n      .attr(\"x\", function(d, i) { return i * 32; });\n  // ENTER new elements present in new data.\n  text.enter().append(\"text\")\n      .attr(\"class\", \"enter\")\n      .attr(\"dy\", \".35em\")\n      .attr(\"y\", -60)\n      .attr(\"x\", function(d, i) { return i * 32; })\n      .style(\"fill-opacity\", 1e-6)\n      .text(function(d) { return d; })\n    .transition(t)\n      .attr(\"y\", 0)\n      .style(\"fill-opacity\", 1);\n}\n// The initial display.\nupdate(alphabet);\n// Grab a random sample of letters from the alphabet, in alphabetical order.\nd3.interval(function() {\n  update(d3.shuffle(alphabet)\n      .slice(0, Math.floor(Math.random() * 26))\n      .sort());\n}, 1500);\n</script>", "description": "fresh block", "created_at": "2016-10-31T04:20:23Z", "updated_at": "2016-10-31T04:20:23Z", "api": ["d3.select", "d3.transition", "d3.interval", "d3.shuffle"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "oliviac12_e1c862b986851427bb3107a1ca1b4683"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 60},\n    width = 2000 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x0 = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar x1 = d3.scale.ordinal();\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.ordinal()\n    .range([\"#db0700\", \"#ff8d6b\", \"#32fe23\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x0)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(d3.format(\".2s\"));\n\n  \nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n  \n// Cargue de los datos\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  var voteType = d3.keys(data[0]).filter(function(key) { return (key !== \"Depto\" & key !==\"Ganador\"); });\n\n   \n    // Sorting sentence, it works!\n    data.sort(function(a,b){\n       return b.VotoNo - a.VotoNo;\n    })\n    \n  \n  data.forEach(function(d) {\n    d.votes = voteType.map(function(name) { return {name: name, value: +d[name]}; });\n  });\n\n  x0.domain(data.map(function(d) { return d.Depto; }));\n  x1.domain(voteType).rangeRoundBands([0, x0.rangeBand()]);\n  y.domain([10, d3.max(data, function(d) { return d3.max(d.votes, function(d) { return d.value; }); })]);\n   \n  \n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n      .selectAll(\"text\")\n      .style(\"font-size\", \"10px\")\n      .style(\"text-anchor\", \"end\")\n      .style(\"font-weight\",\"bold\") \n        .attr(\"dx\", \"-.8em\")\n        .attr(\"dy\", \"-.55em\")\n        .attr(\"transform\", \"rotate(-25)\" );;\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Votacion\");\n\n  var Depto = svg.selectAll(\".Depto\")\n      .data(data)\n      .enter().append(\"g\")\n      .attr(\"class\", \"Depto\")\n      .attr(\"transform\", function(d) {\n         return \"translate(\" + x0(d.Depto) + \",0)\"; \n      });\n\n  Depto.selectAll(\"rectangle\")\n      .data(function(d) { return d.votes; })\n      .enter().append(\"rect\")\n      .attr(\"width\", x1.rangeBand())\n      .attr(\"x\", function(d) { return x1(d.name); })\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) {\n         return height - y(d.value) - 10;\n      })\n      .style(\"fill\", function(d) { return color(d.name); });\n\n var legend = svg.selectAll(\".legend\")\n      .data(voteType.slice().reverse())\n      .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\",width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n  \n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n  \n  \n \n  //Ordenar los valores\n   d3.select(\"input\").on(\"change\", change);\n\n  var sortTimeout = setTimeout(function() {\n    d3.select(\"input\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var xi = x0.domain(data.sort(!this.checked\n        ? function(a, b) { return b.VotoNo - a.VotoNo; }\n        : function(a, b) { return d3.ascending(a.Depto, b.Depto); })\n        .map(function(d) { return d.Depto; }))\n        .copy();\n\n    svg.selectAll(\".rectangle\")\n        .sort(function(a, b) { return xi(a.Depto) - xi(b.Depto); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".rectangle\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return xi(d.Depto); });\n\n    transition.select(\".x.axis\")\n        .call(xAxis)\n        .selectAll(\"g\")\n        .delay(delay);\n  }\n \n  \n  /*// Selector para filtrar por el ganador\n  var selector = d3.select(\"#drop\")\n      .append(\"select\")\n      .attr(\"id\",\"dropdown\")\n      .on(\"change\", function(d){\n          selection = document.getElementById(\"dropdown\");\n\n          y.domain([0, d3.max(data, function(d){\n        return +d[selection.value];})]);\n\n          yAxis.scale(y);\n\n          d3.selectAll(\".rectangle\")\n              .transition()\n              .attr(\"height\", function(d){\n          return height - y(+d[selection.value])\n          console.log(+d[selection.value]);\n        }).attr(\"fill\", getColor(selection.value))\n        .attr(\"x\", function(d, i){\n          return (width / data.length) * i ;\n        })\n        .attr(\"y\", function(d){\n          return y(+d[selection.value]);\n        })\n              .ease(\"linear\")\n              .select(\"title\")\n              .text(function(d){\n                return d.Ganador + \" : \" + d[selection.value];\n              });\n      \n            d3.selectAll(\"g.y.axis\")\n              .transition()\n              .call(yAxis);\n\n         });\n\n    selector.selectAll(\"option\")\n      .data(elements)\n      .enter().append(\"option\")\n      .attr(\"value\", function(d){\n        return d;\n      })\n      .text(function(d){\n        return d;\n      })\n    */\n  \n  \n\n});\n \n  \n  \n</script>", "description": "An\u00e1lisis Plebiscito x Depto", "created_at": "2016-10-31T00:51:30Z", "updated_at": "2016-11-02T04:51:36Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max", "d3.ascending", "d3.selectAll"], "readme": "<b>WHAT:</b>\n\nDataset: tabla\n\nData types:\n1.\t% de votos del NO: cuantitativo, secuencial\n2.\t% de votos del candidato uribista: cuantitativo, secuencial\n3.\t% de votos del SI: cuantitativo, secuencial\n4.\tMunicipio: categ\u00f3rico\n5.\tDepartamento: categ\u00f3rico\n6.\tCandidato que gan\u00f3 en la segunda vuelta: categ\u00f3rico\nDataset availability: Static\n\n<b>WHY:</b>\n\nTeniendo en cuenta la afirmaci\u00f3n de la silla vac\u00eda: <i>\"El uribismo s\u00ed fue determinante: Al comparar los resultados del No con los del candidato presidencial uribista \u00d3scar Iv\u00e1n Zuluaga en 2014, las coincidencias son muchas, especialmente con la segunda vuelta de esas elecciones.\"</i> La propuesta es realizar una visualizaci\u00f3n que permita confirmar dicha afirmaci\u00f3n:\n1.\tTask1: (Present, Distribution) Presentar la distribuci\u00f3n del % de votos del plebiscito (NO y SI) junto con el % de votos del candidato uribista, por departamento.\n2.\tTask2: (Discover, Correlation) Descubrir la correlaci\u00f3n, en aquellos lugares donde gan\u00f3 el NO, entre el % de votos del NO con el % de votos del candidato uribista en la 2\u00aa vuelta (se desea confirmar si la correlaci\u00f3n es positiva: donde el % de votos del NO fue mayor\u00eda, el % de votos del candidato uribista tambi\u00e9n fue mayor\u00eda).\n3.\tTask3: (Identify, Feature) Identificar el % de casos en los cuales la correlaci\u00f3n anterior es positiva, para confirmar o rechazar la hip\u00f3tesis planteada (que el uribismo fue determinante en la votaci\u00f3n del NO en el plebiscito).\n\n\n<b>HOW:</b>\n\n<p>Marca: l\u00ednea</p>\n<p>Canales:</p>\n\u2022\tLongitud\n\n\u2022\tColor (tono-hue)\n\n* Se usar\u00e1 el modismo de barchart, presentando en el eje X los departamentos y en el eje Y el % de votos en cada categor\u00eda. No se presentar\u00e1n los municipios por lo extenso que puede llegar a ser la visualizaci\u00f3n en el eje horizontal. Se presentar\u00e1n las barras que corresponden a los votos del SI, el NO y el candidato uribista, por departamento (Task1). Se adiciona un checkbox que permite ordenar los datos con el fin de facilitar el an\u00e1lisis.\n* Por cada departamento se van a alinear las barras de estas 3 categor\u00edas, con el fin de poder compararlas con respecto a su longitud. Los votos del NO estar\u00e1n representados en color rojo, los votos del SI en color verde, y los votos del candidato uribista en color rosado (Task2).\n* Al lado de las etiquetas de la derecha se colocar\u00e1 un n\u00famero que resume el % de casos en que la correlaci\u00f3n dio positiva (no aparece en el mockup, pero se tiene planeado). Task3.\n\n\n<b>Notas: </b>\nDebido a que no se utiliza el municipio por la cantidad de datos que tendr\u00edan que mostrarse en el eje horizontal, se utiliza el dato del departamento. Esto implica que hay que agregar los datos y, en el caso de los porcentajes, es necesario cambiar el campo por el # total de votos de cada categor\u00eda, ya que no es posible sumar % de votos por municipio para obtener el % de votos del departamento. \n\nAdicionalmente, la identificaci\u00f3n del ganador en la 2da vuelta de las elecciones tambi\u00e9n es necesario calcularla debido a la agregaci\u00f3n a nivel de departamento, ya que se tiene a nivel de municipio. A partir del # de votos para Zuluaga en la 2da vuelta, se dividi\u00f3 por el # de votos para Senado y se identific\u00f3 el %, si este es mayor a 50% se asumi\u00f3 como ganador a Zuluaga y, en caso contrario, a Santos.\n\nPara la Tarea 3, se compar\u00f3 por Depto los siguientes datos para evaluar la afirmaci\u00f3n de influencia del Uribismo:\n* Si el # de votos de Zuluaga es mayor que el # de votos por el SI, y el # de Votos por el NO es mayor que el # de votos por el SI, se determina influencia del Uribismo, y gana el NO.\n* Si el # de votos por el SI es mayor que el # de votos por el NO, y el # de Votos por el SI es mayor que el # de votos por Zuluaga, se determina influencia del Uribismo, y gana el SI.\n* Si ninguna de las condiciones anteriores se cumple, se determina que no hay influencia del Uribismo.\n\nFinalmente, se cuenta el n\u00famero de casos en cada grupo para comprobar la afirmaci\u00f3n. De los 33 departamentos, 9 tuvieron influencia del Uribismo y gan\u00f3 el NO. En 17 departamentos gan\u00f3 el SI, y se determin\u00f3 influencia del Uribismo por la asociaci\u00f3n entre los votos por Zuluaga y los votos por el NO. En 7 departamentos no se identifica influencia alguna por los resultados.\n\nCon estos hallazgos, se puede afirmar que si existi\u00f3 influencia del uribismo en la votaci\u00f3n por el plebiscito. No obstante, surge una nueva pregunta con respecto a por qu\u00e9 solo en 9 departamentos gan\u00f3 el No, y si en 17 donde hubo influencia gan\u00f3 el SI, por qu\u00e9 entonces en los resultados totales gan\u00f3 el NO? Posiblemente la respuesta est\u00e1 en cu\u00e1les son esos 9 departamentos, posiblemente tienen una poblaci\u00f3n y votaci\u00f3n considerablemente mayor en relaci\u00f3n a los otros 16.\n \n\n\n\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887051'>Grouped Bar Chart</a>\n", "uid": "emilioalvarado_5aa6a0fcc6815635b801f1f80289c677"}, {"code": "<script>\n\n    // Set the dimensions of the canvas / graph\n    var margin = {top: 30, right: 20, bottom: 30, left: 50},\n            width = 600 - margin.left - margin.right,\n            height = 270 - margin.top - margin.bottom;\n\n    // Parse the date / time\n    var parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n    // Set the ranges\n    var x = d3.time.scale().range([0, width]);\n    var y = d3.scale.linear().range([height, 0]);\n\n    // Define the axes\n    var xAxis = d3.svg.axis().scale(x)\n            .orient(\"bottom\").ticks(5);\n\n    var yAxis = d3.svg.axis().scale(y)\n            .orient(\"left\").ticks(5);\n\n    // Define the line\n    var valueline = d3.svg.line()\n            .x(function(d) { return x(d.date); })\n            .y(function(d) { return y(d.close); });\n\n    // Adds the svg canvas\n    var svg = d3.select(\"body\")\n            .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n                    \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // Get the data\n    d3.csv(\"data.csv\", function(error, data) {\n        data.forEach(function(d) {\n            d.date = parseDate(d.date);\n            d.close = +d.close;\n        });\n\n        // Scale the range of the data\n        x.domain(d3.extent(data, function(d) { return d.date; }));\n        y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n        // Add the valueline path.\n        svg.append(\"path\")\n                .attr(\"class\", \"line\")\n                .attr(\"d\", valueline(data));\n\n        // Add the scatterplot\n        svg.selectAll(\"dot\")\n                .data(data)\n                .enter().append(\"circle\")\n                .attr(\"r\", 3.5)\n                .attr(\"cx\", function(d) { return x(d.date); })\n                .attr(\"cy\", function(d) { return y(d.close); });\n\n        // Add the X Axis\n        svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xAxis);\n\n        // Add the Y Axis\n        svg.append(\"g\")\n                .attr(\"class\", \"y axis\")\n                .call(yAxis);\n\n    });\n\n</script>", "description": "9 - Simple scatterplot with d3.js", "created_at": "2016-10-30T16:47:15Z", "updated_at": "2016-10-30T16:47:15Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "adry34160_19d4c066df6f6b1e992296458d8e9d1f"}, {"code": "<script>\n\nconst pathColor = function (i) { return d3.interpolateLab(\"#00a9f8\", \"#ffeb3b\")(findCat(i)); };\n\nfunction findCat(category) {\n  if(category === \"saddest\")\n    return 0.2;\n  else if(category === \"sad\")\n    return 0.4;\n  else if(category === \"neutral\")\n    return 0.6;\n  else if(category === \"happy\")\n    return 0.8;\n  else if(category === \"happiest\")\n    return 1.0;\n  else\n    return 0;\n}\n\nvar diameter = 960,\n    radius = diameter / 2,\n    innerRadius = radius - 120;\n\nvar svg = d3.select(\"body\").append(\"center\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");\n\n\nvar cluster = d3.cluster()\n    .size([360, innerRadius])\n\nvar line = d3.radialLine()\n    .curve(d3.curveBundle.beta(0))\n    .radius(function(d) { return d.y; })\n    .angle(function(d) { return d.x / 180 * Math.PI; });\n\nfunction updateHierarchyEdge(data, year) {\n      var link = svg.append(\"g\").selectAll(\".link\"),\n      node = svg.append(\"g\").selectAll(\".node\");\n\n      data = data[0].years[year]\n      // remove previous data\n      d3.selectAll(\".node\")\n          .remove();\n      d3.selectAll(\".link\")\n          .remove();  \n      // package data into hierarchy format\n      \n      var hierarchy = d3.hierarchy(packageHierarchy(data))\n      var nodes = cluster(hierarchy).descendants()\n      var links = packageSongs(nodes);\n\n      // Generate nodes with song names around radius\n      var node_selection = node.data(nodes.filter(function(n) { return !n.data.children; }));\n      node_selection    \n          .enter().append(\"text\")\n          .attr(\"class\", \"node\")\n          .attr(\"dy\", \".34em\")\n          .on(\"click\", function(d){console.log(d.data.name, d.data.preview) })\n          .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + (d.y + 8) + \",0)\" + (d.x < 180 ? \"\" : \"rotate(180)\"); })\n          .style(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n          .style(\"font-size\", 12)\n          .text(function(d) { return d.data.name; })\n\n\n      // Create path connect the target and source nodes and color the path based on valence\n      var link_selection = link.data(links);\n      link_selection\n            .enter().append('path')\n            .attr('class', 'link')\n            .merge(link)\n            .attr('d', d => line(d.source.path(d.target)))\n            .attr(\"stroke-dasharray\", function() {\n                var totalLength = this.getTotalLength();\n                return totalLength + \" \" + totalLength;\n            })\n            .attr(\"stroke-dashoffset\", function() {\n                var totalLength = this.getTotalLength();\n                return totalLength;\n            })\n            .style(\"stroke\", d => pathColor(d.category))\n            .style(\"stroke-width\", 0.5)\n            .transition()\n                .duration(2000)\n                .attr(\"stroke-dashoffset\", 0);\n  \n\n}\n\n\n  \n// Lazily construct the package hierarchy from class names.\nfunction packageHierarchy(classes) {\n  var map = {};\n\n  function find(name, data) {\n    var node = map[name], i;\n    if (!node) {\n      node = map[name] = data || {name: name, children: []};\n      if (name.length) {\n        node.parent = find(name.substring(0, i = name.lastIndexOf(\".\")));\n        node.parent.children.push(node);\n        node.key = name.substring(i + 1);\n      }\n    }\n    return node;\n  }\n\n  classes.forEach(function(d) {\n    find(d.name, d);\n  });\n\n  return map[\"\"];\n}\n\n// Return a list of songs for the given array of nodes.\nfunction packageSongs(nodes) {\n  var map = {},\n      songs = [],\n      category = {};\n\n  // Compute a map from name to node.\n  nodes.forEach(function(d) {\n    map[d.data.name] = d;\n    category[d.data.name] = d.data.category;\n  });\n\n  // For each song, construct a link from the source to target node.\n  nodes.forEach(function(d) {\n    if (d.data.songs) d.data.songs.forEach(function(i) {\n      songs.push({source: map[d.data.name], target: map[i], category: category[d.data.name]});\n    });\n  });\n\n  return songs;\n}\n\n// creates the slider using d3\nfunction createSlider(yearBegin, yearEnd) {\n    d3.selectAll(\"input\").remove();\n    var slider = d3.select(\"body\").append(\"center\").append(\"p\").style(\"width\", \"800px\");\n    \n    slider\n      .append(\"input\")\n        .attr(\"class\",\"mdl-slider mdl-js-slider\")\n        .attr(\"onchange\", \"updateSliderValue(this.value)\")\n        .attr(\"type\", \"range\")\n        .attr(\"id\", \"s1\")\n        .attr(\"min\", yearBegin)\n        .attr(\"max\", yearEnd)\n        .attr(\"value\", \"4\")\n        .attr(\"step\", \"1\")\n        .attr(\"on \")\n\n    slider\n      .append(\"div\")\n        .attr(\"id\",\"message\")\n        .attr(\"font-type\", \"Roboto\")\n      \n  \n}\n   \ncreateSlider(1950,2015);\nupdateSliderValue(1950);\n  \n// updates the value of the slider and generates graph\nfunction updateSliderValue(value) {\n  document.getElementById(\"message\").innerHTML = value;\n  d3.json(\"result.json\", (error, data) => {\n      if (error) throw error;\n      if (value === 2013) value = 2014;\n      updateHierarchyEdge(data, value);\n});\n}\n</script>", "description": "Hierarchal Edge Bundle ", "created_at": "2016-10-30T01:43:19Z", "updated_at": "2016-11-01T02:46:57Z", "api": ["d3.interpolateLab", "d3.select", "d3.cluster", "d3.radialLine", "d3.curveBundle.beta", "d3.selectAll", "d3.hierarchy", "d3.json"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/aznmonkey/'>aznmonkey</a>'s block: <a href='http://bl.ocks.org/aznmonkey/06d1ee5a078e804ae213e6d0b0b6f9a5'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/91ad4b459f23218b41e64526638c1a05'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/codyjroberts/'>codyjroberts</a>'s block: <a href='http://bl.ocks.org/codyjroberts/21960abc496df011a8193fb305a7507f'>fresh block</a>", "uid": "aznmonkey_58c6aa6166f188105e7f912ef99f203f"}, {"code": "<script>\n  \n  var\tmargin = {top: 20, right: 20, bottom: 30, left: 40},\n\t\t\touterWidth = 960,\n      outerHeight = 500,\n      width = outerWidth - margin.left - margin.right,\n      height = outerHeight - margin.top - margin.bottom,\n      svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", outerWidth)\n        .attr(\"height\", outerHeight),\n      g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"),\n      data = undefined,\n      serie,\n      serieEnter,\n      rect,\n      rectEnter;\n\n  var x = d3.scaleBand()\n  .rangeRound([0, width])\n  .padding(0.1)\n  .align(0.1);\n\n  var y = d3.scaleLinear()\n      .rangeRound([height, 0]);\n\n  var z = d3.scaleOrdinal()\n      .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\n  var stack = d3.stack();\n\n  d3.csv(\"data.csv\", type, function(error, iData) {\n    if (error) throw error;\n\n    data = iData;\n    data.sort(function(a, b) { return b.total - a.total; });\n\n    x.domain(data.map(function(d) { return d.State; }));\n    y.domain([0, d3.max(data, function(d) { return d.total; })]).nice();\n    z.domain(data.columns.slice(1));\n\t\t\n    // Button to generate new data.\n    g.append(\"rect\")\n    \t.attr(\"class\", \"btn-update-data\")\n    \t.attr(\"width\", 60)\n      .attr(\"height\", 20)\n      .attr(\"transform\", \"translate(\"+ (width-200) +\", 0)\")\n      .attr(\"fill\", \"red\")\n    \t.on(\"click\", function() {\n\t\t\t\tupdateChart(jumbleData(data));\n      });\n    \n    var legend = g.selectAll(\".legend\")\n      .data(data.columns.slice(1).reverse())\n      .enter().append(\"g\")\n        .attr(\"class\", \"legend\")\n        .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; })\n        .style(\"font\", \"10px sans-serif\");\n\n    legend.append(\"rect\")\n        .attr(\"x\", width - 18)\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .attr(\"fill\", z);\n\n    legend.append(\"text\")\n        .attr(\"x\", width - 24)\n        .attr(\"y\", 9)\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(function(d) { return d; });\n    \n    updateChart(data);\n\n  });\n  \n  function updateChart(iData) {\n    \n    serie = g.selectAll(\".serie\") \n      .data(stack.keys(iData.columns.slice(1))(iData), function(d){ return d.State; });\n\n    serie.enter().append(\"g\") \n      .attr(\"class\", \"serie\")\n      .attr(\"fill\", function(d) { return z(d.key); });\n\n    serie.exit().remove(); \n\n//     var child = item.selectAll(\".child\") \n//           .data(function(item) { return item.children; }, function(child) \n//     { return child.childKey; });\n    rect = serie.selectAll(\".rect\")\n      .data(function(d) { return d; });\n\n    rect.merge().append(\"rect\") \n        .attr(\"class\", \"rect\") \n        .attr(\"x\", function(d) { return x(d.data.State); })\n        .attr(\"y\", function(d) { return y(d[1]); })\n        .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n        .attr(\"width\", x.bandwidth());\n\n    rect.exit().remove();\n    \n    // X axis\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    // Y axis\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--y\")\n        .call(d3.axisLeft(y).ticks(10, \"s\"))\n      .append(\"text\")\n        .attr(\"x\", 2)\n        .attr(\"y\", y(y.ticks(10).pop()))\n        .attr(\"dy\", \"0.35em\")\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"fill\", \"#000\")\n        .text(\"Population\");\n    \n  }\n  \n  // Update the chart with the specified data.\n  function updateChart2(iData) {\n    \n    console.log(\"************* ENTER-updateChart\")\n    console.log(\"iData\", iData)\n    \n    // ----------------------------------------------------------------\n    // SERIE\n    // ----------------------------------------------------------------\n    \n    // Parent bar\n    serie = g.selectAll(\".serie\")\n      .data(stack.keys(iData.columns.slice(1))(iData), function(d){ return d.State; });\n    \n    console.log(\"serie\", serie)\n    \n    // SERIE ENTER -----------------------\n    \n    serieEnter = serie.enter().append(\"g\")\n        .attr(\"class\", \"serie\")\n        .attr(\"fill\", function(d) { return z(d.key); });\n    \n//     rect = serieEnter.selectAll(\"rect\")\n//       .data(function(d) { return d; });\n    \n//     var rectEnter = rect.enter().append(\"rect\")\n//         .attr(\"x\", function(d) { return x(d.data.State); })\n//         .attr(\"y\", function(d) { return y(d[1]); })\n//         .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n//         .attr(\"width\", x.bandwidth())\n//     \t\t.style(\"opacity\", 0)\n//     \t\t.transition()\n// \t\t\t\t\t.style(\"opacity\", 1);\n    \n//     var rectUpdate = rect.transition()\n//       .attr(\"x\", function(d) { return x(d.data.State); })\n//       .attr(\"y\", function(d) { return y(d[1]); })\n//       .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n//       .attr(\"width\", x.bandwidth());\n    \n//     var rectExit = rect.exit()\n//     \t.transition()\n//     \t\t.style(\"opacity\", 0)\n//     \t\t.remove();\n    \n    // SERIE UPDATE -----------------------\n    \n    // Stacked child bars\n// \t\trect = serie.selectAll(\"rect\")\n//       .data(function(d) { return d; });\n      \n//     var rectEnter = rect.enter().append(\"rect\")\n//         .attr(\"x\", function(d) { return x(d.data.State); })\n//         .attr(\"y\", function(d) { return y(d[1]); })\n//         .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n//         .attr(\"width\", x.bandwidth())\n//     \t\t.style(\"opacity\", 0)\n//     \t\t.transition()\n// \t\t\t\t\t.style(\"opacity\", 1);\n    \n//     var rectUpdate = rect.transition()\n//       .attr(\"x\", function(d) { return x(d.data.State); })\n//       .attr(\"y\", function(d) { return y(d[1]); })\n//       .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n//       .attr(\"width\", x.bandwidth());\n    \n//     var rectExit = rect.exit()\n//     \t.transition()\n//     \t\t.style(\"opacity\", 0)\n//     \t\t.remove();\n\n    // AmeliaBR TEST * * * * * * *\n    \n    bar = serie.selectAll(\"rect\")\n      .data(function(d) { return d; });\n\n    // enter\n    //Amelia\n// \t\tbar.enter().append(\"rect\")\n//     \t.attr(\"fill\", function(d,i,j){\n//       \t  return colors(j);})\n// \t    .attr(\"height\", 0);\n    //Me\n    \tbar.enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.data.State); })\n        .attr(\"y\", function(d) { return y(d[1]); })\n        .attr(\"height\", 0)\n        .attr(\"width\", x.bandwidth())\n    \t\t.style(\"opacity\", 0)\n      \t.transition()\n          .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n          .style(\"opacity\", 1);\n\n    // update\n    //Amelia\n//     bar.attr(\"transform\", function(d, i, j) {\n//           x = \"translate(\"+(i*2.2*w+j*w)+\",0)\";\n//           return x; })\n//       .transition()\n//       .duration(750)\n//       .attr(\"width\", w)\n//       .attr(\"height\", function(d){return d*10;});\n    //Me\n    bar\n\t\t\t.transition()\n        .attr(\"x\", function(d) { return x(d.data.State); })\n        .attr(\"y\", function(d) { return y(d[1]); })\n        .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n        .attr(\"width\", x.bandwidth());\n\n    bar.exit()\n    \t.transition()\n    \t\t.style(\"opacity\", 0)\n    \t\t.remove();\n\n    // SERIE EXIT -----------------------\n    \n    var serieExit = serie.exit()\n    \t.transition()\n    \t\t.style(\"opacity\", 0)\n    \t\t.remove();\n    \n    // ----------------------------------------------------------------\n    // AXES\n    // ----------------------------------------------------------------\n    \n    // X axis\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    // Y axis\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--y\")\n        .call(d3.axisLeft(y).ticks(10, \"s\"))\n      .append(\"text\")\n        .attr(\"x\", 2)\n        .attr(\"y\", y(y.ticks(10).pop()))\n        .attr(\"dy\", \"0.35em\")\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"fill\", \"#000\")\n        .text(\"Population\");\n    \n  }\n  \n  // Jumble the data so we can test transitioning to new data.\n  function jumbleData(iData) {\n\t\t\n//     console.log(\"*************** ENTER-jumbleData\")\n//     console.log(\"iData\", iData)\n    \n    var result = undefined;\n    var oldColumns = iData.columns;\n    var data = _.cloneDeep(iData);\t\t// for some reason, clone() removes the 'columns' obj in iData, so we don't need to remove it after cloning... nice\n    \n//     console.log(\"data\", data)\n        \n    for (var i = 0; i < data.length; i++) {\n\n//       console.log(\"------------- i\", i)\n      \n      var cur = data[i];      \n      var itemToSwapDataWith = _.sample(data)\n      \n//       console.log(\"cur\", cur)\n//       console.log(\"itemToSwapDataWith\", itemToSwapDataWith)\n      \n      // Swap state names for the 2 objects, so their data is swaped, essentially.\n      var curState = cur.State;\n      cur.State = itemToSwapDataWith.State;\n      itemToSwapDataWith.State = curState;\n\n//       console.log(\"----- SWAP -----\")\n//       console.log(\"cur\", cur)\n//       console.log(\"itemToSwapDataWith\", itemToSwapDataWith)\n\n    }\n    \n    data.columns = oldColumns;\n    result = data;\n    \n//     console.log(\"result\", result)\n    \n    return result;\n    \n  }\n\n  function type(d, i, columns) {\n    for (i = 1, t = 0; i < columns.length; ++i) t += d[columns[i]] = +d[columns[i]];\n    d.total = t;\n    return d;\n  }\n  \n</script>", "description": "Stacked Barchart with Transitions - v2", "created_at": "2016-10-28T18:49:54Z", "updated_at": "2016-10-28T19:00:13Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.stack", "d3.csv", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jcnesci_7b7f534f7b5a8ef039f39f6a5907c5d2"}, {"code": "<script>\n            var marginTitle = { top: 20, left: 50},\n                mapWidth = 600,\n                mapHeight = 300;\n\n            var mapSvg = d3.select(\"#map-container\").append(\"svg\")\n                .attr(\"width\", mapWidth)\n                .attr(\"height\", mapHeight);\n\n            var title = mapSvg.append(\"text\")\n                .attr(\"class\", \"vis-title\")\n                .attr(\"transform\", \"translate(\" + marginTitle.left + \",\" + marginTitle.top + \")\")\n                .text(\"NYC Crimes (select a time range)\");\n\n            var projection = d3.geo.mercator() // mercator makes it easy to center on specific lat/long\n                .scale(30000)\n                .center([-73.8, 40.56]); // long, lat of NYC\n\n            var pathGenerator = d3.geo.path()\n                .projection(projection);\n\n            var colorScale  = d3.scale.category10();\n\n            var radiusScale = d3.scale.sqrt()\n                .range([2, 15]);\n\n            // Add the tooltip container to the vis container\n            // it's invisible and its position/contents are defined during mouseover\n            var tooltip = d3.select(\"#map-container\").append(\"div\")\n                .attr(\"class\", \"tooltip\")\n                .style(\"opacity\", 0);\n\n            // tooltip mouseover event handler\n            function tipMouseover(d) {\n                this.setAttribute(\"class\", \"circle-hover\"); // add hover class to emphasize\n\n                var color = colorScale(d.CR);\n                var html  = \"<span style='color:\" + color + \";'>\" + d.CR + \"</span><br/>\" +\n                            \"Count: \" + d.TOT + \"<br/>Date: \" + d.MO + \"/\" + d.YR;\n\n                tooltip.html(html)\n                    .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\")\n                  .transition()\n                    .duration(200) // ms\n                    .style(\"opacity\", .9) // started as 0!\n            };\n\n            // tooltip mouseout event handler\n            function tipMouseout(d) {\n                this.classList.remove(\"circle-hover\"); // remove hover class\n\n                tooltip.transition()\n                    .duration(500) // ms\n                    .style(\"opacity\", 0); // don't care about position!\n            };\n\n            makeMap();\n\n            function makeMap() {\n                d3.json(\"./boroughs.geo.json\", function(error, boroughs) {\n                    if (error) return console.error(error);\n\n                    mapSvg.selectAll(\"path\")\n                        .data(boroughs.features)\n                      .enter().append(\"path\")\n                        .attr(\"class\", \"boroughs\")\n                        .attr(\"d\", pathGenerator);\n\n                    getCrimeData();\n                });\n            }\n\n            // Loads and munges NYC crime data.\n            // Calls updateMapPoints() and makeLegend()\n            function getCrimeData() {\n                d3.csv(\"./NYC_crime_sampled-with-random-days_n10000.csv\", function(error, dataForMap) {\n                    if (error) return console.error(error);\n\n                    var parseMonthDayYear = d3.time.format(\"%m/%d/%Y\").parse;\n\n                    var dataForTimeline = [],\n                        dateToCrimeCount = {};\n\n                    dataForMap.forEach(function(d, idx) {\n                        d.TIME = parseMonthDayYear(d.TIME);\n                        d.TOT = +d.TOT;\n                        d.latitude = +d.latitude;\n                        d.longitude = +d.longitude;\n                        colorScale(d.CR);\n\n                        if (!dateToCrimeCount[d.TIME]) {\n                            dateToCrimeCount[d.TIME] = d.TOT;\n                        } else {\n                            dateToCrimeCount[d.TIME] += d.TOT;\n                        }\n                    });\n                    Object.keys(dateToCrimeCount).forEach(function(time) {\n                        dataForTimeline.push({ TIME: new Date(time), TOT: dateToCrimeCount[time] });\n                    });\n                    dataForTimeline.sort(function(a,b) { return a.TIME - b.TIME; });\n\n                    radiusScale.domain(d3.extent(dataForMap, function(crime) { return +crime.TOT; }));\n\n                    makeTimeline(dataForMap, dataForTimeline);\n                    makeLegend();\n                });\n            };\n\n            // Creates the event timeline and sets up callbacks for brush changes\n            function makeTimeline(dataForMap, dataForTimeline) {\n                var margin = { top: 10, right: 10, bottom: 20, left: 25 },\n                    width  = mapWidth - margin.left - margin.right,\n                    height = 80 - margin.top  - margin.bottom;\n\n                var timelineSvg = d3.select(\"#timeline-container\").append(\"svg\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom);\n\n                var timeline = timelineSvg.append(\"g\")\n                    .attr(\"class\", \"timeline\")\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n                var x = d3.time.scale()\n                    .domain(d3.extent(dataForTimeline.map(function(d) { return d.TIME; })))\n                    .range([0, width]);\n\n                var y = d3.scale.linear()\n                    .domain(d3.extent(dataForTimeline.map(function(d) { return d.TOT; })))\n                    .range([height, 0]);\n\n                var xAxis = d3.svg.axis()\n                    .scale(x)\n                    .orient(\"bottom\");\n\n                var yAxis = d3.svg.axis()\n                    .scale(y)\n                    .orient(\"left\")\n                    .ticks(2);\n\n                var area = d3.svg.area()\n                    .interpolate(\"linear\")\n                    .x(function(d) { return x(d.TIME); })\n                    .y0(height)\n                    .y1(function(d) { return y(d.TOT); });\n\n                timeline.append(\"path\")\n                    .datum(dataForTimeline)\n                    .attr(\"class\", \"area\")\n                    .attr(\"d\", area);\n\n                timeline.append(\"g\")\n                    .attr(\"class\", \"x axis\")\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\n                    .call(xAxis);\n\n                timeline.append(\"g\")\n                    .attr(\"class\", \"y axis\")\n                    .call(yAxis);\n\n                timeline.append(\"text\")\n                    .attr(\"transform\", \"rotate(-90)\")\n                    .attr(\"dy\", \"1em\")\n                    .style(\"text-anchor\", \"end\")\n                    .text(\"# Crimes\");\n\n                // Add brush to timeline, hook up to callback\n                var brush = d3.svg.brush()\n                    .x(x)\n                    .on(\"brush\", function() { brushCallback(brush, dataForMap); })\n                    .extent([new Date(\"12/1/2013\"), new Date(\"1/1/2014\")]); // initial value\n\n                timeline.append(\"g\")\n                    .attr(\"class\", \"x brush\")\n                    .call(brush)\n                  .selectAll(\"rect\")\n                    .attr(\"y\", -6)\n                    .attr(\"height\", height + 7);\n\n                brush.event(timeline.select('g.x.brush')); // dispatches a single brush event\n            };\n\n            // Called whenever the timeline brush range (extent) is updated\n            // Filters the map data to those points that fall within the selected timeline range\n            function brushCallback(brush, dataForMap) {\n                if (brush.empty()) {\n                    updateMapPoints([]);\n                    updateTitleText();\n                } else {\n                    var newDateRange = brush.extent(),\n                        filteredData = [];\n\n                    dataForMap.forEach(function(d) {\n                        if (d.TIME >= newDateRange[0] && d.TIME <= newDateRange[1]) {\n                            filteredData.push(d);\n                        }\n                    });\n                    updateMapPoints(filteredData);\n                    updateTitleText(newDateRange);\n                }\n            }\n\n            // Updates the vis title text to include the passed date array: [start Date, end Date]\n            function updateTitleText(newDateArray) {\n                if (!newDateArray) {\n                    title.text(\"NYC Crimes (select a time range)\");\n                } else {\n                    var from = (newDateArray[0].getMonth() + 1) + \"/\" +\n                               (newDateArray[0].getDay() + 1) + \"/\" +\n                               newDateArray[0].getFullYear(),\n                        to =   (newDateArray[1].getMonth() + 1) + \"/\" +\n                               (newDateArray[1].getDay() + 1) + \"/\" +\n                               newDateArray[1].getFullYear();\n                    title.text(\"NYC Crimes \" + from + \" - \" + to);\n                }\n            }\n\n            // Updates the points displayed on the map, to those in the passed data array\n            function updateMapPoints(data) {\n                var circles = mapSvg.selectAll(\"circle\").data(data, function(d) { return d.TIME + d.TOT; });\n\n                circles // update existing points\n                    .on(\"mouseover\", tipMouseover)\n                    .on(\"mouseout\", tipMouseout)\n                    .attr(\"fill\", function(d) { return colorScale(d.CR); })\n                    .attr(\"cx\", function(d) { return projection([+d.longitude, +d.latitude])[0]; })\n                    .attr(\"cy\", function(d) { return projection([+d.longitude, +d.latitude])[1]; })\n                    .attr(\"r\",  function(d) { return radiusScale(+d.TOT); });\n\n                circles.enter().append(\"circle\") // new entering points\n                    .on(\"mouseover\", tipMouseover)\n                    .on(\"mouseout\", tipMouseout)\n                    .attr(\"fill\", function(d) { return colorScale(d.CR); })\n                    .attr(\"cx\", function(d) { return projection([+d.longitude, +d.latitude])[0]; })\n                    .attr(\"cy\", function(d) { return projection([+d.longitude, +d.latitude])[1]; })\n                    .attr(\"r\",  0)\n                  .transition()\n                    .duration(500)\n                    .attr(\"r\",  function(d) { return radiusScale(+d.TOT); });\n\n                circles.exit() // exiting points\n                    .attr(\"r\",  function(d) { return radiusScale(+d.TOT); })\n                  .transition()\n                    .duration(500)\n                    .attr(\"r\", 0).remove();\n            };\n\n            // Creates a legend showing the mapping from crime type to color\n            // **nb: the domain of colorScale should include all crime types when this is called\n            function makeLegend() {\n                var margin = { top: 50, left: -40 },\n                    legendWidth  = 250,\n                    legendHeight = 150;\n\n                var legend = mapSvg.append('g')\n                    .attr('width', legendWidth)\n                    .attr('height', legendHeight)\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n                var legends = legend.selectAll(\".legend\")\n                    .data(colorScale.domain())\n                  .enter().append(\"g\")\n                    .attr(\"class\", \"legend\")\n                    .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n                // draw legend colored rectangles\n                legends.append(\"rect\")\n                    .attr(\"x\", legendWidth - 18)\n                    .attr(\"width\", 18)\n                    .attr(\"height\", 18)\n                    .style(\"fill\", colorScale);\n\n                // draw legend text\n                legends.append(\"text\")\n                    .attr(\"x\", legendWidth - 24)\n                    .attr(\"y\", 9)\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"end\")\n                    .text(function(d) { return d.toLowerCase(); });\n            };\n        </script>", "description": "Linking map data to an interactive timeline in d3", "created_at": "2016-10-28T09:40:50Z", "updated_at": "2016-10-28T09:40:51Z", "api": ["d3.select", "d3.geo.mercator", "d3.geo.path", "d3.scale.category10", "d3.scale.sqrt", "d3.json", "d3.csv", "d3.time.format", "d3.extent", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.svg.brush"], "readme": "\n\nforked from <a href='http://bl.ocks.org/williaster/'>williaster</a>'s block: <a href='http://bl.ocks.org/williaster/83419dc5b04f7a6f98f4'>Linking map data to an interactive timeline in d3</a>", "uid": "domhorvath_dd850c5e97d4022fbf0f11611a0cf528"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n     = 2 * Math.PI,\n    maxLength = 10000,\n    maxLength2 = maxLength * maxLength,\n    minDistance = 50,\n    maxDistance = 70,\n    minDistance2 = minDistance * minDistance,\n    maxDistance2 = maxDistance * maxDistance;\n\nvar randomHue = 100// * Math.random();\nvar randomSaturation = 50// * Math.random();\nvar randomLightness = 20// * Math.random();\n  \nvar nodes = d3.range(300).map(function() {\n  return {\n    x: Math.random() * width,\n    y: Math.random() * height\n  };\n});\n  \nvar voronoi = d3.voronoi()\n  .x(function(d) { return d.x; })\n  .y(function(d) { return d.y; });\n  \nvar diagram = voronoi(nodes);\nvar polygons = voronoi.polygons(nodes)\n\nvar links = urquhart(diagram);\nconsole.log(\"POLYGONS\", polygons)\n\n\nvar force = d3.forceSimulation()\n    .nodes(nodes.slice())\n    //.force(\"link\", d3.forceLink().id(function(d) { return d.id; }).distance(40).strength(100))\n    .force(\"charge\", d3.forceManyBody().strength(function(d,i){\n      return i ? -35 : -1000\n    }))\n    //.force(\"x\", d3.forceX())\n    .force(\"y\", d3.forceY())\n    .force(\"center\", d3.forceCenter(width / 2, height / 2))\n    .on(\"tick\", ticked);\n\n\nvar canvas = d3.select(\"body\").append(\"canvas\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .on(\"ontouchstart\" in document ? \"touchmove\" : \"mousemove\", moved);\n\nvar context = canvas.node().getContext(\"2d\");\ncontext.globalCompositeOperation = \"screen\";\ncontext.lineJoin = \"round\"\n\nfunction moved() {\n  var p1 = d3.mouse(this);\n  nodes[0].fx = p1[0];\n  nodes[0].fy = p1[1];\n  force.alpha(0.1).restart();\n}\n\n  \nfunction urquhart(diagram){\n    var urquhart = d3.map();\n    diagram.links()\n    .forEach(function(link) {\n      var v = d3.extent([link.source.index, link.target.index]);\n      urquhart.set(v, link);\n    });\n    urquhart._remove = [];\n    diagram.triangles()\n    .forEach(function(t) {\n\n      var l = 0, length = 0, i=\"bleh\", v;\n      for (var j=0; j<3; j++) {\n        var a = t[j], b = t[(j+1)%3];\n        v = d3.extent([a.index, b.index]);\n        length = (a.x-b.x) * (a.x-b.x) + (a.y-b.y) * (a.y-b.y);\n        if (length > l) {\n          l = length;\n          i = v;\n        }\n      }\n      urquhart._remove.push(i);\n    });\n     //console.log(JSON.stringify(urquhart._remove))\n    urquhart._remove.forEach(function(i) {\n      if (urquhart.has(i)) urquhart.remove(i);\n    });\n    return urquhart.values();\n  }\n\n\n\n  \nfunction ticked() {\n  var diagram = voronoi(nodes);\n  var polygons = voronoi.polygons(nodes)\n  //var links = diagram.links();\n  var links = urquhart(diagram);\n  var dlen = links.length\n  var plen = polygons.length\n  \n  context.clearRect(0, 0, width, height);\n  context.fillStyle=\"#111\";\n  context.fillRect(0, 0, width, height);\n  \n  var hue = 2;\n  var hue1 = (hue + randomHue) % 360;\n  var hue2 = (hue + randomHue + 260) % 360;\n  var interpolate = d3.interpolateHcl(d3.hcl(hue1, 50, 95), d3.hcl(hue2, 20 + randomSaturation, 20+ randomLightness));\n  \n  context.globalAlpha = 0.5;\n  \n  for (var i = 0, n = polygons.length; i < n; ++i) {    \n    context.strokeStyle = interpolate(i/plen);\n    context.beginPath();\n    drawCell(polygons[i]);\n    //context.strokeStyle = \"#aaa\";\n    context.lineWidth = 5;\n    context.stroke();\n  } \n  \n  for (var i = 0, n = links.length; i < n; ++i) {\n    var link = links[i],\n        dx = link.source.x - link.target.x,\n        dy = link.source.y - link.target.y;\n    var d2 = dx * dx + dy * dy\n    if (d2 < maxLength2) {\n      var ratio = d2 > minDistance2 ? (maxDistance2 - d2) / (maxDistance2 - minDistance2) : 0.5;\n      var rease = d3.easeCubic(ratio);\n      context.globalAlpha = rease\n      context.beginPath();\n      context.moveTo(link.source.x, link.source.y);\n      context.lineTo(link.target.x, link.target.y);\n      context.lineWidth = 5;\n      context.strokeStyle = interpolate(i/dlen);\n      context.stroke();\n    }\n  }\n  context.globalAlpha = 1;\n  \n\n  /*\n  context.lineWidth = 2;\n  context.beginPath();\n  for (var i = 0, n = nodes.length; i < n; ++i) {\n    var node = nodes[i];\n    context.moveTo(node.x, node.y);\n    context.arc(node.x, node.y, 2, 0, );\n  }\n  \n\n  context.strokeStyle = \"#fff\";\n  context.stroke();\n  context.fillStyle = \"#000\";\n  context.fill();\n  */\n}\n  \nfunction drawCell(cell) {\n  if (!cell || !cell[0]) return false;\n  var x, y;\n  \n  x = cell[0][0];\n  y = cell[0][1];\n  if(x > width - 5) x = width-5;\n  if(x < 5) x = 5;\n  if(y > height - 5) y = height - 5;\n  if(y < 5) y = 5;\n  context.moveTo(x, y);\n  \n  for (var j = 1, m = cell.length; j < m; ++j) {\n    if(!cell[j]) continue;\n    x = cell[j][0];\n    y = cell[j][1];\n    if(x > width) x = width-5;\n    if(x < 5) x = 5;\n    if(y > height - 5) y = height - 5;\n    if(y < 5) y = 5;\n    context.lineTo(x, y);\n  }\n  context.closePath();\n  return true;\n}\n\n</script>", "description": "Urquhart Spider Web", "created_at": "2016-10-23T04:18:58Z", "updated_at": "2016-10-23T05:12:25Z", "api": ["d3.range", "d3.voronoi", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceX", "d3.forceY", "d3.forceCenter", "d3.select", "d3.mouse", "d3.map", "d3.extent", "d3.interpolateHcl", "d3.hcl", "d3.easeCubic"], "readme": "Some force-directed points, with the Urquhart graph overlaid. Thanks @enjalot for the idea and time wasted :)\n\n\nForked from <a href='http://bl.ocks.org/erlenstar/'>erlenstar</a>'s block: <a href='http://bl.ocks.org/erlenstar/0ba5ee8bd3773d70462523679d4ef5a4'>Delaunay Force Mesh II</a>\n\nforked from <a href='http://bl.ocks.org/Fil/'>Fil</a>'s block: <a href='http://bl.ocks.org/Fil/56c02237d9951c4bb12ed41cf64d6e4c'>Urquhart Force Mesh</a>", "uid": "enjalot_c143873af5e73f0e3fcca52ab78081e8"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar LINK_WEIGHT_PROPS = {\n  '-2': {color: 'red',   opacity: 0.8},\n  '-1': {color: 'red',   opacity: 0.2},\n  '0' : {color: 'black', opacity: 0.1},\n  '1' : {color: 'green', opacity: 0.2},\n  '2' : {color: 'green', opacity: 0.8},\n};\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20);\n\nvar linkLogic = d3.forceLink()\n\t.id(function(d) { return d.id; })\n  .distance(link => (4 - (link.weight + 2)) * 100 )\n  .strength(0.2);\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", linkLogic)\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\nmain();\n  \nfunction main() {\n\tvar range = 20\n  var data = {\n    nodes: d3.range(0, range).map(function(d){\n      return {id: \"l\"+d, r:~~d3.randomUniform(8, 28)()}\n    }),\n    links:d3.range(0, range * 3).map(function(){\n      return {\n        weight: ~~d3.randomUniform(-3, 3)(),\n        source:\"l\"+~~d3.randomUniform(range)(),\n        target:\"l\"+~~d3.randomUniform(range)()\n      };\n\t\t})        \n\t};\n        \n  // setSize(data)\n  drawChart(data)    \n}\n  \nfunction drawChart(graph) {\n//  console.log('link',  d3.extent(graph.links, link => link.weight));\n  \n\tconsole.log('graph', graph);\n  \n  var link = svg.append(\"g\")\n    .attr(\"class\", \"links\")\n    .selectAll(\"line\")\n    .data(graph.links)\n    .enter()\n    .append(\"line\")\n\t  .style('stroke-opacity', d => LINK_WEIGHT_PROPS[d.weight].opacity)\n\t  .style('stroke', d => LINK_WEIGHT_PROPS[d.weight].color)\n    .attr(\"stroke-width\", d => (d.weight + 4) * 3)\n\t  .each(d => {\n\t    var color = LINK_WEIGHT_PROPS[d.weight].color;\n\t    console.log('link', d.weight, color);\n    });\n\n  var node = svg.append(\"g\")\n    .attr(\"class\", \"nodes\")\n    .selectAll(\"circle\")\n    .data(graph.nodes)\n    .enter().append(\"circle\")\n      .attr(\"r\", 5)\n      .attr(\"fill\", function(d) { return color(d.group); })\n      .call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  node.append(\"title\")\n      .text(function(d) { return d.id; });\n\n  simulation\n      .nodes(graph.nodes)\n      .on(\"tick\", ticked);\n\n  simulation\n    .force(\"link\")\n    .links(graph.links);\n\n  function ticked() {\n    link\n        .attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\n    node\n        .attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; });\n  }\n}\n\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d.fx = d.x;\n  d.fy = d.y;\n}\n\nfunction dragged(d) {\n  d.fx = d3.event.x;\n  d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d.fx = null;\n  d.fy = null;\n}\n\n</script>", "description": "Force-Directed Graph", "created_at": "2016-10-22T00:30:57Z", "updated_at": "2016-10-22T01:39:04Z", "api": ["d3.select", "d3.scaleOrdinal", "d3.forceLink", "d3.forceSimulation", "d3.forceManyBody", "d3.forceCenter", "d3.range", "d3.randomUniform", "d3.extent", "d3.drag"], "readme": "This simple force-directed graph shows character co-occurence in *Les Mis\u00e9rables*. A physical simulation of charged particles and springs places related characters in closer proximity, while unrelated characters are farther apart. Layout algorithm inspired by [Tim Dwyer](http://www.csse.monash.edu.au/~tdwyer/) and [Thomas Jakobsen](http://web.archive.org/web/20080410171619/http://www.teknikus.dk/tj/gdc2001.htm). Data based on character coappearence in Victor Hugo's *Les Mis\u00e9rables*, compiled by [Donald Knuth](http://www-cs-faculty.stanford.edu/~uno/sgb.html).\n\nCompare this display to a force layout with [curved links](/mbostock/4600693), a force layout with [fisheye distortion](http://bost.ocks.org/mike/fisheye/) and a [matrix diagram](http://bost.ocks.org/mike/miserables/).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4062045'>Force-Directed Graph</a>", "uid": "trebor_058d8959701e5a79a0674adc23be23c5"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n     = 2 * Math.PI,\n    maxLength = 10000,\n    maxLength2 = maxLength * maxLength;\n\nvar nodes = d3.range(200).map(function() {\n  return {\n    x: Math.random() * width,\n    y: Math.random() * height\n  };\n});\n\nvar force = d3.forceSimulation()\n    .nodes(nodes.slice())\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n    .force(\"charge\", d3.forceManyBody().strength(function(d,i){\n      return i ? -25 : -1000\n    }))\n    .force(\"x\", d3.forceX())\n    .force(\"y\", d3.forceY())\n.force(\"dance\", function(alpha) {\n  var m = 50*alpha;\n    for(var i=1; i < nodes.length; i++) {\n    var d = Math.sqrt((nodes[i-1].x - nodes[i].x)*(nodes[i-1].x - nodes[i].x) + (nodes[i-1].y - nodes[i].y)*(nodes[i-1].y - nodes[i].y));\n     nodes[i].vx += m*(nodes[i-1].x - nodes[i].x)/d;\n     nodes[i].vy += m*(nodes[i-1].y - nodes[i].y)/d;\n  }\n\n})\n    .force(\"center\", d3.forceCenter(width / 2, height / 2))\n    .on(\"tick\", ticked);\n\n  \n  \nvar voronoi = d3.voronoi()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\nvar canvas = d3.select(\"body\").append(\"canvas\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .on(\"ontouchstart\" in document ? \"touchmove\" : \"mousemove\", moved);\n\nvar context = canvas.node().getContext(\"2d\");\n\nfunction moved() {\n  var p1 = d3.mouse(this);\n  nodes[0].fx = p1[0];\n  nodes[0].fy = p1[1];\n  force.alpha(0.1).restart();\n}\n\n  \nfunction urquhart(diagram){\n    var urquhart = d3.map();\n    diagram.links()\n    .forEach(function(link) {\n      var v = d3.extent([link.source.index, link.target.index]);\n      urquhart.set(v, link);\n    });\n    urquhart._remove = [];\n    diagram.triangles()\n    .forEach(function(t) {\n\n      var l = 0, length = 0, i=\"bleh\", v;\n      for (var j=0; j<3; j++) {\n        var a = t[j], b = t[(j+1)%3];\n        v = d3.extent([a.index, b.index]);\n        length = (a.x-b.x) * (a.x-b.x) + (a.y-b.y) * (a.y-b.y);\n        if (length > l) {\n          l = length;\n          i = v;\n        }\n      }\n      urquhart._remove.push(i);\n    });\n     //console.log(JSON.stringify(urquhart._remove))\n    urquhart._remove.forEach(function(i) {\n      if (urquhart.has(i)) urquhart.remove(i);\n    });\n    return urquhart.values();\n  }\n\n  \nfunction ticked() {\n  var diagram = voronoi(nodes);\n\n  //var links = diagram.links();\n  var links = urquhart(diagram);\n  \n  context.clearRect(0, 0, width, height);\n\n  context.beginPath();\n  for (var i = 0, n = links.length; i < n; ++i) {\n    var link = links[i],\n        dx = link.source.x - link.target.x,\n        dy = link.source.y - link.target.y;\n    if (dx * dx + dy * dy < maxLength2) {\n      context.moveTo(link.source.x, link.source.y);\n      context.lineTo(link.target.x, link.target.y);\n    }\n  }\n  context.lineWidth = 1;\n  context.strokeStyle = \"#bbb\";\n  context.stroke();\n\n  context.beginPath();\n  for (var i = 0, n = nodes.length; i < n; ++i) {\n    var node = nodes[i];\n    context.moveTo(node.x, node.y);\n    context.arc(node.x, node.y, 2, 0, );\n  }\n  context.lineWidth = 3;\n  context.strokeStyle = \"#fff\";\n  context.stroke();\n  context.fillStyle = \"#000\";\n  context.fill();\n\n}\n\n</script>", "description": "Urquhart Force Mesh Dance Procrastination", "created_at": "2016-10-21T19:12:51Z", "updated_at": "2016-10-21T19:23:59Z", "api": ["d3.range", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceX", "d3.forceY", "d3.forceCenter", "d3.voronoi", "d3.select", "d3.mouse", "d3.map", "d3.extent"], "readme": "Some force-directed points, with the Urquhart graph overlaid. Thanks @enjalot for the idea and time wasted :)\n\n\nForked from <a href='http://bl.ocks.org/erlenstar/'>erlenstar</a>'s block: <a href='http://bl.ocks.org/erlenstar/0ba5ee8bd3773d70462523679d4ef5a4'>Delaunay Force Mesh II</a>\n\nforked from <a href='http://bl.ocks.org/Fil/'>Fil</a>'s block: <a href='http://bl.ocks.org/Fil/56c02237d9951c4bb12ed41cf64d6e4c'>Urquhart Force Mesh Dance</a>", "uid": "Fil_41f4c6ea19859768a1b3d56cb2c23218"}, {"code": "<script>\n\nvar diameter = 960,\n    radius = diameter / 2,\n    innerRadius = radius - 120;\n\nvar cluster = d3.layout.cluster()\n    .size([360, innerRadius])\n    .sort(null)\n    .value(function(d) { return d.size; });\n\nvar bundle = d3.layout.bundle();\n\nvar line = d3.svg.line.radial()\n    .interpolate(\"bundle\")\n    .tension(.85)\n    .radius(function(d) { return d.y; })\n    .angle(function(d) { return d.x / 180 * Math.PI; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");\n\nvar link = svg.append(\"g\").selectAll(\".link\"),\n    node = svg.append(\"g\").selectAll(\".node\");\n\nd3.json(\"readme-flare-imports.json\", function(error, classes) {\n  var nodes = cluster.nodes(packageHierarchy(classes)),\n      links = packageImports(nodes);\n\n  link = link\n      .data(bundle(links))\n    .enter().append(\"path\")\n      .each(function(d) { d.source = d[0], d.target = d[d.length - 1]; })\n      .attr(\"class\", \"link\")\n      .attr(\"d\", line);\n\n  node = node\n      .data(nodes.filter(function(n) { return !n.children; }))\n    .enter().append(\"text\")\n      .attr(\"class\", \"node\")\n      .attr(\"dx\", function(d) { return d.x < 180 ? 8 : -8; })\n      .attr(\"dy\", \".31em\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\" + (d.x < 180 ? \"\" : \"rotate(180)\"); })\n      .style(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .text(function(d) { return d.key; })\n      .on(\"mouseover\", mouseovered)\n      .on(\"mouseout\", mouseouted);\n});\n\nfunction mouseovered(d) {\n  node\n      .each(function(n) { n.target = n.source = false; });\n\n  link\n      .classed(\"link--target\", function(l) { if (l.target === d) return l.source.source = true; })\n      .classed(\"link--source\", function(l) { if (l.source === d) return l.target.target = true; })\n    .filter(function(l) { return l.target === d || l.source === d; })\n      .each(function() { this.parentNode.appendChild(this); });\n\n  node\n      .classed(\"node--target\", function(n) { return n.target; })\n      .classed(\"node--source\", function(n) { return n.source; });\n}\n\nfunction mouseouted(d) {\n  link\n      .classed(\"link--target\", false)\n      .classed(\"link--source\", false);\n\n  node\n      .classed(\"node--target\", false)\n      .classed(\"node--source\", false);\n}\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n// Lazily construct the package hierarchy from class names.\nfunction packageHierarchy(classes) {\n  var map = {};\n\n  function find(name, data) {\n    var node = map[name], i;\n    if (!node) {\n      node = map[name] = data || {name: name, children: []};\n      if (name.length) {\n        node.parent = find(name.substring(0, i = name.lastIndexOf(\".\")));\n        node.parent.children.push(node);\n        node.key = name.substring(i + 1);\n      }\n    }\n    return node;\n  }\n\n  classes.forEach(function(d) {\n    find(d.name, d);\n  });\n\n  return map[\"\"];\n}\n\n// Return a list of imports for the given array of nodes.\nfunction packageImports(nodes) {\n  var map = {},\n      imports = [];\n\n  // Compute a map from name to node.\n  nodes.forEach(function(d) {\n    map[d.name] = d;\n  });\n\n  // For each import, construct a link from the source to target node.\n  nodes.forEach(function(d) {\n    if (d.imports) d.imports.forEach(function(i) {\n      imports.push({source: map[d.name], target: map[i]});\n    });\n  });\n\n  return imports;\n}\n\n</script>", "description": "Hierarchical Edge Bundling", "created_at": "2016-10-20T18:50:45Z", "updated_at": "2016-10-20T18:50:46Z", "api": ["d3.layout.cluster", "d3.layout.bundle", "d3.svg.line.radial", "d3.select", "d3.json"], "readme": "Mouseover any of the nodes in this network to see the incoming links (dependants) in brown and the outgoing links (dependencies) in red.\n\n\nforked from <a href='http://bl.ocks.org/renecnielsen/'>renecnielsen</a>'s block: <a href='http://bl.ocks.org/renecnielsen/9904729'>Hierarchical Edge Bundling</a>", "uid": "domhorvath_42641003ee6c65cbb79d4127cadbbe21"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n     = 2 * Math.PI,\n    maxLength = 100,\n    maxLength2 = maxLength * maxLength;\n\nvar nodes = d3.range(200).map(function() {\n  return {\n    x: Math.random() * width,\n    y: Math.random() * height\n  };\n});\n\nvar force = d3.forceSimulation()\n    .nodes(nodes.slice())\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n    .force(\"charge\", d3.forceManyBody().strength(function(d,i){\n      return i ? -30 : -1000\n    }))\n    .force(\"x\", d3.forceX())\n    .force(\"y\", d3.forceY())\n    .force(\"center\", d3.forceCenter(width / 2, height / 2))\n    .on(\"tick\", ticked);\n\nvar voronoi = d3.voronoi()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\nvar root = nodes.shift();\n\nroot.fixed = true;\n\nvar canvas = d3.select(\"body\").append(\"canvas\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .on(\"ontouchstart\" in document ? \"touchmove\" : \"mousemove\", moved);\n\nvar context = canvas.node().getContext(\"2d\");\n\nfunction moved() {\n  var p1 = d3.mouse(this);\n  root.px = p1[0];\n  root.py = p1[1];\n // force.resume();\n}\n\n    var urquhart = function(diagram){\n    var urquhart = d3.map();\n    \n    diagram.links()\n    .forEach(function(link) {\n      var v = d3.extent([link.source.index, link.target.index]);\n      urquhart.set(v, link);\n    });\n    urquhart._remove = [];\n    diagram.triangles()\n    .forEach(function(t) {\n      var l = 0, length = 0, i, v;\n      for (var j=0; j<3; j++) {\n        var a = t[j], b = t[(j+1)%3];\n        v = d3.extent([a.index, b.index]);\n        length = (a[0]-b[0]) * (a[0]-b[0]) + (a[1]-b[1]) * (a[1]-b[1]);\n        if (length > l) {\n          l = length;\n          i = v;\n        }\n      }\n      urquhart._remove.push(i);\n    });\n    urquhart._remove.forEach(function(i) {\n      if (urquhart.has(i)) urquhart.remove(i);\n    });\n    return urquhart.values();\n  }\n  \nfunction ticked() {\n  var diagram = voronoi(nodes);\n\n  var links = diagram.links();\n  //var links = urquhart(diagram);\n  //console.log(links);\n  \n  context.clearRect(0, 0, width, height);\n\n  context.beginPath();\n  for (var i = 0, n = links.length; i < n; ++i) {\n    var link = links[i],\n        dx = link.source.x - link.target.x,\n        dy = link.source.y - link.target.y;\n    if (dx * dx + dy * dy < maxLength2) {\n      context.moveTo(link.source.x, link.source.y);\n      context.lineTo(link.target.x, link.target.y);\n    }\n  }\n  context.lineWidth = 1;\n  context.strokeStyle = \"#bbb\";\n  context.stroke();\n\n  context.beginPath();\n  for (var i = 0, n = nodes.length; i < n; ++i) {\n    var node = nodes[i];\n    context.moveTo(node.x, node.y);\n    context.arc(node.x, node.y, 2, 0, );\n  }\n  context.lineWidth = 3;\n  context.strokeStyle = \"#fff\";\n  context.stroke();\n  context.fillStyle = \"#000\";\n  context.fill();\n}\n\n</script>", "description": "Urquhart Force Mesh", "created_at": "2016-10-19T23:15:37Z", "updated_at": "2016-10-21T18:10:40Z", "api": ["d3.range", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceX", "d3.forceY", "d3.forceCenter", "d3.voronoi", "d3.select", "d3.mouse", "d3.map", "d3.extent"], "readme": "Some force-directed points, with a Delaunay mesh overlaid, filtered so that only links less than 100px long are drawn.\n\n\nforked from <a href='http://bl.ocks.org/erlenstar/'>erlenstar</a>'s block: <a href='http://bl.ocks.org/erlenstar/0ba5ee8bd3773d70462523679d4ef5a4'>Delaunay Force Mesh II</a>", "uid": "Fil_56c02237d9951c4bb12ed41cf64d6e4c"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n    centered;\n\n// Define color scale\nvar color = d3.scale.linear()\n  .domain([1, 20])\n  .clamp(true)\n  .range(['#fff', '#409A99']);\n\nvar projection = d3.geo.mercator()\n  .scale(1500)\n  // Center the Map in Colombia\n  .center([-74, 4.5])\n  .translate([width / 2, height / 2]);\n\nvar path = d3.geo.path()\n  .projection(projection);\n\n// Set svg width & height\nvar svg = d3.select('svg')\n  .attr('width', width)\n  .attr('height', height);\n\n// Add background\nsvg.append('rect')\n  .attr('class', 'background')\n  .attr('width', width)\n  .attr('height', height)\n  .on('click', clicked);\n\nvar g = svg.append('g');\n\nvar effectLayer = g.append('g')\n  .classed('effect-layer', true);\n\nvar mapLayer = g.append('g')\n  .classed('map-layer', true);\n\nvar dummyText = g.append('text')\n  .classed('dummy-text', true)\n  .attr('x', 10)\n  .attr('y', 30)\n  .style('opacity', 0);\n\nvar bigText = g.append('text')\n  .classed('big-text', true)\n  .attr('x', 20)\n  .attr('y', 45);\n\n// Load map data\nd3.json('colombia.geo.json', function(error, mapData) {\n  var features = mapData.features;\n\n  // Update color scale domain based on data\n  color.domain([0, d3.max(features, nameLength)]);\n\n  // Draw each province as a path\n  mapLayer.selectAll('path')\n      .data(features)\n    .enter().append('path')\n      .attr('d', path)\n      .attr('vector-effect', 'non-scaling-stroke')\n      .style('fill', fillFn)\n      .on('mouseover', mouseover)\n      .on('mouseout', mouseout)\n      .on('click', clicked);\n});\n\n// Get province name\nfunction nameFn(d){\n  return d && d.properties ? d.properties.NOMBRE_DPT : null;\n}\n\n// Get province name length\nfunction nameLength(d){\n  var n = nameFn(d);\n  return n ? n.length : 0;\n}\n\n// Get province color\nfunction fillFn(d){\n  return color(nameLength(d));\n}\n\n// When clicked, zoom in\nfunction clicked(d) {\n  var x, y, k;\n\n  // Compute centroid of the selected path\n  if (d && centered !== d) {\n    var centroid = path.centroid(d);\n    x = centroid[0];\n    y = centroid[1];\n    k = 4;\n    centered = d;\n  } else {\n    x = width / 2;\n    y = height / 2;\n    k = 1;\n    centered = null;\n  }\n\n  // Highlight the clicked province\n  mapLayer.selectAll('path')\n    .style('fill', function(d){return centered && d===centered ? '#D5708B' : fillFn(d);});\n\n  // Zoom\n  g.transition()\n    .duration(750)\n    .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')scale(' + k + ')translate(' + -x + ',' + -y + ')');\n}\n\nfunction mouseover(d){\n  // Highlight hovered province\n  d3.select(this).style('fill', 'orange');\n\n  // Draw effects\n  textArt(nameFn(d));\n}\n\nfunction mouseout(d){\n  // Reset province color\n  mapLayer.selectAll('path')\n    .style('fill', function(d){return centered && d===centered ? '#D5708B' : fillFn(d);});\n\n  // Remove effect text\n  effectLayer.selectAll('text').transition()\n    .style('opacity', 0)\n    .remove();\n\n  // Clear province name\n  bigText.text('');\n}\n\n// Gimmick\n// Just me playing around.\n// You won't need this for a regular map.\n\nvar BASE_FONT = \"'Helvetica Neue', Helvetica, Arial, sans-serif\";\n\nvar FONTS = [\n  \"Open Sans\",\n  \"Josefin Slab\",\n  \"Arvo\",\n  \"Lato\",\n  \"Vollkorn\",\n  \"Abril Fatface\",\n  \"Old StandardTT\",\n  \"Droid+Sans\",\n  \"Lobster\",\n  \"Inconsolata\",\n  \"Montserrat\",\n  \"Playfair Display\",\n  \"Karla\",\n  \"Alegreya\",\n  \"Libre Baskerville\",\n  \"Merriweather\",\n  \"Lora\",\n  \"Archivo Narrow\",\n  \"Neuton\",\n  \"Signika\",\n  \"Questrial\",\n  \"Fjalla One\",\n  \"Bitter\",\n  \"Varela Round\"\n];\n\nfunction textArt(text){\n  // Use random font\n  var fontIndex = Math.round(Math.random() * FONTS.length);\n  var fontFamily = FONTS[fontIndex] + ', ' + BASE_FONT;\n\n  bigText\n    .style('font-family', fontFamily)\n    .text(text);\n\n  // Use dummy text to compute actual width of the text\n  // getBBox() will return bounding box\n  dummyText\n    .style('font-family', fontFamily)\n    .text(text);\n  var bbox = dummyText.node().getBBox();\n\n  var textWidth = bbox.width;\n  var textHeight = bbox.height;\n  var xGap = 3;\n  var yGap = 1;\n\n  // Generate the positions of the text in the background\n  var xPtr = 0;\n  var yPtr = 0;\n  var positions = [];\n  var rowCount = 0;\n  while(yPtr < height){\n    while(xPtr < width){\n      var point = {\n        text: text,\n        index: positions.length,\n        x: xPtr,\n        y: yPtr\n      };\n      var dx = point.x - width/2 + textWidth/2;\n      var dy = point.y - height/2;\n      point.distance = dx*dx + dy*dy;\n\n      positions.push(point);\n      xPtr += textWidth + xGap;\n    }\n    rowCount++;\n    xPtr = rowCount%2===0 ? 0 : -textWidth/2;\n    xPtr += Math.random() * 10;\n    yPtr += textHeight + yGap;\n  }\n\n  var selection = effectLayer.selectAll('text')\n    .data(positions, function(d){return d.text+'/'+d.index;});\n\n  // Clear old ones\n  selection.exit().transition()\n    .style('opacity', 0)\n    .remove();\n\n  // Create text but set opacity to 0\n  selection.enter().append('text')\n    .text(function(d){return d.text;})\n    .attr('x', function(d){return d.x;})\n    .attr('y', function(d){return d.y;})\n    .style('font-family', fontFamily)\n    .style('fill', '#777')\n    .style('opacity', 0);\n\n  selection\n    .style('font-family', fontFamily)\n    .attr('x', function(d){return d.x;})\n    .attr('y', function(d){return d.y;});\n\n  // Create transtion to increase opacity from 0 to 0.1-0.5\n  // Add delay based on distance from the center of the <svg> and a bit more randomness.\n  selection.transition()\n    .delay(function(d){\n      return d.distance * 0.01 + Math.random()*1000;\n    })\n    .style('opacity', function(d){\n      return 0.1 + Math.random()*0.4;\n    });\n}\n\n</script>", "description": "GeoJson map of Colombia", "created_at": "2016-10-19T16:13:28Z", "updated_at": "2016-10-19T16:13:29Z", "api": ["d3.scale.linear", "d3.geo.mercator", "d3.geo.path", "d3.select", "d3.json", "d3.max"], "readme": "Geo Json map of Colombia\n========================\n\nBased on the [Map of Thailand](https://gist.github.com/kristw/7fbf031e3205a8a453a8) by Master [Krist Wongsuphasawat](twitter.com/kristw), a simple map of Colombia using [GeoJSON and D3.js](https://github.com/mbostock/d3/wiki/Geo-Paths)\n\nAs in Krist example:\n\n* Each province is color-coded by the length of its name in English.\n* Hover each province to see text effects.\n* New font is chosen randomly every time you change the province.\n* Click on a province to zoom in. Click somewhere else to zoom out.\n\nI obtained the [Colombian GeoJSON](https://gist.githubusercontent.com/john-guerra/43c7656821069d00dcbc/raw/be6a6e239cd5b5b803c6e7c2ec405b793a9064dd/Colombia.geo.json) by transforming the [Colombian shapefiles by Maurix Su\u00e1rez](https://sites.google.com/site/seriescol/shapes), using:\n\n```\nogr2ogr   -f GeoJSON -t_srs EPSG:4326  Colombia.geo.json   depto.shp\n```\n\n\nforked from <a href='http://bl.ocks.org/john-guerra/'>john-guerra</a>'s block: <a href='http://bl.ocks.org/john-guerra/43c7656821069d00dcbc'>GeoJson map of Colombia</a>", "uid": "john-guerra_c06cae4f52cabc82f8e6195c1ef6bb7d"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n    centered;\n\n// Define color scale\nvar color = d3.scale.linear()\n  .domain([1, 20])\n  .clamp(true)\n  .range(['#fff', '#409A99']);\n\nvar projection = d3.geo.mercator()\n  .scale(1500)\n  // Center the Map in Colombia\n  .center([-74, 4.5])\n  .translate([width / 2, height / 2]);\n\nvar path = d3.geo.path()\n  .projection(projection);\n\n// Set svg width & height\nvar svg = d3.select('svg')\n  .attr('width', width)\n  .attr('height', height);\n\n// Add background\nsvg.append('rect')\n  .attr('class', 'background')\n  .attr('width', width)\n  .attr('height', height)\n  .on('click', clicked);\n\nvar g = svg.append('g');\n\nvar effectLayer = g.append('g')\n  .classed('effect-layer', true);\n\nvar mapLayer = g.append('g')\n  .classed('map-layer', true);\n\nvar dummyText = g.append('text')\n  .classed('dummy-text', true)\n  .attr('x', 10)\n  .attr('y', 30)\n  .style('opacity', 0);\n\nvar bigText = g.append('text')\n  .classed('big-text', true)\n  .attr('x', 20)\n  .attr('y', 45);\n\n// Load map data\nd3.json('colombia-municipios.json', function(error, mapData) {\n  var features = mapData.objects;\n\n  // Update color scale domain based on data\n  color.domain([0, d3.max(features, nameLength)]);\n\n  // Draw each province as a path\n  mapLayer.selectAll('path')\n      .data(features)\n    .enter().append('path')\n      .attr('d', path)\n      .attr('vector-effect', 'non-scaling-stroke')\n      .style('fill', fillFn)\n      .on('mouseover', mouseover)\n      .on('mouseout', mouseout)\n      .on('click', clicked);\n});\n\n// Get province name\nfunction nameFn(d){\n  return d && d.properties ? d.properties.NOMBRE_DPT : null;\n}\n\n// Get province name length\nfunction nameLength(d){\n  var n = nameFn(d);\n  return n ? n.length : 0;\n}\n\n// Get province color\nfunction fillFn(d){\n  return color(nameLength(d));\n}\n\n// When clicked, zoom in\nfunction clicked(d) {\n  var x, y, k;\n\n  // Compute centroid of the selected path\n  if (d && centered !== d) {\n    var centroid = path.centroid(d);\n    x = centroid[0];\n    y = centroid[1];\n    k = 4;\n    centered = d;\n  } else {\n    x = width / 2;\n    y = height / 2;\n    k = 1;\n    centered = null;\n  }\n\n  // Highlight the clicked province\n  mapLayer.selectAll('path')\n    .style('fill', function(d){return centered && d===centered ? '#D5708B' : fillFn(d);});\n\n  // Zoom\n  g.transition()\n    .duration(750)\n    .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')scale(' + k + ')translate(' + -x + ',' + -y + ')');\n}\n\nfunction mouseover(d){\n  // Highlight hovered province\n  d3.select(this).style('fill', 'orange');\n\n  // Draw effects\n  textArt(nameFn(d));\n}\n\nfunction mouseout(d){\n  // Reset province color\n  mapLayer.selectAll('path')\n    .style('fill', function(d){return centered && d===centered ? '#D5708B' : fillFn(d);});\n\n  // Remove effect text\n  effectLayer.selectAll('text').transition()\n    .style('opacity', 0)\n    .remove();\n\n  // Clear province name\n  bigText.text('');\n}\n\n// Gimmick\n// Just me playing around.\n// You won't need this for a regular map.\n\nvar BASE_FONT = \"'Helvetica Neue', Helvetica, Arial, sans-serif\";\n\nvar FONTS = [\n  \"Open Sans\",\n  \"Josefin Slab\",\n  \"Arvo\",\n  \"Lato\",\n  \"Vollkorn\",\n  \"Abril Fatface\",\n  \"Old StandardTT\",\n  \"Droid+Sans\",\n  \"Lobster\",\n  \"Inconsolata\",\n  \"Montserrat\",\n  \"Playfair Display\",\n  \"Karla\",\n  \"Alegreya\",\n  \"Libre Baskerville\",\n  \"Merriweather\",\n  \"Lora\",\n  \"Archivo Narrow\",\n  \"Neuton\",\n  \"Signika\",\n  \"Questrial\",\n  \"Fjalla One\",\n  \"Bitter\",\n  \"Varela Round\"\n];\n\nfunction textArt(text){\n  // Use random font\n  var fontIndex = Math.round(Math.random() * FONTS.length);\n  var fontFamily = FONTS[fontIndex] + ', ' + BASE_FONT;\n\n  bigText\n    .style('font-family', fontFamily)\n    .text(text);\n\n  // Use dummy text to compute actual width of the text\n  // getBBox() will return bounding box\n  dummyText\n    .style('font-family', fontFamily)\n    .text(text);\n  var bbox = dummyText.node().getBBox();\n\n  var textWidth = bbox.width;\n  var textHeight = bbox.height;\n  var xGap = 3;\n  var yGap = 1;\n\n  // Generate the positions of the text in the background\n  var xPtr = 0;\n  var yPtr = 0;\n  var positions = [];\n  var rowCount = 0;\n  while(yPtr < height){\n    while(xPtr < width){\n      var point = {\n        text: text,\n        index: positions.length,\n        x: xPtr,\n        y: yPtr\n      };\n      var dx = point.x - width/2 + textWidth/2;\n      var dy = point.y - height/2;\n      point.distance = dx*dx + dy*dy;\n\n      positions.push(point);\n      xPtr += textWidth + xGap;\n    }\n    rowCount++;\n    xPtr = rowCount%2===0 ? 0 : -textWidth/2;\n    xPtr += Math.random() * 10;\n    yPtr += textHeight + yGap;\n  }\n\n  var selection = effectLayer.selectAll('text')\n    .data(positions, function(d){return d.text+'/'+d.index;});\n\n  // Clear old ones\n  selection.exit().transition()\n    .style('opacity', 0)\n    .remove();\n\n  // Create text but set opacity to 0\n  selection.enter().append('text')\n    .text(function(d){return d.text;})\n    .attr('x', function(d){return d.x;})\n    .attr('y', function(d){return d.y;})\n    .style('font-family', fontFamily)\n    .style('fill', '#777')\n    .style('opacity', 0);\n\n  selection\n    .style('font-family', fontFamily)\n    .attr('x', function(d){return d.x;})\n    .attr('y', function(d){return d.y;});\n\n  // Create transtion to increase opacity from 0 to 0.1-0.5\n  // Add delay based on distance from the center of the <svg> and a bit more randomness.\n  selection.transition()\n    .delay(function(d){\n      return d.distance * 0.01 + Math.random()*1000;\n    })\n    .style('opacity', function(d){\n      return 0.1 + Math.random()*0.4;\n    });\n}\n\n</script>", "description": "GeoJson map of Colombia Municipios", "created_at": "2016-10-19T16:09:22Z", "updated_at": "2016-10-20T20:36:10Z", "api": ["d3.scale.linear", "d3.geo.mercator", "d3.geo.path", "d3.select", "d3.json", "d3.max"], "readme": "Geo Json map of Colombia\n========================\n\nBased on the [Map of Thailand](https://gist.github.com/kristw/7fbf031e3205a8a453a8) by Master [Krist Wongsuphasawat](twitter.com/kristw), a simple map of Colombia using [GeoJSON and D3.js](https://github.com/mbostock/d3/wiki/Geo-Paths)\n\nAs in Krist example:\n\n* Each province is color-coded by the length of its name in English.\n* Hover each province to see text effects.\n* New font is chosen randomly every time you change the province.\n* Click on a province to zoom in. Click somewhere else to zoom out.\n\nI obtained the [Colombian GeoJSON](https://gist.githubusercontent.com/john-guerra/43c7656821069d00dcbc/raw/be6a6e239cd5b5b803c6e7c2ec405b793a9064dd/Colombia.geo.json) by transforming the [Colombian shapefiles by Maurix Su\u00e1rez](https://sites.google.com/site/seriescol/shapes), using:\n\n```\nogr2ogr   -f GeoJSON -t_srs EPSG:4326  Colombia.geo.json   depto.shp\n```\n\n\nforked from <a href='http://bl.ocks.org/john-guerra/'>john-guerra</a>'s block: <a href='http://bl.ocks.org/john-guerra/43c7656821069d00dcbc'>GeoJson map of Colombia</a>", "uid": "john-guerra_727e8992e9599b9d9f1dbfdc4c8e479e"}, {"code": "<script>\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t//////////////////////// Set-Up ////////////////////////////// \n\t\t\t////////////////////////////////////////////////////////////// \n\n\t\t\tvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n\t\t\t\tlegendPosition = {x: 25, y: 25},\n\t\t\t\twidth = Math.min(700, window.innerWidth - 10) - margin.left - margin.right,\n\t\t\t\theight = Math.min(width, window.innerHeight - margin.top - margin.bottom - 20);\n\t\t\t\t\t\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t//////////////////// Draw the Chart ////////////////////////// \n\t\t\t////////////////////////////////////////////////////////////// \n\n\t\t\tvar color = d3.scale.ordinal()\n\t\t\t\t.range([\"#EDC951\",\"#CC333F\",\"#00A0B0\"]);\n\t\t\t\t\n\t\t\tvar radarChartOptions = {\n\t\t\t  w: width,\n\t\t\t  h: height,\n\t\t\t  margin: margin,\n\t\t\t  legendPosition: legendPosition,\n\t\t\t  maxValue: 0.5,\n\t\t\t  wrapWidth: 60,\n\t\t\t  levels: 5,\n\t\t\t  roundStrokes: true,\n\t\t\t  color: color,\n\t\t\t  axisName: \"reason\",\n\t\t\t  areaName: \"device\",\n\t\t\t  value: \"value\"\n\t\t\t};\n\n\t\t\t//Load the data and Call function to draw the Radar chart\n\t\t\td3.json(\"data.json\", function(error, data){\n\t\t\t\tRadarChart(\".radarChart\", data, radarChartOptions);\n\t\t\t});\n\t\t\t\n\t\t</script>", "description": "radar chart with an interactive legend", "created_at": "2016-10-18T03:21:20Z", "updated_at": "2016-10-18T03:21:20Z", "api": ["d3.scale.ordinal", "d3.json", "d3.scale.category10", "d3.mean", "d3.max", "d3.format", "d3.scale.linear", "d3.select", "d3.range", "d3.svg.line.radial", "d3.selectAll", "d3.legend.color", "d3.svg.symbol"], "readme": "this version adds a legend!\n\nto enable the legend symbol to interact with the areas, when you call `RadarChart()`, specify the field `radarChart.js` should use to assign an `areaName` to each area.\n\nyou can also specify the legend position as a parameter, where `x` and `y` are pixel coordinates offset from an origin at the top left of the parent `svg`.\n\n    var legendPosition = {x: 25, y: 25}\n\n    var radarChartOptions {\n      areaName: \"device\",\n      legendPosition: legendPosition\n      // ...\n    };\n\nto get the interaction to work, we add a data-driven class to each area that we can later select in the `cellover()` function that is called when you mouse over the legend symbol.\n\n    blobWrapper\n    \t.append(\"path\")\n    \t.attr(\"class\", function(d) {\n    \t\treturn \"radarArea\" + \" \" + d[0][areaName].replace(/\\s+/g, '') //Remove spaces from the areaName string to make one valid class name\n    \t})\n    // ...\n\nthe legend is created with the delightful [d3-legend](http://d3-legend.susielu.com/) component from [susielu](http://bl.ocks.org/susielu)\n\nan iteration on the bl.ock [radar chart with smallest area on top](http://bl.ocks.org/micahstubbs/465725cdc547c7cc8491) by [micahstubbs](http://bl.ocks.org/micahstubbs)\n\na further iteration on the bl.ock [Radar Chart Redesign](http://bl.ocks.org/nbremer/21746a9668ffdf6d8242) created by [nbremer](http://bl.ocks.org/nbremer), which is described nicely in this [blog post](http://www.visualcinnamon.com/2015/10/different-look-d3-radar-chart.html#comment-203)\n\nforked from <a href='http://bl.ocks.org/micahstubbs/'>micahstubbs</a>'s block: <a href='http://bl.ocks.org/micahstubbs/a772306d6fd49874ec92'>radar chart with an interactive legend</a>", "uid": "AndresAnayaIsaza_759b4d1821fa8c2d305c6a86c833e11e"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n     = 2 * Math.PI,\n    maxLength = 100,\n    maxLength2 = maxLength * maxLength;\n\nvar nodes = d3.range(200).map(function() {\n  return {\n    x: Math.random() * width,\n    y: Math.random() * height\n  };\n});\n\nvar force = d3.layout.force()\n    .size([width, height])\n    .nodes(nodes.slice())\n    .charge(function(d, i) { return i ? -30 : -1500; })\n    .on(\"tick\", ticked)\n    .start();\n\nvar voronoi = d3.geom.voronoi()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\nvar root = nodes.shift();\n\nroot.fixed = true;\n\nvar canvas = d3.select(\"body\").append(\"canvas\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .on(\"ontouchstart\" in document ? \"touchmove\" : \"mousemove\", moved);\n\nvar context = canvas.node().getContext(\"2d\");\n\nfunction moved() {\n  var p1 = d3.mouse(this);\n  root.px = p1[0];\n  root.py = p1[1];\n  force.resume();\n}\n\nfunction ticked() {\n  var links = voronoi.links(nodes);\n\n  context.clearRect(0, 0, width, height);\n\n  context.beginPath();\n  for (var i = 0, n = links.length; i < n; ++i) {\n    var link = links[i],\n        dx = link.source.x - link.target.x,\n        dy = link.source.y - link.target.y;\n    if (dx * dx + dy * dy < maxLength2) {\n      context.moveTo(link.source.x, link.source.y);\n      context.lineTo(link.target.x, link.target.y);\n    }\n  }\n  context.lineWidth = 1;\n  context.strokeStyle = \"#bbb\";\n  context.stroke();\n\n  context.beginPath();\n  for (var i = 0, n = nodes.length; i < n; ++i) {\n    var node = nodes[i];\n    context.moveTo(node.x, node.y);\n    context.arc(node.x, node.y, 2, 0, );\n  }\n  context.lineWidth = 3;\n  context.strokeStyle = \"#fff\";\n  context.stroke();\n  context.fillStyle = \"#000\";\n  context.fill();\n}\n\n</script>", "description": "Delaunay Force Mesh II", "created_at": "2016-10-17T23:10:50Z", "updated_at": "2016-10-17T23:10:51Z", "api": ["d3.range", "d3.layout.force", "d3.geom.voronoi", "d3.select", "d3.mouse"], "readme": "Some force-directed points, with a Delaunay mesh overlaid, filtered so that only links less than 100px long are drawn.\n", "uid": "erlenstar_0ba5ee8bd3773d70462523679d4ef5a4"}, {"code": "<script>\n\nvar m = [20, 20, 30, 20],\n    w = 960 - m[1] - m[3],\n    h = 500 - m[0] - m[2];\n\nvar x,\n    y,\n    duration = 1500,\n    delay = 500;\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", w + m[1] + m[3])\n    .attr(\"height\", h + m[0] + m[2])\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\nvar stocks,\n    symbols;\n\n// A line generator, for the dark stroke.\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); });\n\n// A line generator, for the dark stroke.\nvar axis = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(h);\n\n// A area generator, for the dark stroke.\nvar area = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y1(function(d) { return y(d.price); });\n\nd3.csv(\"stocks.csv\", function(data) {\n  var parse = d3.time.format(\"%b %Y\").parse;\n\n  // Nest stock values by symbol.\n  symbols = d3.nest()\n      .key(function(d) { return d.symbol; })\n      .entries(stocks = data);\n\n  // Parse dates and numbers. We assume values are sorted by date.\n  // Also compute the maximum price per symbol, needed for the y-domain.\n  symbols.forEach(function(s) {\n    s.values.forEach(function(d) { d.date = parse(d.date); d.price = +d.price; });\n    s.maxPrice = d3.max(s.values, function(d) { return d.price; });\n    s.sumPrice = d3.sum(s.values, function(d) { return d.price; });\n  });\n\n  // Sort by maximum price, descending.\n  symbols.sort(function(a, b) { return b.maxPrice - a.maxPrice; });\n\n  var g = svg.selectAll(\"g\")\n      .data(symbols)\n    .enter().append(\"g\")\n      .attr(\"class\", \"symbol\");\n\n  setTimeout(lines, duration);\n});\n\nfunction lines() {\n  x = d3.time.scale().range([0, w - 60]);\n  y = d3.scale.linear().range([h / 4 - 20, 0]);\n\n  // Compute the minimum and maximum date across symbols.\n  x.domain([\n    d3.min(symbols, function(d) { return d.values[0].date; }),\n    d3.max(symbols, function(d) { return d.values[d.values.length - 1].date; })\n  ]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + (i * h / 4 + 10) + \")\"; });\n\n  g.each(function(d) {\n    var e = d3.select(this);\n\n    e.append(\"path\")\n        .attr(\"class\", \"line\");\n\n    e.append(\"circle\")\n        .attr(\"r\", 5)\n        .style(\"fill\", function(d) { return color(d.key); })\n        .style(\"stroke\", \"#000\")\n        .style(\"stroke-width\", \"2px\");\n\n    e.append(\"text\")\n        .attr(\"x\", 12)\n        .attr(\"dy\", \".31em\")\n        .text(d.key);\n  });\n\n  function draw(k) {\n    g.each(function(d) {\n      var e = d3.select(this);\n      y.domain([0, d.maxPrice]);\n\n      e.select(\"path\")\n          .attr(\"d\", function(d) { return line(d.values.slice(0, k + 1)); });\n\n      e.selectAll(\"circle, text\")\n          .data(function(d) { return [d.values[k], d.values[k]]; })\n          .attr(\"transform\", function(d) { return \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\"; });\n    });\n  }\n\n  var k = 1, n = symbols[0].values.length;\n  d3.timer(function() {\n    draw(k);\n    if ((k += 2) >= n - 1) {\n      draw(n - 1);\n      setTimeout(horizons, 500);\n      return true;\n    }\n  });\n}\n\nfunction horizons() {\n  svg.insert(\"defs\", \".symbol\")\n    .append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", w)\n      .attr(\"height\", h / 4 - 20);\n\n  var color = d3.scale.ordinal()\n      .range([\"#c6dbef\", \"#9ecae1\", \"#6baed6\"]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"clip-path\", \"url(#clip)\");\n\n  area\n      .y0(h / 4 - 20);\n\n  g.select(\"circle\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (-h / 4) + \")\"; })\n      .remove();\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (h / 4 - 20) + \")\"; })\n      .attr(\"dy\", \"0em\");\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).selectAll(\".area\")\n        .data(d3.range(3))\n      .enter().insert(\"path\", \".line\")\n        .attr(\"class\", \"area\")\n        .attr(\"transform\", function(d) { return \"translate(0,\" + (d * (h / 4 - 20)) + \")\"; })\n        .attr(\"d\", area(d.values))\n        .style(\"fill\", function(d, i) { return color(i); })\n        .style(\"fill-opacity\", 1e-6);\n\n    y.domain([0, d.maxPrice / 3]);\n\n    d3.select(this).selectAll(\".line\").transition()\n        .duration(duration)\n        .attr(\"d\", line(d.values))\n        .style(\"stroke-opacity\", 1e-6);\n\n    d3.select(this).selectAll(\".area\").transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1)\n        .attr(\"d\", area(d.values))\n        .each(\"end\", function() { d3.select(this).style(\"fill-opacity\", null); });\n  });\n\n  setTimeout(areas, duration + delay);\n}\n\nfunction areas() {\n  var g = svg.selectAll(\".symbol\");\n\n  axis\n      .y(h / 4 - 21);\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return axis(d.values); });\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).select(\".line\").transition()\n        .duration(duration)\n        .style(\"stroke-opacity\", 1)\n        .each(\"end\", function() { d3.select(this).style(\"stroke-opacity\", null); });\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1e-6)\n        .attr(\"d\", area(d.values))\n        .remove();\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return !i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill\", color(d.key))\n        .attr(\"d\", area(d.values));\n  });\n\n  svg.select(\"defs\").transition()\n      .duration(duration)\n      .remove();\n\n  g.transition()\n      .duration(duration)\n      .each(\"end\", function() { d3.select(this).attr(\"clip-path\", null); });\n\n  setTimeout(stackedArea, duration + delay);\n}\n\nfunction stackedArea() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  area\n      .y0(function(d) { return y(d.price0); })\n      .y1(function(d) { return y(d.price0 + d.price); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration)\n      .attr(\"transform\", \"translate(0,0)\")\n      .each(\"end\", function() { d3.select(this).attr(\"transform\", null); });\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", function(d, i) { return i < 3 ? 1e-6 : 1; })\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(streamgraph, duration + delay);\n}\n\nfunction streamgraph() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\")\n      .offset(\"wiggle\");\n\n  stack(symbols);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration);\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(overlappingArea, duration + delay);\n}\n\nfunction overlappingArea() {\n  var g = svg.selectAll(\".symbol\");\n\n  line\n      .y(function(d) { return y(d.price0 + d.price); });\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d.maxPrice; }))])\n      .range([h, 0]);\n\n  area\n      .y0(h)\n      .y1(function(d) { return y(d.price); });\n\n  line\n      .y(function(d) { return y(d.price); });\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", .5)\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price) + \")\"; });\n\n  svg.append(\"line\")\n      .attr(\"class\", \"line\")\n      .attr(\"x1\", 0)\n      .attr(\"x2\", w - 60)\n      .attr(\"y1\", h)\n      .attr(\"y2\", h)\n      .style(\"stroke-opacity\", 1e-6)\n    .transition()\n      .duration(duration)\n      .style(\"stroke-opacity\", 1);\n\n  setTimeout(groupedBar, duration + delay);\n}\n\nfunction groupedBar() {\n  x = d3.scale.ordinal()\n      .domain(symbols[0].values.map(function(d) { return d.date; }))\n      .rangeBands([0, w - 60], .1);\n\n  var x1 = d3.scale.ordinal()\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeBands([0, x.rangeBand()]);\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .remove();\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", 1e-6)\n      .remove();\n\n  g.each(function(p, j) {\n    d3.select(this).selectAll(\"rect\")\n        .data(function(d) { return d.values; })\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.date) + x1(p.key); })\n        .attr(\"y\", function(d) { return y(d.price); })\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"height\", function(d) { return h - y(d.price); })\n        .style(\"fill\", color(p.key))\n        .style(\"fill-opacity\", 1e-6)\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1);\n  });\n\n  setTimeout(stackedBar, duration + delay);\n}\n\nfunction stackedBar() {\n  x.rangeRoundBands([0, w - 60], .1);\n\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  var g = svg.selectAll(\".symbol\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.select(\"text\")\n      .delay(symbols[0].values.length * 10)\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price); })\n      .attr(\"height\", function(d) { return h - y(d.price); })\n      .each(\"end\", function() {\n        d3.select(this)\n            .style(\"stroke\", \"#fff\")\n            .style(\"stroke-opacity\", 1e-6)\n          .transition()\n            .duration(duration / 2)\n            .attr(\"x\", function(d) { return x(d.date); })\n            .attr(\"width\", x.rangeBand())\n            .style(\"stroke-opacity\", 1);\n      });\n\n  setTimeout(transposeBar, duration + symbols[0].values.length * 10 + delay);\n}\n\nfunction transposeBar() {\n  x\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeRoundBands([0, w], .2);\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d3.sum(d.values.map(function(d) { return d.price; })); }))]);\n\n  var stack = d3.layout.stack()\n      .x(function(d, i) { return i; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; });\n\n  stack(d3.zip.apply(null, symbols.map(function(d) { return d.values; }))); // transpose!\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price) - 1; })\n      .attr(\"height\", function(d) { return h - y(d.price) + 1; })\n      .attr(\"x\", function(d) { return x(d.symbol); })\n      .attr(\"width\", x.rangeBand())\n      .style(\"stroke-opacity\", 1e-6);\n\n  t.select(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"transform\", function(d) { return \"translate(\" + (x(d.key) + x.rangeBand() / 2) + \",\" + h + \")\"; })\n      .attr(\"dy\", \"1.31em\")\n      .each(\"end\", function() { d3.select(this).attr(\"x\", null).attr(\"text-anchor\", \"middle\"); });\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"x2\", w);\n\n  setTimeout(donut,  duration / 2 + symbols[0].values.length * 10 + delay);\n}\n\nfunction donut() {\n  var g = svg.selectAll(\".symbol\");\n\n  g.selectAll(\"rect\").remove();\n\n  var pie = d3.layout.pie()\n      .value(function(d) { return d.sumPrice; });\n\n  var arc = d3.svg.arc();\n\n  g.append(\"path\")\n      .style(\"fill\", function(d) { return color(d.key); })\n      .data(function() { return pie(symbols); })\n    .transition()\n      .duration(duration)\n      .tween(\"arc\", arcTween);\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"dy\", \".31em\");\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"y1\", 2 * h)\n      .attr(\"y2\", 2 * h)\n      .remove();\n\n  function arcTween(d) {\n    var path = d3.select(this),\n        text = d3.select(this.parentNode.appendChild(this.previousSibling)),\n        x0 = x(d.data.key),\n        y0 = h - y(d.data.sumPrice);\n\n    return function(t) {\n      var r = h / 2 / Math.min(1, t + 1e-3),\n          a = Math.cos(t * Math.PI / 2),\n          xx = (-r + (a) * (x0 + x.rangeBand()) + (1 - a) * (w + h) / 2),\n          yy = ((a) * h + (1 - a) * h / 2),\n          f = {\n            innerRadius: r - x.rangeBand() / (2 - a),\n            outerRadius: r,\n            startAngle: a * (Math.PI / 2 - y0 / r) + (1 - a) * d.startAngle,\n            endAngle: a * (Math.PI / 2) + (1 - a) * d.endAngle\n          };\n\n      path.attr(\"transform\", \"translate(\" + xx + \",\" + yy + \")\");\n      path.attr(\"d\", arc(f));\n      text.attr(\"transform\", \"translate(\" + arc.centroid(f) + \")translate(\" + xx + \",\" + yy + \")rotate(\" + ((f.startAngle + f.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n    };\n  }\n\n  setTimeout(donutExplode, duration + delay);\n}\n\nfunction donutExplode() {\n  var r0a = h / 2 - x.rangeBand() / 2,\n      r1a = h / 2,\n      r0b = 2 * h - x.rangeBand() / 2,\n      r1b = 2 * h,\n      arc = d3.svg.arc();\n\n  svg.selectAll(\".symbol path\")\n      .each(transitionExplode);\n\n  function transitionExplode(d, i) {\n    d.innerRadius = r0a;\n    d.outerRadius = r1a;\n    d3.select(this).transition()\n        .duration(duration / 2)\n        .tween(\"arc\", tweenArc({\n          innerRadius: r0b,\n          outerRadius: r1b\n        }));\n  }\n\n  function tweenArc(b) {\n    return function(a) {\n      var path = d3.select(this),\n          text = d3.select(this.nextSibling),\n          i = d3.interpolate(a, b);\n      for (var key in b) a[key] = b[key]; // update data\n      return function(t) {\n        var a = i(t);\n        path.attr(\"d\", arc(a));\n        text.attr(\"transform\", \"translate(\" + arc.centroid(a) + \")translate(\" + w / 2 + \",\" + h / 2 +\")rotate(\" + ((a.startAngle + a.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n      };\n    }\n  }\n\n  setTimeout(function() {\n    svg.selectAll(\"*\").remove();\n    svg.selectAll(\"g\").data(symbols).enter().append(\"g\").attr(\"class\", \"symbol\");\n    lines();\n  }, duration);\n}\n\n</script>", "description": "D3 Show Reel", "created_at": "2016-10-17T03:44:53Z", "updated_at": "2016-10-17T03:44:53Z", "api": ["d3.scale.category10", "d3.select", "d3.svg.line", "d3.svg.area", "d3.csv", "d3.time.format", "d3.nest", "d3.max", "d3.sum", "d3.time.scale", "d3.scale.linear", "d3.min", "d3.timer", "d3.scale.ordinal", "d3.range", "d3.layout.stack", "d3.zip.apply", "d3.layout.pie", "d3.svg.arc", "d3.interpolate"], "readme": "The first 15 seconds of the D3 show reel. See full video at <http://vimeo.com/29862153>. Includes seamless transitions between the following visualization types:\n\n* lines\n* horizons\n* areas\n* stacked areas\n* streamgraph\n* overlapping areas\n* grouped bars\n* stacked bars\n* bars\n* donut\n\nAdmittedly, these aren\u2019t the most useful visualizations; their purpose is not to inform but to demonstrate D3\u2019s capability for producing dynamic visualizations with custom transitions. They *do* show real data (the monthly closing price for ten years\u2019 worth of stock data), but I didn\u2019t include axes for date or price. See the [axis component](http://bl.ocks.org/1166403) for a better example. Also, the stacked visualizations aren\u2019t especially meaningful, unless you imagine owning a portfolio with equal parts AAPL, AMZN, IBM and MSFT. Similarly, the bars and donuts represent the *average* price (or sum) during this time period.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1256572'>D3 Show Reel</a>", "uid": "lorenzopub_f8cb1a3c4ee0917201197151397c3692"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n    padding = 1.5, // separation between same-color nodes\n    clusterPadding = 6, // separation between different-color nodes\n    maxRadius = 12;\n\n  \nvar n = 200, // total number of nodes\n    m = 10; // number of distinct clusters\n\nvar color = d3.scaleSequential(d3.interpolateRainbow)\n    .domain(d3.range(m));\n\n// The largest node for each cluster.\nvar clusters = new Array(m);\n\nvar nodes = d3.range(n).map(function() {\n  var i = Math.floor(Math.random() * m),\n      r = Math.sqrt((i + 1) / m * -Math.log(Math.random())) * maxRadius,\n      d = {\n        cluster: i,\n        radius: r,\n        x: Math.cos(i / m * 2 * Math.PI) * 200 + width / 2 + Math.random(),\n        y: Math.sin(i / m * 2 * Math.PI) * 200 + height / 2 + Math.random()\n      };\n  if (!clusters[i] || (r > clusters[i].radius)) clusters[i] = d;\n  return d;\n});\n  \n\nvar force = d3.forceSimulation()\n  // keep entire simulation balanced around screen center\n  .force('center', d3.forceCenter(width/2, height/2))\n\t\n\t// pull toward center\n  .force('attract', attract()\n    .target([width/2, height/2])\n    .strength(0.02))\n\n  // cluster by section\n  .force('cluster', cluster()\n    .strength(0.7))\n\n  // apply collision with padding\n  .force('collide', d3.forceCollide(d => d.radius + padding)\n    .strength(0))\n\n  .on('tick', layoutTick)\n\t.nodes(nodes);\n  \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar node = svg.selectAll(\"circle\")\n    .data(nodes)\n  .enter().append(\"circle\")\n    .style(\"fill\", function(d) { return color(d.cluster/10); });\n\n// ramp up collision strength to provide smooth transition\nvar transitionTime = 3000;\nvar t = d3.timer(function (elapsed) {\n  var dt = elapsed / transitionTime;\n  force.force('collide').strength(Math.pow(dt, 2) * 0.7);\n  if (dt >= 1.0) t.stop();\n});\n  \nfunction layoutTick(e) {\n  node\n      .attr(\"cx\", function(d) { return d.x; })\n      .attr(\"cy\", function(d) { return d.y; })\n      .attr(\"r\", function(d) { return d.radius; });\n}\n\n// Move d to be adjacent to the cluster node.\n// from: https://bl.ocks.org/mbostock/7881887\nfunction cluster () {\n\n  var nodes,\n    strength = 0.1;\n\n  function force (alpha) {\n\n    // scale + curve alpha value\n    alpha *= strength * alpha;\n\n    nodes.forEach(function(d) {\n\t\t\tvar cluster = clusters[d.cluster];\n    \tif (cluster === d) return;\n      \n      let x = d.x - cluster.x,\n        y = d.y - cluster.y,\n        l = Math.sqrt(x * x + y * y),\n        r = d.radius + cluster.radius;\n\n      if (l != r) {\n        l = (l - r) / l * alpha;\n        d.x -= x *= l;\n        d.y -= y *= l;\n        cluster.x += x;\n        cluster.y += y;\n      }\n    });\n\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n  }\n\n  force.strength = _ => {\n    strength = _ == null ? strength : _;\n    return force;\n  };\n\n  return force;\n\n}\n  \nfunction attract (target) {\n\n  let nodes,\n    targets,\n    strength = 0.1;\n\n  function force (alpha) {\n    let node, target;\n    for (let i=0; i<nodes.length; i++) {\n      node = nodes[i];\n      target = targets[i];\n      node.vx += (target[0] - node.x) * strength * alpha;\n      node.vy += (target[1] - node.y) * strength * alpha;\n    }\n  }\n\n  force.initialize = _ => {\n    nodes = _;\n    targets = new Array(nodes.length);\n    for (let i=0; i<nodes.length; i++) targets[i] = target(nodes[i], i, nodes);\n  };\n\n  force.strength = _ => {\n    strength = _ == null ? strength : _;\n    return force;\n  };\n\n  force.target = _ => {\n    if (_ == null) _ = target;\n    target = (typeof _ === 'function') ? _ : () => _;\n    return force;\n  };\n\n  if (!target) force.target([ 0, 0 ]);\n  return force;\n\n}\n\n  \n</script>", "description": "cluster force III", "created_at": "2016-10-16T21:21:19Z", "updated_at": "2016-10-18T04:13:09Z", "api": ["d3.scaleSequential", "d3.range", "d3.forceSimulation", "d3.forceCenter", "d3.forceCollide", "d3.select", "d3.timer"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/ericsoco/'>ericsoco</a>'s block: <a href='http://bl.ocks.org/ericsoco/38b4f8b51ecf116e6fb0727d25687e8e'>cluster force II</a>\n\nMoving toward a v4 modular version of [Mike Bostock's Clustered Force Layout III](https://bl.ocks.org/mbostock/7881887).\n\nThere are two things worth mentioning here:\n1. Uses v4's `forceSimulation()`\n2. Modularizes the `cluster` force, offering an API similar to other core `d3-force` modules like, e.g., the [positioning forces](https://github.com/d3/d3-force/blob/master/src/x.js).\n\nThis version spawns nodes further from the center and then pulls them toward the center via a custom attract force, also written as a module following the `d3-force` module format/pattern.", "uid": "ericsoco_c3fdb4c844a88101f606e9db08e66845"}, {"code": "<script>\n\n  \nvar width = 960,\n    height = 500,\n    padding = 1.5, // separation between same-color nodes\n    clusterPadding = 6, // separation between different-color nodes\n    maxRadius = 12;\n\n  \nvar n = 200, // total number of nodes\n    m = 10; // number of distinct clusters\n\nvar color = d3.scaleSequential(d3.interpolateRainbow)\n    .domain(d3.range(m));\n\n// The largest node for each cluster.\nvar clusters = new Array(m);\n\nvar nodes = d3.range(n).map(function() {\n  var i = Math.floor(Math.random() * m),\n      r = Math.sqrt((i + 1) / m * -Math.log(Math.random())) * maxRadius,\n      d = {\n        cluster: i,\n        radius: r,\n        x: Math.cos(i / m * 2 * Math.PI) * 100 + width / 2 + Math.random(),\n        y: Math.sin(i / m * 2 * Math.PI) * 100 + height / 2 + Math.random()\n      };\n  if (!clusters[i] || (r > clusters[i].radius)) clusters[i] = d;\n  return d;\n});\n  \n\nvar force = d3.forceSimulation()\n  // keep entire simulation balanced around screen center\n  .force('center', d3.forceCenter(width/2, height/2))\n\n  // cluster by section\n  .force('cluster', cluster()\n    .strength(0.2))\n\n  // apply collision with padding\n  .force('collide', d3.forceCollide(d => d.radius + padding)\n    .strength(0))\n\n  .on('tick', layoutTick)\n\t.nodes(nodes);\n  \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar node = svg.selectAll(\"circle\")\n    .data(nodes)\n  .enter().append(\"circle\")\n    .style(\"fill\", function(d) { return color(d.cluster/10); });\n\n// ramp up collision strength to provide smooth transition\nvar transitionTime = 3000;\nvar t = d3.timer(function (elapsed) {\n  var dt = elapsed / transitionTime;\n  force.force('collide').strength(Math.pow(dt, 2) * 0.7);\n  if (dt >= 1.0) t.stop();\n});\n  \nfunction layoutTick(e) {\n  node\n      .attr(\"cx\", function(d) { return d.x; })\n      .attr(\"cy\", function(d) { return d.y; })\n      .attr(\"r\", function(d) { return d.radius; });\n}\n\n// Move d to be adjacent to the cluster node.\n// from: https://bl.ocks.org/mbostock/7881887\nfunction cluster () {\n\n  var nodes,\n    strength = 0.1;\n\n  function force (alpha) {\n\n    // scale + curve alpha value\n    alpha *= strength * alpha;\n\n    nodes.forEach(function(d) {\n\t\t\tvar cluster = clusters[d.cluster];\n    \tif (cluster === d) return;\n      \n      let x = d.x - cluster.x,\n        y = d.y - cluster.y,\n        l = Math.sqrt(x * x + y * y),\n        r = d.radius + cluster.radius;\n\n      if (l != r) {\n        l = (l - r) / l * alpha;\n        d.x -= x *= l;\n        d.y -= y *= l;\n        cluster.x += x;\n        cluster.y += y;\n      }\n    });\n\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n  }\n\n  force.strength = _ => {\n    strength = _ == null ? strength : _;\n    return force;\n  };\n\n  return force;\n\n}\n  \n</script>", "description": "cluster force II", "created_at": "2016-10-16T20:57:44Z", "updated_at": "2016-10-16T22:27:06Z", "api": ["d3.scaleSequential", "d3.range", "d3.forceSimulation", "d3.forceCenter", "d3.forceCollide", "d3.select", "d3.timer"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/ericsoco/'>ericsoco</a>'s block: <a href='http://bl.ocks.org/ericsoco/cd0c38a20141e997e926592264067db3'>cluster force</a>\n\nThis version ramps up collision strength using a `d3.timer`, to move toward the jitter-reduction effect demonstrated [here](https://bl.ocks.org/mbostock/7881887).", "uid": "ericsoco_38b4f8b51ecf116e6fb0727d25687e8e"}, {"code": "<script>\n\n  var width = 750,\n  height = 1370;\n\n  var formatNumber = d3.format(\",d\");\n\n  var path = d3.geo.path()\n    .projection(null);\n\n  d3.json(\"cv.json\", function(error, cv) {\n      if (error) throw error;\n      \n      var tracts = topojson.feature(cv, cv.objects.census);\n\n      var color = d3.scale.threshold()\n          .domain([1, 10, 50, 100, 500, 1000, 2000, 5000])\n          .range([\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\",\"#800026\"]);\n\n      // A position encoding for the key only.\n      var x = d3.scale.linear()\n          .domain([0, 5100])\n          .range([0, 480]);\n\n      var xAxis = d3.svg.axis()\n          .scale(x)\n          .orient(\"bottom\")\n          .tickSize(13)\n          .tickValues(color.domain())\n          .tickFormat(function(d) { return d >= 100 ? formatNumber(d) : null; });\n\n      var svg = d3.select(\"body\").append(\"svg\")\n          .attr(\"width\", width)\n          .attr(\"height\", height)\n\n      // Clip reprojected to land.\n      svg.append(\"defs\").append(\"clipPath\")\n          .attr(\"id\", \"clip-land\")\n          .append(\"path\")\n          .datum(tracts)\n          .attr(\"d\", path);\n\n      var group = svg.append(\"g\").attr('class', 'map')\n          .attr('transform', 'translate(0, 70)')\n\n      // Group reprojected by color for faster rendering.\n      group.append(\"g\")\n          .attr(\"class\", \"tract\")\n          .attr(\"clip-path\", \"url(#clip-land)\")\n          .selectAll(\"path\")\n          .data(d3.nest()\n          .key(function(d) { return color(d.properties.population / d.properties.area * 2.58999e6); })\n          .entries(tracts.features.filter(function(d) { return d.properties.area; })))\n          .enter().append(\"path\")\n          .style(\"fill\", function(d) { return d.key; })\n          .attr(\"d\", function(d) { return path({type: \"FeatureCollection\", features: d.values}); });\n\n      // Draw county borders.\n      group.append(\"path\")\n      .datum(topojson.mesh(cv, cv.objects.munis, function(a, b) { return a !== b; }))\n          .attr(\"class\", \"county-border\")\n          .attr(\"d\", path);\n\n          var g = svg.append(\"g\")\n          .attr(\"class\", \"key\")\n          .attr(\"transform\", \"translate(0,40)\");\n\n      g.selectAll(\"rect\")\n          .data(color.range().map(function(d, i) {\n            return {\n              x0: i ? x(color.domain()[i - 1]) : x.range()[0],\n              x1: i < color.domain().length ? x(color.domain()[i]) : x.range()[1],\n              z: d\n            };\n          }))\n          .enter().append(\"rect\")\n          .attr(\"height\", 8)\n          .attr(\"x\", function(d) { return d.x0; })\n          .attr(\"width\", function(d) { return d.x1 - d.x0; })\n          .style(\"fill\", function(d) { return d.z; });\n\n      g.call(xAxis).append(\"text\")\n          .attr(\"class\", \"caption\")\n          .attr(\"y\", -6)\n          .text(\"Population per square mile\");\n\n  });\n  </script>", "description": "Comunidad Valenciana population", "created_at": "2016-10-14T02:11:54Z", "updated_at": "2016-10-14T02:12:01Z", "api": ["d3.format", "d3.geo.path", "d3.json", "d3.scale.threshold", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.nest"], "readme": "Source: Census data and shapefile [Ine](http://www.ine.es/censos2011_datos/cen11_datos_resultados_seccen.htm), municipios polygons [datos.gob](http://datos.gob.es/lineas-limite).\n\nI used a ```bash``` script I to filter from government's files and get the shapefiles I would use:\n\nIsolate Comunidad Valenciana census polygons\n\n```bash\nogr2ogr \\\n  -where \"CCA = '10'\" \\\n  cv/shapes/CV.shp \\\n  cartografia_censo2011_nacional/SECC_CPV_E_20111101_01_R_INE.shp\n```\n\nShame for municipios\n\n```bash\nogr2ogr \\\n  -where \"CODNUT2 = 'ES52'\" \\\n  cv/shapes/munis.shp \\\n  recintos_municipales_inspire_peninbal_etrs89/recintos_municipales_inspire_peninbal_etrs89.shp\n```\n\nreproject each shapefile and export to GeoJSON\n\n```bash\nogr2ogr \\\n  -f \"GeoJSON\" \\\n  -t_srs \"EPSG:32630\" \\\n  cv/shapes/census.json \\\n  cv/shapes/CV.shp\n```\n```bash\nogr2ogr \\\n  -f \"GeoJSON\" \\\n  -t_srs \"EPSG:32630\" \\\n  cv/shapes/munis.json \\\n  cv/shapes/munis.shp\n```\n\nThen I use QGIS to create an unique ID from several fields for each polygon to could join with the csv.\nJoin the data, preserve some properties, simplify, and merge both shapefiles in one ```json```.\n\"The resulting TopoJSON file has the 2011 estimated population of each census tract as the population property, and the land area in square meters as the area property. We will divide one by the other and converting to square miles\".\n\n```bash\ntopojson \\\n  -e data.csv \\\n  --id-property CUSEC,cod \\\n  -p population=+t1_1,area=+Shape_area \\\n  -s 1 \\\n  --width 750 \\\n  --margin 10 \\\n  -o cv.json \\\n  -- cv/shapes/census.json cv/shapes/munis.json\n```\nThis recipe is in the bash script in this gist repo.\n\nMostly everything comes from [Mike's](https://bl.ocks.org/mbostock/5562380) block.\n", "uid": "LuisSevillano_c7690adccf39bafe583f72b044e407e8"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar parseTime = d3.timeParse(\"%Y%m%d\");\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal(d3.schemeCategory10);\n\nvar line = d3.line()\n    .curve(d3.curveBasis)\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\n  // manipulate data\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n\t// remove the first column, then iterate over the cities  \n  var cities = data.columns.slice(1).map(function(id) {\n    // the id is the city name.\n    return {\n      id: id,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: d[id]};\n      })\n    };\n  });\n\n  // the data is going to be, the an array of 3 elements, one for each series, then for each element there is an id = name of the time series, and a data array, with the time, and the temperature data.\n  \n  // get the domain for the x axis\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  // domain for the Y axis\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(d) { return d.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.temperature; }); })\n  ]);\n\n  // domain for the colors\n  z.domain(cities.map(function(c) { return c.id; }));\n\n  // append the x axis\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // append the y axis\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y))\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"0.71em\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Temperature, F\");\n\n  // add 3 groups, one for each time series\n  var city = g.selectAll(\".city\")\n    .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  // in each time series, append a path, in the attribute d, assign the temperature values with the function line, and the stroke is the color of the scale\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });\n});\n\nfunction type(d, _, columns) {\n  d.date = parseTime(d.date);\n  for (var i = 1, n = columns.length, c; i < n; ++i) d[c = columns[i]] = +d[c];\n  return d;\n}\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-10-12T15:58:45Z", "updated_at": "2016-10-15T18:49:00Z", "api": ["d3.select", "d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.line", "d3.tsv", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/d62016714ef2c71c643eaa55a022176b'>Multi-Series Line Chart</a>", "uid": "juanprq_42d34c2ebefd1be5d173b802f38bb98a"}, {"code": "<script>\n    var width = 960,\n    margin = 20,\n    height = 500,\n    svg = d3.select('svg'),\n    origin = svg.append('g')\n        .attr('transform', 'translate(' + width*3/5 + ',' + height/2 + ')'),\n    rScale = d3.scale.linear()\n        .domain([-10, 110])\n        .range([0, height/2 - margin]),\n    yScale = function(day, temp) { return -Math.cos(angleScale(day)*Math.PI/180)*rScale(parseInt(temp))},\n    xScale = function(day, temp) { return Math.sin(angleScale(day)*Math.PI/180)*rScale(parseInt(temp))},\n    angleScale = d3.scale.linear()\n        .range([0, 360]);\n\n    var drawRadial = function(chart, cl, data, low, high){\n      chart.selectAll('line.' + cl)\n        .data(data)\n        .enter().append('line')\n        .attr('x1', function(d) { return xScale(d.index, d[low])})\n        .attr('x2', function(d) { return xScale(d.index, d[high])})\n        .attr('y1', function(d) { return yScale(d.index, d[low])})\n        .attr('y2', function(d) { return yScale(d.index, d[high])})\n        .attr('class', cl);\n    };\n\n    d3.json('ny.json', function(err, json){\n\n        angleScale.domain([0, json.values.length - 1]);\n\n        var min = d3.min(json.values, d => parseInt(d.recLow)),\n        max = d3.max(json.values, d => parseInt(d.recHigh));\n\n        var months = [];\n        //find index for months based on data\n        json.values.forEach((d, i) => {\n            var month = d.date.split('-')[1],\n            prevDaysMonth = ( i === 0 ) ? undefined : json.values[i - 1].date.split('-')[1];\n            if (i === 0 || month != prevDaysMonth){\n                months.push({\n                    month: month,\n                    index: i\n                });\n            }\n        })\n\n        //circle axis\n        origin.selectAll('circle.axis-green')\n            .data([40, 60, 80, 100])\n            .enter().append('circle')\n            .attr('r', function(d) { return rScale(d)})\n            .attr('class', 'axis record')\n\n        //record low and high\n        drawRadial(origin, 'record', json.values, 'recLow', 'recHigh')\n\n        //avg low and high\n        drawRadial(origin, 'avg', json.values, 'avgLow', 'avgHigh')\n\n        //this year's temperature\n        var thisYear = json.values.filter(function(d){ return d.min });\n\n        drawRadial(origin, 'year', thisYear, 'min', 'max')\n\n        var lowLower = json.values.filter(function(d){ return d.min && parseInt(d.min) < parseInt(d.avgLow)});\n        drawRadial(origin, 'yearLow', lowLower, 'min', 'avgLow')\n\n        var highHigher = json.values.filter(function(d){ return d.min && parseInt(d.max) > parseInt(d.avgHigh)});\n        drawRadial(origin, 'yearHigh', highHigher, 'max', 'avgHigh')\n\n        var circleAxis = [0, 32, 60, 80, 100]\n        circleAxis = circleAxis.map( function(d){ return {temp: d, index: 320}})\n\n        //temperature axis\n        origin.selectAll('circle.axis-white')\n            .data(circleAxis)\n            .enter().append('circle')\n            .attr('r', function(d){ return rScale(d.temp)})\n            .attr('class', 'axis')\n\n        //temperature axis labels\n        origin.selectAll('text.temp')\n            .data(circleAxis)\n            .enter().append('text')\n            .attr('x', function(d){ return xScale(d.index, d.temp)})\n            .attr('y', function(d){ return yScale(d.index, d.temp)})\n            .text(function(d){ return d.temp + ''})\n            .attr('class', 'temp');\n\n        //axis lines\n        var axis = origin.append('g');\n\n        axis.selectAll('line.axis')\n          .data(months)\n          .enter().append('line')\n          .attr('x2', function(d){ return xScale(d.index, 120)})\n          .attr('y2', function(d){ return  -yScale(d.index, 120)})\n          .attr('class', 'axis');\n\n        var monthLabels = months.filter( (d,i) => i%3 === 0)\n        //month labels\n        axis.selectAll('text.months')\n          .data(monthLabels)\n          .enter().append('text')\n          .attr('x', function(d){ return xScale(d.index, 110)})\n          .attr('y', function(d){ return yScale(d.index, 110)})\n          .text(function(d){ return d.month})\n          .attr('class', 'months');\n\n        //center for reference\n        axis.append('circle')\n            .attr('r', 3)\n            .attr('class', 'avg')\n\n        //title\n        svg.append('text')\n            .attr('x', 30)\n            .attr('y', 60)\n            .text(json.name)\n            .attr('class', 'title')\n\n        //subtitle\n        svg.append('text')\n            .attr('x', 30)\n            .attr('y', 100)\n            .text('Historical Weather Data')\n\n        //create legend\n        var legendScale = d3.scale.ordinal()\n            .domain(['Record', 'Average', 'This Year - within avg', 'This Year - beyond avg', ])\n            .range(['record', 'avg', 'beyond', 'year'])\n\n        //d3-legend\n        var legend = d3.legend.color()\n            .shapePadding(5)\n            .useClass(true)\n            .scale(legendScale);\n\n        svg.append('g')\n            .attr('transform', 'translate(30,120)')\n            .call(legend);\n\n\n    });\n\n\n    </script>", "description": "Annual Temp - New York 2015", "created_at": "2016-10-12T13:28:49Z", "updated_at": "2016-10-12T13:28:49Z", "api": ["d3.select", "d3.scale.linear", "d3.json", "d3.min", "d3.max", "d3.scale.ordinal", "d3.legend.color"], "readme": "## Weather Plot - New York 2015\n\nIn the example we're looking at historical weather data for New York provided by [intellicast.com](http://www.intellicast.com/) and [wunderground.com](http://www.wunderground.com/). Inspired by [weather-radicals.com](http://www.weather-radials.com/).\n\nThis example uses scales to roll your own radial projection by mapping out the x, y, and r positions. If you are creating a line or an area you can use d3's convenience functions d3.svg.line.radial and d3.svg.area.radial but this is a method you can use if you want to use different graphical elements in a circular layout.\n\nforked from <a href='http://bl.ocks.org/susielu/'>susielu</a>'s block: <a href='http://bl.ocks.org/susielu/b6bdb82045c2aa8225f5'>Annual Temp - New York 2015</a>", "uid": "lorenzopub_724338d57f5e06b346413074d2ed8627"}, {"code": "<script>\n    // http://slavevoyages.org/tast/assessment/estimates.faces\n    d3.tsv(\"slavery.tsv\", function(err, data) {\n      var countries = Object.keys(data[0]).slice(1,7);\n      countries = [\n        \"Portugal\",\n        \"Great Britain\",\n        \"France\",\n        \"Spain\",\n\t\t\t\t\"Netherlands\",\n\t\t\t\t\"U.S.A.\",\n      ]\n      var countryData = {}\n      countries.forEach(function(country) {\n        countryData[country] = data.map(function(d) {\n          return parseInt(d[country].replace(/,/g, ''));\n        })\n      })\n      console.log(countries)\n      console.log(data[0]);\n      var width = 960;\n      var height = 500;\n      \n      var lineHeight = 211;\n      var lineOffset = 21;\n      \n      var chartHeight = 350;\n      \n      var color = d3.scale.ordinal()\n      .domain(d3.range(countries.length))\n      .range([\n        \"#7C938D\",\n        \"#544C36\",\n        \"#BB976E\",\n        \"#A4B284\",\n        \"#5E6560\",\n        \"#7A8868\",\n        \"#9AB7B5\"\n      ])\n\n      \n      var svg = d3.select(\"svg\")\n      .attr({width: width, height: height });\n      \n      var xscale = d3.scale.linear()\n      //.domain(d3.extent(data, function(d) { return +d.year }))\n      .domain([0, data.length])\n      .range([140, width - 20])\n      \n      var yscale = d3.scale.linear()\n      .domain([0, d3.max(countries, function(country) {\n        return d3.max(countryData[country])\n      })])\n      .range([lineHeight, 0])\n      \n      var area = d3.svg.area()\n        .x(function(d,i) { return xscale(i); })\n        .y0(function(d) { return lineHeight; })\n        .y1(function(d) { return yscale(d); })\n        .interpolate(\"basis\")\n\n      var xaxis = svg.selectAll(\"g.year\")\n      .data(data)\n      .enter()\n      .append(\"g\").classed(\"year\", true)\n      .attr({\n        transform: function(d,i) {\n          return \"translate(\" + [xscale(i), chartHeight] + \")\"\n        }\n      })\n      .style({\n        \"display\": function(d,i) { return i % 20 == 0 ? \"\": \"none\" },\n        \"font-size\": \"10px\"\n      })\n      xaxis\n      .append(\"line\").attr({\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: -chartHeight,\n        stroke: \"#f7f7f7\",\n\n      })\n      xaxis\n      .append(\"text\")\n        .text(function(d) { return d.year })\n        .attr(\"transform\", \"rotate(0)translate(-10,12)\")\n      \n      var legend = svg.selectAll(\"g.country\")\n      .data(countries)\n      .enter()\n      .append(\"g\").classed(\"country\", true)\n        .attr(\"transform\", function(d,i) {\n          return \"translate(\" + [20, 205 + i * lineOffset] + \")\";\n        })\n        .style({\n          fill: function(d,i) { return color(i) },\n          \"font-family\": \"Helvetica\"\n        })\n        .append(\"text\")\n      \t.text(function(d) { return d })\n      \n\n      var groups = svg.selectAll(\"g.countries\")\n        .data(countries)\n        .enter().append(\"g\").classed(\"countries\", true)\n        .attr({\n          transform: function(d,i) { return \"translate(\" + [0, i * lineOffset] + \")\" },\n          fill: function(d,i) { return color(i) },\n        })\n      \n      var areas = groups.selectAll(\"path.country\")\n      \t.data(function(d) { return [countryData[d]] })\n      areas\n        .enter()\n        .append(\"path\").classed(\"country\", true)\n        .attr(\"d\", function(d) {\n          return area(d)\n        })\n      \n      \n      \n    })\n  </script>", "description": "slave voyages - embarking", "created_at": "2016-10-11T14:14:53Z", "updated_at": "2016-10-11T14:14:53Z", "api": ["d3.tsv", "d3.scale.ordinal", "d3.range", "d3.select", "d3.scale.linear", "d3.extent", "d3.max", "d3.svg.area"], "readme": "## Slave Voyages - Embarking\n\nThis is an attempt at visualizing the relative scale of the slave trade by country. The data comes from [slavevoyages.org](http://slavevoyages.org/tast/assessment/estimates.faces).\n\nThe visualization is inpsired by the [Mountains-out-of-molehills](http://www.informationisbeautiful.net/visualizations/mountains-out-of-molehills/) visualization. The focus is to communicate the relative scale over time, giving us a sense of activity over time of this attrocious part of our history.\n\n\n\n\n\n\n\n\n\n\n\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/754c7d061c2d0b71be37'>slave voyages - embarking</a>", "uid": "lorenzopub_8501a1752dbdda8db80b1a3cb0afb7d7"}, {"code": "<script>\n  \n// After position the annotation, run `copy(annotations)` in the browser's\n// console and paste over this array:\nvar annotations = [\n  {\n    \"cx\": 625,\n    \"cy\": 111,\n    \"r\": 109,\n    \"text\": \"The longer Old Faithful lays dormant, the longer the eruption last\",\n    \"textWidth\": 140,\n    \"textOffset\": [\n      121,\n      186\n    ]\n  }\n];\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = function(d) { return d.waiting; },\n    y = function(d) { return d.eruptions; }\n\nvar xScale = d3.scale.linear().range([0, width]),\n    yScale = d3.scale.linear().range([height, 0]);\n\nvar xValue = function(d) { return xScale(x(d)); },\n    yValue = function(d) { return yScale(y(d)); };\n\nvar xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\"),\n    yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar ringNote = d3.ringNote()\n  .draggable(true);\n\nd3.json(\"faithful.json\", function(error, data) {\n  if (error) throw error;\n  \n  xScale.domain(d3.extent(data, x));\n  yScale.domain(d3.extent(data, y));\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Time Between Eruptions (minutes)\");\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Eruption Duration (minutes)\");\n   \n   svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3)\n      .attr(\"cx\", xValue)\n      .attr(\"cy\", yValue);\n      \n   svg.append(\"g\")\n     .attr(\"class\", \"annotations\")\n     .call(ringNote, annotations);\n});\n\n</script>", "description": "Chart Annotation", "created_at": "2016-10-11T04:50:48Z", "updated_at": "2016-10-11T04:50:48Z", "api": ["d3.behavior.drag", "d3.svg.line", "d3.select", "d3.scale.linear", "d3.svg.axis", "d3.ringNote", "d3.json", "d3.extent"], "readme": "Example using the [d3.ringNote](https://github.com/armollica/d3-ring-note)\nplugin to add circle annotations to a chart. Drag the dashed circles and \nthe text to move the annotation elements. These moveable, \ndashed-line circles will disappear if `ringNote.draggable(false)` is called.\n\nThe chart shows the eruption duration and waiting time between eruptions\nfor the Old Faithful geyser in Yellowstone National Park. This is\nfrom the [`datasets`](https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/faithful.html)\nR package. \n\nforked from <a href='http://bl.ocks.org/armollica/'>armollica</a>'s block: <a href='http://bl.ocks.org/armollica/853c9344a7808619d863c8d7410062e6'>Chart Annotation</a>", "uid": "lorenzopub_35c309fc1c476f756ccc569584432b60"}, {"code": "<script>\n\nvar margin = {\n    top: 1,\n    right: 1,\n    bottom: 6,\n    left: 1\n  },\n  width = 960 - margin.left - margin.right,\n  height = 500 - margin.top - margin.bottom;\n\nvar fontScale = d3.scaleLinear()\n  .range([8, 30]);\n\nvar formatNumber = d3.format(\",.0f\"),\n  format = function(d) {\n    return formatNumber(d) + \" TWh\";\n  },\n  color = d3.scaleOrdinal(d3.schemeCategory20);\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar weightText = svg.append(\"text\")\n  .text(\"Links weighted equally\")\n  .attr(\"x\", width/2-170)\n  .attr(\"y\", height)\n  .style(\"font-size\", \"24px\");\n\nvar sankey = d3.sankey()\n  .nodeWidth(15)\n  .nodePadding(10)\n  .size([width, height]);\n\nvar path = sankey.link();\n\nd3.json(\"energy.json\", function(energy) {\n  var empty_links = energy.links.map(function(d) {\n    d.id = d.source + \" -> \" + d.target;\n    return {\n      source: d.source,\n      target: d.target,\n      id: d.id,\n      value: 1\n    }\n  });\n\n  sankey\n    .nodes(energy.nodes)\n    .links(empty_links)\n    .layout(32);\n\n  fontScale.domain(d3.extent(energy.nodes, function(d) { return d.value }));\n\n  var link = svg.append(\"g\").selectAll(\".link\")\n    .data(empty_links, function(d) { return d.id; })\n    .enter().append(\"path\")\n    .attr(\"class\", \"link\")\n    .attr(\"d\", path)\n    .style(\"stroke-width\", function(d) {\n      return Math.max(1, d.dy) + \"px\";\n    })\n    .sort(function(a, b) {\n      return b.dy - a.dy;\n    });\n\n  link.append(\"title\")\n    .text(function(d) {\n      return d.source.name + \"  \" + d.target.name + \"\\n\" + format(d.value);\n    });\n\n  var node = svg.append(\"g\").selectAll(\".node\")\n    .data(energy.nodes, function(d) { return d.name; })\n    .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .attr(\"transform\", function(d) {\n      return \"translate(\" + d.x + \",\" + d.y + \")\";\n    });\n\n  node.append(\"rect\")\n    .attr(\"height\", function(d) {\n      return d.dy;\n    })\n    .attr(\"width\", sankey.nodeWidth())\n    .style(\"fill\", function(d) {\n      return d.color = color(d.name.replace(/ .*/, \"\"));\n    })\n    .style(\"stroke\", function(d) {\n      return d3.rgb(d.color).darker(1.8);\n    })\n    .append(\"title\")\n    .text(function(d) {\n      return d.name + \"\\n\" + format(d.value);\n    });\n\n  node.append(\"text\")\n    .attr(\"x\", -6)\n    .attr(\"y\", function(d) {\n      return d.dy / 2;\n    })\n    .attr(\"dy\", \".35em\")\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"transform\", null)\n    .style(\"fill\", function(d) {\n      return d3.rgb(d.color).darker(2.4);\n    })\n    .text(function(d) {\n      return d.name;\n    })\n    .style(\"font-size\", function(d) {\n      return Math.floor(fontScale(d.value)) + \"px\";\n    })\n    .filter(function(d) {\n      return d.x < width / 2;\n    })\n    .attr(\"x\", 6 + sankey.nodeWidth())\n    .attr(\"text-anchor\", \"start\");\n\n  function update(nodeData, linkData) {\n    sankey\n      .nodes(nodeData)\n      .links(linkData)\n      .layout(32);\n\n    sankey.relayout();\n    fontScale.domain(d3.extent(nodeData, function(d) { return d.value }));\n\n    svg.selectAll(\".link\")\n      .data(linkData, function(d) { return d.id; })\n      .sort(function(a, b) {\n        return b.dy - a.dy;\n      })\n      .transition()\n      .duration(1300)\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) {\n        return Math.max(1, d.dy) + \"px\";\n      });\n\n    svg.selectAll(\".node\")\n      .data(nodeData, function(d) { return d.name; })\n      .transition()\n      .duration(1300)\n      .attr(\"transform\", function(d) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      });\n\n    svg.selectAll(\".node rect\")\n      .transition()\n      .duration(1300)\n      .attr(\"height\", function(d) {\n        return d.dy;\n      });\n\n    svg.selectAll(\".node text\")\n      .transition()\n      .duration(1300)\n      .attr(\"y\", function(d) {\n        return d.dy / 2;\n      })\n      .style(\"font-size\", function(d) {\n        return Math.floor(fontScale(d.value)) + \"px\";\n      });\n  };\n\n  var counter = 0;\n  function toggleTransition() {\n    counter++;\n    var activeLinks = counter % 2 ? energy.links : empty_links;\n    weightText.text(counter % 2 ? \"Links weighted by value\" : \"Links weighted equally\");\n    update(energy.nodes, activeLinks);\n    setTimeout(toggleTransition, 2400);\n  };\n\n  setTimeout(toggleTransition, 2400);\n});\n\n</script>", "description": "Sankey Transitions", "created_at": "2016-10-11T04:40:42Z", "updated_at": "2016-10-11T04:40:42Z", "api": ["d3.scaleLinear", "d3.format", "d3.scaleOrdinal", "d3.select", "d3.sankey", "d3.json", "d3.extent", "d3.rgb"], "readme": "This example created for development purposes using the [d3-sankey](https://github.com/d3/d3-sankey) plugin for D3 4.0.\n\nBased on [xaranke's port](http://bl.ocks.org/xaranke/9ada4c74a87b57ae7308) of [Mike Bostock's Sankey Diagram](https://bost.ocks.org/mike/sankey/) with drag behavior enabled and several fixes for the d3 version 4.x release.\n\nIt would be nice if d3-sankey's `value` accessor was configurable, to avoid creating the `empty_links` data structure in the code below.\n\n\nforked from <a href='http://bl.ocks.org/syntagmatic/'>syntagmatic</a>'s block: <a href='http://bl.ocks.org/syntagmatic/77c7f7e8802e8824eed473dd065c450b'>Sankey Transitions</a>", "uid": "lorenzopub_cefd53c7fc67018efba0fe0460cdfd2a"}, {"code": "<script>\n\nvar svg = d3.select(\"body\")\n\t.append(\"svg\")\n\t.append(\"g\")\n\nsvg.append(\"g\")\n\t.attr(\"class\", \"slices\");\nsvg.append(\"g\")\n\t.attr(\"class\", \"labels\");\nsvg.append(\"g\")\n\t.attr(\"class\", \"lines\");\n\nvar width = 960,\n    height = 450,\n\tradius = Math.min(width, height) / 2;\n\nvar pie = d3.layout.pie()\n\t.sort(null)\n\t.value(function(d) {\n\t\treturn d.value;\n\t});\n\nvar arc = d3.svg.arc()\n\t.outerRadius(radius * 0.8)\n\t.innerRadius(radius * 0.4);\n\nvar outerArc = d3.svg.arc()\n\t.innerRadius(radius * 0.9)\n\t.outerRadius(radius * 0.9);\n\nsvg.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nvar key = function(d){ return d.data.label; };\n\nvar color = d3.scale.ordinal()\n\t.domain([\"Lorem ipsum\", \"dolor sit\", \"amet\", \"consectetur\", \"adipisicing\", \"elit\", \"sed\", \"do\", \"eiusmod\", \"tempor\", \"incididunt\"])\n\t.range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nfunction randomData (){\n\tvar labels = color.domain();\n\treturn labels.map(function(label){\n\t\treturn { label: label, value: Math.random() }\n\t});\n}\n\nchange(randomData());\n\nd3.select(\".randomize\")\n\t.on(\"click\", function(){\n\t\tchange(randomData());\n\t});\n\n\nfunction change(data) {\n\n\t/* ------- PIE SLICES -------*/\n\tvar slice = svg.select(\".slices\").selectAll(\"path.slice\")\n\t\t.data(pie(data), key);\n\n\tslice.enter()\n\t\t.insert(\"path\")\n\t\t.style(\"fill\", function(d) { return color(d.data.label); })\n\t\t.attr(\"class\", \"slice\");\n\n\tslice\t\t\n\t\t.transition().duration(1000)\n\t\t.attrTween(\"d\", function(d) {\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\treturn arc(interpolate(t));\n\t\t\t};\n\t\t})\n\n\tslice.exit()\n\t\t.remove();\n\n\t/* ------- TEXT LABELS -------*/\n\n\tvar text = svg.select(\".labels\").selectAll(\"text\")\n\t\t.data(pie(data), key);\n\n\ttext.enter()\n\t\t.append(\"text\")\n\t\t.attr(\"dy\", \".35em\")\n\t\t.text(function(d) {\n\t\t\treturn d.data.label;\n\t\t});\n\t\n\tfunction midAngle(d){\n\t\treturn d.startAngle + (d.endAngle - d.startAngle)/2;\n\t}\n\n\ttext.transition().duration(1000)\n\t\t.attrTween(\"transform\", function(d) {\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\tvar pos = outerArc.centroid(d2);\n\t\t\t\tpos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n\t\t\t\treturn \"translate(\"+ pos +\")\";\n\t\t\t};\n\t\t})\n\t\t.styleTween(\"text-anchor\", function(d){\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\treturn midAngle(d2) < Math.PI ? \"start\":\"end\";\n\t\t\t};\n\t\t});\n\n\ttext.exit()\n\t\t.remove();\n\n\t/* ------- SLICE TO TEXT POLYLINES -------*/\n\n\tvar polyline = svg.select(\".lines\").selectAll(\"polyline\")\n\t\t.data(pie(data), key);\n\t\n\tpolyline.enter()\n\t\t.append(\"polyline\");\n\n\tpolyline.transition().duration(1000)\n\t\t.attrTween(\"points\", function(d){\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\tvar pos = outerArc.centroid(d2);\n\t\t\t\tpos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n\t\t\t\treturn [arc.centroid(d2), outerArc.centroid(d2), pos];\n\t\t\t};\t\t\t\n\t\t});\n\t\n\tpolyline.exit()\n\t\t.remove();\n};\n\n</script>", "description": "Pie charts labels", "created_at": "2016-10-10T15:30:26Z", "updated_at": "2016-10-10T15:30:27Z", "api": ["d3.select", "d3.layout.pie", "d3.svg.arc", "d3.scale.ordinal", "d3.interpolate"], "readme": "This variation of a donut chart demonstrates how to add labels with lines. Clicking on the button changes the displayed data.\nCheck [Pie Chart with Labels and Missing Data](http://bl.ocks.org/dbuezas/9572040) to see how to handle transitions with missing/new data.\n\n\n\nforked from <a href='http://bl.ocks.org/dbuezas/'>dbuezas</a>'s block: <a href='http://bl.ocks.org/dbuezas/9306799'>Pie charts labels</a>", "uid": "domhorvath_ba3aa4bdb0652fcd8b98c59a33fcea1d"}, {"code": "<script>\n  \n  \tvar width = 400;\n  \tvar height = 300;\n\n    var svg = d3.select(\"body\").append(\"svg\")\n    \t.attr(\"preserveAspectRatio\", \"xMinYMin meet\");\n  \n  \tvar container = d3.select(svg.parentNode);\n  \n  \tvar color = d3.scaleOrdinal(d3.schemeCategory20);\n    \n\t\tvar simulation = d3.forceSimulation()\n    \t.force(\"charge\", d3.forceManyBody())\n    \t.force(\"collide\", d3.forceCollide()\n       \t.radius(function(d) { return d.group * 5; }).iterations(1)\n       )\n    \t.force(\"link\", d3.forceLink()\n      \t.id(function(d) { return d.id; })\n        .distance(function(d) { return 10; })\n       )\n    \t.force(\"center\", d3.forceCenter(width / 2, height / 2))\n      .force(\"x\", d3.forceX())\n      .force(\"y\", d3.forceY());\n    \n\t\td3.json(\"data.json\", function(error, graph) {\n  \t\t\n      if (error) throw error;\n\n      var link = svg.append(\"g\")\n        .attr(\"class\", \"link\")\n        .selectAll(\".link\")\n        .data(graph.links)\n        .enter()\n      \t.append(\"line\")\n        .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n     \n\t\t\tvar node = svg.append(\"g\")\n      \t.attr(\"class\", \"node\")\n      \t.selectAll(\".node\")\n        .data(graph.nodes)   \t\n    \t\t.enter()\n      \t.append(\"g\");\n      \n      node\n      \t.append(\"circle\")\n      \t.attr(\"cx\", 0)\n      \t.attr(\"cy\", 0)\n      \t.attr(\"r\", 20)\n      \t.attr(\"fill\", function(d) { return color(d.group); });\n      \n// \t\t\tnode\n//       \t.append(\"text\")\n//         .attr(\"dx\", -5)\n//         .attr(\"dy\", \".35em\")\n//         .text(function(d) { return d.id });\n      \n\t\t\tnode\n        .on(\"mouseover\", function(d) {\n          var g = d3.select(this);\n          g.select('circle')\n            .attr('r', 50);\n          g.append('text')\n            .classed('info', true)\n            .attr('dx', -5)\n            .attr('dy', \".35em\")\n            .text(d.id);\n        })\n        .on(\"mouseout\", function() {\n          var g = d3.select(this);\n          g.select('circle')\n            .attr('r', 15);\n          g.select('text.info').remove();\n        });      \n      \n      node\n      \t.call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended)\n        );      \n\n      simulation\n        .nodes(graph.nodes)\n        .on(\"tick\", tick);\n\n  \t\tsimulation.force(\"link\")\n      \t.links(graph.links);\n\n      function tick() {\n        link\n          .attr(\"x1\", function(d) { return d.source.x; })\n          .attr(\"y1\", function(d) { return d.source.y; })\n          .attr(\"x2\", function(d) { return d.target.x; })\n          .attr(\"y2\", function(d) { return d.target.y; });\n        \n\t\t\t\tnode.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });        \n        \n      }\n\t\t});\n  \n  \tresize();\n  \n  \td3.select(window).on(\"resize\", resize);\n   \n    function resize() {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      svg\n      \t.attr(\"viewBox\", \"0 0 \" + width + \" \" + height );\n      simulation\n        .force(\"center\", d3.forceCenter(width / 2, height / 2))\n      \t.restart();\n    };  \n    \n    function dragstarted(d) {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    };\n\n    function dragged(d) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    };\n\n    function dragended(d) {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    };    \n\n</script>", "description": "D3 Force Sandbox", "created_at": "2016-10-08T15:04:29Z", "updated_at": "2016-10-08T21:28:56Z", "api": ["d3.select", "d3.scaleOrdinal", "d3.forceSimulation", "d3.forceManyBody", "d3.forceCollide", "d3.forceLink", "d3.forceCenter", "d3.forceX", "d3.forceY", "d3.json", "d3.drag"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "TomStanczyk_8cd26aabc37de17d837a85eeb3b420d5"}, {"code": "<script>\n!(function(){\n    \"use strict\"\n\n    var width,height\n    var chartWidth, chartHeight\n    var margin\n    var svg = d3.select(\"#graph\").append(\"svg\")\n    var chartLayer = svg.append(\"g\").classed(\"chartLayer\", true)\n    \n    main()\n    \n    function main() {\n        var range = 100\n        var data = {\n            nodes:d3.range(0, range).map(function(d){ return {label: \"l\"+d ,r:~~d3.randomUniform(8, 28)()}}),\n            links:d3.range(0, range).map(function(){ return {source:~~d3.randomUniform(range)(), target:~~d3.randomUniform(range)()} })        \n        }\n        \n        setSize(data)\n        drawChart(data)    \n    }\n    \n    function setSize(data) {\n        width = document.querySelector(\"#graph\").clientWidth\n        height = document.querySelector(\"#graph\").clientHeight\n    \n        margin = {top:0, left:0, bottom:0, right:0 }\n        \n        \n        chartWidth = width - (margin.left+margin.right)\n        chartHeight = height - (margin.top+margin.bottom)\n        \n        svg.attr(\"width\", width).attr(\"height\", height)\n        \n        \n        chartLayer\n            .attr(\"width\", chartWidth)\n            .attr(\"height\", chartHeight)\n            .attr(\"transform\", \"translate(\"+[margin.left, margin.top]+\")\")\n            \n            \n    }\n    \n    function drawChart(data) {\n        \n        var simulation = d3.forceSimulation()\n            .force(\"link\", d3.forceLink().id(function(d) { return d.index }))\n            .force(\"collide\",d3.forceCollide( function(d){return d.r + 8 }).iterations(16) )\n            .force(\"charge\", d3.forceManyBody())\n            .force(\"center\", d3.forceCenter(chartWidth / 2, chartWidth / 2))\n            .force(\"y\", d3.forceY(0))\n            .force(\"x\", d3.forceX(0))\n    \n        var link = svg.append(\"g\")\n            .attr(\"class\", \"links\")\n            .selectAll(\"line\")\n            .data(data.links)\n            .enter()\n            .append(\"line\")\n            .attr(\"stroke\", \"black\")\n        \n        var node = svg.append(\"g\")\n            .attr(\"class\", \"nodes\")\n            .selectAll(\"circle\")\n            .data(data.nodes)\n            .enter().append(\"circle\")\n            .attr(\"r\", function(d){  return d.r })\n            .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended));    \n        \n        \n        var ticked = function() {\n            link\n                .attr(\"x1\", function(d) { return d.source.x; })\n                .attr(\"y1\", function(d) { return d.source.y; })\n                .attr(\"x2\", function(d) { return d.target.x; })\n                .attr(\"y2\", function(d) { return d.target.y; });\n    \n            node\n                .attr(\"cx\", function(d) { return d.x; })\n                .attr(\"cy\", function(d) { return d.y; });\n        }  \n        \n        simulation\n            .nodes(data.nodes)\n            .on(\"tick\", ticked);\n    \n        simulation.force(\"link\")\n            .links(data.links);    \n        \n        \n        \n        function dragstarted(d) {\n            if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n        }\n        \n        function dragged(d) {\n            d.fx = d3.event.x;\n            d.fy = d3.event.y;\n        }\n        \n        function dragended(d) {\n            if (!d3.event.active) simulation.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n        } \n                \n    }\n}());\n</script>", "description": "D3 v4 - force layout", "created_at": "2016-10-03T19:22:07Z", "updated_at": "2016-10-03T19:22:07Z", "api": ["d3.select", "d3.range", "d3.randomUniform", "d3.forceSimulation", "d3.forceLink", "d3.forceCollide", "d3.forceManyBody", "d3.forceCenter", "d3.forceY", "d3.forceX", "d3.drag"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/shimizu/'>shimizu</a>'s block: <a href='http://bl.ocks.org/shimizu/e6209de87cdddde38dadbb746feaf3a3'>D3 v4 - force layout</a>", "uid": "domhorvath_58de10fe06d7f26e47a6e0c900cf1693"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar x = d3.scaleBand()\n    .rangeRound([0, width])\n    .padding(0.1)\n    .align(0.1);\n\nvar y = d3.scaleLinear()\n    .rangeRound([height, 0]);\n\nvar z = d3.scaleOrdinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar stack = d3.stack();\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  data.sort(function(a, b) { return b.total - a.total; });\n\n  x.domain(data.map(function(d) { return d.State; }));\n  y.domain([0, d3.max(data, function(d) { return d.total; })]).nice();\n  z.domain(data.columns.slice(1));\n\n  stack.keys(data.columns.slice(1));\n  \n  g.selectAll(\".serie\")\n    .data(stack(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"serie\")\n      .attr(\"fill\", function(d) { return z(d.key); })\n    .selectAll(\"rect\")\n    .data(function(d) { return d; })\n    .enter().append(\"rect\")\n      .attr(\"x\", function(d) { return x(d.data.State); })\n      .attr(\"y\", function(d) { return y(d[1]); })\n      .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n      .attr(\"width\", x.bandwidth());\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y).ticks(10, \"s\"))\n    .append(\"text\")\n      .attr(\"x\", 2)\n      .attr(\"y\", y(y.ticks(10).pop()))\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Population\");\n\n  var legend = g.selectAll(\".legend\")\n    .data(data.columns.slice(1).reverse())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; })\n      .style(\"font\", \"10px sans-serif\");\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .attr(\"fill\", z);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n});\n\nfunction type(d, i, columns) {\n  for (i = 1, t = 0; i < columns.length; ++i) t += d[columns[i]] = +d[columns[i]];\n  d.total = t;\n  return d;\n}\n\n</script>", "description": "Stacked Bar Chart", "created_at": "2016-10-01T01:02:27Z", "updated_at": "2016-10-01T01:02:27Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.stack", "d3.csv", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This stacked bar chart is constructed from a CSV file storing the populations of different states by age group. The chart employs [conventional margins](/mbostock/3019563) and a number of D3 features:\n\n* [d3-dsv](https://github.com/d3/d3-dsv) - load and parse data\n* [d3-scale](https://github.com/d3/d3-scale) - *x*- and *y*-position, and color encoding\n* [d3-format](https://github.com/d3/d3-format) - SI prefix formatting (e.g., \u201c10M\u201d for 10,000,000)\n* [d3-array](https://github.com/d3/d3-array) - compute simple statistics (e.g., max)\n* [d3-axis](https://github.com/d3/d3-axis) - display axes\n* [d3-shape](https://github.com/d3/d3-shape) - computed stacked positions\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3886208'>Stacked Bar Chart</a>", "uid": "john-guerra_95c69d114b7d59f934c282fc643d2234"}, {"code": "<script>\n\n\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 80, bottom: 40, left: 50},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar parseTime = d3.timeParse(\"%x\"),\n    bisectDate = d3.bisector(function(d) { return d.date; }).left,\n    toolTime = d3.timeFormat(\"%B %d, \" + \"20\" + \"%y\"),\n    abbreviateNum = d3.format('.2s');\n\nvar xAxisTime = d3.timeFormat(\"%b\");\n\nvar x0AxisYear = d3.timeFormat(\"20\" + \"%y\")\n\nvar viridisColors = [\"#440154\",\"#440256\",\"#450457\",\"#450559\",\"#46075a\",\"#46085c\",\"#460a5d\",\"#460b5e\",\"#470d60\",\"#470e61\",\"#471063\",\"#471164\",\"#471365\",\"#481467\",\"#481668\",\"#481769\",\"#48186a\",\"#481a6c\",\"#481b6d\",\"#481c6e\",\"#481d6f\",\"#481f70\",\"#482071\",\"#482173\",\"#482374\",\"#482475\",\"#482576\",\"#482677\",\"#482878\",\"#482979\",\"#472a7a\",\"#472c7a\",\"#472d7b\",\"#472e7c\",\"#472f7d\",\"#46307e\",\"#46327e\",\"#46337f\",\"#463480\",\"#453581\",\"#453781\",\"#453882\",\"#443983\",\"#443a83\",\"#443b84\",\"#433d84\",\"#433e85\",\"#423f85\",\"#424086\",\"#424186\",\"#414287\",\"#414487\",\"#404588\",\"#404688\",\"#3f4788\",\"#3f4889\",\"#3e4989\",\"#3e4a89\",\"#3e4c8a\",\"#3d4d8a\",\"#3d4e8a\",\"#3c4f8a\",\"#3c508b\",\"#3b518b\",\"#3b528b\",\"#3a538b\",\"#3a548c\",\"#39558c\",\"#39568c\",\"#38588c\",\"#38598c\",\"#375a8c\",\"#375b8d\",\"#365c8d\",\"#365d8d\",\"#355e8d\",\"#355f8d\",\"#34608d\",\"#34618d\",\"#33628d\",\"#33638d\",\"#32648e\",\"#32658e\",\"#31668e\",\"#31678e\",\"#31688e\",\"#30698e\",\"#306a8e\",\"#2f6b8e\",\"#2f6c8e\",\"#2e6d8e\",\"#2e6e8e\",\"#2e6f8e\",\"#2d708e\",\"#2d718e\",\"#2c718e\",\"#2c728e\",\"#2c738e\",\"#2b748e\",\"#2b758e\",\"#2a768e\",\"#2a778e\",\"#2a788e\",\"#29798e\",\"#297a8e\",\"#297b8e\",\"#287c8e\",\"#287d8e\",\"#277e8e\",\"#277f8e\",\"#27808e\",\"#26818e\",\"#26828e\",\"#26828e\",\"#25838e\",\"#25848e\",\"#25858e\",\"#24868e\",\"#24878e\",\"#23888e\",\"#23898e\",\"#238a8d\",\"#228b8d\",\"#228c8d\",\"#228d8d\",\"#218e8d\",\"#218f8d\",\"#21908d\",\"#21918c\",\"#20928c\",\"#20928c\",\"#20938c\",\"#1f948c\",\"#1f958b\",\"#1f968b\",\"#1f978b\",\"#1f988b\",\"#1f998a\",\"#1f9a8a\",\"#1e9b8a\",\"#1e9c89\",\"#1e9d89\",\"#1f9e89\",\"#1f9f88\",\"#1fa088\",\"#1fa188\",\"#1fa187\",\"#1fa287\",\"#20a386\",\"#20a486\",\"#21a585\",\"#21a685\",\"#22a785\",\"#22a884\",\"#23a983\",\"#24aa83\",\"#25ab82\",\"#25ac82\",\"#26ad81\",\"#27ad81\",\"#28ae80\",\"#29af7f\",\"#2ab07f\",\"#2cb17e\",\"#2db27d\",\"#2eb37c\",\"#2fb47c\",\"#31b57b\",\"#32b67a\",\"#34b679\",\"#35b779\",\"#37b878\",\"#38b977\",\"#3aba76\",\"#3bbb75\",\"#3dbc74\",\"#3fbc73\",\"#40bd72\",\"#42be71\",\"#44bf70\",\"#46c06f\",\"#48c16e\",\"#4ac16d\",\"#4cc26c\",\"#4ec36b\",\"#50c46a\",\"#52c569\",\"#54c568\",\"#56c667\",\"#58c765\",\"#5ac864\",\"#5cc863\",\"#5ec962\",\"#60ca60\",\"#63cb5f\",\"#65cb5e\",\"#67cc5c\",\"#69cd5b\",\"#6ccd5a\",\"#6ece58\",\"#70cf57\",\"#73d056\",\"#75d054\",\"#77d153\",\"#7ad151\",\"#7cd250\",\"#7fd34e\",\"#81d34d\",\"#84d44b\",\"#86d549\",\"#89d548\",\"#8bd646\",\"#8ed645\",\"#90d743\",\"#93d741\",\"#95d840\",\"#98d83e\",\"#9bd93c\",\"#9dd93b\",\"#a0da39\",\"#a2da37\",\"#a5db36\",\"#a8db34\",\"#aadc32\",\"#addc30\",\"#b0dd2f\",\"#b2dd2d\",\"#b5de2b\",\"#b8de29\",\"#bade28\",\"#bddf26\",\"#c0df25\",\"#c2df23\",\"#c5e021\",\"#c8e020\",\"#cae11f\",\"#cde11d\",\"#d0e11c\",\"#d2e21b\",\"#d5e21a\",\"#d8e219\",\"#dae319\",\"#dde318\",\"#dfe318\",\"#e2e418\",\"#e5e419\",\"#e7e419\",\"#eae51a\",\"#ece51b\",\"#efe51c\",\"#f1e51d\",\"#f4e61e\",\"#f6e620\",\"#f8e621\",\"#fbe723\",\"#fde725\"]\nvar viridisThreeColors = [viridisColors[200],viridisColors[25],viridisColors[110]]\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal(viridisThreeColors);\n\nvar line = d3.line()\n    .curve(d3.curveBasis)\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.area); });\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  var bands = data.columns.slice(1).map(function(id) {\n    return {\n      id: id,\n      values: data.map(function(d) {\n        return {date: d.date, area: d[id]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(bands, function(c) { return d3.min(c.values, function(d) { return d.area; }); }),\n    d3.max(bands, function(c) { return d3.max(c.values, function(d) { return d.area; }); })\n  ]);\n\n  z.domain(bands.map(function(c) { return c.id; }));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x months\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).tickFormat(xAxisTime).tickSizeOuter(0).tickPadding(10).ticks(d3.timeMonth));\n\n  g.append('g')\n      .attr('class', 'axis axis--x years')\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).tickFormat(x0AxisYear).tickSizeOuter(0).tickPadding(25).ticks(d3.timeYear));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y).ticks(5, \"s\").tickSizeOuter(0).tickPadding(5));\n\n  g.append('g')\n    .attr('class', 'legend')\n    .append(\"text\")\n      // .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"x\", -32)\n      .attr(\"y\", -9)\n      .attr(\"dy\", \"0.71em\")\n      .attr('font-size', '12px')\n      .attr(\"fill\", \"#3d3d3d\")\n      .text(\"Area in square kilometers\");\n\n  // g.append(\"g\")\n  //     .attr(\"class\", \"axis axis--y\")\n  //     .attr(\"transform\", \"translate( \" + (width + 20) + \", 0 )\")\n  //     .call(d3.axisRight(y).ticks(5, \"s\").tickSizeOuter(0).tickPadding(5));\n\n  var band = g.selectAll(\".band\")\n    .data(bands)\n    .enter().append(\"g\")\n      .attr(\"class\", \"band\");\n\n  band.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) {  console.log(d.values[1]); return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  band.append(\"text\")\n      .attr('class', 'bands')\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + (x(d.value.date) - 10) + \",\" + (y(d.value.area) - 8) + \")\"; })\n      .attr(\"x\", -20)\n      .attr('text-align', 'right')\n      .attr(\"dy\", \"0.35em\")\n      // .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });\n\n  //set your focus circle and make sure it's invisible\n  var focus = band.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .style(\"display\", \"none\");\n\n  focus.append('line')\n      .attr('x1', 0)\n      .attr('y1', 0)\n      .attr('x2', 0)\n      .attr('y2', height)\n      .style('stroke-width', 1)\n      .style('stroke-dasharray', '1,6')\n      .style('stroke', '#12BCC2');\n\n  focus.append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dy\", \".35em\");\n\n  //Create area of focus for your mouse event\n  band.append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"mouseover\", function() { focus.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  //Mouse move function for watching over focus.\n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        y0 = y(d3.mouse(this)[0]),\n        i = bisectDate(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.date > d1.date - x0 ? d1 : d0,\n        thisBand = \"\";\n    focus.transition()\n      .duration(50)\n      .attr('transform', 'translate(' + x(x0) + ', 0)');\n    // focus.append('line')\n    // console.log(xx0);\n    // focus.select('text').text('Test');\n    d3.select(\"#tooltip\")\n      // .style(\"left\", width - 50 + \"px\")\n      // .style(\"top\", \"50px\")\n      .select('#date')\n      .text(\"Coverage for \" + toolTime(d.date));\n    d3.select(\"#tooltip\")\n      .select(\"#value\")\n      .html('<span id=\"box\" class=\"legendTitle\">Total</span><div id=\"boxSpacer\">' + abbreviateNum(d.Total) + '</div>    ' + '<span id=\"box\" class=\"legendRGB\">RGB</span><div id=\"boxSpacer\">' + abbreviateNum(d.RGB) + '</div>    ' + '<span id=\"box\" class=\"legendNIR\">VNIR</span>' + abbreviateNum(d.VNIR) + ' sq. km  ');\n    //Show the tooltip\n    d3.select(\"#tooltip\").classed(\"hidden\", false);\n  }\n\n  //Annotations\n  var annotations = g.append('g').attr('class','annotations');\n\n  // Doves //\n  // Flock 1D\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 97)\n      .attr('y1', y(5000000))\n      .attr('x2', 97)\n      .attr('y2', y(1000000))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 78)\n      .attr('y', y(6000000))\n      .text('Flock 1d');\n\n  // FLOCK 1E\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 184)\n      .attr('y1', y(8000000))\n      .attr('x2', 184)\n      .attr('y2', y(1000000))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 166)\n      .attr('y', y(9000000))\n      .text('Flock 1e');\n\n  // FLOCK 2B\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 303)\n      .attr('y1', y(13000000))\n      .attr('x2', 303)\n      .attr('y2', y(1787234))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 285)\n      .attr('y', y(14221820))\n      .text('Flock 2b');\n\n  //Flock 2e\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 408)\n      .attr('y1', y(20300000))\n      .attr('x2', 408)\n      .attr('y2', y(9255319))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 390)\n      .attr('y', y(21200000))\n      .text('Flock 2e');\n\n  //Flock 2e'\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 508)\n      .attr('y1', y(24900000))\n      .attr('x2', 508)\n      .attr('y2', y(11438298))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 490)\n      .attr('y', y(26182704))\n      .text(\"Flock 2e'\");\n\n  //Flock 2p\n  // annotations.append('g')\n  //   .append('line')\n  //     .attr('x1', 594)\n  //     .attr('y1', y(29000000))\n  //     .attr('x2', 594)\n  //     .attr('y2', y(13500000))\n  //     .attr(\"stroke-width\", 1)\n  //     .attr('stroke-dasharray', '1, 2')\n  //     .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 594)\n      .attr('y1', y(8510638))\n      .attr('x2', 594)\n      .attr('y2', y(29002979))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 576)\n      .attr('y', y(30000000))\n      .text('Flock 2p');\n\n  //Build 12 Deployment\n  // annotations.append('g')\n  //   .append('text')\n  //     .attr('x', 460)\n  //     .attr('y', y(30500000))\n  //     .text('Build 12 Dove Satellites Deployed');\n  // annotations.append('g')\n  //   .append('line')\n  //     .attr('x1', 533)\n  //     .attr('y1', y(1000000))\n  //     .attr('x2', 533)\n  //     .attr('y2', y(29000000))\n  //     .attr(\"stroke-width\", 1)\n  //     .attr('stroke-dasharray', '2, 2, 5')\n  //     .attr(\"stroke\", \"rgb(119,119,119)\");\n});\n\nfunction type(d, _, columns) {\n  d.date = parseTime(d.date);\n  for (var i = 1, n = columns.length, c; i < n; ++i) d[c = columns[i]] = +d[c];\n  return d;\n}\n\n\n</script>", "description": "Multi-Series Line Chart (Planet Coverage)", "created_at": "2016-09-29T18:17:15Z", "updated_at": "2016-10-19T00:24:11Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.timeFormat", "d3.format", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.line", "d3.csv", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.axisRight", "d3.mouse"], "readme": "**Planet Coverage**\n\nSimple multi series line chart looking at Planet's coverage of the Earth overtime.\n\n**Credits**\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>", "uid": "sadbumblebee_cf960bdddd53ae832d980f5c70c48e5c"}, {"code": "<script>\n\nvar margin = {top: 20, right: 50, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar bisecttime = d3.bisector(function(d) { return d.time; }).left,\n    formatValue = d3.format(\",.2f\"),\n    displayValue = function(d) { return formatValue(d); };\n    \nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.time); })\n    .y(function(d) { return y(d.sentiment); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.time = +d.time;\n    d.sentiment = +d.sentiment;\n  });\n\n  data.sort(function(a, b) {\n    return a.time - b.time;\n  });\n  \n  x.domain([data[0].time, data[data.length - 1].time]);\n  y.domain(d3.extent(data, function(d) { return d.sentiment; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sentiment\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  var focus = svg.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .style(\"display\", \"none\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  focus.append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dy\", \".35em\");\n\n  svg.append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"mouseover\", function() { focus.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        i = bisecttime(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.time > d1.time - x0 ? d1 : d0;\n    focus.attr(\"transform\", \"translate(\" + x(d.time) + \",\" + y(d.sentiment) + \")\");\n    focus.select(\"text\").text(\"Sentiment Value: \" \n                              + displayValue(d.sentiment) \n                              + \"\\n Words: \"\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ d.words\n                             );\n  }\n});\n\n</script>", "description": "sentiment time-series mouseover", "created_at": "2016-09-28T23:01:22Z", "updated_at": "2016-09-28T23:04:25Z", "api": ["d3.bisector", "d3.format", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.mouse"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/lgoerl/'>lgoerl</a>'s block: <a href='http://bl.ocks.org/lgoerl/8cd5584d81953601ef1d90ba6a7821b6'>sentiment time-series mouseover</a>", "uid": "BBischof_75ed4879d155c31412f58840480ae1d6"}, {"code": "<script>\nvar diameter = 500, //max size of the bubbles\n    color    = d3.scale.category20b(); //color category\n\nvar bubble = d3.layout.pack()\n    .sort(null)\n    .size([diameter, diameter])\n    .padding(1.5);\n\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n    .attr(\"class\", \"bubble\");\n\nd3.csv(\"fruit.csv\", function(error, data){\n\n    //convert numerical values from strings to numbers\n    data = data.map(function(d){ d.value = +d[\"Count\"]; return d; });\n\n    //bubbles needs very specific format, convert data to this.\n    var nodes = bubble.nodes({children:data}).filter(function(d) { return !d.children; });\n\n    //setup the chart\n    var bubbles = svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,0)\")\n        .selectAll(\".bubble\")\n        .data(nodes)\n        .enter();\n\n    //create the bubbles\n    bubbles.append(\"circle\")\n        .attr(\"r\", function(d){ return d.r; })\n        .attr(\"cx\", function(d){ return d.x; })\n        .attr(\"cy\", function(d){ return d.y; })\n        .style(\"fill\", function(d) { return color(d.value); });\n\n    //format the text for each bubble\n    bubbles.append(\"text\")\n        .attr(\"x\", function(d){ return d.x; })\n        .attr(\"y\", function(d){ return d.y + 5; })\n        .attr(\"text-anchor\", \"middle\")\n        .text(function(d){ return d[\"Fruit\"]; })\n        .style({\n            \"fill\":\"white\", \n            \"font-family\":\"Helvetica Neue, Helvetica, Arial, san-serif\",\n            \"font-size\": \"12px\"\n        });\n})\n</script>", "description": "Bubble Chart", "created_at": "2016-09-28T22:20:39Z", "updated_at": "2016-09-28T22:22:34Z", "api": ["d3.scale.category20b", "d3.layout.pack", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "DarienLiang_cbcdffc45ac4e6edf5cac6f193dff5c6"}, {"code": "<script>\n\n//load survival data in.\nd3.csv(\"data.csv\", function(raw_data){\n\n//Data cleaning:\nvar data = raw_data.map(function(d){\n    var new_d = {}\n    new_d.age_entry_year = +d.ageentry/12; //patient start\n    new_d.age_year = +d.age/12;            //patient end\n    new_d.death    = d.death  == \"1\" ? true : false;\n    new_d.gender   = d.gender == \"2\" ? \"female\" : \"male\"\n    return new_d;\n    })\n    .sort((a,b) => b.age_entry_year - a.age_entry_year)\n    .filter(d => d.gender == \"male\")\n\n\n//charting code goes here.\n\nvar chartWidth  = 960, // default width\n    chartHeight = 500;\n\nvar margin = {top: 20, right: 40, bottom: 35, left: 30},\n    width  = chartWidth - margin.left - margin.right,\n    height = chartHeight - margin.top - margin.bottom;\n\n// var svg = d3.select(this).append(\"svg\") //leaving for when packaged up.\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\",  width  + margin.left + margin.right)\n    .attr(\"height\", height + margin.top  + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar min_date = d3.min(data, (d) => d.age_entry_year)\nvar max_date = d3.max(data, (d) => d.age_year)\n\nvar x = d3.scaleLinear()\n    .range([0, width])\n    .domain([min_date, max_date]);\n\n//y scale for the data chart on top\nvar y = d3.scaleLinear()\n    .range([height/2 - 20, 0])\n    .domain([0,data.length]);\n\n//y scale for the survival plot on bottom\nvar y_surv = d3.scaleLinear()\n    .range([height, height/2 + 10])\n    .domain([0,1]);\n\nvar lines = svg.selectAll(\".lifespan\")\n    .data(data)\n    .enter().append(\"line\")\n    .attr(\"class\", \"lifespan\")\n    .attrs({\n        \"x1\": (d) => x(d.age_entry_year),\n        \"x2\": (d) => x(d.age_entry_year),\n        \"y1\": (d,i) => y(i),\n        \"y2\": (d,i) => y(i),\n        \"stroke\": (d) => d.death ? \"steelblue\": \"orangered\",\n        \"stroke-width\": 1\n    })\n    .on(\"mouseover\", highlight)\n    .on(\"mouseout\", unhighlight)\n    .transition().duration(500)\n    .delay(function(d, i) { return (data.length - i) * 5; })\n    .attr(\"x2\", (d) => x(d.age_year))\n\nsvg.append(\"g\")\n    .attr(\"class\", \"axis axis--x\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x))\n        .append(\"text\")\n        .attrs({\n            \"class\": \"axis-title\",\n            \"y\": 20,\n            \"x\": width/2,\n            \"dy\": \"0.8em\"\n        })\n        .styles({\n            \"text-anchor\": \"center\",\n            \"fill\": \"black\",\n            \"font-size\": 15\n        })\n        .text(\"Time in Years\");\n\n////////////////////////////////  Make legend ////////////////////////////////////////////////\nvar legend = svg.append(\"g\")\n    .attr(\"class\", \"legend\")\n    .attr(\"transform\", \"translate(\" + width + \",\" + margin.top + \")\");\n\nvar titleAttributes = {\n    \"fill\": \"#636363\",\n    \"text-anchor\": \"end\",\n    \"font-size\": \"2em\"\n}\n\nvar legendAttributes = {\n    \"x\": -5,\n    \"text-anchor\": \"end\",\n}\n\nlegend.append(\"text\")\n    .text(\"Data/Individuals\")\n    .attrs(titleAttributes)\n\nlegend.append(\"text\")\n    .text(\"Event\")\n    .attrs(legendAttributes)\n    .attrs({\n        \"y\": \"2.5em\",\n        \"fill\": \"steelblue\"\n    })\n\nlegend.append(\"text\")\n    .text(\"Censored\")\n    .attrs(legendAttributes)\n    .attrs({\n        \"y\": \"3.5em\",\n        \"fill\": \"orangered\"\n    })\n\nsvg.append(\"text\")\n    .text(\"K-M Survival Curve\")\n    .attrs(titleAttributes)\n    .attr(\"transform\", \"translate(\" + width + \",\" + (height/2 + margin.top*2) + \")\");\n\n//////////////// Drawing the Survival Function //////////////\n//draw bar above to seperate the two plots from eachother\nsvg.append(\"line\")\n    .attrs({\n        x1: 0, x2: width,\n        y1: height/2, y2: height/2,\n        stroke: \"black\",\n        \"stroke-width\": 1,\n        opacity: 0.3\n    })\n\nvar km_surv = KM_Curve(data);\nkm_surv.unshift({\"t_i\": min_date, \"d_i\": 0, \"Y_i\": 0, \"s_t\": 0, \"S_t\": 1})\n\nvar surv_func = svg.append(\"g\")\n    .attr(\"class\", \"survival_function\")\n\nvar line = d3.line()\n    .curve(d3.curveStepAfter)\n    .x(d => x(d.t_i) )\n    .y(d => y_surv(d.S_t));\n\nsurv_func.append(\"path\")\n    .datum(km_surv)\n    .attr(\"class\", \"line\")\n    .attr(\"d\", line);\n\nfunction update_survival(newData){\n    surv_func.select(\".line\")\n        .datum(newData)\n        .transition().duration(500)\n        .attr(\"d\", line);\n}\n\nsvg.append(\"g\")\n    .attr(\"class\", \"axis axis--y\")\n    .call(d3.axisLeft(y_surv))\n\n//////////////  A bar to drag to filter the conditional entry time. //////////////\ndrag_behavior = d3.drag()\n    .on(\"drag\", function(){\n        var x_loc = d3.event.x;\n            x_loc = x_loc < 0 ? 0 : x_loc,\n            x_loc = x_loc > width ? width : x_loc,\n            time_loc = x.invert(x_loc);\n\n        //move bar.\n        d3.select(\".drag_bar\")\n            .attr(\"transform\", \"translate(\" + x_loc + \",0)\")\n            .select(\"text\")\n            .text(\"entry  \" + time_loc.roundTo(2) + \" years\");\n        d3.select(this)\n                .attr(\"x\",  x_loc - 15);\n\n        svg.selectAll(\".lifespan\")\n          .attr(\"opacity\",  (d) => d.age_entry_year < time_loc ? 0.1: 1)\n          .classed(\"ignored\", (d) => d.age_entry_year < time_loc)\n          .classed(\"dragging\", true)\n    } )\n    .on(\"end\", function(){\n        svg.selectAll(\".lifespan\")\n            .classed(\"dragging\", false)\n\n        //generate new KM curve data.\n        //only include current individuals.\n        km_data = data.filter((d) => d.age_entry_year >= time_loc)\n\n        km_surv = KM_Curve(km_data)\n        km_surv.unshift({\"t_i\": time_loc, \"d_i\": 0, \"Y_i\": 0, \"s_t\": 0, \"S_t\": 1})\n        update_survival(km_surv);\n    })\n\n\n//make grabber bar\n//Function javascript should really already have.\nNumber.prototype.roundTo = function(digits){\n    return +(Math.round(this + \"e+\" + digits)  + \"e-\" + digits);\n}\n\n//grabber box to do the dragging.\nsvg.append(\"rect\")\n    .attrs({\n        x: -15,\n        y: height/2 - 25,\n        rx: 2, ry:2,\n        width: 15,\n        height: 25,\n        fill: \"#636363\",\n        class: \"drag_screen\"\n    })\n    .call(drag_behavior);\n\nvar drag_bar = svg.append(\"g\")\n    .attr(\"class\", \"drag_bar\")\n    .style(\"pointer-events\", \"none\")\n\ndrag_bar.append(\"rect\")\n    .attrs({\n        x: -1,\n        width: 2,\n        height: height,\n        fill: \"#636363\",\n        opacity: 0.5,\n        class: \"drag_screen\"\n    })\n\ndrag_bar.append(\"text\")\n    .text(\"entry  \" + min_date.roundTo(2) + \" years\")\n    .attrs({\n        \"y\": (height/2) - 3,\n        \"x\": 3,\n        \"fill\": \"#636363\",\n        \"text-anchor\": \"start\"\n    })\n\n////////////// End drag bar //////////////\n\n\nfunction highlight(){\n    var individual = d3.select(this);\n\n    //dont do behavior for the non-selected individuals or when dragging the bar.\n    if(individual.classed(\"ignored\") || individual.classed(\"dragging\")) return;\n\n    var y_pos = individual.attr(\"y1\")\n\n    individual\n        .attr(\"stroke-width\", \"5\")\n\n    var ind_data = individual.data()\n        .map(function(d){\n            return {\n                \"entry\": d.age_entry_year,\n                \"exit\" : d.age_year\n            }\n        })[0]\n\n    var bound_bar_data = [\n        {side: \"left\",  x:individual.attr(\"x1\"), value: ind_data.entry.roundTo(3)},\n        {side: \"right\", x:individual.attr(\"x2\"), value: ind_data.exit.roundTo(3)}\n    ]\n\n    var bounds_bars = svg.append(\"g\")\n        .attr(\"class\", \"bounds_bars\")\n\n    bounds_bars.selectAll(\"line\")\n        .data(bound_bar_data)\n        .enter().append(\"line\")\n        .attrs({\n            \"x1\": (d) => d.x,\n            \"x2\": (d) => d.x,\n            \"y1\": y_pos,\n            \"y2\": height,\n            \"stroke\": \"black\",\n            \"stroke-width\": 1\n        })\n\n    bounds_bars.selectAll(\"text\")\n        .data(bound_bar_data)\n        .enter().append(\"text\")\n        .text( (d) => d.value )\n        .attrs({\n            \"x\": (d) => d.x,\n            \"y\": height,\n            \"text-anchor\": (d) => d.side == \"left\" ? \"end\" : \"start\",\n            \"font-size\": 12\n        })\n}\n\nfunction unhighlight(){\n    d3.select(this).attr(\"stroke-width\", 1)\n    svg.select(\".bounds_bars\").remove()\n}\n\n///////////////////////////// Generate a K-M non-parametric survival curve for data.\n\nfunction KM_Curve(data){\n    //Source http://stackoverflow.com/questions/11246758/how-to-get-unique-values-in-an-array\n    Array.prototype.contains = function(v) {\n        for(var i = 0; i < this.length; i++) {\n            if(this[i] === v) return true;\n        }\n        return false;\n    };\n    Array.prototype.unique = function() {\n        var arr = [];\n        for(var i = 0; i < this.length; i++) {\n            if(!arr.contains(this[i])) {\n                arr.push(this[i]);\n            }\n        }\n        return arr;\n    }\n\n    //get unique times of death.\n    death_times = data.filter(d => d.death)\n        .map(d => d.age_year)\n        .unique()\n        .sort()\n\n    km_table = death_times.map(t_i => {\n        //Number of deaths at t_i\n        var d_i = data.filter(d => d.age_year == t_i && d.death).length\n\n        //number at risk. Aka       in study,          but  havent had event yet.\n        var Y_i = data.filter(d => d.age_entry_year <= t_i && d.age_year >= t_i).length\n\n        var s_t = 1 - (d_i/Y_i);\n\n        return {\"t_i\": t_i, \"d_i\": d_i, \"Y_i\": Y_i, \"s_t\": s_t}\n    })\n\n    for (let [i, row] of km_table.entries()) {\n        var t = row.t_i,\n            s_t = row.s_t,\n            last_S_t = i != 0 ? km_table[i-1].S_t : 1;\n        km_table[i].S_t = last_S_t * s_t;\n    }\n\n    // console.table(km_table)\n    return km_table;\n}\n\n\n\n}) //close csv loader\n\n\n</script>", "description": "Kaplin-Meier Survival Curve with Left-Truncated Data. ", "created_at": "2016-09-28T01:11:50Z", "updated_at": "2016-09-29T00:07:13Z", "api": ["d3.csv", "d3.select", "d3.min", "d3.max", "d3.scaleLinear", "d3.axisBottom", "d3.line", "d3.axisLeft", "d3.drag"], "readme": "Each bar in the top chart represents an individual's time of entry and exit\nfrom a study. The color of the bar indicates which type of exit they had. The bottom\nchart is a Kaplan-Meier survival curve representing the \"survival\" of individuals\nat a given time point. E.g. If the K-M curve = 0.7 at a time of 6 years then 70%\nof individuals have yet to have the event of study at that time (have survived).\n\nDrag the grey bar across the x-axis to regenerate the K-M curve\nfor the individuals who entered the study past the filter point.\n\nThe fact that the survival curve drops to 0 almost immediately when considering all the data\nillustrates a pitfall of non-parametric methods for generating a survival\ncurve when you have left truncated data. By filtering the data that the curve is\ngenerated with, we are generating a conditional survival curve, or he survival curve\nfor an individual _given_ that they have survived to time _t_.\n\n__Data Source__\n\nKlein and Moeschberger (1997) _Survival Analysis Techniques for Censored and truncated data_,\nSpringer. Hyde Biometrika (1977), 225-230.\n", "uid": "nstrayer_4e613a109707f0487da87300097ca502"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:28:43Z", "updated_at": "2016-09-27T19:28:43Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/d333b5f5e38c55d4914df30bdcd7bdf9'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f544e6f2a795c4d080d1096b2811d874'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/e7b8bb30c2824dac837743397ac120e7'>World's Biggest Data Breaches1</a>", "uid": "apolan_dd366a46fdf36a20c13d1b9feb4bf360"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:25:15Z", "updated_at": "2016-09-27T19:25:15Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>", "uid": "apolan_16c60f32c2cbc187689546b0228cc9cf"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:06:47Z", "updated_at": "2016-09-27T19:06:47Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>", "uid": "apolan_9ccd1766410275a223944f7782308669"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-26T19:29:30Z", "updated_at": "2016-09-27T19:00:10Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "apolan_9dd1ec5c7529a419db0336bb906fd192"}, {"code": "<script>\n\nd3.csv(\"police_killings.csv\", function(err, data) {\n  var allRaces = [\"Black\",\"Hispanic/Latino\",  \"White\", \"Unknown\", \"Asian/Pacific Islander\", \"Native American\"];\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"]\n  // we want to \"pivot\" our data into deaths by month by race\n  // this is a rather ugly way to do it in javascript. would probably be easier\n  // to group the data in another tool (excel, google sheets, etc) and load that\n  var groups = {}\n  var races = {};\n  var xkey = \"raceethnicity\" // the x axis\n  var gkey = \"month\" // what we group by\n  // first we group all the events by race\n  data.forEach(function(d) {\n    if(!groups[d[gkey]]) {\n      groups[d[gkey]] = [d];\n    } else {\n      groups[d[gkey]].push(d)\n    }\n  })\n  var processed = [];\n  //Next we count how many incidents happended for each month\n  months.forEach(function(month,i) {\n    var xdata = {};\n    groups[month].forEach(function(event) {\n      if(!xdata[event[xkey]]) {\n        xdata[event[xkey]] = 1\n      } else {\n        xdata[event[xkey]]++;\n      }\n    })\n    // our \"result\" is an ordered array with a count for each month\n    // (for the race we are currently working on)\n     var result = {};\n    allRaces.forEach(function(g) {\n        result[g]= xdata[g]||0;\n    })\n    processed.push(result)\n  })\n  var n = allRaces.length, // number of layers\n      m = processed.length, // number of samples per layer\n      stack = d3.stack().keys(allRaces);\n\n  var layers = stack(processed); // calculate the stack layout\n\n  layers.forEach(function(d,i) { //adding keys to every datapoint\n        d.forEach(function(dd,j){\n            dd.month = months[j];\n            dd.race = allRaces[i];\n        })\n    });  \n\nvar yGroupMax = d3.max(layers, function(layer) {\n      return d3.max(layer, function(d) {\n        return d[1] - d[0];\n      });\n    }),\n    yStackMax = d3.max(layers, function(layer) {\n      return d3.max(layer, function(d) {\n        return d[1];\n      });\n    });\n  var margin = {top: 40, right: 10, bottom: 20, left: 10},\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n  var x = d3.scaleBand()\n      .domain(months)\n      .rangeRound([0, width])\n      .padding(0.08);\n\n  var y = d3.scaleLinear()\n      .domain([0, yStackMax])\n      .range([height, 0]);\n\tvar z = d3.scaleBand().domain(allRaces).rangeRound([0, x.bandwidth()]);\n  var color = d3.scaleOrdinal(d3.schemeCategory20c)\n      .domain([0, n-1])\n\n  var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n  var layer = svg.selectAll(\".layer\")\n      .data(layers)\n    .enter().append(\"g\")\n      .attr(\"class\", \"layer\")\n      .style(\"fill\", function(d, i) { return color(i); });\n\n  var rect = layer.selectAll(\"rect\")\n      .data(function(d) { return d; })\n    .enter().append(\"rect\")\n      .attr(\"x\", function(d) { \n        \n        return x(d.month); })\n      .attr(\"y\", height)\n      .attr(\"width\", x.bandwidth())\n      .attr(\"height\", 0);\n\n  rect.transition()\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) {\n          return y(d[1]);\n      })\n      .attr(\"height\", function(d) {\n          return y(d[0]) - y(d[1]);\n      });\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t\t.call(d3.axisBottom(x).tickSizeOuter(0));\n\n  var legend = svg.selectAll(\".legend\")\n      .data(allRaces)\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", function(d,i) { return color(i) });\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n  d3.selectAll(\"input\").on(\"change\", change);\n\n  var timeout = setTimeout(function() {\n    d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(timeout);\n    if (this.value === \"grouped\") transitionGrouped();\n    else transitionStacked();\n  }\n\n  function transitionGrouped() {\n    y.domain([0, yGroupMax]);\n\n    rect.transition()\n        .duration(500)\n        .delay(function(d, i) { return i * 10; })\n    \t\t.attr(\"x\", function(d) {\n                    return x(d.month)+ z(d.race);\n                })\n                .attr(\"width\", x.bandwidth() / m)\n                .transition()\n                .attr(\"y\", function(d) {\n                    return y(d.data[d.race]);\n                })\n                .attr(\"height\", function(d) {\n                    return height - y(d.data[d.race]);\n                });\n  }\n\n  function transitionStacked() {\n    y.domain([0, yStackMax]);\n\n    rect.transition()\n        .duration(500)\n        .delay(function(d, i) { return i * 10; })\n        .attr(\"y\", function(d) {\n          return y(d[1]);\n        })\n        .attr(\"height\", function(d) {\n            return y(d[0]) - y(d[1]);\n        })\n      .transition()\n        .attr(\"x\", function(d) { return x(d.month); })\n        .attr(\"width\", x.bandwidth());\n  }\n});\n</script>", "description": "Stacked-to-Grouped Police Killings with D3 v4", "created_at": "2016-09-23T17:30:15Z", "updated_at": "2016-11-02T03:38:44Z", "api": ["d3.csv", "d3.stack", "d3.max", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.select", "d3.axisBottom", "d3.selectAll"], "readme": "D3 Version 4 implementation of the stacked to grouped bar chart.\n\nSwitch between stacked and grouped layouts using sequenced transitions! Animations preserve object constancy and allow the user to follow the data across views. Animation design by [Heer and Robertson](http://vis.berkeley.edu/papers/animated_transitions/). Colors and data generation inspired by [Byron and Wattenberg](http://www.leebyron.com/else/streamgraph/).\n\nPolice killings data for 2015 (up to June) downloaded from [FiveThirtyEight](https://github.com/fivethirtyeight/data/tree/master/police-killings)\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3943967'>Stacked-to-Grouped Bars</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/2b1446f496c3968f6ecd'>Stacked-to-Grouped Police Killings</a>\n\nforked from <a href='http://bl.ocks.org/Nastasi7/'>Nastasi7</a>'s block: <a href='http://bl.ocks.org/Nastasi7/8e4b032ce21ee9291ee8'>Stacked-to-Grouped Police Killings</a>", "uid": "mashehu_de923d763a53d523596ba81c6d1f3233"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n\nvar parseTime = d3.timeParse(\"%Y\")\n    bisectDate = d3.bisector(function(d) { return d.year; }).left;\n\nvar x = d3.scaleTime().range([0, width]);\nvar y = d3.scaleLinear().range([height, 0]);\n\nvar line = d3.line()\n    .x(function(d) { return x(d.year); })\n    .y(function(d) { return y(d.value); });\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"data.json\", function(error, data) {\n    if (error) throw error;\n\n    data.forEach(function(d) {\n      d.year = parseTime(d.year);\n      d.value = +d.value;\n    });\n\n    x.domain(d3.extent(data, function(d) { return d.year; }));\n    y.domain([d3.min(data, function(d) { return d.value; }) / 1.005, d3.max(data, function(d) { return d.value; }) * 1.005]);\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--y\")\n        .call(d3.axisLeft(y).ticks(6).tickFormat(function(d) { return parseInt(d / 1000) + \"k\"; }))\n      .append(\"text\")\n        .attr(\"class\", \"axis-title\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"fill\", \"#5D6971\")\n        .text(\"Population)\");\n\n    g.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"line\")\n        .attr(\"d\", line);\n\n    var focus = g.append(\"g\")\n        .attr(\"class\", \"focus\")\n        .style(\"display\", \"none\");\n\n    focus.append(\"line\")\n        .attr(\"class\", \"x-hover-line hover-line\")\n        .attr(\"y1\", 0)\n        .attr(\"y2\", height);\n\n    focus.append(\"line\")\n        .attr(\"class\", \"y-hover-line hover-line\")\n        .attr(\"x1\", width)\n        .attr(\"x2\", width);\n\n    focus.append(\"circle\")\n        .attr(\"r\", 7.5);\n\n    focus.append(\"text\")\n        .attr(\"x\", 15)\n      \t.attr(\"dy\", \".31em\");\n\n    svg.append(\"rect\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .on(\"mouseover\", function() { focus.style(\"display\", null); })\n        .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n        .on(\"mousemove\", mousemove);\n\n    function mousemove() {\n      var x0 = x.invert(d3.mouse(this)[0]),\n          i = bisectDate(data, x0, 1),\n          d0 = data[i - 1],\n          d1 = data[i],\n          d = x0 - d0.year > d1.year - x0 ? d1 : d0;\n      focus.attr(\"transform\", \"translate(\" + x(d.year) + \",\" + y(d.value) + \")\");\n      focus.select(\"text\").text(function() { return d.value; });\n      focus.select(\".x-hover-line\").attr(\"y2\", height - y(d.value));\n      focus.select(\".y-hover-line\").attr(\"x2\", width + width);\n    }\n});\n\n</script>", "description": "Line Chart with Circle Tooltip D3 V4", "created_at": "2016-09-22T21:41:43Z", "updated_at": "2016-10-19T15:14:58Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.scaleTime", "d3.scaleLinear", "d3.line", "d3.json", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.mouse"], "readme": "This chart is based on <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3883245'>Line Chart</a>\n\nit uses a json file storing year values and population values. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape", "uid": "alandunning_cfb7dcd7951826b9eacd54f0647f48d3"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"/mbostock/raw/4063550/flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Collapsible Tree", "created_at": "2016-09-21T06:02:28Z", "updated_at": "2016-09-21T06:02:28Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a [Reingold\u2013Tilford tree](/4339184). Click on the nodes to expand or collapse.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>", "uid": "aldrejota_aced8f7034616f7c4800a62e1db14cd4"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Collapsible Tree", "created_at": "2016-09-20T21:42:30Z", "updated_at": "2016-09-20T21:55:41Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a [Reingold\u2013Tilford tree](/4339184). Click on the nodes to expand or collapse.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>", "uid": "john-guerra_32be58cf91f613d45c687095bad39432"}, {"code": "<script>\n//var n = 40,\n    //random = d3.randomNormal(100, 150),\n    //data = d3.range(n).map(random);\n  \nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 20, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \nvar x = d3.scaleLinear()\n//     .domain([1, n - 2])\n    .range([0, width]);\n  \nvar y = d3.scaleLinear()\n    //.domain([20, 180])\n    .range([height, 0]);\n  \n var maxIndex = 10;\n  var minIndex = 0;\n  var fullData;\n  var subset;\n  \nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n  fullData = data;\n  data.forEach(function(d) {\n\t\td.index = +d.index;\n    d.Time = +d.Time;\n    d.Heart_Rate = +d.Heart_Rate;\n  });\n  subset = data.slice(minIndex, maxIndex);\n   console.log(subset);\n\n\tx.domain(d3.extent(subset, function(d) { return d.Time; })).nice();\n  y.domain([0, d3.max(data, function(d) {return d.Heart_Rate; })]).nice();\n  \n  var line = d3.line()\n      .curve(d3.curveBasis)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Heart_Rate); });\n\tconsole.log(line)\n//   var alarm_top = d3.line()\n//       .x(function(d, i) { return x(i+10); })\n//       .y(function(d, i) { return y(d+10); });\n\n//   var alarm_bottom = d3.line()\n//       .x(function(d, i) { return x(i+10); })\n//       .y(function(d, i) { return y(d+10); });\n\tg.append(\"defs\").append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n  \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y));\n  g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n    .append(\"path\")\n      .datum(subset)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", line)\n    .transition()\n      .duration(500)\n      .ease(d3.easeLinear)\n      .on(\"start\", tick);\n  //console.log(data.Time)\n  //console.log(data)\n  //console.log(\"you are now rocking with d3\", d3);\n  function tick() {\n    // Push a new data point onto the back.\n    \n//     subset.pop();\n//     subset.push(fullData.slice(maxIndex, maxIndex+1));\n\t\tsubset.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n    console.log(subset);\n\n    // Redraw the line.\n    d3.select(this)\n        .attr(\"d\", line)\n        .attr(\"transform\", null);\n    // Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) { return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick);\n    // Pop the old data point off the front.\n    subset.shift();\n\tx.domain(d3.extent(subset, function(d) { return d.Time; })).nice();\n\n  d3.select(\"g.axis--x\")\n  \t.transition()\n  \t.call(d3.axisBottom(x));\n  }\n});\n  \n</script>", "description": "HR_alarm", "created_at": "2016-09-19T17:45:14Z", "updated_at": "2016-09-19T18:27:07Z", "api": ["d3.randomNormal", "d3.range", "d3.select", "d3.scaleLinear", "d3.csv", "d3.extent", "d3.max", "d3.line", "d3.axisBottom", "d3.axisLeft", "d3.active"], "readme": "This example is the second of three in the [Path Transitions tutorial](http://bost.ocks.org/mike/path/); see the [previous example](/mbostock/1643051) for context.\n\nThe desired pairing of numbers for path interpolation is like this:\n\n    M x0, y0 L x1, y1 L x2, y2 L x3, y3 L xR, y4\n       \u2193   \u2193    \u2193   \u2193    \u2193   \u2193    \u2193   \u2193\n    M xl, y0 L x0, y1 L x1, y2 L x2, y3 L x3, y4\n\nWhere `xl` is some negative value off the left side, and `xr` is some positive value off the right side. This way, the first point \u27e8x0,y0\u27e9 is interpolated to \u27e8xl,y0\u27e9; meaning, the x-coordinate is interpolated rather than the y-coordinate, and so the path appears to slide off to the left. Likewise, the incoming point \u27e8xr,y4\u27e9 is interpolated to \u27e8x3,y4\u27e9.\n\nWhile you could write a custom interpolator and use [*transition*.attrTween](https://github.com/d3/d3-transition#transition_attrTween) to achieve this, a much simpler solution is to **interpolate the transform attribute** rather than the path. This way, the shape of the path remains static while the it translates left during the transition.\n\nImmediately prior to the transition, the path is redrawn as follows:\n\n    M x0, y0 L x1, y1 L x2, y2 L x3, y3 L xr, y4\n\nThen, a transform transition is applied:\n\n    translate(0,0)\n              \u2193\n    translate(xl,0)\n\nThis causes the path to slide left. A clip path is used so the path is not visible outside of the chart body.\n\nNote that for charts with spline interpolation, you\u2019ll need to crop the visible part of the line by an extra point, so that the change in tangent is not visible; see the [next example](/mbostock/1642989).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1642874'>HR_alarm</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/33875137e4a93dc2ade33a5b2fd1599d'>HR_alarm</a>\n\nforked from <a href='http://bl.ocks.org/ssaleh2/'>ssaleh2</a>'s block: <a href='http://bl.ocks.org/ssaleh2/dca507b7e0c5213db00d6d85ad85c854'>HR_alarm</a>", "uid": "sampathweb_842d0945d9002ade5fd62457357318e3"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 100, bottom: 110, left: 40},\n    margin2 = {top: 430, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    height2 = +svg.attr(\"height\") - margin2.top - margin2.bottom;\n\n// var parseDate = d3.timeParse(\"%b %Y\"),\n  var parseTime = d3.timeParse(\"%Y%m%d\"),\n    bisectDate = d3.bisector(function(d) { return d.date; }).left,\n    bisect = d3.bisector(function(d) { return parseTime(d.x); }).left;\n\nvar x = d3.scaleTime().range([0, width]),\n    x2 = d3.scaleTime().range([0, width]),\n    x3 = d3.scaleLinear().range([0,width]),\n    y = d3.scaleLinear().range([height, 0]),\n    y2 = d3.scaleLinear().range([height2, 0])\n\t\tz = d3.scaleOrdinal(d3.schemeCategory10);\n\nvar xAxis = d3.axisBottom(x),\n    xAxis2 = d3.axisBottom(x2),\n    yAxis = d3.axisLeft(y);\n\n\n\nvar zoom = d3.zoom()\n    .scaleExtent([1, Infinity])\n    .translateExtent([[0, 0], [width, height]])\n    .extent([[0, 0], [width, height]])\n    .on(\"zoom\", zoomed);\n\nvar area = d3.area()\n    .curve(d3.curveMonotoneX)\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.price); });\n  \n// var line = d3.line()\n// // \t\t.curve(d3.curveMonotoneX)\n//     .x(function(d) {\n//       return x(d.date);\n//     })\n//     .y(function(d) {\n//       return y(d.price);\n//     });\n  \n  \nvar line = d3.line()\n.x(function(d) {\n  return x(parseTime(d.x));\n})\n.y(function(d) {\n  return y(d.y);\n});  \n\n// var area2 = d3.area()\n//     .curve(d3.curveMonotoneX)\n//     .x(function(d) { return x2(d.date); })\n//     .y0(height2)\n//     .y1(function(d) { return y2(d.price); });\n\n  var area2 = d3.area()\n    .curve(d3.curveMonotoneX)\n    .x(function(d) { return x2(parseTime(d.x)); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.y); });\n\n  \nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar context = svg.append(\"g\")\n    .attr(\"class\", \"context\")\n    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\n  d3.json(\"temperature3.json\", function(error, data) {\n//     console.log(data);\n// d3.csv(\"sp500.csv\", type, function(error, data) {\n  if (error) throw error;\n\n//   x.domain(d3.extent(data, function(d) { return d.date; }));\n//   y.domain([0, d3.max(data, function(d) { return d.price; })]);\n    \nx.domain(d3.extent(data['0'].values, function(c){return parseTime(c.x)}));\n  y.domain([\n    d3.min(data, function(c) { return d3.min(c.values, function(d) { return d.y; }); }),\n    d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.y; }); })\n  ]);    \n  x2.domain(x.domain());\n  y2.domain(y.domain());\n    \n    \n  x3.domain([0, data[0].values.length - 1]);\n    \n  z.domain(data, function(c) { return c.id; });\n\n    \n    var brush = d3.brushX()\n    .extent([[0, 0], [width, height2]])\n    .on(\"brush end\", brushed);\n    \n    \n//   focus.append(\"path\")\n//       .datum(data)\n//       .attr(\"class\", \"area\")\n//       .attr(\"d\", area);\n  \n//   focus.append(\"path\")\n//   \t\t  .datum(data)\n//   \t\t\t.attr(\"class\", \"line\")\n//   \t\t\t.attr(\"d\", line)\n//   \t\t\t.style(\"stroke\", \"black\");\n\n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(yAxis);\n    \n    \nvar city = focus.selectAll(\".city\")\n    .data(data)\n    .enter().append(\"g\")\n    .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(parseTime(d.value.x)) + \",\" + y(d.value.y) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });    \n    \n    \n\n  context.append(\"path\")\n      .data(data)\n      .attr(\"class\", \"area\")\n//       .attr(\"d\", area2)\n  \t\t.attr('d', function(d) { return area2(d.values); });\n\n  context.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(brush)\n      .call(brush.move, x.range());\n\n//   svg.append(\"rect\")\n//       .attr(\"class\", \"zoom\")\n//       .attr(\"width\", width)\n//       .attr(\"height\", height)\n//       .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n//       .call(zoom);\n  \n  \n  var circ = svg.append(\"g\")\n      .attr(\"class\", \"circ\")\n      .style(\"display\", \"none\");\n\n//   circ.append(\"circle\")\n//   \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n//       .attr(\"r\", 2.5)\n//   \t\t.style(\"fill\", \"black\");\n\n//   circ.append(\"text\")\n//   \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n//       .attr(\"x\", 9)\n//       .attr(\"dy\", \".35em\");\n    \n    \n    \nfor(var i=0;i<data.length;i++){\n              circ.append(\"g\")\n                .attr(\"class\", \"circ\"+i)\n                .append(\"circle\")\n              \t.style(\"stroke\",  z(data[i].id))\n              \t.style(\"fill\", z(data[i].id))\n              \t.attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n                .attr(\"r\", 2);\n              svg.select(\".circ\"+i)\n                .append(\"text\")\n              \t.attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n                .attr(\"x\", 9)\n                .attr(\"dy\", \".35em\");\n          }    \n  \n  \n\nsvg.append(\"rect\")\n          .attr(\"class\", \"overlay\")\n          .attr(\"width\", width)\n          .attr(\"height\", height)\n      \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n          .on(\"mouseover\", function() { circ.style(\"display\", null); })\n          .on(\"mouseout\", function() { circ.style(\"display\", \"none\"); })\n          .on(\"mousemove\",  mousemove);\n  \n \n  \n//   function mousemove() {\n// //   console.log(\"in mosemove\");\n//     var x0 = x.invert(d3.mouse(this)[0]),\n//         i = bisectDate(data, x0, 1),\n//         d0 = data[i - 1],\n//         d1 = data[i],\n//         d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n//     circ.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\");\n//     circ.select(\"text\").text(d.price);\n//   } \n    \n    \n    function mousemove() {\n              var x0 = x.invert(d3.mouse(this)[0]);\n              var series = data.map(function(e) {\n                    var i = bisect(e.values, x0, 1),\n                        d0 = e.values[i - 1],\n                        d1 = e.values[i];\n                    return x0 - d0.x > d1.x - x0 ? d1 : d0;\n                  });\n//     console.log(series);\n              for(var i=0; i<series.length;i++){\n                var selectedFocus = svg.selectAll(\".circ\"+i);\n                selectedFocus.attr(\"transform\", \"translate(\" + x(parseTime(series[i].x)) + \",\" + y(series[i].y) + \")\");\n                selectedFocus.select(\"text\").text(series[i].y);\n              }\n            }\n  \n function brushed() {\n  if (d3.event.sourceEvent && d3.event.sourceEvent.type === \"zoom\") return; // ignore brush-by-zoom\n  var s = d3.event.selection || x2.range();\n//    console.log(s[0],s[1], Math.floor(x3.invert(s[1])));\n  x.domain(s.map(x2.invert, x2));\n//   focus.select(\".area\").attr(\"d\", area);\n//   focus.select(\".line\").attr(\"d\", line);\n  \t\tfocus.selectAll(\".line\").attr(\"d\", function(d) { return line(d.values); });\n//   city.select(\".line\").attr(\"d\", function(d) { return line(d.values); });\n   city.select(\"text\")\n   \t\t.data(data)\n      .datum(function(d) { return {id: d.id, value: d.values[Math.floor(x3.invert(s[1]))]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(parseTime(d.value.x)) + \",\" + y(d.value.y) + \")\"; });\n  focus.select(\".axis--x\").call(xAxis);\n  svg.select(\".zoom\").call(zoom.transform, d3.zoomIdentity\n      .scale(width / (s[1] - s[0]))\n      .translate(-s[0], 0));\n} \n  \n\n    \n});\n \n  \n\n  \n  \n\n  \n  \n\n\n\nfunction zoomed() {\n  if (d3.event.sourceEvent && d3.event.sourceEvent.type === \"brush\") return; // ignore zoom-by-brush\n  var t = d3.event.transform;\n  x.domain(t.rescaleX(x2).domain());\n  focus.select(\".area\").attr(\"d\", area);\n  focus.select(\".line\").attr(\"d\", line);\n  focus.select(\".axis--x\").call(xAxis);\n  context.select(\".brush\").call(brush.move, x.range().map(t.invertX, t));\n}\n\nfunction type(d) {\n  d.date = parseDate(d.date);\n  d.price = +d.price;\n  return d;\n}\n\n</script>", "description": "Brush & Zoom", "created_at": "2016-09-18T16:19:02Z", "updated_at": "2016-09-20T04:22:14Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.axisBottom", "d3.axisLeft", "d3.zoom", "d3.area", "d3.line", "d3.json", "d3.csv", "d3.extent", "d3.max", "d3.min", "d3.brushX", "d3.mouse"], "readme": "Combining [d3-brush](https://github.com/d3/d3-brush) and [d3-zoom](https://github.com/d3/d3-zoom) to implement Focus + Context. Another approach is to [zoom to the brushed region](/mbostock/f48fcdb929a620ed97877e4678ab15e6).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/34f08d5e11952a80609169b7917d4172'>Brush & Zoom</a>", "uid": "eric-bunch_8551a58b746bb5673d5fdf7d723b765b"}, {"code": "<script>\n    const WIDTH = 960;\n    const HEIGHT = 500;\n    const NWALKERS = 100;\n    const NEAR = 5;\n    const LIFETIME = 100;\n   \n    const clampColor = function(input) {\n      return Math.round(Math.max(0, Math.min(255, input)))\n    }\n    \n    const wrap = function(n) {\n      if (n < 0) { return false } // return n + WIDTH * HEIGHT }\n      if (n > WIDTH * HEIGHT) { return false } // return n - WIDTH * HEIGHT }\n      return n\n    }\n    \n    const adjacencyTransform = [\n      function(n) { return wrap(n - WIDTH) },\n      function(n) { return (n % WIDTH !== 0) ? wrap(n - 1) : false },\n      function(n) { return ((n + 1) % WIDTH !== 0) ? wrap(n + 1) : false },\n      function(n) { return wrap(n + WIDTH) },\n      \n      function(n) { return wrap(n - WIDTH) },\n      function(n) { return (n % WIDTH !== 0) ? wrap(n - 1) : false },\n      function(n) { return ((n + 1) % WIDTH !== 0) ? wrap(n + 1) : false },\n      function(n) { return wrap(n + WIDTH) },\n      \n      function(n) { return wrap(n + WIDTH) }, // bias downwards\n    ], NADJ = 9;\n    \n    // Set up\n    var substrate, treeCells, nTreeCells, treeTop, treeLeft, treeRight,\n        walkers, walkerAge, pxToPaint;\n    \n    var canvas = d3.select(\"body\").append(\"canvas\")\n      .attr(\"width\", WIDTH)\n      .attr(\"height\", HEIGHT);\n    \n    var svg = d3.select(\"body\").append(\"svg\")\n    \t.attr(\"width\", WIDTH)\n      .attr(\"height\", HEIGHT)\n    \t.style(\"position\", \"absolute\")\n    \t.style(\"top\", 0)\n    \t.style(\"left\", 0)\n    \n    var ctx = canvas.node().getContext(\"2d\");\n    \n    var imgData = ctx.getImageData(0, 0, WIDTH, HEIGHT);\n    var data = imgData.data;\n    \n    function randomWalker() {\n      var pos, x, y, i, xx, yy;\n      do {\n        xx = treeLeft + Math.floor(Math.random() * (treeRight - treeLeft));\n        yy = treeTop - NEAR;\n        i = yy * WIDTH + xx;\n      } while (xx >= WIDTH || yy >= HEIGHT || substrate[i] > 0);\n      return i;\n    }\n    \n    function addTreeCell(pos, v) {\n      substrate[pos] = v;\n      treeCells[nTreeCells] = pos;\n      nTreeCells += 1;\n      \n      var x = pos % WIDTH, y = Math.floor(pos / WIDTH);\n      if (y < treeTop) { treeTop = y; }\n      if (x < treeLeft) { treeLeft = x; }\n      if (x > treeRight)  { treeRight = x; }\n    }\n    \n    var resetSimulation = function() {\n      substrate = d3.range(WIDTH * HEIGHT).map(function() { return 0; });\n      treeCells = d3.range(WIDTH * HEIGHT).map(function() { return null; });\n      nTreeCells = 0;\n      \n      // initialise the substrate with a line at the bottom,\n      // 1/4 -> 3/4 of the way across. \n      for (var i = WIDTH/4; i < 3*WIDTH/4; i++) {\n        var j = (HEIGHT-1)*WIDTH + i;\n        addTreeCell(j, 1);\n      }\n      treeTop = HEIGHT-1;\n      treeLeft = WIDTH/4;\n      treeRight = 3*WIDTH/4;\n      \n      // initialise each walker to a random position (above the\n      // substrate)\n      walkers = d3.range(NWALKERS).map(function() {\n        return randomWalker();\n      });\n      walkerAge = d3.range(NWALKERS).map(function() { return 0; });\n   \n      substrate.forEach(function(v, i) {\n        var b = i * 4, c = v ? 255 : 0;\n        data[b] = c;\n        data[b + 1] = c;\n        data[b + 2] = c;\n        data[b+3] = 255;\n      })\n      \n      ctx.putImageData(imgData, 0, 0)\n      \n      window.requestAnimationFrame(tick)\n    }\n    \n    var tick = function() {\n      // Should Continue\n      pxToPaint = []\n      \n      // Simulate\n      walkers = walkers.map(function(p, i) {\n        var newp = adjacencyTransform[Math.floor(Math.random()*NADJ)](p);\n        \n        if (newp === false) {\n          // gone off the screen: re-init to random pos\n          walkerAge[i] = 0;\n          return randomWalker();\n        }\n        if (substrate[newp] > 0) {\n          // hit the existing tree: attach and re-init\n          addTreeCell(p, substrate[newp]+1);\n          pxToPaint.push(p);\n          walkerAge[i] = 0;\n          return randomWalker();\n        }\n        walkerAge[i] += 1;\n        if (walkerAge[i] > LIFETIME) {\n          walkerAge[i] = 0;\n          return randomWalker();\n        }\n        pxToPaint.push(p);\n        return newp;\n      }); \n      \n      // Paint\n    \tpxToPaint.forEach(function(coordinate) {\n        var r = coordinate * 4;\n        var g = r + 1;\n        var b = g + 1;\n        var a = b + 1;\n\n        var subs = substrate[coordinate];\n        // TODO get r,g,b from some other colour. \n            \t\t\t\t\n        data[r] = subs ? 255 : 50;\n        data[g] = subs ? 255 : 50;\n        data[b] = subs ? 255 : 50;\n        data[a] = 255\n      })\n\n      ctx.putImageData(imgData, 0, 0)\n      \n     // if (liveCells.length > 0) {\n      \twindow.requestAnimationFrame(tick)  \n      //} else {\n      //  console.log('done')\n      //  setTimeout(resetSimulation, 5000)\n      //}\n      \n    }\n    \n    resetSimulation()\n    \n    \n  </script>", "description": "Diffusion Limited Aggregation", "created_at": "2016-09-17T19:27:42Z", "updated_at": "2016-09-27T16:33:00Z", "api": ["d3.select", "d3.range"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nEventually this is going to be a DLA demo. \n\nforked from <a href='http://bl.ocks.org/tonyhschu/'>tonyhschu</a>'s block: <a href='http://bl.ocks.org/tonyhschu/067d977d6d4ae7224dcebdf3775d9e7e'>Antibiotic Resistance Simulation</a>", "uid": "lookoutjames_c7b8d5053c25ad1b3744509dd957caee"}, {"code": "<script>\n    // http://slavevoyages.org/tast/assessment/estimates.faces\n    d3.tsv(\"slavery.tsv\", function(err, data) {\n      var countries = Object.keys(data[0]).slice(1,7);\n      countries = [\n        \"2015\",\n        \"2014\",\n        \"2013\",\n        \"2012\",\n\t\t\t\t\"2011\",\n\t\t\t\t\"2010\",\n      ]\n      var countryData = {}\n      countries.forEach(function(country) {\n        countryData[country] = data.map(function(d) {\n          return parseInt(d[country].replace(/,/g, ''));\n        })\n      })\n      console.log(countries)\n      console.log(data[0]);\n      var width = 960;\n      var height = 500;\n      \n      var lineHeight = 211;\n      var lineOffset = 21;\n      \n      var chartHeight = 350;\n      \n      var color = d3.scale.ordinal()\n      .domain(d3.range(countries.length))\n      .range([\n        \"#7C938D\",\n        \"#544C36\",\n        \"#BB976E\",\n        \"#A4B284\",\n        \"#5E6560\",\n        \"#7A8868\",\n        \"#9AB7B5\"\n      ])\n\n      \n      var svg = d3.select(\"svg\")\n      .attr({width: width, height: height });\n      \n      var xscale = d3.scale.linear()\n      //.domain(d3.extent(data, function(d) { return +d.year }))\n      .domain([0, data.length])\n      .range([140, width - 20])\n      \n      var yscale = d3.scale.linear()\n      .domain([0, d3.max(countries, function(country) {\n        return d3.max(countryData[country])\n      })])\n      .range([lineHeight, 0])\n      \n      var area = d3.svg.area()\n        .x(function(d,i) { return xscale(i); })\n        .y0(function(d) { return lineHeight; })\n        .y1(function(d) { return yscale(d); })\n        .interpolate(\"basis\")\n\n      var xaxis = svg.selectAll(\"g.year\")\n      .data(data)\n      .enter()\n      .append(\"g\").classed(\"year\", true)\n      .attr({\n        transform: function(d,i) {\n          return \"translate(\" + [xscale(i), chartHeight] + \")\"\n        }\n      })\n      .style({\n        \"display\": function(d,i) { return i % 20 == 0 ? \"\": \"none\" },\n        \"font-size\": \"10px\"\n      })\n      xaxis\n      .append(\"line\").attr({\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: -chartHeight,\n        stroke: \"#f7f7f7\",\n\n      })\n      xaxis\n      .append(\"text\")\n        .text(function(d) { return d.year })\n        .attr(\"transform\", \"rotate(0)translate(-10,12)\")\n      \n      var legend = svg.selectAll(\"g.country\")\n      .data(countries)\n      .enter()\n      .append(\"g\").classed(\"country\", true)\n        .attr(\"transform\", function(d,i) {\n          return \"translate(\" + [20, 205 + i * lineOffset] + \")\";\n        })\n        .style({\n          fill: function(d,i) { return color(i) },\n          \"font-family\": \"Helvetica\"\n        })\n        .append(\"text\")\n      \t.text(function(d) { return d })\n      \n\n      var groups = svg.selectAll(\"g.countries\")\n        .data(countries)\n        .enter().append(\"g\").classed(\"countries\", true)\n        .attr({\n          transform: function(d,i) { return \"translate(\" + [0, i * lineOffset] + \")\" },\n          fill: function(d,i) { return color(i) },\n        })\n      \n      var areas = groups.selectAll(\"path.country\")\n      \t.data(function(d) { return [countryData[d]] })\n      areas\n        .enter()\n        .append(\"path\").classed(\"country\", true)\n        .attr(\"d\", function(d) {\n          return area(d)\n        })\n      \n      \n      \n    })\n  </script>", "description": "Mission Power", "created_at": "2016-09-17T11:39:59Z", "updated_at": "2016-09-17T11:41:16Z", "api": ["d3.tsv", "d3.scale.ordinal", "d3.range", "d3.select", "d3.scale.linear", "d3.extent", "d3.max", "d3.svg.area"], "readme": "## Slave Voyages - Embarking\n\nThis is an attempt at visualizing the relative scale of the slave trade by country. The data comes from [slavevoyages.org](http://slavevoyages.org/tast/assessment/estimates.faces).\n\nThe visualization is inpsired by the [Mountains-out-of-molehills](http://www.informationisbeautiful.net/visualizations/mountains-out-of-molehills/) visualization. The focus is to communicate the relative scale over time, giving us a sense of activity over time of this attrocious part of our history.\n\n\n\n\n\n\n\n\n\n\n\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/754c7d061c2d0b71be37'>slave voyages - embarking</a>", "uid": "SioKCronin_3920aabb6f5a7528d7b00d7fcb872369"}, {"code": "<script>\n\n  var data = [],\n      svg,\n      defs,\n      gBrush,\n      brush,\n      main_xScale,\n      mini_xScale,\n      main_yScale,\n      mini_yScale,\n      main_yZoom,\n      main_xAxis,\n      main_yAxis,\n      mini_width,\n      textScale;\n\n  init();\n\n  function init() {\n\n    //Create the random data\n    for (var i = 0; i < 40; i++) {\n      var my_object = {};\n      my_object.key = i;\n      my_object.country = makeWord();\n      my_object.value = Math.floor(Math.random() * 600);\n      data.push(my_object);\n    }//for i \n    data.sort(function(a,b) { return b.value - a.value; });\n\n    /////////////////////////////////////////////////////////////\n    ///////////////// Set-up SVG and wrappers ///////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Added only for the mouse wheel\n    var zoomer = d3.behavior.zoom()\n        .on(\"zoom\", null);\n\n    var main_margin = {top: 10, right: 10, bottom: 30, left: 100},\n        main_width = 500 - main_margin.left - main_margin.right,\n        main_height = 400 - main_margin.top - main_margin.bottom;\n\n    var mini_margin = {top: 10, right: 10, bottom: 30, left: 10},\n        mini_height = 400 - mini_margin.top - mini_margin.bottom;\n    mini_width = 100 - mini_margin.left - mini_margin.right;\n\n    svg = d3.select(\"#chart\").append(\"svg\")\n        .attr(\"class\", \"svgWrapper\")\n        .attr(\"width\", main_width + main_margin.left + main_margin.right + mini_width + mini_margin.left + mini_margin.right)\n        .attr(\"height\", main_height + main_margin.top + main_margin.bottom)\n        .call(zoomer)\n        .on(\"wheel.zoom\", scroll)\n        //.on(\"mousewheel.zoom\", scroll)\n        //.on(\"DOMMouseScroll.zoom\", scroll)\n        //.on(\"MozMousePixelScroll.zoom\", scroll)\n        //Is this needed?\n        .on(\"mousedown.zoom\", null)\n        .on(\"touchstart.zoom\", null)\n        .on(\"touchmove.zoom\", null)\n        .on(\"touchend.zoom\", null);\n\n    var mainGroup = svg.append(\"g\")\n            .attr(\"class\",\"mainGroupWrapper\")\n            .attr(\"transform\",\"translate(\" + main_margin.left + \",\" + main_margin.top + \")\")\n            .append(\"g\") //another one for the clip path - due to not wanting to clip the labels\n            .attr(\"clip-path\", \"url(#clip)\")\n            .style(\"clip-path\", \"url(#clip)\")\n            .attr(\"class\",\"mainGroup\")\n\n    var miniGroup = svg.append(\"g\")\n            .attr(\"class\",\"miniGroup\")\n            .attr(\"transform\",\"translate(\" + (main_margin.left + main_width + main_margin.right + mini_margin.left) + \",\" + mini_margin.top + \")\");\n\n    var brushGroup = svg.append(\"g\")\n            .attr(\"class\",\"brushGroup\")\n            .attr(\"transform\",\"translate(\" + (main_margin.left + main_width + main_margin.right + mini_margin.left) + \",\" + mini_margin.top + \")\");\n\n    /////////////////////////////////////////////////////////////\n    ////////////////////// Initiate scales //////////////////////\n    /////////////////////////////////////////////////////////////\n\n    main_xScale = d3.scale.linear().range([0, main_width]);\n    mini_xScale = d3.scale.linear().range([0, mini_width]);\n\n    main_yScale = d3.scale.ordinal().rangeBands([0, main_height], 0.4, 0);\n    mini_yScale = d3.scale.ordinal().rangeBands([0, mini_height], 0.4, 0);\n\n    //Based on the idea from: http://stackoverflow.com/questions/21485339/d3-brushing-on-grouped-bar-chart\n    main_yZoom = d3.scale.linear()\n        .range([0, main_height])\n        .domain([0, main_height]);\n\n    //Create x axis object\n    main_xAxis = d3.svg.axis()\n      .scale(main_xScale)\n      .orient(\"bottom\")\n      .ticks(4)\n      //.tickSize(0)\n      .outerTickSize(0);\n\n    //Add group for the x axis\n    d3.select(\".mainGroupWrapper\").append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(\" + 0 + \",\" + (main_height + 5) + \")\");\n\n    //Create y axis object\n    main_yAxis = d3.svg.axis()\n      .scale(main_yScale)\n      .orient(\"left\")\n      .tickSize(0)\n      .outerTickSize(0);\n\n    //Add group for the y axis\n    mainGroup.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(-5,0)\");\n \n    /////////////////////////////////////////////////////////////\n    /////////////////////// Update scales ///////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Update the scales\n    main_xScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n    mini_xScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n    main_yScale.domain(data.map(function(d) { return d.country; }));\n    mini_yScale.domain(data.map(function(d) { return d.country; }));\n    \n    //Create the visual part of the y axis\n    d3.select(\".mainGroup\").select(\".y.axis\").call(main_yAxis);\n    d3.select(\".mainGroupWrapper\").select(\".x.axis\").call(main_xAxis);\n\n    /////////////////////////////////////////////////////////////\n    ///////////////////// Label axis scales /////////////////////\n    /////////////////////////////////////////////////////////////\n\n    textScale = d3.scale.linear()\n      .domain([15,50])\n      .range([12,6])\n      .clamp(true);\n    \n    /////////////////////////////////////////////////////////////\n    ///////////////////////// Create brush //////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //What should the first extent of the brush become - a bit arbitrary this\n    var brushExtent = Math.max( 1, Math.min( 20, Math.round(data.length*0.2) ) );\n\n    brush = d3.svg.brush()\n        .y(mini_yScale)\n        .extent([mini_yScale(data[0].country), mini_yScale(data[brushExtent].country)])\n        .on(\"brush\", brushmove)\n        //.on(\"brushend\", brushend);\n\n    //Set up the visual part of the brush\n    gBrush = d3.select(\".brushGroup\").append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(brush);\n    \n    gBrush.selectAll(\".resize\")\n      .append(\"line\")\n      .attr(\"x2\", mini_width);\n\n    gBrush.selectAll(\".resize\")\n      .append(\"path\")\n      .attr(\"d\", d3.svg.symbol().type(\"triangle-up\").size(20))\n      .attr(\"transform\", function(d,i) { \n        return i ? \"translate(\" + (mini_width/2) + \",\" + 4 + \") rotate(180)\" : \"translate(\" + (mini_width/2) + \",\" + -4 + \") rotate(0)\"; \n      });\n\n    gBrush.selectAll(\"rect\")\n      .attr(\"width\", mini_width);\n\n    //On a click recenter the brush window\n    gBrush.select(\".background\")\n      .on(\"mousedown.brush\", brushcenter)\n      .on(\"touchstart.brush\", brushcenter);\n\n    ///////////////////////////////////////////////////////////////////////////\n    /////////////////// Create a rainbow gradient - for fun ///////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    defs = svg.append(\"defs\")\n\n    //Create two separate gradients for the main and mini bar - just because it looks fun\n    createGradient(\"gradient-rainbow-main\", \"60%\");\n    createGradient(\"gradient-rainbow-mini\", \"13%\");\n\n    //Add the clip path for the main bar chart\n    defs.append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n      .append(\"rect\")\n\t    .attr(\"x\", -main_margin.left)\n      .attr(\"width\", main_width + main_margin.left)\n      .attr(\"height\", main_height);\n\n    /////////////////////////////////////////////////////////////\n    /////////////// Set-up the mini bar chart ///////////////////\n    /////////////////////////////////////////////////////////////\n\n    //The mini brushable bar\n    //DATA JOIN\n    var mini_bar = d3.select(\".miniGroup\").selectAll(\".bar\")\n      .data(data, function(d) { return d.key; });\n\n    //UDPATE\n    mini_bar\n      .attr(\"width\", function(d) { return mini_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return mini_yScale(d.country); })\n      .attr(\"height\", mini_yScale.rangeBand());\n\n    //ENTER\n    mini_bar.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", 0)\n      .attr(\"width\", function(d) { return mini_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return mini_yScale(d.country); })\n      .attr(\"height\", mini_yScale.rangeBand())\n      .style(\"fill\", \"url(#gradient-rainbow-mini)\");\n\n    //EXIT\n    mini_bar.exit()\n      .remove();\n\n    //Start the brush\n    gBrush.call(brush.event);\n\n  }//init\n\n  //Function runs on a brush move - to update the big bar chart\n  function update() {\n\n    /////////////////////////////////////////////////////////////\n    ////////// Update the bars of the main bar chart ////////////\n    /////////////////////////////////////////////////////////////\n\n    //DATA JOIN\n    var bar = d3.select(\".mainGroup\").selectAll(\".bar\")\n        .data(data, function(d) { return d.key; });\n\n    //UPDATE\n    bar\n      .attr(\"x\", 0)\n      .attr(\"width\", function(d) { return main_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return main_yScale(d.country); })\n      .attr(\"height\", main_yScale.rangeBand());\n\n    //ENTER\n    bar.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .style(\"fill\", \"url(#gradient-rainbow-main)\")\n      .attr(\"x\", 0)\n      .attr(\"width\", function(d) { return main_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return main_yScale(d.country); })\n      .attr(\"height\", main_yScale.rangeBand());\n\n    //EXIT\n    bar.exit()\n      .remove();\n\n  }//update\n\n  /////////////////////////////////////////////////////////////\n  ////////////////////// Brush functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  //First function that runs on a brush move\n  function brushmove() {\n\n    var extent = brush.extent();\n\n    //Reset the part that is visible on the big chart\n    var originalRange = main_yZoom.range();\n    main_yZoom.domain( extent );\n\n    /////////////////////////////////////////////////////////////\n    ///////////////////// Update the axis ///////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Update the domain of the x & y scale of the big bar chart\n    main_yScale.domain(data.map(function(d) { return d.country; }));\n    main_yScale.rangeBands( [ main_yZoom(originalRange[0]), main_yZoom(originalRange[1]) ], 0.4, 0);\n\n    //Update the y axis of the big chart\n    d3.select(\".mainGroup\")\n      .select(\".y.axis\")\n      .call(main_yAxis);\n\n    /////////////////////////////////////////////////////////////\n    /////////////// Update the mini bar fills ///////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Update the colors within the mini bar chart\n    var selected = mini_yScale.domain()\n      .filter(function(d) { return (extent[0] - mini_yScale.rangeBand() + 1e-2 <= mini_yScale(d)) && (mini_yScale(d) <= extent[1] - 1e-2); }); \n    //Update the colors of the mini chart - Make everything outside the brush grey\n    d3.select(\".miniGroup\").selectAll(\".bar\")\n      .style(\"fill\", function(d, i) { return selected.indexOf(d.country) > -1 ? \"url(#gradient-rainbow-mini)\" : \"#e0e0e0\"; });\n\n    //Update the label size\n    d3.selectAll(\".y.axis text\")\n      .style(\"font-size\", textScale(selected.length));\n    \n    //Update the big bar chart\n    update();\n    \n  }//brushmove\n\n  /////////////////////////////////////////////////////////////\n  ////////////////////// Click functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  //Based on http://bl.ocks.org/mbostock/6498000\n  //What to do when the user clicks on another location along the brushable bar chart\n  function brushcenter() {\n    var target = d3.event.target,\n        extent = brush.extent(),\n        size = extent[1] - extent[0],\n        range = mini_yScale.range(),\n        y0 = d3.min(range) + size / 2,\n        y1 = d3.max(range) + mini_yScale.rangeBand() - size / 2,\n        center = Math.max( y0, Math.min( y1, d3.mouse(target)[1] ) );\n\n    d3.event.stopPropagation();\n\n    gBrush\n        .call(brush.extent([center - size / 2, center + size / 2]))\n        .call(brush.event);\n\n  }//brushcenter\n\n  /////////////////////////////////////////////////////////////\n  ///////////////////// Scroll functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  function scroll() {\n\n    //Mouse scroll on the mini chart\n    var extent = brush.extent(),\n      size = extent[1] - extent[0],\n      range = mini_yScale.range(),\n      y0 = d3.min(range),\n      y1 = d3.max(range) + mini_yScale.rangeBand(),\n      dy = d3.event.deltaY,\n      topSection;\n\n    if ( extent[0] - dy < y0 ) { topSection = y0; } \n    else if ( extent[1] - dy > y1 ) { topSection = y1 - size; } \n    else { topSection = extent[0] - dy; }\n\n    //Make sure the page doesn't scroll as well\n    d3.event.stopPropagation();\n    d3.event.preventDefault();\n\n    gBrush\n        .call(brush.extent([ topSection, topSection + size ]))\n        .call(brush.event);\n\n  }//scroll\n\n  /////////////////////////////////////////////////////////////\n  ///////////////////// Helper functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  //Create a gradient \n  function createGradient(idName, endPerc) {\n\n    var coloursRainbow = [\"#EFB605\", \"#E9A501\", \"#E48405\", \"#E34914\", \"#DE0D2B\", \"#CF003E\", \"#B90050\", \"#A30F65\", \"#8E297E\", \"#724097\", \"#4F54A8\", \"#296DA4\", \"#0C8B8C\", \"#0DA471\", \"#39B15E\", \"#7EB852\"];\n\n    defs.append(\"linearGradient\")\n      .attr(\"id\", idName)\n      .attr(\"gradientUnits\", \"userSpaceOnUse\")\n      .attr(\"x1\", \"0%\").attr(\"y1\", \"0%\")\n      .attr(\"x2\", endPerc).attr(\"y2\", \"0%\")\n      .selectAll(\"stop\") \n      .data(coloursRainbow)                  \n      .enter().append(\"stop\") \n      .attr(\"offset\", function(d,i) { return i/(coloursRainbow.length-1); })   \n      .attr(\"stop-color\", function(d) { return d; });\n  }//createGradient\n\n  //Function to generate random strings of 5 letters - for the demo only\n  function makeWord() {\n      var possible_UC = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n      var text = possible_UC.charAt(Math.floor(Math.random() * possible_UC.length));\n      \n      var possible_LC = \"abcdefghijklmnopqrstuvwxyz\";\n\n      for( var i=0; i < 5; i++ )\n          text += possible_LC.charAt(Math.floor(Math.random() * possible_LC.length));\n\n      return text;\n  }//makeWord\n\n  </script>", "description": "Brushable Horizontal Bar Chart - IV", "created_at": "2016-09-17T08:14:13Z", "updated_at": "2016-09-17T08:16:20Z", "api": ["d3.behavior.zoom", "d3.select", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.max", "d3.svg.brush", "d3.svg.symbol", "d3.selectAll", "d3.min", "d3.mouse", "d3.event.stopPropagation", "d3.event.preventDefault"], "readme": "Although there visually seems no difference between this brushable horizontal bar chart and versions [I](http://bl.ocks.org/nbremer/d8dff2fa37345d54f9e58eb74db460d0), [II](http://bl.ocks.org/nbremer/aadec1b834a6602575a217fea67f6f44), and [III](http://bl.ocks.org/nbremer/305ff3e402c269d33bbe6828f9848cae), this one is actually build on a different principle. And it is much, much better than the previous 3 versions in terms of UX, so just ignore those others :) (and as a bonus, there is way less code needed)\n\nIn this version, when you scroll your mouse, the bars in the big chart slide across the screen without any transitions.\n\nAs a note, there is no x scale adjustment in this version. Check out [version V](http://bl.ocks.org/nbremer/4c015860931fb6a13afc7bac51f40b43) for x scale adjustment\n\nThe idea for this came from [a tweet by Robert Monfera](https://twitter.com/monfera/status/758020571066200065) and an answer on [stackOverflow by AmeliaBR](http://stackoverflow.com/questions/21485339/d3-brushing-on-grouped-bar-chart) helped me figure out the first part.\n\nYou have the option to adjust how many bars you're seeing by adjusting the size of the little box on the right mini chart. You can also move the box and see the bars that you've selected appear in a bigger form on the left. Moving can be done either by grabbing and moving the box or scrolling.\n\nFor a bit more background, you can read my mini-blog about it [Brushable & interactive bar chart in d3.js](http://www.visualcinnamon.com/2016/07/brush-bar-chart-d3.html)\n\n\n\nforked from <a href='http://bl.ocks.org/nbremer/'>nbremer</a>'s block: <a href='http://bl.ocks.org/nbremer/326fb6de768e85261bfd47aa1f497863'>Brushable Horizontal Bar Chart - IV</a>", "uid": "RicCheng_b052a92ccd0d07379b57b1d6f838c62a"}, {"code": "<script>\n\nvar width = 960,\n    height = 600;\n\nvar rateById = d3.map();\n\nvar quantile = d3.scale.quantile()\n    .range(d3.range(9).map(function(i) { return \"q\" + i + \"-9\"; }));\n\nvar projection = d3.geo.albersUsa()\n    .scale(1280)\n    .translate([width / 2, height / 2]);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nqueue()\n    .defer(d3.json, \"https://gist.githubusercontent.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/us.json\")\n    .defer(d3.tsv, \"unemployment.tsv\", function(d) { rateById.set(d.id, +d.rate); })\n    .await(ready);\n\nfunction ready(error, us) {\n  if (error) throw error;\n\n  quantile.domain(rateById.values());\n\n  svg.append(\"g\")\n      .attr(\"class\", \"counties\")\n    .selectAll(\"path\")\n      .data(topojson.feature(us, us.objects.counties).features)\n    .enter().append(\"path\")\n      .attr(\"class\", function(d) { return quantile(rateById.get(d.id)); })\n      .attr(\"d\", path);\n\n  svg.append(\"path\")\n      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"states\")\n      .attr(\"d\", path);\n}\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n</script>", "description": "Quantile Choropleth", "created_at": "2016-09-17T00:57:27Z", "updated_at": "2016-09-17T00:57:59Z", "api": ["d3.map", "d3.scale.quantile", "d3.range", "d3.geo.albersUsa", "d3.geo.path", "d3.select"], "readme": "A variation of the [unemployment choropleth](/mbostock/4060606) using a quantile scale.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/8ca036b3505121279daf'>Quantile Choropleth</a>", "uid": "seemantk_59d7ef82df88de9f2a3a33e484291363"}, {"code": "<script>\n  var data = [{\"from\":1,\"to\":2},{\"from\":1,\"to\":3},{\"from\":1,\"to\":4},{\"from\":1,\"to\":5},{\"from\":1,\"to\":6},{\"from\":1,\"to\":7},{\"from\":1,\"to\":8},{\"from\":1,\"to\":9},{\"from\":1,\"to\":11},{\"from\":1,\"to\":12},{\"from\":1,\"to\":13},{\"from\":1,\"to\":14},{\"from\":1,\"to\":18},{\"from\":1,\"to\":20},{\"from\":1,\"to\":22},{\"from\":1,\"to\":32},{\"from\":2,\"to\":3},{\"from\":2,\"to\":4},{\"from\":2,\"to\":8},{\"from\":2,\"to\":14},{\"from\":2,\"to\":18},{\"from\":2,\"to\":20},{\"from\":2,\"to\":22},{\"from\":2,\"to\":31},{\"from\":3,\"to\":4},{\"from\":3,\"to\":8},{\"from\":3,\"to\":28},{\"from\":3,\"to\":29},{\"from\":3,\"to\":33},{\"from\":3,\"to\":10},{\"from\":3,\"to\":9},{\"from\":3,\"to\":14},{\"from\":4,\"to\":8},{\"from\":4,\"to\":13},{\"from\":4,\"to\":14},{\"from\":5,\"to\":7},{\"from\":5,\"to\":11},{\"from\":6,\"to\":7},{\"from\":6,\"to\":11},{\"from\":6,\"to\":17},{\"from\":7,\"to\":17},{\"from\":9,\"to\":31},{\"from\":9,\"to\":33},{\"from\":9,\"to\":34},{\"from\":10,\"to\":34},{\"from\":14,\"to\":34},{\"from\":15,\"to\":33},{\"from\":15,\"to\":34},{\"from\":16,\"to\":33},{\"from\":16,\"to\":34},{\"from\":19,\"to\":33},{\"from\":19,\"to\":34},{\"from\":20,\"to\":34},{\"from\":21,\"to\":33},{\"from\":21,\"to\":34},{\"from\":23,\"to\":33},{\"from\":23,\"to\":34},{\"from\":24,\"to\":26},{\"from\":24,\"to\":28},{\"from\":24,\"to\":33},{\"from\":24,\"to\":34},{\"from\":24,\"to\":30},{\"from\":25,\"to\":26},{\"from\":25,\"to\":28},{\"from\":25,\"to\":32},{\"from\":26,\"to\":32},{\"from\":27,\"to\":30},{\"from\":27,\"to\":34},{\"from\":28,\"to\":34},{\"from\":29,\"to\":32},{\"from\":29,\"to\":34},{\"from\":30,\"to\":33},{\"from\":30,\"to\":34},{\"from\":31,\"to\":33},{\"from\":31,\"to\":34},{\"from\":32,\"to\":33},{\"from\":32,\"to\":34},{\"from\":33,\"to\":34}];\n\n  var ndx = crossfilter(data);\n  var netDim = ndx.dimension(function(d){return [+d.from,+d.to]});\n  var netGrp = netDim.group().reduceSum(function(d){return 1});\n\n  var heatChart = dc.heatMap('#chart-heat')\n  heatChart\n    .width(400)\n    .height(400)\n    .dimension(netDim)\n    .group(netGrp)\n    .keyAccessor(function(d) { return +d.key[0]; })\n    .valueAccessor(function(d) { return +d.key[1]; })\n    .title(function(d) {\n      return 'Source:   ' + d.key[0] + '\\n' +\n      'Target:  ' + d.key[1] + '\\n'});// +\n      //'Weight: ' + d.value;})\n\n  heatChart.render();\n\n  // we do not need crosstalk for this\n  //   but use it anyways to demonstate and experiment\n  //   with crosstalk as our holder for filter state\n  var ct_grp = crosstalk.group('grp1');\n  var ct_filter = crosstalk.filter.createHandle(ct_grp);\n\n  // add a filter listener on our dc.js heatmap\n  heatChart.on('filtered',function(chart){\n    ct_filter.set(chart.filters());\n  })\n\n  // now make a function to highlight selected nodes and links\n  function highlightForce(filters){\n    var force_svg = d3.select('.forceNetwork svg');\n    var force_nodes = force_svg.selectAll('.node');\n    var force_links = force_svg.selectAll('.link');\n\n    var sources = d3.zip.apply([],ct_filter._filterSet.value)[0];\n    var targets = d3.zip.apply([],ct_filter._filterSet.value)[1];\n\n    sources = sources ? sources : [];\n    targets = targets ? targets : [];\n\n    var matched = function(link){\n      var found = false;\n      for(i=0; i< sources.length; i++){\n        if(sources[i] == link.source.name && targets[i] == link.target.name){\n          found = true;\n          break;\n        }\n      }\n      return found;\n    };\n\n    force_links.each(function(link){\n      if(matched(link)){\n        d3.select(this).style('stroke-width',5);\n      } else {\n        d3.select(this).style('stroke-width',1);\n      }\n    });\n  }\n\n  // when crosstalk filter changes highlight\n  ct_filter.on('change',function(val){\n    highlightForce(val.value);\n  })\n</script>", "description": "dc.js and networkD3 with crosstalk", "created_at": "2016-09-16T20:39:59Z", "updated_at": "2016-09-19T02:24:54Z", "api": ["d3.scale.category20", "d3.select", "d3.zip.apply"], "readme": "*Built with [blockbuilder.org](http://blockbuilder.org)*\n\n<hr/>\n\n*for the 2-way version, see [this block](http://bl.ocks.org/timelyportfolio/fff10346123c40db25cdc9e40b52dd5d)*\n\n<hr/>\n\n[`dc.js`](http://dc-js.github.io/dc.js/) is perfect for experimenting with [`crosstalk`](https://github.com/rstudio/crosstalk).  In this experiment, we use a `dc.js` heatmap to filter links from a [`networkD3`](https://github.com/christophergandrud/networkD3) force network htmlwidget.\n\n### R Code to Replicate\n\n```\nlibrary(htmltools)\nlibrary(crosstalk)\nlibrary(igraph)\nlibrary(networkD3)\n\n# Use igraph to make the graph and find membership\nkarate <- make_graph(\"Zachary\")\n\n# example from ?networkD3::igraph_to_networkD3\nkarate <- make_graph(\"Zachary\")\nwc <- cluster_walktrap(karate)\nmembers <- membership(wc)\nkarate_d3 <- igraph_to_networkD3(karate, group = members)\nfn <- forceNetwork(\n  Links = karate_d3$links, Nodes = karate_d3$nodes,\n  Source = 'source', Target = 'target', NodeID = 'name',\n  Group = 'group',\n  height = 400, width = 400\n)\n\nbrowsable(\n  attachDependencies(\n    tagList(\n      tags$head(\n        tags$script(src=\"https://d3js.org/d3.v3.min.js\"),\n        tags$script(src=\"http://dc-js.github.io/dc.js/js/crossfilter.js\"),\n        tags$script(src=\"http://dc-js.github.io/dc.js/js/dc.js\"),\n        tags$link(\n          href=\"http://dc-js.github.io/dc.js/css/dc.css\",\n          rel=\"stylesheet\"\n        )\n      ),\n      tags$div(id=\"chart-heat\", style=\"display:inline-block;\"),\n      tags$div(as.tags(fn), style=\"display:inline-block\"),\n      tags$script(\n        HTML(\n          sprintf(\n  \"\n  var data = %s;\n\n  var ndx = crossfilter(data);\n  var netDim = ndx.dimension(function(d){return [+d.from,+d.to]});\n  var netGrp = netDim.group().reduceSum(function(d){return 1});\n\n  var heatChart = dc.heatMap('#chart-heat')\n  heatChart\n    .width(400)\n    .height(400)\n    .dimension(netDim)\n    .group(netGrp)\n    .keyAccessor(function(d) { return +d.key[0]; })\n    .valueAccessor(function(d) { return +d.key[1]; })\n    .title(function(d) {\n      return 'Source:   ' + d.key[0] + '\\\\n' +\n      'Target:  ' + d.key[1] + '\\\\n'});// +\n      //'Weight: ' + d.value;})\n\n  heatChart.render();\n\n  // we do not need crosstalk for this\n  //   but use it anyways to demonstate and experiment\n  //   with crosstalk as our holder for filter state\n  var ct_grp = crosstalk.group('grp1');\n  var ct_filter = crosstalk.filter.createHandle(ct_grp);\n\n  // add a filter listener on our dc.js heatmap\n  heatChart.on('filtered',function(chart){\n    ct_filter.set(chart.filters());\n  })\n\n  // now make a function to highlight selected nodes and links\n  function highlightForce(filters){\n    var force_svg = d3.select('.forceNetwork svg');\n    var force_nodes = force_svg.selectAll('.node');\n    var force_links = force_svg.selectAll('.link');\n\n    var sources = d3.zip.apply([],ct_filter._filterSet.value)[0];\n    var targets = d3.zip.apply([],ct_filter._filterSet.value)[1];\n\n    sources = sources ? sources : [];\n    targets = targets ? targets : [];\n\n    var matched = function(link){\n      var found = false;\n      for(i=0; i< sources.length; i++){\n        if(sources[i] == link.source.name && targets[i] == link.target.name){\n          found = true;\n          break;\n        }\n      }\n      return found;\n    };\n\n    force_links.each(function(link){\n      if(matched(link)){\n        d3.select(this).style('stroke-width',5);\n      } else {\n        d3.select(this).style('stroke-width',1);\n      }\n    });\n  }\n\n  // when crosstalk filter changes highlight\n  ct_filter.on('change',function(val){\n    highlightForce(val.value);\n  })\n\",\n            jsonlite::toJSON(\n              get.data.frame(karate),\n              dataframe=\"rows\"\n            )\n          )\n        )\n      )\n    ),\n    crosstalk::crosstalkLibs()\n  )\n)\n\n```", "uid": "timelyportfolio_48be457b8cdcea8fecb8d5d8fb53aee1"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 600 - margin.top - margin.bottom,\n    heightBubble = height * 0.6,\n    heightBarchart = height * 0.4;\nvar svgParent = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom);\nvar svgBubble = svgParent.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\nvar svgBarchart = svgParent.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + (margin.top + heightBubble) + \")\");\nvar fontSize = 92;\n\n//\n\nsvgBubble.append(\"text\")\n  .attr(\"id\", \"votes-clinton\")\n  .attr(\"x\", 0)\n  .attr(\"y\", heightBubble/2)\n  .style(\"fill\", \"blue\")\n  .style(\"font-size\", fontSize +\"px\")\n  .style(\"font-weight\", \"bold\")\n  .style(\"font-family\", \"sans-serif\")\n  .text(\"Clinton\");\nsvgBubble.append(\"text\")\n  .attr(\"id\", \"votes-trump\")\n  .attr(\"x\", width)\n  .attr(\"y\", heightBubble/2)\n  .style(\"fill\", \"red\")\n  .style(\"font-size\", fontSize +\"px\")\n  .style(\"font-weight\", \"bold\")\n  .style(\"font-family\", \"sans-serif\")\n  .style(\"text-anchor\", \"end\")\n  .text(\"Trump\");\nvar nodes = [\n  {\n    candidate: 'clinton',\n    radius: 40,\n    img1: 'clinton-1.jpg',\n    img2: 'clinton-2.jpg',\n    color: \"blue\"\n  },\n  {\n    candidate: 'trump',\n    radius: 40,\n    img1: 'trump-1.jpg',\n    img2: 'trump-2.jpg',\n    color: \"red\"\n  }];\nvar defs = svgBubble.append(\"svg:defs\");\nvar images = [];\nnodes.forEach(function(d){\n  images.push( {candidate: d.candidate, img: d.img1, type: 'not-yelling'} );\n  images.push( {candidate: d.candidate, img: d.img2, type: 'yelling'} );\n});\ndefs.selectAll(\"pattern\")\n    .data(images)\n  .enter().append(\"pattern\")\n    .attr(\"id\", function(d){ return \"img-\"+ d.candidate +\"-\"+ d.type; })\n    .attr(\"width\", 1)\n    .attr(\"height\", 1)\n    .attr(\"viewBox\", \"0 0 100 100\")\n    .attr(\"preserveAspectRatio\", \"none\")\n    .append(\"image\")\n      .attr(\"width\", 100)\n      .attr(\"height\", 100)\n      .attr(\"xlink:href\", function(d){ return d.img; })\n      .attr(\"preserveAspectRatio\", \"none\");\nvar force = d3.layout.force()\n    .gravity(5)\n    .charge(10)\n    .linkDistance(-2000)\n    .nodes(nodes)\n    .size([width, heightBubble])\n    .start();\nvar bubbles = svgBubble.selectAll(\"circle\")\n    .data(nodes)\n  .enter().append(\"circle\")\n    .attr(\"id\", function(d){ return d.candidate; })\n    .attr(\"class\", \"bubble\")\n    .attr(\"r\", function(d) { return d.radius; })\n    .style(\"stroke\", function(d){ return d.color; })\n    .style(\"fill\", function(d){ return \"url(#img-\"+ d.candidate +\"-not-yelling)\"; });\nforce.on(\"tick\", function(e) {\n  var q = d3.geom.quadtree(nodes),\n      i = 0,\n      n = nodes.length;\n  while (++i < n) q.visit(collide(nodes[i]));\n  svgBubble.selectAll(\"circle\")\n      .attr(\"cx\", function(d) { return d.x; })\n      .attr(\"cy\", function(d) { return d.y; });\n});\nfunction collide(node) {\n  var r = node.radius + 16,\n      nx1 = node.x - r,\n      nx2 = node.x + r,\n      ny1 = node.y - r,\n      ny2 = node.y + r;\n  return function(quad, x1, y1, x2, y2) {\n    if (quad.point && (quad.point !== node)) {\n      var x = node.x - quad.point.x,\n          y = node.y - quad.point.y,\n          l = Math.sqrt(x * x + y * y),\n          r = node.radius + quad.point.radius;\n      if (l < r) {\n        l = (l - r) / l * .5;\n        node.x -= x *= l;\n        node.y -= y *= l;\n        quad.point.x += x;\n        quad.point.y += y;\n      }\n    }\n    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n  };\n}\n\n//\n\nd3.tsv('elections.tsv', function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d){\n    d['Electoral College Votes'] = +d['Electoral College Votes'];\n    d.Clinton = +(d.Clinton.replace('%',''));\n    d.Trump = +(d.Trump.replace('%',''));\n    d.Unsure = +(d.Unsure.replace('%',''));\n    d['Margin of Error'] = +(d['Margin of Error'].replace('%',''));\n  });\n\n  var x = d3.scale.ordinal()\n      .rangeRoundBands([0, width], .1);\n\n  var y = d3.scale.linear()\n      .range([heightBarchart, 0]);\n\n  var xAxis = d3.svg.axis()\n      .scale(x)\n      .orient(\"bottom\");\n\n  var yAxis = d3.svg.axis()\n      .scale(y)\n      .orient(\"left\")\n      .tickValues(function(){ return y.domain(); });\n\n  x.domain(data.map(function(d) { return d.State; }));\n  y.domain([0, d3.max(data, function(d) { return d['Electoral College Votes']; })]);\n\n  svgBarchart.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + heightBarchart + \")\")\n      .call(xAxis);\n\n  svgBarchart.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Electoral College Votes\");\n  d3.selectAll('.y.axis path').remove();\n\n  svgBarchart.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.State); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d['Electoral College Votes']); })\n      .attr(\"height\", function(d) { return heightBarchart - y(d['Electoral College Votes']); })\n      .on('mouseover', function(d){\n        nodes[0].radius = d.Clinton;\n        nodes[0].radius +=  (nodes[0].radius * nodes[0].radius)/30;\n        nodes[1].radius = d.Trump;\n        nodes[1].radius +=  (nodes[1].radius * nodes[1].radius)/30;\n        //\n        var bubbleInFront, bubbleInBack;\n        if (d.Clinton >= d.Trump) {\n          bubbleInFront = \"trump\";\n          bubbleInBack = \"clinton\";\n        } else {\n          bubbleInFront = \"clinton\";\n          bubbleInBack = \"trump\";\n        }\n        d3.select( \".bubble#\"+bubbleInFront ).moveToFront();\n        d3.select( \".bubble#\"+bubbleInFront ).style(\"fill\", function(d){ return \"url(#img-\"+ d.candidate +\"-not-yelling)\"; });\n        d3.select( \".bubble#\"+bubbleInBack ).style(\"fill\", function(d){ return \"url(#img-\"+ d.candidate +\"-yelling)\"; });\n        //\n        bubbles\n          .transition()\n            .duration(100)\n            // .attr(\"r\", function(d) { return d.radius + (d.radius * d.radius)/30; })\n            .attr(\"r\", function(d) { return d.radius; })\n            .attr(\"cx\", function(d) {\n              return d.x + ((Math.random() - .5) * 50);\n            })\n            .attr(\"cy\", function(d) {\n              return d.y + ((Math.random() - .5) * 50);\n            });\n        //\n        d3.select(\"#votes-clinton\").text(d.Clinton +\"%\");\n        d3.select(\"#votes-trump\").text(d.Trump +\"%\");\n        d3.select(\"#votes-\"+bubbleInFront).style(\"font-size\", fontSize/2 +\"px\");\n        d3.select(\"#votes-\"+bubbleInBack).style(\"font-size\", fontSize +\"px\");\n      });\n\n});\n\nd3.selection.prototype.moveToFront = function() {\n  return this.each(function(){\n    this.parentNode.appendChild(this);\n  });\n};\n\n</script>", "description": "Upcoming shouting match at d3.unconf", "created_at": "2016-09-16T06:24:58Z", "updated_at": "2016-09-16T06:40:28Z", "api": ["d3.select", "d3.layout.force", "d3.geom.quadtree", "d3.tsv", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.max", "d3.selectAll"], "readme": "My submission for a d3.unconf 2016 ticket...\nData from somewhere?\nSomething about Trump and Hillary shouting at each other.\nShoulda/coulda/woulda put noises of them doing that.\nOh well.", "uid": "jcnesci_abdda0bcf5206b3be3e6853e677eb0a8"}, {"code": "<script>\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////// Set up sizes and canvas ///////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  var width = 1000,\n      widthOriginal = width,\n      height = Math.min(500, window.innerHeight),\n      heightOriginal = height;\n\n  var monthFisheye = d3.select(\"#monthFisheye\");\n  var canvas = monthFisheye.append(\"canvas\");\n\n  var pixelRatio = 1,\n      generalMouseOut = true;\n\n  if (window.devicePixelRatio >= 2\n      && screen.availWidth >= 1280 // iPad cant even handle it\n      && canvas.node().getContext(\"2d\").webkitBackingStorePixelRatio !== 2) { // Safari cant even\n    pixelRatio = 2;\n  }//if\n\n  //Adjust the sizes based on the pixelRatio\n  height = height * pixelRatio;\n  width = width * pixelRatio;\n\n  canvas\n      .attr(\"height\", height)\n      .style(\"height\", heightOriginal + \"px\");\n\n  var context = canvas.node().getContext(\"2d\");\n  context.scale(pixelRatio, pixelRatio);\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////// Load month images //////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n\n  var months = [\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\"];\n  var topics = [\"Movies\",\"Olympics\",\"Travel\",\"Elections\",\"Tracking\",\"Year in Review\",\"Childhood nostalgia\",\"Fairytales\",\"Science\",\"OpenVis\",\"Personal\",\"Conversations\"];\n\n  var numRows = months.length,\n      normalHeight = height / numRows,\n      imageHeight = 400,\n      imageWidth = 960;\n\n  //Load the images for the months\n  var imageNadiehArray = new Array(),\n      imageShirleyArray = new Array();\n  for (var i = 0; i < numRows; i++) {\n        imageNadiehArray[i] = new Image;\n        //imageNadiehArray[i].src = months[i%2] + \"-nadieh.jpg\";\n        imageNadiehArray[i].src = \"https://raw.githubusercontent.com/nbremer/datasketches/gh-pages/img/\" + months[i%2].toLowerCase() + \"-nadieh.jpg\";\n        \n\n        imageShirleyArray[i] = new Image;\n        imageShirleyArray[i].src = \"https://raw.githubusercontent.com/nbremer/datasketches/gh-pages/img/\" + months[i%2].toLowerCase() + \"-shirley.jpg\";\n  }//for i\n\n  //Check if all of the images are loaded and if yes, start to build the Fisheye\n  var imageCount = numRows * 2;\n  var imagesLoaded = 0;\n  for(var i = 0; i < numRows; i++){\n      imageNadiehArray[i].onload = function(){\n          imagesLoaded++;\n          if(imagesLoaded === imageCount){ resize(); }//if\n      }//onload\n\n      imageShirleyArray[i].onload = function(){\n          imagesLoaded++;\n          if(imagesLoaded === imageCount){ resize(); }//if\n      }//onload\n  }//for i\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////// Resizing on width change ///////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n\n  d3.select(window)\n      .on(\"resize\", resize);\n\n  // Recompute bounding boxes due to reflow\n  function resize() {\n    widthOriginal = parseInt(monthFisheye.style(\"width\"));\n    width = widthOriginal * pixelRatio;\n\n    canvas\n        .attr(\"width\", width)\n        .style(\"width\", widthOriginal + \"px\");\n\n    enableFisheye(canvas);\n  }//resize\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////// Canvas drawing /////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n\n  function enableFisheye() {\n    var touchtime;\n\n    var desiredDistortion = 0,\n        desiredFocus,\n        idle = true;\n\n    var y = fisheye()\n        .distortion(0)\n        .extent([0, height]);\n\n    canvas\n        .on(\"mousedown\", mousedown)\n        .on(\"mouseover\", mouseover)\n        .on(\"mousemove\", mousemove)\n        .on(\"mouseout\", mouseout)\n        .on(\"touchstart\", touchstart)\n        .on(\"touchmove\", mousemove)\n        .on(\"touchend\", mouseout);\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////// Font scales ////////////////////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////\n\n    var maxYdiff = imageHeight*(3/8)*pixelRatio;\n\n    var fontSizeScaleMonth = d3.scale.linear()\n        .range([4*pixelRatio,16*pixelRatio])\n        .domain([1*pixelRatio,maxYdiff]);\n\n    var fontSizeScaleTopic = d3.scale.linear()\n        .range([10*pixelRatio,34*pixelRatio])\n        .domain([1*pixelRatio,maxYdiff]);\n\n    var fontOpacityScale = d3.scale.linear()\n        .range([0*pixelRatio,1*pixelRatio])\n        .domain([20*pixelRatio,maxYdiff])\n        .clamp(true);\n\n    var fontOffsetScale = d3.scale.linear()\n        .range([10*pixelRatio,28*pixelRatio])\n        .domain([1*pixelRatio,maxYdiff]);\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////////// Draw the actual canvas images and text //////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////\n\n    render();\n\n    function render() {\n\n      context.clearRect(0, 0, width, height);\n\n      for (var i = 0, n = numRows; i < n; ++i) {\n\n        context.globalAlpha = 1;\n\n        var y0 = y(i * normalHeight),\n            y1 = y((i + 1) * normalHeight),\n            dy = y1 - y0;\n\n        //Draw the left side image of Nadieh's work\n        //https://developer.mozilla.org/nl/docs/Web/API/Canvas_API/Tutorial/Using_images\n        var imageNwidth = imageNadiehArray[i].naturalWidth;\n        var Ndy = imageNwidth * dy / (width * 3/8);\n        var imageNadiehYOffset = Math.round((imageHeight - Ndy)/2);\n        context.drawImage(imageNadiehArray[i], 0, imageNadiehYOffset, imageNwidth, Ndy, 0, y0, width * 3/8, dy);\n\n        //Draw the right side image of Shirley's work\n        var imageSwidth = imageShirleyArray[i].naturalWidth;\n        var Sdy = imageSwidth * dy / (width * 3/8);\n        var imageShirleyYOffset = Math.round((imageHeight - Sdy)/2);\n        context.drawImage(imageShirleyArray[i], 0, imageShirleyYOffset, imageSwidth, Sdy, width * 5/8, y0, width * 3/8, dy);\n\n        //The month text in the middle\n        context.font = \"normal 300 \" + fontSizeScaleMonth(dy) + \"px Sacramento\";\n        context.fillStyle = \"#a6a6a6\";\n        context.textAlign = \"center\";\n        context.textBaseline = \"middle\";\n        context.globalAlpha = generalMouseOut ? 1 : fontOpacityScale(dy);\n        context.fillText(months[i], width/2, y0 + dy/2 - fontOffsetScale(dy));\n        //The topics in the middle\n        context.font = \"normal 300 \" + fontSizeScaleTopic(dy) + \"px Quicksand\";\n        context.fillStyle = \"black\";\n        context.textAlign = \"center\";\n        context.textBaseline = \"middle\";\n        context.globalAlpha = generalMouseOut ? 1 : fontOpacityScale(dy);\n        context.fillText(topics[i], width/2, y0 + dy/2);\n\n        // context.strokeStyle = \"rgba(255,255,255,0.8)\";\n        // context.beginPath();\n        // context.moveTo(0, y0);\n        // context.lineTo(width, y0);\n        // context.stroke();\n      }\n    }//render\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////////////////////// Mouse events ////////////////////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////\n\n    function move() {\n      if (idle) d3.timer(function() {\n        var currentDistortion = y.distortion(),\n            currentFocus = currentDistortion ? y.focus() : desiredFocus;\n        idle = Math.abs(desiredDistortion - currentDistortion) < .01 && Math.abs(desiredFocus - currentFocus) < .5;\n        y.distortion(idle ? desiredDistortion : currentDistortion + (desiredDistortion - currentDistortion) * .14);\n        y.focus(idle ? desiredFocus : currentFocus + (desiredFocus - currentFocus) * .14);\n        render();\n        return idle;\n      });\n    }\n\n    //An extra distortion factor that depends on the width of the screen\n    var distortionScale = d3.scale.pow(4)\n      .range([0,9])\n      .domain([350,1000])\n      .clamp(true);\n\n    function mouseover() {\n      generalMouseOut = false;\n\n      var bestHeight = imageHeight * (width*3/8) / imageWidth;\n      desiredDistortion = Math.min(imageHeight, bestHeight) / Math.min(normalHeight,bestHeight) + distortionScale(width*3/8);\n\n      desiredFocus = Math.max(0, Math.min(height - 1e-6, d3.mouse(this)[1] * pixelRatio));\n      move();\n    }//mouseover\n\n    function mouseout() {\n      generalMouseOut = true;\n\n      desiredDistortion = 0;\n      desiredFocus = Math.max(0, Math.min(height - 1e-6, d3.mouse(this)[1] * pixelRatio));\n      move();\n    }//mouseout\n\n    function mousemove() {\n      desiredFocus = Math.max(0, Math.min(height - 1e-6, d3.mouse(this)[1] * pixelRatio));\n      move();\n    }//mousemove\n\n    function mousedown() {\n      //Find the height if the mouse\n      var mouseHeight = Math.max(0, Math.min(height - 1e-6, d3.mouse(this)[1] * pixelRatio));\n      var mouseWidth = Math.max(0, Math.min(width - 1e-6, d3.mouse(this)[0] * pixelRatio)) / width;\n      //Find over which month the mouse is hovering\n      for (var i = 0; i < numRows; ++i) {\n        var y0 = y(i * normalHeight),\n            y1 = y((i + 1) * normalHeight);\n        if(mouseHeight >= y0 && mouseHeight < y1) {\n          if(mouseWidth >= 0 && mouseWidth < 3/8) {\n            window.location = \"http://www.datasketch.es/\" + months[i].toLowerCase() + \"/code/nadieh\";\n          } else if (mouseWidth >= 3/8 && mouseWidth < 5/8) {\n            window.location = \"http://www.datasketch.es/\" + months[i].toLowerCase();\n          } else if(mouseWidth >= 5/8 && mouseWidth < 1) {\n            window.location = \"http://www.datasketch.es/\" + months[i].toLowerCase() + \"/code/shirley\";\n          } \n        }//if \n      }//for i\n    }//mousedown\n\n    function touchstart() {\n      d3.event.preventDefault();\n      mouseover();\n      if (d3.event.touches.length === 1) {\n        var now = Date.now();\n        if (now - touchtime < 500) mousedown(), link.click();\n        touchtime = now;\n      }//if\n    }//touchstart\n\n  }//enableFisheye\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////// Fisheye function /////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n\n  function fisheye() {\n    var min = 0,\n        max = 1,\n        distortion = 3,\n        focus = 0;\n\n    function G(x) {\n      return (distortion + 1) * x / (distortion * x + 1);\n    }\n\n    function fisheye(x) {\n      var Dmax_x = (x < focus ? min : max) - focus,\n          Dnorm_x = x - focus;\n      return G(Dnorm_x / Dmax_x) * Dmax_x + focus;\n    }\n\n    fisheye.extent = function(_) {\n      if (!arguments.length) return [min, max];\n      min = +_[0], max = +_[1];\n      return fisheye;\n    };\n\n    fisheye.distortion = function(_) {\n      if (!arguments.length) return distortion;\n      distortion = +_;\n      return fisheye;\n    };\n\n    fisheye.focus = function(_) {\n      if (!arguments.length) return focus;\n      focus = +_;\n      return fisheye;\n    };\n\n    return fisheye;\n  }//fisheye\n\n  </script>", "description": "Smooth Fisheye - Images", "created_at": "2016-09-14T11:40:21Z", "updated_at": "2016-09-14T12:39:20Z", "api": ["d3.select", "d3.scale.linear", "d3.timer", "d3.scale.pow", "d3.mouse", "d3.event.preventDefault"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/nbremer/'>nbremer</a>'s block: <a href='http://bl.ocks.org/nbremer/e73086c0c3ebd2693a95962b561cbf05'>Smooth Fisheye</a>", "uid": "nbremer_4258eb64322c55156097c21f384715a7"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n\nvar parseDate = d3.timeParse(\"%b %Y\");\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]);\n\nvar xAxis = d3.axisBottom(x),\n    yAxis = d3.axisLeft(y);\n\nvar zoom = d3.zoom()\n    .scaleExtent([1, 32])\n    .translateExtent([[0, 0], [width, height]])\n    .extent([[0, 0], [width, height]])\n    .on(\"zoom\", zoomed);\n\nvar area = d3.area()\n    .curve(d3.curveMonotoneX)\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.price); });\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"sp500.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.price; })]);\n\n  g.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area);\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(yAxis);\n\n  var d0 = new Date(2003, 0, 1),\n      d1 = new Date(2004, 0, 1);\n\n  // Gratuitous intro zoom!\n  svg.call(zoom).transition()\n      .duration(1500)\n      .call(zoom.transform, d3.zoomIdentity\n          .scale(width / (x(d1) - x(d0)))\n          .translate(-x(d0), 0));\n});\n\nfunction zoomed() {\n  var t = d3.event.transform, xt = t.rescaleX(x);\n  g.select(\".area\").attr(\"d\", area.x(function(d) { return xt(d.date); }));\n  g.select(\".axis--x\").call(xAxis.scale(xt));\n}\n\nfunction type(d) {\n  d.date = parseDate(d.date);\n  d.price = +d.price;\n  return d;\n}\n\n</script>", "description": "Zoom to Domain", "created_at": "2016-09-12T17:58:52Z", "updated_at": "2016-09-12T17:58:55Z", "api": ["d3.select", "d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.zoom", "d3.area", "d3.csv", "d3.extent", "d3.max"], "readme": "This example demonstrates how to zoom programmatically to a domain of interest.\n", "uid": "mbostock_431a331294d2b5ddd33f947cf4c81319"}, {"code": "<script>\n    const WIDTH = 960\n    const HEIGHT = 500\n    \n    const PRIMES =[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101, 103, 107,109,113,127,131,137,139,149,151,157]\n    const OPERATORS = [\n      function(a, b) { return a + b }, \n      function(a, b) { return a - b },\n      function(a, b) { return a * b }, \n      function(a, b) { return a / b },\n\t    function(a, b) { return a % b }\n   \t]\n    \n    const CRITERION = [\n      function(n) { return true },\n      function(n) { return n > 110 },\n      function(n) { return n % 5 === 0 },\n      function(n) { return n % 15 === 0 },\n      function(n) { return n % 210 === 0 },\n      function(n) { return n % 14 === 0 },\n      function(n) { return n % 7 === 0 },\n      function(n) { return n > 150 },\n      function(n) { return true }\n    ]\n    \n    const MUTATION_RATE = 0.0008\n    \n    const clampColor = function(input) {\n      return Math.round(Math.max(0, Math.min(255, input)))\n    }\n    \n    const wrap = function(n) {\n      if (n < 0) { return false } // return n + WIDTH * HEIGHT }\n      if (n > WIDTH * HEIGHT) { return false } // return n - WIDTH * HEIGHT }\n      return n\n    }\n    \n    const adjacencyTransform = [\n      function(n) { return (n % WIDTH !== 0) ? wrap(n - WIDTH - 1) : false },\n      function(n) { return wrap(n - WIDTH) },\n      function(n) { return ((n + 1) % WIDTH !== 0) ? wrap(n - WIDTH + 1) : false },\n      function(n) { return (n % WIDTH !== 0) ? wrap(n - 1) : false },\n      function(n) { return ((n + 1) % WIDTH !== 0) ? wrap(n + 1) : false },\n      function(n) { return (n % WIDTH !== 0) ? wrap(n + WIDTH - 1) : false },\n      function(n) { return wrap(n + WIDTH) },\n      function(n) { return ((n + 1) % WIDTH !== 0) ? wrap(n + WIDTH + 1) : false },\n    ]\n    \n    // Set up\n    var slots, cells, liveCells, pxToPaint, tribes, lineage\n    \n    var candidate = function(parent) {\n      var genes = {\n        numbers: parent.genes.numbers.map(function(n) { return n }),\n        operators: parent.genes.operators.map(function(n) { return n })\n      }\n      var colorCache = Object.assign({}, parent.color)\n      var fitness = parent.fitness\n      var generation = parent.generation + 1\n      var hue = parent.hue\n      \n      // Mutate\n      if (Math.random() < MUTATION_RATE) {\n        var numberSlot = Math.floor(Math.random() * genes.numbers.length)\n        var primeToPick = Math.floor(Math.random() * PRIMES.length)\n        genes.numbers[numberSlot] = PRIMES[primeToPick]\n      \n        fitness = genes.operators.reduce(function(n, currentOp, i) {\n          return OPERATORS[currentOp](n, genes.numbers[i + 1]) \n        }, genes.numbers[0])\n        \n        hue = Math.round(Math.random() * 60 - 30 + 120 + parent.hue)\n        //hue = (tribes.length % 8) * 45\n\n        generation = 0\n      }\n      \n      var hsl = d3.hsl(\n        hue, \n        0.75,\n        0.48 - Math.sin(generation / 15) * 0.03\n      )\n      \n      var rgb = d3.rgb(hsl)\n      \n      color = {\n        r: clampColor(rgb.r),\n        g: clampColor(rgb.g),\n        b: clampColor(rgb.b)\n      }\n      \n      var child = {\n        generation: generation,\n        genes: genes,\n        cooldown: genes.numbers.length + genes.operators.length,\n        hue: hue,\n        color: color,\n        fitness: fitness,\n        tribeId: parent.tribeId\n      }\n      \n      return child\n    }\n    \n    var reproduce = function(child, coordinate) {\n      var adjacentAvalible = adjacencyTransform.map(function(fn) {\n        return fn(coordinate)\n      }).filter(function(co) {\n        return co && slots[co] === null\n      })\n\n      if (child.generation === 0) {\n        if (typeof child.tribeId === 'number') {\n          // if it isn't one of the originals\n        \tvar parentTribeId = child.tribeId\n        \n          lineage.push({\n            parent: parentTribeId,\n            child: tribes.length\n          })  \n        }\n        \n        child.tribeId = tribes.length\n      \ttribes.push([coordinate])\n      } else {\n        tribes[child.tribeId].push(coordinate)\n      }\n      \n      child.coordinate = coordinate\n\t\t\tchild.adjacentAvalible = adjacentAvalible\n      \n      cells.push(child)\n      liveCells.push(child)\n      slots[coordinate] = cells.length - 1\n      pxToPaint.push(coordinate)\n    }\n    \n    var reproduceThrow = function(parent, coordinate) {\n     \n      if (slots[coordinate] !== null) {\n        var index = parent.adjacentAvalible.indexOf(coordinate)\n        parent.adjacentAvalible.splice(index, 1)\n        \n        return\n      }\n      \n      var column = Math.floor((coordinate % WIDTH) / WIDTH * 9)      \n      var criteria = CRITERION[column]\n      \n      var newChild = candidate(parent)\n      \n      if (criteria(newChild.fitness)) {\n        reproduce(newChild, coordinate)\n      }\n    }\n    \n    // Feel free to change or delete any of the code you see in this editor!\n    var canvas = d3.select(\"body\").append(\"canvas\")\n      .attr(\"width\", WIDTH)\n      .attr(\"height\", HEIGHT);\n    \n    var svg = d3.select(\"body\").append(\"svg\")\n    \t.attr(\"width\", WIDTH)\n      .attr(\"height\", HEIGHT)\n    \t.style(\"position\", \"absolute\")\n    \t.style(\"top\", 0)\n    \t.style(\"left\", 0)\n    \n    var ctx = canvas.node().getContext(\"2d\");\n    \n    var imgData = ctx.getImageData(0, 0, WIDTH, HEIGHT)\n    var data = imgData.data\n    \n    var resetSimulation = function() {\n      slots = d3.range(960 * 500).map(function() { return null })\n      cells = []\n      liveCells = []\n      tribes = []\n      lineage = []\n      pxToPaint = []\n      \n      overlay()\n    \n      var c1 = WIDTH * HEIGHT / 2 + 20\n      var c2 = WIDTH * HEIGHT / 2 - 20\n      \n      var firstCell = { \n        generation: 0,\n        genes: {\n          numbers: [13, 0],\n          operators: [0]\n        },\n        cooldown: 0,\n        hue: Math.round(360 * Math.random()),\n        color: {\n          r: 155,\n          g: 155,\n          b: 155\n        },\n        fitness: 13\n      }\n      \n      var secondCell = {\n        generation: 0,\n        genes: {\n          numbers: [13, 0],\n          operators: [0]\n        },\n        cooldown: 0,\n        hue: (firstCell.hue + 180) % 360,\n        color: {\n          r: 155,\n          g: 155,\n          b: 155\n        },\n        fitness: 13\n      }\n      \n      reproduce(firstCell, c1)\n      reproduce(secondCell, c2)\n      \n      slots.forEach(function(slot, i) {\n        var b = i * 4\n        data[b] = 255\n        data[b + 1] = 255\n        data[b + 2] = 255\n      })\n      \n      ctx.putImageData(imgData, 0, 0)\n      \n      window.requestAnimationFrame(tick)\n    }\n    \n    var overlay = function() {\n      var keys = d3.range(tribes.length)\n      \n      var significantTribes = keys.filter(function(key) {\n        return tribes[key].length > 20\n      })\n      \n      var coordinates = significantTribes.map(function(key) {\n        var tribe = tribes[key]\n        var originalCoordinate = tribe[0]\n        \n        var x = originalCoordinate % WIDTH\n        var y = Math.floor(originalCoordinate / WIDTH)\n        \n        return { x: x, y: y }\n      })\n      \n      var linkedCoordinates = lineage.filter(function(line) {\n        return significantTribes.indexOf(line.child) >= 0\n      })\n      .map(function(pair) {       \n        var parent = tribes[pair.parent][0]\n        var child = tribes[pair.child][0]\n        \n        return {\n          x1: parent % WIDTH,\n          y1: Math.floor(parent / WIDTH),\n          x2: child % WIDTH,\n          y2: Math.floor(child / WIDTH)\n        }\n      })\n      \n      var circles = svg.selectAll('circle')\n      \t.data(coordinates)\n      \n      circles.enter().append(\"circle\")\n      \t.attr('r', 5)\n      \t.attr('fill', 'none')\n      \t.attr('stroke-width', 2.5)\n      \t.attr('stroke', '#ffffff')\n      .merge(circles)\n      \t.attr('cx', function(d) { return d.x })\n      \t.attr('cy', function(d) { return d.y })\n      \n      circles.exit().remove()\n      \n      var lines = svg.selectAll('line')\n      \t.data(linkedCoordinates)\n      \n      lines.enter().append('line')\n      \t.attr('stroke', '#ffffff')\n      \t.attr('stroke-width', 1.5)\n      .merge(lines)\n      \t.attr('stroke-dasharray', function(d) {\n        \tvar dx = d.x1 - d.x2\n          var dy = d.y1 - d.y2\n        \tvar length = Math.sqrt(dx * dx + dy * dy)\n        \n        \treturn '0, 4, ' + (length - 12)\n      \t})\n      \t.attr('x1', function(d) { return d.x1 })\n\t      .attr('y1', function(d) { return d.y1 })\n      \t.attr('x2', function(d) { return d.x2 })\n      \t.attr('y2', function(d) { return d.y2 })\n      \n      lines.exit().remove()\n    }\n    \n    var tick = function() {\n      // Should Continue\n      pxToPaint = []\n      \n      // Simulate\n      var cullCells = []\n      liveCells.forEach(function(cell, i) {\n        if (cell.adjacentAvalible.length <= 0) {\n          cullCells.push(i)\n          return \n        }\n        \n        var target = cell.adjacentAvalible[Math.floor(cell.adjacentAvalible.length * Math.random())]\n        \n        reproduceThrow(cell, target)\n      })\n      \n      cullCells.reverse()\n      cullCells.forEach(function(id) {\n        liveCells.splice(id, 1)\n      })\n      \n      // Paint\n    \tpxToPaint.forEach(function(coordinate) {\n        var r = coordinate * 4\n        var g = r + 1\n        var b = g + 1\n        var a = b + 1\n\n        var slot = slots[coordinate]\n        \n        // if slot has a cell\n        var cell = cells[slot]\n            \t\t\t\t\n        data[r] = cell.color.r\n        data[g] = cell.color.g\n        data[b] = cell.color.b\n        data[a] = 255\n      })\n\n      ctx.putImageData(imgData, 0, 0)\n      \n      if (Math.random() > 0.9) {\n\t      overlay()        \n      }\n      \n      if (liveCells.length > 0) {\n      \twindow.requestAnimationFrame(tick)  \n      } else {\n        console.log('done')\n        setTimeout(resetSimulation, 5000)\n      }\n      \n    }\n    \n    resetSimulation()\n    \n    \n  </script>", "description": "Antibiotic Resistance Simulation", "created_at": "2016-09-11T01:24:53Z", "updated_at": "2016-09-17T17:55:29Z", "api": ["d3.hsl", "d3.rgb", "d3.select", "d3.range"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nInspired by [this Harvard antibiotics resistance study](http://www.vox.com/2016/9/8/12852924/evolution-bacteria-timelapse-video-mega-harvard) I wanted to build a simulation of evolution.\n\nIn this simulation the cells each produce a number, determined by its \"genes\", which are two random numbers added together. As they reproduce, sometimes those genes mutate, and the cells produce a new number. When they mutate, they are assigned a different color in the visualization.\n\nThe \"petri dish\" is divided into 9 sections, like in the Harvard study. In place of exponentially increasing amounts of antibiotics in each column, the survival criteria is whether the cell's number is divisible by an increasingly large number.\n\nThis is my admission entry to visFest 2016 =)", "uid": "tonyhschu_067d977d6d4ae7224dcebdf3775d9e7e"}, {"code": "<script>\nvar data = [\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Health Impacts\",\n   \"label\": \"Child Mortality\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Household Air Quality\",\n   \"value\": 95\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average Exposure to PM2.5\",\n   \"value\": 82.24\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average PM2.5 Exceedance\",\n   \"value\": 58.27\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Sanitation\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Drinking Water\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Water Resources\",\n   \"label\": \"Wastewater Treatment\",\n   \"value\": 95.18\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Agricultural Subsidies\",\n   \"value\": 38.62\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Pesticide Regulation\",\n   \"value\": 92\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Forests\",\n   \"label\": \"Change in Forest Cover \",\n   \"value\": 31.35\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Fish Stocks\",\n   \"value\": 8.33\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Coastal Shelf Fishing Pressure\",\n   \"value\": 18.46\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (National Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (Global Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Marine Protected Areas\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in Carbon Intensity\",\n   \"value\": 65.24\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Change of Trend in Carbon Intensity\",\n   \"value\": 27.82\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in CO2 Emissions per KwH\",\n   \"value\": 58.26\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Access to Electricity\",\n   \"value\": 100\n }\n]\n\nvar grandparentlabels= [\"Environmental Health\",\"Ecosystem Vitality\"];\n\nvar parentlabels= [\n \" EH - Health Impacts\",\n\"EH - Air Quality\",\n\"EH -Water and Sanitation\",\n\"EV - Water Resources\",\n\"EV - Agriculture\",\n\"EV - Forests\",\n\"EV - Fisheries\",\n\"EV- Biodiversity and Habitat\",\n\"EV - Climate and Energy\"];\n  \nvar parentvalues= [100,78.5,100,95.18,65.31,31.35,13.4,100,62.77];\n  \n var grandparentvalues = [92.83, 72.73];\n  \nvar margin = {top: 20, right: 20, bottom: 30, left: 155},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom; \n  \nvar x = d3.scale.linear()\n    .range([0,width]);\n\nvar y = d3.scale.ordinal()\n    .rangePoints([0,height-margin.bottom]);\n\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\t\t.ticks(10);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n\t\t.tickSize(0);\nvar BAR_HEIGHT = 17;\n  \nvar colScale = d3.scale.ordinal()\n    .range([    \"#ff8c00\",\"#f9bb00\",\"#ff6100\",\"#555f9f\",, \"#10599c\",\"#0099cc\",\"#216342\", \"#339966\",\"#009900\"]);\n  \n\n  /*\nvar tip = d3.tip()\n  \t.attr('class', 'd3-tip')\n  \t.offset([-10, 0])\n  \t.html(function(d) {\n      if(d.grade<3.0)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span>\";\n      else if(d.grade>3.0 && d.grade <3.5)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:yellow'>\" + d.grade + \"</span>\";\n      else\n        return \"<strong>Grade:</strong> <span style='color:lightgreen'>\" + d.grade + \"</span>\";\n  });\n  \n  */\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n//svg.call(tip);  \n  \n\n  \n//d3.tsv(\"grades.tsv\", type, function(error, data) {\n // if (error) throw error;\n\n  //y.domain(data.map(function(d) { return d.grandparent; }));\n  //y.domain(data.map(function(d) { return d.parent; }));\n  y.domain(data.map(function(d) { return d.label; }));\n  x.domain([0, d3.max(data, function(d) { return d.value; })]);\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(0,\" + margin.top +  \")\")\n      .call(yAxis);\n  \t\t\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dx\", 60.2+\"em\")\n      .style(\"text-anchor\", \"end\")\n  \t\t.text(\"EPI score\");\n        \n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n   \t\t.attr(\"x\", 0 )//function(d) { return x(d.grade); })\n      .attr(\"y\", function(d) { return margin.top+y(d.label); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.parent); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.grandparent); })\n  \t\t//.on('mouseover', tip.show)\n  \t\t//.on('mouseout', tip.hide)\n  \t\t//.on(\"click\", clicked) ??\n      .attr(\"height\", BAR_HEIGHT)//height/data.length )//y.rangeBand())\n  \t\t/*.attr(\"width\",0)\n    \t.transition()\n    \t.duration(2000)*/\n  \t\t.attr(\"width\", function(d) { return x(d.value); })\n  \t.style(\"fill\", function(d) {return colScale(d.parent);} );\n  \n  \nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n  \n//d3.select(\"input\").on(\"change\", change);\nd3.select(\"#groupParents\").on(\"change\", groupParents);\nd3.select(\"#groupGrandparents\").on(\"change\", groupGrandparents);\n\n  \nvar sortTimeoutP = setTimeout(function() {\n    d3.select(\"#groupParents\").property(\"checked\", true).each(groupParents);\n }, 10000);\n  \n var sortTimeoutGP = setTimeout(function() {\n    d3.select(\"#groupGrandparents\").property(\"checked\", true).each(groupGrandparents);\n  }, 20000);\n  \n/*\nfunction clicked(d) {\n  var x, y, k;\n\n  if (d && centered !== d) {\n    var centroid = path.centroid(d);\n    x = centroid[0];\n    y = centroid[1];\n    k = 4;\n    centered = d;\n  } else {\n    x = width / 2;\n    y = height / 2;\n    k = 1;\n    centered = null;\n  }\n\n  g.selectAll(\"path\")\n      .classed(\"active\", centered && function(d) { return d === centered; });\n\n  g.transition()\n      .duration(750)\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")scale(\" + k + \")translate(\" + -x + \",\" + -y + \")\")\n      .style(\"stroke-width\", 1.5 / k + \"px\");\n}\n*/\n  \nfunction groupParents() {\n  var BAR_HEIGHT = 37;\n \n      //code to sort\n      clearTimeout(sortTimeoutP);\n  \n\t\t//var y0= y.domain(data.map(function(d) { return d.parent; })).copy();\n \n  \tvar y0 = y.domain(data.map(this.checked\n        ? function(d) { return d.parent;}\n        : function(d) {\n      //TODO desagregar\n      \t\t\tVAR_HEIGHT= 17;\n\t\t\t\t\t\treturn d.label; }))\n        //.map(function(d) { return d.parent; })\n        .copy();\n\n    svg.selectAll(\".bar\")\n  \t.attr(\"y\", function(d,i) { return margin.top+y(d.parent); })\n    .attr(\"width\", function(d,i) { return x(parentvalues[i/2]); })\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.parent)+margin.top; })\n    \t\t.attr(\"height\", BAR_HEIGHT)\n    \t\t\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      .selectAll(\"g\")\n        .delay(delay);\n} \n\nfunction groupGrandparents() {\n  \n   var BAR_HEIGHT = 167;\n  \n  clearTimeout(sortTimeoutGP);\n  \n\t\tvar y0= y.domain(data.map(this.checked\n      ? function(d) { return d.grandparent; }\n      : function(d) {\n      //TODO desagregar\n      \t\t\tVAR_HEIGHT= 18;\n\t\t\t\t\t\treturn d.label; }))\n    .copy();\n //x.domain([0, d3.max(parentvalues)]);\n\n    svg.selectAll(\".bar\")\n  \t.attr(\"y\", function(d,i) { return  margin.top + i*BAR_HEIGHT})//y(grandparentlabels); }) //si pudiera anotarlos por mi solito margin.top, height/2\n    .style(\"fill\", function(d,i) {return [colScale[0],colScale[7]];} )\n    .attr(\"width\", function(d,i) { return x(grandparentvalues[i/2]);})\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        //.attr(\"y\", function(d) { return y0(d.grandparent)+margin.top; })\n    \t\t.attr(\"height\", BAR_HEIGHT)\n    \t\t//.attr(\"width\", function(d,i) { return x(grandparentvalues[i] );})\n\t\n\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n}\n  \n  \n</script>", "description": "Tarea 4 - EPI Visualization", "created_at": "2016-09-10T22:06:36Z", "updated_at": "2016-09-10T22:06:36Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/f9af6617835cbb37e2c280703ce255ca'>Tarea 3 - Grades Visualization</a>\n\n<h2> What? </h2>\nTable with attributes \"code\" and \"grade\"\n\n<h2> Why? </h2>\n<h3> Tasks </h3>\nPresent and enjoy\n\nCompare and summarize all the course grades.\nIdentify a specific grade of a student.\n\n<h3> Targets </h3>\nGrades distribution\n\n<h2> How? </h2>\n\nAlign continous values and express them in a continous scale.\n\n<h3> Marks </h3>\nLines\n\n\n<h3> Channels </h3>\nLength for cuantitative grade\nHue for range grades\n\n<h2>Short review</h2>\n<p>De acuerdo a los datos, se tiene un atributo categ\u00f3rico y un cuantitativo. De acuerdo a los conceptos aprendidos, el mejor canal para representar \u00e9stos datos es la longitud en una escala alineada. Por ello se decidi\u00f3 realizar un diagrama de barras utilizando la longitud de la barra para representar la nota obtenida. Se decidi\u00f3 realizar horizontal para poder tener una mejor visualizaci\u00f3n sobre los c\u00f3digos de los usuarios.</p>\n<p>Por otro lado tambien es posible detallar la nota espec\u00edfica de cada usuario (\"Detail on demand\") y ver\u00edficar de acuerdo al matiz(hue) si aprob\u00f3, reprob\u00f3 o pas\u00f3 raspando.</p>\n\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/3cd76524b53adcd478c1963fbf4f8264'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/092bb5b3f7478bbeeaf56f60ed9565cc'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/368d648d9b931cbbd310cc6f7260c8b1'>Tarea 4 - EPI Visualization</a>", "uid": "f94f_78faa9b93b7d92e3bc39cd258f4ec90b"}, {"code": "<script>\n\nvar margin = {top: 40, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatPercent = d3.format(\".0%\");\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks (1);\n\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Score:</strong> <span style='color:white'>\" + d.Score + \"</span>\";\n  })\n\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"Germany.tsv\", type, function(error, data) {\n  x.domain(data.map(function(d) { return d.Indicator; }));\n  y.domain([0, d3.max(data, function(d) { return d.Score; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n  \n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.Indicator); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.Score); })\n      .attr(\"height\", function(d) { return height - y(d.Score); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n  \n});\n\nfunction type(d) {\n  d.Score = +d.Score;\n  return d;\n\n}\n\n</script>", "description": "fresh block", "created_at": "2016-09-10T10:34:16Z", "updated_at": "2016-09-10T11:08:53Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "gpenam92_8b0a8b7d625a4ba00bbad94b30535097"}, {"code": "<script>\nvar width = 960,\n    height = 600;\n\nvar canvas = d3.select(\"canvas\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar context = canvas.node().getContext(\"2d\");\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n    .force(\"charge\", d3.forceManyBody().strength(-10).distanceMax(300))\n    .force(\"center\", d3.forceCenter(width / 2, height / 2))\n    .force(\"vertical\", d3.forceY().strength(0.018))\n    .force(\"horizontal\", d3.forceX().strength(0.006));\n\nvar graph = {};\n\nd3.text(\"3437.edges\", function(error, raw) {\n  if (error) throw error;\n\n  var node_set = d3.set();\n\n  var pairs = raw.split(\"\\n\")\n    .map(function(d) { return d.split(\" \"); });\n\n  pairs.forEach(function(d) {\n    node_set.add(d[0]);\n    node_set.add(d[1]);\n  });\n\n  graph.nodes = node_set.values().map(function(d) {\n    return {\n      id: d\n    };\n  });\n\n  graph.links = pairs.map(function(d) {\n    return {\n      source: d[0],\n      target: d[1]\n    }\n  });\n\n  simulation\n      .nodes(graph.nodes)\n      .on(\"tick\", ticked);\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  canvas.call(d3.drag()\n          .container(canvas.node())\n          .subject(dragsubject)\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  function ticked() {\n    context.clearRect(0, 0, width, height);\n\n    context.beginPath();\n    graph.links.forEach(drawLink);\n    context.globalAlpha = 0.12;\n    context.strokeStyle = \"#999\";\n    context.stroke();\n\n    context.beginPath();\n    graph.nodes.forEach(drawNode);\n    context.globalAlpha = 1;\n    context.fillStyle = d3.interpolateViridis(0.335);\n    context.fill();\n  }\n\n  function dragsubject() {\n    return simulation.find(d3.event.x, d3.event.y);\n  }\n});\n\nfunction dragstarted() {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d3.event.subject.fx = d3.event.subject.x;\n  d3.event.subject.fy = d3.event.subject.y;\n}\n\nfunction dragged() {\n  d3.event.subject.fx = d3.event.x;\n  d3.event.subject.fy = d3.event.y;\n}\n\nfunction dragended() {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d3.event.subject.fx = null;\n  d3.event.subject.fy = null;\n}\n\nfunction drawLink(d) {\n  context.moveTo(d.source.x, d.source.y);\n  context.lineTo(d.target.x, d.target.y);\n}\n\nfunction drawNode(d) {\n  context.moveTo(d.x + 2.5, d.y);\n  context.arc(d.x, d.y, 2.5, 0, 2 * Math.PI);\n}\n\n</script>", "description": "Facebook Egonet", "created_at": "2016-09-10T07:04:19Z", "updated_at": "2016-09-10T07:42:21Z", "api": ["d3.select", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceCenter", "d3.forceY", "d3.forceX", "d3.text", "d3.set", "d3.drag", "d3.interpolateViridis"], "readme": "An example of a [d3-force](https://github.com/d3/d3-force) graph with 536 nodes and 9627 edges. The new canvas-based rendering is significantly faster than the [SVG Force-Directed Graph](https://bl.ocks.org/mbostock/4062045).\n\nTo keep nodes on the screen, I tweaked the following forces:\n\n* Lowered the `strength` of the **charge** force and added a `distanceMax`\n* Added **vertical** and **horizontal** forces which help keep nodes from drifting offscreen with `forceY` and `forceX`\n\nFacebook egonet data from [Julian McAuley and Jure Leskovec](https://snap.stanford.edu/data/egonets-Facebook.html).\n", "uid": "syntagmatic_954b31aa8b8beb91b30ccb0c9e57f6ce"}, {"code": "<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// set the ranges\nvar x = d3.scaleBand()\n          .range([0, width])\n          .padding(0.1);\nvar y = d3.scaleLinear()\n          .range([height, 0]);\n          \n// append the svg object to the body of the page\n// append a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// get the data\nd3.csv(\"sales.csv\", function(error, data) {\n  if (error) throw error;\n\n  // format the data\n  data.forEach(function(d) {\n    d.sales = +d.sales\n    d.salesperson = d[\"salesperson hej\"];\n  });\n\n  // Scale the range of the data in the domains\n  x.domain(data.map(function(d) { return d.salesperson; }));\n  y.domain([0, d3.max(data, function(d) { return d.sales; })]);\n\n  // append the rectangles for the bar chart\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.salesperson); })\n      .attr(\"width\", x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.sales); })\n      .attr(\"height\", function(d) { return height - y(d.sales); });\n\n  // add the x Axis\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // add the y Axis\n  svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n});\n\n</script>", "description": "Simple bar graph in v4", "created_at": "2016-09-09T22:56:04Z", "updated_at": "2016-09-09T23:40:19Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.select", "d3.csv", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This is a simple bar graph  written using d3.js v4. \n\nThis graph is part of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/bdf28027e0ce70bd132edc64f1dd7ea4'>Simple bar graph in v4</a>", "uid": "elt12njo_dd2391dc0796b79d7291aff529e50fb0"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var margin = {margin:60, top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n    \nvar EPI_Score =\t80.47;\nvar Ten_Year_Percent_Change = 1.89;\n\nvar x = d3.scaleBand()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\n\nvar xAxis = d3.axisBottom(x)\n    .scale(x);\n\nvar yAxis = d3.axisLeft(y)\n    .scale(y);\n    \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \nvar tooltip = d3.select(\"body\")\n        .append(\"label\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"10\")\n        .style(\"visibility\", \"hidden\");\n    \n\n\nd3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.value = +d.value;\n  });\n\n\n  x.domain(data.map(function(d) { return d.index; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"x\", 70)\n      .attr(\"dy\", \"-0.2296em\")\n      .attr(\"transform\", \"rotate(-90)\")\n  \t\t.style(\"font-weight\",\"bold\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    \t.append(\"text\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.index); })\n      .attr('width', x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); })\n    .style(\"opacity\", function(d){\n    \tif(d.value > 0 && d.value <= 40){\n      \treturn 0.3;\n      }else if(d.value > 40 && d.value <= 80){\n        return 0.5;\n      }else if(d.value > 80 && d.value <= 90){\n        return 0.7;\n      }else if(d.value > 90 && d.value <= 100){\n        return 0.9;\n      }\n  });\n\n  d3.select(\"input\").on(\"change\", change);\n\n  var sortTimeout = setTimeout(function() {\n    d3.select(\"input\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data.sort(this.checked\n        ? function(a, b) { return b.value - a.value; }\n        : function(a, b) { return d3.ascending(a.index, b.index); })\n        .map(function(d) { return d.index; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.index) - x0(b.index); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.index); });\n\n    transition.select(\".x.axis\")\n        .call(xAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n  }\n  \n  $('rect').tipsy({ \n      gravity: 'w', \n      html: true, \n      title: function() {\n        var d = this.__data__;\n        return +d.value +\" \"+d.index; \n            }\n    });\n   \n});\n</script>", "description": "Tarea 4 Germany", "created_at": "2016-09-09T04:38:24Z", "updated_at": "2016-09-09T22:18:21Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.select", "d3.tsv", "d3.max", "d3.ascending"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n<b>What, why, and how analysis</b>\n\n<b>What?</b>\n\n<li>Dataset Type: Table (A bar chart)</li>\n<li>Data Types: Items & Attributes</li>\n<ol> <li>Measuring indexes (Categorical type)</li>\n<li> Values of index  (Ordered, quantitative, sequential)</li></ol>\n\n<b>Why?</b>\n\n<li> Actions:</li>\n<ol> <i>Analyze</i> <ol><li> Consume &#8594; Present</li></ol></ol>\n<ol> <i>Search</i> <ol><li> Lookup &#8594; Target & Location known</li></ol></ol>\n<ol> <i>Query</i> <ol><li> Identify</li></ol></ol>\n<li> Targets:</li>\n<ol> <i>All data</i> <ol><li> Outliers</li></ol></ol>\n<ol> <i>Attributes</i> <ol><li> Distribution</li></ol></ol>\n\n<b>How?</b>\n\n<li> Encode</li>\n<ol>  <i>Arrange </i> <ol><li> Express & Align</li></ol></ol>\n<ol>  <i>Map </i> <ol><li> Color &#8594;Saturation</li><li> Size</li></ol></ol>\n<li> Manipulate </li>\n<ol> <i>Select </i> </ol>\n\n<br><b>Tasks</b>\n<p>Present the measurement indexes from the dataset obtained from the EPI.</p>\n<p>Lookup for interesting data knowing the target and location of the information.</p>\n<p>Identify outliers in the data.</p>\n<p>Identify the distribution that forms the data.</p>\n\n\n<br><b>Decisions made:</b>\n<p>The main task of the proposed visualization was to compare the different indexes of the country, and view the difference between them. For that reason, we choose the bar chart, because it helps the user to understand and compare effectively the values of the indicators. We made an ordering functionality to show a more accurately comparison, but the user also has the option for viewing the data as it is. In the case when the data is not ordered, we decide to put a new channel that enforce the concept of comparison, that\u2019s why we set the opacity of the bars according to the value of the data.</p>\n\n<p>The channels used in the visualization were the length of the bars and the color (saturation/opacity), and the bars were the marks. Talking about the chart characteristics, we put the value of the index in the Y axis, as is a continuous variable. And in the X axis it's set the measurement indexes of the country, a categorical, unordered variable.</p>\n\n<p>The diagram interaction is seen in the moment the user passes the mouse over the bars (hover). In this interaction the user can \"ask\" the visualization and the visualization will tell him the exact value of that index. In addition, the user can interact with the visualization making click over the checkbox to sort or not the visualization. For maintaining the best accuracy with the data, the tooltip was implemented as the names of the measurement indexes were kind of large and the user really can't tell what is the exact value of the bars just with a simple glance. Also the names of the indexes were rotated for better visualization.</p>\n\n<br><b>Effectiveness & Expressiveness</b>\n\nOur visualization has a good expressiveness because we are the information of the dataset correctly and not showing another data that doesn\u2019t correspond to the data we have. In addition, we have the ordered data in a way that represents correctly the dataset and matches the channels and the data characteristics. \n\nThe effectiveness is achieved correctly because we are using the highest ranked channels, as the length and the saturation or opacity to encode the attributes of the dataset. We user the bars length as it is the best ranked channel, and after that we set the opacity of the bars because the saturation is one of the best ranked channels also.\n", "uid": "carlosfelipetorres_9eea8d99357e9f7e02208dd63a68358c"}, {"code": "<script>\n// set the dimensions of the canvas\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n\n// set the ranges\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], .05);\n\nvar y = d3.scale.linear().range([height, 0]);\n\n//Tooltip\nvar tooltip = d3.select(\"body\").append(\"div\")\n\t.attr(\"class\", \"tooltip\");\n  \n  \n// define the axis\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\n\n// add the SVG element\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n// load the data\nd3.json(\"data.json\", function(error, data) {\n\n    data.forEach(function(d) {\n        d.code = +d.code;\n        d.grade = +d.grade;\n    });\n\t\n  // scale the range of the data\n  x.domain(data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  // add axis\n  svg.append(\"g\")\n  .transition().duration(3000)\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n  \t.transition().duration(3000)\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n  \n  svg.append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 5)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\");\n\n  var bars = svg.selectAll(\".bars\")\n  \t.data(data);\n  \n  //Enter\n  var barsEnter = bars.enter()\n  \t.append(\"rect\")\n    .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); });\n  \n  //Exit\n  bars.exit()\n  \t.transition()\n    .duration(1000)\n    .attr(\"width\", 0)\n  \t.remove();\n  \n  // Add bar chart\n  svg.selectAll(\"bar\")\n      .data(data)\n\t    .enter()\n    .append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); })\n  \n  .on(\"mouseover\", function(d) {\n          tooltip.transition()\n               .duration(700)\n               .style(\"opacity\", 1);\n          tooltip.html(\"Student: \" +d.code + \"<br/> Grade: \" + d.grade)\n               .style(\"left\", (d3.event.pageX + 5) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n  });\n  \n</script>", "description": "fresh block", "created_at": "2016-09-07T04:44:48Z", "updated_at": "2016-09-07T04:45:52Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.select", "d3.svg.axis", "d3.json", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n1)\n\t-What: \n  \t-Data Types: Items and attributes.\n    -Dataset Types: Tables.\n    -Atributes Types: Quantitative.\n    -Ordering direction: Diverging.\n\t-Why:\n  \t-Analyze:\n    \t-Consume: Present and Enjoy.\n    -Query: Compare.\n    -All Data: Features.\n    -Attributes: One.\n\tHow:\n  \t-Encode: Align.\n    -Map:\n    \t-Color: Hue.\n      -Size.\n    -Facet: Superimpose.  \t\n\n2)Argumentation\nThe mark used was the line because is one of the simplest figures to recognize and understand for humans. The length was used to be a simple chanel and to witch people are accustomed. The color are vivid to not discourage the students and changes color when is put the mouse over, to make more easy understand witch is being observed.\n\n\nDocumentos de apoyo:\n\n  - URL: http://bl.ocks.org/Jverma/887877fc5c2c2d99be10 de Juna Verma\n  - URL: http://bl.ocks.org/weiglemc/6185069 de Michele Weigle\n\nforked from <a href='http://bl.ocks.org/f94f/'>f94f</a>'s block: <a href='http://bl.ocks.org/f94f/eaea26f110b8d76afc2a4330d737df69'>fresh block</a>", "uid": "f94f_b350177133aac8f945017b91d43b321c"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar format = d3.format(\",d\");\n\nvar color = d3.scaleMagma()\n    .domain([-4, 4]);\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar treemap = d3.treemap()\n    .size([width, height])\n    .paddingOuter(3)\n    .paddingTop(19)\n    .paddingInner(1)\n    .round(true);\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sum(function(d) { return d.value; })\n      .sort(function(a, b) { return b.height - a.height || b.value - a.value; });\n\n  treemap(root);\n\n  var cell = svg\n    .selectAll(\".node\")\n    .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x0 + \",\" + d.y0 + \")\"; })\n      .attr(\"class\", \"node\")\n      .each(function(d) { d.node = this; })\n      .on(\"mouseover\", hovered(true))\n      .on(\"mouseout\", hovered(false));\n\n  cell.append(\"rect\")\n      .attr(\"id\", function(d) { return \"rect-\" + d.id; })\n      .attr(\"width\", function(d) { return d.x1 - d.x0; })\n      .attr(\"height\", function(d) { return d.y1 - d.y0; })\n      .style(\"fill\", function(d) { return color(d.depth); });\n\n  cell.append(\"clipPath\")\n      .attr(\"id\", function(d) { return \"clip-\" + d.id; })\n    .append(\"use\")\n      .attr(\"xlink:href\", function(d) { return \"#rect-\" + d.id + \"\"; });\n\n  var label = cell.append(\"text\")\n      .attr(\"clip-path\", function(d) { return \"url(#clip-\" + d.id + \")\"; });\n\n  label\n    .filter(function(d) { return d.children; })\n    .selectAll(\"tspan\")\n      .data(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).concat(\"\\xa0\" + format(d.value)); })\n    .enter().append(\"tspan\")\n      .attr(\"x\", function(d, i) { return i ? null : 4; })\n      .attr(\"y\", 13)\n      .text(function(d) { return d; });\n\n  label\n    .filter(function(d) { return !d.children; })\n    .selectAll(\"tspan\")\n      .data(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).concat(format(d.value)); })\n    .enter().append(\"tspan\")\n      .attr(\"x\", 4)\n      .attr(\"y\", function(d, i) { return 13 + i * 10; })\n      .text(function(d) { return d; });\n\n  cell.append(\"title\")\n      .text(function(d) { return d.id + \"\\n\" + format(d.value); });\n});\n\nfunction hovered(hover) {\n  return function(d) {\n    d3.selectAll(d.ancestors().map(function(d) { return d.node; }))\n        .classed(\"node--hover\", hover)\n      .select(\"rect\")\n        .attr(\"width\", function(d) { return d.x1 - d.x0 - hover; })\n        .attr(\"height\", function(d) { return d.y1 - d.y0 - hover; });\n  };\n}\n\n</script>", "description": "Nested Treemap", "created_at": "2016-09-07T01:15:08Z", "updated_at": "2016-09-07T01:15:08Z", "api": ["d3.select", "d3.format", "d3.scaleMagma", "d3.stratify", "d3.treemap", "d3.csv", "d3.selectAll"], "readme": "\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/911ad09bdead40ec0061'>Nested Treemap</a>", "uid": "atomiccc_8853e6d2ce880671782b432921fbf103"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangePoints([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"grades.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.code; }));\n // data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", 30)//x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); });\n});\n\nfunction type(d) {\n  d.grade = +d.grade;\n  return d;\n}\n\n</script>", "description": "Tarea 3 - Grades Visualization", "created_at": "2016-09-06T20:08:11Z", "updated_at": "2016-09-06T20:09:03Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/f9af6617835cbb37e2c280703ce255ca'>Tarea 3 - Grades Visualization</a>", "uid": "damayor_7ca91d178f923a4b5683bc28476c104f"}, {"code": "<script>\n// The new data variable.\nvar data = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n//INIT\n  paint();\n  \nfunction paint(){\n    \nvar margin = {top: 40, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], .1);\nvar y = d3.scale.linear().range([height, 0]);\nvar xAxis = d3.svg.axis().scale(x).orient(\"bottom\");\nvar yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span><br><strong>Code:</strong><span style='color:red'>\" + d.code + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  \t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\nsvg.call(tip);\n\n// The following code was contained in the callback function.\nx.domain(data.map(function(d) { return d.code; }));\ny.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\nsvg.append(\"g\")\n    //.attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    //.call(xAxis)\n\t\t  .append(\"text\")\n    .attr(\"transform\", \"rotate(0)\")\n    .attr(\"y\", 9)\n    .attr(\"x\", width)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n      .text(\"Estudiantes\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n  .append(\"text\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"grades\");\n\nsvg.selectAll(\".bar\")\n    .data(data)\n  .enter().append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"x\", function(d) { return x(d.code); })\n    .attr(\"width\", x.rangeBand()-10)\n    .attr(\"y\", function(d) { return y(d.grade); })\n    .attr(\"height\", function(d) { return height - y(d.grade); })\n    .on('mouseover', tip.show)\n    .on('mouseout', tip.hide);\n  \n}\n  \n\n\nfunction type(d) {\n  d.grade = +d.grade;\n  return d;\n}\n  \nfunction organizarData() {\n  document.body.innerHTML = '';\n  // The following code was contained in the callback function.\n  data.sort(function(a, b){\n    var gradeA=a.grade, gradeB=b.grade\n    if (gradeA < gradeB) //sort string ascending\n        return -1 \n    if (gradeA > gradeB)\n        return 1\n    return 0 //default return value (no sorting)\n\t});\n  \n  paint();\n  console.log('Sorted');\n  \n  var element = document.createElement(\"input\");\n\n  element.type =button;\n  element.value = media;\n  element.name = btn; // And the name too?\n  element.onclick = function() { \n  };\n  \n  var foo = document.getElementById(\"fooBar\");\n  //Append the element in page (in span).  \n  foo.appendChild(element);\ndocument.getElementById(\"btnAdd\").onclick = function() {\n  add(\"text\");\n};\n}    \n</script>", "description": "gradesBlock", "created_at": "2016-09-06T18:22:45Z", "updated_at": "2016-09-06T22:42:11Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.max"], "readme": "2.\n\n ***what***\n\n**Dataset Types:** Tables. La informaci\u00f3n de las notas est\u00e1 organizada en arreglo de objetos\n\n ***why***\n \n*Present - Discover - lookup - explore*\nEn la visualizaci\u00f3n soporta la organizaci\u00f3n de las notas para que de esa forma el usuario puede ver la tendencia de las calificaciones-  \n\n***how:***\n\n*Order - Look - navegate - embed* La visualizaci\u00f3n permite interactuar con el usuario que cuando quiere mayor detalle selecciona cada barra que simboliza las notas  \n \n\n3.\nDecid\u00ed tomar representar el problema con diagrama de barras debido a que por el tipo de variables como c\u00f3digo y promedio es la mejor manera para mostrar esta informaci\u00f3n. Las marcas en este caso usadas son las l\u00edneas y el canal el color de las l\u00edneas.\n", "uid": "apolan_6e76364f5e232260e82bb0a2e3745f1e"}, {"code": "<script>\nvar grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar\tparseDate = d3.time.format(\"%Y-%m\").parse;\n\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], .05);\n\nvar y = d3.scale.linear().range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tickFormat(d3.time.format(\"%Y-%m\"));\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.data(grades);\n\t\n  x.domain(data.map(function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value ($)\");\n\n  svg.selectAll(\"bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .style(\"fill\", \"steelblue\")\n      .attr(\"x\", function(d) { return x(d.date); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); });\n\n});\n\n</script>", "description": "fresh block", "created_at": "2016-09-06T17:45:46Z", "updated_at": "2016-09-06T17:46:08Z", "api": ["d3.time.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.data", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jcamilort_eb99b8c1d5c55ddbce0519293501ba3f"}, {"code": "<script>\n\t\tvar gauges=[];\n    var grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t//{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n\tvar valmin;\n\tvar val40;\n\tvar val60;\n\tvar val90;\n\t  \n\n    function createGauge(name, label, min, max)\n    {\n      var config = \n          {\n            size: 300,\n            label: label,\n            min: undefined != min ? min : 0,\n            max: undefined != max ? max : 5.1,\n            minorTicks: 5,\n            majorTicks: 6\n          }\n\n      var range = config.max - config.min;\n\t  config.blueZones = [{ from: valmin, to: val40 }];\n\t  config.greenZones = [{ from: val40, to: val60 }];\n      config.yellowZones = [{ from: val60, to: val90 }];\n      config.redZones = [{ from: val90, to: config.max }];\n\t  \n\t\t\t\n      console.log(config.yellowZones);\n      console.log(config.redZones);\n      \n      gauges[name] = new Gauge(name + \"GaugeContainer\", config);\n      gauges[name].render();\n    }\n\n    function createGauges(min, max)\n    {\n      createGauge(\"memory\", \"\",min,max);\n    }\n\tfunction consultar(){\n\t\tvar codigo=document.getElementById('codigo').value;\n\t\tfor(var i=0;i<grades.length;i++){\n\t\t\tif(codigo==grades[i].code){\n\t\t\t\tgauges['memory'].redraw(grades[i].grade);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\n    function initialize()\n    {\n      \n\t  var grad=[];\n\t  for(var i=0;i<grades.length;i++){\n\t\tgrad.push(grades[i].grade);\n\t  }\n\t  \n      for(var i=0;i<grad.length;i++){\n\t\tfor(var j=i+1;j<grad.length;j++){\n\t\t\tif(grad[i]>grad[j]){\n\t\t\t\tvar aux=grad[i];\n\t\t\t\tgrad[i]=grad[j];\n\t\t\t\tgrad[j]=aux;\n\t\t\t}\n\t\t}\n\t  }\n\t  valmin=grad[0];\n\t  val40=grad[Math.round(grad.length*0.3)];\n\t  val60=grad[Math.round(grad.length*0.6)];\n\t  val90=grad[Math.round(grad.length*0.9)];\n\t  var max=5;\n      if(grad[grad.length-1]>5){\n\t\tmax=grad[grad.length-1];\n\t  }\n\t  createGauges(0,max);\n\t  //setInterval(updateGauges, 5000);\n    }\n\t\t\t\n\t</script>", "description": "fresh block", "created_at": "2016-09-06T15:49:08Z", "updated_at": "2016-09-06T15:49:08Z", "api": ["d3.select", "d3.svg.line", "d3.svg.arc"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/deisydiazp/'>deisydiazp</a>'s block: <a href='http://bl.ocks.org/deisydiazp/cb96e9e269bb59effb60e37035cbe33b'>fresh block</a>", "uid": "deisydiazp_09447d7f697ab80b1c026fd296c83c9d"}, {"code": "<script>\n\nvar margin = {top: 40, right: 100, bottom: 40, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal().rangePoints([0, width], 1),\n    y = {},\n    dragging = {};\n\nvar line = d3.svg.line(),\n    axis = d3.svg.axis().orient(\"left\"),\n    background,\n    foreground;\n  \nvar CountriesList =   ['Colombia','Germany','Dinamark','Rusia','Brazil','Canada','China','New Zeland','Congo'];\n  \nvar color = d3.scale.ordinal()\n .domain(CountriesList)\n  .range(['#b3bfc7','#a7a6ab','#ccc2bc','#8d9ca8','#9c9b94','#b7c7b5','#b4cacc','#d6d9c3','#bfb89f']);  \n  \n  \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n  \n\nd3.csv(\"date.csv\", function(error, data) {\n\n  // Extract the list of dimensions and create a scale for each.\n  x.domain(dimensions = d3.keys(data[0]).filter(function(d) {\n    return d != \"Countries\" && (y[d] = d3.scale.linear()\n        .domain(d3.extent(data, function(p) { return +p[d]; }))\n        .range([height, 0]));\n  }));\n\n  // Add grey background lines for context.\n  background = svg.append(\"g\")\n    .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n    .data(data)\n    .enter().append(\"path\")\n    .attr(\"d\", path);\n\n  // Add blue foreground lines for focus.\n  foreground = svg.append(\"g\")\n    .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n    .data(data)\n    .enter().append(\"path\")\n    .attr(\"d\", path)\n    .attr (\"stroke-width\", \"2\")\n    .attr('stroke', function(d) { return color(d.Countries); });\n  \n  // Add a group element for each dimension.\n  var g = svg.selectAll(\".dimension\")\n      .data(dimensions)\n      .enter().append(\"g\")\n      .attr(\"class\", \"dimension\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \")\"; })\n      .call(d3.behavior.drag()\n      .origin(function(d) { return {x: x(d)}; })\n      .on(\"dragstart\", function(d) {\n          dragging[d] = x(d);\n          background.attr(\"visibility\", \"hidden\");\n        })\n       .on(\"drag\", function(d) {\n          dragging[d] = Math.min(width, Math.max(0, d3.event.x));\n          foreground.attr(\"d\", path);\n          dimensions.sort(function(a, b) { return position(a)           - position(b); });\n          x.domain(dimensions);\n          g.attr(\"transform\", function(d) { return       \"translate(\" + position(d) + \")\"; })\n        })\n        .on(\"dragend\", function(d) {\n          delete dragging[d];\n          transition(d3.select(this)).attr(\"transform\", \"translate(\" + x(d) + \")\");\n          transition(foreground).attr(\"d\", path);\n          background\n              .attr(\"d\", path)\n            .transition()\n              .delay(500)\n              .duration(0)\n              .attr(\"visibility\", null);\n        }));\n\n  // Add an axis and title.\n  g.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(axis.scale(y[d])); })\n    .append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { return d; });\n\n  // Add and store a brush for each axis.\n  g.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) {\n        d3.select(this).call(y[d].brush = d3.svg.brush().y(y[d]).on(\"brushstart\", brushstart).on(\"brush\", brush));\n      })\n    .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n  \n    // draw legend\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n      .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return         \"translate(0,\" + i * 25 + \")\"; });\n\n  // draw legend colored rectangles\n  legend.append(\"rect\")\n      .attr(\"x\", width - 10)\n      .attr(\"width\", 15)\n      .attr(\"height\", 15)\n      .style(\"fill\", color);\n\n  // draw legend text\n  legend.append(\"text\")\n      .attr(\"x\", width + 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"start\")\n      .data(data)\n      .text(function(d) { return d.Countries;});\n \n});\n\nfunction position(d) {\n  var v = dragging[d];\n  return v == null ? x(d) : v;\n}\n\nfunction transition(g) {\n  return g.transition().duration(500);\n}\n\n// Returns the path for a given data point.\nfunction path(d) {\n  return line(dimensions.map(function(p) { return [position(p), y[p](d[p])]; }));\n}\n\nfunction brushstart() {\n  d3.event.sourceEvent.stopPropagation();\n}\n\n// Handles a brush event, toggling the display of foreground lines.\nfunction brush() {\n  var actives = dimensions.filter(function(p) { return !y[p].brush.empty(); }),\n      extents = actives.map(function(p) { return y[p].brush.extent(); });\n  foreground.style(\"display\", function(d) {\n    return actives.every(function(p, i) {\n      return extents[i][0] <= d[p] && d[p] <= extents[i][1];\n    }) ? null : \"none\";\n  });\n}\n\n</script>", "description": "Feature Countries", "created_at": "2016-09-06T03:48:09Z", "updated_at": "2016-09-11T03:28:07Z", "api": ["d3.scale.ordinal", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.keys", "d3.scale.linear", "d3.extent", "d3.behavior.drag", "d3.svg.brush", "d3.event.sourceEvent.stopPropagation"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n-An\u00e1lisis Expresividad y Efectividad \n\n Para este tipo de grafico no se Justifica usar una visualizaci\u00f3n 3D, ya que no permite comparar las caracter\u00edsticas de cada pa\u00eds, las \u00e1reas se oclusionan entre si y de un vistazo el usuario no puede determinar que variable es m\u00e1s representativa. \n  \nOtro punto importante del an\u00e1lisis tiene que ver con el tipo de factores de an\u00e1lisis y su relaci\u00f3n entre si, si un analista quisiera saber la relaci\u00f3n de uno o dos par\u00e1metros con respecto a alguna variable, no es posible determinarlo de una manera r\u00e1pida y certera.\n  \n-Alternativa \n\nComo alternativa se plantea un diagrama de ejes paralelos en donde cada eje representa      cada variable num\u00e9rica, Con este grafico es posible comparar la relaci\u00f3n de causalidad entre variables y a su vez comparar tendencia de dichas variables entre pa\u00edses.\n  \nInteractivamente el grafico permite seleccionar el rango de valores de cada eje y a su vez   es posible cambiar el orden de cada eje con el fin de analisar la correlaccion entre cada   variable\n", "uid": "zubcarz_4384a27bb88b7393474703b64d19d9fe"}, {"code": "<script>\nvar grades = [\n  {\"code\":23802620, \"grade\":4.85},\n  {\"code\":23802825, \"grade\":4.865},\n  {\"code\":23801894, \"grade\":3.24},\n  {\"code\":23802926, \"grade\":5},\n  {\"code\":23800661, \"grade\":3.19},\n  {\"code\":23800768, \"grade\":3.98},\n  {\"code\":23800972, \"grade\":4.89},\n  {\"code\":23801922, \"grade\":3.73},\n  {\"code\":23805498, \"grade\":4.795},\n  {\"code\":23805913, \"grade\":4.85},\n  {\"code\":23800311, \"grade\":2.81},\n  {\"code\":23806395, \"grade\":4.72},\n  {\"code\":23808850, \"grade\":3.85},\n  {\"code\":23802872, \"grade\":2.16},\n  {\"code\":23802105, \"grade\":4.715},\n  {\"code\":23809880, \"grade\":4.92},\n  {\"code\":23802056, \"grade\":4.48},\n  {\"code\":23807897, \"grade\":5.2},\n  {\"code\":23807916, \"grade\":5},\n  {\"code\":23801962, \"grade\":3.62},\n  {\"code\":23808246, \"grade\":4.61},\n  {\"code\":23802600, \"grade\":0.11},\n  {\"code\":23808311, \"grade\":4.7}\n];\n   \n    var margin = {top: 20, right: 15, bottom: 60, left: 60}\n      , width = 960 - margin.left - margin.right\n      , height = 500 - margin.top - margin.bottom;\n    \n    var x = d3.scale.linear()\n              .domain([0, d3.max(grades, function(d) { return d.grade; })])\n              .range([ 0, width ]);\n    \n \n    var chart = d3.select('body')\n  .append('svg:svg')\n  .attr('width', width + margin.right + margin.left)\n  .attr('height', height + margin.top + margin.bottom)\n  .attr('class', 'chart')\n\n    var main = chart.append('g')\n  .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n  .attr('width', width)\n  .attr('height', height)\n  .attr('class', 'main')   \n        \n    // draw the x axis\n    var xAxis = d3.svg.axis()\n  .scale(x);\n\n    main.append('g')\n  .attr('transform', 'translate(0,15)')\n  .attr('class', 'main axis date')\n  .call(xAxis);\n  \n    main.append('g')\n  .attr('transform', 'translate(0,0)')\n  .attr('class', 'main axis date')\n;\n    \n      var tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Grade:</strong> <span style='color:slateGray'>\" + d.grade + \"</span><br>\";\n  });\n    var g = main.append(\"svg:g\"); \n      g.call(tip);\n    g.selectAll(\"scatter-dots\")\n      .data(grades)\n      .enter().append(\"svg:circle\")\n          .attr(\"cx\", function (d,i) { return x(d.grade); } )\n    \t\t\t.attr(\"grade\", function (d,i) { return d.grade; } )\n          .attr(\"id\",function (d) { return d.code; })\n          .attr(\"r\", 8)\n    \t\t\t.on('mouseover', tip.show)\n      \t\t.on('mouseout', tip.hide);\n   \nd3.select(\"#btnCode\").on(\"click\", function() {\n  var userText=document.getElementById(\"txtCode\").value;\n  if(userText!=\"\")\n  \tupdate(userText);\n});\n   \n\n\n\n    \nfunction update(code) {\n\n  var userGrade=document.getElementById(code).getAttribute('grade');\n  d3.select(\"[id='\" + code + \"']\").attr('class','red');\n  \n  var mean = d3.mean(grades,function(d) { return +d.grade});\n  d3.select(\"#txtAvg\").property(\"value\", mean);\n  \n    var max = d3.max(grades,function(d) { return +d.grade});\n  d3.select(\"#txtMax\").property(\"value\", max);\n  \n    var min = d3.min(grades,function(d) { return +d.grade});\n  d3.select(\"#txtMin\").property(\"value\", min);\n  d3.select(\"#result\").remove(\"p\");\n  d3.select(\"#result\").append(\"p\").text(\"v\");\n  \n}\n    \n  </script>", "description": "Homework 3 Grades", "created_at": "2016-09-05T04:53:43Z", "updated_at": "2016-09-06T13:50:10Z", "api": ["d3.scale.linear", "d3.max", "d3.select", "d3.svg.axis", "d3.tip", "d3.mean", "d3.min"], "readme": "<h3>Analysis about this visualization</h3>\n<ul>\n  <li><b style=\"color: #FF7F50;\">What:</b> Data is a table, information about each student: code and grade.</li>\n  <li><b style=\"color: #FFD700;\">Why:</b>\n  <ul>\n  \t\t<li>Actions</li>\n      <ul><li>Analyze:<b>Present</b> grades about one course (communicate).\n</li>\n      \t<li style blue >Search:<b>Locate</b> his own grade. Student knows his code but not where is it point associated to this.\n</li>\n      \t<li>Query:<b>Identify</b> A particular grade: his own grade.</li></ul>\n  \t\t<li>Targets</li>\n      <ul>\n      <li><b>Distribution</b> of grades ( just one atribute).</li>\n      <li><b>Extremes</b>: students interest in knowing the best and worst grade.\n</li>\n      </ul>\n  </ul>  \n  </li>\n  <li><b style=\"color: #4169E1;\">How:</b> Arrange-Express\n  <ul>\n  <li>Marks: Points.</li>\n  <li>Channel:Horizontal position and color.</li>\n  <li>Manipulate: <b>Select</b> student can select each point to identify grade associated (not code,because there are certain privacity level).\n</li>\n  \n  </ul>\n  </li>\n</ul>\n\n\n\n<h3>WHY I DECIDED THAT</h3>\n\nI thought, as student what is I want to know when I receive my grades and my conclusion was: \n<ul>\n<li>See a general perspective about all course while preserving privacity about my classmates' grades.</li>\n<li>Identify my note.</li>\n<li>Know average, maximum and minimum grade.</li>\n</ul>\n\n\nBy other hand, keeping in mind marks ranking I thought points were the best option , not only because it is first, I thought in other marks and don't support very well my tasks,  e.g.  lines, 23 bar didn\u2019t sound well and they aren't practical for this case. As a channel, horizontal position to visualize differents grades (just one atributte so I didn't need another axis) and color to highlight user's grade, from other.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/2a71c943724dc86e9b51d79c91c3e9cc'>fresh block</a>\n\n\n", "uid": "nychi713_ebf98b4448c4565c8bc82d3691713ebc"}, {"code": "<script>\n  \nvar grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}];\n   \nvar margin = { top: 50, right: 300, bottom: 50, left: 50 },\n    outerWidth = 1050,\n    outerHeight = 500,\n    width = outerWidth - margin.left - margin.right,\n    height = outerHeight - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width]).nice();\n\nvar y = d3.scale.linear()\n    .range([height, 0]).nice();\nvar xMax = d3.max(grades, function(d) { return d.grade; }) * 1.05,\n      xMin = d3.min(grades, function(d) { return d.grade; }),\n      xMin = xMin > 0 ? 0 : xMin;\n\n  x.domain([xMin, xMax]);\n\n  var xAxis = d3.svg.axis()\n      .scale(x)\n      .orient(\"bottom\")\n      .tickSize(-height);\n\n  var color = d3.scale.category10();\n\n  var tip = d3.tip()\n      .attr(\"class\", \"d3-tip\")\n      .offset([-10, 0])\n      .html(function(d) {\n        return \"Cdigo: \" + d.code + \"<br>\" + \"Grade: \" + d.grade;\n      });\nvar zoomBeh = d3.behavior.zoom()\n      .x(x)\n      .y(y)\n      .scaleExtent([0, 500]);\n      .on(\"zoom\", zoom);\nvar svg = d3.select(\"#scatter\")\n    .append(\"svg\")\n      .attr(\"width\", outerWidth)\n      .attr(\"height\", outerHeight)\n    .append(\"g\")\n      .call(zoomBeh);\n \n  svg.call(tip);\n\n function zoom() {\n    svg.select(\".x.axis\").call(xAxis);\n\n\n    svg.selectAll(\".dot\")\n        .attr(\"transform\", transform);\n  }\n\n \n\n</script>", "description": "fresh block", "created_at": "2016-09-05T02:18:06Z", "updated_at": "2016-09-05T04:25:07Z", "api": ["d3.scale.linear", "d3.max", "d3.min", "d3.svg.axis", "d3.scale.category10", "d3.tip", "d3.behavior.zoom", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "nychi713_d33cf7df5ffbb757a142fab18b134653"}, {"code": "<script>\n\nvar margin = {top: 40, right: 40, bottom: 30, left: 60},\n    width = 940 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar y = d3.scale.ordinal()\n    .rangeRoundBands([0, height], .1);\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Grade:</strong> <span style='color:blue'>\" + d.frequency + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  y.domain(data.map(function(d) { return d.letter; }));\n  x.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n      .append(\"text\")\n      .attr(\"x\", width+32)\n      .attr(\"dx\", \".1em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"dy\", \".5em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Code\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(function(d) { return width - x(d.frequency); })\n      .attr(\"width\", function(d) { return x(d.frequency); })\n      .attr(\"y\", function(d) { return y(d.letter); })\n      .attr(\"height\", y.rangeBand())\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Grades Visualization", "created_at": "2016-09-05T02:07:36Z", "updated_at": "2016-09-05T02:07:40Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "How to use [d3-tip](https://github.com/caged/d3-tip) with d3's [simple bar chart example](http://bl.ocks.org/mbostock/3885304).\n\n\nforked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>\n\nforked from <a href='http://bl.ocks.org/willroj/'>willroj</a>'s block: <a href='http://bl.ocks.org/willroj/34fd56d0b126ead0d48fea27bff20f4f'>Grades Visualization</a>", "uid": "willroj_70008b54362298d88e1f039b1b186d99"}, {"code": "<script>\n\nvar margin = {top: 40, right: 40, bottom: 30, left: 60},\n    width = 940 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar y = d3.scale.ordinal()\n    .rangeRoundBands([0, height], .1);\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Grade:</strong> <span style='color:blue'>\" + d.frequency + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  y.domain(data.map(function(d) { return d.letter; }));\n  x.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n      .append(\"text\")\n      .attr(\"x\", width+32)\n      .attr(\"dx\", \".1em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"dy\", \".5em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Code\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(function(d) { return width - x(d.frequency); })\n      .attr(\"width\", function(d) { return x(d.frequency); })\n      .attr(\"y\", function(d) { return y(d.letter); })\n      .attr(\"height\", y.rangeBand())\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Grades Visualization", "created_at": "2016-09-04T23:07:02Z", "updated_at": "2016-09-05T02:07:33Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "How to use [d3-tip](https://github.com/caged/d3-tip) with d3's [simple bar chart example](http://bl.ocks.org/mbostock/3885304).\n\n\nforked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>", "uid": "willroj_34fd56d0b126ead0d48fea27bff20f4f"}, {"code": "<script>\n\nvar margin = {top: 50, right: 20, bottom: 10, left: 65},\n    width = 800 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar y = d3.scale.ordinal()\n    .rangeRoundBands([0, height], .3);\n\nvar x = d3.scale.linear()\n    .rangeRound([0, width]);\n\nvar color = d3.scale.ordinal()\n    .range([\"#c7001e\", \"#f6a580\", \"#cccccc\", \"#92c6db\", \"#086fad\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"top\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n\nvar svg = d3.select(\"#figure\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .attr(\"id\", \"d3-plot\")\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  color.domain([\"Strongly disagree\", \"Disagree\", \"Neither agree nor disagree\", \"Agree\", \"Strongly agree\"]);\n\n  d3.csv(\"raw_data.csv\", function(error, data) {\n\n  data.forEach(function(d) {\n    // calc percentages\n    d[\"Strongly disagree\"] = +d[1]*100/d.N;\n    d[\"Disagree\"] = +d[2]*100/d.N;\n    d[\"Neither agree nor disagree\"] = +d[3]*100/d.N;\n    d[\"Agree\"] = +d[4]*100/d.N;\n    d[\"Strongly agree\"] = +d[5]*100/d.N;\n    var x0 = -1*(d[\"Neither agree nor disagree\"]/2+d[\"Disagree\"]+d[\"Strongly disagree\"]);\n    var idx = 0;\n    d.boxes = color.domain().map(function(name) { return {name: name, x0: x0, x1: x0 += +d[name], N: +d.N, n: +d[idx += 1]}; });\n  });\n\n  var min_val = d3.min(data, function(d) {\n          return d.boxes[\"0\"].x0;\n          });\n\n  var max_val = d3.max(data, function(d) {\n          return d.boxes[\"4\"].x1;\n          });\n\n  x.domain([min_val, max_val]).nice();\n  y.domain(data.map(function(d) { return d.Question; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n\n  var vakken = svg.selectAll(\".question\")\n      .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"bar\")\n      .attr(\"transform\", function(d) { return \"translate(0,\" + y(d.Question) + \")\"; });\n\n  var bars = vakken.selectAll(\"rect\")\n      .data(function(d) { return d.boxes; })\n    .enter().append(\"g\").attr(\"class\", \"subbar\");\n\n  bars.append(\"rect\")\n      .attr(\"height\", y.rangeBand())\n      .attr(\"x\", function(d) { return x(d.x0); })\n      .attr(\"width\", function(d) { return x(d.x1) - x(d.x0); })\n      .style(\"fill\", function(d) { return color(d.name); });\n\n  bars.append(\"text\")\n      .attr(\"x\", function(d) { return x(d.x0); })\n      .attr(\"y\", y.rangeBand()/2)\n      .attr(\"dy\", \"0.5em\")\n      .attr(\"dx\", \"0.5em\")\n      .style(\"font\" ,\"10px sans-serif\")\n      .style(\"text-anchor\", \"begin\")\n      .text(function(d) { return d.n !== 0 && (d.x1-d.x0)>3 ? d.n : \"\" });\n\n  vakken.insert(\"rect\",\":first-child\")\n      .attr(\"height\", y.rangeBand())\n      .attr(\"x\", \"1\")\n      .attr(\"width\", width)\n      .attr(\"fill-opacity\", \"0.5\")\n      .style(\"fill\", \"#F5F5F5\")\n      .attr(\"class\", function(d,index) { return index%2==0 ? \"even\" : \"uneven\"; });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n  .append(\"line\")\n      .attr(\"x1\", x(0))\n      .attr(\"x2\", x(0))\n      .attr(\"y2\", height);\n\n  var startp = svg.append(\"g\").attr(\"class\", \"legendbox\").attr(\"id\", \"mylegendbox\");\n  // this is not nice, we should calculate the bounding box and use that\n  var legend_tabs = [0, 120, 200, 375, 450];\n  var legend = startp.selectAll(\".legend\")\n      .data(color.domain().slice())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(\" + legend_tabs[i] + \",-45)\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", 0)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", 22)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"begin\")\n      .style(\"font\" ,\"10px sans-serif\")\n      .text(function(d) { return d; });\n\n  d3.selectAll(\".axis path\")\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", \"#000\")\n      .style(\"shape-rendering\", \"crispEdges\")\n\n  d3.selectAll(\".axis line\")\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", \"#000\")\n      .style(\"shape-rendering\", \"crispEdges\")\n\n  var movesize = width/2 - startp.node().getBBox().width/2;\n  d3.selectAll(\".legendbox\").attr(\"transform\", \"translate(\" + movesize  + \",0)\");\n\n\n});\n</script>", "description": "Diverging Stacked Bar Chart", "created_at": "2016-09-03T16:33:09Z", "updated_at": "2016-09-03T17:50:34Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.min", "d3.max", "d3.selectAll"], "readme": "Diverging Stacked Bar Chart\n===========================\n\nWe create a diverging stacked bar chart to plot a 5 point Likert scale. There a lots of ways to\nplot a Likert scale but according to [Robbins & Heiberger](https://www.amstat.org/sections/SRMS/Proceedings/y2011/Files/300784_64164.pdf), a diverging stacked bar chart is the best and I agree.\n\nI've used [D3.js](http://d3js.org). There is also an [R package](http://cran.r-project.org/web/packages/HH/index.html) by Robbins & Heiberger.\n\nThe original can be found at [github](https://github.com/wpoely86/D3.js-Diverging-Stacked-Bar-Chart)\n\nforked from <a href='http://bl.ocks.org/wpoely86/'>wpoely86</a>'s block: <a href='http://bl.ocks.org/wpoely86/e285b8e4c7b84710e463'>Diverging Stacked Bar Chart</a>", "uid": "aurelient_095d8de12fab4fa26e525a5da38c9d48"}, {"code": "<script>\n\nvar margin = {\n    top: 1,\n    right: 1,\n    bottom: 6,\n    left: 1\n  },\n  width = 960 - margin.left - margin.right,\n  height = 500 - margin.top - margin.bottom;\n\nvar fontScale = d3.scaleLinear()\n  .range([8, 30]);\n\nvar formatNumber = d3.format(\",.0f\"),\n  format = function(d) {\n    return formatNumber(d) + \" TWh\";\n  },\n  color = d3.scaleOrdinal(d3.schemeCategory20);\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar weightText = svg.append(\"text\")\n  .text(\"Links weighted equally\")\n  .attr(\"x\", width/2-170)\n  .attr(\"y\", height)\n  .style(\"font-size\", \"24px\");\n\nvar sankey = d3.sankey()\n  .nodeWidth(15)\n  .nodePadding(10)\n  .size([width, height]);\n\nvar path = sankey.link();\n\nd3.json(\"energy.json\", function(energy) {\n  var empty_links = energy.links.map(function(d) {\n    d.id = d.source + \" -> \" + d.target;\n    return {\n      source: d.source,\n      target: d.target,\n      id: d.id,\n      value: 1\n    }\n  });\n\n  sankey\n    .nodes(energy.nodes)\n    .links(empty_links)\n    .layout(32);\n\n  fontScale.domain(d3.extent(energy.nodes, function(d) { return d.value }));\n\n  var link = svg.append(\"g\").selectAll(\".link\")\n    .data(empty_links, function(d) { return d.id; })\n    .enter().append(\"path\")\n    .attr(\"class\", \"link\")\n    .attr(\"d\", path)\n    .style(\"stroke-width\", function(d) {\n      return Math.max(1, d.dy) + \"px\";\n    })\n    .sort(function(a, b) {\n      return b.dy - a.dy;\n    });\n\n  link.append(\"title\")\n    .text(function(d) {\n      return d.source.name + \"  \" + d.target.name + \"\\n\" + format(d.value);\n    });\n\n  var node = svg.append(\"g\").selectAll(\".node\")\n    .data(energy.nodes, function(d) { return d.name; })\n    .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .attr(\"transform\", function(d) {\n      return \"translate(\" + d.x + \",\" + d.y + \")\";\n    });\n\n  node.append(\"rect\")\n    .attr(\"height\", function(d) {\n      return d.dy;\n    })\n    .attr(\"width\", sankey.nodeWidth())\n    .style(\"fill\", function(d) {\n      return d.color = color(d.name.replace(/ .*/, \"\"));\n    })\n    .style(\"stroke\", function(d) {\n      return d3.rgb(d.color).darker(1.8);\n    })\n    .append(\"title\")\n    .text(function(d) {\n      return d.name + \"\\n\" + format(d.value);\n    });\n\n  node.append(\"text\")\n    .attr(\"x\", -6)\n    .attr(\"y\", function(d) {\n      return d.dy / 2;\n    })\n    .attr(\"dy\", \".35em\")\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"transform\", null)\n    .style(\"fill\", function(d) {\n      return d3.rgb(d.color).darker(2.4);\n    })\n    .text(function(d) {\n      return d.name;\n    })\n    .style(\"font-size\", function(d) {\n      return Math.floor(fontScale(d.value)) + \"px\";\n    })\n    .filter(function(d) {\n      return d.x < width / 2;\n    })\n    .attr(\"x\", 6 + sankey.nodeWidth())\n    .attr(\"text-anchor\", \"start\");\n\n  function update(nodeData, linkData) {\n    sankey\n      .nodes(nodeData)\n      .links(linkData)\n      .layout(32);\n\n    sankey.relayout();\n    fontScale.domain(d3.extent(nodeData, function(d) { return d.value }));\n\n    svg.selectAll(\".link\")\n      .data(linkData, function(d) { return d.id; })\n      .sort(function(a, b) {\n        return b.dy - a.dy;\n      })\n      .transition()\n      .duration(1300)\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) {\n        return Math.max(1, d.dy) + \"px\";\n      });\n\n    svg.selectAll(\".node\")\n      .data(nodeData, function(d) { return d.name; })\n      .transition()\n      .duration(1300)\n      .attr(\"transform\", function(d) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      });\n\n    svg.selectAll(\".node rect\")\n      .transition()\n      .duration(1300)\n      .attr(\"height\", function(d) {\n        return d.dy;\n      });\n\n    svg.selectAll(\".node text\")\n      .transition()\n      .duration(1300)\n      .attr(\"y\", function(d) {\n        return d.dy / 2;\n      })\n      .style(\"font-size\", function(d) {\n        return Math.floor(fontScale(d.value)) + \"px\";\n      });\n  };\n\n  var counter = 0;\n  function toggleTransition() {\n    counter++;\n    var activeLinks = counter % 2 ? energy.links : empty_links;\n    weightText.text(counter % 2 ? \"Links weighted by value\" : \"Links weighted equally\");\n    update(energy.nodes, activeLinks);\n    setTimeout(toggleTransition, 2400);\n  };\n\n  setTimeout(toggleTransition, 2400);\n});\n\n</script>", "description": "Sankey Transitions", "created_at": "2016-08-30T11:36:30Z", "updated_at": "2016-09-09T13:21:45Z", "api": ["d3.scaleLinear", "d3.format", "d3.scaleOrdinal", "d3.select", "d3.sankey", "d3.json", "d3.extent", "d3.rgb"], "readme": "This example created for development purposes using the [d3-sankey](https://github.com/d3/d3-sankey) plugin for D3 4.0.\n\nBased on [xaranke's port](http://bl.ocks.org/xaranke/9ada4c74a87b57ae7308) of [Mike Bostock's Sankey Diagram](https://bost.ocks.org/mike/sankey/) with drag behavior enabled and several fixes for the d3 version 4.x release.\n\nIt would be nice if d3-sankey's `value` accessor was configurable, to avoid creating the `empty_links` data structure in the code below.\n", "uid": "syntagmatic_77c7f7e8802e8824eed473dd065c450b"}, {"code": "<script>function parseNewick(a){for(var e=[],r={},s=a.split(/\\s*(;|\\(|\\)|,|:)\\s*/),t=0;t<s.length;t++){var n=s[t];switch(n){case\"(\":var c={};r.branchset=[c],e.push(r),r=c;break;case\",\":var c={};e[e.length-1].branchset.push(c),r=c;break;case\")\":r=e.pop();break;case\":\":break;default:var h=s[t-1];\")\"==h||\"(\"==h||\",\"==h?r.name=n:\":\"==h&&(r.length=parseFloat(n))}}return r}</script>\n\n<!-- Copyright 2015 Mike Bostock http://d3js.org -->\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar outerRadius = 960 / 2,\n    innerRadius = outerRadius - 170;\n\nvar color = d3.scale.category10()\n    .domain([\"Bacteria\", \"Eukaryota\", \"Archaea\"]);\n\nvar cluster = d3.layout.cluster()\n    .size([360, innerRadius])\n    .children(function(d) { return d.branchset; })\n    .value(function(d) { return 1; })\n    .sort(function(a, b) { return (a.value - b.value) || d3.ascending(a.length, b.length); })\n    .separation(function(a, b) { return 1; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", outerRadius * 2)\n    .attr(\"height\", outerRadius * 2);\n\nvar legend = svg.append(\"g\")\n    .attr(\"class\", \"legend\")\n  .selectAll(\"g\")\n    .data(color.domain())\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d, i) { return \"translate(\" + (outerRadius * 2 - 10) + \",\" + (i * 20 + 10) + \")\"; });\n\nlegend.append(\"rect\")\n    .attr(\"x\", -18)\n    .attr(\"width\", 18)\n    .attr(\"height\", 18)\n    .style(\"fill\", color);\n\nlegend.append(\"text\")\n    .attr(\"x\", -24)\n    .attr(\"y\", 9)\n    .attr(\"dy\", \".35em\")\n    .style(\"text-anchor\", \"end\")\n    .text(function(d) { return d; });\n\nvar chart = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + outerRadius + \",\" + outerRadius + \")\");\n\nd3.text(\"life.txt\", function(error, life) {\n  if (error) throw error;\n\n  var root = parseNewick(life),\n      nodes = cluster.nodes(root),\n      links = cluster.links(nodes),\n      input = d3.select(\"#show-length input\").on(\"change\", changed),\n      timeout = setTimeout(function() { input.property(\"checked\", true).each(changed); }, 2000);\n\n  setRadius(root, root.length = 0, innerRadius / maxLength(root));\n  setColor(root);\n\n  var linkExtension = chart.append(\"g\")\n      .attr(\"class\", \"link-extensions\")\n    .selectAll(\"path\")\n      .data(links.filter(function(d) { return !d.target.children; }))\n    .enter().append(\"path\")\n      .each(function(d) { d.target.linkExtensionNode = this; })\n      .attr(\"d\", function(d) { return step(d.target.x, d.target.y, d.target.x, innerRadius); });\n\n  var link = chart.append(\"g\")\n      .attr(\"class\", \"links\")\n    .selectAll(\"path\")\n      .data(links)\n    .enter().append(\"path\")\n      .each(function(d) { d.target.linkNode = this; })\n      .attr(\"d\", function(d) { return step(d.source.x, d.source.y, d.target.x, d.target.y) })\n      .style(\"stroke\", function(d) { return d.target.color; });\n\n  chart.append(\"g\")\n      .attr(\"class\", \"labels\")\n    .selectAll(\"text\")\n      .data(nodes.filter(function(d) { return !d.children; }))\n    .enter().append(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + (innerRadius + 4) + \",0)\" + (d.x < 180 ? \"\" : \"rotate(180)\"); })\n      .style(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .text(function(d) { return d.name.replace(/_/g, \" \"); })\n      .on(\"mouseover\", mouseovered(true))\n      .on(\"mouseout\", mouseovered(false));\n\n  function changed() {\n    clearTimeout(timeout);\n    var checked = this.checked;\n    d3.transition().duration(750).each(function() {\n      linkExtension.transition().attr(\"d\", function(d) { return step(d.target.x, checked ? d.target.radius : d.target.y, d.target.x, innerRadius); });\n      link.transition().attr(\"d\", function(d) { return step(d.source.x, checked ? d.source.radius : d.source.y, d.target.x, checked ? d.target.radius : d.target.y) });\n    });\n  }\n\n  function mouseovered(active) {\n    return function(d) {\n      d3.select(this).classed(\"label--active\", active);\n      d3.select(d.linkExtensionNode).classed(\"link-extension--active\", active).each(moveToFront);\n      do d3.select(d.linkNode).classed(\"link--active\", active).each(moveToFront); while (d = d.parent);\n    };\n  }\n\n  function moveToFront() {\n    this.parentNode.appendChild(this);\n  }\n});\n\n// Compute the maximum cumulative length of any node in the tree.\nfunction maxLength(d) {\n  return d.length + (d.children ? d3.max(d.children, maxLength) : 0);\n}\n\n// Set the radius of each node by recursively summing and scaling the distance from the root.\nfunction setRadius(d, y0, k) {\n  d.radius = (y0 += d.length) * k;\n  if (d.children) d.children.forEach(function(d) { setRadius(d, y0, k); });\n}\n\n// Set the color of each node by recursively inheriting.\nfunction setColor(d) {\n  d.color = color.domain().indexOf(d.name) >= 0 ? color(d.name) : d.parent ? d.parent.color : null;\n  if (d.children) d.children.forEach(setColor);\n}\n\n// Like d3.svg.diagonal.radial, but with square corners.\nfunction step(startAngle, startRadius, endAngle, endRadius) {\n  var c0 = Math.cos(startAngle = (startAngle - 90) / 180 * Math.PI),\n      s0 = Math.sin(startAngle),\n      c1 = Math.cos(endAngle = (endAngle - 90) / 180 * Math.PI),\n      s1 = Math.sin(endAngle);\n  return \"M\" + startRadius * c0 + \",\" + startRadius * s0\n      + (endAngle === startAngle ? \"\" : \"A\" + startRadius + \",\" + startRadius + \" 0 0 \" + (endAngle > startAngle ? 1 : 0) + \" \" + startRadius * c1 + \",\" + startRadius * s1)\n      + \"L\" + endRadius * c1 + \",\" + endRadius * s1;\n}\n\nd3.select(self.frameElement).style(\"height\", outerRadius * 2 + \"px\");\n\n</script>", "description": "Tree of Life", "created_at": "2016-08-25T03:20:33Z", "updated_at": "2016-08-25T03:20:33Z", "api": ["d3.scale.category10", "d3.layout.cluster", "d3.ascending", "d3.select", "d3.text", "d3.transition", "d3.max"], "readme": "A re-implementation of Jason Davies\u2019 [Phylogenetic Tree of Life](https://www.jasondavies.com/tree-of-life/), with faded gray lines to connect the leaf nodes of the tree to their corresponding labels inspired by [a figure from *Nature*](http://www.nature.com/nature/journal/v462/n7276/fig_tab/nature08656_F1.html).\n\nThis implementation modifies the depth of interior nodes in a [cluster layout](https://github.com/mbostock/d3/wiki/Cluster-Layout) to show branch lengths. Toggle the checkbox in the top-left corner to show or hide branch lengths, and mouseover a label to highlight its path to the root.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/c034d66572fd6bd6815a'>Tree of Life</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/900ba9b335ce5cfb5016be7daca322d3'>Tree of Life</a>", "uid": "sirparker_17e638ad0e87343db21a45f0dbc30b25"}, {"code": "<script>\n\nvar width = 960,\n    height = 1060;\n\nvar format = d3.format(\",d\");\n\nvar color = d3.scaleOrdinal()\n    .range(d3.schemeCategory10\n        .map(function(c) { c = d3.rgb(c); c.opacity = 0.6; return c; }));\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar treemap = d3.treemap()\n    .size([width, height])\n    .padding(1)\n    .round(true);\n\nd3.csv(\"flare.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sum(function(d) { return d.value ? 1 : 0; })\n      .sort(function(a, b) { return b.height - a.height || b.value - a.value; });\n\n  treemap(root);\n\n  d3.select(\"body\")\n    .selectAll(\".node\")\n    .data(root.leaves())\n    .enter().append(\"div\")\n      .attr(\"class\", \"node\")\n      .attr(\"title\", function(d) { return d.id; })\n      .style(\"left\", function(d) { return d.x0 + \"px\"; })\n      .style(\"top\", function(d) { return d.y0 + \"px\"; })\n      .style(\"width\", function(d) { return d.x1 - d.x0 + \"px\"; })\n      .style(\"height\", function(d) { return d.y1 - d.y0 + \"px\"; })\n      .style(\"background\", function(d) { while (d.depth > 1) d = d.parent; return color(d.id); })\n    .append(\"div\")\n      .attr(\"class\", \"node-label\")\n      .text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).join(\"\\n\"); });\n});\n\nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n\n</script>", "description": "Treemap by Count", "created_at": "2016-08-22T17:16:26Z", "updated_at": "2016-08-31T14:25:55Z", "api": ["d3.format", "d3.scaleOrdinal", "d3.rgb", "d3.stratify", "d3.treemap", "d3.csv", "d3.select"], "readme": "This example demonstrates how to create a treemap where each leaf node is treated as having equal value, rather than being [sized according to a quantitative property](/mbostock/6bbb0a7ff7686b124d80).\n\nIn the flare.csv file, leaf nodes (representing class source files) have a non-zero value, while internal nodes (representing packages) have a zero value. Thus, when calling [*node*.sum](https://github.com/d3/d3-hierarchy#node_sum), any non-zero value can be treated as one:\n\n```js\nroot.sum(function(d) { return d.value ? 1 : 0; });\n```\n\nIf you instead give *all* nodes a value of one, then one unit of additional space will be reserved for the parent.\n", "uid": "mbostock_b4c0f143db88a9eb01a315a1063c1d77"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar projection = d3.geoRobinson()\n.rotate([-10.5,0])\n    .translate([width / 2, height / 2])\n    .precision(0.1);\n\nvar graticule = d3.geoGraticule();\n\nvar path = d3.geoPath()\n    .projection(projection);\n\nvar defs = svg.append(\"defs\");\n\ndefs.append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\ndefs.append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"use\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"fill\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"d\", path);\n\n  var lines = svg.append(\"g\"),\n      circles = svg.append(\"g\");\n  \n  console.clear()\n  \nd3.json(\"https://rawgit.com/visionscarto/some-geo-data/master/ne_50m_admin_0_countries/countries.topo.json\", function(error, world) {\n  if (error) throw error;\n\n  if (true)\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.countries))\n      .attr(\"class\", \"land\")\n      .attr(\"clip-path\", \"url(#clip)\")\n      .attr(\"d\", path);\n\n  if (true)\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"clip-path\", \"url(#clip)\")\n      .attr(\"d\", path);\n  \n  var w = topojson.feature(world, world.objects.countries);\n  w.features.forEach(function(d, i){\n\n    // get the larget sub-polygon's coordinates\n    var coord = d.geometry.coordinates;\n    if (d.geometry.type == 'MultiPolygon') {\n      var u = d3.scan(\n        coord.map(function(p){\n          return -d3.polygonArea(p[0]);\n        })\n      );\n      coord = coord[u];\n    }\n\n    var o = projection(d3.geoCentroid(d));\n     var n = polylabel([coord[0].map(projection)]);\n\n    \n    // Find the best *ellipse* with x/y ratio = alpha\n    var alpha = 4;\n    var m = polylabel([coord[0].map(projection).map(function(d){\n          d[0] /= alpha;\n          return d;\n        })]);\n    m[0] *= alpha;\n\n    lines.append('line')\n      .attr('x1', o[0])\n      .attr('y1', o[1])\n      .attr('x2', n[0])\n      .attr('y2', n[1])\n      .attr('stroke', 'green')\n      .attr('stroke-width', 1);\n    lines.append('line')\n      .attr('x1', o[0])\n      .attr('y1', o[1])\n      .attr('x2', m[0])\n      .attr('y2', m[1])\n      .attr('stroke', 'green')\n      .attr('stroke-width', 1);\n    circles.append('circle')\n      .attr('cx', o[0])\n      .attr('cy', o[1])\n      .attr('r', 2)\n      .attr('stroke', 'orange')\n      .attr('fill', 'yellow')\n      .attr('stroke-width', 1);\n    circles.append('circle')\n      .attr('cx', n[0])\n      .attr('cy', n[1])\n      .attr('r', 2)\n      .attr('stroke', 'green')\n      .attr('fill', 'white')\n      .attr('stroke-width', 1);\n    circles.append('circle')\n      .attr('cx', m[0])\n      .attr('cy', m[1])\n      .attr('r', 3)\n      .attr('stroke', 'green')\n      .attr('fill', 'green');\n\n  });\n\n\n});\n\n</script>", "description": "Elliptic / scaled Polylabel with D3", "created_at": "2016-08-22T14:14:36Z", "updated_at": "2016-08-22T14:30:29Z", "api": ["d3.select", "d3.geoRobinson", "d3.geoGraticule", "d3.geoPath", "d3.json", "d3.scan", "d3.polygonArea", "d3.geoCentroid"], "readme": "Testing @mourner's [polylabel](https://github.com/mapbox/polylabel) with D3.\n\nOrange dot = centroid ; white dot = normal polylabel; green dot = elliptic polylabel.\n\nIn this variant from <a href='http://bl.ocks.org/Fil/da021023d58b8ddefd165c65e37f796b'>Polylabel with D3</a> we set different scales for x and y, so as to find the \"largest ellipse\" to accomodate \"horizontal\" text labels (the ellipse ratio would match the text bbox ratio).\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org), [base map](http://blockbuilder.org/mbostock/3757119) by @mbostock.\n", "uid": "Fil_cf2c19710832bc77804e4ca3ca18ab8b"}, {"code": "<script>\n    \n    // fake data\n    var data = [ 10, 20, 30, 15, 25, 35, 40,\n                45, 50, 70, 100, 120, 130,\n               12, 18, 22, 29, 33, 44, 59, 200]\n    \n    // we scale the height of our bars using d3's linear scale\n    var hscale = d3.scale.linear()\n    \t.domain([0, d3.max(data)])\n    \t.range([0, 3])\n    \n    // we select the scene object just like an svg\n    var scene = d3.select(\"a-scene\")\n    \n    // we use d3's enter/update/exit pattern to draw and bind our dom elements\n    var bars = scene.selectAll(\"a-cube.bar\").data(data)\n    bars.enter().append(\"a-cube\").classed(\"bar\", true)\n    // we set attributes on our cubes to determine how they are rendered\n    bars.attr({\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 1 + hscale(d)/2;\n        // lets place the bars all around our camera\n        var radius = 5;\n        //var x = i - data.length/2;\n        var x = radius * Math.cos(i/data.length * 2 * Math.PI)\n        var z = radius * Math.sin(i/data.length * 2 * Math.PI)\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/data.length)*360;\n        return x + \" \" + y + \" \" + z\n      },\n      width: function(d) { return 0.5},\n      depth: function(d) { return 0.9},\n      height: function(d) { return hscale(d)},\n      opacity: function(d,i) { return 0.6 + (i/data.length) * 0.4},\n      //metalness: function(d,i) { return i/data.length}\n    })\n\n  </script>", "description": "d3+aframe", "created_at": "2016-08-17T14:27:41Z", "updated_at": "2016-08-17T14:27:41Z", "api": ["d3.scale.linear", "d3.max", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "mcgovey_07770bce721ac8fa62785ba35d81b041"}, {"code": "<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// parse the date / time\nvar parseTime = d3.timeParse(\"%d-%b-%y\");\n\n// set the ranges\nvar x = d3.scaleTime().range([0, width]);\nvar y = d3.scaleLinear().range([height, 0]);\n\n// define the line\nvar valueline = d3.line()\n    .x(function(d) { return x(d.date1); })\n    .y(function(d) { return y(d.close); });\n\n// append the svg obgect to the body of the page\n// appends a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  // format the data\n  data.forEach(function(d) {\n      d.date1 = parseTime(d.date);\n      d.close = +d.close;\n  });\n\n  // Scale the range of the data\n  x.domain(d3.extent(data, function(d) { return d.date1; }));\n  y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n  // Add the valueline path.\n  svg.append(\"path\")\n      .data([data])\n      .attr(\"class\", \"line\")\n      .attr(\"d\", valueline);\n\n  // Add the X Axis\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // Add the Y Axis\n  svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n// The table generation function\nfunction tabulate(data, columns) {\n    var table = d3.select(\"body\").append(\"table\")\n            .attr(\"style\", \"margin-left: 400px\"),\n        thead = table.append(\"thead\"),\n        tbody = table.append(\"tbody\");\n\n    // append the header row\n    thead.append(\"tr\")\n        .selectAll(\"th\")\n        .data(columns)\n        .enter()\n        .append(\"th\")\n            .text(function(column) { return column; });\n\n    // create a row for each object in the data\n    var rows = tbody.selectAll(\"tr\")\n        .data(data)\n        .enter()\n        .append(\"tr\");\n\n    // create a cell in each row for each column\n    var cells = rows.selectAll(\"td\")\n        .data(function(row) {\n            return columns.map(function(column) {\n                return {column: column, value: row[column]};\n            });\n        })\n        .enter()\n        .append(\"td\")\n        .attr(\"style\", \"font-family: Courier\") // sets the font style\n            .html(function(d) { return d.value; });\n    \n    return table;\n}\n\n// render the table\n var peopleTable = tabulate(data, [\"date\", \"close\"]);\n\n});\n\n</script>", "description": "Simple graph with table in v4", "created_at": "2016-08-16T17:38:43Z", "updated_at": "2016-08-16T17:39:28Z", "api": ["d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.line", "d3.select", "d3.csv", "d3.extent", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This is a simple graph demonstrating the addition of a table with a graph (open in full screen to see the table). This was written using d3.js v4 and is a follow on to the simple line graph example [here](http://bl.ocks.org/d3noob/402dd382a51a4f6eea487f9a35566de0). \n\nThis graph is part of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js.", "uid": "d3noob_3e5138a14cfc1822eedee2963c493399"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var margin = {top: 20, right:20, bottom: 150, left: 62};\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    \n    var fixDate = function (data) {\n      format = d3.time.format(\"%Y-%m-%d\");\n      data.sort(function(a,b) { return a.depth - b.depth})\n      data.forEach(function(d) {\n        if (d.spud_date) {\n          d.spud_date = format.parse(d.spud_date);\n        }      \n      });\n    }\n    \n    function update(wells) {\n      var newWells = d3.json(\"http://localhost:3000/api/nd.json\", function(data) {\n        newWells = data\n        console.log(\"newWells: \",newWells);\n      })\n      \n      fixDate(wells)\n    \n      var xExtent = d3.extent(wells, function(well) { return well.spud_date });\n      var yExtent = d3.extent(wells, function(well) { return well.depth });\n\n      var xScale = d3.time.scale()\n        .range([0, width])\n        .domain(xExtent);\n\n      var yScale = d3.scale.linear()\n        .range([height, 0])\n        .domain(yExtent);\n\n      var color = d3.scale.category20();\n\n      var xAxis = d3.svg.axis()\n        .scale(xScale)\n        .orient(\"bottom\");\n\n      var yAxis = d3.svg.axis()\n        .scale(yScale)\n        .orient(\"left\");\n\n      var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left +\", \" + margin.top + \")\");\n\n      svg.append(\"g\")\n        .attr(\"class\", \"axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n      .append(\"text\")\n        .attr(\"class\", \"label\")\n        .attr(\"x\", width)\n        .attr(\"y\", -6)\n        .style(\"text-anchor\", \"end\")\n        .text(\"Spud Date\")\n\n      svg.append(\"g\")\n        .attr(\"class\", \"axis\")\n        .call(yAxis)\n      .append(\"text\")\n        .attr(\"class\", \"label\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .text(\"Depth (ft)\")\n\n      svg.selectAll(\"circle\")\n        .data(wells)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", function(d) { return d.operator; })\n        .attr(\"cx\", function(d, i) { return xScale(d.spud_date); })\n        .attr(\"cy\", function (d) { return yScale(d.depth) })\n        .attr(\"r\", function(d) { return d.cum_oil / 40000})\n        .on(\"mouseover\", function(d) { console.log(d); })   \n      \n      d3.select('svg')\n    \t.on('click', function() {\n        d3.json(\"http://localhost:3000/api/nd.json\", function(data) {\n          newWells = data\n          console.log(\"newWells: \",newWells);\n      \t})\n        fixDate(newWells)\n        svg.selectAll('circle')\n          .data(newWells)\n          .transition()\n          .duration(1000)\n          .delay(function(d,i) { return i / 20; })\n          .attr(\"class\", function(d) { return d.operator; })\n          .attr(\"cx\", function(d, i) { return xScale(d.spud_date); })\n          .attr(\"cy\", function (d) { return yScale(d.depth); })\n          .attr(\"r\", function(d) { return d.cum_oil / 40142; })\n        //           \t.style(\"fill\", '#00FF00');\n        \n      });\n\n    }\n    \n\n   d3.json(\"http://localhost:3000/api/nd.json\", update)\n   \n   \n    \n    \t\n  </script>", "description": "well json 7", "created_at": "2016-08-16T17:16:48Z", "updated_at": "2016-08-17T16:08:33Z", "api": ["d3.time.format", "d3.json", "d3.extent", "d3.time.scale", "d3.scale.linear", "d3.scale.category20", "d3.svg.axis", "d3.select"], "readme": "Preloads data for next transition", "uid": "zukethenuke_dcb55d4b16a01a3d1bc45be99ddca2d0"}, {"code": "<script>\n\n\tvar n = 6;\n\n\tvar margin = {top: 50, right: 30, bottom: 30, left: 50},\n    \twidth = 800 - margin.left - margin.right,\n    \theight = 800 - margin.top - margin.bottom;\n\n\n    var y = d3.scale.ordinal().rangeBands([0, height],0,1),\n    \tx = d3.scale.ordinal().rangeBands([0, width],0,1),\n    \tc = d3.scale.category20().domain(d3.range(36));\n\n\n\tvar dragging = {};\n\n\n\tvar svg = d3.select(\"body\")\n\t\t.append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t\t.style(\"margin-left\", margin.left + \"px\")\n\t\t.append(\"g\")\n\t\t.attr(\"id\", \"matrix\")\n    \t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    var matrixA = [],\n    \tmatrixB = [],\n      \tnodes = [{\"name\": \"A\"},\n      \t\t\t{\"name\": \"B\"}, \n      \t\t\t{\"name\": \"C\"}, \n      \t\t\t{\"name\": \"D\"}, \n      \t\t\t{\"name\": \"E\"}, \n      \t\t\t{\"name\":\"F\"} ],\n      \tn = nodes.length;\n\n    nodes.forEach(function(node, i) {\n    \tnode.index = i;\n    \tnode.count = 0;\n    \tmatrixA[i] = d3.range(n).map(function(j) { \n    \t\treturn {x: j, y: i, z: 1 + (n * i) + j}; });\n    \tmatrixB[i] = d3.range(n).map(function(j) { \n    \t\treturn {x: i, y: j, z: (n * j) + 1 + i}; });\n  \t});\n  \t\n  \t\n\n \t// Default order\n  \tvar orders = {\n    \tname: d3.range(n).sort(function(a, b) { return d3.ascending(nodes[a].name, nodes[b].name); })\n  \t};\n\n  \t// The default sort order.\n  \ty.domain(orders.name);\n  \tx.domain(orders.name);\n\n\n  \tsvg.append(\"rect\")\n      .attr(\"class\", \"background\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n\n    var row = svg.selectAll(\".row\")\n      \t.data(matrixA)\n    \t.enter().append(\"g\")\n\t\t.attr(\"class\", \"row\")\n\t\t.attr(\"transform\", function(d, i) { \n\t\t\treturn \"translate(0,\" + y(i) + \")\"; })\n\t\t.each(row);\n\n\n\tvar column = svg.selectAll(\".column\")\n\t\t.data(matrixB)\n\t\t.enter().append(\"g\")\n\t\t.attr(\"class\", \"column\")\n\t\t.attr(\"transform\", function(d, i) { \n\t\t\treturn \"translate(\" + x(i) + \")rotate(-90)\"; })\n\t\t.each(column);\n\n\tvar drag_behavior = d3.behavior.drag();\n\tvar trigger;\n\n\n\td3.selectAll(\".row\").call(d3.behavior.drag()\n        .origin(function(d) { \n        \treturn {y: y(d[0].y)}; \n        })\n        .on(\"dragstart\", function(d) {\n\n        \ttrigger = d3.event.sourceEvent.target.className.baseVal;\n    \t\t\n    \t\tif (trigger == \"label\") {\n\t        \td3.selectAll(\".cellrow\").attr(\"opacity\", 1);\n\t\t\t\tdragging[d[0].y] = y(d[0].y);\n\n\t\t\t\t// Move the row that is moving on the front\n\t\t\t\tsel = d3.select(this);\n\t\t\t\tsel.moveToFront();\n\t\t\t}\n        })\n        .on(\"drag\", function(d) {\n        \t// Hide what is in the back\n\n        \tif (trigger == \"label\") {\n\n\t        \td3.selectAll(\".cellcolumn\").attr(\"opacity\", 0);\n\n\t          \tdragging[d[0].y] = Math.min(height, Math.max(0, d3.event.y));\n\t          \torders.name.sort(function(a, b) { return position(a) - position(b); });\n\t          \ty.domain(orders.name);\n\n\t          \td3.selectAll(\".row\").attr(\"transform\", function(d, i) { \n\t        \t\treturn \"translate(0,\" + position(d[0].y) + \")\"; \n\t        \t});\n\t        }\n        })\n        .on(\"dragend\", function(d) {\n\n        \tif (trigger == \"label\") {\n\t          \tdelete dragging[d[0].y];\n\t          \ttransition(d3.select(this)).attr(\"transform\", \"translate(0,\" + y(d[0].y) + \")\");\n\n\t          \td3.selectAll(\".column\").each(function(d) {\n\t            \td3.select(this).selectAll(\".cellcolumn\").attr(\"x\", function(d) { \n\t        \t\t\treturn -y(d.y)-90; });\n\t          \t});\n\t        }\n        })\n    );\n\n\trow.append(\"text\")\n\t\t.attr(\"class\", \"label\")\n\t\t.attr(\"x\", 60)\n\t\t.attr(\"y\", y.rangeBand() / 2)\n\t\t.attr(\"dy\", \".32em\")\n\t\t.attr(\"text-anchor\", \"end\")\n\t\t.text(function(d, i) { return nodes[i].name; });\n\n\n\td3.selectAll(\".column\").call(drag_behavior\n        .origin(function(d) {\n        \treturn {x: x(d[0].x)}; \n        })\n        .on(\"dragstart\", function(d) {\n\n        \ttrigger = d3.event.sourceEvent.target.className.baseVal;\n\n        \tif (trigger == \"label\") {\n\n\t        \td3.selectAll(\".cellcolumn\").attr(\"opacity\", 1);\n\n\t\t\t\tdragging[d[0].x] = x(d[0].x);\n\n\t\t\t\t// Move the column that is moving on the front\n\t\t\t\tsel = d3.select(this);\n\t\t\t\tsel.moveToFront();\n\t\t\t}\n        })\n        .on(\"drag\", function(d) {\n        \t// Hide what is in the back\n        \t// console.log(d3.event.x);\n        \t// console.log(d3.event.y);\n        \tif (trigger == \"label\") {\n   \t\t\t\td3.selectAll(\".cellrow\").attr(\"opacity\", 0);\n\n\t          \tdragging[d[0].x] = Math.min(width, Math.max(0, d3.event.x));\n\t          \torders.name.sort(function(a, b) { return cPosition(a) - cPosition(b); });\n\t          \tx.domain(orders.name);\n\n\t          \td3.selectAll(\".column\").attr(\"transform\", function(d, i) { \n\t        \t\treturn \"translate(\" + cPosition(d[0].x) + \")rotate(-90)\"; \n\t        \t});\n        \t}\n      \n\n        })\n        .on(\"dragend\", function(d) {\n          \tdelete dragging[d[0].x];\n          \ttransition(d3.select(this)).attr(\"transform\", \"translate(\" + x(d[0].x) + \")rotate(-90)\");\n          \td3.selectAll(\".row\").each(function(d, i) {\n            d3.select(this).selectAll(\".cellrow\").attr(\"x\", function(d) { \n        \t\treturn x(d.x); });\n          \t});\n\n        })\n    );\n\n  \tcolumn.append(\"text\")\n  \t\t.attr(\"class\", \"label\")\n\t\t.attr(\"x\", -60)\n\t\t.attr(\"y\", x.rangeBand() / 2)\n\t\t.attr(\"dy\", \".32em\")\n\t\t.attr(\"text-anchor\", \"start\")\n\t\t.text(function(d, i) { return nodes[i].name; });\n\n \n\t\t\n\tfunction row(row) {\n\t    var cell = d3.select(this).selectAll(\".cellrow\")\n\t\t\t.data(row.filter(function(d) { \n\t\t\t\treturn d.z; \n\t\t\t}))\n\t\t\t.enter().append(\"rect\")\n\t\t\t.attr(\"class\", \"cellrow\")\n\t\t\t.attr(\"x\", function(d) { \n\t\t\t\treturn y(d.x); \n\t\t\t})\n\t\t\t.attr(\"width\", y.rangeBand())\n\t\t\t.attr(\"height\", y.rangeBand())\n\t\t\t.style(\"fill\", function(d) { \n\t\t\t\treturn c(d.z); \n\t\t\t});\n  \t}\n\n  \tfunction column(column) {\n\t    var cell = d3.select(this).selectAll(\".cellcolumn\")\n\t\t\t.data(column.filter(function(d) { \n\t\t\t\treturn d.z; \n\t\t\t}))\n\t\t\t.enter().append(\"rect\")\n\t\t\t.attr(\"class\", \"cellcolumn\")\n\t\t\t.attr(\"x\", function(d) { \n\t\t\t\treturn -x(d.y)-90; \n\t\t\t})\n\t\t\t.attr(\"width\", x.rangeBand())\n\t\t\t.attr(\"height\", x.rangeBand())\n\t\t\t.style(\"fill\", function(d) { \n\t\t\t\treturn c(d.z); \n\t\t\t});\n\n  \t}\n\n  \td3.selection.prototype.moveToFront = function() {\n\t  \treturn this.each(function(){\n\t    \tthis.parentNode.appendChild(this);\n\t  \t});\n\t};\n\n\tfunction position(d) {\n\t  \tvar v = dragging[d];\n\t  \treturn v == null ? y(d) : v;\n\t}\n\n\tfunction cPosition(d) {\n\t  \tvar v = dragging[d];\n\t  \treturn v == null ? x(d) : v;\n\t}\n\n\tfunction transition(g) {\n\t  \treturn g.transition().duration(500);\n\t}\n\n\n\n</script>", "description": "D3 drag and drop matrix", "created_at": "2016-08-16T16:37:53Z", "updated_at": "2016-08-16T16:38:02Z", "api": ["d3.scale.ordinal", "d3.scale.category20", "d3.range", "d3.select", "d3.ascending", "d3.behavior.drag", "d3.selectAll"], "readme": "\n\nforked from <a href='http://bl.ocks.org/AlessandraSozzi/'>AlessandraSozzi</a>'s block: <a href='http://bl.ocks.org/AlessandraSozzi/9aff786dd04515d6b028'>D3 drag and drop: manually reorder rows and columns of a matrix</a>", "uid": "wenzelmk_65571021a4805fae8dab7163267aff2f"}, {"code": "<script>\n\n\tvar n = 6;\n\n\tvar margin = {top: 50, right: 30, bottom: 30, left: 50},\n    \twidth = 800 - margin.left - margin.right,\n    \theight = 800 - margin.top - margin.bottom;\n\n\n    var y = d3.scale.ordinal().rangeBands([0, height],0,1),\n    \tx = d3.scale.ordinal().rangeBands([0, width],0,1),\n    \tc = d3.scale.category20().domain(d3.range(36));\n\n\n\tvar dragging = {};\n\n\n\tvar svg = d3.select(\"body\")\n\t\t.append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t\t.style(\"margin-left\", margin.left + \"px\")\n\t\t.append(\"g\")\n\t\t.attr(\"id\", \"matrix\")\n    \t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    var matrixA = [],\n    \tmatrixB = [],\n      \tnodes = [{\"name\": \"A\"},\n      \t\t\t{\"name\": \"B\"}, \n      \t\t\t{\"name\": \"C\"}, \n      \t\t\t{\"name\": \"D\"}, \n      \t\t\t{\"name\": \"E\"}, \n      \t\t\t{\"name\":\"F\"} ],\n      \tn = nodes.length;\n\n    nodes.forEach(function(node, i) {\n    \tnode.index = i;\n    \tnode.count = 0;\n    \tmatrixA[i] = d3.range(n).map(function(j) { \n    \t\treturn {x: j, y: i, z: 1 + (n * i) + j}; });\n    \tmatrixB[i] = d3.range(n).map(function(j) { \n    \t\treturn {x: i, y: j, z: (n * j) + 1 + i}; });\n  \t});\n  \t\n  \t\n\n \t// Default order\n  \tvar orders = {\n    \tname: d3.range(n).sort(function(a, b) { return d3.ascending(nodes[a].name, nodes[b].name); })\n  \t};\n\n  \t// The default sort order.\n  \ty.domain(orders.name);\n  \tx.domain(orders.name);\n\n\n  \tsvg.append(\"rect\")\n      .attr(\"class\", \"background\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n\n    var row = svg.selectAll(\".row\")\n      \t.data(matrixA)\n    \t.enter().append(\"g\")\n\t\t.attr(\"class\", \"row\")\n\t\t.attr(\"transform\", function(d, i) { \n\t\t\treturn \"translate(0,\" + y(i) + \")\"; })\n\t\t.each(row);\n\n\n\tvar column = svg.selectAll(\".column\")\n\t\t.data(matrixB)\n\t\t.enter().append(\"g\")\n\t\t.attr(\"class\", \"column\")\n\t\t.attr(\"transform\", function(d, i) { \n\t\t\treturn \"translate(\" + x(i) + \")rotate(-90)\"; })\n\t\t.each(column);\n\n\tvar drag_behavior = d3.behavior.drag();\n\tvar trigger;\n\n\n\td3.selectAll(\".row\").call(d3.behavior.drag()\n        .origin(function(d) { \n        \treturn {y: y(d[0].y)}; \n        })\n        .on(\"dragstart\", function(d) {\n\n        \ttrigger = d3.event.sourceEvent.target.className.baseVal;\n    \t\t\n    \t\tif (trigger == \"label\") {\n\t        \td3.selectAll(\".cellrow\").attr(\"opacity\", 1);\n\t\t\t\tdragging[d[0].y] = y(d[0].y);\n\n\t\t\t\t// Move the row that is moving on the front\n\t\t\t\tsel = d3.select(this);\n\t\t\t\tsel.moveToFront();\n\t\t\t}\n        })\n        .on(\"drag\", function(d) {\n        \t// Hide what is in the back\n\n        \tif (trigger == \"label\") {\n\n\t        \td3.selectAll(\".cellcolumn\").attr(\"opacity\", 0);\n\n\t          \tdragging[d[0].y] = Math.min(height, Math.max(0, d3.event.y));\n\t          \torders.name.sort(function(a, b) { return position(a) - position(b); });\n\t          \ty.domain(orders.name);\n\n\t          \td3.selectAll(\".row\").attr(\"transform\", function(d, i) { \n\t        \t\treturn \"translate(0,\" + position(d[0].y) + \")\"; \n\t        \t});\n\t        }\n        })\n        .on(\"dragend\", function(d) {\n\n        \tif (trigger == \"label\") {\n\t          \tdelete dragging[d[0].y];\n\t          \ttransition(d3.select(this)).attr(\"transform\", \"translate(0,\" + y(d[0].y) + \")\");\n\n\t          \td3.selectAll(\".column\").each(function(d) {\n\t            \td3.select(this).selectAll(\".cellcolumn\").attr(\"x\", function(d) { \n\t        \t\t\treturn -y(d.y)-90; });\n\t          \t});\n\t        }\n        })\n    );\n\n\trow.append(\"text\")\n\t\t.attr(\"class\", \"label\")\n\t\t.attr(\"x\", 60)\n\t\t.attr(\"y\", y.rangeBand() / 2)\n\t\t.attr(\"dy\", \".32em\")\n\t\t.attr(\"text-anchor\", \"end\")\n\t\t.text(function(d, i) { return nodes[i].name; });\n\n\n\td3.selectAll(\".column\").call(drag_behavior\n        .origin(function(d) {\n        \treturn {x: x(d[0].x)}; \n        })\n        .on(\"dragstart\", function(d) {\n\n        \ttrigger = d3.event.sourceEvent.target.className.baseVal;\n\n        \tif (trigger == \"label\") {\n\n\t        \td3.selectAll(\".cellcolumn\").attr(\"opacity\", 1);\n\n\t\t\t\tdragging[d[0].x] = x(d[0].x);\n\n\t\t\t\t// Move the column that is moving on the front\n\t\t\t\tsel = d3.select(this);\n\t\t\t\tsel.moveToFront();\n\t\t\t}\n        })\n        .on(\"drag\", function(d) {\n        \t// Hide what is in the back\n        \t// console.log(d3.event.x);\n        \t// console.log(d3.event.y);\n        \tif (trigger == \"label\") {\n   \t\t\t\td3.selectAll(\".cellrow\").attr(\"opacity\", 0);\n\n\t          \tdragging[d[0].x] = Math.min(width, Math.max(0, d3.event.x));\n\t          \torders.name.sort(function(a, b) { return cPosition(a) - cPosition(b); });\n\t          \tx.domain(orders.name);\n\n\t          \td3.selectAll(\".column\").attr(\"transform\", function(d, i) { \n\t        \t\treturn \"translate(\" + cPosition(d[0].x) + \")rotate(-90)\"; \n\t        \t});\n        \t}\n      \n\n        })\n        .on(\"dragend\", function(d) {\n          \tdelete dragging[d[0].x];\n          \ttransition(d3.select(this)).attr(\"transform\", \"translate(\" + x(d[0].x) + \")rotate(-90)\");\n          \td3.selectAll(\".row\").each(function(d, i) {\n            d3.select(this).selectAll(\".cellrow\").attr(\"x\", function(d) { \n        \t\treturn x(d.x); });\n          \t});\n\n        })\n    );\n\n  \tcolumn.append(\"text\")\n  \t\t.attr(\"class\", \"label\")\n\t\t.attr(\"x\", -60)\n\t\t.attr(\"y\", x.rangeBand() / 2)\n\t\t.attr(\"dy\", \".32em\")\n\t\t.attr(\"text-anchor\", \"start\")\n\t\t.text(function(d, i) { return nodes[i].name; });\n\n \n\t\t\n\tfunction row(row) {\n\t    var cell = d3.select(this).selectAll(\".cellrow\")\n\t\t\t.data(row.filter(function(d) { \n\t\t\t\treturn d.z; \n\t\t\t}))\n\t\t\t.enter().append(\"rect\")\n\t\t\t.attr(\"class\", \"cellrow\")\n\t\t\t.attr(\"x\", function(d) { \n\t\t\t\treturn y(d.x); \n\t\t\t})\n\t\t\t.attr(\"width\", y.rangeBand())\n\t\t\t.attr(\"height\", y.rangeBand())\n\t\t\t.style(\"fill\", function(d) { \n\t\t\t\treturn c(d.z); \n\t\t\t});\n  \t}\n\n  \tfunction column(column) {\n\t    var cell = d3.select(this).selectAll(\".cellcolumn\")\n\t\t\t.data(column.filter(function(d) { \n\t\t\t\treturn d.z; \n\t\t\t}))\n\t\t\t.enter().append(\"rect\")\n\t\t\t.attr(\"class\", \"cellcolumn\")\n\t\t\t.attr(\"x\", function(d) { \n\t\t\t\treturn -x(d.y)-90; \n\t\t\t})\n\t\t\t.attr(\"width\", x.rangeBand())\n\t\t\t.attr(\"height\", x.rangeBand())\n\t\t\t.style(\"fill\", function(d) { \n\t\t\t\treturn c(d.z); \n\t\t\t});\n\n  \t}\n\n  \td3.selection.prototype.moveToFront = function() {\n\t  \treturn this.each(function(){\n\t    \tthis.parentNode.appendChild(this);\n\t  \t});\n\t};\n\n\tfunction position(d) {\n\t  \tvar v = dragging[d];\n\t  \treturn v == null ? y(d) : v;\n\t}\n\n\tfunction cPosition(d) {\n\t  \tvar v = dragging[d];\n\t  \treturn v == null ? x(d) : v;\n\t}\n\n\tfunction transition(g) {\n\t  \treturn g.transition().duration(500);\n\t}\n\n\n\n</script>", "description": "drag n drop matrix", "created_at": "2016-08-16T16:36:54Z", "updated_at": "2016-08-16T16:37:07Z", "api": ["d3.scale.ordinal", "d3.scale.category20", "d3.range", "d3.select", "d3.ascending", "d3.behavior.drag", "d3.selectAll"], "readme": "\n\nforked from <a href='http://bl.ocks.org/AlessandraSozzi/'>AlessandraSozzi</a>'s block: <a href='http://bl.ocks.org/AlessandraSozzi/9aff786dd04515d6b028'>D3 drag and drop: manually reorder rows and columns of a matrix</a>\n\nforked from <a href='http://bl.ocks.org/wenzelmk/'>wenzelmk</a>'s block: <a href='http://bl.ocks.org/wenzelmk/57be5122d5de8c023f7a1e205055f6f7'>D3 drag and drop: manually reorder rows and columns of a matrix</a>", "uid": "wenzelmk_7ea800501bb099a83f370ab55f09f61e"}, {"code": "<script>\n\n\tvar n = 6;\n\n\tvar margin = {top: 50, right: 30, bottom: 30, left: 50},\n    \twidth = 800 - margin.left - margin.right,\n    \theight = 800 - margin.top - margin.bottom;\n\n\n    var y = d3.scale.ordinal().rangeBands([0, height],0,1),\n    \tx = d3.scale.ordinal().rangeBands([0, width],0,1),\n    \tc = d3.scale.category20().domain(d3.range(36));\n\n\n\tvar dragging = {};\n\n\n\tvar svg = d3.select(\"body\")\n\t\t.append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t\t.style(\"margin-left\", margin.left + \"px\")\n\t\t.append(\"g\")\n\t\t.attr(\"id\", \"matrix\")\n    \t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    var matrixA = [],\n    \tmatrixB = [],\n      \tnodes = [{\"name\": \"A\"},\n      \t\t\t{\"name\": \"B\"}, \n      \t\t\t{\"name\": \"C\"}, \n      \t\t\t{\"name\": \"D\"}, \n      \t\t\t{\"name\": \"E\"}, \n      \t\t\t{\"name\":\"F\"} ],\n      \tn = nodes.length;\n\n    nodes.forEach(function(node, i) {\n    \tnode.index = i;\n    \tnode.count = 0;\n    \tmatrixA[i] = d3.range(n).map(function(j) { \n    \t\treturn {x: j, y: i, z: 1 + (n * i) + j}; });\n    \tmatrixB[i] = d3.range(n).map(function(j) { \n    \t\treturn {x: i, y: j, z: (n * j) + 1 + i}; });\n  \t});\n  \t\n  \t\n\n \t// Default order\n  \tvar orders = {\n    \tname: d3.range(n).sort(function(a, b) { return d3.ascending(nodes[a].name, nodes[b].name); })\n  \t};\n\n  \t// The default sort order.\n  \ty.domain(orders.name);\n  \tx.domain(orders.name);\n\n\n  \tsvg.append(\"rect\")\n      .attr(\"class\", \"background\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n\n    var row = svg.selectAll(\".row\")\n      \t.data(matrixA)\n    \t.enter().append(\"g\")\n\t\t.attr(\"class\", \"row\")\n\t\t.attr(\"transform\", function(d, i) { \n\t\t\treturn \"translate(0,\" + y(i) + \")\"; })\n\t\t.each(row);\n\n\n\tvar column = svg.selectAll(\".column\")\n\t\t.data(matrixB)\n\t\t.enter().append(\"g\")\n\t\t.attr(\"class\", \"column\")\n\t\t//.attr(\"transform\", function(d, i) { \n\t\t//\treturn \"translate(\" + x(i) + \")rotate(-90)\"; })\n\t\t//.each(column);\n\n\tvar drag_behavior = d3.behavior.drag();\n\tvar trigger;\n\n\n\td3.selectAll(\".row\").call(d3.behavior.drag()\n        .origin(function(d) { \n        \treturn {y: y(d[0].y)}; \n        })\n        .on(\"dragstart\", function(d) {\n\n        \ttrigger = d3.event.sourceEvent.target.className.baseVal;\n    \t\t\n    \t\tif (trigger == \"label\") {\n\t        \td3.selectAll(\".cellrow\").attr(\"opacity\", 1);\n\t\t\t\tdragging[d[0].y] = y(d[0].y);\n\n\t\t\t\t// Move the row that is moving on the front\n\t\t\t\tsel = d3.select(this);\n\t\t\t\tsel.moveToFront();\n\t\t\t}\n        })\n        .on(\"drag\", function(d) {\n        \t// Hide what is in the back\n\n        \tif (trigger == \"label\") {\n\n\t        \td3.selectAll(\".cellcolumn\").attr(\"opacity\", 0);\n\n\t          \tdragging[d[0].y] = Math.min(height, Math.max(0, d3.event.y));\n\t          \torders.name.sort(function(a, b) { return position(a) - position(b); });\n\t          \ty.domain(orders.name);\n\n\t          \td3.selectAll(\".row\").attr(\"transform\", function(d, i) { \n\t        \t\treturn \"translate(0,\" + position(d[0].y) + \")\"; \n\t        \t});\n\t        }\n        })\n        .on(\"dragend\", function(d) {\n\n        \tif (trigger == \"label\") {\n\t          \tdelete dragging[d[0].y];\n\t          \ttransition(d3.select(this)).attr(\"transform\", \"translate(0,\" + y(d[0].y) + \")\");\n\n\t          \td3.selectAll(\".column\").each(function(d) {\n\t            \td3.select(this).selectAll(\".cellcolumn\").attr(\"x\", function(d) { \n\t        \t\t\treturn -y(d.y)-90; });\n\t          \t});\n\t        }\n        })\n    );\n\n\trow.append(\"text\")\n\t\t.attr(\"class\", \"label\")\n\t\t.attr(\"x\", 60)\n\t\t.attr(\"y\", y.rangeBand() / 2)\n\t\t.attr(\"dy\", \".32em\")\n\t\t.attr(\"text-anchor\", \"end\")\n\t\t.text(function(d, i) { return nodes[i].name; });\n\n\n\td3.selectAll(\".column\").call(drag_behavior\n        .origin(function(d) {\n        \treturn {x: x(d[0].x)}; \n        })\n        .on(\"dragstart\", function(d) {\n\n        \ttrigger = d3.event.sourceEvent.target.className.baseVal;\n\n        \tif (trigger == \"label\") {\n\n\t        \td3.selectAll(\".cellcolumn\").attr(\"opacity\", 1);\n\n\t\t\t\tdragging[d[0].x] = x(d[0].x);\n\n\t\t\t\t// Move the column that is moving on the front\n\t\t\t\tsel = d3.select(this);\n\t\t\t\tsel.moveToFront();\n\t\t\t}\n        })\n        .on(\"drag\", function(d) {\n        \t// Hide what is in the back\n        \t// console.log(d3.event.x);\n        \t// console.log(d3.event.y);\n        \tif (trigger == \"label\") {\n   \t\t\t\td3.selectAll(\".cellrow\").attr(\"opacity\", 0);\n\n\t          \tdragging[d[0].x] = Math.min(width, Math.max(0, d3.event.x));\n\t          \torders.name.sort(function(a, b) { return cPosition(a) - cPosition(b); });\n\t          \tx.domain(orders.name);\n\n\t          \td3.selectAll(\".column\").attr(\"transform\", function(d, i) { \n\t        \t\treturn \"translate(\" + cPosition(d[0].x) + \")rotate(-90)\"; \n\t        \t});\n        \t}\n      \n\n        })\n        .on(\"dragend\", function(d) {\n          \tdelete dragging[d[0].x];\n          \ttransition(d3.select(this)).attr(\"transform\", \"translate(\" + x(d[0].x) + \")rotate(-90)\");\n          \td3.selectAll(\".row\").each(function(d, i) {\n            d3.select(this).selectAll(\".cellrow\").attr(\"x\", function(d) { \n        \t\treturn x(d.x); });\n          \t});\n\n        })\n    );\n\n  \tcolumn.append(\"text\")\n  \t\t.attr(\"class\", \"label\")\n\t\t.attr(\"x\", -60)\n\t\t.attr(\"y\", x.rangeBand() / 2)\n\t\t.attr(\"dy\", \".32em\")\n\t\t.attr(\"text-anchor\", \"start\")\n\t\t.text(function(d, i) { return nodes[i].name; });\n\n \n\t\t\n\tfunction row(row) {\n\t    var cell = d3.select(this).selectAll(\".cellrow\")\n\t\t\t.data(row.filter(function(d) { \n\t\t\t\treturn d.z; \n\t\t\t}))\n\t\t\t.enter().append(\"rect\")\n\t\t\t.attr(\"class\", \"cellrow\")\n\t\t\t.attr(\"x\", function(d) { \n\t\t\t\treturn y(d.x); \n\t\t\t})\n\t\t\t.attr(\"width\", y.rangeBand())\n\t\t\t.attr(\"height\", y.rangeBand())\n\t\t\t.style(\"fill\", function(d) { \n\t\t\t\treturn c(d.z); \n\t\t\t});\n  \t}\n\n  \tfunction column(column) {\n\t    var cell = d3.select(this).selectAll(\".cellcolumn\")\n\t\t\t.data(column.filter(function(d) { \n\t\t\t\treturn d.z; \n\t\t\t}))\n\t\t\t.enter().append(\"rect\")\n\t\t\t.attr(\"class\", \"cellcolumn\")\n\t\t\t.attr(\"x\", function(d) { \n\t\t\t\treturn -x(d.y)-90; \n\t\t\t})\n\t\t\t.attr(\"width\", x.rangeBand())\n\t\t\t.attr(\"height\", x.rangeBand())\n\t\t\t.style(\"fill\", function(d) { \n\t\t\t\treturn c(d.z); \n\t\t\t});\n\n  \t}\n\n  \td3.selection.prototype.moveToFront = function() {\n\t  \treturn this.each(function(){\n\t    \tthis.parentNode.appendChild(this);\n\t  \t});\n\t};\n\n\tfunction position(d) {\n\t  \tvar v = dragging[d];\n\t  \treturn v == null ? y(d) : v;\n\t}\n\n\tfunction cPosition(d) {\n\t  \tvar v = dragging[d];\n\t  \treturn v == null ? x(d) : v;\n\t}\n\n\tfunction transition(g) {\n\t  \treturn g.transition().duration(500);\n\t}\n\n\n\n</script>", "description": "blur blur blurrr", "created_at": "2016-08-16T16:33:57Z", "updated_at": "2016-08-16T16:36:35Z", "api": ["d3.scale.ordinal", "d3.scale.category20", "d3.range", "d3.select", "d3.ascending", "d3.behavior.drag", "d3.selectAll"], "readme": "\n\nforked from <a href='http://bl.ocks.org/AlessandraSozzi/'>AlessandraSozzi</a>'s block: <a href='http://bl.ocks.org/AlessandraSozzi/9aff786dd04515d6b028'>D3 drag and drop: manually reorder rows and columns of a matrix</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/ff0eac1eff6279b607b6feec7134d03e'>D3 drag and drop: manually reorder rows and columns of a matrix</a>", "uid": "wenzelmk_91a1bd21a2dabb75903d1b40b7a89117"}, {"code": "<script>\n       var margin = { top: 10, left: 100, bottom: 30, right: 50 },\n           width = 960 - margin.left - margin.right,\n           height = 600 - margin.top - margin.bottom;\n       \n       var x = function(d) { return d.rating; },\n           y = function(d) { return d.genre; },\n           area = function(d) { return d.budget; };\n       \n       var xScale = d3.scale.linear()\n             .domain([0, 10])\n             .range([0, width]),\n           yScale = d3.scale.ordinal()\n             .domain([\"Comedy\", \"Action\", \"Romance\", \"Animation\", \"Drama\"])\n             .rangeBands([height, 0]),\n           areaScale = d3.scale.linear().range([0, 125]),\n           colorScale = d3.scale.quantize()\n            .domain([0, 10])\n            .range([\"#AB879C\",\"#928EAB\",\"#6C97B0\",\"#3E9EA7\",\"#1BA38F\",\n                    \"#37A46C\",\"#62A145\",\"#8D991C\",\"#B98A00\",\"#E07423\"]);\n       \n       var xValue = function(d) { return xScale(x(d)); },\n           yValue = function(d) { return yScale(y(d)) + yScale.rangeBand()/2; },\n           rValue = function(d) {\n             var A = areaScale(area(d));\n             return Math.sqrt(A / Math.PI);\n           },\n           colorValue = function(d) { return colorScale(x(d)); };\n       \n       var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\"),\n           yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n       \n       var bubbleChart = d3.forceChart()\n        .size([width, height])\n        .x(xValue)\n        .y(yValue)\n        .r(rValue)\n        .xGravity(3)    // make the x-position more accurate\n        .yGravity(1/3); // ...and the y-position more flexible\n        \n       var svg = d3.select(\"body\").append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n       \n       d3.json(\"movies.json\", function(error, movies) {\n         if (error) throw error;\n         \n         areaScale.domain([0,d3.max(movies, area)]);\n         \n         // Draw axes\n         svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis)\n          .append(\"text\")\n            .attr(\"dx\", width)\n            .attr(\"dy\", -6)\n            .style(\"text-anchor\", \"end\")\n            .text(\"IMDB Rating\");\n          \n         svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .call(yAxis)\n          .selectAll(\".tick line\")\n            .attr(\"x2\", width)\n            .attr(\"stroke-dasharray\", \"1, 2\")\n            .style(\"stroke\", \"lightgrey\");\n         \n         // Draw legend\n         svg.append(\"g\").call(legend);\n            \n         // Draw bubbles\n         svg.append(\"g\").call(bubbleChart, movies)\n            .attr(\"class\", \"bubbles\")\n          .selectAll(\".node\").append(\"circle\")\n            .attr(\"r\", function(d) { return d.r0; })\n            .attr(\"fill\", colorValue)\n            .attr(\"stroke\", \"slategrey\");\n       });\n       \n       function legend(selection) {\n         var legendData = [\n           { budget: 200000000, text: \"$200 million\", dy: 0 },\n           { budget: 100000000, text: \"$100 million\", dy: 20 },\n           { budget: 50000000, text: \"$50 million\", dy: 40 },\n           { budget: 10000000, text: \"$10 million\", dy: 60 }\n         ];\n         \n         var legend = selection\n            .attr(\"class\", \"legend\")\n            .attr(\"transform\", \"translate(\" + xScale(9.5) + \",\" + (height/2 - 30) + \")\");\n         \n         legend.append(\"text\")\n          .attr(\"dx\", -6)\n          .attr(\"dy\", -16)\n          .text(\"Budget\");\n          \n         legend.selectAll(\".item\").data(legendData)\n          .enter().append(\"g\")\n            .attr(\"transform\", function(d) { return \"translate(0,\" + d.dy + \")\"; })\n            .each(function(d) {\n              d3.select(this).append(\"circle\")\n                .attr(\"r\", rValue(d))\n                .style(\"fill\", \"none\")\n                .style(\"stroke\", \"slategrey\");\n              d3.select(this).append(\"text\")\n                .attr(\"dx\", 10)\n                .attr(\"dy\", 4)\n                .text(d.text);\n            });\n       }\n     </script>", "description": "Movie Genre, Rating and Budget", "created_at": "2016-08-16T15:25:06Z", "updated_at": "2016-08-16T15:25:07Z", "api": ["d3.layout.force", "d3.geom.quadtree", "d3.scale.linear", "d3.scale.ordinal", "d3.scale.quantize", "d3.svg.axis", "d3.forceChart", "d3.select", "d3.json", "d3.max"], "readme": "IMDB movie ratings by genre. Movies with bigger budgets have bigger \nbubbles. \n \nUses the [d3.forceChart()](https://github.com/armollica/force-chart) plugin. \nData are from the [ggplot2](http://docs.ggplot2.org/0.9.3/movies.html) R package.\n\nforked from <a href='http://bl.ocks.org/armollica/'>armollica</a>'s block: <a href='http://bl.ocks.org/armollica/2dcfd66a64922990995f905aa0dc4d7b'>Movie Genre, Rating and Budget</a>", "uid": "jamescwaters_9f096e2c9d9f2bcfbf56c21d26519500"}, {"code": "<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 40, bottom: 60, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// parse the date / time\nvar parseTime = d3.timeParse(\"%d-%b-%y\");\n\n// set the ranges\nvar x = d3.scaleTime().range([0, width]);\nvar y0 = d3.scaleLinear().range([height, 0]);\nvar y1 = d3.scaleLinear().range([height, 0]);\n\n// define the 1st line\nvar valueline = d3.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y0(d.close); });\n\n// define the 2nd line\nvar valueline2 = d3.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y1(d.open); });\n\n// append the svg obgect to the body of the page\n// appends a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// get the data\nd3.csv(\"data4.csv\", function(error, data) {\n  if (error) throw error;\n\n  // format the data\n  data.forEach(function(d) {\n      d.date = parseTime(d.date);\n      d.close = +d.close;\n      d.open = +d.open;\n  });\n\n  // scale the range of the data\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y0.domain([0, d3.max(data, function(d) {return Math.max(d.close);})]);\n  y1.domain([0, d3.max(data, function(d) {return Math.max(d.open); })]);\n\n  // add the valueline path.\n  svg.append(\"path\")\n      .data([data])\n      .attr(\"class\", \"line\")\n      .attr(\"id\", \"blueLine\")\n      .attr(\"d\", valueline);\n\n  // add the valueline2 path.\n  svg.append(\"path\")\n      .data([data])\n      .attr(\"class\", \"line\")\n      .attr(\"id\", \"redLine\")\n      .style(\"stroke\", \"red\")\n      .attr(\"d\", valueline2);\n\n  // add the X Axis\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // add the Y0 Axis\n  svg.append(\"g\")\n      .attr(\"class\", \"axisSteelBlue\")\n      .call(d3.axisLeft(y0));\n\n  // add the Y1 Axis\n  svg.append(\"g\")\n      .attr(\"class\", \"axisRed\")\n      .attr(\"transform\", \"translate( \" + width + \", 0 )\")\n      .call(d3.axisRight(y1));\n\n  // add the blue line legend\n  svg.append(\"text\")\n     .attr(\"x\", 0)             \n     .attr(\"y\", height + margin.top + 15)    \n     .attr(\"class\", \"legend\")\n     .style(\"fill\", \"steelblue\")         \n     .on(\"click\", function(){\n       // determine if current line is visible\n       var active   = blueLine.active ? false : true,\n       newOpacity = active ? 0 : 1;\n       // hide or show the elements\n       d3.select(\"#blueLine\").style(\"opacity\", newOpacity);\n       // update whether or not the elements are active\n       blueLine.active = active;\n     })\n     .text(\"Blue Line\");\n\n  // add the red line legend\n  svg.append(\"text\")\n     .attr(\"x\", 0)             \n     .attr(\"y\", height + margin.top + 35)    \n     .attr(\"class\", \"legend\")\n     .style(\"fill\", \"red\")         \n     .on(\"click\", function(){\n       // determine if current line is visible\n       var active   = redLine.active ? false : true,\n       newOpacity = active ? 0 : 1;\n       // hide or show the elements\n       d3.select(\"#redLine\").style(\"opacity\", newOpacity);\n       // update whether or not the elements are active\n       redLine.active = active;\n     })\n     .text(\"Red Line\");\n\n});\n\n</script>", "description": "Toggling element visibility in v4 ", "created_at": "2016-08-16T08:27:41Z", "updated_at": "2016-08-16T08:53:58Z", "api": ["d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.line", "d3.select", "d3.csv", "d3.extent", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.axisRight"], "readme": "This is a multiple line graph demonstrating how to show / hide elements by clicking on other elements. This was written using d3.js v4 and is a follow on to the multiple line graph example [here](http://bl.ocks.org/d3noob/814a2bcb3e7d8d8db74f36f77c8e6b7f). \n\nThis graph is part of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js.", "uid": "d3noob_4abb9dc578abf070fe62302282a29c41"}, {"code": "<script>\nvar someColors = d3.scale.category20b();\n\n\nd3.json(\"miserables.json\", createArcDiagram);\n\nfunction createArcDiagram(data) {\n  //create some random back links just to demo the functionality\n  data.links.forEach(function (link) {\n    if (Math.random() < .1) {\n      data.links.push({source: link.target, target: link.source, value: 1})\n    }\n  });\n\n  var arcDiagram = d3.layout.arcDiagram()\n  .size([450,250])\n  .nodes(data.nodes)\n  .links(data.links)\n  .nodeID(function (d) {return d.name});\n\n  //initialize the arc diagram\n  arcDiagram();\n\n      var arcG = d3.select(\"svg#arc-diagram\")\n      .append(\"g\").attr(\"id\", \"arcG\")\n      .attr(\"transform\", \"translate(25,0)\");\n\n      arcG.selectAll(\"path\")\n         .data(data.links)\n         .enter()\n         .append(\"path\")\n         .attr(\"class\", \"arc\")\n         .style(\"stroke\", function (d) {return someColors(d.source.group)})\n         .style(\"stroke-width\", 2)\n         .style(\"opacity\", .25)\n         .style(\"fill\", \"none\")\n         .attr(\"d\", arcDiagram.arc);\n\n    arcG.selectAll(\"circle\")\n        .data(data.nodes)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"node\")\n        .attr(\"r\", 2)\n        .style(\"fill\", function (d) {return someColors(d.group)})\n        .attr(\"cx\", function (d) {return d.x;})\n        .attr(\"cy\", function (d) {return d.y});\n\n}\n\n</script>", "description": "Simple Arc Diagram Layout", "created_at": "2016-08-15T04:37:47Z", "updated_at": "2016-08-15T04:37:47Z", "api": ["d3.svg.line", "d3.scale.category20b", "d3.json", "d3.layout.arcDiagram", "d3.select"], "readme": "An example of a [simple arc diagram](https://github.com/emeeks/d3.layout.arcDiagram) layout I wrote for an upcoming workshop on network data visualization.\n\nforked from <a href='http://bl.ocks.org/emeeks/'>emeeks</a>'s block: <a href='http://bl.ocks.org/emeeks/8d75da95d1e78cd08899'>Simple Arc Diagram Layout</a>", "uid": "Thanaporn-sk_79519f63d82d58c16dfa4ce762e58afd"}, {"code": "<script>\nd3.csv('data.csv', function(day_data) {\n  var formatDate = d3.time.format(\"%Y-%m-%d\");\n  var bisectDate = d3.bisector(function(d) { return formatDate.parse(d['date']); }).left;\n\n  // fix those integers\n  day_data.forEach(function(d, i) {\n    d.value = parseInt(d.value);\n  });\n\n  ///////////////////////\n  // generate weekly data\n  var week_data = create_time_unit_data(parse_for_week);\n\n  function parse_for_week(date) {\n    return formatDate.parse(date).getDay();\n  }\n\n  ///////////////////////\n  // generate monthly data\n  var month_data = create_time_unit_data(parse_for_month);\n\n  function parse_for_month(date) {\n    return formatDate.parse(date).getDate() - 1;\n  }\n\n  ///////////////////////\n  // helper functions\n  function create_time_unit_data(parse_date) {\n    var new_data = JSON.parse(JSON.stringify(day_data));\n    new_data.forEach(function(d, i) {\n      var offset = parse_date(d.date);\n      if(offset == 0 || i == 0 || i == day_data.length - 1) { // it's a new date_unit, or this is the first or last date in the array\n        d['start'] = true;\n      } else {\n        d['start'] = false;\n\n        // add this value to the start of the week\n        var tar_idx = i - offset;\n        if(tar_idx < 0) { tar_idx = 0; }\n        new_data[tar_idx].value += d.value;\n\n        // then nil out\n        d.value = -1;\n      }\n    });\n\n    fill_in_gaps(new_data);\n    return new_data;\n  }\n\n  function fill_in_gaps(data_array) {\n    // go back in and fill in the missing dates\n    data_array.forEach(function(d, i) {\n      if(d.start == false) {\n        var prev_val, next_val, prev_dist, next_dist;\n        for(var idx = i; idx>=0; idx--) {\n          if(data_array[idx].start == true) {\n            prev_val = data_array[idx].value;\n            prev_dist = i - idx;\n            break;\n          }\n        }\n\n        for(var idx = i; idx < data_array.length; idx++) {\n          if(data_array[idx].start == true) {\n            next_val = data_array[idx].value;\n            next_dist = idx - i;\n            break;\n          }\n        }\n\n        d.value = prev_val + ((next_val - prev_val) * (prev_dist/ (prev_dist + next_dist)));\n      }\n    });\n  }\n\n  ///////////////////////\n  // Time unit selection buttons\n  var all_data = [\n    { 'name': 'daily', 'data': day_data},\n    { 'name': 'weekly', 'data': week_data},\n    { 'name': 'monthly', 'data': month_data}\n  ];\n\n  d3.select('.button-area').selectAll('.app-button')\n    .data(all_data)\n    .enter().append('button')\n    .attr('class', 'app-button')\n    .html(function(d) { return d.name; })\n    .on('click', function(d) {\n      curr_data = d.data;\n      updateChart();\n    });\n\n  ///////////////////////\n  // Chart Size Setup\n  var margin = { top: 40, right: 50, bottom: 20, left: 20 };\n\n  var width = 840 - margin.left - margin.right;\n  var height = 500 - margin.top - margin.bottom;\n\n  var chart = d3.select(\".chart\")\n      .attr(\"width\", 840)\n      .attr(\"height\", 500)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  ///////////////////////\n  // Title\n  chart.append(\"text\")\n    .text(\"Time Series\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"class\", \"graph-title\")\n    .attr(\"y\", -10)\n    .attr(\"x\", width / 2.0);\n\n  chart.append(\"text\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"style\", \"font-size: 0.9em\")\n    .attr(\"y\", height + 50)\n    .attr(\"x\", width / 2.0);\n\n  ///////////////////////\n  // Scales\n  var x = d3.time.scale()\n      .domain(d3.extent(day_data, function(d) { return formatDate.parse(d.date); }))\n      .range([0, width]);\n\n  var y;\n\n  ///////////////////////\n  // Axis\n  var xAxis = d3.svg.axis()\n      .scale(x)\n      .orient(\"bottom\");\n\n  chart.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  ///////////////////////\n  // Tooltips\n  var overlay = chart.append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"mouseover\", function() { chart.selectAll('.focus').style(\"display\", null); })\n      .on(\"mouseout\", function() { chart.selectAll('.focus').style(\"display\", \"none\"); })\n\n  var tooltip = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\");\n\n  var focus = chart.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .style(\"display\", \"none\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 4.5)\n\n  focus.append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dy\", \".35em\");\n\n  ///////////////////////\n  // DYNAMIC STUFF GOES HERE\n  // any data things that need to update (yxis, lines, etc)\n  function updateChart() {\n    ///////////////////////\n    // Y axis changes\n    y = d3.scale.linear()\n        .domain([0, d3.max(curr_data, function(d) { return d.value; })])\n        .range([height, 0]);\n\n    var yAxis = d3.svg.axis()\n        .scale(y)\n        .orient(\"right\");\n\n    // remove any old axis\n    chart.selectAll(\".y-axis\").remove()\n\n    chart.append(\"g\")\n        .attr(\"class\", \"y axis y-axis\")\n        .attr(\"transform\", \"translate(\" + (width + 5) + \",0)\")\n        .call(yAxis);\n\n    ///////////////////////\n    // Line changes\n    var lineGenerator = d3.svg.line()\n        .x(function(d) { return x(formatDate.parse(d.date)) })\n        .y(function(d) { return y(d.value) });\n\n    var lines = chart.selectAll(\".line\")\n        .data([curr_data])\n\n    lines.enter().append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", lineGenerator);\n\n    lines.transition()\n        .duration(1000)\n        .attr(\"d\", lineGenerator);\n\n    overlay.on(\"mousemove\", mousemove);\n  }\n\n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        i = bisectDate(curr_data, x0, 1),\n        d0 = curr_data[i - 1],\n        d1 = curr_data[i];\n\n    // search for dates where \"start\" == true, in other words, only valid dates for the dataset\n    // start of week, start of month\n    var i0 = i - 1;\n    while(d0.start == false && i0 > 0) {\n      i0 -= 1;\n      d0 = curr_data[i0];\n    }\n    var i1 = i;\n    while(d1.start == false && i1 < curr_data.length - 1) {\n      i1 += 1;\n      d1 = curr_data[i1];\n    }\n\n    var dIdx = x0 - d0.date > d1.date - x0 ? i1 : i0;\n\n    var tar_date = curr_data[dIdx]['date'];\n    var tooltip_string = tar_date;\n\n    var tar_value = curr_data[dIdx].value;\n    focus.attr(\"transform\", \"translate(\" + x(formatDate.parse(tar_date)) + \",\"+y(tar_value)+ \")\");\n    tooltip_string += \"<br>\" + tar_value;\n\n    tooltip.html(tooltip_string)\n      .style(\"visibility\", \"visible\")\n      .style(\"top\", d3.mouse(this)[1] - (tooltip[0][0].clientHeight - 30) + \"px\")\n      .style(\"left\", d3.mouse(this)[0] - (tooltip[0][0].clientWidth / 2.0) + \"px\");\n  }\n\n  // default\n  curr_data = day_data;\n  updateChart();\n});\n</script>", "description": "D3 Day/Week/Month Line Chart", "created_at": "2016-08-13T22:59:32Z", "updated_at": "2016-08-14T19:08:46Z", "api": ["d3.csv", "d3.time.format", "d3.bisector", "d3.select", "d3.time.scale", "d3.extent", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.svg.line", "d3.mouse"], "readme": "## D3 Time Series Day/Week/Month\n\nWanted to create a (daily) time series chart with automatic rollups to\nweekly/monthly lines AND nice transitions\n\n## Solution\n\nThe solution I ended up going with is a bit of an optical illusion.\n\nAll three views are technically backed by \"daily\" data.\n\nThe weekly and monthly views though have had their data modified to\nrollup to the first of the week/month, and then all in between values\nare interpolated to create even slopes.\n\nFor example, given this daily data:\n```\ndate, value\n2014-01-01, 10\n2014-01-02, 10\n2014-01-03, 10\n2014-01-04, 10\n2014-01-05, 10\n2014-01-06, 10\n2014-01-07, 10\n\n2014-01-08, 1\n2014-01-09, 1\n2014-01-10, 1\n2014-01-11, 1\n2014-01-12, 1\n2014-01-13, 1\n2014-01-14, 1\n```\n\nwe first rollup to the first of the week\n```\n2014-01-01, 70\n2014-01-02, 0\n2014-01-03, 0\n...\n2014-01-08, 7\n2014-01-09, 0\n2014-01-10, 0\n```\n\nand then interpolate the remaining values\n```\n2014-01-01, 70\n2014-01-02, 61\n2014-01-03, 52\n...\n2014-01-08, 7\n```\n\n## Issues\n\nOne big down-side to this (besides the fact that the code isn't very\nsimple) is that the various d3 interpolations (line smoothing) won't\nwork anymore.\n\nIf anyone knows of an easier way to do this ping me on github or leave a\ncomment on the gist.\n\n## TODO:\n\n- [ ] something is off with the end of the month view, need to figure that out\n", "uid": "cjhin_8872a492d44694ecf5a883642926f19c"}, {"code": "<script>\n\nvar width = 960,\n    height = 600;\n\nvar radius = height / 2 - 5,\n    scale = radius,\n    velocity = .02;\n\nvar projection = d3.geo.orthographic()\n    .translate([width / 2, height / 2])\n    .scale(scale)\n    .clipAngle(90);\n\nvar canvas = d3.select(\"body\").append(\"canvas\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar context = canvas.node().getContext(\"2d\");\n\nvar path = d3.geo.path()\n    .projection(projection)\n    .context(context);\n\nd3.json(\"/mbostock/raw/4090846/world-110m.json\", function(error, world) {\n  if (error) throw error;\n\n  var land = topojson.feature(world, world.objects.land);\n\n  d3.timer(function(elapsed) {\n    context.clearRect(0, 0, width, height);\n\n    projection.rotate([velocity * elapsed, 0]);\n    context.beginPath();\n    path(land);\n    context.fill();\n\n    context.beginPath();\n    context.arc(width / 2, height / 2, radius, 0, 2 * Math.PI, true);\n    context.lineWidth = 2.5;\n    context.stroke();\n  });\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n</script>", "description": "This Is a Globe", "created_at": "2016-08-13T04:02:28Z", "updated_at": "2016-08-13T04:02:29Z", "api": ["d3.geo.orthographic", "d3.select", "d3.geo.path", "d3.json", "d3.timer"], "readme": "[This is not a globe.](/mbostock/2fb85b77236c24be5a6f) This is a globe.\n", "uid": "bradoyler_9f70bb9c656a9cd9ada3aba36c26f351"}, {"code": "<script>\n\n///////////////////////\n// Parse the Data\nd3.csv(\"pokemon.csv\", function(data) {\n\n  ///////////////////////\n  // Chart Size Setup\n  var margin = { top: 35, right: 0, bottom: 30, left: 40 };\n\n  var width = 960 - margin.left - margin.right;\n  var height = 500 - margin.top - margin.bottom;\n\n  var chart = d3.select(\".chart\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  ///////////////////////\n  // Scales\n  var x = d3.scale.ordinal()\n      .domain(data.map(function(d) { return d['name']; }))\n      .rangeRoundBands([0, width], .1);\n\n  var y = d3.scale.linear()\n      .domain([0, d3.max(data, function(d) { return parseFloat(d['stamina']); }) * 1.1])\n      .range([height, 0]);\n\n  ///////////////////////\n  // Axis\n  var xAxis = d3.svg.axis()\n      .scale(x)\n      .orient(\"bottom\");\n\n  var yAxis = d3.svg.axis()\n      .scale(y)\n      .orient(\"left\");\n\n  chart.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  chart.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n  ///////////////////////\n  // Title\n  chart.append(\"text\")\n    .text('Bar Chart!')\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"class\", \"graph-title\")\n    .attr(\"y\", -10)\n    .attr(\"x\", width / 2.0);\n\n  ///////////////////////\n  // Bars\n  var bar = chart.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d['name']); })\n      .attr(\"y\", height)\n      .attr(\"width\", x.rangeBand())\n      .attr(\"height\", 0)\n   ;\n\n  bar.transition()\n      .duration(1500)\n      .ease(\"elastic\")\n      .attr(\"y\", function(d) { return y(parseFloat(d['stamina'])); })\n      .attr(\"height\", function(d) { return height - y(parseFloat(d['stamina'])); })\n\n  ///////////////////////\n  // Tooltips\n  var tooltip = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\");\n\n  bar.on(\"mouseover\", function(d) {\n        tooltip.html(d['stamina'])\n            .style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", function(d) {\n        tooltip.style(\"top\", event.pageY - (tooltip[0][0].clientHeight + 5) + \"px\")\n            .style(\"left\", event.pageX - (tooltip[0][0].clientWidth / 2.0) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        tooltip.style(\"visibility\", \"hidden\");\n      });\n});\n</script>", "description": "pokemon bar chart", "created_at": "2016-08-10T17:29:45Z", "updated_at": "2016-08-10T17:53:36Z", "api": ["d3.csv", "d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/51ff840cdf4b982876096af426da0e2b'>pokemon bar chart</a>", "uid": "paulsuda_b4701eba5b009f1a575e9f1a3dd382c2"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(40,0)\");\n\nvar tree = d3.tree()\n    .size([height, width - 160]);\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sort(function(a, b) { return (a.height - b.height) || a.id.localeCompare(b.id); });\n\n  tree(root);\n\n  var link = g.selectAll(\".link\")\n      .data(root.descendants().slice(1))\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        return \"M\" + d.y + \",\" + d.x\n            + \"C\" + (d.y + d.parent.y) / 2 + \",\" + d.x\n            + \" \" + (d.y + d.parent.y) / 2 + \",\" + d.parent.x\n            + \" \" + d.parent.y + \",\" + d.parent.x;\n      });\n\n  var node = g.selectAll(\".node\")\n      .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"); })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; })\n\n  node.append(\"circle\")\n      .attr(\"r\", 2.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", 3)\n      .attr(\"x\", function(d) { return d.children ? -8 : 8; })\n      .style(\"text-anchor\", function(d) { return d.children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1); });\n});\n\n</script>", "description": "Tidy Tree", "created_at": "2016-08-10T17:27:13Z", "updated_at": "2016-08-10T17:27:13Z", "api": ["d3.select", "d3.tree", "d3.stratify", "d3.csv"], "readme": "", "uid": "xdavio_390dc4293104f3a6c4e1849249c0b861"}, {"code": "<script>\n\n///////////////////////\n// Parse the Data\nd3.csv(\"data.csv\", function(data) {\n\n  ///////////////////////\n  // Chart Size Setup\n  var margin = { top: 35, right: 0, bottom: 30, left: 40 };\n\n  var width = 960 - margin.left - margin.right;\n  var height = 500 - margin.top - margin.bottom;\n\n  var chart = d3.select(\".chart\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  ///////////////////////\n  // Scales\n  var x = d3.scale.ordinal()\n      .domain(data.map(function(d) { return d['stamina']; }))\n      .rangeRoundBands([0, width], .1);\n\n  var y = d3.scale.linear()\n      .domain([0, d3.max(data, function(d) { return parseFloat(d['total_stats']); }) * 1.1])\n      .range([height, 0]);\n\n  ///////////////////////\n  // Axis\n  var xAxis = d3.svg.axis()\n      .scale(x)\n      .orient(\"bottom\");\n\n  var yAxis = d3.svg.axis()\n      .scale(y)\n      .orient(\"left\");\n\n  chart.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  chart.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n  ///////////////////////\n  // Title\n  chart.append(\"text\")\n    .text('Bar Chart!')\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"class\", \"graph-title\")\n    .attr(\"y\", -10)\n    .attr(\"x\", width / 2.0);\n\n  ///////////////////////\n  // Bars\n  var bar = chart.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d['stamina']); })\n      .attr(\"y\", height)\n      .attr(\"width\", x.rangeBand())\n      .attr(\"height\", 0);\n\n  bar.transition()\n      .duration(1500)\n      .ease(\"elastic\")\n      .attr(\"y\", function(d) { return y(parseFloat(d['total_stats'])); })\n      .attr(\"height\", function(d) { return height - y(parseFloat(d['total_stats'])); })\n\n  ///////////////////////\n  // Tooltips\n  var tooltip = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\");\n\n  bar.on(\"mouseover\", function(d) {\n        tooltip.html(d['stats'])\n            .style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", function(d) {\n        tooltip.style(\"top\", event.pageY - (tooltip[0][0].clientHeight + 5) + \"px\")\n            .style(\"left\", event.pageX - (tooltip[0][0].clientWidth / 2.0) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        tooltip.style(\"visibility\", \"hidden\");\n      });\n});\n</script>", "description": "jcobian block party", "created_at": "2016-08-10T17:14:57Z", "updated_at": "2016-08-10T17:23:35Z", "api": ["d3.csv", "d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jcobian_d62ef690823b2f95965fc380d4683e23"}, {"code": "<script>\n    //JS to go here\n    var data = [\n      {\"group\": \"II\", \"x\":10, \"y\" : 9.14},\n      {\"group\": \"II\", \"x\":8, \"y\" : 8.14},\n      {\"group\": \"II\", \"x\":13, \"y\" : 8.74},\n      {\"group\": \"II\", \"x\":9, \"y\" : 8.77},\n      {\"group\": \"II\", \"x\":11, \"y\" : 9.26},\n      {\"group\": \"II\", \"x\":14, \"y\" : 8.1},\n      {\"group\": \"II\", \"x\":6, \"y\" : 6.13},\n      {\"group\": \"II\", \"x\":4, \"y\" : 3.1},\n      {\"group\": \"II\", \"x\":12, \"y\" : 9.13},\n      {\"group\": \"II\", \"x\":7, \"y\" : 7.26},\n      {\"group\": \"II\", \"x\":5, \"y\" : 4.74}\n    ];\n    var margin = {top: 20, right: 40, bottom: 20, left: 10};\n\n    var width = 720 - margin.left - margin.right,\n        height = 400 - margin.top - margin.bottom;\n\n    var x = d3.scale.linear()\n        .range([0, width])\n        .domain([4, 15]);\n\n    var y = d3.scale.linear()\n        .range([height, 0])\n        .domain([2, 11]);\n\n    var xAxis = d3.svg.axis()\n        .scale(x)\n        .tickSize(-height)\n        .tickPadding(8)\n        .orient(\"bottom\");\n\n    var yAxis = d3.svg.axis()\n        .scale(y)\n        .tickSize(-width)\n        .tickPadding(8)\n        .orient(\"right\");\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + (height) + \")\")\n        .call(xAxis);\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(\" + (width) + \",0)\")\n        .call(yAxis);\n\n    var circleGroup = svg.selectAll(\".anscombe-circle-group\")\n        .data(data)\n      .enter()\n        .append(\"g\")\n        .attr(\"class\", \"anscombe-circle-group\")\n        .attr(\"transform\", function(d) { return \"translate(\" + x(d.x) + \",\" + y(d.y) + \")\"; });\n\n    circleGroup.append(\"circle\")\n        .attr(\"r\", 5);\n\n    circleGroup.append(\"text\")\n        .text(function(d) { return \"(\" + d.x + \",\" + d.y + \")\"; })\n        .attr(\"dx\", 6);\n    \n    \n  </script>", "description": "Anscombe Quartet II", "created_at": "2016-08-07T23:37:04Z", "updated_at": "2016-08-07T23:37:05Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "sampathweb_1c1ecc991d2e1039277db417b7c6ba1a"}, {"code": "<script>\n\n    var width = 960,\n        height = 500;\n\n    var start = Date.now(),\n        points = [];\n    \n    var maxDistance = 400;\n\t\t\n    circle(0, 0, 120, 96, -.001);\n    circle(0, 0, 30, 10, .03);\n    circle(0, 0, 60, 3, -.05);\n    circle(0, 0, 15, 4, -.02);\n    circle(0, 0, 0, 1, -.02);\n\n    circle(240, -120, 80, 4, -.02);\n    circle(240, -120, 0, 1, -.02);\n\n    circle(280, +120, 40, 8, .02);\n    circle(280, +120, 20, 8, -.02);\n    circle(280, +120, 0, 1, .02);\n    \n    var canvas = d3.select(\"body\").append(\"canvas\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n    var context = canvas.node().getContext(\"2d\");\n    context.translate(width/2, height/2);\n    \n    var limitedVoronoi = d3.distanceLimitedVoronoi()\n    limitedVoronoi.extent([[-width / 2, -height / 2],[+width / 2, +height / 2]]).limit(maxDistance).context(context);\n      \n    d3.timer(function(elapsed) {\n      //update limit\n      limitedVoronoi.limit(2+maxDistance*Math.pow(Math.cos((elapsed++)/5000), 4));\n      \n      //delete previous rendering\n      context.fillStyle = 'black';\n      context.fillRect(-width/2, -height/2, width, height);\n      \n      //renders new distance-limited voronoi\n      context.strokeStyle = 'black';\n      context.fillStyle = 'white';\n      context.beginPath();\n      limitedVoronoi(points);\n      context.fill();\n      context.stroke();\n    });\n\n    function circle(cx, cy, r, n, ) {\n      d3.range(1e-6, 2 * Math.PI, 2 * Math.PI / n).map(function(, i) {\n        var point = [cx + Math.cos() * r, cy + Math.sin() * r];\n        d3.timer(function(elapsed) {\n          var angle =  +  * elapsed / 60;\n          point[0] = cx + Math.cos(angle) * r;\n          point[1] = cy + Math.sin(angle) * r;\n        });\n        points.push(point);\n        return point;\n      });\n    }\n  </script>", "description": "Rotating Distance-limited Voronoi - d3v4 - canvas", "created_at": "2016-08-05T15:07:01Z", "updated_at": "2016-08-05T15:20:25Z", "api": ["d3.select", "d3.distanceLimitedVoronoi", "d3.timer", "d3.range"], "readme": "Revisitng the famous [mbostock](http://bl.ocks.org/mbostock/)'s block: [Rotating Voronoi](http://bl.ocks.org/mbostock/4636377) with the __[d3-distanceLimitedVoronoi](https://github.com/Kcnarf/d3.distanceLimitedVoronoi)__ plugin I made.\n\nAt each iteration, maximum distance from each datum/seed is updated. Compare to the [SVG version](http://bl.ocks.org/Kcnarf/9054296aa3e70a30260f747ab1cc7f00).", "uid": "Kcnarf_79062af0fed9ab05ff56e3e194509ec0"}, {"code": "<script>\n\n///////////////////////\n// Parse the Data\nd3.csv(\"data.csv\", function(data) {\n\n  ///////////////////////\n  // Chart Size Setup\n  var margin = { top: 35, right: 0, bottom: 30, left: 40 };\n\n  var width = 960 - margin.left - margin.right;\n  var height = 500 - margin.top - margin.bottom;\n\n  var chart = d3.select(\".chart\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  ///////////////////////\n  // Scales\n  var x = d3.scale.ordinal()\n      .domain(data.map(function(d) { return d['state']; }))\n      .rangeRoundBands([0, width], .1);\n\n  var y = d3.scale.linear()\n      .domain([0, d3.max(data, function(d) { return d['dunkin-donuts']; }) * 1.1])\n      .range([height, 0]);\n\n  ///////////////////////\n  // Axis\n  var xAxis = d3.svg.axis()\n      .scale(x)\n      .orient(\"bottom\");\n\n  var yAxis = d3.svg.axis()\n      .scale(y)\n      .orient(\"left\");\n\n  chart.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  chart.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n  ///////////////////////\n  // Title\n  chart.append(\"text\")\n    .text('Bar Chart!')\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"class\", \"graph-title\")\n    .attr(\"y\", -10)\n    .attr(\"x\", width / 2.0);\n\n  ///////////////////////\n  // Bars\n  var bar = chart.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n  \t\t.style(\"fill\", \"orange\")\n      .attr(\"x\", function(d) { return x(d['state']); })\n      .attr(\"y\", height)\n      .attr(\"width\", x.rangeBand())\n      .attr(\"height\", 0);\n\n  bar.transition()\n      .duration(1500)\n      .ease(\"elastic\")\n      .attr(\"y\", function(d) { return y(d['dunkin-donuts']); })\n      .attr(\"height\", function(d) { return height - y(d['dunkin-donuts']); })\n\n  ///////////////////////\n  // Tooltips\n  var tooltip = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\");\n\n  bar.on(\"mouseover\", function(d) {\n        tooltip.html(d['dunkin-donuts'])\n            .style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", function(d) {\n        tooltip.style(\"top\", event.pageY - (tooltip[0][0].clientHeight + 5) + \"px\")\n            .style(\"left\", event.pageX - (tooltip[0][0].clientWidth / 2.0) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        tooltip.style(\"visibility\", \"hidden\");\n      });\n});\n</script>", "description": "barblock", "created_at": "2016-08-04T19:29:29Z", "updated_at": "2016-08-04T19:29:29Z", "api": ["d3.csv", "d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "kelkreft_4cb9b7e2913c81f603f9b92ccf02afd7"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar area = d3.svg.area()\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.close); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.close = +d.close;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Price ($)\");\n});\n\n</script>", "description": "Area Chart", "created_at": "2016-08-04T13:00:27Z", "updated_at": "2016-08-04T13:00:27Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.select", "d3.tsv", "d3.extent", "d3.max"], "readme": "This simple area chart is constructed from a TSV file storing the closing value of AAPL stock over the last few years. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.area](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-area) - display area shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3883195'>Area Chart</a>", "uid": "EmbraceLife_f3147fa976a30a481254d1c50e8bd324"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar area = d3.svg.area()\n    .x(function(d) { return x(d.date); })\n    .y0(function(d) { return y(d.low); })\n    .y1(function(d) { return y(d.high); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.low = +d.low;\n    d.high = +d.high;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain([d3.min(data, function(d) { return d.low; }), d3.max(data, function(d) { return d.high; })]);\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (F)\");\n});\n\n</script>", "description": "Bivariate Area Chart", "created_at": "2016-08-04T13:00:13Z", "updated_at": "2016-08-04T13:00:21Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.select", "d3.tsv", "d3.extent", "d3.min", "d3.max"], "readme": "This two-value area chart is constructed from a TSV file storing the daily high and low temperature in San Francisco over the last two years. Data is from the [National Climatic Data Center](http://www.ncdc.noaa.gov/). The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.area](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-area) - display area shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884914'>Bivariate Area Chart</a>\n\nforked from <a href='http://bl.ocks.org/EmbraceLife/'>EmbraceLife</a>'s block: <a href='http://bl.ocks.org/EmbraceLife/9a1196519e95a694e24a48f474788bf0'>Bivariate Area Chart</a>", "uid": "EmbraceLife_7cd0c225c76888ec50ed4f0833f6e35f"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 110, left: 40},\n    margin2 = {top: 430, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    height2 = +svg.attr(\"height\") - margin2.top - margin2.bottom;\n\n  \nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n  \n \nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar context = svg.append(\"g\")\n    .attr(\"class\", \"context\")\n    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\n  \n  \n  \n  \n  // ---- step2: funcs: x-y-axis, area, brush, zoom -------\n  \n \nvar parseDate = d3.timeParse(\"%b %Y\");\n\n \nvar x = d3.scaleTime().range([0, width]),\n    x2 = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    y2 = d3.scaleLinear().range([height2, 0]);\n\n  \nvar xAxis = d3.axisBottom(x),\n    xAxis2 = d3.axisBottom(x2),\n    yAxis = d3.axisLeft(y);\n\n   \nvar brush = d3.brushX()\n\n    .extent([[0, 0], [width, height2]])\n    .on(\"brush end\", brushed); \n\nvar zoom = d3.zoom()\n\n    .scaleExtent([1, Infinity])\n\n    .translateExtent([[0, 0], [width, height]])\n\n    .extent([[0, 0], [width, height]])\n    .on(\"zoom\", zoomed);\n\n\nvar area = d3.area()\n    .curve(d3.curveMonotoneX)\n    .x(function(d) { return x(d.date); })\n    .y0(height) \n    .y1(function(d) { return y(d.price); });\n\nvar area2 = d3.area()\n    .curve(d3.curveMonotoneX)\n    .x(function(d) { return x2(d.date); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.price); });\n\n\n  \n// ---- step3: update x-y.domain values; draw zoom box area, x-y-axis, draw brush box area, x-axis; draw zoom box and brush box behaviour \n\n\nd3.csv(\"sp500.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.price; })]);\n  x2.domain(x.domain());\n  y2.domain(y.domain());\n\n  \n\nvar a =  focus.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area); \n\n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(yAxis);\n\n  \n  context.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n\n  \n  context.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(brush)\n      .call(brush.move, x.range());\n\n  svg.append(\"rect\")\n      .attr(\"class\", \"zoom\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .call(zoom);\n  \n\n  \n});\n\n  \n// ---- step 4: define zoom box and brush box behaviour  \n  \n  \nfunction brushed() {\n  if (d3.event.sourceEvent && d3.event.sourceEvent.type === \"zoom\") return; // ignore brush-by-zoom\n//   test two methods below\n//   console.log(d3.event.sourceEvent);\n//   console.log(d3.event.sourceEvent.type );\n  \n// s is px selection  \n  var s = d3.event.selection || x2.range();\n//   console.log(s);\n  \n// convert s from px to date\n  x.domain(s.map(x2.invert, x2));\n//   console.log(s.map(x2.invert, x2)); \n  \n  focus.select(\".area\").attr(\"d\", area);\n\n  focus.select(\".axis--x\").call(xAxis);\n  \n//   control zoom viewbox transformation k, x, y\n  svg.select(\".zoom\")\n// The identity transform, where k = 1, tx = ty = 0.\n//   x - the translation amount tx along the x-axis.\n// y - the translation amount ty along the y-axis.\n// k - the scale factor k.\n    \t.call(zoom.transform, d3.zoomIdentity\n      .scale(width / (s[1] - s[0]))\n      .translate(-s[0], 0))\n  ;\n//   console.log(width / (s[1] - s[0]));\n//   console.log(-s[0]);\n}\n\nfunction zoomed() {\n  if (d3.event.sourceEvent && d3.event.sourceEvent.type === \"brush\") return; // ignore zoom-by-brush\n//     console.log(d3.event.sourceEvent);// MouseEvent\n//   console.log(d3.event.sourceEvent.type ); // type is end\n  \n// t {k, x, y}  \n  var t = d3.event.transform;\n// console.log(t);     \n   \n// rescale from px to date\n  x.domain(t.rescaleX(x2).domain());\n//   console.log(t.rescaleX(x2).domain());\n  \n  focus.select(\".area\").attr(\"d\", area);\n  focus.select(\".axis--x\").call(xAxis);\n  \n// set brush movement [px, px]\n  context.select(\".brush\").call(brush.move, x.range().map(t.invertX, t));\n//   console.log(x.range());\n//   console.log(x.range().map(t.invertX, t));\n}\n\nfunction type(d) {\n  d.date = parseDate(d.date);\n  d.price = +d.price;\n  return d;\n}\n\n</script>", "description": "Brush & Zoom", "created_at": "2016-08-04T12:25:43Z", "updated_at": "2016-08-08T13:02:13Z", "api": ["d3.select", "d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.brushX", "d3.zoom", "d3.area", "d3.csv", "d3.extent", "d3.max"], "readme": "Combining [d3-brush](https://github.com/d3/d3-brush) and [d3-zoom](https://github.com/d3/d3-zoom) to implement Focus + Context. Another approach is to [zoom to the brushed region](/mbostock/f48fcdb929a620ed97877e4678ab15e6).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/34f08d5e11952a80609169b7917d4172'>Brush & Zoom</a>", "uid": "EmbraceLife_7efd1f9031beecb5252e57e944e1a440"}, {"code": "<script>\n\nvar data = d3.range(40).map(function(i) {\n  return i % 5 ? {x: i / 39, y: (Math.sin(i / 3) + 2) / 4} : null;\n});\n\nvar margin = {top: 40, right: 40, bottom: 40, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleLinear()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar line = d3.line()\n    .defined(function(d) { return d; })\n    .x(function(d) { return x(d.x); })\n    .y(function(d) { return y(d.y); });\n\nvar area = d3.area()\n    .defined(line.defined())\n    .x(line.x())\n    .y1(line.y())\n    .y0(y(0));\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .datum(data)\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"path\")\n    .attr(\"class\", \"area\")\n    .attr(\"d\", area);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x));\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(d3.axisLeft(y));\n\nsvg.append(\"path\")\n    .attr(\"class\", \"line\")\n    .attr(\"d\", line);\n\nsvg.selectAll(\".dot\")\n    .data(data.filter(function(d) { return d; }))\n  .enter().append(\"circle\")\n    .attr(\"class\", \"dot\")\n    .attr(\"cx\", line.x())\n    .attr(\"cy\", line.y())\n    .attr(\"r\", 3.5);\n\n</script>", "description": "Area with Missing Data", "created_at": "2016-08-04T12:22:39Z", "updated_at": "2016-08-04T12:22:39Z", "api": ["d3.range", "d3.scaleLinear", "d3.line", "d3.area", "d3.select", "d3.axisBottom", "d3.axisLeft"], "readme": "A demonstration of [*area*.defined](https://github.com/mbostock/d3/wiki/SVG-Shapes#area_defined).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3035090'>Area with Missing Data</a>", "uid": "EmbraceLife_740f2e802419f38f887640b7fb8b53eb"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(40,0)\");\n\nvar tree = d3.cluster()\n    .size([height, width - 160]);\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nd3.json(\"treeData.json\", function(error, treeData) {\n  if (error) throw error;\n\n  var root = d3.hierarchy(treeData);\n  tree(root);\n\n  var link = g.selectAll(\".link\")\n      .data(root.descendants().slice(1))\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        return \"M\" + d.y + \",\" + d.x\n            + \"C\" + (d.parent.y + 100) + \",\" + d.x\n            + \" \" + (d.parent.y + 100) + \",\" + d.parent.x\n            + \" \" + d.parent.y + \",\" + d.parent.x;\n      });\n\n  var node = g.selectAll(\".node\")\n      .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"); })\n      .attr(\"transform\", function(d) { \n        return \"translate(\" + d.y + \",\" + d.x + \")\"; \n      })\n\n  node.append(\"circle\")\n      .attr(\"r\", 2.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", 3)\n      .attr(\"x\", function(d) { return d.children ? -8 : 8; })\n      .style(\"text-anchor\", function(d) { return d.children ? \"end\" : \"start\"; })\n      .text(function(d) { \n        return d.data.name;\n      });\n});\n\n</script>", "description": "d3v4 json tree", "created_at": "2016-08-02T23:17:25Z", "updated_at": "2016-08-02T23:23:54Z", "api": ["d3.select", "d3.cluster", "d3.stratify", "d3.json", "d3.hierarchy"], "readme": "This is a response to the stackoverflow.com question [How do I create a tree layout using JSON data in d3.v4 - without stratify()](http://stackoverflow.com/questions/38440928/how-do-i-create-a-tree-layout-using-json-data-in-d3-v4-without-stratify).", "uid": "mattgiguere_2616d918d23b0fffd8d3256439b87268"}, {"code": "<script>\n\nvar n = 40,\n    random = d3.randomNormal(0, .2),\n    data = d3.range(n).map(random);\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 20, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar x = d3.scaleLinear()\n    .domain([1, n - 2])\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .domain([-1, 1])\n    .range([height, 0]);\n\nvar line = d3.line()\n    .curve(d3.curveBasis)\n    .x(function(d, i) { return x(i); })\n    .y(function(d, i) { return y(d); });\n\ng.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\ng.append(\"g\")\n    .attr(\"class\", \"axis axis--x\")\n    .attr(\"transform\", \"translate(0,\" + y(0) + \")\")\n    .call(d3.axisBottom(x));\n\ng.append(\"g\")\n    .attr(\"class\", \"axis axis--y\")\n    .call(d3.axisLeft(y));\n\ng.append(\"g\")\n    .attr(\"clip-path\", \"url(#clip)\")\n  .append(\"path\")\n    .datum(data)\n    .attr(\"class\", \"line\")\n  .transition()\n    .duration(500)\n    .ease(d3.easeLinear)\n    .on(\"start\", tick);\n\nfunction tick() {\n\n  // Push a new data point onto the back.\n  data.push(random());\n\n  // Redraw the line.\n  d3.select(this)\n      .attr(\"d\", line)\n      .attr(\"transform\", null);\n\n  // Slide it to the left.\n  d3.active(this)\n      .attr(\"transform\", \"translate(\" + x(0) + \",0)\")\n    .transition()\n      .on(\"start\", tick);\n\n  // Pop the old data point off the front.\n  data.shift();\n\n}\n\n</script>", "description": "Spline Transition", "created_at": "2016-07-29T15:55:53Z", "updated_at": "2016-07-29T15:56:04Z", "api": ["d3.randomNormal", "d3.range", "d3.select", "d3.scaleLinear", "d3.line", "d3.axisBottom", "d3.axisLeft", "d3.active"], "readme": "This example is the third of three in the [Path Transitions tutorial](http://bost.ocks.org/mike/path/); see the [previous example](/mbostock/1642874) for context.\n\nWhen transitioning a transform on a path using basis interpolation, you must clip the path by two additional control points so that the change in tangent is not visible while the path slides left.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1642989'>Spline Transition</a>", "uid": "EmbraceLife_46ea6d4b4a967301d47cae4e98f9283d"}, {"code": "<script>\n var svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    //console.log(json);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n\n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\") // background for ruler\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n      .append(\"g\");\n      gene.append(\"rect\")\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      .attr(\"fill\", function (d) {\n        if (d.direction == \"forward\") {\n          return \"green\";\n        }\n        else if (d.direction == \"reverse\") {\n          return \"red\";\n        }\n        else {\n          return \"black\";\n        }\n      })\n      .on(\"mouseover\", function(d) {\n        console.log(d);\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", .9);\n        div\t.html(\"The direction of gene \" + d.name + \" is \" + d.direction)// the text of the tooltip ...\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      })\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n\n      gene.append(\"text\") // gene name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { // forward and even\n            return -50;\n          }\n          else { return -10;} // forward and odd\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { // reverse and even\n            return 50;\n          }\n          else { return 80;} //reverse and odd\n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"blue\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n  });\n  </script>", "description": "genome browser", "created_at": "2016-07-28T20:25:22Z", "updated_at": "2016-07-28T20:25:23Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "wenzelmk_89a024e3c7e19424ad676000ba374923"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart fabi", "created_at": "2016-07-27T08:19:58Z", "updated_at": "2016-07-27T09:29:40Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "uid": "fabi-goetz_9dd45e90e6ce5ab6abe98da8729aee8b"}, {"code": "<script>\n\nvar margin = {top: 30, right: 80, bottom: 20, left: 550},\n    width = 1250,\n    height = 850;\n\nvar dimensions = [\n  {\n    name: \"nome\",\n    scale: d3.scale.ordinal().rangePoints([0, height]),\n    type: String\n  },\n  {\n    name: \"cidade\",\n    scale: d3.scale.ordinal().rangePoints([0, height]),\n    type: String\n  },\n  {\n    name: \"Idade\",\n    scale: d3.scale.ordinal().rangePoints([height,0]),\n    // .domain([0, height])\n    // .range([0, height]),\n    type: String\n  },\n  {\n    name: \"GLT\",\n    scale: d3.scale.ordinal().rangePoints([height,0]),\n    type: String\n  },\n  {\n    name: \"Cor\",\n    scale: d3.scale.ordinal().rangePoints([height,0]),\n    type: String\n  },\n  {\n    name: \"Profisso\",\n    scale: d3.scale.ordinal().rangePoints([0, height]),\n    type: String\n  },\n  {\n    name: \"Causa Mortis\",\n    scale: d3.scale.ordinal().rangePoints([0, height]),\n    type: String\n  },\n   {\n    name: \"Golpes\",\n    scale: d3.scale.ordinal().rangePoints([2, height]),\n    type: String\n  },\n  {\n    name: \"Local da Morte\",\n    scale: d3.scale.ordinal().rangePoints([0, height]),\n    type: String\n  }\n];\n\nvar x = d3.scale.ordinal()\n    .domain(dimensions.map(function(d) { return d.name; }))\n    .rangePoints([0, width]);\n\nvar line = d3.svg.line()\n    .defined(function(d) { return !isNaN(d[1]); });\n\nvar yAxis = d3.svg.axis()\n    .orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // nao  esse\n\nvar dimension = svg.selectAll(\".dimension\")\n    .data(dimensions)\n  .enter().append(\"g\")\n    .attr(\"class\", \"dimension\")\n    .attr(\"transform\", function(d) { return \"translate(\" + x(d.name) + \")\"; });\n\nd3.tsv(\"projections.tsv\", function(error, data) {\n  if (error) throw error;\n\n  dimensions.forEach(function(dimension) {\n    dimension.scale.domain(dimension.type === Number\n        ? d3.extent(data, function(d) { return +d[dimension.name]; })\n        : data.map(function(d) { return d[dimension.name]; }).sort());\n  });\n\n  dimension.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(yAxis.scale(d.scale)); })\n    .append(\"text\")\n      .attr(\"class\", \"title\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { return d.name; });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n      .data(data)\n    .enter().append(\"path\")\n      .attr(\"d\", draw);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(data)\n    .enter().append(\"path\")\n      .attr(\"d\", draw);\n\n\n\n  // Rebind the axis data to simplify mouseover.\n  svg.select(\".axis\").selectAll(\"text:not(.title)\")\n      .attr(\"class\", \"label\")\n      .data(data, function(d) { return d.nome || d; });\n\n  var projection = svg.selectAll(\".axis text,.background path,.foreground path\")\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout);\n\n  function mouseover(d) {\n    svg.classed(\"active\", true);\n    projection.classed(\"inactive\", function(p) { return p !== d; });\n    projection.filter(function(p) { return p === d; }).each(moveToFront);\n  }\n\n  function mouseout(d) {\n    svg.classed(\"active\", false);\n    projection.classed(\"inactive\", false);\n  }\n\n  function moveToFront() {\n    this.parentNode.appendChild(this);\n  }\n});\n\nfunction draw(d) {\n  return line(dimensions.map(function(dimension) {\n    return [x(dimension.name), dimension.scale(d[dimension.name])];\n  }));\n}\n\n</script>", "description": "fresh block", "created_at": "2016-07-26T17:04:54Z", "updated_at": "2016-07-26T17:04:54Z", "api": ["d3.scale.ordinal", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.tsv", "d3.extent"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/da20ac116c48e0e11ecd83c7bcd43bce'>fresh block</a>", "uid": "aarrigo_bcef4b52c0dd11c30ce3f6adc2837376"}, {"code": "<script>\n\nvar width = 960,\n    height = 1060;\n\nvar format = d3.format(\",d\");\n\nvar color = d3.scaleOrdinal()\n    .range(d3.schemeCategory10\n        .map(function(c) { c = d3.rgb(c); c.opacity = 0.6; return c; }));\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar treemap = d3.treemap()\n    .size([width, height])\n    .padding(1)\n    .round(true);\n\nd3.csv(\"flare.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sum(function(d) { return d.value; })\n      .sort(function(a, b) { return b.height - a.height || b.value - a.value; });\n\n  treemap(root);\n\n  d3.select(\"body\")\n    .selectAll(\".node\")\n    .data(root.leaves())\n    .enter().append(\"div\")\n      .attr(\"class\", \"node\")\n      .attr(\"title\", function(d) { return d.id + \"\\n\" + format(d.value); })\n      .style(\"left\", function(d) { return d.x0 + \"px\"; })\n      .style(\"top\", function(d) { return d.y0 + \"px\"; })\n      .style(\"width\", function(d) { return d.x1 - d.x0 + \"px\"; })\n      .style(\"height\", function(d) { return d.y1 - d.y0 + \"px\"; })\n      .style(\"background\", function(d) { while (d.depth > 1) d = d.parent; return color(d.id); })\n    .append(\"div\")\n      .attr(\"class\", \"node-label\")\n      .text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).join(\"\\n\"); })\n    .append(\"div\")\n      .attr(\"class\", \"node-value\")\n      .text(function(d) { return format(d.value); });\n});\n\nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n\n</script>", "description": "Treemap", "created_at": "2016-07-24T06:18:49Z", "updated_at": "2016-07-24T06:18:49Z", "api": ["d3.format", "d3.scaleOrdinal", "d3.rgb", "d3.stratify", "d3.treemap", "d3.csv", "d3.select"], "readme": "Each pixel represents approximately one byte.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6bbb0a7ff7686b124d80'>Treemap</a>", "uid": "Pacsangon_9b0785d902a889f1013449f9b8e2b656"}, {"code": "<script>\n\nvar width = 960,\n    height = 136,\n    cellSize = 17; // cell size\n\nvar percent = d3.format(\".1%\"),\n    format = d3.timeFormat(\"%Y-%m-%d\");\n\nvar color = d3.scaleQuantize()\n    .domain([-.05, .05])\n    .range(d3.range(11).map(function(d) { return \"q\" + d + \"-11\"; }));\n\nvar svg = d3.select(\"body\").selectAll(\"svg\")\n    .data(d3.range(1990, 2011))\n  .enter().append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .attr(\"class\", \"RdYlGn\")\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + ((width - cellSize * 53) / 2) + \",\" + (height - cellSize * 7 - 1) + \")\");\n\nsvg.append(\"text\")\n    .attr(\"transform\", \"translate(-6,\" + cellSize * 3.5 + \")rotate(-90)\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) { return d; });\n\nvar rect = svg.selectAll(\".day\")\n    .data(function(d) { return d3.timeDays(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"rect\")\n    .attr(\"class\", \"day\")\n    .attr(\"width\", cellSize)\n    .attr(\"height\", cellSize)\n    .attr(\"x\", function(d) { return d3.timeWeek.count(d3.timeYear(d), d) * cellSize; })\n    .attr(\"y\", function(d) { return d.getDay() * cellSize; })\n    .datum(format);\n  \n\nrect.append(\"title\")\n    .text(function(d) { return d; });\n\nsvg.selectAll(\".month\")\n    .data(function(d) { return d3.timeMonths(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"path\")\n    .attr(\"class\", \"month\")\n    .attr(\"d\", monthPath);\n\nd3.csv(\"dji.csv\", function(error, csv) {\n  if (error) throw error;\n\n  var data = d3.nest()\n    .key(function(d) { return d.Date; })\n    .rollup(function(d) { return (d[0].Close - d[0].Open) / d[0].Open; })\n    .map(csv);\n  \n  \n  \nrect.filter(function(d) {\n    return (data.has(d)); \n  })\n      .attr(\"class\", function(d) {\n        return \"day \" + color(data.get(d)); \n      })\n    .select(\"title\")\n      .text(function(d) { return d + \": \" + percent(data.get(d)); });\n  \n});\n\nfunction monthPath(t0) {\n  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),\n      d0 = t0.getDay(), w0 = d3.timeWeek.count(d3.timeYear(t0), t0),\n      d1 = t1.getDay(), w1 = d3.timeWeek.count(d3.timeYear(t1), t1);\n  return \"M\" + (w0 + 1) * cellSize + \",\" + d0 * cellSize\n      + \"H\" + w0 * cellSize + \"V\" + 7 * cellSize\n      + \"H\" + w1 * cellSize + \"V\" + (d1 + 1) * cellSize\n      + \"H\" + (w1 + 1) * cellSize + \"V\" + 0\n      + \"H\" + (w0 + 1) * cellSize + \"Z\";\n}\n\n</script>", "description": "Calendar View v4", "created_at": "2016-07-23T22:32:36Z", "updated_at": "2016-07-24T19:11:34Z", "api": ["d3.format", "d3.timeFormat", "d3.scaleQuantize", "d3.range", "d3.select", "d3.timeDays", "d3.timeWeek.count", "d3.timeYear", "d3.timeMonths", "d3.csv", "d3.nest"], "readme": "Updated the standard cal to v4. Micah Stubbs with a big assist on finding my bug(s) <a href=\"https://bl.ocks.org/micahstubbs/89c6bd879d64aa511372064c6cf85711\">his version here.</a>\n\n\n----\n\nThis example demonstrates loading of CSV data, which is then quantized into a diverging color scale. The values are visualized as colored cells per day. Days are arranged into columns by week, then grouped by month and years. Colors by [Cynthia Brewer](http://colorbrewer.org/). Layout inspired by [Rick Wicklin and Robert Allison](http://stat-computing.org/dataexpo/2009/posters/). Dow Jones historical data copyright [Yahoo! Finance](http://finance.yahoo.com/) or independent data provider; fair use for educational purposes.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063318'>Calendar View</a>", "uid": "BBischof_ce688f5edeff3339157e054eacc9725c"}, {"code": "<script>\n\n\n///////////////////////\n// Parse the Data\nd3.csv(\"data.csv\", function(data) {\n\n  // add a css safe class for use in hover interactions and coloring\n  data.forEach(function(d) {\n    d['class'] = d['club'].toLowerCase().replace(/ /g, '-').replace(/\\./g,'');\n  })\n\n  ///////////////////////\n  // Chart Size Setup\n  var margin = { top: 35, right: 0, bottom: 30, left: 70 };\n\n  var width = 960 - margin.left - margin.right;\n  var height = 500 - margin.top - margin.bottom;\n\n  var chart = d3.select(\".chart\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  ///////////////////////\n  // Scales\n  var x = d3.scale.ordinal()\n      .domain(data.map(function(d) { return d['year']; }))\n      .rangePoints([25, width - 15]);\n\n  var y = d3.scale.linear()\n      .domain([d3.min(data, function(d) { return d['points'] }) / 1.1, d3.max(data, function(d) { return d['points']; }) * 1.05])\n      .range([height, 0]);\n\n  var size = d3.scale.linear()\n      .domain(d3.extent(data, function(d) { return d['goals_for']; }))\n      .range([3, 10]);\n\n  ///////////////////////\n  // Axis\n  var xAxis = d3.svg.axis()\n      .scale(x)\n      .orient(\"bottom\");\n\n  var yAxis = d3.svg.axis()\n      .scale(y)\n      .orient(\"left\");\n\n  chart.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  chart.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n  ///////////////////////\n  // Title\n  chart.append(\"text\")\n    .text('MLS: Points per Season (hover over a dot to focus, click to keep focus)')\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"class\", \"graph-title\")\n    .attr(\"y\", -10)\n    .attr(\"x\", width / 2.0);\n\n  chart.append(\"text\")\n    .text('Points Per Season')\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"class\", \"graph-title\")\n    .attr(\"y\", -35)\n    .attr(\"x\", width / -4.0)\n    .attr(\"transform\", \"rotate(-90)\");\n\n  ///////////////////////\n  // Points\n  var point = chart.selectAll(\".point\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"point\")\n      .attr(\"cx\", function(d) { return x(d['year']); })\n      .attr(\"cy\", function(d) { return y(d['points']); })\n      .attr('fill', 'blue')\n      // replace spaces with - and remove '.' (from d.c. united)\n      .attr(\"class\", function(d) { return d['club'].toLowerCase().replace(/ /g, '-').replace(/\\./g,'') })\n      .attr(\"r\", function(d) { return size(d['goals_for']) })\n      .attr('opacity', '0.4');\n\n  ///////////////////////\n  // Tooltips\n  var tooltip = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\");\n\n  point.on(\"mouseover\", function(d) {\n        chart.selectAll('.'+d['class'])\n            .classed('active', true);\n\n        var tooltip_str = \"Club: \" + d['club'] +\n                \"<br/>\" + \"Year: \" + d['year'] +\n                \"<br/>\" + \"Points: \" + d['points'] +\n                \"<br/>\" + \"W/L/T: \" + d['wins'] + \" / \" + d['losses'] + \" / \" + d['ties'] +\n                \"<br/>\" + \"Goals F/A: \" + d['goals_for'] + \" / \" + d['goals_against'];\n\n        if(d['alias'] != '') {\n          tooltip_str += \"<br/>(aka: \" + d['alias'] + \")\";\n        }\n\n        tooltip.html(tooltip_str)\n            .style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", function(d) {\n        tooltip.style(\"top\", event.pageY - (tooltip[0][0].clientHeight + 5) + \"px\")\n            .style(\"left\", event.pageX - (tooltip[0][0].clientWidth / 2.0) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        chart.selectAll('.'+d['class'])\n            .classed('active', false);\n\n        tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on('click', function(d) {\n        chart.selectAll('.'+d['class'])\n            .classed('click-active', function(d) {\n              // toggle state\n              return !d3.select(this).classed('click-active');\n            });\n      })\n\n});\n</script>", "description": "Major League Soccer", "created_at": "2016-07-23T20:52:57Z", "updated_at": "2016-07-24T02:58:11Z", "api": ["d3.csv", "d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.min", "d3.max", "d3.extent", "d3.svg.axis"], "readme": "## Major League Soccer season data (1996 - 2015)\n\nI originally wanted to do a ranked bump chart but ended up finding the point spread\nto be more interesting/legible.\n\nHow To:\n\n- Hover over a point to view data for that club/season.\n- Click on a point to highlight all data points for that club.\n\nSources:\n\n- Data scraped from http://www.mlssoccer.com/standings/mls\n- Most colors are from http://teamcolors.arc90.com/\n", "uid": "cjhin_11ffe8165207693d513ad67f85d43251"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar x = d3.scaleBand()\n    .rangeRound([0, width])\n    .padding(0.1)\n    .align(0.1);\n\nvar y = d3.scaleLinear()\n    .rangeRound([height, 0]);\n\nvar z = d3.scaleOrdinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar stack = d3.stack();\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  data.sort(function(a, b) { return b.total - a.total; });\n\n  x.domain(data.map(function(d) { return d.State; }));\n  y.domain([0, d3.max(data, function(d) { return d.total; })]).nice();\n  z.domain(data.columns.slice(1));\n\n  g.selectAll(\".serie\")\n    .data(stack.keys(data.columns.slice(1))(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"serie\")\n      .attr(\"fill\", function(d) { return z(d.key); })\n    .selectAll(\"rect\")\n    .data(function(d) { return d; })\n    .enter().append(\"rect\")\n      .attr(\"x\", function(d) { return x(d.data.State); })\n      .attr(\"y\", function(d) { return y(d[1]); })\n      .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n      .attr(\"width\", x.bandwidth());\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y).ticks(10, \"s\"))\n    .append(\"text\")\n      .attr(\"x\", 2)\n      .attr(\"y\", y(y.ticks(10).pop()))\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Population\");\n\n  var legend = g.selectAll(\".legend\")\n    .data(data.columns.slice(1).reverse())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; })\n      .style(\"font\", \"10px sans-serif\");\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .attr(\"fill\", z);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n});\n\nfunction type(d, i, columns) {\n  for (i = 1, t = 0; i < columns.length; ++i) t += d[columns[i]] = +d[columns[i]];\n  d.total = t;\n  return d;\n}\n\n</script>", "description": "Stacked Bar Chart", "created_at": "2016-07-21T20:31:42Z", "updated_at": "2016-07-21T20:31:43Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.stack", "d3.csv", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This stacked bar chart is constructed from a CSV file storing the populations of different states by age group. The chart employs [conventional margins](/mbostock/3019563) and a number of D3 features:\n\n* [d3-dsv](https://github.com/d3/d3-dsv) - load and parse data\n* [d3-scale](https://github.com/d3/d3-scale) - *x*- and *y*-position, and color encoding\n* [d3-format](https://github.com/d3/d3-format) - SI prefix formatting (e.g., \u201c10M\u201d for 10,000,000)\n* [d3-array](https://github.com/d3/d3-array) - compute simple statistics (e.g., max)\n* [d3-axis](https://github.com/d3/d3-axis) - display axes\n* [d3-shape](https://github.com/d3/d3-shape) - computed stacked positions\n", "uid": "monkeycycle_d60ee1118fc7f307bd5b1cc64193e67e"}, {"code": "<script>\n\nvar margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = 700 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([2002,2012])\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tickFormat(function(d) { return d});\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .tickSize(-width)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.year); })\n    .y(function(d) { return y(d.val); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.year = +d.year;\n    d.val = +d.val;\n  });\n\n  yearlyCostByNetwork = d3.nest()\n      .key(function(d) { return d.network})\n      .entries(data);\n\n  y.domain([0,d3.max(data.map(function(d) { return d.val; }))]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n  var linesContainer = svg.append(\"g\")\n\n  linesContainer.selectAll(\".network-line\")\n      .data(yearlyCostByNetwork)\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"network-line\")\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  var labelElements = svg.append(\"g\")\n      .attr(\"class\", \"fiddly-bits\")\n\n  var label = labelElements.selectAll(\".g-label-element\")\n      .data(data.filter(function(d) { return d.year == 2012; }))\n    .enter().append(\"g\")\n      .attr(\"class\", \"g-label-element\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.year) + \",\" + y(d.val) + \")\"; } );\n\n  label.append(\"circle\")\n      .attr(\"r\", 4)\n\n    label.append(\"text\")\n      .attr(\"x\", 10)\n      .text(function(d) { return d.network})\n\n});\n\n\n</script>", "description": "Line charts with dot annotation", "created_at": "2016-07-21T20:07:10Z", "updated_at": "2016-07-21T20:07:10Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.nest", "d3.max"], "readme": "Line charts with circles and labels. A demonstration of the technique for a student.", "uid": "monkeycycle_a492b5e0da787d2e3bbe86af450b4bf7"}, {"code": "<script>\n\nvar cities = [\n  {\n    name: \"Tokyo\",\n    coords: [139.683333, 35.683333]\n  },\n  {\n    name: \"Hong Kong\",\n    coords: [114.2, 22.3]\n  },\n  {\n    name: \"Berlin\",\n    coords: [13.383333, 52.516667]\n  },\n  {\n    name: \"London\",\n    coords: [-0.1275, 51.507222]\n  },\n  {\n    name: \"New York\",\n    coords: [-74.0059, 40.7127]\n  }\n];\n\nvar flights = [\n  {\n    from: \"New York\",\n    to: \"Tokyo\",\n    date: \"July 20\",\n    shortDate: \"7/20\"\n  },\n  {\n    from: \"Tokyo\",\n    to: \"Hong Kong\",\n    date: \"July 28\",\n    shortDate: \"7/28\"\n  },\n  {\n    from: \"Hong Kong\",\n    to: \"Berlin\",\n    date: \"August 8\",\n    shortDate: \"8/8\"\n  },\n  {\n    from: \"Berlin\",\n    to: \"London\",\n    date: \"August 18\",\n    shortDate: \"8/18\"\n  },\n  {\n    from: \"London\",\n    to: \"New York\",\n    date: \"August 23\",\n    shortDate: \"8/23\"\n  }\n];\n\nflights.forEach(function(flight) {\n  var coords = [];\n  coords.push(cities.filter(function(city) { return city.name === flight.from; })[0].coords);\n  coords.push(cities.filter(function(city) { return city.name === flight.to; })[0].coords);\n  flight.coords = coords;\n});\n\n/////\n\nvar schedule = [\n  {\n    name: \"New York\",\n    date: new Date(\"Jul 20 2016 10:25 GMT-0400\")\n  },\n  {\n    name: \"Tokyo\",\n    date: new Date(\"Jul 21 2016 15:50 GMT+0900\")\n  },\n  {\n    name: \"Tokyo\",\n    date: new Date(\"Jul 28 2016 08:45 GMT+0900\")\n  },\n  {\n    name: \"Hong Kong\",\n    date: new Date(\"Jul 28 2016 12:25 GMT+0800\")\n  },\n  {\n    name: \"Hong Kong\",\n    date: new Date(\"Aug 08 2016 11:05 GMT+0800\")\n  },\n  {\n    name: \"Berlin\",\n    date: new Date(\"Aug 08 2016 21:20 GMT+0200\")\n  },\n  {\n    name: \"Berlin\",\n    date: new Date(\"Aug 18 2016 06:30 GMT+0200\")\n  },\n  {\n    name: \"London\",\n    date: new Date(\"Aug 18 2016 07:25 GMT+0100\")\n  },\n  {\n    name: \"London\",\n    date: new Date(\"Aug 18 2016 16:55 GMT+0100\")\n  },\n  {\n    name: \"New York\",\n    date: new Date(\"Aug 23 2016 20:05 GMT-0400\")\n  }\n];\n\nschedule.forEach(function(d) {\n  d.coords = cities.filter(function(city) { \n    return city.name === d.name;\n  })[0].coords;\n});\n\n// geo interpolator; should modularize like:\n// var clockScale = d3.scaleGeo()\n//   .domain(schedule.map(function(d) { return d.date; }))\n//   .range(schedule.map(function(d,i) { return d.coords[0]; }))\n//   .clamp(true);\nvar clockScale = function(d) {\n  var bi = d3.bisector(function(d) { return d.date; });\n  var i = bi.left(schedule, d);\n\n  if(i === 0) return schedule[i].coords[0];\n  if(i === schedule.length) return schedule[i-1].coords[0];\n\n  var t = (d - schedule[i-1].date) / (schedule[i].date - schedule[i-1].date);\n  return d3.geo.interpolate(schedule[i-1].coords, schedule[i].coords)(t)[0];\n}\n\nvar rotateTo;\n\n/////\n\nvar width = 960,\n    height = 960;\n\nvar  = Math.PI,\n    radians =  / 180,\n    degrees = 180 / ;\n\nvar circle = d3.geo.circle()\n    .angle(90);\n\nvar projection = d3.geo.azimuthalEqualArea()\n    .clipAngle(180 - 1e-3)\n    .scale(380)\n    .translate([width / 2, height / 2])\n    .rotate([0,-90])\n    .precision(.1);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar graticule = d3.geo.graticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"defs\").append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\nsvg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"fill\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\nd3.json(\"world-50m.json\", function(error, world) {\n  if (error) throw error;\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n\n  var flightDef = svg.select('defs').selectAll('path.flight-def')\n    .data(flights)\n    .enter()\n    .append('path')\n    .classed('flight-def', true)\n    .attr('id', function(d) {\n      return d.from.replace(/ /g,'') + d.to.replace(/ /g,'');\n    })\n    .attr('d', function(d) {\n      return path({type: \"LineString\", coordinates: d.coords});\n    });\n\n  var flight = svg.selectAll('g.flight')\n    .data(flights)\n    .enter()\n    .append('g')\n    .classed('flight', true);\n\n  flight.append('use')\n    .attr('xlink:href', function(d) {\n      return '#' + flightKey(d);\n    });\n\n  flight.append('text')\n    .attr('x', function(d) {\n      return d3.select('#' + flightKey(d)).node().getTotalLength() / 2;\n    })\n    .attr('dy', '1.2em')\n    .append('textPath')\n    .attr('xlink:href', function(d) {\n      return '#' + flightKey(d);\n    }).text(function(d) { return d.shortDate; });\n\n  var city = svg.selectAll('g.city')\n    .data(cities)\n    .enter()\n    .append('g')\n    .classed('city', true)\n    .attr('transform', function(d) {\n      return 'translate('+ projection(d.coords)[0] +','+ projection(d.coords)[1] +')';\n    })\n    .attr('data-city', function(d) { return d.name; });\n\n  city.append('circle').attr('r', 10);\n\n  city.append('text')\n    .text(function(d) { \n      return d.name; \n    })\n    .style('transform', function(d) {\n      return 'rotate('+ (180-d.coords[0]) +'deg)';\n    })\n    .attr('dy', '-.7em');\n\n  var night = svg.append(\"path\")\n    .attr(\"class\", \"night\");\n\n  rotateTo = function(longitude) {\n    projection.rotate([-longitude,-90]);\n\n    svg.selectAll('path.graticule').attr('d', path);\n    svg.selectAll('path.land').attr('d', path);\n    svg.selectAll('path.boundary').attr('d', path);\n\n    svg.selectAll('path.flight-def')\n      .attr('d', function(d) {\n        return path({type: \"LineString\", coordinates: d.coords});\n      });\n\n    svg.selectAll('g.city')\n      .attr('transform', function(d) {\n        return 'translate('+ projection(d.coords)[0] +','+ projection(d.coords)[1] +')';\n      });\n\n    svg.selectAll('g.city text')\n      .style('transform', function(d) {\n        return 'rotate('+ (longitude + 180 - d.coords[0]) +'deg)';\n      });\n  }\n\n  d3.timer(function(t) {\n    rotateTo(180 + clockScale(new Date()));\n    var sun = antipode(solarPosition(new Date));\n    night.datum(circle.origin(sun)).attr(\"d\", path);\n  });\n\n\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\nfunction flightKey(d) {\n  return d.from.replace(/ /g,'') + d.to.replace(/ /g,'');\n}\n\n// ripped straight from http://bl.ocks.org/mbostock/9232962\n\nfunction antipode(position) {\n  return [position[0] + 180, -position[1]];\n}\n\nfunction solarPosition(time) {\n  var centuries = (time - Date.UTC(2000, 0, 1, 12)) / 864e5 / 36525, // since J2000\n      longitude = (d3.time.day.utc.floor(time) - time) / 864e5 * 360 - 180;\n  return [\n    longitude - equationOfTime(centuries) * degrees,\n    solarDeclination(centuries) * degrees\n  ];\n}\n\n// Equations based on NOAAs Solar Calculator; all angles in radians.\n// http://www.esrl.noaa.gov/gmd/grad/solcalc/\n\nfunction equationOfTime(centuries) {\n  var e = eccentricityEarthOrbit(centuries),\n      m = solarGeometricMeanAnomaly(centuries),\n      l = solarGeometricMeanLongitude(centuries),\n      y = Math.tan(obliquityCorrection(centuries) / 2);\n  y *= y;\n  return y * Math.sin(2 * l)\n      - 2 * e * Math.sin(m)\n      + 4 * e * y * Math.sin(m) * Math.cos(2 * l)\n      - 0.5 * y * y * Math.sin(4 * l)\n      - 1.25 * e * e * Math.sin(2 * m);\n}\n\nfunction solarDeclination(centuries) {\n  return Math.asin(Math.sin(obliquityCorrection(centuries)) * Math.sin(solarApparentLongitude(centuries)));\n}\n\nfunction solarApparentLongitude(centuries) {\n  return solarTrueLongitude(centuries) - (0.00569 + 0.00478 * Math.sin((125.04 - 1934.136 * centuries) * radians)) * radians;\n}\n\nfunction solarTrueLongitude(centuries) {\n  return solarGeometricMeanLongitude(centuries) + solarEquationOfCenter(centuries);\n}\n\nfunction solarGeometricMeanAnomaly(centuries) {\n  return (357.52911 + centuries * (35999.05029 - 0.0001537 * centuries)) * radians;\n}\n\nfunction solarGeometricMeanLongitude(centuries) {\n  var l = (280.46646 + centuries * (36000.76983 + centuries * 0.0003032)) % 360;\n  return (l < 0 ? l + 360 : l) / 180 * ;\n}\n\nfunction solarEquationOfCenter(centuries) {\n  var m = solarGeometricMeanAnomaly(centuries);\n  return (Math.sin(m) * (1.914602 - centuries * (0.004817 + 0.000014 * centuries))\n      + Math.sin(m + m) * (0.019993 - 0.000101 * centuries)\n      + Math.sin(m + m + m) * 0.000289) * radians;\n}\n\nfunction obliquityCorrection(centuries) {\n  return meanObliquityOfEcliptic(centuries) + 0.00256 * Math.cos((125.04 - 1934.136 * centuries) * radians) * radians;\n}\n\nfunction meanObliquityOfEcliptic(centuries) {\n  return (23 + (26 + (21.448 - centuries * (46.8150 + centuries * (0.00059 - centuries * 0.001813))) / 60) / 60) * radians;\n}\n\nfunction eccentricityEarthOrbit(centuries) {\n  return 0.016708634 - centuries * (0.000042037 + 0.0000001267 * centuries);\n}\n\n</script>", "description": "A clock of Toph\u2019s summer", "created_at": "2016-07-21T11:24:54Z", "updated_at": "2016-07-21T11:30:44Z", "api": ["d3.scaleGeo", "d3.bisector", "d3.geo.interpolate", "d3.geo.circle", "d3.geo.azimuthalEqualArea", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.json", "d3.timer", "d3.time.day.utc.floor"], "readme": "A clock-itinerary of my summer, with current city rotating to be shown at the top. During flights it rotates over the flight path. The current shadow of night is shown in magenta.\n\nYes, I am a lucky duck.  \n\nStraight up ripping off @mbostock\u2019s [Lambert Azimuthal Equal-Area](http://bl.ocks.org/mbostock/3757101) and [Now + Solar Terminator](http://bl.ocks.org/mbostock/9232962).", "uid": "tophtucker_d96bba12dc526ab7cd96fa79a969661b"}, {"code": "<script>\n\nvar margin = {top: 30, right: 10, bottom: 10, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal().rangePoints([0, width], 1),\n    y = {};\n\nvar line = d3.svg.line(),\n    axis = d3.svg.axis().orient(\"left\"),\n    background,\n    foreground;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"https://cdn.rawgit.com/john-guerra/d514a47f1d5dbf237ec1ad8a6e3d7996/raw/97200e0463c16c765c649f1427dff37d4a4f0631/cars.csv\", function(error, cars) {\n\n  // Extract the list of dimensions and create a scale for each.\n  x.domain(dimensions = d3.keys(cars[0]).filter(function(d) {\n    return d != \"name\" && (y[d] = d3.scale.linear()\n        .domain(d3.extent(cars, function(p) { return +p[d]; }))\n        .range([height, 0]));\n  }));\n\n  // Add grey background lines for context.\n  background = svg.append(\"g\")\n      .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n      .data(cars)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add blue foreground lines for focus.\n  foreground = svg.append(\"g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(cars)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add a group element for each dimension.\n  var g = svg.selectAll(\".dimension\")\n      .data(dimensions)\n    .enter().append(\"g\")\n      .attr(\"class\", \"dimension\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \")\"; });\n\n  // Add an axis and title.\n  g.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(axis.scale(y[d])); })\n    .append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { return d; });\n\n  // Add and store a brush for each axis.\n  g.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) { d3.select(this).call(y[d].brush = d3.svg.brush().y(y[d]).on(\"brush\", brush)); })\n    .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n});\n\n// Returns the path for a given data point.\nfunction path(d) {\n  return line(dimensions.map(function(p) { return [x(p), y[p](d[p])]; }));\n}\n\n// Handles a brush event, toggling the display of foreground lines.\nfunction brush() {\n  var actives = dimensions.filter(function(p) { return !y[p].brush.empty(); }),\n      extents = actives.map(function(p) { return y[p].brush.extent(); });\n  foreground.style(\"display\", function(d) {\n    return actives.every(function(p, i) {\n      return extents[i][0] <= d[p] && d[p] <= extents[i][1];\n    }) ? null : \"none\";\n  });\n}\n\n</script>", "description": "Parallel Coordinates", "created_at": "2016-07-21T02:22:05Z", "updated_at": "2016-07-21T02:23:00Z", "api": ["d3.scale.ordinal", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.keys", "d3.scale.linear", "d3.extent", "d3.svg.brush"], "readme": "This [parallel coordinates](http://en.wikipedia.org/wiki/Parallel_coordinates) visualization of cars from the \u201870s and \u201880s demonstrates one of [D3 2.5.0](http://mbostock.github.com/d3/)\u2019s new interactive features: the *brush* component. By clicking and dragging along any axis, you can specify a filter for that dimension. The brush component is also used in the updated [scatterplot matrix](http://mbostock.github.com/d3/ex/splom.html) example.\n\n**Update**: Jason Davies has derived an example with [reorderable axes](http://bl.ocks.org/1341281)!", "uid": "john-guerra_d514a47f1d5dbf237ec1ad8a6e3d7996"}, {"code": "<script>\n//The margin variable is an example of an object, and gives us the margins of our chart. \nvar margin = {top: 20, right: 20, bottom: 80, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n//Variable X is a D3 scale--It allows easy mapping between one set of values and another set of values (\"domain\" or rangeRoundBands corresponds to input numbers; \"range\" corresponds to output numbers); x-axis is linear (numbers) and y-axis is ordinal(categories).\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\n//Lines 50-56 define the x and y axes by setting scale to variables x/y, and orienting the axes to the correct locations. \nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\n//Create an SVG (note that the variable name can be anything, here we just call it SVG) by selecting the body, then appending an SVG element to the body. Width, height, and margin are all previously defined variables that we call at this point.  The '.append(g)' makes a group out of all of these svg elements so they all move together, when we translate on line 63.\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  \t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n//This is where we are calling the data. 'D3.csv' is a function that accepts three arguments: \"data.csv\" calls the data file (located in the tabs at the top of this block), 'type' calls the function located on line 127 of this code and converts text into numers, and 'function (error, data)' prints an error if the data file is wrong and stops the code OR if the data file is correct, filters the rows in the CSV data file and adds them into an object called 'data'. 'x.domain' and 'y.domain' use the data to defined where the bars go on the x axis and how tall to make the bar on the y axis.\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\tdata = data.filter(function(row) {\n        return row['TimePoint'] == '5';\n    })\n  x.domain(data.map(function(d) { return d.GeneNumber; }));\n  y.domain([0, d3.max(data, function(d) { return d.Expression; })]);\n\n//Appending a text element title for the graph, calling css from the beginning defined as 'title'.\n  svg.append(\"text\")\n  \t.attr(\"class\", \"title\")\n  \t.attr(\"text-anchor\", \"middle\")\n    .attr(\"x\", width/2)\n    .attr(\"y\", 26)\n    .attr(\"shape-rendering\", \"crispEdges\")\n    .text(\"Kampy Gene Number versus Expression (5 minutes post-infection)\");\n\n//This creates the x-axis: appending another group, calling previously defined CSS, moving it to the botom, and then rotating the text. \n  x_group = svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n  \n  x_group\n    .selectAll(\"text\")\n  \t.attr(\"transform\", function (d) {return \"rotate(-60,\" + 0 + \",\" + 14 +  \")\"});\n\n//Adds and positions the x-axis lable.\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .append(\"text\")\n\t  .attr(\"font-size\", 16)\n  \t.attr(\"text-anchor\", \"end\")\n    .attr(\"x\", width)\n    .attr(\"y\", height + margin.bottom/2)\n    .attr(\"shape-rendering\", \"crispEdges\")\n    .text(\"Kampy Gene Number\");\n\n//Adds the y-axis and positions the y-axis lable.\n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n    .append(\"text\")\n  \t.attr(\"font-size\", 16)\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"Expression (RPKM)\");\n\n//This is the part where we actually make the bars of the graph, (including binding the data); '.bar' means we are going to create some objects with the CSS class 'bar'; then we code what the bar is going be. 'bar' is bound to the data object created on line 68. Line 121 positions 'bar' on axis by calling x scale; 'rangeBand' sets width based on how much space there is and how many bars there are; line 124 is determining where the top of the bar is and line 125 fills in the space from the top of the bar to the x axis\n  svg.selectAll(\".bar\")\n    .data(data)\n    .enter().append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"x\", function(d) { return x(d.GeneNumber); })\n    .attr(\"width\", x.rangeBand())\n    .attr(\"y\", function(d) { return y(d.Expression); })\n    .attr(\"height\", function(d) { return height - y(d.Expression); });\n});\n\n//Function called earlier that turns text into numbers.\nfunction type(d) {\n  d.Expression = +d.Expression;\n  return d;\n}\n\n</script>", "description": "bar chart 1 (w/ comments)", "created_at": "2016-07-20T21:16:46Z", "updated_at": "2016-07-21T20:06:00Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/afdc0a71517666dd4910c859f53817e0'>bar chart 1</a>", "uid": "wenzelmk_7fc1210d25a90fa195ecc2443a77be6e"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 80, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n  \nvar padding = 0.0, outerPadding = 0.0,\n    x = d3.scale.ordinal()\n    \t.rangeRoundBands([0, width], padding, outerPadding);\n\n//var x = d3.scale.ordinal()\n//    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n    //.ticks(10, \"%\");\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Function:</strong> <span style='color:yellow'>\" + d.GeneNumber + \"</span>\";\n  })  \n  \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);  \n  \n/*d3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\tdata = data.filter(function(row) {\n        return row['TimePoint'] == '5';\n    })\n  x.domain(data.map(function(d) { return d.GeneNumber; }));\n  y.domain([0, d3.max(data, function(d) { return d.Expression; })]);*/\n\nd3.csv(\"data.csv\", type, function (error, data) {\n  \tdata = data.filter(function(row) {\n        return row['TimePoint'] == '5';\n    });\n        var a = alpha(data, v),\t  //scale factor between value and bar width\n          mid = Midi(data, v, a),\t//mid-point displacement of bar i\n          w = Wi(data, v, a);\t\t  //width of bar i\n\n        x.range(data.map(mid));\t//force irregular intervals based on value\n\n        x.domain(data.map(function (d) {\n          return d.GeneNumber;\n        }));\n        //y.domain([0, d3.max(data, v)]);\n\t\t    y.domain([0, d3.max(data, function(d) { return d.Expression; })]);\n\n  \n  svg.append(\"text\")\n  \t.attr(\"class\", \"title\")\n  \t.attr(\"text-anchor\", \"middle\")\n    .attr(\"x\", width/2)\n    .attr(\"y\", 26)\n    .attr(\"shape-rendering\", \"crispEdges\")\n    .text(\"Kampy Gene Number versus Expression (5 minutes post-infection)\");\n  \n  x_group = svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n  \n  x_group\n    .selectAll(\"text\")\n  \t.attr(\"transform\", function (d) {return \"rotate(-60,\" + 0 + \",\" + 14 +  \")\"});\n  \n  //x_group.selectAll(\".tick\").selectAll(\"text\");\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .append(\"text\")\n\t  .attr(\"font-size\", 16)\n  \t.attr(\"text-anchor\", \"end\")\n    .attr(\"x\", width)\n    .attr(\"y\", height + margin.bottom/2)\n    .attr(\"shape-rendering\", \"crispEdges\")\n    .text(\"Kampy Gene Number\");\n   \n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n    .append(\"text\")\n  \t.attr(\"font-size\", 16)\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"Expression (RPKM)\");\n\n  /*svg.selectAll(\".bar\")\n    .data(data)\n    .enter().append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"fill\", function (d) {\n      if (d.Orientation == 'direct') { return \"blue\"}\n    \telse { return \"orange\"}\n\t  })\n    .attr(\"x\", function(d) { return x(d.GeneNumber); })\n    .attr(\"width\", x.rangeBand())\n    .attr(\"y\", function(d) { return y(d.Expression); })\n    .attr(\"height\", function(d) { return height - y(d.Expression); })\n    .on('mouseover', tip.show)\n    .on('mouseout', tip.hide);*/\n  \n   svg.selectAll(\".bar\")\n     .data(data)\n     .enter().append(\"rect\")\n     .attr(\"class\", \"bar\")\n     .attr(\"x\", function (d, i) {\n     \t\treturn x(d.GeneNumber) - a * d.Expression/2;\t//center the bar on the tick\n     \t})\n     //using x.range sets x.rangeBands to zero, compute width as a function of value\n     .attr(\"width\", x.rangeBand() || function (d) {\n     \t\treturn a * (+d.Stop - +d.Start);\t//`a` already accounts for both types of padding\n     \t})\n     .attr(\"y\", function (d) {\n     \t\treturn y(d.Expression);\n     \t})\n     .attr(\"height\", function (d) {\n     \t\tconsole.log(d.Expression);\n     \t\treturn height - y(d.Expression);\n     \t})\n     .attr(\"fill\", function (d) {\n      if (d.Orientation == 'direct') { return \"blue\"}\n    \telse { return \"orange\"}\n\t  })\n    .on('mouseover', tip.show)\n    .on('mouseout', tip.hide);\n  \n      function wrap(text, width) {\n        text.each(function (d, i) {\n          var text = d3.select(this),\n            words = text.html(d).text().split(/\\s+/).reverse(), //reset html to clear any tspans added before\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1.1, // ems\n            y = text.attr(\"y\"),\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\"),\n          //[edit]add dWidth\n            dWidth = typeof width === \"function\" ? width(d, i) : width;\n          while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if (tspan.node().getComputedTextLength() > dWidth/*[edit]*/) {\n              line.pop();\n              tspan.text(line.join(\" \"));\n              line = [word];\n              tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n            }\n          }\n        });\n      }\n});\n  \n   /*function type(d) {\n   \t\td.value = +d.value;\n  \t\treturn d;\n   }*/\n   function v(d) {\n     \tlen = +d.Stop - +d.Start;\n   \t\treturn len;\n   }\n   function alpha(values, value) {\n   \t\tvar n = values.length, total = d3.sum(values, value);\n      return (width - (n - 1) * padding * width / n - 2 * outerPadding * width / n) / total\n   }\n   function Wi(values, value, alpha) {\n   \t\treturn function (i) {\n      \treturn value(values[i]) * alpha\n      }\n   }\n   function Midi(values, value, alpha) {\n   \t\tvar w = Wi(values, value, alpha), n = values.length;\n      return function (_, i) {\n      \tvar op = outerPadding * width / n, p = padding * width / n;\n        return op + d3.sum(values.slice(0, i), value) * alpha + i * p + w(i) / 2;\n   \t\t}\n   }\n\nfunction type(d) {\n  //d.value = +d.Expression;\n  d.Expression = +d.Expression;\n  return d;\n}\n\n</script>", "description": "bar chart 4", "created_at": "2016-07-20T16:57:39Z", "updated_at": "2016-07-20T16:57:39Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.csv", "d3.max", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/afdc0a71517666dd4910c859f53817e0'>bar chart 1</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/8be33e1c6fabc4297fe780a1cfb16d89'>bar chart 2</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/c294ca80827a4e225c6b580bccad6389'>bar chart 3</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/d46e4f5fd68fb700fdf92646164accb1'>bar chart 3</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/bb374e92179586d1070f257b429e8991'>bar chart 4</a>", "uid": "stjacqrm_cccd094b4347844986a4a3cdaa3b04a5"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 80, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n  \nvar padding = 0.01, outerPadding = 0.03,\n    x = d3.scale.ordinal()\n    \t.rangeRoundBands([0, width], padding, outerPadding);\n\n//var x = d3.scale.ordinal()\n//    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n    //.ticks(10, \"%\");\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Function:</strong> <span style='color:yellow'>\" + d.Function + \"</span>\";\n  })  \n  \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);  \n  \n/*d3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\tdata = data.filter(function(row) {\n        return row['TimePoint'] == '5';\n    })\n  x.domain(data.map(function(d) { return d.GeneNumber; }));\n  y.domain([0, d3.max(data, function(d) { return d.Expression; })]);*/\n\nd3.csv(\"data.csv\", type, function (error, data) {\n  \tdata = data.filter(function(row) {\n        return row['TimePoint'] == '30';\n    });\n        var a = alpha(data, v),\t  //scale factor between value and bar width\n          mid = Midi(data, v, a),\t//mid-point displacement of bar i\n          w = Wi(data, v, a);\t\t  //width of bar i\n\n        x.range(data.map(mid));\t//force irregular intervals based on value\n\n        x.domain(data.map(function (d) {\n          return d.GeneNumber;\n        }));\n        //y.domain([0, d3.max(data, v)]);\n\t\t    y.domain([0, d3.max(data, function(d) { return d.Expression; })]);\n\n  svg.append(\"text\")\n  \t.attr(\"class\", \"title\")\n  \t.attr(\"text-anchor\", \"middle\")\n    .attr(\"x\", width/2)\n    .attr(\"y\", 26)\n    .attr(\"shape-rendering\", \"crispEdges\")\n    .text(\"Kampy Gene Number versus Expression\");\n\n  x_group = svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\n  x_group\n    .selectAll(\"text\")\n  \t.attr(\"transform\", function (d) {return \"rotate(-60,\" + 0 + \",\" + 14 +  \")\"});\n  \n  //x_group.selectAll(\".tick\").selectAll(\"text\");\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .append(\"text\")\n\t  .attr(\"font-size\", 16)\n  \t.attr(\"text-anchor\", \"end\")\n    .attr(\"x\", width)\n    .attr(\"y\", height + margin.bottom/2)\n    .attr(\"shape-rendering\", \"crispEdges\")\n    .text(\"Kampy Gene Number\");\n   \n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n    .append(\"text\")\n  \t.attr(\"font-size\", 16)\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"Expression (RPKM)\");\n  \n   svg.selectAll(\".bar\")\n     .data(data)\n     .enter().append(\"rect\")\n     .attr(\"class\", \"bar\")\n     .attr(\"x\", function (d, i) {\n     \t\treturn x(d.GeneNumber) - a * (d.Stop-d.Start)/2;\t//center the bar on the tick\n     \t})\n     //using x.range sets x.rangeBands to zero, compute width as a function of value\n     .attr(\"width\", x.rangeBand() || function (d) {\n     \t\treturn a * (+d.Stop - +d.Start);\t//`a` already accounts for both types of padding\n     \t})\n     .attr(\"y\", function (d) {\n     \t\treturn y(d.Expression);\n     \t})\n     .attr(\"height\", function (d) {\n     \t\tconsole.log(d.Expression);\n     \t\treturn height - y(d.Expression);\n     \t})\n     .attr(\"fill\", function (d) {\n      if (d.Orientation == 'direct') { return \"blue\"}\n    \telse { return \"orange\"}\n\t  })\n    .on('mouseover', tip.show)\n    .on('mouseout', tip.hide);\n  \n      function wrap(text, width) {\n        text.each(function (d, i) {\n          var text = d3.select(this),\n            words = text.html(d).text().split(/\\s+/).reverse(), //reset html to clear any tspans added before\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1.1, // ems\n            y = text.attr(\"y\"),\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\"),\n          //[edit]add dWidth\n            dWidth = typeof width === \"function\" ? width(d, i) : width;\n          while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if (tspan.node().getComputedTextLength() > dWidth/*[edit]*/) {\n              line.pop();\n              tspan.text(line.join(\" \"));\n              line = [word];\n              tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n            }\n          }\n        });\n      }\n});\n  \n   /*function type(d) {\n   \t\td.value = +d.value;\n  \t\treturn d;\n   }*/\n   function v(d) {\n     \tlen = +d.Stop - +d.Start;\n   \t\treturn len;\n   }\n   function alpha(values, value) {\n   \t\tvar n = values.length, total = d3.sum(values, value);\n      return (width - (n - 1) * padding * width / n - 2 * outerPadding * width / n) / total\n   }\n   function Wi(values, value, alpha) {\n   \t\treturn function (i) {\n      \treturn value(values[i]) * alpha\n      }\n   }\n   function Midi(values, value, alpha) {\n   \t\tvar w = Wi(values, value, alpha), n = values.length;\n      return function (_, i) {\n      \tvar op = outerPadding * width / n, p = padding * width / n;\n        return op + d3.sum(values.slice(0, i), value) * alpha + i * p + w(i) / 2;\n   \t\t}\n   }\n\nfunction type(d) {\n  //d.value = +d.Expression;\n  d.Expression = +d.Expression;\n  return d;\n}\n\n</script>", "description": "bar chart 4", "created_at": "2016-07-20T14:32:24Z", "updated_at": "2016-07-20T17:52:41Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.csv", "d3.max", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/afdc0a71517666dd4910c859f53817e0'>bar chart 1</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/8be33e1c6fabc4297fe780a1cfb16d89'>bar chart 2</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/c294ca80827a4e225c6b580bccad6389'>bar chart 3</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/d46e4f5fd68fb700fdf92646164accb1'>bar chart 3</a>", "uid": "scresawn_bb374e92179586d1070f257b429e8991"}, {"code": "<script>\n\n  var svg = d3.select(\"svg\"),\n      margin = {top: 40, right: 40, bottom: 40, left: 40},\n      width = svg.attr(\"width\") - margin.left - margin.right,\n      height = svg.attr(\"height\") - margin.top - margin.bottom;\n  \t\tbeeswarmHeight = 100;\n  \t\taxisHeight = 25;\n\n  var formatValue = d3.format(\",d\");\n\n  var x = d3.scaleLog()\n      .rangeRound([0, width]);\n\n  var g = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  d3.csv(\"flare.csv\", type, function(error, data) {\n    if (error) throw error;\n\t\t\n    x.domain(d3.extent(data, function(d) { return d.value; }));\n\n    g.append(\"g\")\n        .classed(\"axis axis--x\", true)\n        .attr(\"transform\", \"translate(0,\" + (beeswarmHeight) + \")\")\n        .call(d3.axisBottom(x).ticks(20, \".0s\"));\n    \n    //begin: force-based arrangement\n    var simulation = d3.forceSimulation(data)\n        .force(\"x\", d3.forceX(function(d) { return x(d.value); }).strength(1))\n        .force(\"y\", d3.forceY(beeswarmHeight/2-axisHeight/2))\n        .force(\"collide\", d3.forceCollide(4))\n        .stop();\n\n    for (var i = 0; i < 120; ++i) simulation.tick();\n\n    var forceVoronoi = d3.voronoi()\n          .extent([[-margin.left,0], [width+margin.right, beeswarmHeight-axisHeight]])\n          .x(function(d) { return d.x; })\n          .y(function(d) { return d.y; })\n        .polygons(data);\n    \n    var forceCellContainer = g.append(\"g\")\n        .classed(\"cell-container force\", true);\n    \n    forceCellContainer.append(\"text\")\n    \t.classed(\"info\", true)\n    \t.attr(\"transform\", \"translate(\"+width+\",0)\")\n    \t.attr(\"text-anchor\", \"end\")\n    \t.text(\"force-based arrangement\");\n    \n\t\tvar forcePathToAxisContainer = forceCellContainer.append(\"g\");\n    \n    forcePathToAxisContainer.selectAll(\".path-to-axis\")\n      .data(forceVoronoi)\n    \t.enter()\n      \t.append(\"path\")\n        \t.classed(\"path-to-axis\", true)\n    \t\t\t.attr(\"data-flare-id\", function(d) { return d.data.id; })\n        \t.attr(\"d\", function(d) { return \"M\"+[d.data.x, beeswarmHeight-axisHeight]+\"V\"+(beeswarmHeight); })\n          .on(\"mouseenter\", function(d) { highlight(d.data); })\n          .on(\"mouseout\", function(d) { trivialize(d.data); });\n\n    var forceCell = forceCellContainer.selectAll(\".cell.force\").data(forceVoronoi)\n        .enter()\n          .append(\"g\")\n          .classed(\"cell force\", true)\n          .attr(\"data-flare-id\", function(d) { return d.data.id; });\n\t\tforceCell.append(\"circle\")\n        .attr(\"r\", 3)\n        .attr(\"cx\", function(d) { return d.data.x; })\n        .attr(\"cy\", function(d) { return d.data.y; });\n\n    forceCell.append(\"path\")\n        .classed(\"voronoi\", true)\n        .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; })\n    \t\t.on(\"mouseenter\", function(d) { highlight(d.data); })\n    \t\t.on(\"mouseout\", function(d) { trivialize(d.data); });\n\n    forceCell.append(\"title\")\n        .text(function(d) { return d.data.id + \"\\n\" + formatValue(d.data.value); });\n    //end: force-based arrangement\n    \n    //begin: d3-beeswarm arrangement\n    var beeswarm = d3.beeswarm()\n        .data(data.sort(function(a,b) { return b.value-a.value; }))\n    \t\t.radius(4)\n        .distributeOn(function(d) { return x(d.value);})\n        .arrange();\n\t\t\n    var beeswarmVoronoi = d3.voronoi()\n          .extent([[-margin.left, -beeswarmHeight/2], [width + margin.right, beeswarmHeight/2]])\n          .x(function(d) { return d.x; })\n          .y(function(d) { return d.y; })\n        .polygons(beeswarm);\n    \n    var beeswarmCellContainer = g.append(\"g\")\n        .classed(\"cell-container beeswarm\", true)\n        .attr(\"transform\", \"translate(0,\"+(beeswarmHeight)+\")\");\n    \n    beeswarmCellContainer.append(\"text\")\n    \t.classed(\"info\", true)\n    \t.attr(\"transform\", \"translate(\"+[width, beeswarmHeight+axisHeight]+\")\")\n    \t.attr(\"text-anchor\", \"end\")\n    \t.text(\"d3-beeswarm arrangement\");\n    \n\t\tvar beeswarmPathToAxisContainer = beeswarmCellContainer.append(\"g\");\n    \n    beeswarmPathToAxisContainer.selectAll(\".path-to-axis\")\n      .data(beeswarmVoronoi)\n    \t.enter()\n      \t.append(\"path\")\n        \t.classed(\"path-to-axis\", true)\n    \t\t\t.attr(\"data-flare-id\", function(d) { return d.data.datum.id;})\n        \t.attr(\"d\", function(d) { return \"M\"+[d.data.x, axisHeight]+\"V0\"; })\n          .on(\"mouseenter\", function(d) { highlight(d.data.datum); })\n          .on(\"mouseout\", function(d) { trivialize(d.data.datum); });\n    \n    var beeCell = beeswarmCellContainer.selectAll(\".cell.beeswarm\").data(beeswarmVoronoi)\n        .enter()\n          .append(\"g\")\n          .classed(\"cell beeswarm\", true)\n          .attr(\"data-flare-id\", function(d) { return d.data.datum.id; });\n\n    beeCell.append(\"circle\")\n        .attr(\"r\", 3)\n        .attr(\"cx\", function(d) { return d.data.x; })\n        .attr(\"cy\", function(d) { return d.data.y+beeswarmHeight/2+axisHeight; });\n\n    beeCell.append(\"path\")\n        .classed(\"voronoi\", true)\n        .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; })\n        .attr(\"transform\", \"translate(0,\"+(beeswarmHeight/2+axisHeight)+\")\")\n    \t\t.on(\"mouseenter\", function(d) { highlight(d.data.datum); })\n    \t\t.on(\"mouseout\", function(d) { trivialize(d.data.datum); });\n\n    beeCell.append(\"title\")\n        .text(function(d) { return d.data.datum.id + \"\\n\" + formatValue(d.data.datum.value); });\n    //end: d3-beeswarm arrangement\n  });\n  \n  function highlight (datum) {\n    d3.selectAll(\"[data-flare-id='\"+datum.id+\"'].path-to-axis\").style(\"opacity\", 1).style(\"stroke\", \"red\");\n    d3.selectAll(\"[data-flare-id='\"+datum.id+\"'] circle\").style(\"fill\", \"red\");\n  }\n  \n  function trivialize (datum) {\n    d3.selectAll(\"[data-flare-id='\"+datum.id+\"'].path-to-axis\").style(\"opacity\", 0.15).style(\"stroke\", \"black\");\n    d3.selectAll(\"[data-flare-id='\"+datum.id+\"'] circle\").style(\"fill\", \"black\");\n  }\n\n  function type(d) {\n    if (!d.value) return;\n    d.value = +d.value;\n    return d;\n  }\n\n</script>", "description": "Beeswarm comparison", "created_at": "2016-07-20T07:14:01Z", "updated_at": "2016-07-27T02:52:45Z", "api": ["d3.select", "d3.format", "d3.scaleLog", "d3.csv", "d3.extent", "d3.axisBottom", "d3.forceSimulation", "d3.forceX", "d3.forceY", "d3.forceCollide", "d3.voronoi", "d3.beeswarm", "d3.selectAll"], "readme": "This <a href='http://bl.ocks.org/Kcnarf/5f9491610aa5a5c085d48d66164de36a'>block</a> compares 2 techniques that both produces a static beeswarm.\n\nThe top most beeswarm is the one from mbostock's [beeswarm](http://bl.ocks.org/mbostock/6526445e2b44303eebf21da3b6627320) block. It is implemented using [d3-force](https://github.com/d3/d3-force)\u2019s [collision constraint](https://github.com/d3/d3-force#collision). The bottom most beeswarm is produced with the __d3-beeswarm__ plugin I made (see the [Github project](https://github.com/Kcnarf/d3-beeswarm)).\n\nThis block aims to understand the differences, advantages and drawbacks of the 2 techniques. I'm focusing this comparison on the capability of the beeswarm to exactly reflect the encoded data (ie. the x-coordinate should exactly reflects the encoded data). That's the main reason why the _d3.force_ technique doesn't suit my needs, and why I made the _d3-beeswarm_ plugin.\n\nHere are some thoughts:\n\n * __exactly encoded data__: this block allows to vizualize the main drawback of a force-based beeswarm, that allows to re-arrange horizontally each dot; note that this behaviour could be considered marginal and not so important, but this is a high-level constraint for my usecase ... One can notice that most of the deviations comes when there is some accumulation (see around 600 or around 3200)\n * __computation time__: force-based beeswarm takes more time to be computed, as the _d3.force_ is a generic algorithm that does a lot more than just producing a beeswarm arrangment\n * __aesthetic__: the 2 beeswarms look great; the second beeswarm is less compact because it exactly encodes data; note that the easthetic of the second beeswarm seems _'to go to the right'_ because data are sorted from max to min before computing the arrangement\n * __live arrangement__: one can decide to vizualize the live arrangement of the force-based beeswarm ... adding the __waouhhh__ effect\n * __rearrangement__: (not experimented) I guess one can easily add/remove/drag a node on the force-based beeswarm, which will in response rearrange itself automatically ... adding the __waouhhh__ effect once again\n\n#### Acknowledgments to:\n* <a href='https://d3js.org/'>D3.js</a> (v4)\n* <a href='http://blockbuilder.org'>blockbuilder.org</a>\n* <a href='http://workshop.chromeexperiments.com/'>dat.gui</a>", "uid": "Kcnarf_5f9491610aa5a5c085d48d66164de36a"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\nvar color = d3.scale.category20();\n\nvar force = d3.layout.force()\n    .charge(-120)\n    .linkDistance(30)\n    .size([width, height]);\n\nvar x = d3.scale.linear()\n    .domain([0, 20])\n    .range([250, 80])\n    .clamp(true);\n\nvar brush = d3.svg.brush()\n    .y(x)\n    .extent([0, 0]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar links_g = svg.append(\"g\");\n\nvar nodes_g = svg.append(\"g\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(\" + (width - 20)  + \",0)\")\n    .call(d3.svg.axis()\n      .scale(x)\n      .orient(\"left\")\n      .tickFormat(function(d) { return d; })\n      .tickSize(0)\n      .tickPadding(12))\n  .select(\".domain\")\n  .select(function() { return this.parentNode.appendChild(this.cloneNode(true)); })\n    .attr(\"class\", \"halo\");\n\nvar slider = svg.append(\"g\")\n    .attr(\"class\", \"slider\")\n    .call(brush);\n\nslider.selectAll(\".extent,.resize\")\n    .remove();\n\nvar handle = slider.append(\"circle\")\n    .attr(\"class\", \"handle\")\n    .attr(\"transform\", \"translate(\" + (width - 20) + \",0)\")\n    .attr(\"r\", 5);\n\nsvg.append(\"text\")\n    .attr(\"x\", width - 15)\n    .attr(\"y\", 60)\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"font-size\", \"12px\")\n    .style(\"opacity\", 0.5)\n    .text(\"co-occurence threshold\")\n\nd3.json(\"miserables.json\", function(error, graph) {\n  if (error) throw error;\n  \n  graph.links.forEach(function(d,i){ d.i = i; });\n\n  function brushed() {\n    var value = brush.extent()[0];\n  \n    if (d3.event.sourceEvent) {\n      value = x.invert(d3.mouse(this)[1]);\n      brush.extent([value, value]);\n    }\n    handle.attr(\"cy\", x(value));\n    var threshold = value;\n    \n    var thresholded_links = graph.links.filter(function(d){ return (d.value > threshold);});\n    \n    force\n        .links(thresholded_links);\n     \n    var link = links_g.selectAll(\".link\")\n        .data(thresholded_links, function(d){ return d.i; });\n\n    link.enter().append(\"line\")\n        .attr(\"class\", \"link\")\n        .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n    link.exit().remove();\n\n    force.on(\"tick\", function() {\n      link.attr(\"x1\", function(d) { return d.source.x; })\n          .attr(\"y1\", function(d) { return d.source.y; })\n          .attr(\"x2\", function(d) { return d.target.x; })\n          .attr(\"y2\", function(d) { return d.target.y; });\n  \n      node.attr(\"cx\", function(d) { return d.x; })\n          .attr(\"cy\", function(d) { return d.y; });\n    });\n\n    force.start();\n\n  }\n    \n  force\n      .nodes(graph.nodes);\n\n  var node = nodes_g.selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"node\")\n      .attr(\"r\", 5)\n      .style(\"fill\", function(d) { return color(d.group); })\n      .call(force.drag);\n\n  node.append(\"title\")\n      .text(function(d) { return d.name; });\n\n  brush.on(\"brush\", brushed);\n\n  slider\n    .call(brush.extent([5, 5]))\n    .call(brush.event);\n\n});\n\n</script>", "description": "Graph with Threshold Slider", "created_at": "2016-07-19T20:09:55Z", "updated_at": "2016-07-19T20:09:55Z", "api": ["d3.scale.category20", "d3.layout.force", "d3.scale.linear", "d3.svg.brush", "d3.select", "d3.svg.axis", "d3.json", "d3.mouse"], "readme": "Based on Mike Bostock's [force-directed graph example](https://bl.ocks.org/mbostock/4062045) showing character co-occurence in *Les Mis\u00e9rables*, this gist shows how to implement a dynamic link-display threshold. (The slider is based on Bostock's [\"brush as slider\" block](https://bl.ocks.org/mbostock/6452972).) See [this blog post on bilateral migration](http://briancoffey.ca/blogpost4.html) for an example use case.\n\n\nforked from <a href='http://bl.ocks.org/bricof/'>bricof</a>'s block: <a href='http://bl.ocks.org/bricof/7364e456e61eff137d4c6cd435356e04'>Graph with Threshold Slider</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/06b66bab51032dae0bb7b17f0e6aadb4'>Graph with Threshold Slider</a>", "uid": "owendall_6c73ad82ef5eb8cc1b1d641e3d21201b"}, {"code": "<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 40, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// parse the date / time\nvar parseTime = d3.timeParse(\"%d-%b-%y\");\n\n// set the ranges\nvar x = d3.scaleTime().range([0, width]);\nvar y0 = d3.scaleLinear().range([height, 0]);\nvar y1 = d3.scaleLinear().range([height, 0]);\n\n// define the 1st line\nvar valueline = d3.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y0(d.close); });\n\n// define the 2nd line\nvar valueline2 = d3.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y1(d.open); });\n\n// append the svg obgect to the body of the page\n// appends a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data4.csv\", function(error, data) {\n  if (error) throw error;\n\n  // format the data\n  data.forEach(function(d) {\n      d.date = parseTime(d.date);\n      d.close = +d.close;\n      d.open = +d.open;\n  });\n\n  // Scale the range of the data\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y0.domain([0, d3.max(data, function(d) {return Math.max(d.close);})]);\n  y1.domain([0, d3.max(data, function(d) {return Math.max(d.open); })]);\n\n  // Add the valueline path.\n  svg.append(\"path\")\n      .data([data])\n      .attr(\"class\", \"line\")\n      .attr(\"d\", valueline);\n\n  // Add the valueline2 path.\n  svg.append(\"path\")\n      .data([data])\n      .attr(\"class\", \"line\")\n      .style(\"stroke\", \"red\")\n      .attr(\"d\", valueline2);\n\n  // Add the X Axis\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // Add the Y0 Axis\n  svg.append(\"g\")\n      .attr(\"class\", \"axisSteelBlue\")\n      .call(d3.axisLeft(y0));\n\n  // Add the Y1 Axis\n  svg.append(\"g\")\n      .attr(\"class\", \"axisRed\")\n      .attr(\"transform\", \"translate( \" + width + \", 0 )\")\n      .call(d3.axisRight(y1));\n\n});\n\n</script>", "description": "Dual axes in v4", "created_at": "2016-07-16T20:54:35Z", "updated_at": "2016-07-16T20:56:22Z", "api": ["d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.line", "d3.select", "d3.csv", "d3.extent", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.axisRight"], "readme": "This is a multiple line graph demonstrating the display of seperate colour coded y axes for each line. This was written using d3.js v4 and is a follow on to the multiple line graph example [here](http://bl.ocks.org/d3noob/4db972df5d7efc7d611255d1cc6f3c4f). \n\nThis graph is part of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js.", "uid": "d3noob_814a2bcb3e7d8d8db74f36f77c8e6b7f"}, {"code": "<script>\n\n\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Function:</strong> <span style='color:red'>\" + d.Function + \"</span>\";\n  })    \n  \nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\tdata = data.filter(function(row) {\n        return row['TimePoint'] == '5';\n    })\n  var n = 4, // number of layers\n    m = 58, // number of samples per layer\n    stack = d3.layout.stack(),\n    layers = stack(d3.range(n).map(function(d) { return d.GeneNumber; })),\n    yGroupMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y; }); }),\n    yStackMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); });\n\nvar margin = {top: 20, right: 20, bottom: 80, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .domain(d3.range(m))\n    .rangeRoundBands([0, width], .08);\n\nvar y = d3.scale.linear()\n    .domain([0, yStackMax])\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickSize(0)\n    .tickPadding(6)\n    .orient(\"bottom\");  \n  \nvar color = d3.scale.linear()\n    .domain([0, n - 1])\n    .range([\"#aad\", \"#556\"]);\n  \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n  \n  x.domain(data.map(function(d) { return d.GeneNumber; }));\n  y.domain([0, d3.max(data, function(d) { return d.Expression; })]);\n\n  svg.append(\"text\")\n  \t.attr(\"class\", \"title\")\n  \t.attr(\"text-anchor\", \"middle\")\n    .attr(\"x\", width/2)\n    .attr(\"y\", 26)\n    .attr(\"shape-rendering\", \"crispEdges\")\n    .text(\"Kampy Gene Number versus Expression (5 minutes post-infection)\");\n  \n  x_group = svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n  \n  x_group\n    .selectAll(\"text\")\n  \t.attr(\"transform\", function (d) {return \"rotate(-60,\" + 0 + \",\" + 14 +  \")\"});\n  \n  //x_group.selectAll(\".tick\").selectAll(\"text\");\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .append(\"text\")\n\t  .attr(\"font-size\", 16)\n  \t.attr(\"text-anchor\", \"end\")\n    .attr(\"x\", width)\n    .attr(\"y\", height + margin.bottom/2)\n    .attr(\"shape-rendering\", \"crispEdges\")\n    .text(\"Kampy Gene Number\");\n   \n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n    .append(\"text\")\n  \t.attr(\"font-size\", 16)\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"Expression (RPKM)\");\n\n  svg.selectAll(\".bar\")\n    .data(data)\n    .enter().append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"fill\", function (d) {\n      if (d.Orientation == 'direct') { return \"blue\"}\n    \telse { return \"orange\"}\n\t  })\n    .attr(\"x\", function(d) { return x(d.GeneNumber); })\n    .attr(\"width\", x.rangeBand())\n    .attr(\"y\", function(d) { return y(d.Expression); })\n    .attr(\"height\", function(d) { return height - y(d.Expression); })\n    .on('mouseover', tip.show)\n    .on('mouseout', tip.hide);\n});\n\nfunction type(d) {\n  d.Expression = +d.Expression;\n  return d;\n}\n\n</script>", "description": "bar chart 4 kinda", "created_at": "2016-07-15T18:51:23Z", "updated_at": "2016-07-15T19:11:06Z", "api": ["d3.tip", "d3.csv", "d3.layout.stack", "d3.range", "d3.max", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/afdc0a71517666dd4910c859f53817e0'>bar chart 1</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/8be33e1c6fabc4297fe780a1cfb16d89'>bar chart 2</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/c294ca80827a4e225c6b580bccad6389'>bar chart 3</a>", "uid": "grybnicky_38812cbfd1a26cea5963293420355108"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 80, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n    //.ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\tdata = data.filter(function(row) {\n        return row['TimePoint'] == '5';\n    })\n  x.domain(data.map(function(d) { return d.GeneNumber; }));\n  y.domain([0, d3.max(data, function(d) { return d.Expression; })]);\n\n  svg.append(\"text\")\n  \t.attr(\"class\", \"title\")\n  \t.attr(\"text-anchor\", \"middle\")\n    .attr(\"x\", width/2)\n    .attr(\"y\", 26)\n    .attr(\"shape-rendering\", \"crispEdges\")\n    .text(\"Kampy Gene Number versus Expression (5 minutes post-infection)\");\n  \n  x_group = svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n  \n  x_group\n    .selectAll(\"text\")\n  \t.attr(\"transform\", function (d) {return \"rotate(-60,\" + 0 + \",\" + 14 +  \")\"});\n  \n  //x_group.selectAll(\".tick\").selectAll(\"text\");\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .append(\"text\")\n\t  .attr(\"font-size\", 16)\n  \t.attr(\"text-anchor\", \"end\")\n    .attr(\"x\", width)\n    .attr(\"y\", height + margin.bottom/2)\n    .attr(\"shape-rendering\", \"crispEdges\")\n    .text(\"Kampy Gene Number\");\n   \n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n    .append(\"text\")\n  \t.attr(\"font-size\", 16)\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"Expression (RPKM)\");\n\n  svg.selectAll(\".bar\")\n    .data(data)\n    .enter().append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"fill\", function (d) {\n      if (d.Orientation == 'direct') { return \"blue\"}\n    \telse { return \"orange\"}\n\t  })\n    .attr(\"x\", function(d) { return x(d.GeneNumber); })\n    .attr(\"width\", x.rangeBand())\n    .attr(\"y\", function(d) { return y(d.Expression); })\n    .attr(\"height\", function(d) { return height - y(d.Expression); });\n});\n\nfunction type(d) {\n  d.Expression = +d.Expression;\n  return d;\n}\n\n</script>", "description": "bar chart 2", "created_at": "2016-07-15T16:35:56Z", "updated_at": "2016-07-21T15:22:13Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/afdc0a71517666dd4910c859f53817e0'>bar chart 1</a>", "uid": "scresawn_8be33e1c6fabc4297fe780a1cfb16d89"}, {"code": "<script>\n       var margin = { top: 30, left: 50, bottom: 30, right: 10 },\n           width = 960 - margin.left - margin.right,\n           height = 500 - margin.top - margin.bottom;\n       \n       var chartTypes = [\"Swarm\", \"Swarm2\", \"Histogram\", \"Boxplot\"];\n       \n       var chartScale = d3.scale.ordinal()\n            .domain(chartTypes)\n            .rangeRoundBands([0, width], .3),\n           barScale = d3.scale.linear()\n            .range([0, chartScale.rangeBand()]),\n           yScale = d3.scale.linear().range([height, 0]).nice();\n       \n       var xAxis = d3.svg.axis().scale(chartScale).orient(\"top\"),\n           yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n       \n       var swarmChart = d3.forceChart()\n        .padding(1)\n        .x(0)\n        .y(function(d) { return yScale(d.yVal); })\n        .r(1.5)\n        .xGravity(1/5)\n        .yGravity(100)\n        .draggable(false);\n        \n       var pileChart = d3.forceChart()\n        .padding(1)\n        .x(0)\n        .y(function(d) { return yScale(d.yVal); })\n        .r(1.5)\n        .xGravity(function(d) { return d.x <= 0 ? 400 : 1/2; })\n        .yGravity(100)\n        .draggable(false);\n       \n       var svg = d3.select(\"body\").append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n       \n       var data = d3.range(700)\n          .map(function(i) { return { yVal: d3.random.logNormal(1, 0.5)() }; });\n       \n//        var parseDate = d3.timeParse(\"%Y-%m-%d\");\n       \n       d3.csv(\"new_Violations.csv\", function(error, data){\n  data.map(function(d){console.log((d.violation_date.split(\" \")[0]))})\n}) \n       \n       \n       \n       yScale.domain(d3.extent(data, function(d) { return d.yVal; }));\n       \n       // Draw axes\n       svg.append(\"g\").call(xAxis)\n        .attr(\"class\", \"x axis\");\n       svg.append(\"g\").call(yAxis)\n        .attr(\"class\", \"y axis\");\n       \n       // Draw swarm chart\n       svg.append(\"g\").call(swarmChart, _.cloneDeep(data))\n          .attr(\"class\", \"swarm\")\n          .attr(\"transform\", \"translate(\" + (chartScale(\"Swarm\")  + chartScale.rangeBand()/2) + \",0)\")\n        .selectAll(\".node\").append(\"circle\")\n          .attr(\"r\", function(d) { return d.r; });\n          \n       // Run for a bunch of ticks and freeze\n       swarmChart.force().stop().start();\n       for (var i = 0; i < 200; i++) { swarmChart.force().tick(); }\n       swarmChart.force().stop();\n       \n       //Draw pile chart\n       svg.append(\"g\").call(pileChart, _.cloneDeep(data))\n          .attr(\"class\", \"pile\")\n          .attr(\"transform\", \"translate(\" + chartScale(\"Swarm2\") + \",0)\")\n        .selectAll(\".node\").append(\"circle\")\n          .attr(\"r\", function(d) { return d.r; });\n          \n       // Run for a bunch of ticks and freeze\n       pileChart.force().stop().start();\n       for (var i = 0; i < 500; i++) { pileChart.force().tick(); }\n       pileChart.force().stop();\n       \n//        // Draw histogram\n//        svg.append(\"g\").call(pileChart, _.cloneDeep(data))\n//           .attr(\"class\", \"pile\")\n//           .attr(\"transform\", \"translate(\" + chartScale(\"Histogram\") + \",0)\")\n//         .selectAll(\".node\").append(\"circle\")\n//           .attr(\"r\", function(d) { return d.r; });\n          \n//        // Run for a bunch of ticks and freeze\n//        pileChart.force().stop().start();\n//        for (var i = 0; i < 500; i++) { pileChart.force().tick(); }\n//        pileChart.force().stop();\n       \n//        // Draw boxplot\n//        var boxWidth = 20;\n//        svg.append(\"g\").call(boxplot, data, boxWidth)\n//         .attr(\"class\", \"boxplot\")\n//         .attr(\"transform\", \"translate(\" + (chartScale(\"Boxplot\") + chartScale.rangeBand()/2 - boxWidth/2) + \",0)\");\n        \n      function histogram(selection, data) {\n        \n        var bins = yScale.ticks(25);\n        \n        var binnedData = d3.layout.histogram()\n          .bins(bins)\n          .value(function(d) { return d.yVal; })\n          (data);\n        \n        barScale.domain([0, d3.max(binnedData, function(d) { return d.y; })]);\n        \n        var barHeight = yScale(bins[0]) - yScale(bins[1]),\n            barPadding = 2;\n        \n        selection.selectAll(\".bar\").data(binnedData)\n          .enter().append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"transform\", function(d) {\n              return \"translate(0,\" + yScale(d.x) + \")\"; \n            })\n            .attr(\"y\", barPadding - barHeight)\n            .attr(\"height\", barHeight - barPadding)\n            .attr(\"width\", function(d) { return barScale(d.y); });\n      }\n      \n      function boxplot(selection, data, boxWidth) {\n        \n        var quartiles = d3.scale.quantile()\n          .domain(data.map(function(d) { return d.yVal; }))\n          .range(d3.range(4))\n          .quantiles();\n        \n        var extent = d3.extent(data, function(d) { return d.yVal; });\n        \n        // Draw dashes\n        selection.append(\"path\").datum([\n            [boxWidth/2, yScale(extent[1])],\n            [boxWidth/2, yScale(extent[0])]\n          ])\n          .attr(\"d\", d3.svg.line())\n          .style(\"stroke\", \"black\")\n          .style(\"stroke-dasharray\", \"4, 10\");\n        \n        // Draw box\n        selection.append(\"rect\")\n          .attr(\"y\", yScale(quartiles[2]))\n          .attr(\"height\", yScale(quartiles[0]) - yScale(quartiles[2]))\n          .attr(\"width\", boxWidth)\n          .attr(\"fill\", \"white\")\n          .attr(\"stroke\", \"black\");\n        \n        // Draw lines\n        selection.selectAll(\"line\").data([extent[1], quartiles[1], extent[0]])\n          .enter().append(\"line\")\n            .attr(\"x2\", boxWidth)\n            .attr(\"y1\", function(d) { return yScale(d); })\n            .attr(\"y2\", function(d) { return yScale(d); })\n            .attr(\"stroke\", \"black\");\n        \n        \n      }\n     </script>", "description": "Visualizing Distributions", "created_at": "2016-07-15T04:36:21Z", "updated_at": "2016-07-15T15:51:33Z", "api": ["d3.layout.force", "d3.geom.quadtree", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.forceChart", "d3.select", "d3.range", "d3.random.logNormal", "d3.timeParse", "d3.csv", "d3.extent", "d3.layout.histogram", "d3.max", "d3.scale.quantile", "d3.svg.line"], "readme": "A few ways to visualize 1D distributions.\n\nSwarm and pile plots show all the data points but can't be used when\nthere are a lot of data points. Histograms and boxplots work for any number\nof data points since they are visualizing summary statistics. Histograms\nprovide more information than a boxplot. Boxplots fit in small spaces,\nmaking them nice for comparing many distributions side-by-side.\n\nOther chart types for 1D distributions:\n[violin plot](http://docs.ggplot2.org/current/geom_violin.html),\n[kernel density](http://docs.ggplot2.org/current/geom_density.html),\n[empirical CDF](http://docs.ggplot2.org/current/stat_ecdf.html).\n\nThe [d3.forceChart()](https://github.com/armollica/force-chart) plugin is used for the\nswarm and pile plots; [d3.layout.histogram()](https://github.com/mbostock/d3/wiki/Histogram-Layout#histogram)\nfor the histogram; [d3.scale.quantile()](https://github.com/mbostock/d3/wiki/Quantitative-Scales#quantile-scales)\nfor the quartile summary statistics used in the boxplot.\n\n\nforked from <a href='http://bl.ocks.org/armollica/'>armollica</a>'s block: <a href='http://bl.ocks.org/armollica/0f28622e38434b04907d768df6cec684'>Visualizing Distributions</a>", "uid": "BBischof_13e4faca1996fadab526c6986d67058a"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.geneNumber; }));\n  y.domain([0, d3.max(data, function(d) { return d.Expression; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Expression (RPKM)\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.geneNumber); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.Expression); })\n      .attr(\"height\", function(d) { return height - y(d.Expression); });\n});\n\nfunction type(d) {\n  d.Expression = +d.Expression;\n  return d;\n}\n\n</script>", "description": "Simple Bar Chart Kampy Expression ", "created_at": "2016-07-14T16:58:42Z", "updated_at": "2016-07-14T16:58:42Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Simple Bar Chart Kampy Expression </a>", "uid": "grybnicky_da7862addded5c94370d994e98bb364b"}, {"code": "<script>\n\nd3.csv(\"hasse_boole.csv\",function(error,data) {createNetwork(data)});\n\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\nfunction createNetwork(data) {\n\n  var edges = data;\n  var nodes = [];\n  var nodeHash = {};\n  edges.forEach(function (d) {\n    if (!nodeHash[d.source]) {\n      var newNode = {id: d.source}\n      nodes.push(newNode)\n      nodeHash[d.source] = newNode;\n    }\n    if (!nodeHash[d.target]) {\n      var newNode = {id: d.target}\n      nodes.push(newNode)\n      nodeHash[d.target] = newNode;\n    }\n    d.source = nodeHash[d.source];\n    d.target = nodeHash[d.target];\n  })\n\nvar rootNode = nodes.filter(function (d) {return d.id === \"FALSE\"})[0]\n\nrootNode.row = 0;\n\nfriendlyBFS(rootNode);\n\n//Easy to do because this is a simple DAG\nfunction friendlyBFS(node) {\n  var targets = edges.filter(function (d) {return d.source === node}).map(function (d) {return d.target});\n  targets.forEach(function (d) {\n    d.row = node.row + 1;\n    friendlyBFS(d)\n  })\n}\n\n\nvar networkCenter = d3.forceCenter().x(250).y(250);\nvar manyBody = d3.forceManyBody().strength(15)\nvar linkForce = d3.forceLink(edges)\n  .id(function (d) {return d.id}).distance(30).iterations(1)\n\n\n//Generic gravity for the X position\nvar forceX = d3.forceX(function (d) {return 250})\n    .strength(1)\n\n//strong y positioning based on row\n/* var forceY = d3.forceY(function (d) {return d.row * 50})\n    .strength(5.5)\n*/\n var forceY = d3.forceY(function (d) {return 250})\n\nvar collide = d3.forceRectCollide(function (d) {\n    return [[-(d.id.length * 3),-10],[(d.id.length * 3),10]]\n  })\n\n  var force = d3.forceSimulation(nodes)\n    .force(\"charge\", manyBody)\n//    .force(\"link\", linkForce)\n    .force(\"center\", networkCenter)\n    .force(\"x\", forceX)\n    .force(\"y\", forceY)\n    .force(\"collide\", collide)\n    .on(\"tick\", updateNetwork);\n\n\n  var edgeEnter = d3.select(\"svg.main\").selectAll(\"g.edge\")\n  .data(edges)\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"edge\");\n\n  edgeEnter\n  .append(\"line\")\n  .style(\"stroke-width\", function (d) {return d.border ? \"3px\" : \"1px\"})\n  .style(\"stroke\", \"black\")\n  .style(\"pointer-events\", \"none\");\n\n  var nodeEnter = d3.select(\"svg.main\").selectAll(\"g.node\")\n  .data(nodes, function (d) {return d.id})\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n\n  nodeEnter.append(\"rect\")\n  .attr(\"width\", function (d) {return d.id.length * 6})\n  .attr(\"height\", 20)\n  .attr(\"x\", function (d) {return -(d.id.length * 3)})\n  .attr(\"y\", -10)\n  .style(\"fill\", \"lightgray\")\n  .style(\"stroke\", \"black\")\n  .style(\"stroke-width\", function (d) {return d.border ? \"3px\" : \"1px\"})\n\n  nodeEnter.append(\"text\")\n  .style(\"text-anchor\", \"middle\")\n  .attr(\"y\", 3)\n  .style(\"stroke-width\", \"1px\")\n  .style(\"stroke-opacity\", 0.75)\n  .style(\"stroke\", \"white\")\n  .style(\"font-size\", \"8px\")\n  .text(function (d) {return d.id})\n  .style(\"pointer-events\", \"none\")\n\n  nodeEnter.append(\"text\")\n  .style(\"text-anchor\", \"middle\")\n  .attr(\"y\", 3)\n  .style(\"font-size\", \"8px\")\n  .text(function (d) {return d.id})\n  .style(\"pointer-events\", \"none\")\n\n  function updateNetwork(e) {\n    d3.select(\"svg.main\").selectAll(\"line\")\n    .attr(\"x1\", function (d) {return d.source.x})\n    .attr(\"y1\", function (d) {return d.source.y})\n    .attr(\"x2\", function (d) {return d.target.x})\n    .attr(\"y2\", function (d) {return d.target.y});\n\n    d3.select(\"svg.main\").selectAll(\"g.node\")\n      .attr(\"transform\", function (d) {return \"translate(\" + d.x + \",\" + d.y + \")\"});\n\n  }\n\n}\n</script>", "description": "Bounding Box Collision", "created_at": "2016-07-12T04:24:57Z", "updated_at": "2016-07-12T10:54:19Z", "api": ["d3.csv", "d3.forceCenter", "d3.forceManyBody", "d3.forceLink", "d3.forceX", "d3.forceY", "d3.forceRectCollide", "d3.forceSimulation", "d3.select"], "readme": "A simple first stab at building a bounding-box style collision detection rule for [d3V4 forceSimulation](https://github.com/d3/d3-force). Bounding box is a rule that produces a top-left and bottom right corner with coordinates local to the center of the node. So, in this case the size of the bounding box is fixed at a height of 20px offset by 10px and a variable width based on the length of the label of the node.\n\n[Source code here](https://github.com/emeeks/d3-force/blob/master/src/rectCollide.js)", "uid": "emeeks_b3851789fcc3bf0c65ea9a34c3dca7bb"}, {"code": "<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 150, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 470 - margin.top - margin.bottom;\n\n// array of curve functions and tites\nvar curveArray = [\n    {\"d3Curve\":d3.curveLinear,\"curveTitle\":\"curveLinear\"},\n    {\"d3Curve\":d3.curveStep,\"curveTitle\":\"curveStep\"},\n    {\"d3Curve\":d3.curveStepBefore,\"curveTitle\":\"curveStepBefore\"},\n    {\"d3Curve\":d3.curveStepAfter,\"curveTitle\":\"curveStepAfter\"},\n    {\"d3Curve\":d3.curveBasis,\"curveTitle\":\"curveBasis\"},\n    {\"d3Curve\":d3.curveCardinal,\"curveTitle\":\"curveCardinal\"},\n    {\"d3Curve\":d3.curveMonotoneX,\"curveTitle\":\"curveMonotoneX\"},\n    {\"d3Curve\":d3.curveCatmullRom,\"curveTitle\":\"curveCatmullRom\"}\n  ];\n\n// parse the date / time\nvar parseTime = d3.timeParse(\"%d-%b-%y\");\n\n// set the ranges\nvar x = d3.scaleTime().range([0, width]);\nvar y = d3.scaleLinear().range([height, 0]);\n\n// define the line\nvar valueline = d3.line()\n    .curve(d3.curveCatmullRomOpen)\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n\n// append the svg obgect to the body of the page\n// appends a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data-3.csv\", function(error, data) {\n  if (error) throw error;\n\n  // format the data\n  data.forEach(function(d) {\n      d.date = parseTime(d.date);\n      d.close = +d.close;\n  });\n\n  // set the colour scale\n  var color = d3.scaleOrdinal(d3.schemeCategory10);\n\n  curveArray.forEach(function(daCurve,i) { \n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain(d3.extent(data, function(d) { return d.close; }));\n\n    // Add the paths with different curves.\n    svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .style(\"stroke\", function() { // Add the colours dynamically\n              return daCurve.color = color(daCurve.curveTitle); })\n      .attr(\"id\", 'tag'+i) // assign ID\n      .attr(\"d\", d3.line()\n                   .curve(daCurve.d3Curve)\n                   .x(function(d) { return x(d.date); })\n                   .y(function(d) { return y(d.close); })\n               );\n\n    // Add the Legend\n    svg.append(\"text\")\n        .attr(\"x\", width+5)  // space legend\n        .attr(\"y\", margin.top + 20 + (i * 20))\n        .attr(\"class\", \"legend\")    // style the legend\n        .style(\"fill\", function() { // Add the colours dynamically\n            return daCurve.color = color(daCurve.curveTitle); })\n        .on(\"click\", function(){\n            // Determine if current line is visible \n            var active   = daCurve.active ? false : true,\n            newOpacity = active ? 0 : 1; \n            // Hide or show the elements based on the ID\n            d3.select(\"#tag\"+i)\n                .transition().duration(100) \n                .style(\"opacity\", newOpacity); \n            // Update whether or not the elements are active\n            daCurve.active = active;\n            })  \n        .text(daCurve.curveTitle);\n  });\n\n  // Add the scatterplot\n  svg.selectAll(\"dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"r\", 4)\n      .attr(\"cx\", function(d) { return x(d.date); })\n      .attr(\"cy\", function(d) { return y(d.close); });\n\n  // Add the X Axis\n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // Add the Y Axis\n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .call(d3.axisLeft(y));\n});\n\n</script>", "description": "v4 curve interpolation comparison", "created_at": "2016-07-09T22:33:33Z", "updated_at": "2016-07-10T06:31:58Z", "api": ["d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.line", "d3.select", "d3.csv", "d3.scaleOrdinal", "d3.extent", "d3.axisBottom", "d3.axisLeft"], "readme": "This bl.ock demonstrates the range of interpolation curves available in v4 of d3.js. \n\nYou can click on any of the legend labels to toggle visibility of the lines.\n\nDetails of the curve can be found on the [D3 wiki](https://github.com/d3/d3-shape/blob/master/README.md#curves).\n\nThis graph is part of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js.", "uid": "d3noob_ced1b9b18bd8192d2c898884033b5529"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar projection = d3.geoInterrupt(d3.geoSinusoidalRaw,\n      [[ // northern hemisphere\n        [[-180,   0], [-120,  90], [ -60,   0]],\n        [[ -60,   0], [   0,  90], [  60,   0]],\n        [[  60,   0], [ 120,  90], [ 180,   0]]\n      ], [ // southern hemisphere\n        [[-180,   0], [-180, -90], [ -120,  0]],\n        [[-120,   0], [ -60, -90], [   0,   0]],\n        [[   0,   0], [  60, -90], [ 120,   0]],\n        [[ 120,   0], [ 180, -90], [ 180,   0]]\n      ]])\n    .rotate([0, 0])\n    .scale(152)\n    .translate([width / 2, height / 2])\n    .precision(0.1);\n\nvar graticule = d3.geoGraticule();\n\nvar path = d3.geoPath()\n    .projection(projection);\n\nvar defs = svg.append(\"defs\");\n\ndefs.append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\ndefs.append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"use\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"fill\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .attr(\"d\", path);\n\nd3.json(\"/mbostock/raw/4090846/world-50m.json\", function(error, world) {\n  if (error) throw error;\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"clip-path\", \"url(#clip)\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"clip-path\", \"url(#clip)\")\n      .attr(\"d\", path);\n});\n\n</script>", "description": "Interrupted Sinusoidal II", "created_at": "2016-07-07T20:38:51Z", "updated_at": "2016-08-03T21:49:26Z", "api": ["d3.select", "d3.geoInterrupt", "d3.geoGraticule", "d3.geoPath", "d3.json"], "readme": "An [interrupted](https://github.com/d3/d3-geo-projection#geoInterrupt) [sinusoidal](https://github.com/d3/d3-geo-projection#geoSinusoidal) projection using [d3-geo-projection](https://github.com/d3/d3-geo-projection). See an [alternative interrupted form](/mbostock/4458991).\n", "uid": "mbostock_76d0c2cf689a02c35986af6e0931079d"}, {"code": "<script>\n  \n    mapboxgl.accessToken = 'pk.eyJ1Ijoic2luY2xhcml1cyIsImEiOiJjaXBvZjdxOXQwMXFvZnVtM3A4YmFrejN2In0.ze62-HAgTD4AOTZPmRJh_Q'\n    \n    //Setup mapbox-gl map\n    var map = new mapboxgl.Map({\n      container: 'map', // container id\n      style: 'mapbox://styles/sinclarius/ciq1fxpkp0042bem57703bm2t',\n      center: [35.11,106.6],\n      zoom: 12.7,\n      \n    })\n    map.scrollZoom.disable()\n    map.addControl(new mapboxgl.Navigation());\n\n    // Setup our svg layer that we can manipulate with d3\n    var container = map.getCanvasContainer()\n    var svg = d3.select(container).append(\"svg\")\n\n    \n    function project(d) {\n      return map.project(getLL(d));\n    }\n    function getLL(d) {\n      return new mapboxgl.LngLat(+d.lon, +d.lat)\n    }\n  \n    d3.csv(\"dots.csv\", function(err, data) {\n      //console.log(data[0], getLL(data[0]), project(data[0]))\n      var dots = svg.selectAll(\"circle.dot\")\n        .data(data)\n      \n      dots.enter().append(\"circle\").classed(\"dot\", true)\n      .attr(\"r\", 1)\n      .style({\n        fill: \"#0082a3\",\n        \"fill-opacity\": 0.6,\n        stroke: \"#004d60\",\n        \"stroke-width\": 1\n      })\n      .transition().duration(1000)\n      .attr(\"r\", 6)\n      \n      function render() {\n        dots\n        .attr({\n          cx: function(d) { \n            var x = project(d).x;\n            return x\n          },\n          cy: function(d) { \n            var y = project(d).y;\n            return y\n          },\n        })\n      }\n\n      // re-render our visualization whenever the view changes\n      map.on(\"viewreset\", function() {\n        render()\n      })\n      map.on(\"move\", function() {\n        render()\n      })\n\n      // render our initial visualization\n      render()\n    })\n\n    \n  </script>", "description": "dots on a map: setup-gl", "created_at": "2016-07-06T20:54:00Z", "updated_at": "2016-07-06T20:54:00Z", "api": ["d3.select", "d3.csv"], "readme": "This is a simple setup of Leaflet (via Mapbox) with d3 to show dots on a map. This can serve as a base for many interesting geographically based visualizations\n\nNice overview of using [d3 + Leaflet](http://chriszetter.com/blog/2014/06/15/building-a-voronoi-map-with-d3-and-leaflet/). \nI found this slightly simpler to use than Mike's [classic post](http://bost.ocks.org/mike/leaflet/).\n\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/18cb7a77b2d9de597b86'>dots on a map: setup-gl</a>\n\n\nforked from <a href='http://bl.ocks.org/sinclarius/'>sinclarius</a>'s block: <a href='http://bl.ocks.org/sinclarius/0e27b824271a81596525ded4e61a7077'>dots on a map: setup-gl</a>", "uid": "sinclarius_46d50bdc7d91dd4671e33b49428e30c6"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\").attr(\"transform\", \"rotate(90 480,480)\");\n\nvar projection = d3.geoPierceQuincuncial()\n    .scale(214)\n    .translate([width / 2, height / 2])\n    .rotate([0, 0, 45])\n    .precision(0.1)\n    .clipAngle(90);\n\nvar path = d3.geoPath()\n    .projection(projection);\n\nvar graticule = d3.geoGraticule();\n\ng.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\ng.append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"class\", \"sphere\")\n    .attr(\"d\", path)\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"black\");\n\nd3.json(\"/mbostock/raw/4090846/world-50m.json\", function(error, world) {\n  if (error) throw error;\n\n  g.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  g.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n});\n\n</script>", "description": "Adams", "created_at": "2016-07-05T17:23:54Z", "updated_at": "2016-07-05T17:23:54Z", "api": ["d3.select", "d3.geoPierceQuincuncial", "d3.geoPath", "d3.geoGraticule", "d3.json"], "readme": "The Adams hemisphere-in-a-square is a transverse version of the Peirce quincuncial projection, which is available in [d3-geo-projection](https://github.com/d3/d3-geo-projection).\n", "uid": "wboykinm_c7c21293250b08c079d512d81be427f7"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 110, left: 40},\n    margin2 = {top: 430, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    height2 = +svg.attr(\"height\") - margin2.top - margin2.bottom;\n\nvar parseDate = d3.timeParse(\"%b %Y\");\n\nvar x = d3.scaleTime().range([0, width]),\n    x2 = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    y2 = d3.scaleLinear().range([height2, 0]);\n\nvar xAxis = d3.axisBottom(x),\n    xAxis2 = d3.axisBottom(x2),\n    yAxis = d3.axisLeft(y);\n\nvar brush = d3.brushX()\n    .extent([[0, 0], [width, height2]])\n    .on(\"brush end\", brushed);\n\nvar zoom = d3.zoom()\n    .scaleExtent([1, Infinity])\n    .translateExtent([[0, 0], [width, height]])\n    .extent([[0, 0], [width, height]])\n    .on(\"zoom\", zoomed);\n\nvar area = d3.area()\n    .curve(d3.curveMonotoneX)\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.price); });\n\nvar area2 = d3.area()\n    .curve(d3.curveMonotoneX)\n    .x(function(d) { return x2(d.date); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.price); });\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar context = svg.append(\"g\")\n    .attr(\"class\", \"context\")\n    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\nd3.csv(\"sp500.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.price; })]);\n  x2.domain(x.domain());\n  y2.domain(y.domain());\n\n  focus.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(yAxis);\n\n  context.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(brush)\n      .call(brush.move, x.range());\n\n  svg.append(\"rect\")\n      .attr(\"class\", \"zoom\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .call(zoom);\n});\n\nfunction brushed() {\n  if (d3.event.sourceEvent && d3.event.sourceEvent.type === \"zoom\") return; // ignore brush-by-zoom\n  var s = d3.event.selection || x2.range();\n  x.domain(s.map(x2.invert, x2));\n  focus.select(\".area\").attr(\"d\", area);\n  focus.select(\".axis--x\").call(xAxis);\n  svg.select(\".zoom\").call(zoom.transform, d3.zoomIdentity\n      .scale(width / (s[1] - s[0]))\n      .translate(-s[0], 0));\n}\n\nfunction zoomed() {\n  if (d3.event.sourceEvent && d3.event.sourceEvent.type === \"brush\") return; // ignore zoom-by-brush\n  var t = d3.event.transform;\n  x.domain(t.rescaleX(x2).domain());\n  focus.select(\".area\").attr(\"d\", area);\n  focus.select(\".axis--x\").call(xAxis);\n  context.select(\".brush\").call(brush.move, x.range().map(t.invertX, t));\n}\n\nfunction type(d) {\n  d.date = parseDate(d.date);\n  d.price = +d.price;\n  return d;\n}\n\n</script>", "description": "Brush & Zoom", "created_at": "2016-07-04T20:49:42Z", "updated_at": "2016-08-18T18:36:45Z", "api": ["d3.select", "d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.brushX", "d3.zoom", "d3.area", "d3.csv", "d3.extent", "d3.max"], "readme": "Combining [d3-brush](https://github.com/d3/d3-brush) and [d3-zoom](https://github.com/d3/d3-zoom) to implement Focus + Context. Another approach is to [zoom to the brushed region](/mbostock/f48fcdb929a620ed97877e4678ab15e6).\n", "uid": "mbostock_34f08d5e11952a80609169b7917d4172"}, {"code": "<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 20, bottom: 70, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// parse the date / time\nvar parseTime = d3.timeParse(\"%d-%b-%y\");\n\n// set the ranges\nvar x = d3.scaleTime().range([0, width]);\nvar y = d3.scaleLinear().range([height, 0]);\n\n// define the line\nvar valueline = d3.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n\n// append the svg obgect to the body of the page\n// appends a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  // format the data\n  data.forEach(function(d) {\n      d.date = parseTime(d.date);\n      d.close = +d.close;\n  });\n\n  // Scale the range of the data\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n  // Add the valueline path.\n  svg.append(\"path\")\n      .data([data])\n      .attr(\"class\", \"line\")\n      .attr(\"d\", valueline);\n\n  // Add the X Axis\n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).ticks(10))\n      .selectAll(\"text\")\t\n        .style(\"text-anchor\", \"end\")\n        .attr(\"dx\", \"-.8em\")\n        .attr(\"dy\", \".15em\")\n        .attr(\"transform\", \"rotate(-65)\");\n\n  // Add the Y Axis\n  svg.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .call(d3.axisLeft(y));\n\n});\n\n</script>", "description": "Rotated axis labels in v4", "created_at": "2016-07-03T09:59:30Z", "updated_at": "2016-07-03T18:42:02Z", "api": ["d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.line", "d3.select", "d3.csv", "d3.extent", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This is a simple line graph demonstrating rotated axis labels. This was written using d3.js v4 and is a follow on to the simple graph example [here](http://bl.ocks.org/d3noob/402dd382a51a4f6eea487f9a35566de0). \n\nThis graph is part of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js.", "uid": "d3noob_3c040800ff6457717cca586ae9547dbf"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\").attr(\"transform\", \"rotate(90 480,480)\");\n\nvar projection = d3.geoPierceQuincuncial() // N.B. geoPeirceQuincuncial in 1.1+\n    .scale(214)\n    .translate([width / 2, height / 2])\n    .rotate([0, 0, 45])\n    .precision(0.1);\n\nvar path = d3.geoPath()\n    .projection(projection);\n\nvar graticule = d3.geoGraticule();\n\ng.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\ng.append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"class\", \"sphere\")\n    .attr(\"d\", path)\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"black\");\n\nd3.json(\"/mbostock/raw/4090846/world-50m.json\", function(error, world) {\n  if (error) throw error;\n\n  g.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  g.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n});\n\n</script>", "description": "Peirce Equatorial", "created_at": "2016-07-02T05:24:54Z", "updated_at": "2016-07-07T17:34:58Z", "api": ["d3.select", "d3.geoPierceQuincuncial", "d3.geoPath", "d3.geoGraticule", "d3.json"], "readme": "The equatorial aspect of the [Peirce quincuncial](/mbostock/4310087) projection, which is available in [d3-geo-projection](https://github.com/d3/d3-geo-projection). By setting the [clip angle](https://github.com/d3/d3-geo#projection_clipAngle) to 90\u00b0, you can produce the [Adams hemisphere-in-a-square](https://en.wikipedia.org/wiki/Adams_hemisphere-in-a-square_projection) projection.\n", "uid": "mbostock_1ab623030a9d563271f55c5c55dbaf77"}, {"code": "<script>\n\nvar pi = Math.PI,\n    tau = 2 * pi;\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\n// Initialize the projection to fit the world in a 11 square centered at the origin.\nvar projection = d3.geoMercator()\n    .scale(1 / tau)\n    .translate([0, 0]);\n\n// Compute the projected bounding box given a geographic bounding box (here, California).\n// This assumes parallels are horizontal and meridians are vertical\n// but you could use path.bounds to handle arbitrary shapes.\n// Note that the y-dimension is flipped relative to latitude!\nvar bounds = [[-124.408585, 32.534291], [-114.138271, 42.007768]],\n    p0 = projection([bounds[0][0], bounds[1][1]]),\n    p1 = projection([bounds[1][0], bounds[0][1]]);\n\n// Convert this to a scale k and translate tx, ty for the projection.\n// For crisp image tiles, clamp to the nearest power of two.\nvar k = floor(0.95 / Math.max((p1[0] - p0[0]) / width, (p1[1] - p0[1]) / height)),\n    tx = (width - k * (p1[0] + p0[0])) / 2,\n    ty = (height - k * (p1[1] + p0[1])) / 2;\n\nprojection\n    .scale(k / tau)\n    .translate([tx, ty]);\n\n// Lastly convert this to the corresponding tile.scale and tile.translate;\n// see http://bl.ocks.org/mbostock/4150951 for a related example.\nvar tiles = d3.tile()\n    .size([width, height])\n    .scale(k)\n    .translate([tx, ty])\n    ();\n\nd3.select(\"#tiles\")\n  .selectAll(\"img\").data(tiles).enter().append(\"img\")\n    .style(\"position\", \"absolute\")\n    .attr(\"src\", function(d, i) { return \"http://\" + \"abc\"[d[1] % 3] + \".tile.openstreetmap.org/\" + d[2] + \"/\" + d[0] + \"/\" + d[1] + \".png\"; })\n    .style(\"left\", function(d) { return (d.x / tiles.scale + tiles.translate[0]) * tiles.scale + \"px\"; })\n    .style(\"top\", function(d) { return (d.y / tiles.scale + tiles.translate[1]) * tiles.scale + \"px\"; })\n    .attr(\"width\", tiles.scale)\n    .attr(\"height\", tiles.scale);\n\nd3.json(\"https://gist.githubusercontent.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/us.json\", function(error, us) {\n  if (error) throw error;\n\n  svg.append(\"path\")\n      .datum(topojson.mesh(us, us.objects.states))\n      .attr(\"d\", d3.geoPath().projection(projection))\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#000\");\n});\n\nfunction floor(k) {\n  return Math.pow(2, Math.floor(Math.log(k) / Math.LN2));\n}\n\n</script>", "description": "[unlisted] Tile by Bounding Box (wrap update)", "created_at": "2016-07-01T07:46:59Z", "updated_at": "2016-07-30T00:22:34Z", "api": ["d3.select", "d3.geoMercator", "d3.tile", "d3.json", "d3.geoPath"], "readme": "A demo of [d3-tile](https://github.com/d3/d3-tile) when projecting to [fit a bounding box](/mbostock/4707858).\n\nTiles copyright [OpenStreetMap contributors](https://www.openstreetmap.org/copyright).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/eb0c48375fcdcdc00c54a92724733d0d'>Tile by Bounding Box (wrap update)</a>", "uid": "curran_395b9670077d49480ad4d808c7f93eff"}, {"code": "<script>\n\nvar pi = Math.PI,\n    tau = 2 * pi;\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\n// Initialize the projection to fit the world in a 11 square centered at the origin.\nvar projection = d3.geoMercator()\n    .scale(1 / tau)\n    .translate([0, 0]);\n\n// Compute the projected bounding box given a geographic bounding box (here, California).\n// This assumes parallels are horizontal and meridians are vertical\n// but you could use path.bounds to handle arbitrary shapes.\n// Note that the y-dimension is flipped relative to latitude!\nvar bounds = [[-124.408585, 32.534291], [-114.138271, 42.007768]],\n    p0 = projection([bounds[0][0], bounds[1][1]]),\n    p1 = projection([bounds[1][0], bounds[0][1]]);\n\n// Convert this to a scale k and translate tx, ty for the projection.\n// For crisp image tiles, clamp to the nearest power of two.\nvar k = floor(0.95 / Math.max((p1[0] - p0[0]) / width, (p1[1] - p0[1]) / height)),\n    tx = (width - k * (p1[0] + p0[0])) / 2,\n    ty = (height - k * (p1[1] + p0[1])) / 2;\n\nprojection\n    .scale(k / tau)\n    .translate([tx, ty]);\n\n// Lastly convert this to the corresponding tile.scale and tile.translate;\n// see http://bl.ocks.org/mbostock/4150951 for a related example.\nvar tiles = d3.tile()\n    .size([width, height])\n    .scale(k)\n    .translate([tx, ty])\n    ();\n\nd3.select(\"#tiles\")\n  .selectAll(\"img\").data(tiles).enter().append(\"img\")\n    .style(\"position\", \"absolute\")\n    .attr(\"src\", function(d, i) { return \"http://\" + \"abc\"[d[1] % 3] + \".tile.openstreetmap.org/\" + d[2] + \"/\" + d[0] + \"/\" + d[1] + \".png\"; })\n    .style(\"left\", function(d) { return (d[0] + tiles.translate[0]) * tiles.scale + \"px\"; })\n    .style(\"top\", function(d) { return (d[1] + tiles.translate[1]) * tiles.scale + \"px\"; })\n    .attr(\"width\", tiles.scale)\n    .attr(\"height\", tiles.scale);\n\nd3.json(\"/mbostock/raw/4090846/us.json\", function(error, us) {\n  if (error) throw error;\n\n  svg.append(\"path\")\n      .datum(topojson.mesh(us, us.objects.states))\n      .attr(\"d\", d3.geoPath().projection(projection))\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#000\");\n});\n\nfunction floor(k) {\n  return Math.pow(2, Math.floor(Math.log(k) / Math.LN2));\n}\n\n</script>", "description": "Tile by Bounding Box", "created_at": "2016-06-24T21:20:21Z", "updated_at": "2016-09-27T19:47:11Z", "api": ["d3.select", "d3.geoMercator", "d3.tile", "d3.json", "d3.geoPath"], "readme": "A demo of [d3-tile](https://github.com/d3/d3-tile) when projecting to [fit a bounding box](/mbostock/4707858).\n\nTiles copyright [OpenStreetMap contributors](https://www.openstreetmap.org/copyright).\n", "uid": "mbostock_eb0c48375fcdcdc00c54a92724733d0d"}, {"code": "<script>\n\nvar margin = {top: 10, right: 10, bottom: 100, left: 40},\n    margin2 = {top: 430, right: 10, bottom: 20, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    height2 = 500 - margin2.top - margin2.bottom;\n\nvar parseDate = d3.time.format(\"%b %Y\").parse;\n\nvar x = d3.time.scale().range([0, width]),\n    x2 = d3.time.scale().range([0, width]),\n    y = d3.scale.linear().range([height, 0]),\n    y2 = d3.scale.linear().range([height2, 0]);\n\nvar xAxis = d3.svg.axis().scale(x).orient(\"bottom\"),\n    xAxis2 = d3.svg.axis().scale(x2).orient(\"bottom\"),\n    yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\nvar brush = d3.svg.brush()\n    .x(x2)\n    .on(\"brush\", brushed);\n\nvar area = d3.svg.area()\n    .interpolate(\"monotone\")\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.price); });\n\nvar area2 = d3.svg.area()\n    .interpolate(\"monotone\")\n    .x(function(d) { return x2(d.date); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.price); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom);\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar context = svg.append(\"g\")\n    .attr(\"class\", \"context\")\n    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\nd3.csv(\"sp500.csv\", type, function(error, data) {\n  x.domain(d3.extent(data.map(function(d) { return d.date; })));\n  y.domain([0, d3.max(data.map(function(d) { return d.price; }))]);\n  x2.domain(x.domain());\n  y2.domain(y.domain());\n\n  focus.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n  context.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"x brush\")\n      .call(brush)\n    .selectAll(\"rect\")\n      .attr(\"y\", -6)\n      .attr(\"height\", height2 + 7);\n});\n\nfunction brushed() {\n  x.domain(brush.empty() ? x2.domain() : brush.extent());\n  focus.select(\".area\").attr(\"d\", area);\n  focus.select(\".x.axis\").call(xAxis);\n}\n\nfunction type(d) {\n  d.date = parseDate(d.date);\n  d.price = +d.price;\n  return d;\n}\n\n</script>", "description": "Focus+Context via Brushing", "created_at": "2016-06-24T21:01:53Z", "updated_at": "2016-06-24T21:01:53Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.brush", "d3.svg.area", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This examples demonstrates how to use D3's brush component to implement focus + context zooming. Click and drag in the small chart below to pan or zoom.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1667367'>Focus+Context via Brushing</a>", "uid": "sampathweb_4537242756735c02c8a4168dfd4477a1"}, {"code": "<script>\n    console.clear()\n    \n    function csv2json(csv){\n      \n      var nested = d3.nest()\n      \t.key(function(d){ return d.name; })\n        .entries(csv)\n      \t\n      var json = nested.map(function(d){\n        var namerecord = {};\n        \n        // this is the variable that we grouped by\n        namerecord.name = d.key; \n        namerecord.Region = d.key;\n        // this is another variable that I happen to know is constant for all\n        // years within a given \"name\", so I'll just grab the first value\n        namerecord.Region = d.values[0].Region;\n        \n        // these are the time-series variables\n        // use a \"map\" to grab the year and amount from each of the child \"values\"\n        namerecord.Claims = d.values.map(function(c){ return [c.Year, c.Claims]; });\n        namerecord.Avg_indm = d.values.map(function(c){ return [c.Year, c.Avg_indm]; });\n        namerecord.Avg_med = d.values.map(function(c){ return [c.Year, c.Avg_med]; });\n        //namerecord.premium2 = d.values.map(function(c){ return [c.year, c.premium2]; });\n        return namerecord;\n      });\n      \n      return json;\n    }\n    \n    d3.xhr(\"data.csv\", function(csv){\n    \tconsole.log(csv)\n      //d3.select(\"p#csv\").html(csv.responseText);\n\t\t})\n                \n    d3.csv(\"data.csv\", function(csv){\n    \n      csv.forEach(function(d){\n        d.year = +d.year;\n        d.claims = +d.claims;\n        d.population = +d.population;\n        d.premium = +d.premium;\n       // d.amount2 = +d.amount2;\n      });\n                  \n      console.table(csv);\n      \n      var json = csv2json(csv);\n      \n      console.log(json);\n      \n      \n      d3.select(\"p#json\").html(JSON.stringify(json, null, 2));\n      \n    })\n    \n  </script>", "description": "CSV to JSON", "created_at": "2016-06-24T17:55:56Z", "updated_at": "2016-08-19T19:07:31Z", "api": ["d3.nest", "d3.xhr", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/SpaceActuary/'>SpaceActuary</a>'s block: <a href='http://bl.ocks.org/SpaceActuary/05a817243f852a288608fab788fd85ee'>CSV to JSON</a>", "uid": "Lincoln-Jiang_0ef080ff190d17a2325a49e818de5311"}, {"code": "<script>\n\nvar m = [20, 20, 30, 20],\n    w = 960 - m[1] - m[3],\n    h = 500 - m[0] - m[2];\n\nvar x,\n    y,\n    duration = 1500,\n    delay = 500;\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", w + m[1] + m[3])\n    .attr(\"height\", h + m[0] + m[2])\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\nvar stocks,\n    symbols;\n\n// A line generator, for the dark stroke.\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); });\n\n// A line generator, for the dark stroke.\nvar axis = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(h);\n\n// A area generator, for the dark stroke.\nvar area = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y1(function(d) { return y(d.price); });\n\nd3.csv(\"stocks.csv\", function(data) {\n  var parse = d3.time.format(\"%b %Y\").parse;\n\n  // Nest stock values by symbol.\n  symbols = d3.nest()\n      .key(function(d) { return d.symbol; })\n      .entries(stocks = data);\n\n  // Parse dates and numbers. We assume values are sorted by date.\n  // Also compute the maximum price per symbol, needed for the y-domain.\n  symbols.forEach(function(s) {\n    s.values.forEach(function(d) { d.date = parse(d.date); d.price = +d.price; });\n    s.maxPrice = d3.max(s.values, function(d) { return d.price; });\n    s.sumPrice = d3.sum(s.values, function(d) { return d.price; });\n  });\n\n  // Sort by maximum price, descending.\n  symbols.sort(function(a, b) { return b.maxPrice - a.maxPrice; });\n\n  var g = svg.selectAll(\"g\")\n      .data(symbols)\n    .enter().append(\"g\")\n      .attr(\"class\", \"symbol\");\n\n  setTimeout(lines, duration);\n});\n\nfunction lines() {\n  x = d3.time.scale().range([0, w - 60]);\n  y = d3.scale.linear().range([h / 4 - 20, 0]);\n\n  // Compute the minimum and maximum date across symbols.\n  x.domain([\n    d3.min(symbols, function(d) { return d.values[0].date; }),\n    d3.max(symbols, function(d) { return d.values[d.values.length - 1].date; })\n  ]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + (i * h / 4 + 10) + \")\"; });\n\n  g.each(function(d) {\n    var e = d3.select(this);\n\n    e.append(\"path\")\n        .attr(\"class\", \"line\");\n\n    e.append(\"circle\")\n        .attr(\"r\", 5)\n        .style(\"fill\", function(d) { return color(d.key); })\n        .style(\"stroke\", \"#000\")\n        .style(\"stroke-width\", \"2px\");\n\n    e.append(\"text\")\n        .attr(\"x\", 12)\n        .attr(\"dy\", \".31em\")\n        .text(d.key);\n  });\n\n  function draw(k) {\n    g.each(function(d) {\n      var e = d3.select(this);\n      y.domain([0, d.maxPrice]);\n\n      e.select(\"path\")\n          .attr(\"d\", function(d) { return line(d.values.slice(0, k + 1)); });\n\n      e.selectAll(\"circle, text\")\n          .data(function(d) { return [d.values[k], d.values[k]]; })\n          .attr(\"transform\", function(d) { return \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\"; });\n    });\n  }\n\n  var k = 1, n = symbols[0].values.length;\n  d3.timer(function() {\n    draw(k);\n    if ((k += 2) >= n - 1) {\n      draw(n - 1);\n      setTimeout(horizons, 500);\n      return true;\n    }\n  });\n}\n\nfunction horizons() {\n  svg.insert(\"defs\", \".symbol\")\n    .append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", w)\n      .attr(\"height\", h / 4 - 20);\n\n  var color = d3.scale.ordinal()\n      .range([\"#c6dbef\", \"#9ecae1\", \"#6baed6\"]);\n\n  var g = svg.selectAll(\".symbol\")\n      .attr(\"clip-path\", \"url(#clip)\");\n\n  area\n      .y0(h / 4 - 20);\n\n  g.select(\"circle\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (-h / 4) + \")\"; })\n      .remove();\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (h / 4 - 20) + \")\"; })\n      .attr(\"dy\", \"0em\");\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).selectAll(\".area\")\n        .data(d3.range(3))\n      .enter().insert(\"path\", \".line\")\n        .attr(\"class\", \"area\")\n        .attr(\"transform\", function(d) { return \"translate(0,\" + (d * (h / 4 - 20)) + \")\"; })\n        .attr(\"d\", area(d.values))\n        .style(\"fill\", function(d, i) { return color(i); })\n        .style(\"fill-opacity\", 1e-6);\n\n    y.domain([0, d.maxPrice / 3]);\n\n    d3.select(this).selectAll(\".line\").transition()\n        .duration(duration)\n        .attr(\"d\", line(d.values))\n        .style(\"stroke-opacity\", 1e-6);\n\n    d3.select(this).selectAll(\".area\").transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1)\n        .attr(\"d\", area(d.values))\n        .each(\"end\", function() { d3.select(this).style(\"fill-opacity\", null); });\n  });\n\n  setTimeout(areas, duration + delay);\n}\n\nfunction areas() {\n  var g = svg.selectAll(\".symbol\");\n\n  axis\n      .y(h / 4 - 21);\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return axis(d.values); });\n\n  g.each(function(d) {\n    y.domain([0, d.maxPrice]);\n\n    d3.select(this).select(\".line\").transition()\n        .duration(duration)\n        .style(\"stroke-opacity\", 1)\n        .each(\"end\", function() { d3.select(this).style(\"stroke-opacity\", null); });\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1e-6)\n        .attr(\"d\", area(d.values))\n        .remove();\n\n    d3.select(this).selectAll(\".area\")\n        .filter(function(d, i) { return !i; })\n      .transition()\n        .duration(duration)\n        .style(\"fill\", color(d.key))\n        .attr(\"d\", area(d.values));\n  });\n\n  svg.select(\"defs\").transition()\n      .duration(duration)\n      .remove();\n\n  g.transition()\n      .duration(duration)\n      .each(\"end\", function() { d3.select(this).attr(\"clip-path\", null); });\n\n  setTimeout(stackedArea, duration + delay);\n}\n\nfunction stackedArea() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  area\n      .y0(function(d) { return y(d.price0); })\n      .y1(function(d) { return y(d.price0 + d.price); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration)\n      .attr(\"transform\", \"translate(0,0)\")\n      .each(\"end\", function() { d3.select(this).attr(\"transform\", null); });\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", function(d, i) { return i < 3 ? 1e-6 : 1; })\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(streamgraph, duration + delay);\n}\n\nfunction streamgraph() {\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\")\n      .offset(\"wiggle\");\n\n  stack(symbols);\n\n  line\n      .y(function(d) { return y(d.price0); });\n\n  var t = svg.selectAll(\".symbol\").transition()\n      .duration(duration);\n\n  t.select(\"path.area\")\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"path.line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\"text\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  setTimeout(overlappingArea, duration + delay);\n}\n\nfunction overlappingArea() {\n  var g = svg.selectAll(\".symbol\");\n\n  line\n      .y(function(d) { return y(d.price0 + d.price); });\n\n  g.select(\".line\")\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d.maxPrice; }))])\n      .range([h, 0]);\n\n  area\n      .y0(h)\n      .y1(function(d) { return y(d.price); });\n\n  line\n      .y(function(d) { return y(d.price); });\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1)\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", .5)\n      .attr(\"d\", function(d) { return area(d.values); });\n\n  t.select(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price) + \")\"; });\n\n  svg.append(\"line\")\n      .attr(\"class\", \"line\")\n      .attr(\"x1\", 0)\n      .attr(\"x2\", w - 60)\n      .attr(\"y1\", h)\n      .attr(\"y2\", h)\n      .style(\"stroke-opacity\", 1e-6)\n    .transition()\n      .duration(duration)\n      .style(\"stroke-opacity\", 1);\n\n  setTimeout(groupedBar, duration + delay);\n}\n\nfunction groupedBar() {\n  x = d3.scale.ordinal()\n      .domain(symbols[0].values.map(function(d) { return d.date; }))\n      .rangeBands([0, w - 60], .1);\n\n  var x1 = d3.scale.ordinal()\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeBands([0, x.rangeBand()]);\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration);\n\n  t.select(\".line\")\n      .style(\"stroke-opacity\", 1e-6)\n      .remove();\n\n  t.select(\".area\")\n      .style(\"fill-opacity\", 1e-6)\n      .remove();\n\n  g.each(function(p, j) {\n    d3.select(this).selectAll(\"rect\")\n        .data(function(d) { return d.values; })\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.date) + x1(p.key); })\n        .attr(\"y\", function(d) { return y(d.price); })\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"height\", function(d) { return h - y(d.price); })\n        .style(\"fill\", color(p.key))\n        .style(\"fill-opacity\", 1e-6)\n      .transition()\n        .duration(duration)\n        .style(\"fill-opacity\", 1);\n  });\n\n  setTimeout(stackedBar, duration + delay);\n}\n\nfunction stackedBar() {\n  x.rangeRoundBands([0, w - 60], .1);\n\n  var stack = d3.layout.stack()\n      .values(function(d) { return d.values; })\n      .x(function(d) { return d.date; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; })\n      .order(\"reverse\");\n\n  var g = svg.selectAll(\".symbol\");\n\n  stack(symbols);\n\n  y\n      .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n      .range([h, 0]);\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.select(\"text\")\n      .delay(symbols[0].values.length * 10)\n      .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price); })\n      .attr(\"height\", function(d) { return h - y(d.price); })\n      .each(\"end\", function() {\n        d3.select(this)\n            .style(\"stroke\", \"#fff\")\n            .style(\"stroke-opacity\", 1e-6)\n          .transition()\n            .duration(duration / 2)\n            .attr(\"x\", function(d) { return x(d.date); })\n            .attr(\"width\", x.rangeBand())\n            .style(\"stroke-opacity\", 1);\n      });\n\n  setTimeout(transposeBar, duration + symbols[0].values.length * 10 + delay);\n}\n\nfunction transposeBar() {\n  x\n      .domain(symbols.map(function(d) { return d.key; }))\n      .rangeRoundBands([0, w], .2);\n\n  y\n      .domain([0, d3.max(symbols.map(function(d) { return d3.sum(d.values.map(function(d) { return d.price; })); }))]);\n\n  var stack = d3.layout.stack()\n      .x(function(d, i) { return i; })\n      .y(function(d) { return d.price; })\n      .out(function(d, y0, y) { d.price0 = y0; });\n\n  stack(d3.zip.apply(null, symbols.map(function(d) { return d.values; }))); // transpose!\n\n  var g = svg.selectAll(\".symbol\");\n\n  var t = g.transition()\n      .duration(duration / 2);\n\n  t.selectAll(\"rect\")\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.price0 + d.price) - 1; })\n      .attr(\"height\", function(d) { return h - y(d.price) + 1; })\n      .attr(\"x\", function(d) { return x(d.symbol); })\n      .attr(\"width\", x.rangeBand())\n      .style(\"stroke-opacity\", 1e-6);\n\n  t.select(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"transform\", function(d) { return \"translate(\" + (x(d.key) + x.rangeBand() / 2) + \",\" + h + \")\"; })\n      .attr(\"dy\", \"1.31em\")\n      .each(\"end\", function() { d3.select(this).attr(\"x\", null).attr(\"text-anchor\", \"middle\"); });\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"x2\", w);\n\n  setTimeout(donut,  duration / 2 + symbols[0].values.length * 10 + delay);\n}\n\nfunction donut() {\n  var g = svg.selectAll(\".symbol\");\n\n  g.selectAll(\"rect\").remove();\n\n  var pie = d3.layout.pie()\n      .value(function(d) { return d.sumPrice; });\n\n  var arc = d3.svg.arc();\n\n  g.append(\"path\")\n      .style(\"fill\", function(d) { return color(d.key); })\n      .data(function() { return pie(symbols); })\n    .transition()\n      .duration(duration)\n      .tween(\"arc\", arcTween);\n\n  g.select(\"text\").transition()\n      .duration(duration)\n      .attr(\"dy\", \".31em\");\n\n  svg.select(\"line\").transition()\n      .duration(duration)\n      .attr(\"y1\", 2 * h)\n      .attr(\"y2\", 2 * h)\n      .remove();\n\n  function arcTween(d) {\n    var path = d3.select(this),\n        text = d3.select(this.parentNode.appendChild(this.previousSibling)),\n        x0 = x(d.data.key),\n        y0 = h - y(d.data.sumPrice);\n\n    return function(t) {\n      var r = h / 2 / Math.min(1, t + 1e-3),\n          a = Math.cos(t * Math.PI / 2),\n          xx = (-r + (a) * (x0 + x.rangeBand()) + (1 - a) * (w + h) / 2),\n          yy = ((a) * h + (1 - a) * h / 2),\n          f = {\n            innerRadius: r - x.rangeBand() / (2 - a),\n            outerRadius: r,\n            startAngle: a * (Math.PI / 2 - y0 / r) + (1 - a) * d.startAngle,\n            endAngle: a * (Math.PI / 2) + (1 - a) * d.endAngle\n          };\n\n      path.attr(\"transform\", \"translate(\" + xx + \",\" + yy + \")\");\n      path.attr(\"d\", arc(f));\n      text.attr(\"transform\", \"translate(\" + arc.centroid(f) + \")translate(\" + xx + \",\" + yy + \")rotate(\" + ((f.startAngle + f.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n    };\n  }\n\n  setTimeout(donutExplode, duration + delay);\n}\n\nfunction donutExplode() {\n  var r0a = h / 2 - x.rangeBand() / 2,\n      r1a = h / 2,\n      r0b = 2 * h - x.rangeBand() / 2,\n      r1b = 2 * h,\n      arc = d3.svg.arc();\n\n  svg.selectAll(\".symbol path\")\n      .each(transitionExplode);\n\n  function transitionExplode(d, i) {\n    d.innerRadius = r0a;\n    d.outerRadius = r1a;\n    d3.select(this).transition()\n        .duration(duration / 2)\n        .tween(\"arc\", tweenArc({\n          innerRadius: r0b,\n          outerRadius: r1b\n        }));\n  }\n\n  function tweenArc(b) {\n    return function(a) {\n      var path = d3.select(this),\n          text = d3.select(this.nextSibling),\n          i = d3.interpolate(a, b);\n      for (var key in b) a[key] = b[key]; // update data\n      return function(t) {\n        var a = i(t);\n        path.attr(\"d\", arc(a));\n        text.attr(\"transform\", \"translate(\" + arc.centroid(a) + \")translate(\" + w / 2 + \",\" + h / 2 +\")rotate(\" + ((a.startAngle + a.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n      };\n    }\n  }\n\n  setTimeout(function() {\n    svg.selectAll(\"*\").remove();\n    svg.selectAll(\"g\").data(symbols).enter().append(\"g\").attr(\"class\", \"symbol\");\n    lines();\n  }, duration);\n}\n\n</script>", "description": "D3 Show Reel", "created_at": "2016-06-22T20:28:07Z", "updated_at": "2016-06-22T20:28:07Z", "api": ["d3.scale.category10", "d3.select", "d3.svg.line", "d3.svg.area", "d3.csv", "d3.time.format", "d3.nest", "d3.max", "d3.sum", "d3.time.scale", "d3.scale.linear", "d3.min", "d3.timer", "d3.scale.ordinal", "d3.range", "d3.layout.stack", "d3.zip.apply", "d3.layout.pie", "d3.svg.arc", "d3.interpolate"], "readme": "The first 15 seconds of the D3 show reel. See full video at <http://vimeo.com/29862153>. Includes seamless transitions between the following visualization types:\n\n* lines\n* horizons\n* areas\n* stacked areas\n* streamgraph\n* overlapping areas\n* grouped bars\n* stacked bars\n* bars\n* donut\n\nAdmittedly, these aren\u2019t the most useful visualizations; their purpose is not to inform but to demonstrate D3\u2019s capability for producing dynamic visualizations with custom transitions. They *do* show real data (the monthly closing price for ten years\u2019 worth of stock data), but I didn\u2019t include axes for date or price. See the [axis component](http://bl.ocks.org/1166403) for a better example. Also, the stacked visualizations aren\u2019t especially meaningful, unless you imagine owning a portfolio with equal parts AAPL, AMZN, IBM and MSFT. Similarly, the bars and donuts represent the *average* price (or sum) during this time period.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1256572'>D3 Show Reel</a>", "uid": "emilyinamillion_649f6f6cf5cbc93776687cd6656be7ca"}, {"code": "<script>\n\n  var data = [],\n      svg,\n      defs,\n      gBrush,\n      brush,\n      main_xScale,\n      mini_xScale,\n      main_yScale,\n      mini_yScale,\n      main_xAxis,\n      main_yAxis,\n      mini_width,\n      brushTotalStart,\n      brushTotalEnd,\n      updatedData,\n      mousewheelTimer,\n      scrolling = false,\n      scrollEnd = false;\n\n  init();\n\n  function init() {\n\n    //Create the random data\n    for (var i = 0; i < 40; i++) {\n      var my_object = {};\n      my_object.key = i;\n      my_object.country = makeWord();\n      my_object.value = Math.floor(Math.random() * 600);\n      data.push(my_object);\n    }//for i \n    data.sort(function(a,b) { return b.value - a.value; });\n\n    /////////////////////////////////////////////////////////////\n    ///////////////// Set-up SVG and wrappers ///////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Added only for the mouse wheel\n    var zoomer = d3.behavior.zoom()\n        .on(\"zoom\", null);\n\n    var main_margin = {top: 10, right: 10, bottom: 30, left: 100},\n        main_width = 500 - main_margin.left - main_margin.right,\n        main_height = 400 - main_margin.top - main_margin.bottom;\n\n    var mini_margin = {top: 10, right: 10, bottom: 30, left: 10},\n        mini_height = 400 - mini_margin.top - mini_margin.bottom;\n    mini_width = 100 - mini_margin.left - mini_margin.right;\n\n    svg = d3.select(\"#chart\").append(\"svg\")\n        .attr(\"class\", \"svgWrapper\")\n        .attr(\"width\", main_width + main_margin.left + main_margin.right + mini_width + mini_margin.left + mini_margin.right)\n        .attr(\"height\", main_height + main_margin.top + main_margin.bottom)\n        .call(zoomer)\n        .on(\"wheel.zoom\", scroll)\n        //.on(\"mousewheel.zoom\", scroll)\n        //.on(\"DOMMouseScroll.zoom\", scroll)\n        //.on(\"MozMousePixelScroll.zoom\", scroll)\n        //Is this needed?\n        .on(\"mousedown.zoom\", null)\n        .on(\"touchstart.zoom\", null)\n        .on(\"touchmove.zoom\", null)\n        .on(\"touchend.zoom\", null);\n\n    var mainGroup = svg.append(\"g\")\n            .attr(\"class\",\"mainGroup\")\n            .attr(\"transform\",\"translate(\" + main_margin.left + \",\" + main_margin.top + \")\");\n\n    var miniGroup = svg.append(\"g\")\n            .attr(\"class\",\"miniGroup\")\n            .attr(\"transform\",\"translate(\" + (main_margin.left + main_width + main_margin.right + mini_margin.left) + \",\" + mini_margin.top + \")\");\n\n    var brushGroup = svg.append(\"g\")\n            .attr(\"class\",\"brushGroup\")\n            .attr(\"transform\",\"translate(\" + (main_margin.left + main_width + main_margin.right + mini_margin.left) + \",\" + mini_margin.top + \")\");\n\n    /////////////////////////////////////////////////////////////\n    ////////////////////// Initiate scales //////////////////////\n    /////////////////////////////////////////////////////////////\n\n    main_xScale = d3.scale.linear().range([0, main_width]);\n    mini_xScale = d3.scale.linear().range([0, mini_width]);\n\n    main_yScale = d3.scale.ordinal().rangeRoundBands([0, main_height], 0.4, 0);\n    mini_yScale = d3.scale.ordinal().rangeBands([0, mini_height], 0.4, 0);\n\n    //Create x axis object\n    main_xAxis = d3.svg.axis()\n      .scale(main_xScale)\n      .orient(\"bottom\")\n      .ticks(4)\n      //.tickSize(0)\n      .outerTickSize(0);\n\n    //Add group for the y axis\n    mainGroup.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + (main_height + 5) + \")\");\n\n    //Create y axis object\n    main_yAxis = d3.svg.axis()\n      .scale(main_yScale)\n      .orient(\"left\")\n      .tickSize(0)\n      .outerTickSize(0);\n\n    //Add group for the y axis\n    mainGroup.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(-5,0)\");\n \n    /////////////////////////////////////////////////////////////\n    /////////////////////// Update scales ///////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Update the scales\n    main_xScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n    mini_xScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n    main_yScale.domain(data.map(function(d) { return d.country; }));\n    mini_yScale.domain(data.map(function(d) { return d.country; }));\n\n    //Create the visual part of the y axis\n    d3.select(\".mainGroup\").select(\".y.axis\").call(main_yAxis);\n\n    brushTotalStart = mini_yScale.domain()[0];\n    brushTotalEnd = mini_yScale.domain()[1];\n\n    /////////////////////////////////////////////////////////////\n    ///////////////////////// Create brush //////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //What should the first extent of the brush become - a bit arbitrary this\n    var brushExtent = Math.max( 1, Math.min( 20, Math.round(data.length*0.2) ) );\n\n    brush = d3.svg.brush()\n        .y(mini_yScale)\n        .extent([mini_yScale(data[0].country), mini_yScale(data[brushExtent].country)])\n        .on(\"brush\", brushmove)\n        .on(\"brushend\", brushend);\n\n    //Set up the visual part of the brush\n    gBrush = d3.select(\".brushGroup\").append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(brush);\n    \n    gBrush.selectAll(\".resize\")\n      .append(\"line\")\n      .attr(\"x2\", mini_width);\n\n    gBrush.selectAll(\".resize\")\n      .append(\"path\")\n      .attr(\"d\", d3.svg.symbol().type(\"triangle-up\").size(20))\n      .attr(\"transform\", function(d,i) { \n        return i ? \"translate(\" + (mini_width/2) + \",\" + 4 + \") rotate(180)\" : \"translate(\" + (mini_width/2) + \",\" + -4 + \") rotate(0)\"; \n      });\n\n    gBrush.selectAll(\"rect\")\n      .attr(\"width\", mini_width);\n\n    gBrush.select(\".background\")\n      .on(\"mousedown.brush\", brushcenter)\n      .on(\"touchstart.brush\", brushcenter);\n\n    ///////////////////////////////////////////////////////////////////////////\n    /////////////////// Create a rainbow gradient - for fun ///////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    defs = svg.append(\"defs\")\n\n    //Create two separate gradients for the main and mini bar - just because it looks fun\n    createGradient(\"gradient-rainbow-main\", \"60%\");\n    createGradient(\"gradient-rainbow-mini\", \"13%\");\n\n    /////////////////////////////////////////////////////////////\n    //////////////// Set-up the main bar chart //////////////////\n    /////////////////////////////////////////////////////////////\n\n    //DATA JOIN\n    var bar = d3.select(\".mainGroup\").selectAll(\".bar\")\n        .data(data, function(d) { return d.key; });\n\n    //UPDATE\n    bar\n      .attr(\"width\", function(d) { return main_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return main_yScale(d.country); })\n      .attr(\"height\", main_yScale.rangeBand());\n\n    //ENTER\n    bar.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", 0)\n      .attr(\"width\", function(d) { return main_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return main_yScale(d.country); })\n      .attr(\"height\", main_yScale.rangeBand())\n      .style(\"fill\", \"url(#gradient-rainbow-main)\");\n\n    //EXIT\n    bar.exit()\n      .remove();\n\n    /////////////////////////////////////////////////////////////\n    /////////////// Set-up the mini bar chart ///////////////////\n    /////////////////////////////////////////////////////////////\n\n    //The mini brushable bar\n    //DATA JOIN\n    var mini_bar = d3.select(\".miniGroup\").selectAll(\".bar\")\n      .data(data, function(d) { return d.key; });\n\n    //UDPATE\n    mini_bar\n      .attr(\"width\", function(d) { return mini_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return mini_yScale(d.country); })\n      .attr(\"height\", mini_yScale.rangeBand());\n\n    //ENTER\n    mini_bar.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", 0)\n      .attr(\"width\", function(d) { return mini_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return mini_yScale(d.country); })\n      .attr(\"height\", mini_yScale.rangeBand())\n      .style(\"fill\", \"url(#gradient-rainbow-mini)\");\n\n    //EXIT\n    mini_bar.exit()\n      .remove();\n\n    //Start the brush\n    gBrush.call(brush.event);\n\n  }//init\n\n  //Function runs on a brush move - to update the big bar chart\n  function update(data) {\n\n    //The transition (& delay) time of the bars and the axis\n    var transTime = 400;\n    var delayTime = scrollEnd ? 0 : transTime;\n\n    /////////////////////////////////////////////////////////////\n    ///////////////////// Update the axis ///////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Update the domain of the x & y scale of the big bar chart\n    main_yScale.domain(data.map(function(d) { return d.country; }));\n\n    //Update the y axis of the big chart\n    d3.select(\".mainGroup\")\n      .select(\".y.axis\")\n      .transition()\n      .duration(transTime)\n      .call(main_yAxis);\n\n    main_xScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n    //Update the x axis of the big chart\n    d3.select(\".mainGroup\")\n      .select(\".x.axis\")\n      .transition()\n      .duration(transTime)\n      .call(main_xAxis);\n\n    /////////////////////////////////////////////////////////////\n    ////////// Update the bars of the main bar chart ////////////\n    /////////////////////////////////////////////////////////////\n\n    //DATA JOIN\n    var bar = d3.select(\".mainGroup\").selectAll(\".bar\")\n        .data(data, function(d) { return d.key; });\n\n    //UPDATE\n    bar\n      .transition().duration(transTime)\n      .attr(\"x\", 0)\n      .attr(\"width\", function(d) { return main_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return main_yScale(d.country); })\n      .attr(\"height\", main_yScale.rangeBand());\n\n    //ENTER\n    bar.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", 0)\n      .attr(\"width\", 0)\n      .attr(\"y\", function(d,i) { return main_yScale(d.country); })\n      .attr(\"height\", main_yScale.rangeBand())\n      .style(\"fill\", \"url(#gradient-rainbow-main)\")\n      .transition().duration(transTime).delay(delayTime)\n      .attr(\"width\", function(d) { return main_xScale(d.value); });\n\n    //EXIT\n    bar.exit()\n      .transition().duration(transTime)\n      .attr(\"height\", 0)\n      .style(\"opacity\", 0)\n      .remove();\n\n  }//update\n\n  /////////////////////////////////////////////////////////////\n  ////////////////////// Brush functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  //First function that runs on a brush move\n  function brushmove() {\n    \n    //What is the extent of the brush\n    var extent = brush.extent();\n\n    //Adjust the extent of the brush so that is snaps to the bars\n    if (d3.event.mode === \"move\" || scrollEnd === true) {\n      //If dragging, preserve the width of the extent\n\n      //Does the top edge lie closer to the upper or lower bar\n      var topExtent = extent[0];\n      //Using ES5 - http://stackoverflow.com/questions/8584902/get-closest-number-out-of-array\n      var closestTop = mini_yScale.range().reduce(function (prev, curr) {\n        return (Math.abs(curr - topExtent) < Math.abs(prev - topExtent) ? curr : prev);\n      });\n\n      //Pixel location of the bottom bar\n      var maxBar = d3.max(mini_yScale.range());\n      //Does the top edge lie closer to the upper or lower bar\n      var bottomExtent = extent[1];\n      //Using ES5 - http://stackoverflow.com/questions/8584902/get-closest-number-out-of-array\n      var closestBottom = mini_yScale.range().reduce(function (prev, curr) {\n        return (Math.abs(curr - bottomExtent) < Math.abs(prev - bottomExtent) ? curr : prev);\n      });\n\n      //Don't let it go over the last bar in the design\n      if(maxBar === closestBottom) {\n        //The new extent that snaps to the bars\n        extent = [closestBottom+mini_yScale.rangeBand()-(extent[1] - extent[0]),closestBottom+mini_yScale.rangeBand()];\n      } else {\n        //The new extent that snaps to the bars\n        extent = [closestTop,closestTop+(extent[1] - extent[0])];\n      }//else\n\n    } else if (!scrolling) {\n      //If changing size, snap to the nearest rect\n\n      //Find the pixel values of the bars that lie within the selected brush\n      var pixelRanges = mini_yScale.range()\n        .filter(function(d) { return (d >= extent[0]-mini_yScale.rangeBand()/2) && (d <= extent[1]); });\n\n      //The new extent that snaps to the bars within the selection\n      extent = [d3.min(pixelRanges),d3.max(pixelRanges)+mini_yScale.rangeBand()];\n    }//else if \n    //else do nothing - then it comes from the scrolling and the extent has already been determined\n\n    //Snap to rect edge - the new extent\n    d3.select(\"g.brush\")\n      .call(brush.extent(extent));\n\n    //What bars are captured in the brush\n    //During scrolling take a wider range and don't snap\n    if( scrolling ) {\n      var selected = mini_yScale.domain()\n        .filter(function(d) { return (extent[0]-1e-3-mini_yScale.rangeBand() <= mini_yScale(d)) && (mini_yScale(d) <= extent[1]+1e-3+mini_yScale.rangeBand() ); }); \n    } else {\n      var selected = mini_yScale.domain()\n        .filter(function(d) { return (extent[0]-1e-3 <= mini_yScale(d)) && (mini_yScale(d) <= extent[1]+1e-3); }); \n    }   \n\n    //Take a subset of the selected data from the original dataset\n    updatedData = data.filter(function(d) { return selected.indexOf(d.country) > -1; });\n\n    //Update the colors of the mini chart - Make everything outside the brush grey\n    d3.select(\".miniGroup\").selectAll(\".bar\")\n      .style(\"fill\", function(d, i) { return selected.indexOf(d.country) > -1 ? \"url(#gradient-rainbow-mini)\" : \"#e0e0e0\"; });\n \n    ////Update the main chart\n    ////If you want to see update during a brush moving uncomment this\n    ////But that doesn't work very well with the transitions of the bars in the update function & scrolling\n    //update(updatedData);\n\n  }//brushmove\n\n  //Finally update the data\n  function brushend() {\n    if(!scrolling) update(updatedData);\n  }\n\n  //Based on http://bl.ocks.org/mbostock/6498000\n  //What to do when the user clicks on another location along the brushable bar chart\n  function brushcenter() {\n    var target = d3.event.target,\n        extent = brush.extent(),\n        size = extent[1] - extent[0],\n        range = mini_yScale.range(),\n        y0 = d3.min(range) + size / 2,\n        y1 = d3.max(range) + mini_yScale.rangeBand() - size / 2,\n        center = Math.max( y0, Math.min( y1, d3.mouse(target)[1] ) );\n\n    d3.event.stopPropagation();\n\n    gBrush\n        .call(brush.extent([center - size / 2, center + size / 2]))\n        .call(brush.event);\n\n  }//brushcenter\n\n\n  /////////////////////////////////////////////////////////////\n  ///////////////////// Scroll functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n\n  //Function to calculate what should happen on a mouse scroll\n  function scroll() {\n\n    if (mousewheelTimer) clearTimeout(mousewheelTimer);\n\n    var extent = brush.extent(),\n      size = extent[1] - extent[0],\n      range = mini_yScale.range(),\n      y0 = d3.min(range),\n      y1 = d3.max(range),\n      dy = d3.event.deltaY,\n      topSection;\n\n    scrolling = true;\n\n    if( extent[0] - dy < y0 ) {\n      topSection = y0;\n    } else if ( extent[1] - dy > y1 ) {\n      topSection = y1 - size;\n    } else {\n      topSection = extent[0] - dy;\n    }//else\n\n    //Once the person stops scrolling, run the update data function\n    mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        scrolling = false;\n        scrollEnd = true;\n\n        //Finally snap the brush and update the data\n        gBrush\n          .call(brush.event);\n\n        scrollEnd = false;\n      }, 200);\n\n    d3.event.stopPropagation();\n    d3.event.preventDefault();\n\n    //Update the brush position during the scrolling\n    if(scrolling) {\n      gBrush\n          .call(brush.extent([ topSection, topSection + size ]))\n          .call(brush.event);\n    }//if\n\n  }//scroll\n\n  /////////////////////////////////////////////////////////////\n  ///////////////////// Helper functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  //Create a gradient \n  function createGradient(idName, endPerc) {\n\n    var coloursRainbow = [\"#EFB605\", \"#E9A501\", \"#E48405\", \"#E34914\", \"#DE0D2B\", \"#CF003E\", \"#B90050\", \"#A30F65\", \"#8E297E\", \"#724097\", \"#4F54A8\", \"#296DA4\", \"#0C8B8C\", \"#0DA471\", \"#39B15E\", \"#7EB852\"];\n\n    defs.append(\"linearGradient\")\n      .attr(\"id\", idName)\n      .attr(\"gradientUnits\", \"userSpaceOnUse\")\n      .attr(\"x1\", \"0%\").attr(\"y1\", \"0%\")\n      .attr(\"x2\", endPerc).attr(\"y2\", \"0%\")\n      .selectAll(\"stop\") \n      .data(coloursRainbow)                  \n      .enter().append(\"stop\") \n      .attr(\"offset\", function(d,i) { return i/(coloursRainbow.length-1); })   \n      .attr(\"stop-color\", function(d) { return d; });\n  }//createGradient\n\n  //Function to generate random strings of 5 letters - for the demo only\n  function makeWord() {\n      var possible_UC = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n      var text = possible_UC.charAt(Math.floor(Math.random() * possible_UC.length));\n      \n      var possible_LC = \"abcdefghijklmnopqrstuvwxyz\";\n\n      for( var i=0; i < 5; i++ )\n          text += possible_LC.charAt(Math.floor(Math.random() * possible_LC.length));\n\n      return text;\n  }//makeWord\n\n  </script>", "description": "Brushable Horizontal Bar Chart - III", "created_at": "2016-06-22T12:51:37Z", "updated_at": "2016-08-19T12:29:18Z", "api": ["d3.behavior.zoom", "d3.select", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.max", "d3.svg.brush", "d3.svg.symbol", "d3.min", "d3.mouse", "d3.event.stopPropagation", "d3.event.preventDefault"], "readme": "EDIT: I've now created a much more intuitive version of this chart. View [version IV](http://bl.ocks.org/nbremer/326fb6de768e85261bfd47aa1f497863) for a non-updating x axis and [version V](http://bl.ocks.org/nbremer/4c015860931fb6a13afc7bac51f40b43) for a updating x axis. So you can basically ignore this one :)\n\nFor a bit more background, you can read my mini-blog about it [Brushable & interactive bar chart in d3.js](http://www.visualcinnamon.com/2016/07/brush-bar-chart-d3.html)\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nThis brushable horizontal bar chart is another version of the [Brushable Horizontal Bar Chart - II](http://bl.ocks.org/nbremer/aadec1b834a6602575a217fea67f6f44) where the x-axis now also updates on a brush change to always have the largest bar fill the entire width.", "uid": "nbremer_305ff3e402c269d33bbe6828f9848cae"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatDate = d3.time.format(\"%d-%b-%y\");\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n  \t\nvar area = d3.svg.area()\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.close); });\n  \nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n  \n  \n  \n// \t\tvar ty = y.set(this, d3.scaleLinear()\n//             .domain([0, d3.max(d.values, function(d) { return d.price; })])\n//             .range([height, 0]));\n\n//         area.set(this, d3.area()\n//             .x(function(d) { return x(d.date); })\n//             .y0(height)\n//             .y1(function(d) { return ty(d.price); }));\n\n//         line.set(this, d3.line()\n//             .x(function(d) { return x(d.date); })\n//             .y(function(d) { return ty(d.price); }));\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain(d3.extent(data, function(d) { return d.close; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Price ($)\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n});\n\nfunction type(d) {\n  d.date = formatDate.parse(d.date);\n  d.close = +d.close;\n  return d;\n}\n\n</script>", "description": "Line Chart", "created_at": "2016-06-21T23:32:05Z", "updated_at": "2016-06-22T05:41:03Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.svg.line", "d3.select", "d3.scaleLinear", "d3.max", "d3.area", "d3.line", "d3.tsv", "d3.extent"], "readme": "This simple line chart is constructed from a TSV file storing the closing value of AAPL stock over the last few years. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3883245'>Line Chart</a>", "uid": "emilyinamillion_f1d91d74208d21ed403b9054bb3a535c"}, {"code": "<script>\n    var myData = \"date\tNew York\tSan Francisco\tAustin\\n\\\n20111001\t63.4\t62.7\t72.2\\n\\\n20111002\t58.0\t59.9\t67.7\\n\\\n20111003\t53.3\t59.1\t69.4\\n\\\n20111004\t55.7\t58.8\t68.0\\n\\\n20111005\t64.2\t58.7\t72.4\\n\\\n20111006\t58.8\t57.0\t77.0\\n\\\n20111007\t57.9\t56.7\t82.3\\n\\\n20111008\t61.8\t56.8\t78.9\\n\\\n20111009\t69.3\t56.7\t68.8\\n\\\n20111010\t71.2\t60.1\t68.7\\n\\\n20111011\t68.7\t61.1\t70.3\\n\\\n20111012\t61.8\t61.5\t75.3\\n\\\n20111013\t63.0\t64.3\t76.6\\n\\\n20111014\t66.9\t67.1\t66.6\\n\\\n20111015\t61.7\t64.6\t68.0\\n\\\n20111016\t61.8\t61.6\t70.6\\n\\\n20111017\t62.8\t61.1\t71.1\\n\\\n20111018\t60.8\t59.2\t70.0\\n\\\n20111019\t62.1\t58.9\t61.6\\n\\\n20111020\t65.1\t57.2\t57.4\\n\\\n20111021\t55.6\t56.4\t64.3\\n\\\n20111022\t54.4\t60.7\t72.4\\n\";\n\n    var margin = {\n        top: 20,\n        right: 80,\n        bottom: 30,\n        left: 50\n      },\n      width = 900 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n    var parseDate = d3.time.format(\"%Y%m%d\").parse;\n\n    var x = d3.time.scale()\n      .range([0, width]);\n\n    var y = d3.scale.linear()\n      .range([height, 0]);\n\n    var color = d3.scale.category10();\n\n    var xAxis = d3.svg.axis()\n      .scale(x)\n      .orient(\"bottom\");\n\n    var yAxis = d3.svg.axis()\n      .scale(y)\n      .orient(\"left\");\n\n    var line = d3.svg.line()\n      .interpolate(\"basis\")\n      .x(function(d) {\n        return x(d.date);\n      })\n      .y(function(d) {\n        return y(d.temperature);\n      });\n\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var data = d3.tsv.parse(myData);\n\n    color.domain(d3.keys(data[0]).filter(function(key) {\n      return key !== \"date\";\n    }));\n\n    data.forEach(function(d) {\n      d.date = parseDate(d.date);\n    });\n\n    var cities = color.domain().map(function(name) {\n      return {\n        name: name,\n        values: data.map(function(d) {\n          return {\n            date: d.date,\n            temperature: +d[name]\n          };\n        })\n      };\n    });\n\n    x.domain(d3.extent(data, function(d) {\n      return d.date;\n    }));\n\n    y.domain([\n      d3.min(cities, function(c) {\n        return d3.min(c.values, function(v) {\n          return v.temperature;\n        });\n      }),\n      d3.max(cities, function(c) {\n        return d3.max(c.values, function(v) {\n          return v.temperature;\n        });\n      })\n    ]);\n\n    var legend = svg.selectAll('g')\n      .data(cities)\n      .enter()\n      .append('g')\n      .attr('class', 'legend');\n\n    legend.append('rect')\n      .attr('x', width - 20)\n      .attr('y', function(d, i) {\n        return i * 20;\n      })\n      .attr('width', 10)\n      .attr('height', 10)\n      .style('fill', function(d) {\n        return color(d.name);\n      });\n\n    legend.append('text')\n      .attr('x', width - 8)\n      .attr('y', function(d, i) {\n        return (i * 20) + 9;\n      })\n      .text(function(d) {\n        return d.name;\n      });\n\n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (F)\");\n\n    var city = svg.selectAll(\".city\")\n      .data(cities)\n      .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n    city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) {\n        return line(d.values);\n      })\n      .style(\"stroke\", function(d) {\n        return color(d.name);\n      });\n\n    city.append(\"text\")\n      .datum(function(d) {\n        return {\n          name: d.name,\n          value: d.values[d.values.length - 1]\n        };\n      })\n      .attr(\"transform\", function(d) {\n        return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\";\n      })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) {\n        return d.name;\n      });\n\n    var mouseG = svg.append(\"g\")\n      .attr(\"class\", \"mouse-over-effects\");\n\n    mouseG.append(\"path\") // this is the black vertical line to follow mouse\n      .attr(\"class\", \"mouse-line\")\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", \"1px\")\n      .style(\"opacity\", \"0\");\n      \n    var lines = document.getElementsByClassName('line');\n\n    var mousePerLine = mouseG.selectAll('.mouse-per-line')\n      .data(cities)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"mouse-per-line\");\n\n    mousePerLine.append(\"circle\")\n      .attr(\"r\", 7)\n      .style(\"stroke\", function(d) {\n        return color(d.name);\n      })\n      .style(\"fill\", \"none\")\n      .style(\"stroke-width\", \"1px\")\n      .style(\"opacity\", \"0\");\n\n    mousePerLine.append(\"text\")\n      .attr(\"transform\", \"translate(10,3)\");\n\n    mouseG.append('svg:rect') // append a rect to catch mouse movements on canvas\n      .attr('width', width) // can't catch mouse events on a g element\n      .attr('height', height)\n      .attr('fill', 'none')\n      .attr('pointer-events', 'all')\n      .on('mouseout', function() { // on mouse out hide line, circles and text\n        d3.select(\".mouse-line\")\n          .style(\"opacity\", \"0\");\n        d3.selectAll(\".mouse-per-line circle\")\n          .style(\"opacity\", \"0\");\n        d3.selectAll(\".mouse-per-line text\")\n          .style(\"opacity\", \"0\");\n      })\n      .on('mouseover', function() { // on mouse in show line, circles and text\n        d3.select(\".mouse-line\")\n          .style(\"opacity\", \"1\");\n        d3.selectAll(\".mouse-per-line circle\")\n          .style(\"opacity\", \"1\");\n        d3.selectAll(\".mouse-per-line text\")\n          .style(\"opacity\", \"1\");\n      })\n      .on('mousemove', function() { // mouse moving over canvas\n        var mouse = d3.mouse(this);\n        d3.select(\".mouse-line\")\n          .attr(\"d\", function() {\n            var d = \"M\" + mouse[0] + \",\" + height;\n            d += \" \" + mouse[0] + \",\" + 0;\n            return d;\n          });\n\n        d3.selectAll(\".mouse-per-line\")\n          .attr(\"transform\", function(d, i) {\n            console.log(width/mouse[0])\n            var xDate = x.invert(mouse[0]),\n                bisect = d3.bisector(function(d) { return d.date; }).right;\n                idx = bisect(d.values, xDate);\n            \n            var beginning = 0,\n                end = lines[i].getTotalLength(),\n                target = null;\n\n            while (true){\n              target = Math.floor((beginning + end) / 2);\n              pos = lines[i].getPointAtLength(target);\n              if ((target === end || target === beginning) && pos.x !== mouse[0]) {\n                  break;\n              }\n              if (pos.x > mouse[0])      end = target;\n              else if (pos.x < mouse[0]) beginning = target;\n              else break; //position found\n            }\n            \n            d3.select(this).select('text')\n              .text(y.invert(pos.y).toFixed(2));\n              \n            return \"translate(\" + mouse[0] + \",\" + pos.y +\")\";\n          });\n      });\n      \n  </script>", "description": "d3 mouseover multi-line chart", "created_at": "2016-06-19T17:10:10Z", "updated_at": "2016-06-19T17:11:28Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv.parse", "d3.keys", "d3.extent", "d3.min", "d3.max", "d3.selectAll", "d3.mouse", "d3.bisector"], "readme": "An interactive multi-line chart.  \n\nNote, I borrowed a bit of code from Duopixel's excellent code sample [here](http://bl.ocks.org/duopixel/3824661).\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "larsenmtl_e3b8b7c2ca4787f77d78f58d41c3da91"}, {"code": "<script>\n  \n    mapboxgl.accessToken = 'pk.eyJ1IjoiZW5qYWxvdCIsImEiOiJjaWhtdmxhNTIwb25zdHBsejk0NGdhODJhIn0.2-F2hS_oTZenAWc0BMf_uw'\n    \n    //Setup mapbox-gl map\n    var map = new mapboxgl.Map({\n      container: 'map', // container id\n      style: 'mapbox://styles/enjalot/cihmvv7kg004v91kn22zjptsc',\n      center: [-0.1,51.5119112],\n      zoom: 13.5,\n      \n    })\n    map.scrollZoom.disable()\n    map.addControl(new mapboxgl.Navigation());\n\n    // Setup our svg layer that we can manipulate with d3\n    var container = map.getCanvasContainer()\n    var svg = d3.select(container).append(\"svg\")\n\n    // we calculate the scale given mapbox state (derived from viewport-mercator-project's code)\n    // to define a d3 projection\n    function getD3() {\n      var bbox = document.body.getBoundingClientRect();\n      var center = map.getCenter();\n      var zoom = map.getZoom();\n      // 512 is hardcoded tile size, might need to be 256 or changed to suit your map config\n      var scale = (512) * 0.5 / Math.PI * Math.pow(2, zoom);\n\n      var d3projection = d3.geo.mercator()\n        .center([center.lng, center.lat])\n        .translate([bbox.width/2, bbox.height/2])\n        .scale(scale);\n\n      return d3projection;\n    }\n    // calculate the original d3 projection\n    var d3Projection = getD3();\n    \n    var path = d3.geo.path()\n  \n    var url = \"http://enjalot.github.io/wwsd/data/UK/london_stations.topojson\";\n    d3.json(url, function(err, data) {\n      var points = topojson.feature(data, data.objects.london_stations)\n      //console.log(data[0], getLL(data[0]), project(data[0]))\n      var dots = svg.selectAll(\"circle.dot\")\n        .data(points.features)\n      \n      dots.enter().append(\"circle\").classed(\"dot\", true)\n      .attr(\"r\", 1)\n      .style({\n        fill: \"#0082a3\",\n        \"fill-opacity\": 0.6,\n        stroke: \"#004d60\",\n        \"stroke-width\": 1\n      })\n      .transition().duration(1000)\n      .attr(\"r\", 6)\n      \n      function render() {\n        d3Projection = getD3();\n        path.projection(d3Projection)\n        \n        dots\n        .attr({\n          cx: function(d) { \n            var x = d3Projection(d.geometry.coordinates)[0];\n            return x\n          },\n          cy: function(d) { \n            var y = d3Projection(d.geometry.coordinates)[1];\n            return y\n          },\n        })\n      }\n\n      // re-render our visualization whenever the view changes\n      map.on(\"viewreset\", function() {\n        render()\n      })\n      map.on(\"move\", function() {\n        render()\n      })\n\n      // render our initial visualization\n      render()\n    })\n\n    \n  </script>", "description": "WWSD #11: Mapbox-gl + d3 SVG overlay", "created_at": "2016-06-19T07:16:06Z", "updated_at": "2016-06-21T06:44:14Z", "api": ["d3.select", "d3.geo.mercator", "d3.geo.path", "d3.json"], "readme": "This is a simple setup of Leaflet (via Mapbox) with d3 to show dots on a map. This can serve as a base for many interesting geographically based visualizations\n\nNice overview of using [d3 + Leaflet](http://chriszetter.com/blog/2014/06/15/building-a-voronoi-map-with-d3-and-leaflet/). \nI found this slightly simpler to use than Mike's [classic post](http://bost.ocks.org/mike/leaflet/).\n\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/18cb7a77b2d9de597b86'>dots on a map: setup-gl</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/dc1ce756527c072885dc'>dots on a map: setup-gl</a>", "uid": "enjalot_0d87f32a1ccb9a720d29ba74142ba365"}, {"code": "<script>\n    L.mapbox.accessToken = 'pk.eyJ1IjoiZW5qYWxvdCIsImEiOiJjaWhtdmxhNTIwb25zdHBsejk0NGdhODJhIn0.2-F2hS_oTZenAWc0BMf_uw'\n    \n    //Setup our Leaflet map using Mapbox.js\n    var map = L.mapbox.map('map', 'mapbox.pencil', {maxZoom: 54, minZoom: 5})\n    .setView([37.697185, -122.126871], 15);\n    \n    function project(latlng){\n      var array = [+latlng.lat, +latlng.lon]\n      var point = map.latLngToLayerPoint(L.latLng(latlng));\n\n      return point;\n    }\n    \n    // Setup our svg layer that we can manipulate with d3\n    var svg = d3.select(map.getPanes().overlayPane)\n      .append(\"svg\");\n    var g = svg.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\");\n    \n    d3.csv(\"dots.csv\", function(err, data) {\n      //console.log(\"data:\", data)\n \n      var dots = g.selectAll(\"circle\").data(data)\n      \n      dots.enter()\n        .append(\"circle\")\n      \n      function update() {\n        // We need to reposition our SVG and our containing group when the map\n        // repositions via zoom or pan\n        // https://github.com/zetter/voronoi-maps/blob/master/lib/voronoi_map.js\n        var bounds = map.getBounds();\n        var topLeft = map.latLngToLayerPoint(bounds.getNorthWest())\n        var bottomRight = map.latLngToLayerPoint(bounds.getSouthEast())\n        console.log(bounds, topLeft, bottomRight)\n        svg.style(\"width\", map.getSize().x + \"px\")\n          .style(\"height\", map.getSize().y + \"px\")\n          .style(\"left\", topLeft.x + \"px\")\n          .style(\"top\", topLeft.y + \"px\");\n        g.attr(\"transform\", \"translate(\" + -topLeft.x + \",\" + -topLeft.y + \")\");\n\n        dots.attr({\n          cx: function(d) { return project(d).x },\n          cy: function(d) { return project(d).y },\n          r: 5\n        })\n      \n      }\n      update();\n      \n      map.on(\"viewreset\", function() {\n        update();\n      })\n      map.on(\"move\", update)\n\n    })\n  </script>", "description": "fresh block", "created_at": "2016-06-18T22:28:07Z", "updated_at": "2016-06-18T22:28:07Z", "api": ["d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "fogcity89_d8441881c1280b35e625b27e9d435b08"}, {"code": "<script>\n\n\t///////////////////////////////////////////////////////////////////////////\n\t/////////////////////////////// Set-up ////////////////////////////////////\n\t///////////////////////////////////////////////////////////////////////////\t\n\t\n\tvar width = 960,\n\t    height = 500;\n\n\tvar nodes = d3.range(150).map(function() { return {radius: Math.random() * 14 + 8}; }),\n\t    root = nodes[0];\n\n\troot.radius = 0;\n\troot.fixed = true;\n\n\tvar force = d3.layout.force()\n\t    .gravity(0.05)\n\t    .charge(function(d, i) { return i ? 0 : -2000; })\n\t    .nodes(nodes)\n\t    .size([width, height]);\n\n\tforce.start();\n\n\tvar svg = d3.select(\"body\").append(\"svg\")\n\t    .attr(\"width\", width)\n\t    .attr(\"height\", height);\n\n\t///////////////////////////////////////////////////////////////////////////\n\t///////////////////////////// Create filter ///////////////////////////////\n\t///////////////////////////////////////////////////////////////////////////\t\n\n\t//SVG filter for the gooey effect\n\t//Code taken from http://tympanus.net/codrops/2015/03/10/creative-gooey-effects/\n\tvar defs = svg.append(\"defs\");\n\tvar filter = defs.append(\"filter\").attr(\"id\",\"gooeyCodeFilter\");\n\tfilter.append(\"feGaussianBlur\")\n\t\t.attr(\"in\",\"SourceGraphic\")\n\t\t.attr(\"stdDeviation\",\"10\")\n\t\t//to fix safari: http://stackoverflow.com/questions/24295043/svg-gaussian-blur-in-safari-unexpectedly-lightens-image\n\t\t.attr(\"color-interpolation-filters\",\"sRGB\") \n\t\t.attr(\"result\",\"blur\");\n\tfilter.append(\"feColorMatrix\")\n\t\t.attr(\"in\",\"blur\")\n\t\t.attr(\"mode\",\"matrix\")\n\t\t.attr(\"values\",\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\")\n\t\t.attr(\"result\",\"gooey\");\n\t//If you want the end shapes to be exactly the same size as without the filter\n\t//add the feComposite below. However this will result in a less beautiful gooey effect\n\t//filter.append(\"feBlend\")\n\t//\t.attr(\"in\",\"SourceGraphic\")\n\t//\t.attr(\"in2\",\"gooey\");\n\t//Instead of the feBlend, you can do feComposite. This will also place a sharp image on top\n\t//But it will result in smaller circles\n\t//filter.append(\"feComposite\") //feBlend\n\t// \t.attr(\"in\",\"SourceGraphic\")\n\t// \t.attr(\"in2\",\"gooey\")\n\t// \t.attr(\"operator\",\"atop\");\n\t\n\t///////////////////////////////////////////////////////////////////////////\n\t///////////////////////////// Create circles //////////////////////////////\n\t///////////////////////////////////////////////////////////////////////////\t\n\t\t\t\n\tvar circleWrapper = svg.append(\"g\")\n\t\t.attr(\"class\", \"circleWrapper\")\n\t\t.style(\"filter\", \"url(#gooeyCodeFilter)\");\n\t\t\t\t\n\tcircleWrapper.selectAll(\"circle\")\n\t    .data(nodes.slice(1))\n\t  .enter().append(\"circle\")\n\t    .attr(\"r\", function(d) { return d.radius; })\n\t    .style(\"fill\", \"#EE3E64\");\n\n\t///////////////////////////////////////////////////////////////////////////\n\t/////////////////////////////// Functions /////////////////////////////////\n\t///////////////////////////////////////////////////////////////////////////\t\n  \n\tforce.on(\"tick\", function(e) {\n\t  var q = d3.geom.quadtree(nodes),\n\t      i = 0,\n\t      n = nodes.length;\n\n\t  while (++i < n) q.visit(collide(nodes[i]));\n\n\t  svg.selectAll(\"circle\")\n\t      .attr(\"cx\", function(d) { return d.x; })\n\t      .attr(\"cy\", function(d) { return d.y; });\n\t});\n\n\tsvg.on(\"mousemove\", function() {\n\t  var p1 = d3.mouse(this);\n\t  root.px = p1[0];\n\t  root.py = p1[1];\n\t  force.resume();\n\t});\n\n\tfunction collide(node) {\n\t  var r = node.radius + 16,\n\t      nx1 = node.x - r,\n\t      nx2 = node.x + r,\n\t      ny1 = node.y - r,\n\t      ny2 = node.y + r;\n\t  return function(quad, x1, y1, x2, y2) {\n\t    if (quad.point && (quad.point !== node)) {\n\t      var x = node.x - quad.point.x,\n\t          y = node.y - quad.point.y,\n\t          l = Math.sqrt(x * x + y * y),\n\t          r = node.radius + quad.point.radius;\n\t      if (l < r) {\n\t        l = (l - r) / l * .5;\n\t        node.x -= x *= l;\n\t        node.y -= y *= l;\n\t        quad.point.x += x;\n\t        quad.point.y += y;\n\t      }\n\t    }\n\t    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n\t  };\n\t}\n\n</script>", "description": "Gooey Collision Detection", "created_at": "2016-06-18T10:16:46Z", "updated_at": "2016-06-18T20:21:25Z", "api": ["d3.range", "d3.layout.force", "d3.select", "d3.geom.quadtree", "d3.mouse"], "readme": "A gooey version of Mike Bostock's famous [collision detection example](http://bl.ocks.org/mbostock/3231298) that appears on my blog on [More fun data visualizations with the gooey effect](http://www.visualcinnamon.com/2016/06/fun-data-visualizations-svg-gooey-effect.html). I felt that example would lend itself very nicely for a bit of gooey fun :)\n\nIt is rather heavy on the CPU though\n\nYou can find the other examples from the blog here\n\n- [Hexagon with gooey circles moving inside](http://bl.ocks.org/nbremer/3da658e9a21cd3c71d0819f9698f3bfa)\n- [Rotating circles without color blending but with true sizes](http://bl.ocks.org/nbremer/e563beea62ef820883410ca0f5be6fa3)\n- [Rotating circles with color blending but slightly smaller sizes due to filter](http://bl.ocks.org/nbremer/0e98c72b043590769facc5e829ebf43f)\n- [Data Visualization Showcase with the 150 largest cities](http://bl.ocks.org/nbremer/8df57868090f11e59175804e2062b2aa)\n\nOlder examples with the Gooey effect\n\n- [Movement along a line](http://bl.ocks.org/nbremer/f6952f1ef900d84be918)\n- [Moving in and out of a circle](http://bl.ocks.org/nbremer/69808ec7ec07542ed7df)\n- [Falling in and out of a rectangle](http://bl.ocks.org/nbremer/a3684c52fb527c8fa415)\n- [Swing analytics - In the 3rd view the swings will be displayed using the gooey effect](http://nbremer.github.io/golfonline)", "uid": "nbremer_e627a8fced026a9286932c6c0a02d71b"}, {"code": "<script>\n    console.clear()\n    \n    function csv2json(csv){\n      \n      var nested = d3.nest()\n      \t.key(function(d){ return d.name; })\n        .entries(csv)\n      \t\n      var json = nested.map(function(d){\n        var namerecord = {};\n        \n        // this is the variable that we grouped by\n        namerecord.name = d.key; \n        \n        // this is another variable that I happen to know is constant for all\n        // years within a given \"name\", so I'll just grab the first value\n        namerecord.group = d.values[0].group;\n        \n        // these are the time-series variables\n        // use a \"map\" to grab the year and amount from each of the child \"values\"\n        namerecord.amount1 = d.values.map(function(c){ return [c.year, c.amount1]; });\n        namerecord.amount2 = d.values.map(function(c){ return [c.year, c.amount2]; });\n        \n        return namerecord;\n      });\n      \n      return json;\n    }\n    \n    d3.xhr(\"data.csv\", function(csv){\n    \tconsole.log(csv)\n      d3.select(\"p#csv\").html(csv.responseText);\n\t\t})\n                \n    d3.csv(\"data.csv\", function(csv){\n    \n      csv.forEach(function(d){\n        d.year = +d.year;\n        d.amount1 = +d.amount1;\n        d.amount2 = +d.amount2;\n      });\n                  \n      console.table(csv);\n      \n      var json = csv2json(csv);\n      \n      console.log(json);\n      \n      \n      d3.select(\"p#json\").html(JSON.stringify(json, null, 2));\n      \n    })\n    \n  </script>", "description": "CSV to JSON", "created_at": "2016-06-17T18:51:07Z", "updated_at": "2016-06-17T20:45:47Z", "api": ["d3.nest", "d3.xhr", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "SpaceActuary_05a817243f852a288608fab788fd85ee"}, {"code": "<script>\n  \n    mapboxgl.accessToken = 'pk.eyJ1IjoiZW5qYWxvdCIsImEiOiJjaWhtdmxhNTIwb25zdHBsejk0NGdhODJhIn0.2-F2hS_oTZenAWc0BMf_uw'\n    \n    //Setup mapbox-gl map\n    var map = new mapboxgl.Map({\n      container: 'map', // container id\n      style: 'mapbox://styles/enjalot/cihmvv7kg004v91kn22zjptsc',\n      center: [-0.1,51.5119112],\n      zoom: 13.5,\n    })\n    map.dragPan.disable();\n    map.scrollZoom.disable();\n    \n    // Setup our svg layer that we can manipulate with d3\n    var container = map.getCanvasContainer()\n    var svg = d3.select(container).append(\"svg\")\n\n    var active = true;\n    var circleControl = new circleSelector(svg)\n      .projection(project)\n      .inverseProjection(function(a) {\n        return map.unproject({x: a[0], y: a[1]});\n      })\n      .activate(active);\n    \n    d3.select(\"#circle\").on(\"click\", function() {\n      active = !active;\n      circleControl.activate(active)\n      if(active) {\n        map.dragPan.disable();\n      } else {\n        map.dragPan.enable();\n      }\n      d3.select(this).classed(\"active\", active)\n    })\n    \n    // Add zoom and rotation controls to the map.\n    map.addControl(new mapboxgl.Navigation());\n    \n    function project(d) {\n      return map.project(getLL(d));\n    }\n    function getLL(d) {\n      return new mapboxgl.LngLat(+d.lng, +d.lat)\n    }\n  \n    d3.csv(\"dots.csv\", function(err, data) {\n      //console.log(data[0], getLL(data[0]), project(data[0]))\n      var dots = svg.selectAll(\"circle.dot\")\n        .data(data)\n      \n      dots.enter().append(\"circle\").classed(\"dot\", true)\n      .attr(\"r\", 1)\n      .style({\n        fill: \"#0082a3\",\n        \"fill-opacity\": 0.6,\n        stroke: \"#004d60\",\n        \"stroke-width\": 1\n      })\n      .transition().duration(1000)\n      .attr(\"r\", 6)\n\n      circleControl.on(\"update\", function() {\n        svg.selectAll(\"circle.dot\").style({\n          fill: function(d) {\n            var thisDist = circleControl.distance(d);\n            var circleDist = circleControl.distance()\n            if(thisDist < circleDist) {\n              return \"#ff8eec\";\n            } else {\n              return \"#0082a3\"\n            }\n          }\n        })\n      })\n      circleControl.on(\"clear\", function() {\n        svg.selectAll(\"circle.dot\").style(\"fill\", \"#0082a3\")\n      })\n      \n      function render() {\n        dots.attr({\n          cx: function(d) { \n            var x = project(d).x;\n            return x\n          },\n          cy: function(d) { \n            var y = project(d).y;\n            return y\n          },\n        })\n        \n        circleControl.update(svg)\n      }\n\n      // re-render our visualization whenever the view changes\n      map.on(\"viewreset\", function() {\n        render()\n      })\n      map.on(\"move\", function() {\n        render()\n      })\n\n      // render our initial visualization\n      render()\n    })\n  </script>", "description": "dots on a map-gl: circle", "created_at": "2016-06-17T14:47:09Z", "updated_at": "2016-06-17T14:47:09Z", "api": ["d3.select", "d3.csv", "d3.geo.mercator", "d3.dispatch", "d3.mouse", "d3.behavior.drag", "d3.rebind"], "readme": "This is a simple setup of Leaflet (via Mapbox) with d3 to show dots on a map. This can serve as a base for many interesting geographically based visualizations\n\nNice overview of using [d3 + Leaflet](http://chriszetter.com/blog/2014/06/15/building-a-voronoi-map-with-d3-and-leaflet/). \nI found this slightly simpler to use than Mike's [classic post](http://bost.ocks.org/mike/leaflet/).\n\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/18cb7a77b2d9de597b86'>dots on a map: setup-gl</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/dc1ce756527c072885dc'>dots on a map-gl: circle</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/0912e1962ed512093895'>dots on a map-gl: circle</a>", "uid": "BenHeubl_5a0a52a107d744d7aeecae4d9b920c93"}, {"code": "<script>\n//https://bl.ocks.org/mbostock/3943967\n\n\n\nvar n = 4 // number of layers\nvar m = 60 // number of data points\nvar stack = d3.layout.stack()\nvar layers = stack(d3.range(n).map(function() {return bumpLayer(m, 0.1)}))\n\nvar yGroupMax = d3.max(layers, function(column) {return d3.max(column, function(row){return row.y})})\nvar yScatterMax = d3.max(layers, function(column) {return d3.max(column, function(row) {return row.y})})\nvar yStackMax = d3.max(layers, function(column) {return d3.max(column, function(row){return row.y + row.y0})})\n\n\nvar margin = {top:40, bottom:20, right:10, left:10}\nvar svgWidth = 960 - margin.left - margin.right\nvar svgHeight = 500 - margin.top - margin.bottom\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t\t\t.attr(\"width\", svgWidth + margin.left + margin.right)\n\t\t\t.attr(\"height\", svgHeight + margin.top + margin.bottom)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\t\t\n\t\t\t\nvar xScale = d3.scale.ordinal()\n\t\t\t\t.domain(d3.range(m))\n\t\t\t\t.rangeRoundBands([0,svgWidth], 0.05);\n\t\t\t\t\nvar yScale = d3.scale.linear()\n\t\t\t\t.domain([0, yStackMax])\n\t\t\t\t.range([svgHeight, 0]);\n\t\t\t\t\nvar xAxis = d3.svg.axis()\n\t\t\t.scale(xScale)\n\t\t\t.tickSize(0)\n\t\t\t.tickPadding(6)\n\t\t\t.orient(\"bottom\");\n\t\t\t\n\t\t\t\nsvg.append(\"g\")\n\t.attr(\"class\", \"x axis\")\n\t.attr(\"transform\", \"translate(0,\" + (svgHeight) + \")\")\n\t.call(xAxis);\n\t\t\t\t\n\t\t\t\t\nvar line = d3.svg.line()\n    .x(function(d) { return xScale(d.x); })\n    .y(function(d) { return yScale(d.y); })\n//\t.interpolate(\"basis\");\n\nvar lineBefore = false\t\n\t\t\t\nvar layer = svg.selectAll(\".layer\")\n\t\t\t\t.data(layers)\n\t\t\t\t.enter()\n\t\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"class\", \"layer\")\n\t\t\t\t.style(\"fill\", function(d,i) {return chooseCol(i)})\n\t\t\t\t\n\n//Start with Stacked\n\n\nvar rect = layer.selectAll(\"rect\")\n\t\t\t\t.data(function(d) {return d})\n\t\t\t\t.enter()\n\t\t\t\t.append(\"rect\")\n\t\t\t\t.attr(\"x\", function(d) {return xScale(d.x)})\n\t\t\t\t.attr(\"y\", svgHeight)\n\t\t\t\t.attr(\"width\", xScale.rangeBand())\n\t\t\t\t.attr(\"height\", 0)\n\t\t\t\t\nrect.transition()\n\t.delay(function(d,i){ return i*10  } )\n\t.attr(\"y\", function(d) {return yScale(d.y0 + d.y)})\n\t.attr(\"height\", function(d){return yScale(d.y0) - yScale(d.y0 + d.y)} )\n\n//for line graph\t\nvar path = layer.append(\"path\")\n\t\t\t\t.style(\"fill\", \"none\")\n\t\t\t\t.attr(\"class\", \"line\")\n\n\t\n\n\t\nd3.selectAll(\"input\").on(\"change\", change);\n\t\nfunction change()\n{\n\tif (this.value === \"grouped\")\n\t\t{\ttransitionGrouped(); }\n  else if (this.value === \"stacked\")\n\t\t{ transitionStacked();  } \n\telse if(this.value === \"scatter\")\n\t{ transitionScatter();}\n\telse if(this.value === \"line\")\n\t{ transitionLine();}\n}\n\n\t\t\nfunction transitionLine()\n{\n\tlineBefore = true //indicates if we've selected this before\n\tyScale.domain([0, yGroupMax]);\n\t\n\t\n\tpath.attr(\"d\", function(d) {return line(d)})\n\t\t.style(\"stroke\", function(d,i) {return chooseCol(i)} )\n\t\t//This works using https://css-tricks.com/svg-line-animation-works/\n\t\t.each(function(d) { d.totalLength = this.getTotalLength(); })\n\t\t.attr(\"stroke-dasharray\",function(d){ return(d.totalLength + \" \" + d.totalLength)})\n\t\t.attr(\"stroke-dashoffset\", function(d) {return d.totalLength})\t\n\t\n\t//fade out rectangles/points\n\trect.transition()\n\t\t  .delay(1000)\n\t\t  .duration(250)\t\n\t\t  .attr(\"height\",0)\n\t\t  .attr(\"width\", 0);\n\t\t  \n\t//draw line\n\tpath.transition()\n\t\t\t.duration(1000)\n\t\t\t.ease(\"linear\")\n\t\t\t.attr(\"stroke-dashoffset\", 0);\n}\t\n\n\n//Grouped graph\nfunction transitionGrouped()\n{\nyScale.domain([0, yGroupMax]);\t\t\nrect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\t\t\t\n\t  .attr(\"x\", function(d, i, j) { return xScale(d.x) + xScale.rangeBand() / n * j; })\n      .attr(\"width\", xScale.rangeBand() / n)\n\t  .attr(\"rx\", 0)\n\t  .attr(\"ry\", 0)\n\t  .transition()\n\t  .attr(\"y\", function(d) { return yScale(d.y); })\n      .attr(\"height\", function(d) { return svgHeight - yScale(d.y); });\n\t  \n\t  unwindLine(0)\n\n}\n\nfunction transitionStacked()\n{\n\tyScale.domain([0,yStackMax])\n\t\n\trect.transition()\n\t\t.duration(500)\n\t\t.delay(function(d,i) {return i*10;})\n\t\t.attr(\"rx\", 0)\n\t\t.attr(\"ry\", 0)\n\t\t.attr(\"y\", function(d) {return yScale(d.y0 + d.y)})\n\t\t.attr(\"height\", function(d){return yScale(d.y0) - yScale(d.y0 + d.y)})\n\t  .transition()\n\t\t.attr(\"x\", function(d) {return xScale(d.x)})\n\t\t.attr(\"width\", xScale.rangeBand())\n\t\t\n\t\tunwindLine(0)\n}\n\t\t\t\t\nfunction transitionScatter()\n{\n  yScale.domain([0, yGroupMax]);\t\n  \n  //have to adjust absolute position to get centring effect\n  topLeft = xScale.rangeBand() / n\n  \n\trect.transition()\n\t\t.duration(500)\n\t\t.delay(function(d,i) {return i*10;})\n\t\t.attr(\"width\",topLeft)\n\t\t.attr(\"x\", function(d) { return xScale(d.x) -topLeft/2 })\n\t\t.transition()\n\t\t.attr(\"height\", topLeft )\n\t\t.attr(\"y\", function(d) { return yScale(d.y) - topLeft/2 })\n\t\t.attr(\"rx\", 30)\n\t\t.attr(\"ry\", 30)\n\n\t\tunwindLine(1000)\n}     \n\nfunction unwindLine(delay)\n//function to undraw the line when we deselect it \n{\n\tif (lineBefore === true)\n\t{\n\t\tlineBefore === false\n\t\t path.transition()\n\t\t\t.delay(delay)\n\t\t\t.duration(300)\n\t\t\t.ease(\"linear\")\n\t\t\t.attr(\"stroke-dashoffset\", function(d) {return d.totalLength});\n\t}\n}\n\t\nfunction chooseCol(rowNo)\n{\n\tif(rowNo=== 0){\n\t\treturn(\"#e41a1c\")\n\t} else if (rowNo === 1) {\n\t\treturn(\"#377eb8\")\n\t} else if(rowNo === 2) {\n\t\treturn(\"#4daf4a\")\n\t}  else{\n\t\treturn (\"#984ea3\")\n\t}\n} \t\n\t\n\t\n// Inspired by Lee Byron's test data generator.\nfunction bumpLayer(n, o) {\n\n  function bump(a) {\n  // x will take values between 0.90909 and 10\n    var x = 1 / (.1 + Math.random()),\n\t//y takes values between -0.5 and 1.5\n        y = 2 * Math.random() - .5,\n\t //z takes values between 9.0909 and 100\n        z = 10 / (.1 + Math.random());\n    for (var i = 0; i < n; i++) {\n\t//(i/10 - y) can take values between -1.5 and 1.5\n\t//so w takes range between -150 and 150\n\t//each time the loop goes round, w is incremented by the same amount. \n\t//the increment goes up by between 0.90909 and 10 \n      var w = (i / n - y) * z;\n\t   //x += 2  is the same as x = x + 2\n\t\t//a[i] = a[i] + ...\n      a[i] += x * Math.exp(-w * w);\n    }\n  }\n\n  var a = [], i;\n  for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n  for (i = 0; i < 5; ++i) bump(a);\n  return a.map(function(d, i) { return {x: i, y: Math.max(0, d)}; });\n}\n</script>", "description": "Grouped, Stacked, Scatter and Line", "created_at": "2016-06-14T08:32:30Z", "updated_at": "2016-06-14T08:32:55Z", "api": ["d3.layout.stack", "d3.range", "d3.max", "d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.selectAll"], "readme": "", "uid": "puzzler10_fe9d75969a0d2f40f003f00808c00f3b"}, {"code": "<script>\n\n    var n = 64,\n        duration = 1000;\n\n    var iteration;\n\n    var margin = 40,\n        vizDims = document.getElementById('viz').getBoundingClientRect(),\n        width = vizDims.width - margin - margin,\n        height = vizDims.height - margin - margin;\n  \n    var x = d3.scale.ordinal()\n        .domain(d3.range(n))\n        .rangePoints([0, width]);\n\n    var svg = d3.select(\"#viz\").append(\"svg\")\n        .attr(\"width\", width + margin + margin)\n        .attr(\"height\", height + margin + margin)\n      .append(\"g\")\n        .attr(\"class\", \"rows\")\n        .attr(\"transform\", \"translate(\" + margin + \",\" + margin + \")\");\n    \n    loadRow();\n\n    function loadRow() {\n\n        iteration = 0;\n\n        var array = d3.shuffle(d3.range(n)),\n            actions = mergesort(array.slice()).reverse();\n\n        var rowCount = Math.ceil(actions.length/n),\n            rectHeight = (height/rowCount) * .3,\n            rectWidth = (width/n) * .9;\n\n        d3.select(\"svg\").select(\"g\").selectAll(\"*\").html('').remove()\n\n        var rect = svg.append(\"g\")\n            .attr(\"class\", \"rect row\")\n          .selectAll(\"rect\")\n            .data(array.map(function(v, i) {\n                return {\n                    value: v,\n                    index: i,\n                    id: i,\n                    array: 0\n                };\n            }))\n            .enter().append(\"rect\")\n                .attr({\n                    \"class\": \"row\" + iteration,\n                    \"id\": function(d) {return \"rect\" + iteration + \"_\" + d.id},\n                    \"x\": 0,\n                    \"y\": x(0),\n                    \"height\": rectHeight,\n                    \"width\": rectWidth\n                })\n                .style(\"fill-opacity\", function(d) { return d.value/n })\n                .transition().duration(duration)\n                .attr(\"x\", function(d) {return x(d.index)})\n\n        var row0 = rect[0];\n\n        setTimeout(function() {mergeRows()}, duration * 2);\n\n        function mergeRows() {\n\n            var row1 = new Array(n);\n\n            var transition = d3.transition()\n                .duration(duration/20)\n                .each(\"start\", function start() {\n                    var action = actions.pop();\n                    if (action[1] === 0) { iteration++; };\n                    switch (action.type) {\n                        case \"copy\": {\n                            var i = action[0],\n                                j = action[1],\n                                e = row1[j] = row0[i],\n                                d = e.__data__;\n                            d.index = j;\n                            transition.each(function() {\n                                var source = d3.select(\"#rect\" + (iteration - 1) + \"_\" + d.id)\n                                d3.select(\"svg\").select(\".row\").append(\"rect\")\n                                    .attr({\n                                        \"class\": \"row\" + iteration,\n                                        \"id\": \"rect\" + iteration + \"_\" + d.id,\n                                        \"style\": source.attr(\"style\"),\n                                        \"x\": source.attr(\"x\"),\n                                        \"y\": source.attr(\"y\"),\n                                        \"height\": rectHeight,\n                                        \"width\": rectWidth\n                                    })\n                                    .transition().duration(duration/2)\n                                    .attr(\"x\", x(d.index))\n                                    .attr(\"y\", iteration * rectHeight * 2 )\n\n                            });\n                            break;\n                        }\n                        case \"swap\": {\n                                var t = row0;\n                                row0 = row1;\n                                row1 = t;\n                                break;\n                        }\n                    }\n                    if (actions.length) {\n                        transition = transition.transition().each(\"start\", start);\n                    } else {\n                        setTimeout(function() { returnRects()}, duration * 2)\n                    };\n\n                });\n\n        }\n\n    }\n\n    function returnRects() {\n\n        for (z=1; z<=iteration; z++) {\n            var thisRow = d3.selectAll(\".row\" + z)[0];\n\n            for (i=0; i<thisRow.length; i++) {\n                var thisId = d3.select(thisRow[i]).attr(\"id\").split(\"_\")[1];\n\n                d3.select(thisRow[i])\n                    .transition().duration(duration * 2)\n                    .attr(\"x\", x(thisId))\n                    .attr(\"y\", 0)\n                    .remove()\n            }\n        }\n\n        setTimeout(function() { \n            d3.selectAll('rect')\n                .transition().duration(duration * 2)\n                .attr(\"x\", function() {return x(0)})\n\n            setTimeout(function() { loadRow(); }, duration * 2)\n        }, duration * 2)\n\n    }\n\n    function mergesort(array) {\n\n        actions = [];\n        n = array.length;\n\n        var array0 = array,\n            array1 = new Array(n);\n\n        for (var m = 1; m < n; m <<= 1) {\n            for (var i = 0; i < n; i += (m << 1)) {\n                merge(i, Math.min(i + m, n), Math.min(i + (m << 1), n));\n            }\n            actions.push({type: \"swap\"});\n            array = array0, array0 = array1, array1 = array;\n        }\n\n        function merge(left, right, end) {\n            for (var i0 = left, i1 = right, j = left; j < end; ++j) {\n                if (i0 < right && (i1 >= end || array0[i0] <= array0[i1])) {\n                    array1[j] = array0[i0];\n                    actions.push({type: \"copy\", \"0\": i0++, \"1\": j});\n                } else {\n                    array1[j] = array0[i1];\n                    actions.push({type: \"copy\", \"0\": i1++, \"1\": j});\n                }\n            }\n        }\n\n        return actions;\n    }\n\n</script>", "description": "Mergesort animation", "created_at": "2016-06-14T06:42:43Z", "updated_at": "2016-06-14T06:52:08Z", "api": ["d3.scale.ordinal", "d3.range", "d3.select", "d3.shuffle", "d3.transition", "d3.selectAll"], "readme": "This is an interpretation of <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/39566aca95eb03ddd526'>Mergesort I</a>. \n\nI kept all the passes through the sort visible to be able to compare the steps of the sorting algorithm.", "uid": "alexmacy_9f109c383f8ed21f5f610cb21113ca68"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 40, right: 40, bottom: 40, left: 40},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom;\n\nvar formatValue = d3.format(\",d\");\n\nvar x = d3.scaleLog()\n    .rangeRound([0, width]);\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"flare.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(data, function(d) { return d.value; }));\n\n  var simulation = d3.forceSimulation(data)\n      .force(\"x\", d3.forceX(function(d) { return x(d.value); }).strength(1))\n      .force(\"y\", d3.forceY(height / 2).strength(0.1))\n      .force(\"collide\", d3.forceCollide(4))\n      .stop();\n\n  for (var i = 0; i < 120; ++i) simulation.tick();\n\n  var linkf = d3.forceLink();\n  linkf._initialize = linkf.initialize;\n  linkf.initialize = function(){\n    this._initialize();\n  }\n  console.log(\"hello\",linkf.initialize())\n  \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).ticks(20, \".0s\"));\n\n  var cell = g.append(\"g\")\n      .attr(\"class\", \"cells\")\n    .selectAll(\"g\").data(d3.voronoi()\n        .extent([[-margin.left, -margin.top], [width + margin.right, height + margin.top]])\n        .x(function(d) { return d.x; })\n        .y(function(d) { return d.y; })\n      .polygons(data)).enter().append(\"g\");\n\n  cell.append(\"circle\")\n      .attr(\"r\", 3)\n      .attr(\"cx\", function(d) { return d.data.x; })\n      .attr(\"cy\", function(d) { return d.data.y; });\n\n  cell.append(\"path\")\n      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; });\n\n  cell.append(\"title\")\n      .text(function(d) { return d.data.id + \"\\n\" + formatValue(d.data.value); });\n});\n\nfunction type(d) {\n  if (!d.value) return;\n  d.value = +d.value;\n  return d;\n}\n\n</script>", "description": "Beeswarm", "created_at": "2016-06-14T05:44:17Z", "updated_at": "2016-06-14T05:44:17Z", "api": ["d3.select", "d3.format", "d3.scaleLog", "d3.csv", "d3.extent", "d3.forceSimulation", "d3.forceX", "d3.forceY", "d3.forceCollide", "d3.forceLink", "d3.axisBottom", "d3.voronoi"], "readme": "A static beeswarm plot implemented using [d3-force](https://github.com/d3/d3-force)\u2019s [collision constraint](https://github.com/d3/d3-force#collision). A Voronoi overlay improves hover interaction.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6526445e2b44303eebf21da3b6627320'>Beeswarm</a>", "uid": "Fil_068a46259411b86fd0bc4e7e36252d1e"}, {"code": "<script>\n// setting up empty data array\nvar data = [];\n\ngetData(); // populate data\n\n// line chart based on http://bl.ocks.org/mbostock/3883245\nvar margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 50\n    },\n    width = 640 - margin.left - margin.right,\n    height = 310 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .x(function(d) {\n      return x(d.q);\n    })\n    .y(function(d) {\n      return y(d.p);\n    });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nx.domain(d3.extent(data, function(d) {\n  return d.q;\n}));\ny.domain(d3.extent(data, function(d) {\n  return d.p;\n}));\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\nsvg.append(\"path\")\n    .datum(data)\n    .attr(\"class\", \"line\")\n    .attr(\"d\", line);\n\nfunction getData() {\n\n// loop to populate data array with\n// probability - quantile pairs\n  for (var i = 0; i < 100000; i++) {\n    var q = normal(); // calc random draw from normal dist\n    var p = gaussian(q); // calc prob of rand draw\n    var el = {\n          \"q\": q,\n          \"p\": p\n        };\n  data.push(el);\n}\n\n// need to sort for plotting\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\ndata.sort(function(x, y) {\n  return x.q - y.q;\n});\n}\n\n// from http://bl.ocks.org/mbostock/4349187\n// Sample from a normal distribution with mean 0, stddev 1.\nfunction normal() {\n  var x = 0,\n      y = 0,\n      rds, c;\n  do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      rds = x * x + y * y;\n  } while (rds == 0 || rds > 1);\n  c = Math.sqrt(-2 * Math.log(rds) / rds); // Box-Muller transform\n  return x * c; // throw away extra sample y * c\n}\n\n// taken from Jason Davies science library\n// https://github.com/jasondavies/science.js/\nfunction gaussian(x) {\n  var gaussianConstant = 1 / Math.sqrt(2 * Math.PI),\n      mean = 0,\n      sigma = 1;\n\n  x = (x - mean) / sigma;\n  return gaussianConstant * Math.exp(-.5 * x * x) / sigma;\n}\n</script>", "description": "fresh block", "created_at": "2016-06-12T01:48:10Z", "updated_at": "2016-06-12T01:48:10Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.extent"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "curt-mitch_958238610403cc200fa6c08785bc0d6d"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 40, right: 40, bottom: 40, left: 40},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom;\n\nvar formatValue = d3.format(\",d\");\n\nvar x = d3.scaleLinear()\n    .rangeRound([0, width]);\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"flare.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(data, function(d) { return d.value; }));\n\n  var simulation = d3.forceSimulation(data)\n      .force(\"x\", d3.forceX(function(d) { return x(d.value); }).strength(5))\n      .force(\"y\", d3.forceY(height / 2))\n      .force(\"collide\", d3.forceCollide(4))\n      .stop();\n\n  for (var i = 0; i < 120; ++i) simulation.tick();\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).ticks(10, \".0s\"));\n\n  var cell = g.append(\"g\")\n      .attr(\"class\", \"cells\")\n    .selectAll(\"g\").data(d3.voronoi()\n        .extent([[-margin.left, -margin.top], [width + margin.right, height + margin.top]])\n        .x(function(d) { return d.x; })\n        .y(function(d) { return d.y; })\n      .polygons(data)).enter().append(\"g\");\n\n  cell.append(\"circle\")\n      .attr(\"r\", 3)\n      .attr(\"cx\", function(d) { return d.data.x; })\n      .attr(\"cy\", function(d) { return d.data.y; });\n\n  cell.append(\"path\")\n      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; });\n\n  cell.append(\"title\")\n      .text(function(d) { return d.data.id + \"\\n\" + formatValue(d.data.value); });\n});\n\nfunction type(d) {\n  if (!d.value) return;\n  d.value = +d.value;\n  return d;\n}\n\n</script>", "description": "Beeswarm", "created_at": "2016-06-09T08:48:07Z", "updated_at": "2016-06-09T08:48:07Z", "api": ["d3.select", "d3.format", "d3.scaleLinear", "d3.csv", "d3.extent", "d3.forceSimulation", "d3.forceX", "d3.forceY", "d3.forceCollide", "d3.axisBottom", "d3.voronoi"], "readme": "A static beeswarm plot implemented using [d3-force](https://github.com/d3/d3-force)\u2019s [collision constraint](https://github.com/d3/d3-force#collision). A Voronoi overlay improves hover interaction.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6526445e2b44303eebf21da3b6627320'>Beeswarm</a>\n\nforked from <a href='http://bl.ocks.org/siakan/'>siakan</a>'s block: <a href='http://bl.ocks.org/siakan/dcbbf16e5201a60dfc212129bf544ed4'>Beeswarm</a>", "uid": "domhorvath_90fd3b59070ec2b196ba05fc56ea0eab"}, {"code": "<script>\n    \n\t\tvar RADIUS = 1.5; // in degrees\n    var RADIUS_PX = 45; // in pixels (only used if uncommenting lines 131-137)\n    \n    mapboxgl.accessToken = 'pk.eyJ1IjoiZW5qYWxvdCIsImEiOiJjaWhtdmxhNTIwb25zdHBsejk0NGdhODJhIn0.2-F2hS_oTZenAWc0BMf_uw'\n    \n    //Setup mapbox-gl map\n    var map = new mapboxgl.Map({\n      container: 'map', // container id\n      style: 'mapbox://styles/enjalot/cihmvv7kg004v91kn22zjptsc',\n      center: [-96,39],\n      zoom: 3.5,\n      \n    })\n    map.scrollZoom.disable()\n    map.addControl(new mapboxgl.Navigation());\n\n    // Setup our svg layer that we can manipulate with d3\n    var container = map.getCanvasContainer()\n    var svg = d3.select(container).append(\"svg\")\n\n    var radiusCircle = svg.append(\"ellipse\").classed(\"radius\", true)\n    \n    function project(d) {\n      return map.project(getLL(d));\n    }\n    function getLL(d) {\n      return new mapboxgl.LngLat(+d.lng, +d.lat)\n    }\n  \n    d3.csv(\"dots.csv\", function(err, data) {\n      \n      //console.log(data[0], getLL(data[0]), project(data[0]))\n      var dots = svg.selectAll(\"circle.dot\")\n        .data(data)\n      \n      dots.enter().append(\"circle\").classed(\"dot\", true)\n      .attr(\"r\", 1)\n      .attr({\n        fill: \"#0082a3\",\n        \"fill-opacity\": 0.6,\n        stroke: \"#004d60\",\n        \"stroke-width\": 1\n      })\n      .transition().duration(1000)\n      .attr(\"r\", 6)\n      \n      function render() {\n        dots\n        .attr({\n          cx: function(d) { \n            var x = project(d).x;\n            return x\n          },\n          cy: function(d) { \n            var y = project(d).y;\n            return y\n          },\n        })\n      }\n\n      // re-render our visualization whenever the view changes\n      map.on(\"viewreset\", function() {\n        render()\n      })\n      map.on(\"move\", function() {\n        render()\n      })\n       \n      var quadtree = d3.geom.quadtree()\n        .x(function(d) { return +d.lng })\n        .y(function(d) { return +d.lat })\n        (data)\n      \n      map.on(\"mousemove\", function(evt) {\n        var xy = project(evt.lngLat);\n\n        /*\n        var radiusLngLat = new mapboxgl.LngLat(evt.lngLat.lng + RADIUS, evt.lngLat.lat + RADIUS)\n        var radiusPoint = project(radiusLngLat)\n        var radiusX = Math.abs(radiusPoint.x - xy.x)\n        var radiusY = Math.abs(radiusPoint.y - xy.y)\n        */\n        \n        //console.log(evt.lngLat, radiusLngLat, radius, xy)\n        radiusCircle.attr({\n          cx: xy.x,\n          cy: xy.y,\n          //rx: radiusX,\n          //ry: radiusY\n          rx: RADIUS_PX,\n          ry: RADIUS_PX\n        })\n        \n        var hits = [];\n        //quadtree.visit(nearest(evt.lngLat, RADIUS, hits))\n        \n        \n        // calculate the nearest points by using individual longitude and latitude\n        // radii derived from the pixel radius set at the top. This gives\n        // us a consistently sized circular selection\n        var radiusLng = Math.abs(evt.lngLat.lng - map.unproject({ x: evt.point.x + RADIUS_PX, y: evt.point.y }).lng);\n        var radiusLat = Math.abs(evt.lngLat.lat - map.unproject({ x: evt.point.x, y: evt.point.y  + RADIUS_PX}).lat)\n        quadtree.visit(nearest2(evt.lngLat, radiusLng, radiusLat, hits))\n\n        console.log(\"hits\", hits)\n        \n        var filtered = svg.selectAll(\"circle.dot\")\n          .classed(\"highlight\", false)\n          .filter(function(d) { return hits.indexOf(d) >= 0 })\n          .classed(\"highlight\", true)\n        \n      })\n\n      // render our initial visualization\n      render()\n    })\n\n    function nearest(node, radius, hits) {\n      if(!hits) hits = [];\n      // we want to find everything within radius\n      var r = radius,\n          nx1 = node.lng - r,\n          nx2 = node.lng + r,\n          ny1 = node.lat - r,\n          ny2 = node.lat + r;\n      return function(quad, x1, y1, x2, y2) {\n        if (quad.point && (quad.point !== node)) {\n          var x = node.lng - quad.point.lng,\n              y = node.lat - quad.point.lat,\n              l = Math.sqrt(x * x + y * y),\n              r = radius;\n          if (l < r) {\n            hits.push(quad.point)\n          } else {\n          }\n        }\n        return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n      }\n    }\n    \n    // compute nearest within ellipse\n    function nearest2(node, radiusLng, radiusLat, hits) {\n      if(!hits) hits = [];\n      // we want to find everything within radius\n      var nx1 = node.lng - radiusLng\n      var nx2 = node.lng + radiusLng\n      var ny1 = node.lat - radiusLat\n      var ny2 = node.lat + radiusLat\n      return function(quad, x1, y1, x2, y2) {\n        if (quad.point && (quad.point !== node)) {\n          var x = node.lng - quad.point.lng;\n          var y = node.lat - quad.point.lat;\n          if (x*x/(radiusLng*radiusLng) + y*y/(radiusLat*radiusLat) < 1) {\n            hits.push(quad.point)\n          } else {\n          }\n        }\n        return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n      }\n    }\n    \n  </script>", "description": "dots on a map: quadtree circle", "created_at": "2016-06-08T22:00:00Z", "updated_at": "2016-06-08T22:03:11Z", "api": ["d3.select", "d3.csv", "d3.geom.quadtree"], "readme": "This example shows how to select points close to the mouse using a [quadtree](https://github.com/d3/d3/wiki/Quadtree-Geom) on the longitude,latitude coordinates of our data. \n\nThe advantage of calculating the quadtree using lng/lat is that you don't need to recompute the quadtree when the projection has changed (due to zooming and panning). The disadvantage is that the distortion of the projection means you wont always get a nice circle (you can see the ellipse get longer the further north you go).\n\nThere is commented out code at line 130 which allows you to create a circular selection by deriving individual radii for longitude and latitude from a set pixel value. The advantage here is a nice circle, while the disadvantage is that the circle stays the same size at all zoom levels (meaning you could be selecting exponentially more points while zoomed out).\n\nAdjusting the pixel radius by zoom level is an exercise left for the reader ;)\n\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/18cb7a77b2d9de597b86'>dots on a map: setup-gl</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/dc1ce756527c072885dc'>dots on a map: The Counted</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/2c7eec93ce68551627d4'>dots on a map: The Counted</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/1d7d42e9b4bc3d377db84d95a38ce800'>dots on a map: quadtree</a>", "uid": "enjalot_eb331a84b3ef877aa6b0004308abfac9"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.Engagement = +d.Engagement;\n    d.Week = +d.Week;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.Week; })).nice();\n  y.domain(d3.extent(data, function(d) { return d.Engagement; })).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sepal Width (cm)\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sepal Length (cm)\")\n\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", function(d) { return x(d.WordCount/1000); })\n      .attr(\"cx\", function(d) { return x(d.Week); })\n      .attr(\"cy\", function(d) { return y(d.Engagement); })\n      .style(\"fill\", function(d) { return color(d.Category); });\n\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\n</script>", "description": "AK - Post (week/wordCount) per category vs Engagement Scatterplot", "created_at": "2016-06-08T14:38:06Z", "updated_at": "2016-06-08T14:38:06Z", "api": ["d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.select", "d3.tsv", "d3.extent"], "readme": "This scatterplot is constructed from a TSV file storing the dimensions of sepals and petals of various iris flowers. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *x*- and *y*-position encoding\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887118'>AK - Post (week/wordCount) per category vs Engagement Scatterplot</a>", "uid": "siakan_acdd8937258d5aca3001995316e0b6ca"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\nvar x0 = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar x1 = d3.scale.ordinal();\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.ordinal()\n    .range([\"#FFCC00\", \"#8da45a\", \"#0095e0\", \"#9b479e\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x0)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(d3.format(\".2s\"));\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  var ageNames = d3.keys(data[0]).filter(function(key) { return key !== \"State\"; });\n\n  data.forEach(function(d) {\n    d.ages = ageNames.map(function(name) { return {name: name, value: +d[name]}; });\n  });\n\n  x0.domain(data.map(function(d) { return d.State; }));\n  x1.domain(ageNames).rangeRoundBands([0, x0.rangeBand()]);\n  y.domain([0, d3.max(data, function(d) { return d3.max(d.ages, function(d) { return d.value; }); })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 3)\n      .attr(\"dy\", \"1em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Social Shares per Post\");\n\n  var state = svg.selectAll(\".state\")\n      .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"state\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x0(d.State) + \",0)\"; });\n\n  state.selectAll(\"rect\")\n      .data(function(d) { return d.ages; })\n    .enter().append(\"rect\")\n      .attr(\"width\", x1.rangeBand())\n      .attr(\"x\", function(d) { return x1(d.name); })\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); })\n      .style(\"fill\", function(d) { return color(d.name); });\n\n  var legend = svg.selectAll(\".legend\")\n      .data(ageNames.slice().reverse())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\n</script>", "description": "AK - Social Shares per Post Category", "created_at": "2016-06-08T14:15:11Z", "updated_at": "2016-06-08T14:15:11Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max"], "readme": "This grouped bar chart is constructed from a CSV file storing the populations of different states by age group. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding and color encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting#wiki-d3_format) - SI prefix formatting (e.g., \u201c10M\u201d for 10,000,000)\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887051'>AK - Social Shares per Post Category</a>", "uid": "siakan_cc432f0c5f163c81a4703532188efaab"}, {"code": "<script>\n    \n\t\tvar RADIUS = 1.5; // in degrees\n    var RADIUS_PX = 45; // in pixels (only used if uncommenting lines 131-137)\n    \n    mapboxgl.accessToken = 'pk.eyJ1IjoiZW5qYWxvdCIsImEiOiJjaWhtdmxhNTIwb25zdHBsejk0NGdhODJhIn0.2-F2hS_oTZenAWc0BMf_uw'\n    \n    //Setup mapbox-gl map\n    var map = new mapboxgl.Map({\n      container: 'map', // container id\n      style: 'mapbox://styles/enjalot/cihmvv7kg004v91kn22zjptsc',\n      center: [-96,39],\n      zoom: 3.5,\n      \n    })\n    map.scrollZoom.disable()\n    map.addControl(new mapboxgl.Navigation());\n\n    // Setup our svg layer that we can manipulate with d3\n    var container = map.getCanvasContainer()\n    var svg = d3.select(container).append(\"svg\")\n\n    var radiusCircle = svg.append(\"ellipse\").classed(\"radius\", true)\n    \n    function project(d) {\n      return map.project(getLL(d));\n    }\n    function getLL(d) {\n      return new mapboxgl.LngLat(+d.lng, +d.lat)\n    }\n  \n    d3.csv(\"dots.csv\", function(err, data) {\n      \n      //console.log(data[0], getLL(data[0]), project(data[0]))\n      var dots = svg.selectAll(\"circle.dot\")\n        .data(data)\n      \n      dots.enter().append(\"circle\").classed(\"dot\", true)\n      .attr(\"r\", 1)\n      .attr({\n        fill: \"#0082a3\",\n        \"fill-opacity\": 0.6,\n        stroke: \"#004d60\",\n        \"stroke-width\": 1\n      })\n      .transition().duration(1000)\n      .attr(\"r\", 6)\n      \n      function render() {\n        dots\n        .attr({\n          cx: function(d) { \n            var x = project(d).x;\n            return x\n          },\n          cy: function(d) { \n            var y = project(d).y;\n            return y\n          },\n        })\n      }\n\n      // re-render our visualization whenever the view changes\n      map.on(\"viewreset\", function() {\n        render()\n      })\n      map.on(\"move\", function() {\n        render()\n      })\n       \n      var quadtree = d3.geom.quadtree()\n        .x(function(d) { return +d.lng })\n        .y(function(d) { return +d.lat })\n        (data)\n      \n      map.on(\"mousemove\", function(evt) {\n        var xy = project(evt.lngLat);\n\n        var radiusLngLat = new mapboxgl.LngLat(evt.lngLat.lng + RADIUS, evt.lngLat.lat + RADIUS)\n        var radiusPoint = project(radiusLngLat)\n        var radiusX = Math.abs(radiusPoint.x - xy.x)\n        var radiusY = Math.abs(radiusPoint.y - xy.y)\n        \n        //console.log(evt.lngLat, radiusLngLat, radius, xy)\n        radiusCircle.attr({\n          cx: xy.x,\n          cy: xy.y,\n          rx: radiusX,\n          ry: radiusY\n          //rx: RADIUS_PX,\n          //ry: RADIUS_PX\n        })\n        \n        var hits = [];\n        quadtree.visit(nearest(evt.lngLat, RADIUS, hits))\n        \n        /*\n        // calculate the nearest points by using individual longitude and latitude\n        // radii derived from the pixel radius set at the top. This gives\n        // us a consistently sized circular selection\n        var radiusLng = Math.abs(evt.lngLat.lng - map.unproject({ x: evt.point.x + RADIUS_PX, y: evt.point.y }).lng);\n        var radiusLat = Math.abs(evt.lngLat.lat - map.unproject({ x: evt.point.x, y: evt.point.y  + RADIUS_PX}).lat)\n        quadtree.visit(nearest2(evt.lngLat, radiusLng, radiusLat, hits))\n        */\n        \n        console.log(\"hits\", hits)\n        \n        var filtered = svg.selectAll(\"circle.dot\")\n          .classed(\"highlight\", false)\n          .filter(function(d) { return hits.indexOf(d) >= 0 })\n          .classed(\"highlight\", true)\n        \n      })\n\n      // render our initial visualization\n      render()\n    })\n\n    function nearest(node, radius, hits) {\n      if(!hits) hits = [];\n      // we want to find everything within radius\n      var r = radius,\n          nx1 = node.lng - r,\n          nx2 = node.lng + r,\n          ny1 = node.lat - r,\n          ny2 = node.lat + r;\n      return function(quad, x1, y1, x2, y2) {\n        if (quad.point && (quad.point !== node)) {\n          var x = node.lng - quad.point.lng,\n              y = node.lat - quad.point.lat,\n              l = Math.sqrt(x * x + y * y),\n              r = radius;\n          if (l < r) {\n            hits.push(quad.point)\n          } else {\n          }\n        }\n        return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n      }\n    }\n    \n    // compute nearest within ellipse\n    function nearest2(node, radiusLng, radiusLat, hits) {\n      if(!hits) hits = [];\n      // we want to find everything within radius\n      var nx1 = node.lng - radiusLng\n      var nx2 = node.lng + radiusLng\n      var ny1 = node.lat - radiusLat\n      var ny2 = node.lat + radiusLat\n      return function(quad, x1, y1, x2, y2) {\n        if (quad.point && (quad.point !== node)) {\n          var x = node.lng - quad.point.lng,\n              y = node.lat - quad.point.lat;\n          if (x*x/(radiusLng*radiusLng) + y*y/(radiusLat*radiusLat) < 1) {\n            hits.push(quad.point)\n          } else {\n          }\n        }\n        return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n      }\n    }\n    \n  </script>", "description": "dots on a map: quadtree", "created_at": "2016-06-08T00:56:45Z", "updated_at": "2016-06-08T22:03:35Z", "api": ["d3.select", "d3.csv", "d3.geom.quadtree"], "readme": "This example shows how to select points close to the mouse using a [quadtree](https://github.com/d3/d3/wiki/Quadtree-Geom) on the longitude,latitude coordinates of our data. \n\nThe advantage of calculating the quadtree using lng/lat is that you don't need to recompute the quadtree when the projection has changed (due to zooming and panning). The disadvantage is that the distortion of the projection means you wont always get a nice circle (you can see the ellipse get longer the further north you go).\n\nThere is commented out code at line 130 which allows you to create a circular selection by deriving individual radii for longitude and latitude from a set pixel value. The advantage here is a nice circle, while the disadvantage is that the circle stays the same size at all zoom levels (meaning you could be selecting exponentially more points while zoomed out).\n\nAdjusting the pixel radius by zoom level is an exercise left for the reader ;)\n\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/18cb7a77b2d9de597b86'>dots on a map: setup-gl</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/dc1ce756527c072885dc'>dots on a map: The Counted</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/2c7eec93ce68551627d4'>dots on a map: The Counted</a>", "uid": "enjalot_1d7d42e9b4bc3d377db84d95a38ce800"}, {"code": "<script>\n\nvar parseDate = d3.time.format(\"%Y-%m\").parse,\n    formatYear = d3.format(\"02d\"),\n    formatDate = function(d) { return \"Q\" + ((d.getMonth() / 3 | 0) + 1) + formatYear(d.getFullYear() % 100); };\n\nvar margin = {top: 10, right: 20, bottom: 20, left: 60},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar y0 = d3.scale.ordinal()\n    .rangeRoundBands([height, 0], .2);\n\nvar y1 = d3.scale.linear();\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1, 0);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tickFormat(formatDate);\n\nvar nest = d3.nest()\n    .key(function(d) { return d.group; });\n\nvar stack = d3.layout.stack()\n    .values(function(d) { return d.values; })\n    .x(function(d) { return d.date; })\n    .y(function(d) { return d.value; })\n    .out(function(d, y0) { d.valueOffset = y0; });\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.value = +d.value;\n  });\n\n  var dataByGroup = nest.entries(data);\n\n  stack(dataByGroup);\n  x.domain(dataByGroup[0].values.map(function(d) { return d.date; }));\n  y0.domain(dataByGroup.map(function(d) { return d.key; }));\n  y1.domain([0, d3.max(data, function(d) { return d.value; })]).range([y0.rangeBand(), 0]);\n\n  var group = svg.selectAll(\".group\")\n      .data(dataByGroup)\n    .enter().append(\"g\")\n      .attr(\"class\", \"group\")\n      .attr(\"transform\", function(d) { return \"translate(0,\" + y0(d.key) + \")\"; });\n\n  // added this segment\n  var quarterTotal = [];\n  for (var i = 0; i < 8; i++) {\n    quarterTotal[i] = 0;\n  }\n  //\n\n  group.append(\"text\")\n      .attr(\"class\", \"group-label\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return y1(d.values[0].value / 2); })\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return \"Group \" + d.key; });\n\n  group.selectAll(\"rect\")\n      .data(function(d) { return d.values; })\n    .enter().append(\"rect\")\n      .style(\"fill\", function(d) { return color(d.group); })\n      .attr(\"x\", function(d) { return x(d.date); })\n      .attr(\"y\", function(d) { return y1(d.value); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"height\", function(d) { return y0.rangeBand() - y1(d.value); });\n\n  // added this segment\n  group.selectAll(\".value-label\")\n      .data(function(d) { return d.values; })\n    .enter().append(\"text\")\n      .attr(\"class\", \"value-label\")\n      .style(\"fill\", \"white\")\n      .style(\"font-size\", \"12px\")\n      .attr(\"x\", function(d) { return x(d.date); })\n      .attr(\"y\", y0.rangeBand())\n      .attr(\"dx\", \".20em\")\n      .attr(\"dy\", \"-.20em\")\n      .text(function(d,i) {\n        quarterTotal[i] += d.value; // building the array with quarter totals...\n        return d.value;\n      });\n  //\n\n  group.filter(function(d, i) { return !i; }).append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + y0.rangeBand() + \")\")\n      .call(xAxis);\n\n  d3.selectAll(\"input\").on(\"change\", change);\n\n  var timeout = setTimeout(function() {\n    d3.select(\"input[value=\\\"stacked\\\"]\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(timeout);\n    if (this.value === \"multiples\") transitionMultiples();\n    else transitionStacked();\n  }\n\n  function transitionMultiples() {\n    var t = svg.transition().duration(750),\n        g = t.selectAll(\".group\").attr(\"transform\", function(d) { return \"translate(0,\" + y0(d.key) + \")\"; });\n    g.selectAll(\"rect\").attr(\"y\", function(d) { return y1(d.value); });\n    g.select(\".group-label\").attr(\"y\", function(d) { return y1(d.values[0].value / 2); });\n\n    // added this segment\n    g.selectAll(\".value-label\")\n      .attr(\"y\", y0.rangeBand())\n      .style(\"opacity\", 1)\n      .text(function(d) {\n        return d.value;\n      });\n    //\n  }\n\n  function transitionStacked() {\n    var t = svg.transition().duration(750),\n        g = t.selectAll(\".group\").attr(\"transform\", \"translate(0,\" + y0(y0.domain()[0]) + \")\");\n    g.selectAll(\"rect\").attr(\"y\", function(d) { return y1(d.value + d.valueOffset); });\n    g.select(\".group-label\").attr(\"y\", function(d) { return y1(d.values[0].value / 2 + d.values[0].valueOffset); });\n\n    // added this segment\n    g.selectAll(\".value-label\")\n      .attr(\"y\", y1(0))\n      .style(\"opacity\", function(d,i,j) {\n        return j === 3 ? \"1\" : \"0\";\n      })\n      .text(function(d,i) {\n        return quarterTotal[i];\n      });\n    //\n  }\n});\n\n</script>", "description": "Stacked-to-Multiples (improved)", "created_at": "2016-06-04T22:24:13Z", "updated_at": "2016-06-04T22:24:13Z", "api": ["d3.time.format", "d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.nest", "d3.layout.stack", "d3.scale.category10", "d3.select", "d3.tsv", "d3.max", "d3.selectAll"], "readme": "This is largely based on Mike Bostock's [Stacked-to-Multiples](http://bl.ocks.org/mbostock/4679202) gist. I have added 4 snippets to the original code in order to represent the magnitudes of each group per quarter and also each quarter's total. I find totalling the values as they are stacked to be an efficient and intuitive way to marry visual movement with enhanced information display.\n\nforked from <a href='http://bl.ocks.org/fernoftheandes/'>fernoftheandes</a>'s block: <a href='http://bl.ocks.org/fernoftheandes/93c5c349be14f459c98a'>Stacked-to-Multiples (improved)</a>", "uid": "thecodingmonkey_c867dc58f2a812aebca33f48f4df8940"}, {"code": "<script>\n      var outerWidth = 960;\n      var outerHeight = 500;\n      var margin = { left: 130, top: 44, right: 30, bottom: 47 };\n      var barPadding = 0.2;\n\n      var xColumn = \"year\";\n      var yColumn = \"expenses\";\n      var colorColumn = \"department\";\n      var layerColumn = colorColumn;\n      \n      var hoveredColorValue;\n      var hoveredStrokeColor = \"black\";\n\n      var innerWidth  = outerWidth  - margin.left - margin.right;\n      var innerHeight = outerHeight - margin.top  - margin.bottom;\n\n      var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\",  outerWidth)\n        .attr(\"height\", outerHeight);\n      var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      \n      // This is the layer where the bars are drawn.\n      var baseBarLayer = g.append(\"g\");\n      \n      // This layer contains a semi-transparent overlay\n      // that fades out the base bars.\n      var overlayRect = g.append(\"g\")\n        .append(\"rect\")\n        .attr(\"width\", innerWidth)\n        .attr(\"height\", innerHeight)\n        .style(\"pointer-events\", \"none\");\n      \n      // This contains the subset of bars rendered on top\n      // when you hover over the entries in the color legend.\n      var foregroundBarLayer = g.append(\"g\");\n      \n      var xAxisG = g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + innerHeight + \")\");\n      var yAxisG = g.append(\"g\")\n        .attr(\"class\", \"y axis\");\n      var colorLegendG = g.append(\"g\")\n        .attr(\"class\", \"color-legend\")\n        .attr(\"transform\", \"translate(596, 0)\");\n\n      var xScale = d3.scale.ordinal().rangeBands([0, innerWidth], barPadding);\n      var yScale = d3.scale.linear().range([innerHeight, 0]);\n      var colorScale = d3.scale.category10();\n      \n      var tipNumberFormat = d3.format(\",\");\n      var tip = d3.tip()\n        .attr(\"class\", \"d3-tip\")\n        .offset([-10, 0])\n        .html(function(d) {\n          return [\n            d[colorColumn],\n            \" in \",\n            d[xColumn],\n            \": \",\n            tipNumberFormat(d[yColumn])\n          ].join(\"\");\n        });\n      g.call(tip);\n      \n      // Use a modified SI formatter that uses \"B\" for Billion.\n      var siFormat = d3.format(\"s\");\n      var customTickFormat = function (d){\n        return siFormat(d).replace(\"G\", \"B\");\n      };\n\n      var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\")\n        .outerTickSize(0);\n      var yAxis = d3.svg.axis().scale(yScale).orient(\"left\")\n        .ticks(5)\n        .tickFormat(customTickFormat)\n        .outerTickSize(0);\n\n      var colorLegend = d3.legend.color()\n        .scale(colorScale)\n        .shapePadding(6.24)\n        .shapeWidth(25)\n        .shapeHeight(25)\n        .labelOffset(5);\n\n      function render(data){\n\n        var nested = d3.nest()\n          .key(function (d){ return d[layerColumn]; })\n          .entries(data);\n\n        var stack = d3.layout.stack()\n          .y(function (d){ return d[yColumn]; })\n          .values(function (d){ return d.values; });\n\n        var layers = stack(nested.reverse()).reverse();\n\n        xScale.domain(layers[0].values.map(function (d){\n          return d[xColumn];\n        }));\n\n        yScale.domain([\n          0,\n          d3.max(layers, function (layer){\n            return d3.max(layer.values, function (d){\n              return d.y0 + d.y;\n            });\n          })\n        ]);\n\n        colorScale.domain(layers.map(function (layer){\n          return layer.key;\n        }));\n\n        xAxisG.call(xAxis); \n        yAxisG.call(yAxis);\n\n        renderBars(baseBarLayer, layers);\n        \n        if(hoveredColorValue){\n          setOverlayTransparency(0.7);\n          renderBars(foregroundBarLayer, layers.filter(function (layer){\n            return layer.key === hoveredColorValue;\n          }));\n        } else {\n          setOverlayTransparency(0.0);\n          renderBars(foregroundBarLayer, []);\n        }\n        \n        colorLegendG.call(colorLegend);\n        \n        // Move the text down a bit.\n        colorLegendG.selectAll(\"text\").attr(\"y\", 4);\n        \n        listenForHover(colorLegendG.selectAll(\"rect\"), data);\n        listenForHover(colorLegendG.selectAll(\"text\"), data);\n      }\n      \n      function setOverlayTransparency(alpha){\n        overlayRect\n          .transition().duration(400)\n          .attr(\"fill\", \"rgba(255, 255, 255, \" + alpha + \")\");\n      }\n      \n      function renderBars(g, layers){\n        var layerGs = g.selectAll(\".layer\").data(layers);\n        layerGs.enter().append(\"g\").attr(\"class\", \"layer\");\n        layerGs.exit().remove();\n        layerGs.style(\"fill\", function (d){\n          return colorScale(d.key);\n        });\n\n        var bars = layerGs.selectAll(\"rect\").data(function (d){\n          return d.values;\n        });\n        bars.enter().append(\"rect\")\n          .on(\"mouseover\", tip.show)\n          .on(\"mouseout\", tip.hide);\n        bars.exit().remove();\n        bars\n          .attr(\"x\", function (d){ return xScale(d[xColumn]); })\n          .attr(\"y\", function (d){ return yScale(d.y0 + d.y); })\n          .attr(\"width\", xScale.rangeBand())\n          .attr(\"height\", function (d){ return innerHeight - yScale(d.y); });\n      }\n      \n      function listenForHover(selection, data){\n        selection\n          .on(\"mouseover\", function (d){\n            hoveredColorValue = d;\n            render(data);\n          })\n          .on(\"mouseout\", function (d){\n            hoveredColorValue = null;\n            render(data);\n          })\n          .style(\"cursor\", \"pointer\");\n      }\n\n      function type(d){\n        d.population = +d.population;\n        return d;\n      }\n\n      d3.csv(\"religionByCountryTop5.csv\", type, render);\n\n    </script>", "description": "Stacked Bars - Hawaii Expenditures", "created_at": "2016-06-04T22:11:27Z", "updated_at": "2016-06-04T22:11:28Z", "api": ["d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.scale.category10", "d3.format", "d3.tip", "d3.svg.axis", "d3.legend.color", "d3.nest", "d3.layout.stack", "d3.max", "d3.csv"], "readme": "Stacked bars showing estimated religion by top 5 countries in 2010. This is an example from the tutorial [Splitting Charts](https://github.com/curran/screencasts/tree/gh-pages/splittingCharts). The data shown is from this [report on The Global Religious Landscape from Pew Research](http://www.pewforum.org/2012/12/18/global-religious-landscape-exec/), generated using this [processing script](https://github.com/curran/data/blob/gh-pages/pew/religion/processed/process.js).\n\n * Draws from [Stacked-to-Grouped Bars](http://bl.ocks.org/mbostock/3943967)\n * Tooltip logic draws from [World City Explorer](http://bl.ocks.org/curran/752b97cef3f880a813ab)\n\n<!-- Start of SimpleHitCounter Code -->\n<div align=\"center\"><a href=\"http://www.simplehitcounter.com\" target=\"_blank\"><img src=\"http://simplehitcounter.com/hit.php?uid=1967777&f=16777215&b=0\" border=\"0\" height=\"18\" width=\"83\" alt=\"web counter\"></a></div>\n<!-- End of SimpleHitCounter Code -->\n\n\nforked from <a href='http://bl.ocks.org/curran/'>curran</a>'s block: <a href='http://bl.ocks.org/curran/805413fb3b2efaada1ce'>Stacked Bars</a>\n\nforked from <a href='http://bl.ocks.org/thecodingmonkey/'>thecodingmonkey</a>'s block: <a href='http://bl.ocks.org/thecodingmonkey/4a6dcba80efc406c038df944b6926aa2'>Stacked Bars - Hawaii Expenditures</a>\n\nforked from <a href='http://bl.ocks.org/thecodingmonkey/'>thecodingmonkey</a>'s block: <a href='http://bl.ocks.org/thecodingmonkey/fa0a0886a8e3b466e89b8cf79063696e'>Stacked Bars - Hawaii Expenditures</a>\n\nforked from <a href='http://bl.ocks.org/thecodingmonkey/'>thecodingmonkey</a>'s block: <a href='http://bl.ocks.org/thecodingmonkey/0eba555a71b5cf369f61213fb03d519e'>Stacked Bars - Hawaii Expenditures</a>\n\nforked from <a href='http://bl.ocks.org/thecodingmonkey/'>thecodingmonkey</a>'s block: <a href='http://bl.ocks.org/thecodingmonkey/9357bc70d53f359c55db073ef6f61a39'>Stacked Bars - Hawaii Expenditures</a>\n\nforked from <a href='http://bl.ocks.org/thecodingmonkey/'>thecodingmonkey</a>'s block: <a href='http://bl.ocks.org/thecodingmonkey/d084e7e1caa1aceef1517c3d5224d694'>Stacked Bars - Hawaii Expenditures</a>\n\nforked from <a href='http://bl.ocks.org/thecodingmonkey/'>thecodingmonkey</a>'s block: <a href='http://bl.ocks.org/thecodingmonkey/85205f6e1ce370c15bd07ecaf9aed62f'>Stacked Bars - Hawaii Expenditures</a>\n\nforked from <a href='http://bl.ocks.org/thecodingmonkey/'>thecodingmonkey</a>'s block: <a href='http://bl.ocks.org/thecodingmonkey/13df240dd71fe07c58113070f45d9695'>Stacked Bars - Hawaii Expenditures</a>", "uid": "thecodingmonkey_a2a09618503b18fe92a77200257e9d8e"}, {"code": "<script>\n      var outerWidth = 960;\n      var outerHeight = 500;\n      var margin = { left: 130, top: 44, right: 30, bottom: 47 };\n      var barPadding = 0.2;\n\n      var xColumn = \"year\";\n      var yColumn = \"amount\";\n      var colorColumn = \"department\";\n      var layerColumn = colorColumn;\n      \n      var hoveredColorValue;\n      var hoveredStrokeColor = \"black\";\n\n      var innerWidth  = outerWidth  - margin.left - margin.right;\n      var innerHeight = outerHeight - margin.top  - margin.bottom;\n\n      var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\",  outerWidth)\n        .attr(\"height\", outerHeight);\n      var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      \n      // This is the layer where the bars are drawn.\n      var baseBarLayer = g.append(\"g\");\n      \n      // This layer contains a semi-transparent overlay\n      // that fades out the base bars.\n      var overlayRect = g.append(\"g\")\n        .append(\"rect\")\n        .attr(\"width\", innerWidth)\n        .attr(\"height\", innerHeight)\n        .style(\"pointer-events\", \"none\");\n      \n      // This contains the subset of bars rendered on top\n      // when you hover over the entries in the color legend.\n      var foregroundBarLayer = g.append(\"g\");\n      \n      var xAxisG = g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + innerHeight + \")\");\n      var yAxisG = g.append(\"g\")\n        .attr(\"class\", \"y axis\");\n      var colorLegendG = g.append(\"g\")\n        .attr(\"class\", \"color-legend\")\n        .attr(\"transform\", \"translate(596, 0)\");\n\n      var xScale = d3.scale.ordinal().rangeBands([0, innerWidth], barPadding);\n      var yScale = d3.scale.linear().range([innerHeight, 0]);\n      var colorScale = d3.scale.category10();\n      \n      var tipNumberFormat = d3.format(\",\");\n      var tip = d3.tip()\n        .attr(\"class\", \"d3-tip\")\n        .offset([-10, 0])\n        .html(function(d) {\n          return [\n            d[colorColumn],\n            \" in \",\n            d[xColumn],\n            \": \",\n            tipNumberFormat(d[yColumn])\n          ].join(\"\");\n        });\n      g.call(tip);\n      \n      // Use a modified SI formatter that uses \"B\" for Billion.\n      var siFormat = d3.format(\"s\");\n      var customTickFormat = function (d){\n        return siFormat(d).replace(\"G\", \"B\");\n      };\n\n      var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\")\n        .outerTickSize(0);\n      var yAxis = d3.svg.axis().scale(yScale).orient(\"left\")\n        .ticks(5)\n        .tickFormat(customTickFormat)\n        .outerTickSize(0);\n\n      var colorLegend = d3.legend.color()\n        .scale(colorScale)\n        .shapePadding(6.24)\n        .shapeWidth(25)\n        .shapeHeight(25)\n        .labelOffset(5);\n\n      function render(data){\n\n        var nested = d3.nest()\n          .key(function (d){ return d[layerColumn]; })\n          .entries(data);\n\n        var stack = d3.layout.stack()\n          .y(function (d){ return d[yColumn]; })\n          .values(function (d){ return d.values; });\n\n        var layers = stack(nested.reverse()).reverse();\n\n        xScale.domain(layers[0].values.map(function (d){\n          return d[xColumn];\n        }));\n\n        yScale.domain([\n          0,\n          d3.max(layers, function (layer){\n            return d3.max(layer.values, function (d){\n              return d.y0 + d.y;\n            });\n          })\n        ]);\n\n        colorScale.domain(layers.map(function (layer){\n          return layer.key;\n        }));\n\n        xAxisG.call(xAxis); \n        yAxisG.call(yAxis);\n\n        renderBars(baseBarLayer, layers);\n        \n        if(hoveredColorValue){\n          setOverlayTransparency(0.7);\n          renderBars(foregroundBarLayer, layers.filter(function (layer){\n            return layer.key === hoveredColorValue;\n          }));\n        } else {\n          setOverlayTransparency(0.0);\n          renderBars(foregroundBarLayer, []);\n        }\n        \n        colorLegendG.call(colorLegend);\n        \n        // Move the text down a bit.\n        colorLegendG.selectAll(\"text\").attr(\"y\", 4);\n        \n        listenForHover(colorLegendG.selectAll(\"rect\"), data);\n        listenForHover(colorLegendG.selectAll(\"text\"), data);\n      }\n      \n      function setOverlayTransparency(alpha){\n        overlayRect\n          .transition().duration(400)\n          .attr(\"fill\", \"rgba(255, 255, 255, \" + alpha + \")\");\n      }\n      \n      function renderBars(g, layers){\n        var layerGs = g.selectAll(\".layer\").data(layers);\n        layerGs.enter().append(\"g\").attr(\"class\", \"layer\");\n        layerGs.exit().remove();\n        layerGs.style(\"fill\", function (d){\n          return colorScale(d.key);\n        });\n\n        var bars = layerGs.selectAll(\"rect\").data(function (d){\n          return d.values;\n        });\n        bars.enter().append(\"rect\")\n          .on(\"mouseover\", tip.show)\n          .on(\"mouseout\", tip.hide);\n        bars.exit().remove();\n        bars\n          .attr(\"x\", function (d){ return xScale(d[xColumn]); })\n          .attr(\"y\", function (d){ return yScale(d.y0 + d.y); })\n          .attr(\"width\", xScale.rangeBand())\n          .attr(\"height\", function (d){ return innerHeight - yScale(d.y); });\n      }\n      \n      function listenForHover(selection, data){\n        selection\n          .on(\"mouseover\", function (d){\n            hoveredColorValue = d;\n            render(data);\n          })\n          .on(\"mouseout\", function (d){\n            hoveredColorValue = null;\n            render(data);\n          })\n          .style(\"cursor\", \"pointer\");\n      }\n\n      function type(d){\n        d.population = +d.population;\n        return d;\n      }\n\n      d3.csv(\"religionByCountryTop5.csv\", type, render);\n\n    </script>", "description": "Stacked Bars - Hawaii Expenditures", "created_at": "2016-06-04T21:59:18Z", "updated_at": "2016-06-04T21:59:19Z", "api": ["d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.scale.category10", "d3.format", "d3.tip", "d3.svg.axis", "d3.legend.color", "d3.nest", "d3.layout.stack", "d3.max", "d3.csv"], "readme": "Stacked bars showing estimated religion by top 5 countries in 2010. This is an example from the tutorial [Splitting Charts](https://github.com/curran/screencasts/tree/gh-pages/splittingCharts). The data shown is from this [report on The Global Religious Landscape from Pew Research](http://www.pewforum.org/2012/12/18/global-religious-landscape-exec/), generated using this [processing script](https://github.com/curran/data/blob/gh-pages/pew/religion/processed/process.js).\n\n * Draws from [Stacked-to-Grouped Bars](http://bl.ocks.org/mbostock/3943967)\n * Tooltip logic draws from [World City Explorer](http://bl.ocks.org/curran/752b97cef3f880a813ab)\n\n<!-- Start of SimpleHitCounter Code -->\n<div align=\"center\"><a href=\"http://www.simplehitcounter.com\" target=\"_blank\"><img src=\"http://simplehitcounter.com/hit.php?uid=1967777&f=16777215&b=0\" border=\"0\" height=\"18\" width=\"83\" alt=\"web counter\"></a></div>\n<!-- End of SimpleHitCounter Code -->\n\n\nforked from <a href='http://bl.ocks.org/curran/'>curran</a>'s block: <a href='http://bl.ocks.org/curran/805413fb3b2efaada1ce'>Stacked Bars</a>\n\nforked from <a href='http://bl.ocks.org/thecodingmonkey/'>thecodingmonkey</a>'s block: <a href='http://bl.ocks.org/thecodingmonkey/4a6dcba80efc406c038df944b6926aa2'>Stacked Bars - Hawaii Expenditures</a>\n\nforked from <a href='http://bl.ocks.org/thecodingmonkey/'>thecodingmonkey</a>'s block: <a href='http://bl.ocks.org/thecodingmonkey/fa0a0886a8e3b466e89b8cf79063696e'>Stacked Bars - Hawaii Expenditures</a>\n\nforked from <a href='http://bl.ocks.org/thecodingmonkey/'>thecodingmonkey</a>'s block: <a href='http://bl.ocks.org/thecodingmonkey/0eba555a71b5cf369f61213fb03d519e'>Stacked Bars - Hawaii Expenditures</a>\n\nforked from <a href='http://bl.ocks.org/thecodingmonkey/'>thecodingmonkey</a>'s block: <a href='http://bl.ocks.org/thecodingmonkey/9357bc70d53f359c55db073ef6f61a39'>Stacked Bars - Hawaii Expenditures</a>\n\nforked from <a href='http://bl.ocks.org/thecodingmonkey/'>thecodingmonkey</a>'s block: <a href='http://bl.ocks.org/thecodingmonkey/d084e7e1caa1aceef1517c3d5224d694'>Stacked Bars - Hawaii Expenditures</a>", "uid": "thecodingmonkey_85205f6e1ce370c15bd07ecaf9aed62f"}, {"code": "<script>\n\nvar width = 960,\n    height = 136,\n    cellSize = 17; // cell size\n\nvar percent = d3.format(\".1%\"),\n    format = d3.time.format(\"%Y-%m-%d\");\n\nvar color = d3.scale.quantize()\n    .domain([-.05, .05])\n    .range(d3.range(11).map(function(d) { return \"q\" + d + \"-11\"; }));\n\nvar svg = d3.select(\"body\").selectAll(\"svg\")\n    .data(d3.range(1990, 2011))\n  .enter().append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .attr(\"class\", \"RdYlGn\")\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + ((width - cellSize * 53) / 2) + \",\" + (height - cellSize * 7 - 1) + \")\");\n\nsvg.append(\"text\")\n    .attr(\"transform\", \"translate(-6,\" + cellSize * 3.5 + \")rotate(-90)\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) { return d; });\n\nvar rect = svg.selectAll(\".day\")\n    .data(function(d) { return d3.time.days(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"rect\")\n    .attr(\"class\", \"day\")\n    .attr(\"width\", cellSize)\n    .attr(\"height\", cellSize)\n    .attr(\"x\", function(d) { return d3.time.weekOfYear(d) * cellSize; })\n    .attr(\"y\", function(d) { return d.getDay() * cellSize; })\n    .datum(format);\n\nrect.append(\"title\")\n    .text(function(d) { return d; });\n\nsvg.selectAll(\".month\")\n    .data(function(d) { return d3.time.months(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"path\")\n    .attr(\"class\", \"month\")\n    .attr(\"d\", monthPath);\n\nd3.csv(\"dji.csv\", function(error, csv) {\n  if (error) throw error;\n\n  var data = d3.nest()\n    .key(function(d) { return d.Date; })\n    .rollup(function(d) { return (d[0].Close - d[0].Open) / d[0].Open; })\n    .map(csv);\n\n  rect.filter(function(d) { return d in data; })\n      .attr(\"class\", function(d) { return \"day \" + color(data[d]); })\n    .select(\"title\")\n      .text(function(d) { return d + \": \" + percent(data[d]); });\n});\n\nfunction monthPath(t0) {\n  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),\n      d0 = t0.getDay(), w0 = d3.time.weekOfYear(t0),\n      d1 = t1.getDay(), w1 = d3.time.weekOfYear(t1);\n  return \"M\" + (w0 + 1) * cellSize + \",\" + d0 * cellSize\n      + \"H\" + w0 * cellSize + \"V\" + 7 * cellSize\n      + \"H\" + w1 * cellSize + \"V\" + (d1 + 1) * cellSize\n      + \"H\" + (w1 + 1) * cellSize + \"V\" + 0\n      + \"H\" + (w0 + 1) * cellSize + \"Z\";\n}\n\n</script>", "description": "Calendar View", "created_at": "2016-06-04T21:41:55Z", "updated_at": "2016-06-04T21:41:55Z", "api": ["d3.format", "d3.time.format", "d3.scale.quantize", "d3.range", "d3.select", "d3.time.days", "d3.time.weekOfYear", "d3.time.months", "d3.csv", "d3.nest"], "readme": "This example demonstrates loading of CSV data, which is then quantized into a diverging color scale. The values are visualized as colored cells per day. Days are arranged into columns by week, then grouped by month and years. Colors by [Cynthia Brewer](http://colorbrewer.org/). Layout inspired by [Rick Wicklin and Robert Allison](http://stat-computing.org/dataexpo/2009/posters/). Dow Jones historical data copyright [Yahoo! Finance](http://finance.yahoo.com/) or independent data provider; fair use for educational purposes.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063318'>Calendar View</a>", "uid": "jonpage_c2a95b1f7ee8d65761da60ad8450ec14"}, {"code": "<script>\n      var outerWidth = 960;\n      var outerHeight = 500;\n      var margin = { left: 130, top: 44, right: 30, bottom: 47 };\n      var barPadding = 0.2;\n\n      var xColumn = \"country\";\n      var yColumn = \"population\";\n      var colorColumn = \"religion\";\n      var layerColumn = colorColumn;\n      \n      var hoveredColorValue;\n      var hoveredStrokeColor = \"black\";\n\n      var innerWidth  = outerWidth  - margin.left - margin.right;\n      var innerHeight = outerHeight - margin.top  - margin.bottom;\n\n      var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\",  outerWidth)\n        .attr(\"height\", outerHeight);\n      var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      \n      // This is the layer where the bars are drawn.\n      var baseBarLayer = g.append(\"g\");\n      \n      // This layer contains a semi-transparent overlay\n      // that fades out the base bars.\n      var overlayRect = g.append(\"g\")\n        .append(\"rect\")\n        .attr(\"width\", innerWidth)\n        .attr(\"height\", innerHeight)\n        .style(\"pointer-events\", \"none\");\n      \n      // This contains the subset of bars rendered on top\n      // when you hover over the entries in the color legend.\n      var foregroundBarLayer = g.append(\"g\");\n      \n      var xAxisG = g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + innerHeight + \")\");\n      var yAxisG = g.append(\"g\")\n        .attr(\"class\", \"y axis\");\n      var colorLegendG = g.append(\"g\")\n        .attr(\"class\", \"color-legend\")\n        .attr(\"transform\", \"translate(596, 0)\");\n\n      var xScale = d3.scale.ordinal().rangeBands([0, innerWidth], barPadding);\n      var yScale = d3.scale.linear().range([innerHeight, 0]);\n      var colorScale = d3.scale.category10();\n      \n      var tipNumberFormat = d3.format(\",\");\n      var tip = d3.tip()\n        .attr(\"class\", \"d3-tip\")\n        .offset([-10, 0])\n        .html(function(d) {\n          return [\n            d[colorColumn],\n            \" in \",\n            d[xColumn],\n            \": \",\n            tipNumberFormat(d[yColumn])\n          ].join(\"\");\n        });\n      g.call(tip);\n      \n      // Use a modified SI formatter that uses \"B\" for Billion.\n      var siFormat = d3.format(\"s\");\n      var customTickFormat = function (d){\n        return siFormat(d).replace(\"G\", \"B\");\n      };\n\n      var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\")\n        .outerTickSize(0);\n      var yAxis = d3.svg.axis().scale(yScale).orient(\"left\")\n        .ticks(5)\n        .tickFormat(customTickFormat)\n        .outerTickSize(0);\n\n      var colorLegend = d3.legend.color()\n        .scale(colorScale)\n        .shapePadding(6.24)\n        .shapeWidth(25)\n        .shapeHeight(25)\n        .labelOffset(5);\n\n      function render(data){\n\n        var nested = d3.nest()\n          .key(function (d){ return d[layerColumn]; })\n          .entries(data);\n\n        var stack = d3.layout.stack()\n          .y(function (d){ return d[yColumn]; })\n          .values(function (d){ return d.values; });\n\n        var layers = stack(nested.reverse()).reverse();\n\n        xScale.domain(layers[0].values.map(function (d){\n          return d[xColumn];\n        }));\n\n        yScale.domain([\n          0,\n          d3.max(layers, function (layer){\n            return d3.max(layer.values, function (d){\n              return d.y0 + d.y;\n            });\n          })\n        ]);\n\n        colorScale.domain(layers.map(function (layer){\n          return layer.key;\n        }));\n\n        xAxisG.call(xAxis); \n        yAxisG.call(yAxis);\n\n        renderBars(baseBarLayer, layers);\n        \n        if(hoveredColorValue){\n          setOverlayTransparency(0.7);\n          renderBars(foregroundBarLayer, layers.filter(function (layer){\n            return layer.key === hoveredColorValue;\n          }));\n        } else {\n          setOverlayTransparency(0.0);\n          renderBars(foregroundBarLayer, []);\n        }\n        \n        colorLegendG.call(colorLegend);\n        \n        // Move the text down a bit.\n        colorLegendG.selectAll(\"text\").attr(\"y\", 4);\n        \n        listenForHover(colorLegendG.selectAll(\"rect\"), data);\n        listenForHover(colorLegendG.selectAll(\"text\"), data);\n      }\n      \n      function setOverlayTransparency(alpha){\n        overlayRect\n          .transition().duration(400)\n          .attr(\"fill\", \"rgba(255, 255, 255, \" + alpha + \")\");\n      }\n      \n      function renderBars(g, layers){\n        var layerGs = g.selectAll(\".layer\").data(layers);\n        layerGs.enter().append(\"g\").attr(\"class\", \"layer\");\n        layerGs.exit().remove();\n        layerGs.style(\"fill\", function (d){\n          return colorScale(d.key);\n        });\n\n        var bars = layerGs.selectAll(\"rect\").data(function (d){\n          return d.values;\n        });\n        bars.enter().append(\"rect\")\n          .on(\"mouseover\", tip.show)\n          .on(\"mouseout\", tip.hide);\n        bars.exit().remove();\n        bars\n          .attr(\"x\", function (d){ return xScale(d[xColumn]); })\n          .attr(\"y\", function (d){ return yScale(d.y0 + d.y); })\n          .attr(\"width\", xScale.rangeBand())\n          .attr(\"height\", function (d){ return innerHeight - yScale(d.y); });\n      }\n      \n      function listenForHover(selection, data){\n        selection\n          .on(\"mouseover\", function (d){\n            hoveredColorValue = d;\n            render(data);\n          })\n          .on(\"mouseout\", function (d){\n            hoveredColorValue = null;\n            render(data);\n          })\n          .style(\"cursor\", \"pointer\");\n      }\n\n      function type(d){\n        d.population = +d.population;\n        return d;\n      }\n\n      d3.csv(\"religionByCountryTop5.csv\", type, render);\n\n    </script>", "description": "Stacked Bars - Hawaii Expenditures", "created_at": "2016-06-04T21:41:36Z", "updated_at": "2016-06-04T21:41:36Z", "api": ["d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.scale.category10", "d3.format", "d3.tip", "d3.svg.axis", "d3.legend.color", "d3.nest", "d3.layout.stack", "d3.max", "d3.csv"], "readme": "Stacked bars showing estimated religion by top 5 countries in 2010. This is an example from the tutorial [Splitting Charts](https://github.com/curran/screencasts/tree/gh-pages/splittingCharts). The data shown is from this [report on The Global Religious Landscape from Pew Research](http://www.pewforum.org/2012/12/18/global-religious-landscape-exec/), generated using this [processing script](https://github.com/curran/data/blob/gh-pages/pew/religion/processed/process.js).\n\n * Draws from [Stacked-to-Grouped Bars](http://bl.ocks.org/mbostock/3943967)\n * Tooltip logic draws from [World City Explorer](http://bl.ocks.org/curran/752b97cef3f880a813ab)\n\n<!-- Start of SimpleHitCounter Code -->\n<div align=\"center\"><a href=\"http://www.simplehitcounter.com\" target=\"_blank\"><img src=\"http://simplehitcounter.com/hit.php?uid=1967777&f=16777215&b=0\" border=\"0\" height=\"18\" width=\"83\" alt=\"web counter\"></a></div>\n<!-- End of SimpleHitCounter Code -->\n\n\nforked from <a href='http://bl.ocks.org/curran/'>curran</a>'s block: <a href='http://bl.ocks.org/curran/805413fb3b2efaada1ce'>Stacked Bars</a>\n\nforked from <a href='http://bl.ocks.org/thecodingmonkey/'>thecodingmonkey</a>'s block: <a href='http://bl.ocks.org/thecodingmonkey/4a6dcba80efc406c038df944b6926aa2'>Stacked Bars - Hawaii Expenditures</a>", "uid": "thecodingmonkey_fa0a0886a8e3b466e89b8cf79063696e"}, {"code": "<script>\n\t\n\t////////////////////////////////////////////////////////////// \n\t//////////////////////// Initiate //////////////////////////// \n\t////////////////////////////////////////////////////////////// \n\n\tvar w = window,\n\t\td = document,\n\t\te = d.documentElement,\n\t\tg = d.getElementsByTagName('body')[0],\n\t\tx = w.innerWidth || e.clientWidth || g.clientWidth,\n\t\ttotalHeight = w.innerHeight || e.clientHeight || g.clientHeight;\n\t\n\tvar margin = {top: 30, right: 30, bottom: 30, left: 30};\n\t\twidth = Math.min(500, (totalHeight - 20), $(\".chart\").width() - margin.left - margin.right);\n\t\theight = width;\n\t\t\n\t//Create scale\n\tvar xScale = d3.scale.linear()\n\t\t.domain([-1.5, 1.5])\n\t\t.range([-width/2, width/2]);\n  // color from http://colrd.com/palette/24070/\n  var colors = [\"#1a1334\", \"#26294a\", \"#01545a\", \"#017351\", \"#03c383\", \"#aad962\",\n     \"#fbbf45\", \"#ef6a32\", \"#ed0345\", \"#a12a5e\", \"#710162\", \"#110141\"];\n  var colorScale = d3.scale.ordinal().range(colors);\n\t\n\t//Create SVG\n\tvar svg = d3.select(\".chart\").append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t  .append(\"g\")\n\t\t.style(\"filter\", \"url(#gooey)\") //Set the filter on the container svg\n\t\t.attr(\"transform\", \"translate(\" + (width/2 + margin.left) + \",\" +(height/2 +  margin.top) + \")\");\n\n\t//SVG filter for the gooey effect\n\t//Code taken from http://tympanus.net/codrops/2015/03/10/creative-gooey-effects/\n\tvar defs = svg.append('defs');\n\tvar filter = defs.append('filter').attr('id','gooey');\n\tfilter.append('feGaussianBlur')\n\t\t.attr('in','SourceGraphic')\n\t\t.attr('stdDeviation','10')\n\t\t.attr('result','blur');\n\tfilter.append('feColorMatrix')\n\t\t.attr('in','blur')\n\t\t.attr('mode','matrix')\n\t\t.attr('values','1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7');\n  \n    // (swu): commenting out the feComposite actually makes the color blend\n    // I wonder why that is?\n// \tfilter.append('feComposite')\n// \t\t.attr('in','SourceGraphic')\n// \t\t.attr('in2','gooey')\n// \t\t.attr('operator','atop');\t\n\t\n\t//Append circle at center\n\tsvg.append(\"circle\")\n\t\t\t.attr(\"class\", \"centerCircle\")\n\t\t\t.attr(\"cx\", 0)\n\t\t\t.attr(\"cy\", 0)\n\t\t\t.attr(\"r\", 20)\n\t\t\t.style(\"fill\", \"#cfcfcf\");\n\t\n\t//Create the circles that will move out and in the center circle\n\tvar steps = 12;\t\n\tsvg.selectAll(\".flyCircle\")\n\t\t.data(d3.range(steps).map(function(num) {return (num/steps)*(2*Math.PI); }))\n\t\t.enter().append(\"circle\")\n\t\t\t.attr(\"class\", \"flyCircle\")\n\t\t\t.attr(\"cx\", 0)\n\t\t\t.attr(\"cy\", 0)\n\t\t\t.attr(\"r\", 15)\n      .style(\"fill\", function(d, i) {return colorScale(i)})\n\t\t\t.call(update);\n\n\t//Continuously moves the circles outward and inward\n\tfunction update() {\n\t\t\tvar circle = d3.selectAll(\".flyCircle\");\n\t\t\tvar dur = 1500,\n\t\t\t\tdel = 500;\n\t\t\t\t\n\t\t\t(function repeat() {\n\t\t\t\tcircle\n\t\t\t\t\t.transition(\"outward\").duration(dur).delay(function(d,i) { return i*del; })\n\t\t\t\t\t\t.attr(\"cy\", function(d) { return xScale(Math.sin(d)); })\n\t\t\t\t\t\t.attr(\"cx\", function(d) { return xScale(Math.cos(d)); })\n\t\t\t\t\t.transition(\"inward\").duration(dur).delay(function(d,i) { return steps*del + i*del; })\n\t\t\t\t\t\t.attr(\"cx\", 0)\n\t\t\t\t\t\t.attr(\"cy\", 0)\n\t\t\t\t\t.call(endall, repeat);\t\t\t\n\t\t\t})();\n\t}//update\n\n\t//Taken from https://groups.google.com/forum/#!msg/d3-js/WC_7Xi6VV50/j1HK0vIWI-EJ\n\t//Calls a function only after the total transition ends\n\tfunction endall(transition, callback) { \n\t\tvar n = 0; \n\t\ttransition \n\t\t\t.each(function() { ++n; }) \n\t\t\t.each(\"end\", function() { if (!--n) callback.apply(this, arguments); }); \n\t}//endall\n\t\n\t</script>", "description": "Gooey Circle Effect with Colors", "created_at": "2016-06-03T21:18:36Z", "updated_at": "2016-06-09T07:43:48Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.select", "d3.range", "d3.selectAll"], "readme": "I was most fascinated by <a href='https://twitter.com/nadiehbremer'>Nadieh</a>'s gooey example from her OpenVis Conf talk, and especially with the gooey color blending.  After reading her <a href='http://www.visualcinnamon.com/2015/05/gooey-effect.html'>blog post</a>, I decided to give the circles some colors - and it turned out to be as straightforward as I was hoping for.\n\nThe only two things I had to change:\n\n- add a colorScale and replace the circles' fills with the colorScale outputs\n\n- remove feComposite from the filters (I'm looking into why this is)\n\n\nThank you Nadieh for your brilliance \ud83d\udc95\n\n\n--\n\nforked from <a href='http://bl.ocks.org/nbremer/'>nbremer</a>'s block: <a href='http://bl.ocks.org/nbremer/69808ec7ec07542ed7df'>Gooey Effect - Circle</a>", "uid": "sxywu_408b80e2e186c481b9ee99d86d116781"}, {"code": "<script>\n       var margin = { top: 30, left: 50, bottom: 30, right: 10 },\n           width = 960 - margin.left - margin.right,\n           height = 500 - margin.top - margin.bottom;\n       \n       var chartTypes = [\"Swarm\", \"Pile\", \"Histogram\", \"Boxplot\"];\n       \n       var chartScale = d3.scale.ordinal()\n            .domain(chartTypes)\n            .rangeRoundBands([0, width], .3),\n           barScale = d3.scale.linear()\n            .range([0, chartScale.rangeBand()]),\n           yScale = d3.scale.linear().range([height, 0]).nice();\n       \n       var xAxis = d3.svg.axis().scale(chartScale).orient(\"top\"),\n           yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n       \n       var swarmChart = d3.forceChart()\n        .padding(1)\n        .x(0)\n        .y(function(d) { return yScale(d.yVal); })\n        .r(1.5)\n        .xGravity(1/5)\n        .yGravity(100)\n        .draggable(false);\n        \n       var pileChart = d3.forceChart()\n        .padding(1)\n        .x(0)\n        .y(function(d) { return yScale(d.yVal); })\n        .r(1.5)\n        .xGravity(function(d) { return d.x <= 0 ? 400 : 1/2; })\n        .yGravity(100)\n        .draggable(false);\n       \n       var svg = d3.select(\"body\").append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n       \n       var data = d3.range(700)\n          .map(function(i) { return { yVal: d3.random.logNormal(1, 0.5)() }; });\n       \n       yScale.domain(d3.extent(data, function(d) { return d.yVal; }));\n       \n       // Draw axes\n       svg.append(\"g\").call(xAxis)\n        .attr(\"class\", \"x axis\");\n       svg.append(\"g\").call(yAxis)\n        .attr(\"class\", \"y axis\");\n       \n       // Draw swarm chart\n       svg.append(\"g\").call(swarmChart, _.cloneDeep(data))\n          .attr(\"class\", \"swarm\")\n          .attr(\"transform\", \"translate(\" + (chartScale(\"Swarm\")  + chartScale.rangeBand()/2) + \",0)\")\n        .selectAll(\".node\").append(\"circle\")\n          .attr(\"r\", function(d) { return d.r; });\n          \n       // Run for a bunch of ticks and freeze\n       swarmChart.force().stop().start();\n       for (var i = 0; i < 200; i++) { swarmChart.force().tick(); }\n       swarmChart.force().stop();\n       \n       // Draw pile chart\n       svg.append(\"g\").call(pileChart, _.cloneDeep(data))\n          .attr(\"class\", \"pile\")\n          .attr(\"transform\", \"translate(\" + chartScale(\"Pile\") + \",0)\")\n        .selectAll(\".node\").append(\"circle\")\n          .attr(\"r\", function(d) { return d.r; });\n          \n       // Run for a bunch of ticks and freeze\n       pileChart.force().stop().start();\n       for (var i = 0; i < 500; i++) { pileChart.force().tick(); }\n       pileChart.force().stop();\n       \n       // Draw histogram\n       svg.append(\"g\").call(histogram, data)\n        .attr(\"class\", \"histogram\")\n        .attr(\"transform\", \"translate(\" + chartScale(\"Histogram\") + \",0)\");\n       \n       // Draw boxplot\n       var boxWidth = 20;\n       svg.append(\"g\").call(boxplot, data, boxWidth)\n        .attr(\"class\", \"boxplot\")\n        .attr(\"transform\", \"translate(\" + (chartScale(\"Boxplot\") + chartScale.rangeBand()/2 - boxWidth/2) + \",0)\");\n        \n      function histogram(selection, data) {\n        \n        var bins = yScale.ticks(25);\n        \n        var binnedData = d3.layout.histogram()\n          .bins(bins)\n          .value(function(d) { return d.yVal; })\n          (data);\n        \n        barScale.domain([0, d3.max(binnedData, function(d) { return d.y; })]);\n        \n        var barHeight = yScale(bins[0]) - yScale(bins[1]),\n            barPadding = 2;\n        \n        selection.selectAll(\".bar\").data(binnedData)\n          .enter().append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"transform\", function(d) {\n              return \"translate(0,\" + yScale(d.x) + \")\"; \n            })\n            .attr(\"y\", barPadding - barHeight)\n            .attr(\"height\", barHeight - barPadding)\n            .attr(\"width\", function(d) { return barScale(d.y); });\n      }\n      \n      function boxplot(selection, data, boxWidth) {\n        \n        var quartiles = d3.scale.quantile()\n          .domain(data.map(function(d) { return d.yVal; }))\n          .range(d3.range(4))\n          .quantiles();\n        \n        var extent = d3.extent(data, function(d) { return d.yVal; });\n        \n        // Draw dashes\n        selection.append(\"path\").datum([\n            [boxWidth/2, yScale(extent[1])],\n            [boxWidth/2, yScale(extent[0])]\n          ])\n          .attr(\"d\", d3.svg.line())\n          .style(\"stroke\", \"black\")\n          .style(\"stroke-dasharray\", \"4, 10\");\n        \n        // Draw box\n        selection.append(\"rect\")\n          .attr(\"y\", yScale(quartiles[2]))\n          .attr(\"height\", yScale(quartiles[0]) - yScale(quartiles[2]))\n          .attr(\"width\", boxWidth)\n          .attr(\"fill\", \"white\")\n          .attr(\"stroke\", \"black\");\n        \n        // Draw lines\n        selection.selectAll(\"line\").data([extent[1], quartiles[1], extent[0]])\n          .enter().append(\"line\")\n            .attr(\"x2\", boxWidth)\n            .attr(\"y1\", function(d) { return yScale(d); })\n            .attr(\"y2\", function(d) { return yScale(d); })\n            .attr(\"stroke\", \"black\");\n        \n        \n      }\n     </script>", "description": "Visualizing Distributions", "created_at": "2016-06-03T12:15:17Z", "updated_at": "2016-06-03T12:15:18Z", "api": ["d3.layout.force", "d3.geom.quadtree", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.forceChart", "d3.select", "d3.range", "d3.random.logNormal", "d3.extent", "d3.layout.histogram", "d3.max", "d3.scale.quantile", "d3.svg.line"], "readme": "A few ways to visualize 1D distributions.\n\nSwarm and pile plots show all the data points but can't be used when\nthere are a lot of data points. Histograms and boxplots work for any number\nof data points since they are visualizing summary statistics. Histograms\nprovide more information than a boxplot. Boxplots fit in small spaces,\nmaking them nice for comparing many distributions side-by-side.\n\nOther chart types for 1D distributions:\n[violin plot](http://docs.ggplot2.org/current/geom_violin.html),\n[kernel density](http://docs.ggplot2.org/current/geom_density.html),\n[empirical CDF](http://docs.ggplot2.org/current/stat_ecdf.html).\n\nThe [d3.forceChart()](https://github.com/armollica/force-chart) plugin is used for the\nswarm and pile plots; [d3.layout.histogram()](https://github.com/mbostock/d3/wiki/Histogram-Layout#histogram)\nfor the histogram; [d3.scale.quantile()](https://github.com/mbostock/d3/wiki/Quantitative-Scales#quantile-scales)\nfor the quartile summary statistics used in the boxplot.\n\n\nforked from <a href='http://bl.ocks.org/armollica/'>armollica</a>'s block: <a href='http://bl.ocks.org/armollica/0f28622e38434b04907d768df6cec684'>Visualizing Distributions</a>", "uid": "fpcMotif_4db328750ceb1cc871872e27d11797f6"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\nvar color = d3.scale.linear().range(['orange', 'yellow']);\n\nvar start = Date.now(),\n    points = [];\n\nvar bounds = d3.geom.polygon([\n  [-width / 2, -height / 2],\n  [-width / 2, +height / 2],\n  [+width / 2, +height / 2],\n  [+width / 2, -height / 2]\n]);\n\ncircle(0, 0, 120, 96, -.001);\ncircle(0, 0, 30, 10, .03);\ncircle(0, 0, 60, 3, -.05);\ncircle(0, 0, 15, 4, -.02);\ncircle(0, 0, 0, 1, -.02);\n\ncircle(240, -120, 80, 4, -.02);\ncircle(240, -120, 0, 1, -.02);\n\ncircle(280, +120, 40, 8, .02);\ncircle(280, +120, 20, 8, -.02);\ncircle(280, +120, 0, 1, .02);\n\nvar line = d3.svg.line()\n    .interpolate(\"basis-closed\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + (width / 2) + \",\" + (height / 2) + \")\");\n\nvar path = svg.selectAll(\"path\")\n    .data(points)\n  .enter().append(\"path\");\n  path.attr('stroke', function(d){return d.c;})\n  path.attr('fill', function(d){return d.f;})\n\nd3.timer(function() {\n  var voronoi = d3.geom.voronoi(points).map(function(cell) { return bounds.clip(cell); });\n  path.attr(\"d\", function(point, i) { return line(resample(voronoi[i])); });\n});\n\n  \nfunction circle(cx, cy, r, n, ) {\n  d3.range(1e-6, 2 * Math.PI, 2 * Math.PI / n).map(function(, i) {\n    var point = [cx + Math.cos() * r, cy + Math.sin() * r];\n    d3.timer(function(elapsed) {\n      var angle =  +  * elapsed / 60;\n      point[0] = cx + Math.cos(angle) * r;\n      point[1] = cy + Math.sin(angle) * r;\n    }, 0, start);\n    point.c = color(Math.random());\n    point.f = color(Math.random());\n    points.push(point);\n    return point;\n  });\n}\n\nfunction resample(points) {\n  var i = -1,\n      n = points.length,\n      p0 = points[n - 1], x0 = p0[0], y0 = p0[1], p1, x1, y1,\n      points2 = [];\n  while (++i < n) {\n    p1 = points[i], x1 = p1[0], y1 = p1[1];\n    points2.push(\n      [(x0 * 2 + x1) / 3, (y0 * 2 + y1) / 3],\n      [(x0 + x1 * 2) / 3, (y0 + y1 * 2) / 3],\n      p1\n    );\n    p0 = p1, x0 = x1, y0 = y1;\n  }\n  return points2;\n}\n\n</script>", "description": "Rotating Voronoi in colors", "created_at": "2016-06-01T17:48:36Z", "updated_at": "2016-06-01T17:49:59Z", "api": ["d3.scale.linear", "d3.geom.polygon", "d3.svg.line", "d3.select", "d3.timer", "d3.geom.voronoi", "d3.range"], "readme": "[Mario Klingemann](http://mario-klingemann.tumblr.com/) has made some beautiful Voronoi diagrams. This is my attempt to recreate them using [D3](http://d3js.org). To achieve the curved cells, each side of the Voronoi polygon is subdivided into three equal-length segments and then joined using the \"basis-closed\" line interpolator. There are some discontinuities in the animation when the sides of a polygon approach zero which could likely be avoided by adding a minimum-length threshold to the subdivision.\n\nIf you\u2019d like to see other instances of this pattern, Mario [describes the algorithm](http://www.flickr.com/photos/quasimondo/8254540763/) on Flickr.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4636377'>Rotating Voronoi in colors</a>", "uid": "Fil_3172f279d3ba83303d61ae5964d48068"}, {"code": "<script>\n\n// get the data\nd3.csv(\"battles.csv\", function(error, links) {\n\nvar nodes = {};\n\n// Compute the distinct nodes from the links.\nlinks.forEach(function(link) {\n    link.source = nodes[link.source] ||\n        (nodes[link.source] = {name: link.source});\n    link.target = nodes[link.target] ||\n        (nodes[link.target] = {name: link.target});\n    link.value = +link.value;\n});\n\n//setup our window\nvar width = window.innerWidth*0.8,\n    height = window.innerHeight*0.8;\n\n//build the layout\nvar force = d3.layout.force()\n    .nodes(d3.values(nodes))\n    .links(links)\n    .size([width, height])\n    .linkDistance(100)\n    .charge(-1800)\n    .on(\"tick\", tick)\n    .start();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n    \n//add hovercard\nvar hovercard = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0)\n    .style(\"width\",400);\n\n// build the arrow.\nsvg.append(\"svg:defs\").selectAll(\"marker\")\n    .data([\"end\"])      // Different link/path types can be defined here\n  .enter().append(\"svg:marker\")    // This section adds in the arrows\n    .attr(\"id\", String)\n    .attr(\"viewBox\", \"0 -5 10 10\")\n    .attr(\"refX\", 25)\n    .attr(\"refY\", -1.5) \n    .attr(\"markerWidth\", 6)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\")\n    .attr(\"fill\", \"#404040\")\n  .append(\"svg:path\")\n    .attr(\"d\", \"M0,-5L10,0L0,5\");\n\n// add the links and the arrows\nvar path = svg.append(\"svg:g\").selectAll(\"path\")\n    .data(force.links())\n  .enter().append(\"svg:path\")\n    .attr(\"class\", function(d) { return \"link \" + d.type; })\n    .attr(\"class\", \"link\")\n    .attr(\"marker-end\", \"url(#end)\");\n\n// define the nodes\nvar node = svg.selectAll(\".node\")\n    .data(force.nodes())\n  .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .call(force.drag);\n\n// add the nodes matching the images\n// node.append(\"circle\")\n//     .attr(\"r\", 25)\nnode.append(\"image\")\n        .attr(\"xlink:href\", function(d) {  return \"https://raw.githubusercontent.com/bsullins/got-images/master/img/\"+encodeURI(d.name).toLowerCase().replace(/'/g, '')+\".png\"; })\n        .attr(\"x\", function(d) { return -25;})\n        .attr(\"y\", function(d) { return -25;})\n        .attr(\"height\", 50)\n        .attr(\"width\", 50);\n\n\n// add the text\nnode.append(\"text\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dy\", \".35em\")\n    .attr(\"y\",-32)\n    .text(function(d) { return d.name; });\n\n// add the curvy lines\nfunction tick() {\n\n    \n    path.attr(\"d\", function(d, i) {\n        \n        var dx = d.target.x - d.source.x + (i*10), //separate the lines\n            dy = d.target.y - d.source.y + (i*10),\n            dr = Math.sqrt(dx * dx + dy * dy);\n        return \"M\" +\n            d.source.x + \",\" +\n            d.source.y + \"A\" +\n            dr + \",\" + dr + \" 0 0,1 \" +\n            d.target.x + \",\" +\n            d.target.y;\n    });\n    \n    path.attr(\"class\", function(d) { return \"link \"+ d.attacker_outcome});\n    \n    path.on(\"mouseover\", function(d) {\n        \n        \n           hovercard.transition()\n    \t            .duration(500)\n    \t            .style(\"opacity\", 1);\n    \n    \t        var tip = \n    \t            \"<h2>\" + d.name + \"</h2>\" + \n    \t            \"<h4> \" +d.source.name + \" attacked \" + d.target.name + \" and the outcome was a \" + d.attacker_outcome + \"</h4>\" +\n    \t            \"<h3>Details</h3>\" +\n    \t            \"<strong> Attacker King: </strong>\" + d.attacker_king + \"<br/>\" +\n    \t            \"<strong> Battle Type: </strong>\" + d.battle_type + \"<br/>\" +\n    \t            \"<strong> Major Death?: </strong>\" + d.major_death + \"<br/>\" +\n    \t            \"<strong> Major Capture?: </strong>\" + d.major_capture + \"<br/>\" +\n    \t            \"<strong> Attacker Size: </strong>\" + d.value + \"<br/>\" +\n    \t            \"<strong> Defender Size: </strong>\" + d.defender_size + \"<br/>\" +\n    \t            \"<strong> Region / Location: </strong>\" + d.region + \" / \" + d.location + \"<br/>\" +\n    \t            \"<strong> Attacking Commander: </strong>\" + d.attacker_commander + \"<br/>\" +\n    \t            \"<strong> Defending Commander: </strong>\" + d.defender_commander;\n    \t            \n    \t     \n    \t        hovercard.html(tip)\n    \t            .style(\"left\", (d3.event.pageX) + \"px\")\n    \t            .style(\"top\", (d3.event.pageY) + \"px\");\n        \n    });\n    \n    path.on(\"mouseout\", function(d) {\n\n\t        hovercard.transition()\n\t            .duration(500)\n\t            .style(\"opacity\", 0);\n    });\n    \n    node\n        .attr(\"transform\", function(d) {\n  \t    return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n  \t    \n  \t\n}\n\n});\n\n</script>", "description": "Game of Thrones Battles in D3", "created_at": "2016-05-31T21:01:49Z", "updated_at": "2016-05-31T21:44:22Z", "api": ["d3.csv", "d3.layout.force", "d3.values", "d3.select"], "readme": "#Game of Thrones Battles\n\nThis was made using D3.js and the Chris Albon's \"The War of the Five Kings\" Dataset, which can be found here: https://github.com/chrisalbon/war_of_the_five_kings_dataset.\n\nFind more on my site [bensullins.com](http://bensullins.com)\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n", "uid": "bsullins_faf637290007a08703b11af8a22f1781"}, {"code": "<script>\n\n// get the data\nd3.csv(\"battles.csv\", function(error, links) {\n\nvar nodes = {};\n\n// Compute the distinct nodes from the links.\nlinks.forEach(function(link) {\n    link.source = nodes[link.source] ||\n        (nodes[link.source] = {name: link.source});\n    link.target = nodes[link.target] ||\n        (nodes[link.target] = {name: link.target});\n    link.value = +link.value;\n});\n\n//setup our window\nvar width = window.innerWidth*0.95,\n    height = window.innerHeight*0.95;\n\n//build the layout\nvar force = d3.layout.force()\n    .nodes(d3.values(nodes))\n    .links(links)\n    .size([width, height])\n    .linkDistance(100)\n    .charge(-1800)\n    .on(\"tick\", tick)\n    .start();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n    \n//add hovercard\nvar hovercard = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0)\n    .style(\"width\",600);\n\n// build the arrow.\nsvg.append(\"svg:defs\").selectAll(\"marker\")\n    .data([\"end\"])      // Different link/path types can be defined here\n  .enter().append(\"svg:marker\")    // This section adds in the arrows\n    .attr(\"id\", String)\n    .attr(\"viewBox\", \"0 -5 10 10\")\n    .attr(\"refX\", 25)\n    .attr(\"refY\", -1.5) \n    .attr(\"markerWidth\", 6)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\")\n    .attr(\"fill\", \"#404040\")\n  .append(\"svg:path\")\n    .attr(\"d\", \"M0,-5L10,0L0,5\");\n\n// add the links and the arrows\nvar path = svg.append(\"svg:g\").selectAll(\"path\")\n    .data(force.links())\n  .enter().append(\"svg:path\")\n    .attr(\"class\", function(d) { return \"link \" + d.type; })\n    .attr(\"class\", \"link\")\n    .attr(\"marker-end\", \"url(#end)\");\n\n// define the nodes\nvar node = svg.selectAll(\".node\")\n    .data(force.nodes())\n  .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .call(force.drag);\n\n// add the nodes matching the images\n// node.append(\"circle\")\n//     .attr(\"r\", 25)\nnode.append(\"image\")\n        .attr(\"xlink:href\", function(d) {  return \"img/\"+d.name.toLowerCase()+\".png\"; })\n        .attr(\"x\", function(d) { return -25;})\n        .attr(\"y\", function(d) { return -25;})\n        .attr(\"height\", 50)\n        .attr(\"width\", 50);\n\n\n// add the text\nnode.append(\"text\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dy\", \".35em\")\n    .attr(\"y\",-32)\n    .text(function(d) { return d.name; });\n\n// add the curvy lines\nfunction tick() {\n\n    \n    path.attr(\"d\", function(d, i) {\n        \n        var dx = d.target.x - d.source.x + (i*10), //separate the lines\n            dy = d.target.y - d.source.y + (i*10),\n            dr = Math.sqrt(dx * dx + dy * dy);\n        return \"M\" +\n            d.source.x + \",\" +\n            d.source.y + \"A\" +\n            dr + \",\" + dr + \" 0 0,1 \" +\n            d.target.x + \",\" +\n            d.target.y;\n    });\n    \n    path.attr(\"class\", function(d) { return \"link \"+ d.attacker_outcome});\n    \n    path.on(\"mouseover\", function(d) {\n        \n        \n           hovercard.transition()\n    \t            .duration(500)\n    \t            .style(\"opacity\", 1);\n    \n    \t        var tip = \n    \t            \"<h2>\" + d.name + \"</h2>\" + \n    \t            \"<h4> \" +d.source.name + \" attacked \" + d.target.name + \" and the outcome was a \" + d.attacker_outcome + \"</h4>\" +\n    \t            \"<h3>Details</h3>\" +\n    \t            \"<strong> Attacker King: </strong>\" + d.attacker_king + \"<br/>\" +\n    \t            \"<strong> Battle Type: </strong>\" + d.battle_type + \"<br/>\" +\n    \t            \"<strong> Major Death?: </strong>\" + d.major_death + \"<br/>\" +\n    \t            \"<strong> Major Capture?: </strong>\" + d.major_capture + \"<br/>\" +\n    \t            \"<strong> Attacker Size: </strong>\" + d.value + \"<br/>\" +\n    \t            \"<strong> Defender Size: </strong>\" + d.defender_size + \"<br/>\" +\n    \t            \"<strong> Region / Location: </strong>\" + d.region + \" / \" + d.location + \"<br/>\" +\n    \t            \"<strong> Attacking Commander: </strong>\" + d.attacker_commander + \"<br/>\" +\n    \t            \"<strong> Defending Commander: </strong>\" + d.defender_commander;\n    \t            \n    \t     \n    \t        hovercard.html(tip)\n    \t            .style(\"left\", (d3.event.pageX) + \"px\")\n    \t            .style(\"top\", (d3.event.pageY) + \"px\");\n        \n    });\n    \n    path.on(\"mouseout\", function(d) {\n\n\t        hovercard.transition()\n\t            .duration(500)\n\t            .style(\"opacity\", 0);\n    });\n    \n    node\n        .attr(\"transform\", function(d) {\n  \t    return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n  \t    \n  \t\n}\n\n});\n\n</script>", "description": "Game of Thrones Battle Map", "created_at": "2016-05-31T19:55:54Z", "updated_at": "2016-05-31T19:55:56Z", "api": ["d3.csv", "d3.layout.force", "d3.values", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "bsullins_61e0ceb0326b1af57f6c54c48340a473"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\nd3.json(\"cnmv.json\", function(error, graph) {\n  if (error) throw error;\n  \n  graph.links.forEach(function(d){\n    d.source = d.source_id;    \n    d.target = d.target_id;\n  });           \n\n  var link = svg.append(\"g\")\n      .attr(\"class\", \"links\")\n    .selectAll(\"line\")\n    .data(graph.links)\n    .enter().append(\"line\");\n\n  var node = svg.append(\"g\")\n      .attr(\"class\", \"nodes\")\n    .selectAll(\"circle\")\n    .data(graph.nodes)\n    .enter().append(\"circle\")\n      .attr(\"r\", 5)\n      .call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  node.append(\"title\")\n      .text(function(d) { return d.id; });\n\n  simulation\n      .nodes(graph.nodes)\n      .on(\"tick\", ticked);\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  function ticked() {\n    link\n        .attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\n    node\n        .attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; });\n  }\n});\n\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart()\n  simulation.fix(d);\n}\n\nfunction dragged(d) {\n  simulation.fix(d, d3.event.x, d3.event.y);\n}\n\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  simulation.unfix(d);\n}\n\n</script>", "description": "Force Layout SVG", "created_at": "2016-05-27T15:53:12Z", "updated_at": "2016-05-27T15:53:12Z", "api": ["d3.select", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceCenter", "d3.json", "d3.drag"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/rauldiazpoblete/'>rauldiazpoblete</a>'s block: <a href='http://bl.ocks.org/rauldiazpoblete/0c622039ac9278f6daf82cfb016045f5'>Force Layout SVG</a>\n\nforked from <a href='http://bl.ocks.org/rauldiazpoblete/'>rauldiazpoblete</a>'s block: <a href='http://bl.ocks.org/rauldiazpoblete/7f61b1560da65f84135cb2f0f49fdcc4'>Force Layout SVG</a>", "uid": "rauldiazpoblete_bee7ab77e407c843a21fe0dde213789a"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\nd3.json(\"miserables.json\", function(error, graph) {\n  if (error) throw error;\n\n  var link = svg.append(\"g\")\n      .attr(\"class\", \"links\")\n    .selectAll(\"line\")\n    .data(graph.links)\n    .enter().append(\"line\");\n\n  var node = svg.append(\"g\")\n      .attr(\"class\", \"nodes\")\n    .selectAll(\"circle\")\n    .data(graph.nodes)\n    .enter().append(\"circle\")\n      .attr(\"r\", 2.5)\n      .call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  node.append(\"title\")\n      .text(function(d) { return d.id; });\n\n  simulation\n      .nodes(graph.nodes)\n      .on(\"tick\", ticked);\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  function ticked() {\n    link\n        .attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\n    node\n        .attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; });\n  }\n});\n\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart()\n  simulation.fix(d);\n}\n\nfunction dragged(d) {\n  simulation.fix(d, d3.event.x, d3.event.y);\n}\n\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  simulation.unfix(d);\n}\n\n</script>", "description": "Force Layout SVG", "created_at": "2016-05-27T15:33:11Z", "updated_at": "2016-05-27T15:33:11Z", "api": ["d3.select", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceCenter", "d3.json", "d3.drag"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "rauldiazpoblete_0c622039ac9278f6daf82cfb016045f5"}, {"code": "<script>\n\nvar svg = d3.select(\"body\")\n\t.append(\"svg\")\n\t.append(\"g\")\n\nsvg.append(\"g\")\n\t.attr(\"class\", \"labels\");\nsvg.append(\"g\")\n\t.attr(\"class\", \"lines\");\nsvg.append(\"g\")\n\t.attr(\"class\", \"slices\");\n\nvar width = 960,\n    height = 450,\n\tradius = Math.min(width, height) / 2;\n\nvar pie = d3.layout.pie()\n\t.sort(null)\n\t.value(function(d) {\n\t\treturn d.value;\n\t});\n\nvar arc = d3.svg.arc()\n\t.outerRadius(radius * 0.8)\n\t.innerRadius(radius * 0.4);\n\nvar outerArc = d3.svg.arc()\n\t.innerRadius(radius * 0.9)\n\t.outerRadius(radius * 0.9);\n\nsvg.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nvar key = function(d){ return d.data.label; };\n\nvar color = d3.scale.ordinal()\n\t.domain([\"Lorem ipsum\", \"dolor sit\", \"amet\", \"consectetur\", \"adipisicing\", \"elit\", \"sed\", \"do\", \"eiusmod\", \"tempor\", \"incididunt\"])\n\t.range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nfunction randomData (){\n\tvar labels = color.domain();\n\treturn labels.map(function(label){\n\t\treturn { label: label, value: Math.random() }\n\t});\n}\n\nchange(randomData());\n\nd3.select(\".randomize\")\n\t.on(\"click\", function(){\n\t\tchange(randomData());\n\t});\n\n\nfunction change(data) {\n\n\t/* ------- PIE SLICES -------*/\n\tvar slice = svg.select(\".slices\").selectAll(\"path.slice\")\n\t\t.data(pie(data), key);\n\n\tslice.enter()\n\t\t.insert(\"path\")\n\t\t.style(\"fill\", function(d) { return color(d.data.label); })\n\t\t.attr(\"class\", \"slice\");\n\n\tslice\t\t\n\t\t.transition().duration(1000)\n\t\t.attrTween(\"d\", function(d) {\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\treturn arc(interpolate(t));\n\t\t\t};\n\t\t})\n\n\tslice.exit()\n\t\t.remove();\n\n\t/* ------- TEXT LABELS -------*/\n\n\tvar text = svg.select(\".labels\").selectAll(\"text\")\n\t\t.data(pie(data), key);\n\n\ttext.enter()\n\t\t.append(\"text\")\n\t\t.attr(\"dy\", \".35em\")\n\t\t.text(function(d) {\n\t\t\treturn d.data.label;\n\t\t});\n\t\n\tfunction midAngle(d){\n\t\treturn d.startAngle + (d.endAngle - d.startAngle)/2;\n\t}\n\n\ttext.transition().duration(1000)\n\t\t.attrTween(\"transform\", function(d) {\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\tvar pos = outerArc.centroid(d2);\n\t\t\t\tpos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n\t\t\t\treturn \"translate(\"+ pos +\")\";\n\t\t\t};\n\t\t})\n\t\t.styleTween(\"text-anchor\", function(d){\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\treturn midAngle(d2) < Math.PI ? \"start\":\"end\";\n\t\t\t};\n\t\t});\n\n\ttext.exit()\n\t\t.remove();\n\n\t/* ------- SLICE TO TEXT POLYLINES -------*/\n\n\tvar polyline = svg.select(\".lines\").selectAll(\"polyline\")\n\t\t.data(pie(data), key);\n\t\n\tpolyline.enter()\n\t\t.append(\"polyline\");\n\n\tpolyline.transition().duration(1000)\n\t\t.attrTween(\"points\", function(d){\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\tvar pos = outerArc.centroid(d2);\n\t\t\t\tpos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n\t\t\t\treturn [arc.centroid(d2), outerArc.centroid(d2), pos];\n\t\t\t};\t\t\t\n\t\t});\n\t\n\tpolyline.exit()\n\t\t.remove();\n};\n\n</script>", "description": "Pie charts labels", "created_at": "2016-05-25T09:50:15Z", "updated_at": "2016-05-25T10:02:30Z", "api": ["d3.select", "d3.layout.pie", "d3.svg.arc", "d3.scale.ordinal", "d3.interpolate"], "readme": "This variation of a donut chart demonstrates how to add labels with lines. Clicking on the button changes the displayed data.\nCheck [Pie Chart with Labels and Missing Data](http://bl.ocks.org/dbuezas/9572040) to see how to handle transitions with missing/new data.\n\n\n\nforked from <a href='http://bl.ocks.org/dbuezas/'>dbuezas</a>'s block: <a href='http://bl.ocks.org/dbuezas/9306799'>Pie charts labels</a>", "uid": "altocumulus_5adf28e7b13447b8a1e309ed98fcb07a"}, {"code": "<script>\n\n\t\t///////////////////////////////////////////////////\n\t\t//////////////// Set the Scales ///////////////////\n\t\t///////////////////////////////////////////////////\n\n\t\t//Set the dimensions of the chart\n\t\tvar margin = {top: 0, right: 0, bottom: 0, left: 0},\n\t\t    width = window.innerWidth - margin.left - margin.right - 20,\n\t\t    height = window.innerHeight - margin.top - margin.bottom - 20;\n\t\t\n\t\tvar maxWindowSize = Math.min(width, height);\n\t\t\n\t\twidth = maxWindowSize;\n\t\theight = maxWindowSize;\n\t\t\n\t\t//Set the minimum inner radius and max outer radius of the chart\n\t\tvar innerRadius = maxWindowSize*0.18,\n\t\t\touterRadius = maxWindowSize*0.4;\n\n\t\t///////////////////////////////////////////////////\n\t\t////////////// Initialize the SVG /////////////////\n\t\t///////////////////////////////////////////////////\n\t      \n\t\t//Add the svg canvas for the line chart\n\t\tvar svg = d3.select(\"#chart\")\n\t\t    .append(\"svg\")\n\t\t        .attr(\"width\", width + margin.left + margin.right)\n\t\t        .attr(\"height\", height + margin.top + margin.bottom)\n\t\t    .append(\"g\")\n\t\t        .attr(\"transform\", \"translate(\" + (margin.left + width/2) + \",\" + (margin.top + height/2) + \")\");\n\t\n\t\t///////////////////////////////////////////////////\n\t\t///////////// Create the gradient ////////////////\n\t\t///////////////////////////////////////////////////\n\t\n\t\tvar numColors = 10;\n\t\tvar colorScale = d3.scale.linear()\n\t\t   .domain([0,(numColors-1)/2,numColors-1])\n\t\t   .range([\"#2c7bb6\", \"#ffff8c\", \"#d7191c\"])\n\t\t   .interpolate(d3.interpolateHcl);\n\n\t\tsvg.append(\"defs\").append(\"radialGradient\")\n\t\t\t.attr(\"id\", \"gradientRainbow\")\n\t\t\t.attr(\"gradientUnits\", \"userSpaceOnUse\") \n\t\t\t.attr(\"cx\", \"0%\")\n\t\t\t.attr(\"cy\", \"0%\")\n\t\t\t.attr(\"r\", \"45%\")\n\t\t\t.selectAll(\"stop\") \n\t\t\t.data(d3.range(numColors))                  \n\t\t\t.enter().append(\"stop\") \n\t\t\t.attr(\"offset\", function(d,i) { return (i/(numColors-1)*50 + 40) + \"%\"; })   \n\t\t\t.attr(\"stop-color\", function(d) { return colorScale(d); });\n\t\t\t\n\t\t///////////////////////////////////////////////////\n\t\t///////////////// Create the data /////////////////\n\t\t///////////////////////////////////////////////////\n\n\t\n\t\tfunction getRandomNumber(start, end) {\n\t\t    return (Math.random() * (end-start) * 100)/100 + start;\n\t\t}//function getRandomNumber\n\n\t\t//http://jsfiddle.net/guffa/tvt5k/\n\t\tfunction rnd2() {\n\t\t    return ((Math.random() + Math.random() + Math.random() + Math.random()) - 2) / 2;\n\t\t}\n\t\t\n\t\t//Adjust circle sizes to browser size\n\t\tvar circleRanges = [20*maxWindowSize/1000, 6*maxWindowSize/1000];\n\t\n\t\t//Create random dataset\n\t\tvar dataset = [];\n\t\tfor(var i = 0; i < 2000; i++) {\n\t\t\tvar outward = Math.abs(rnd2()) * (outerRadius * 0.8) + innerRadius; //getRandomNumber(innerRadius, outerRadius),\n\t\t\tvar radius = Math.abs(rnd2() * circleRanges[0] + circleRanges[1]); //getRandomNumber(1, 18);\n\t\n\t\t\tif( outward - radius < innerRadius ) {\n\t\t\t\toutward = innerRadius + radius;\n\t\t\t}\n\t\t\tdataset.push({\n\t\t\t\toutward: outward, \n\t\t\t\ttheta: getRandomNumber(1, 360) * Math.PI / 180,\n\t\t\t\tradius: radius,\n\t\t\t})\t\n\t\t}//for i\n\n\t\t///////////////////////////////////////////////////\n\t\t/////////// Plot the lines and circles ////////////\n\t\t///////////////////////////////////////////////////\n\t\t\n\t\t//Append the lines radiating outward\n\t\tvar lineWrapper = svg.append(\"g\").attr(\"class\", \"lineWrapper\");\n\n\t\tlineWrapper.selectAll(\".lines\")\n\t\t\t\t.data(d3.range(1,80))\n\t\t\t \t.enter().append(\"line\")\n\t\t\t \t.attr(\"class\", \"lines\")\n\t\t\t\t.attr(\"transform\", function(d,i) { return \"rotate(\" + ( getRandomNumber(1, 360) ) + \")\"; })\n\t\t\t \t.attr(\"x1\", 0)\n\t\t\t\t.attr(\"y1\", function(d) { return getRandomNumber(innerRadius, outerRadius*1.3);  })\n\t\t\t \t.attr(\"x2\", 0)\n\t\t\t\t.attr(\"y2\", function(d) { return getRandomNumber(innerRadius, outerRadius*1.3);  })\n\t\t\t\t.style(\"stroke\", \"url(#gradientRainbow)\")\n\t\t\t\t.style(\"stroke-width\", function(d) { return getRandomNumber(0.5, 3);  })\n\t\t\t\t.style(\"opacity\", function(d) { return getRandomNumber(0.2, 0.7);  });\n\t\t\n\t\t//Append the circles\n\t\tvar circleWrapper = svg.append(\"g\").attr(\"class\", \"circleWrapper\");\n\n\t\tcircleWrapper.selectAll(\".dots\")\n\t\t\t \t.data(dataset)\n\t\t\t \t.enter().append(\"circle\")\n\t\t\t \t.attr(\"class\", \"dots\")\n\t\t\t \t.attr(\"cx\", function(d) { return d.outward * Math.cos(d.theta); })\n\t\t\t\t.attr(\"cy\", function(d) { return d.outward * Math.sin(d.theta);  })\n\t\t\t\t.attr(\"r\", function(d) { return d.radius; })\n\t\t\t \t.style(\"fill\", \"url(#gradientRainbow)\")\n\t\t\t\t.style(\"opacity\", function(d) { return getRandomNumber(0.2, 0.7);  });\n\t\t\n\t</script>", "description": "Radial SVG gradient - Random bubble art", "created_at": "2016-05-23T20:56:24Z", "updated_at": "2016-06-12T08:36:39Z", "api": ["d3.select", "d3.scale.linear", "d3.range"], "readme": "I used this example to get the opening image for the [.net magazine tutorial that I wrote](http://www.creativebloq.com/netmag/master-devtools-new-issue-net-41620024) about using SVG gradients in d3.js based data visualizations. All the data is generated randomly so you will see a new visual of circles and lines on each refresh.\n\nIt was just something to look nice, uses the idea of the tutorial itself and catch the eye of the reader :)\n\nOpen in a new window to see it full size\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "nbremer_4b81aff1ff5907ac3db1780a1c6a5e01"}, {"code": "<script>\n  \n// After position the annotation, run `copy(annotations)` in the browser's\n// console and paste over this array:\nvar annotations = [\n  {\n    \"cx\": 625,\n    \"cy\": 111,\n    \"r\": 109,\n    \"text\": \"The longer Old Faithful lays dormant, the longer the eruption last\",\n    \"textWidth\": 140,\n    \"textOffset\": [\n      121,\n      186\n    ]\n  }\n];\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = function(d) { return d.waiting; },\n    y = function(d) { return d.eruptions; }\n\nvar xScale = d3.scale.linear().range([0, width]),\n    yScale = d3.scale.linear().range([height, 0]);\n\nvar xValue = function(d) { return xScale(x(d)); },\n    yValue = function(d) { return yScale(y(d)); };\n\nvar xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\"),\n    yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar ringNote = d3.ringNote()\n  .draggable(true);\n\nd3.json(\"faithful.json\", function(error, data) {\n  if (error) throw error;\n  \n  xScale.domain(d3.extent(data, x));\n  yScale.domain(d3.extent(data, y));\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Time Between Eruptions (minutes)\");\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Eruption Duration (minutes)\");\n   \n   svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3)\n      .attr(\"cx\", xValue)\n      .attr(\"cy\", yValue);\n      \n   svg.append(\"g\")\n     .attr(\"class\", \"annotations\")\n     .call(ringNote, annotations);\n});\n\n</script>", "description": "Chart Annotation", "created_at": "2016-05-21T21:54:53Z", "updated_at": "2016-05-24T23:52:25Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.select", "d3.ringNote", "d3.json", "d3.extent", "d3.behavior.drag", "d3.svg.line"], "readme": "Example using the [d3.ringNote](https://github.com/armollica/d3-ring-note)\nplugin to add circle annotations to a chart. Drag the dashed circles and \nthe text to move the annotation elements. These moveable, \ndashed-line circles will disappear if `ringNote.draggable(false)` is called.\n\nThe chart shows the eruption duration and waiting time between eruptions\nfor the Old Faithful geyser in Yellowstone National Park. This is\nfrom the [`datasets`](https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/faithful.html)\nR package. ", "uid": "armollica_853c9344a7808619d863c8d7410062e6"}, {"code": "<script>\n\nvar margin = {top: 20, right: 70, bottom: 30, left: 40},\n    width = window.innerWidth - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .rangeRound([height, 0]);\n\nvar color = d3.scale.ordinal()\n    .domain(['CHI','CHV','COL','CLB','DAL','DCU','HOU','LA','MIA','MON','NE','NYC','NYRB','OC','PHI','POR','RSL','SJ','SEA','KC','TB','TOR','VAN'])\n     .range(['red','Gainsboro','DarkRed','yellow','red','black','orange','LightSeaGreen','Gainsboro','blue','navy','skyblue','red','purple','DarkGoldenRod','darkgreen','DarkRed','blue','LimeGreen','skyblue','Gainsboro','red','navy']);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(d3.format(\".2s\"));\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"mls.csv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"Season\"; }));\n\n\n\n  data.forEach(function(d) {\n    var y0 = 0;\n    d.club = color.domain().map(function(name) { return {name: name, y0: y0, y1: y0 += +d[name]}; });\n    d.total = d.club[d.club.length - 1].y1;\n  });\n\n  console.log(data);\n\n  // data.sort(function(a, b) { return b.total - a.total; });\n\n  x.domain(data.map(function(d) { return d.Season; }));\n  y.domain([0, d3.max(data, function(d) { return d.total; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n  var Season = svg.selectAll(\".Season\")\n      .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"g\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.Season) + \",0)\"; });\n\n  Season.selectAll(\"rect\")\n      .data(function(d) { return d.club; })\n    .enter().append(\"rect\")\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.y1); })\n      .attr(\"height\", function(d) { return y(d.y0) - y(d.y1); })\n      .attr(\"data-club\", function(d) {return d.name;})\n      .style(\"fill\", function(d) { return color(d.name); })\n      .on(\"mouseover\", function(d, i) {console.log(d);\n        svg.selectAll(\"rect\").style(\"opacity\", \"0.2\");\n        svg.selectAll(\"[data-club=\" + d.name + \"]\").style(\"opacity\", \"1\");\n      })\n      .on(\"mouseout\", function(d, i) {\n        svg.selectAll(\"rect\").style(\"opacity\", \"1\");\n      });;\n\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(50,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .attr(\"data-club\", function(d) {return d;})\n      .style(\"fill\", color)\n      .on(\"mouseover\", function(d, i) {console.log(d);\n        svg.selectAll(\"rect\").style(\"opacity\", \"0.2\");\n        svg.selectAll(\"[data-club=\" + d + \"]\").style(\"opacity\", \"1\");\n      })\n      .on(\"mouseout\", function(d, i) {\n        svg.selectAll(\"rect\").style(\"opacity\", \"1\");\n      });\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\n</script>", "description": "Major League Soccer attendance history", "created_at": "2016-05-19T20:58:59Z", "updated_at": "2016-05-19T21:02:36Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max"], "readme": "The complete history of regular season Major League Soccer attendance. Toronto FC kinda saved the league's bacon huh?\n\nClubs that no longer exist are colored in light gray. I am counting both instances of the San Jose Earthquakes as a single club, with a gap in the data in 2006 and 2007 to account for the years in between the original Earthquakes (who moved to become Houston Dynamo in 2006) and the new expansion Earthquakes who began in 2008.\n\nCurrent up to the 2015 season, updated on 18 May 2016.\n\nCredits: this code was adapted from [Mike Bostock's stacked bar chart](https://bl.ocks.org/mbostock/3886208). The data is from [Wikipedia](https://en.wikipedia.org/wiki/Major_League_Soccer_attendance). The font is [Roboto Mono](https://www.google.com/fonts/specimen/Roboto+Mono).", "uid": "tylermachado_e24468e796146142d0d50c2136b184f3"}, {"code": "<script>\n\n// Based on http://stackoverflow.com/a/12037737\nfunction outerTangent(x1, y1, r1, x2, y2, r2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var dist = Math.sqrt(dx*dx + dy*dy);\n\n  if (dist <= Math.abs(r2-r1)) return;   // no valid tangents\n\n  // Rotation from x-axis\n  var angle1 = Math.atan2(dy,dx);\n  var angle2 = Math.acos((r1 - r2)/dist);\n\n  return [\n    [\n      [x1 + r1 * Math.cos(angle1 + angle2), y1 + r1 * Math.sin(angle1 + angle2)],\n      [x2 + r2 * Math.cos(angle1 + angle2), y2 + r2 * Math.sin(angle1 + angle2)]\n    ],\n    [\n      [x1 + r1 * Math.cos(angle1 - angle2), y1 + r1 * Math.sin(angle1 - angle2)],\n      [x2 + r2 * Math.cos(angle1 - angle2), y2 + r2 * Math.sin(angle1 - angle2)]\n    ]\n  ];\n}\n\nvar c1 = {x: 180, y: 150, r: 10},\n    c2 = {x: 500, y: 200, r: 120};\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"svg\");\n\nvar circle = svg.selectAll(\".circle\")\n    .data([c1, c2])\n  .enter().append(\"g\")\n    .attr(\"class\", \"circle\")\n    .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n        .origin(function(d) { return d; })\n        .on(\"dragstart\", dragstarted)\n        .on(\"drag\", dragged));\n\ncircle.append(\"circle\")\n    .attr(\"r\", function(d) { return d.r; });\n\nvar tangent = svg.selectAll(\".line\")\n    .data([\n      function() { return outerTangent(c1.x, c1.y, +c1.r, c2.x, c2.y, +c2.r); },\n    ])\n  .enter().insert(\"g\", \".line\")\n    .attr(\"class\", \"line\")\n    .style(\"stroke\", function(d, i) { return color(i); });\n\ntangent.append(\"line\")\n    .attr(\"class\", \"line-1\");\n\ntangent.append(\"line\")\n    .attr(\"class\", \"line-2\");\n\nupdate();\n\nfunction dragstarted(d) {\n  this.parentNode.appendChild(this);\n}\n\nfunction dragged(d) {\n  d3.select(this).attr(\"transform\", \"translate(\" + (d.x = d3.event.x) + \",\" + (d.y = d3.event.y) + \")\");\n  update();\n}\n\nfunction update() {\n  tangent.each(function(f) {\n    var c = f();\n    if (c) {\n      d3.select(this).style(\"display\", null);\n      tangent.select(\".line-1\")\n        .attr(\"x1\", c[0][0][0])\n        .attr(\"x2\", c[0][1][0])\n        .attr(\"y1\", c[0][0][1])\n        .attr(\"y2\", c[0][1][1]);\n      tangent.select(\".line-2\")\n        .attr(\"x1\", c[1][0][0])\n        .attr(\"x2\", c[1][1][0])\n        .attr(\"y1\", c[1][0][1])\n        .attr(\"y2\", c[1][1][1]);\n    } else {\n      d3.select(this).style(\"display\", \"none\");\n    }\n  });\n}\n\n</script>", "description": "Outer Tangent", "created_at": "2016-05-18T19:34:16Z", "updated_at": "2016-06-11T19:12:02Z", "api": ["d3.scale.category10", "d3.select", "d3.behavior.drag"], "readme": "Calculating the outer tangent of two circles using this [solution on Stackoverflow](http://stackoverflow.com/a/12037737) by Markus Jarderot.\n", "uid": "syntagmatic_be8287ae3724e0c83c31273b20710496"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart", "created_at": "2016-05-17T22:33:16Z", "updated_at": "2016-05-17T22:33:16Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/e43d229aa7e3ed8aec42025d83bbbbf4'>Bar Chart</a>", "uid": "ntwieneke_0e22b7cc5b940a4df2ffdd0cc5567189"}, {"code": "<script>\n      //JS to go here\n      d3.csv(\"barley-yields.csv\", function(error, data) {\n        data.forEach(function(d) {\n          d.year = +d.year;\n          d.yield = +d.yield;\n        });\n\n        var margin = {top: 20, right: 20, bottom: 50, left: 50},\n            width = 960 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        var svg = d3.select(\"#viz\")\n                      .append(\"svg\")\n                      .attr({\n                        width: width + margin.left + margin.right,\n                        height: height + margin.top + margin.bottom\n                      })\n                      .append(\"g\")\n                      .attr(\"transform\", \"translate(\" + [margin.left, margin.top] + \")\");\n\n        var xScale = d3.scale.ordinal()\n                        .rangeRoundBands([0, width/3], 0.7, 0.5)\n                        .domain(data.map(function(d) { return d.year; }));\n\n        var yScale = d3.scale.linear()\n                        .range([height / 2, 0])\n                        .domain([0, d3.max(data, function(d) { return d.yield; })]);\n\n        var siteGroups = d3.nest()\n                    .key(function(d) { return d.site; })\n                    .key(function(d) { return d.year; })\n                    .rollup(function(leaves) {\n                      var yields = leaves.map(function(d) { return d.yield; }).sort(d3.ascending);\n                      console.log(yields);\n                      return {\n                        min: d3.min(yields),\n                        max: d3.max(yields),\n                        p50: d3.mean(yields),\n                        p25: d3.quantile(yields, 0.25),\n                        p75: d3.quantile(yields, 0.75),\n                        p05: d3.quantile(yields, 0.05),\n                        p95: d3.quantile(yields, 0.95)\n                      };\n                    })\n                    .entries(data);\n\n        var sites = svg.selectAll(\"g.site\").data(siteGroups);\n\n        var chartHeight = height / 2,\n            chartWidth = width / 3;\n\n        sites.enter()\n          .append(\"g\")\n          .classed(\"site\", true)\n          .attr(\"transform\", function(d, i) {\n            var x = (i % 3) * chartWidth;\n            var y = parseInt(i/3) * chartHeight;\n            return \"translate(\" + [x, y] + \")\";\n          });\n\n        sites.each(function(d, i) {\n\n          if (i % 3 == 0) {\n            // Build y Axis\n            var yAxis = d3.svg.axis()\n                          .scale(yScale)\n                          .orient(\"left\")\n                          .tickSize(-width);\n\n            d3.select(this)\n              .append(\"g\")\n              .classed(\"y axis\", true)\n              .call(yAxis);\n          } else if (i%3 == 2) {\n            // Build y Axis on Right\n            var yAxis = d3.svg.axis()\n                          .scale(yScale)\n                          .orient(\"right\");\n\n            d3.select(this)\n              .append(\"g\")\n              .classed(\"y axis\", true)\n              .attr(\"transform\", \"translate(\" + [chartWidth, 0] + \")\")\n              .call(yAxis);\n          }\n\n          if (i <= 2) {\n            // Build x Axis\n            var xAxis = d3.svg.axis()\n                          .scale(xScale)\n                          .orient(\"top\");\n\n            d3.select(this)\n              .append(\"g\")\n              .classed(\"x axis\", true)\n              .call(xAxis);\n          } else {\n            // Build x Axis\n            var xAxis = d3.svg.axis()\n                          .scale(xScale)\n                          .orient(\"bottom\")\n                          .tickSize(-height);\n\n            d3.select(this)\n              .append(\"g\")\n              .classed(\"x axis\", true)\n              .attr(\"transform\", \"translate(\" + [0, chartHeight] + \")\")\n              .call(xAxis);\n          }\n\n          d3.select(this)\n            .append(\"rect\")\n            .classed(\"sub-plot\", true)\n            .attr({\n              x: 0,\n              y: 0,\n              height: chartHeight,\n              width: chartWidth\n            });\n\n          d3.select(this)\n            .append(\"text\")\n            .classed(\"site-text\", true)\n            .attr({\n              x: 5,\n              y: 20\n            })\n            .text(d.key)\n\n          d3.select(this)\n            .selectAll(\"rect.yield\")\n            .data(d.values)\n            .enter()\n              .append(\"rect\")\n              .classed(\"yield\", true)\n              .attr({\n                x: function(d) { return xScale(d.key); },\n                y: function(d) { return yScale(d.values.p75); },\n                height: function(d) { return yScale(d.values.p25) - yScale(d.values.p75); },\n                width: function(d) { return xScale.rangeBand(); }\n              });\n\n          d3.select(this)\n            .selectAll(\"line.yield\")\n            .data(d.values)\n            .enter()\n              .append(\"line\")\n              .classed(\"yield\", true)\n              .attr({\n                x1: function(d) { return xScale(d.key); },\n                y1: function(d) { return yScale(d.values.p50); },\n                x2: function(d) { return xScale(d.key) + xScale.rangeBand(); },\n                y2: function(d) { return yScale(d.values.p50); }\n              });\n\n          // Add Wiskers\n          d3.select(this)\n            .selectAll(\"line.wiskers-top\")\n            .data(d.values)\n            .enter()\n              .append(\"line\")\n              .classed(\"wiskers-top\", true)\n              .attr({\n                x1: function(d) { return xScale(d.key) + xScale.rangeBand()/2; },\n                y1: function(d) { return yScale(d.values.p75); },\n                x2: function(d) { return xScale(d.key) + xScale.rangeBand()/2; },\n                y2: function(d) { return yScale(d.values.p95); }\n              })\n\n          d3.select(this)\n            .selectAll(\"line.wiskers-bottom\")\n            .data(d.values)\n            .enter()\n              .append(\"line\")\n              .classed(\"wiskers-bottom\", true)\n              .attr({\n                x1: function(d) { return xScale(d.key) + xScale.rangeBand()/2; },\n                y1: function(d) { return yScale(d.values.p25); },\n                x2: function(d) { return xScale(d.key) + xScale.rangeBand()/2; },\n                y2: function(d) { return yScale(d.values.p05); }\n              });\n        });\n      });\n    </script>", "description": "Barley Yields Simple Multiples", "created_at": "2016-05-17T22:30:40Z", "updated_at": "2016-05-17T22:30:40Z", "api": ["d3.csv", "d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.nest", "d3.min", "d3.mean", "d3.quantile", "d3.svg.axis"], "readme": "\n\nforked from <a href='http://bl.ocks.org/sampathweb/'>sampathweb</a>'s block: <a href='http://bl.ocks.org/sampathweb/98ae33d2c8409234ec8d05f1be76a86f'>Barley Yields Simple Multiples</a>", "uid": "WillNetsky_cf86ff9fed83ee6a333f422fab7ef539"}, {"code": "<script>\n      $(document).ready(function(){\n        console.log(\"modal ready!\");\n    // the \"href\" attribute of .modal-trigger must specify the modal ID that wants to be triggered\n    $('.modal-trigger').leanModal();\n  });\n var svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n \t\t\td3.json(\"test.json\", function(error, json) {\n\n      var data = function(hsps) {\n        var paths = Array();\n        hsps.forEach(function(value, index, myArray) {\n          var dataset = Array();\n\t        dataset.push({x: value.query_from/10, y: 130, evalue: value.evalue});\n          dataset.push({x: value.query_to/10, y: 130});\n          dataset.push({x: value.hit_to/10, y: 325});\n          dataset.push({x: value.hit_from/10, y: 325});\n          paths.push(dataset);\n        });\n        return paths;\n      }\n      var hsps = json.BlastOutput2[0].report.results.bl2seq[0].hits[0].hsps;\n\t\t\tpathset = data(hsps);\n      var hsps = svg.selectAll(\".hsps\")\n      \t.data(pathset);\n      var d3line2 = d3.svg.line()\n                        .x(function(d) { return d.x; })\n                        .y(function(d) { return d.y; })\n\t\t\t\t\t\t\t\t\t      .interpolate(\"linear-closed\");\n      hsps.enter()\n          .append(\"svg:path\")\n      \t\t.on(\"mouseover\", function(d){\n       \t\t  console.log(d);\n         \t\ttooltip.html(\"e-value: \" + d[0].evalue)\t;\n\t\t        d3.select(this).style(\"fill\", \"purple\");\n         \t\treturn tooltip.style(\"visibility\", \"visible\");\n      \t\t })\n        \t.style(\"fill-opacity\", 0)\n\t\t      .style(\"stroke-width\", 0)\n          .attr(\"d\", function(d) { //console.log(d); \n                                  return d3line2(d);})\n          .transition()\n          .duration(3000)\n      \t\t.delay(4000)\n          .style(\"stroke-width\", 1)\n          .style(\"stroke\", \"black\")\n          .style(\"fill\", \"violet\")\n        \t.style(\"fill-opacity\", 0.5)\n\n        hsps\n\t\t\t\t\t\t.on(\"mousemove\", function(){return tooltip.style(\"top\", (event.pageY-10)+\"px\").style(\"left\",(event.pageX+10)+\"px\");})\n\t\t\t\t\t\t.on(\"mouseout\", function(){\n         \t\t\td3.select(this).style(\"fill-opacity\", 0.5);\n\t\t          d3.select(this).style(\"fill\", \"violet\");\n     \t\t\t    return tooltip.style(\"visibility\", \"hidden\");\n       })\n\n  var tooltip = d3.select(\"body\")\n\t.append(\"div\")\n\t.style(\"z-index\", \"10\")\n\t.style(\"visibility\", \"hidden\")\n  .style(\"background\",\"lightcyan\")\n  //.style(\"width\",\"150px\")\n  .style(\"height\", \"30px\")\n  .style(\"text-align\", \"center\")\n  .style(\"position\", \"absolute\")\n  .style(\"padding\", \"2px\")\n  .style(\"font-family\", \"Raleway\")\n  .style(\"border-radius\",\"8px\");     \n      }); \n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    \n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n\n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\") // background for ruler\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1)\n\t\t\t;\n      \n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"Roboto\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"black\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n      \n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { return d.genes;})\n      .enter()\n      .append(\"g\").on(\"mouseover\", function(d) {\n\t        nodedata = this.parentNode.__data__;\n  \t      div.transition()\n    \t      .duration(500)\n      \t    .style(\"opacity\", .9);\n        \tdiv\t.html(nodedata.phagename + \" gp\" + d.name)\n        \n        // the text of the tooltip ...\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      });\n    gene_group_x = function(d) {\n    \treturn (d.start)/10;\n    };\n    gene_group_y = function(d) {\n      console.log(d);\n      if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n    };\n    \n    gene\n      .attr(\"transform\", function (d) { return \"translate(\" + gene_group_x(d) + \",\" + gene_group_y(d) + \")\"});\n      gene.append(\"rect\")\n      .attr(\"height\", function (d) {return 30;})\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      .attr(\"fill\", function (d) {\n        if (d.direction == \"forward\") {\n          return \"aquamarine\";\n        }\n        else if (d.direction == \"reverse\") {\n          return \"lightskyblue\";\n        }\n        else {\n          return \"black\";\n        }\n      })\n      .attr(\"width\", 0)\n      .transition()\n      .duration(1600)\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      \n        ;\n\n      \n  domain = gene.selectAll(\".domains\")\n      .data(function(d, i) { return d.domains;})\n      .enter()\n      .append(\"g\")\n      .on('click', function(d,i){\n    \t\td3.select('#domain_header').text(d.description)\n        d3.select('#domain_body').text(d.description + \" description could go here\")\n\n      \t$('#modal1').openModal();\n\t\t\t})\n;\n  domain.append(\"rect\")\n  \t\t.attr(\"fill-opacity\", 0)\n      .attr(\"height\", function (d) {return 28;})\n      .attr(\"width\", function (d) { return ((d.stop*3)-(d.start*3))/10; })\n  \t\t.attr(\"x\", function(d) {return (d.start*3)/10; })\n      .attr(\"y\", function (d) {\n    \t\tg = this.parentNode.parentNode.__data__;\n        if (g.direction == \"forward\") {\n          if (g.name % 2 === 0) {\n            return -78;\n          }\n          else { return -38;}\n        }\n        else if (g.direction == \"reverse\") {\n          if (g.name % 2 === 0) {\n            return 1;\n          }\n          else { return 1;}\n        }\n      })\n  \t\t.attr(\"fill\", \"orange\")\n  \t\t.transition()\n  \t\t.duration(750)\n  \t\t.delay(3000)\n  \t\t.attr(\"fill-opacity\", 0.9);\n\n      gene.append(\"text\") // gene name\n      .attr(\"x\", function(d) { return ((d.stop - d.start)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { // forward and even\n            return 20;\n          }\n          else { return 20;} // forward and odd\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { // reverse and even\n            return 20;\n          }\n          else { return 20;} //reverse and odd\n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n      .attr(\"font-family\", \"ariel\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1)\n      ;\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.stop - d.start)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { // forward and even\n            return -10;\n          }\n          else { return -10;} // forward and odd\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { // reverse and even\n            return 50;\n          }\n          else { return 50;} //reverse and odd\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n      .attr(\"font-family\", \"ariel\")\n      .text(function(d) {return d.pham})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n  });\n\n  </script>", "description": "Conserved Domains", "created_at": "2016-05-13T16:39:27Z", "updated_at": "2016-05-13T16:39:27Z", "api": ["d3.select", "d3.json", "d3.svg.line", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/1d3dcaefadd4c8f33318fe017cf730d6'>genome browser for final group project</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/d9330fbe7bbf1a68e3d634602eb4d7a2'>genome browser for final group project</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/f405977b9bf51851a6b86476992c6ce9'>Two tooltips and fade out</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/794e8d9eb8c153a1778cc487ff4465ff'>Two tooltips and fade out</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/444730d0628d814b9ce02be0636e01f4'>Conserved Domains</a>", "uid": "stjacqrm_344e9c52fa580966d47b1e13ca7fee11"}, {"code": "<script>\n      var outerWidth = 960;\n      var outerHeight = 500;\n      var margin = { left: 130, top: 44, right: 30, bottom: 47 };\n      var barPadding = 0.2;\n\n      var xColumn = \"country\";\n      var yColumn = \"population\";\n      var colorColumn = \"religion\";\n      var layerColumn = colorColumn;\n      \n      var hoveredColorValue;\n      var hoveredStrokeColor = \"black\";\n\n      var innerWidth  = outerWidth  - margin.left - margin.right;\n      var innerHeight = outerHeight - margin.top  - margin.bottom;\n\n      var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\",  outerWidth)\n        .attr(\"height\", outerHeight);\n      var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      \n      // This is the layer where the bars are drawn.\n      var baseBarLayer = g.append(\"g\");\n      \n      // This layer contains a semi-transparent overlay\n      // that fades out the base bars.\n      var overlayRect = g.append(\"g\")\n        .append(\"rect\")\n        .attr(\"width\", innerWidth)\n        .attr(\"height\", innerHeight)\n        .style(\"pointer-events\", \"none\");\n      \n      // This contains the subset of bars rendered on top\n      // when you hover over the entries in the color legend.\n      var foregroundBarLayer = g.append(\"g\");\n      \n      var xAxisG = g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + innerHeight + \")\");\n      var yAxisG = g.append(\"g\")\n        .attr(\"class\", \"y axis\");\n      var colorLegendG = g.append(\"g\")\n        .attr(\"class\", \"color-legend\")\n        .attr(\"transform\", \"translate(596, 0)\");\n\n      var xScale = d3.scale.ordinal().rangeBands([0, innerWidth], barPadding);\n      var yScale = d3.scale.linear().range([innerHeight, 0]);\n      var colorScale = d3.scale.category10();\n      \n      var tipNumberFormat = d3.format(\",\");\n      var tip = d3.tip()\n        .attr(\"class\", \"d3-tip\")\n        .offset([-10, 0])\n        .html(function(d) {\n          return [\n            d[colorColumn],\n            \" in \",\n            d[xColumn],\n            \": \",\n            tipNumberFormat(d[yColumn])\n          ].join(\"\");\n        });\n      g.call(tip);\n      \n      // Use a modified SI formatter that uses \"B\" for Billion.\n      var siFormat = d3.format(\"s\");\n      var customTickFormat = function (d){\n        return siFormat(d).replace(\"G\", \"B\");\n      };\n\n      var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\")\n        .outerTickSize(0);\n      var yAxis = d3.svg.axis().scale(yScale).orient(\"left\")\n        .ticks(5)\n        .tickFormat(customTickFormat)\n        .outerTickSize(0);\n\n      var colorLegend = d3.legend.color()\n        .scale(colorScale)\n        .shapePadding(6.24)\n        .shapeWidth(25)\n        .shapeHeight(25)\n        .labelOffset(5);\n\n      function render(data){\n\n        var nested = d3.nest()\n          .key(function (d){ return d[layerColumn]; })\n          .entries(data);\n\n        var stack = d3.layout.stack()\n          .y(function (d){ return d[yColumn]; })\n          .values(function (d){ return d.values; });\n\n        var layers = stack(nested.reverse()).reverse();\n\n        xScale.domain(layers[0].values.map(function (d){\n          return d[xColumn];\n        }));\n\n        yScale.domain([\n          0,\n          d3.max(layers, function (layer){\n            return d3.max(layer.values, function (d){\n              return d.y0 + d.y;\n            });\n          })\n        ]);\n\n        colorScale.domain(layers.map(function (layer){\n          return layer.key;\n        }));\n\n        xAxisG.call(xAxis); \n        yAxisG.call(yAxis);\n\n        renderBars(baseBarLayer, layers);\n        \n        if(hoveredColorValue){\n          setOverlayTransparency(0.7);\n          renderBars(foregroundBarLayer, layers.filter(function (layer){\n            return layer.key === hoveredColorValue;\n          }));\n        } else {\n          setOverlayTransparency(0.0);\n          renderBars(foregroundBarLayer, []);\n        }\n        \n        colorLegendG.call(colorLegend);\n        \n        // Move the text down a bit.\n        colorLegendG.selectAll(\"text\").attr(\"y\", 4);\n        \n        listenForHover(colorLegendG.selectAll(\"rect\"), data);\n        listenForHover(colorLegendG.selectAll(\"text\"), data);\n      }\n      \n      function setOverlayTransparency(alpha){\n        overlayRect\n          .transition().duration(400)\n          .attr(\"fill\", \"rgba(255, 255, 255, \" + alpha + \")\");\n      }\n      \n      function renderBars(g, layers){\n        var layerGs = g.selectAll(\".layer\").data(layers);\n        layerGs.enter().append(\"g\").attr(\"class\", \"layer\");\n        layerGs.exit().remove();\n        layerGs.style(\"fill\", function (d){\n          return colorScale(d.key);\n        });\n\n        var bars = layerGs.selectAll(\"rect\").data(function (d){\n          return d.values;\n        });\n        bars.enter().append(\"rect\")\n          .on(\"mouseover\", tip.show)\n          .on(\"mouseout\", tip.hide);\n        bars.exit().remove();\n        bars\n          .attr(\"x\", function (d){ return xScale(d[xColumn]); })\n          .attr(\"y\", function (d){ return yScale(d.y0 + d.y); })\n          .attr(\"width\", xScale.rangeBand())\n          .attr(\"height\", function (d){ return innerHeight - yScale(d.y); });\n      }\n      \n      function listenForHover(selection, data){\n        selection\n          .on(\"mouseover\", function (d){\n            hoveredColorValue = d;\n            render(data);\n          })\n          .on(\"mouseout\", function (d){\n            hoveredColorValue = null;\n            render(data);\n          })\n          .style(\"cursor\", \"pointer\");\n      }\n\n      function type(d){\n        d.population = +d.population;\n        return d;\n      }\n\n      d3.csv(\"religionByCountryTop5.csv\", type, render);\n\n    </script>", "description": "Stacked Bars", "created_at": "2016-05-13T08:42:31Z", "updated_at": "2016-05-13T08:42:31Z", "api": ["d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.scale.category10", "d3.format", "d3.tip", "d3.svg.axis", "d3.legend.color", "d3.nest", "d3.layout.stack", "d3.max", "d3.csv"], "readme": "Stacked bars showing estimated religion by top 5 countries in 2010. This is an example from the tutorial [Splitting Charts](https://github.com/curran/screencasts/tree/gh-pages/splittingCharts). The data shown is from this [report on The Global Religious Landscape from Pew Research](http://www.pewforum.org/2012/12/18/global-religious-landscape-exec/), generated using this [processing script](https://github.com/curran/data/blob/gh-pages/pew/religion/processed/process.js).\n\n * Draws from [Stacked-to-Grouped Bars](http://bl.ocks.org/mbostock/3943967)\n * Tooltip logic draws from [World City Explorer](http://bl.ocks.org/curran/752b97cef3f880a813ab)\n\n<!-- Start of SimpleHitCounter Code -->\n<div align=\"center\"><a href=\"http://www.simplehitcounter.com\" target=\"_blank\"><img src=\"http://simplehitcounter.com/hit.php?uid=1967777&f=16777215&b=0\" border=\"0\" height=\"18\" width=\"83\" alt=\"web counter\"></a></div>\n<!-- End of SimpleHitCounter Code -->\n\n\nforked from <a href='http://bl.ocks.org/curran/'>curran</a>'s block: <a href='http://bl.ocks.org/curran/805413fb3b2efaada1ce'>Stacked Bars</a>", "uid": "Malicia_d09b3ae6b3ce3435a0ca4ec73b137528"}, {"code": "<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height,\n    searchRadius = 40;\n\nvar color = d3.scaleOrdinal()\n    .range(d3.schemeCategory20);\n\nvar simulation = d3.forceSimulation()\n    .force(\"charge\", d3.forceManyBody().strength(-18))\n    .force(\"link\", d3.forceLink().iterations(4).id(function(d) { return d.id; }))\n    .force(\"x\", d3.forceX())\n    .force(\"y\", d3.forceY());\n\nd3.json(\"graph.json\", function(error, graph) {\n  if (error) throw error;\n\n  var users = d3.nest()\n      .key(function(d) { return d.user; })\n      .entries(graph.nodes)\n      .sort(function(a, b) { return b.values.length - a.values.length; });\n\n  color.domain(users.map(function(d) { return d.key; }));\n\n  simulation\n      .nodes(graph.nodes)\n      .on(\"tick\", ticked);\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  d3.select(canvas)\n      .on(\"mousemove\", mousemoved)\n      .call(d3.drag()\n          .container(canvas)\n          .subject(dragsubject)\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  function ticked() {\n    context.clearRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n\n    context.beginPath();\n    graph.links.forEach(drawLink);\n    context.strokeStyle = \"#aaa\";\n    context.stroke();\n\n    users.forEach(function(user) {\n      context.beginPath();\n      user.values.forEach(drawNode);\n      context.fillStyle = color(user.key);\n      context.fill();\n    });\n\n    context.restore();\n  }\n\n  function dragsubject() {\n    return simulation.find(d3.event.x - width / 2, d3.event.y - height / 2, searchRadius);\n  }\n\n  function mousemoved() {\n    var a = this.parentNode, m = d3.mouse(this), d = simulation.find(m[0] - width / 2, m[1] - height / 2, searchRadius);\n    if (!d) return a.removeAttribute(\"href\"), a.removeAttribute(\"title\");\n    a.setAttribute(\"href\", \"http://bl.ocks.org/\" + (d.user ? d.user + \"/\" : \"\") + d.id);\n    a.setAttribute(\"title\", d.id + (d.user ? \" by \" + d.user : \"\") + (d.description ? \"\\n\" + d.description : \"\"));\n  }\n});\n\nfunction dragstarted() {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d3.event.subject.fx = d3.event.subject.x;\n  d3.event.subject.fy = d3.event.subject.y;\n}\n\nfunction dragged() {\n  d3.event.subject.fx = d3.event.x;\n  d3.event.subject.fy = d3.event.y;\n}\n\nfunction dragended() {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d3.event.subject.fx = null;\n  d3.event.subject.fy = null;\n}\n\nfunction drawLink(d) {\n  context.moveTo(d.source.x, d.source.y);\n  context.lineTo(d.target.x, d.target.y);\n}\n\nfunction drawNode(d) {\n  context.moveTo(d.x + 3, d.y);\n  context.arc(d.x, d.y, 3, 0, 2 * Math.PI);\n}\n\n</script>", "description": "Blocks Graph", "created_at": "2016-05-12T21:12:05Z", "updated_at": "2016-08-19T21:29:15Z", "api": ["d3.scaleOrdinal", "d3.forceSimulation", "d3.forceManyBody", "d3.forceLink", "d3.forceX", "d3.forceY", "d3.json", "d3.nest", "d3.select", "d3.drag", "d3.mouse"], "readme": "This shows the [force-directed network](https://github.com/d3/d3-force) of mentions in the READMEs of various [bl.ocks](http://bl.ocks.org). I cleaned [Micah Stubb\u2019s data](/micahstubbs/948378950dd7b3e31e8cda3b33ebbcc8) from May 2016 slightly: I removed missing nodes, solitary nodes, self-links, and redundant links. The original dataset contains 2,101 nodes and 8,617 links, and is 1.2 MB. The cleaned dataset contains 1,238 nodes and 2,602 links, and is 281 KB.\n", "uid": "mbostock_afecf1ce04644ad9036ca146d2084895"}, {"code": "<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height;\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\nd3.json(\"miserables.json\", function(error, graph) {\n  if (error) throw error;\n\n  simulation\n      .nodes(graph.nodes)\n      .on(\"tick\", ticked);\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  d3.select(canvas)\n      .call(d3.drag()\n          .container(canvas)\n          .subject(dragsubject)\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  function ticked() {\n    context.clearRect(0, 0, width, height);\n\n    context.beginPath();\n    graph.links.forEach(drawLink);\n    context.strokeStyle = \"#aaa\";\n    context.stroke();\n\n    context.beginPath();\n    graph.nodes.forEach(drawNode);\n    context.fill();\n    context.strokeStyle = \"#fff\";\n    context.stroke();\n  }\n\n  function dragsubject() {\n    return simulation.find(d3.event.x, d3.event.y);\n  }\n});\n\nfunction dragstarted() {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d3.event.subject.fx = d3.event.subject.x;\n  d3.event.subject.fy = d3.event.subject.y;\n}\n\nfunction dragged() {\n  d3.event.subject.fx = d3.event.x;\n  d3.event.subject.fy = d3.event.y;\n}\n\nfunction dragended() {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d3.event.subject.fx = null;\n  d3.event.subject.fy = null;\n}\n\nfunction drawLink(d) {\n  context.moveTo(d.source.x, d.source.y);\n  context.lineTo(d.target.x, d.target.y);\n}\n\nfunction drawNode(d) {\n  context.moveTo(d.x + 3, d.y);\n  context.arc(d.x, d.y, 3, 0, 2 * Math.PI);\n}\n\n</script>", "description": "Force Dragging III", "created_at": "2016-05-11T20:35:35Z", "updated_at": "2016-09-26T17:16:02Z", "api": ["d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceCenter", "d3.json", "d3.select", "d3.drag"], "readme": "This example demonstrates applying [d3-drag](https://github.com/d3/d3-drag) to a [force-directed graph](/mbostock/f584aa36df54c451c94a9d0798caed35) computed using [d3-force](https://github.com/d3/d3-force). When the drag gesture starts, the targeted node is [fixed](https://github.com/d3/d3-force#simulation_fix) to the pointer; it is released when the gesture ends. In addition, the simulation is temporarily \u201cheated\u201d during interaction by setting the [target *alpha*](https://github.com/d3/d3-force#simulation_alphaTarget) to a non-zero value.\n\nCompare to the [SVG version](/mbostock/2675ff61ea5e063ede2b5d63c08020c7).\n", "uid": "mbostock_ad70335eeef6d167bc36fd3c04378048"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\nd3.json(\"miserables.json\", function(error, graph) {\n  if (error) throw error;\n\n  var link = svg.append(\"g\")\n      .attr(\"class\", \"links\")\n    .selectAll(\"line\")\n    .data(graph.links)\n    .enter().append(\"line\");\n\n  var node = svg.append(\"g\")\n      .attr(\"class\", \"nodes\")\n    .selectAll(\"circle\")\n    .data(graph.nodes)\n    .enter().append(\"circle\")\n      .attr(\"r\", 2.5)\n      .call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  node.append(\"title\")\n      .text(function(d) { return d.id; });\n\n  simulation\n      .nodes(graph.nodes)\n      .on(\"tick\", ticked);\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  function ticked() {\n    link\n        .attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\n    node\n        .attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; });\n  }\n});\n\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d.fx = d.x;\n  d.fy = d.y;\n}\n\nfunction dragged(d) {\n  d.fx = d3.event.x;\n  d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d.fx = null;\n  d.fy = null;\n}\n\n</script>", "description": "Force Dragging I", "created_at": "2016-05-11T17:57:31Z", "updated_at": "2016-10-12T04:39:46Z", "api": ["d3.select", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceCenter", "d3.json", "d3.drag"], "readme": "This example demonstrates applying [d3-drag](https://github.com/d3/d3-drag) to a [force-directed graph](/mbostock/f584aa36df54c451c94a9d0798caed35) computed using [d3-force](https://github.com/d3/d3-force). When the drag gesture starts, the targetted node is [fixed](https://github.com/d3/d3-force#simulation_fix) to the pointer; it is released when the gesture ends. In addition, the simulation is temporarily \u201cheated\u201d during interaction by setting the [target *alpha*](https://github.com/d3/d3-force#simulation_alphaTarget) to a non-zero value.\n\nIf desired, you could refine this technique by also fixing nodes on mouseover, and releasing them on mouseout. (However, if there\u2019s an active drag gesture during mouseout, you wouldn\u2019t want to release the node until the gesture finishes.)\n\nCompare to the [Canvas version](/mbostock/ad70335eeef6d167bc36fd3c04378048).\n", "uid": "mbostock_2675ff61ea5e063ede2b5d63c08020c7"}, {"code": "<script>\n      //JS to go here\n      d3.csv(\"barley-yields.csv\", function(error, data) {\n        data.forEach(function(d) {\n          d.year = +d.year;\n          d.yield = +d.yield;\n        });\n\n        var margin = {top: 20, right: 20, bottom: 50, left: 50},\n            width = 960 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        var svg = d3.select(\"#viz\")\n                      .append(\"svg\")\n                      .attr({\n                        width: width + margin.left + margin.right,\n                        height: height + margin.top + margin.bottom\n                      })\n                      .append(\"g\")\n                      .attr(\"transform\", \"translate(\" + [margin.left, margin.top] + \")\");\n\n        var xScale = d3.scale.ordinal()\n                        .rangePoints([50, width])\n                        .domain(data.map(function(d) { return d.year; }));\n\n        var yScale = d3.scale.linear()\n                        .range([height, 0])\n                        .domain([0, d3.max(data, function(d) { return d.yield; })]);\n        var circles = svg.selectAll(\"circle.yield\").data(data);\n\n        circles.enter()\n          .append(\"circle\")\n          .classed(\"yield\", true)\n          .attr({\n            cx: function(d) { return xScale(d.year); },\n            cy: function(d) { return yScale(d.yield); },\n            r: 2\n          });\n\n          var xAxis = d3.svg.axis()\n                        .orient(\"bottom\")\n                        .scale(xScale);\n\n          var yAxis = d3.svg.axis()\n                        .orient(\"left\")\n                        .scale(yScale);\n\n          svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(\" + [0, margin.top + height] + \")\")\n            .call(xAxis);\n\n          svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .call(yAxis);\n      });\n    </script>", "description": "Barley Farmers Exploration", "created_at": "2016-05-08T23:55:27Z", "updated_at": "2016-05-13T02:39:59Z", "api": ["d3.csv", "d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis"], "readme": "", "uid": "sampathweb_2ced6f3b7fe238fb63958dc3bbf052b9"}, {"code": "<script>\n      d3.json(\"blocks.json\", function(err, blocks) {\n        var xf = crossfilter(blocks);\n        var author = xf.dimension(function(d) { return d.userId })\n        var created = xf.dimension(function(d) { return +new Date(d.created_at) })\n        var all = xf.dimension(function(d) { return true });\n        var thumb = xf.dimension(function(d) { return !!d.thumbnail });\n        //thumb.filter(function(d) { return d })\n        //var api = xf.dimension(function(d) { return d.api });\n\n        \n        //var layout = new hilbert()\n        //  .sideLength(9)\n\n        var layout = new grid()\n          .cellWidth(9)\n          .cellHeight(7)\n          .width(938)\n          .margin([1, 1])\n          //.offset([0, 28])\n          .brick(true)\n          \n        \n        //var data = layout.nodes(created.top(1000));\n        var data = layout.nodes(created.top(Infinity));\n        //var data = created.top(Infinity);\n        console.log(\"grid\", data.length)\n        \n        var color = d3.scale.linear()\n          .domain([0, data.length])\n          .range([\"#a8ff60\", \"#0600cc\"])\n          .interpolate(d3.interpolateHcl)\n        \n        var blockdivs = d3.select(\"#blocks\").selectAll(\"div.block\")\n        .data(data)\n        .enter()\n        .append(\"div\").classed(\"block\", true)\n        .style({\n          top: function(d) { return d.y  + \"px\" },\n          left: function(d) { return d.x  + \"px\" },\n          /*\n          \"border\": function(d,i) {\n            return \"1px solid \" + color(i);\n          },*/\n          \"background-color\": function(d,i) {\n            return color(i);\n          }\n        }).on(\"click\", function(d,i) {\n          console.log(d);\n          window.open(\"http://bl.ocks.org/\" + d.data.userId + \"/\" + d.data.id);\n        }).on(\"mouseover\", function(d,i) {\n          // select\n          var desc = d.data.description || \"\";\n          desc = desc.slice(0, 40);\n          if(d3.select(this).style(\"opacity\") == 1)\n            d3.select(\"#hover\").text(desc + \" by: \" + d.data.userId + \" \" + d.data.id)\n        })\n        \n        d3.select(\"#user\").on(\"keydown\", function() {\n          var that = this;\n          setTimeout(function() {\n            var val = that.value.toLowerCase();\n            d3.select(\"#hover\").text(\"\");\n            author.filter(function(d) { \n              return d.toLowerCase().indexOf(val) >= 0;\n\t\t\t\t\t\t})\n            var matched = author.top(Infinity)\n            var ids = matched.map(function(d) { return d.id });\n            \n\t\t\t\t\t\td3.select(\"#blocks\").selectAll(\"div.block\")\n            .transition().duration(400)\n            .style(\"opacity\", 0.1)\n            \n            var filtered = d3.select(\"#blocks\").selectAll(\"div.block\")\n            .filter(function(d) { return ids.indexOf(d.data.id) >= 0 })\n            .transition().duration(100)\n            .style(\"opacity\", 1)\n            \n          }, 10);\n          \n        })\n\n        \n        \n      })\n    </script>", "description": "block wall: filter user", "created_at": "2016-05-03T22:03:39Z", "updated_at": "2016-05-03T22:03:39Z", "api": ["d3.extent", "d3.rebind", "d3.json", "d3.scale.linear", "d3.select"], "readme": "A collection of blocks scanned with [blockscanner](https://github.com/iros/blockscanner) for the [bl.ocksplorer.org](http://bl.ocksplorer.org/) project and further processed with [block-similarity](https://github.com/enjalot/block-similarity).\n\n### Try filtering by some usernames\nmbostock, enjalot, syntagmatic, emeeks, nitaku\n\nIf you don't see any of your blocks here, [add your GitHub username](https://docs.google.com/forms/d/1VdDdycNuqJVw3Ik6-ZLj6v7X9g2vWlw_RCC3RCfD9-I/viewform)  \nIf you need to add thumbnails to your bl.ocks, use [blockbuilder.org](http://blockbuilder.org)\n\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/6ac67b0d8ed673c9aa61'>all the blocks</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/1d679f0322174b65d032'>block wall</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/211bd42857358a60a936'>block wall: thumbnails only</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/7b63fef8ccfbad1f851e'>block wall: filter user</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/64dbd9b7b740ba44462f'>block wall: filter user</a>", "uid": "elon-_b50306eadecee32901d8ac0245de15ae"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x0 = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar x1 = d3.scale.ordinal();\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x0)\n    .tickSize(0)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar color = d3.scale.ordinal()\n    .range([\"#ca0020\",\"#f4a582\",\"#d5d5d5\",\"#92c5de\",\"#0571b0\"]);\n\nvar svg = d3.select('body').append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"data.json\", function(error, data) {\n\n  var categoriesNames = data.map(function(d) { return d.categorie; });\n  var rateNames = data[0].values.map(function(d) { return d.rate; });\n\n  x0.domain(categoriesNames);\n  x1.domain(rateNames).rangeRoundBands([0, x0.rangeBand()]);\n  y.domain([0, d3.max(data, function(categorie) { return d3.max(categorie.values, function(d) { return d.value; }); })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .style('opacity','0')\n      .call(yAxis)\n  .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .style('font-weight','bold')\n      .text(\"Value\");\n\n  svg.select('.y').transition().duration(500).delay(1300).style('opacity','1');\n\n  var slice = svg.selectAll(\".slice\")\n      .data(data)\n      .enter().append(\"g\")\n      .attr(\"class\", \"g\")\n      .attr(\"transform\",function(d) { return \"translate(\" + x0(d.categorie) + \",0)\"; });\n\n  slice.selectAll(\"rect\")\n      .data(function(d) { return d.values; })\n  .enter().append(\"rect\")\n      .attr(\"width\", x1.rangeBand())\n      .attr(\"x\", function(d) { return x1(d.rate); })\n      .style(\"fill\", function(d) { return color(d.rate) })\n      .attr(\"y\", function(d) { return y(0); })\n      .attr(\"height\", function(d) { return height - y(0); })\n      .on(\"mouseover\", function(d) {\n          d3.select(this).style(\"fill\", d3.rgb(color(d.rate)).darker(2));\n      })\n      .on(\"mouseout\", function(d) {\n          d3.select(this).style(\"fill\", color(d.rate));\n      });\n\n  slice.selectAll(\"rect\")\n      .transition()\n      .delay(function (d) {return Math.random()*1000;})\n      .duration(1000)\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); });\n\n  //Legend\n  var legend = svg.selectAll(\".legend\")\n      .data(data[0].values.map(function(d) { return d.rate; }).reverse())\n  .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d,i) { return \"translate(0,\" + i * 20 + \")\"; })\n      .style(\"opacity\",\"0\");\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", function(d) { return color(d); });\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) {return d; });\n\n  legend.transition().duration(500).delay(function(d,i){ return 1300 + 100 * i; }).style(\"opacity\",\"1\");\n\n});\n\n</script>", "description": "Grouped bar chart", "created_at": "2016-04-29T19:59:59Z", "updated_at": "2016-04-29T19:59:59Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.json", "d3.max", "d3.rgb"], "readme": "Inspired by an [example](http://bl.ocks.org/mbostock/3887051) from [Mike Bostock](http://bost.ocks.org). Colors from [Every ColorBrewer Scale](http://bl.ocks.org/mbostock/5577023).\n\nforked from <a href='http://bl.ocks.org/bricedev/'>bricedev</a>'s block: <a href='http://bl.ocks.org/bricedev/0d95074b6d83a77dc3ad'>Grouped bar chart</a>", "uid": "slayerscouts_de99b8b25f7c68a40dd4b3d351d1c26e"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 40, right: 40, bottom: 40, left: 40},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom;\n\nvar formatValue = d3.format(\",d\");\n\nvar x = d3.scaleLog()\n    .rangeRound([0, width]);\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"flare.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(data, function(d) { return d.value; }));\n\n  var simulation = d3.forceSimulation(data)\n      .force(\"x\", d3.forceX(function(d) { return x(d.value); }).strength(1))\n      .force(\"y\", d3.forceY(height / 2))\n      .force(\"collide\", d3.forceCollide(4))\n      .stop();\n\n  for (var i = 0; i < 120; ++i) simulation.tick();\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).ticks(20, \".0s\"));\n\n  var cell = g.append(\"g\")\n      .attr(\"class\", \"cells\")\n    .selectAll(\"g\").data(d3.voronoi()\n        .extent([[-margin.left, -margin.top], [width + margin.right, height + margin.top]])\n        .x(function(d) { return d.x; })\n        .y(function(d) { return d.y; })\n      .polygons(data)).enter().append(\"g\");\n\n  cell.append(\"circle\")\n      .attr(\"r\", 3)\n      .attr(\"cx\", function(d) { return d.data.x; })\n      .attr(\"cy\", function(d) { return d.data.y; });\n\n  cell.append(\"path\")\n      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; });\n\n  cell.append(\"title\")\n      .text(function(d) { return d.data.id + \"\\n\" + formatValue(d.data.value); });\n});\n\nfunction type(d) {\n  if (!d.value) return;\n  d.value = +d.value;\n  return d;\n}\n\n</script>", "description": "Beeswarm", "created_at": "2016-04-29T18:07:07Z", "updated_at": "2016-07-04T13:07:18Z", "api": ["d3.select", "d3.format", "d3.scaleLog", "d3.csv", "d3.extent", "d3.forceSimulation", "d3.forceX", "d3.forceY", "d3.forceCollide", "d3.axisBottom", "d3.voronoi"], "readme": "A static beeswarm plot implemented using [d3-force](https://github.com/d3/d3-force)\u2019s [collision constraint](https://github.com/d3/d3-force#collision). A Voronoi overlay improves hover interaction.\n", "uid": "mbostock_6526445e2b44303eebf21da3b6627320"}, {"code": "<script>\n\nvar margin = {top: 30, right: 40, bottom: 20, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 280 - margin.top - margin.bottom;\n\nvar types = {\n  \"Number\": {\n    name: \"Number\",\n    coerce: function(d) { return +d; },\n    extent: d3.extent,\n    within: function(d, extent) { return extent[0] <= d && d <= extent[1]; }\n  },\n  \"String\": {\n    name: \"String\",\n    coerce: String,\n    extent: function (data) { return data.sort(); },\n    within: function(d, extent, dim) { return extent[0] <= dim.scale(d) && dim.scale(d) <= extent[1]; }\n  }\n};\n\nvar dimensions = [\n  {\n    name: \"Sex\",\n    scale: d3.scale.ordinal().rangePoints([0, height]),\n    type: types[\"String\"],\n    domain: [\"M\", \"F\", \"I\"]\n  },\n  {\n    name: \"Length\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  },\n  {\n    name: \"Diameter\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  },\n  {\n    name: \"Height\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  },\n  {\n    name: \"Whole weight\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  },\n  {\n    name: \"Shucked weight\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  },\n  {\n    name: \"Viscera weight\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  },\n  {\n    name: \"Shell weight\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  },\n  {\n    name: \"Rings\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  }\n];\n\nvar color = d3.scale.ordinal()\n  .range([\"#1b9e77\",\"#d95f02\",\"#7570b3\"]);\n\nvar x = d3.scale.ordinal()\n    .domain(dimensions.map(function(dim) { return dim.name; }))\n    .rangePoints([0, width]);\n\nvar line = d3.svg.line()\n    .defined(function(d) { return !isNaN(d[1]); });\n\nvar yAxis = d3.svg.axis()\n    .orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar output = d3.select(\"body\").append(\"pre\");\n\nvar dimension = svg.selectAll(\".dimension\")\n    .data(dimensions)\n  .enter().append(\"g\")\n    .attr(\"class\", \"dimension\")\n    .attr(\"transform\", function(d) { return \"translate(\" + x(d.name) + \")\"; });\n\nvar colordimension = dimensions[0];\n\nd3.csv(\"abalone.csv\", function(error, rawdata) {\n  if (error) throw error;\n\n  // take subset of data\n  data = d3.shuffle(rawdata).slice(0,750);\n\n  data.forEach(function(d) {\n    dimensions.forEach(function(p) {\n      d[p.name] = p.type.coerce(d[p.name]);\n    });\n  });\n\n  dimensions.forEach(function(dim) {\n    if (!(\"domain\" in dim)) {\n      // detect domain using dimension type's extent function\n      dim.domain  = d3.functor(dim.type.extent)(data.map(function(d) { return d[dim.name]; }));\n    }\n    dim.scale.domain(dim.domain);\n  });\n\n  color.domain(colordimension.scale.domain());\n\n  svg.append(\"g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(data)\n    .enter().append(\"path\")\n      .attr(\"d\", draw)\n      .style(\"stroke\", function(d) { return color(d[colordimension.name]); });\n\n  dimension.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(yAxis.scale(d.scale)); })\n    .append(\"text\")\n      .attr(\"class\", \"title\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { return d.name; });\n\n  // Add and store a brush for each axis.\n  dimension.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) {\n        d3.select(this).call(d.brush = d3.svg.brush()\n          .y(d.scale)\n          .on(\"brushstart\", brushstart)\n          .on(\"brush\", brush));\n      })\n    .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n\n  output.text(d3.tsv.format(data));\n\n  function draw(d) {\n    return line(dimensions.map(function(dim) {\n      return [x(dim.name), dim.scale(d[dim.name])];\n    }));\n  }\n\n  function brushstart() {\n    d3.event.sourceEvent.stopPropagation();\n  }\n\n  // Handles a brush event, toggling the display of foreground lines.\n  function brush() {\n    var actives = dimensions.filter(function(p) { return !p.brush.empty(); }),\n        extents = actives.map(function(p) { return p.brush.extent(); });\n\n    var selected = [];\n\n    d3.selectAll(\".foreground path\").style(\"display\", function(d) {\n      if (actives.every(function(dim, i) {\n          // test if point is within extents for each active brush\n          return dim.type.within(d[dim.name], extents[i], dim);\n        })) {\n        selected.push(d);\n        return null;\n      }\n      return \"none\";\n    });\n\n    output.text(d3.tsv.format(selected));\n  }\n});\n\n</script>", "description": "Abalone", "created_at": "2016-04-29T14:44:33Z", "updated_at": "2016-04-29T14:44:33Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.shuffle", "d3.functor", "d3.svg.brush", "d3.tsv.format", "d3.event.sourceEvent.stopPropagation", "d3.selectAll"], "readme": "A random sample of 750 [Abalone measurements](http://archive.ics.uci.edu/ml/datasets/Abalone) from [UCI Machine Learning Repository](http://archive.ics.uci.edu/ml/datasets.html).\n\n### Dimensions\n\n```\nName    Data Type Meas. Description\n----    --------- ----- -----------\nSex   nominal     M, F, and I (infant)\nLength    continuous  mm  Longest shell measurement\nDiameter  continuous  mm  perpendicular to length\nHeight    continuous  mm  with meat in shell\nWhole weight  continuous  grams whole abalone\nShucked weight  continuous  grams weight of meat\nViscera weight  continuous  grams gut weight (after bleeding)\nShell weight  continuous  grams after being dried\nRings   integer     +1.5 gives the age in years\n\n```\n", "uid": "dogobox_d1e6411426e394efb82a49871e3f8cf7"}, {"code": "<script>\n\n var svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n \t\t\td3.json(\"test.json\", function(error, json) {\n\n      var data = function(hsps) {\n        var paths = Array();\n        hsps.forEach(function(value, index, myArray) {\n          var dataset = Array();\n\t        dataset.push({x: value.query_from/10, y: 130, evalue: value.evalue});\n          dataset.push({x: value.query_to/10, y: 130});\n          dataset.push({x: value.hit_to/10, y: 325});\n          dataset.push({x: value.hit_from/10, y: 325});\n          paths.push(dataset);\n        });\n        return paths;\n      }\n      var hsps = json.BlastOutput2[0].report.results.bl2seq[0].hits[0].hsps;\n\t\t\tpathset = data(hsps);\n      var hsps = svg.selectAll(\".hsps\")\n      \t.data(pathset);\n      var d3line2 = d3.svg.line()\n                        .x(function(d) { return d.x; })\n                        .y(function(d) { return d.y; })\n\t\t\t\t\t\t\t\t\t      .interpolate(\"linear-closed\");\n      hsps.enter()\n          .append(\"svg:path\")\n      \t\t.on(\"mouseover\", function(d){\n       \t\t  console.log(d);\n         \t\ttooltip.html(\"e-value: \" + d[0].evalue)\t;\n\t\t        d3.select(this).style(\"fill\", \"pink\");\n         \t\treturn tooltip.style(\"visibility\", \"visible\");\n      \t\t })\n        \t.style(\"fill-opacity\", 0)\n\t\t      .style(\"stroke-width\", 0)\n          .attr(\"d\", function(d) { //console.log(d); \n                                  return d3line2(d);})\n          .transition()\n          .duration(3000)\n      \t\t.delay(4000)\n          .style(\"stroke-width\", 1)\n          .style(\"stroke\", \"black\")\n          .style(\"fill\", \"red\")\n        \t.style(\"fill-opacity\", 0.5)\n\n        hsps.on(\"mouseout\", function(){d3.select(this).style(\"fill\", \"red\");})\n\t\t\t\t\t\t.on(\"mousemove\", function(){return tooltip.style(\"top\", (event.pageY-10)+\"px\").style(\"left\",(event.pageX+10)+\"px\");})\n\t\t\t\t\t\t.on(\"mouseout\", function(){\n         d3.select(this).style(\"fill\", \"red\");\n         return tooltip.style(\"visibility\", \"hidden\");\n       })\n\n  var tooltip = d3.select(\"body\")\n\t.append(\"div\")\n\t.style(\"z-index\", \"10\")\n\t.style(\"visibility\", \"hidden\")\n  .style(\"background\",\"lightcyan\")\n  .style(\"width\",\"150px\")\n  .style(\"height\", \"30px\")\n  .style(\"text-align\", \"center\")\n  .style(\"position\", \"absolute\")\n  .style(\"padding\", \"2px\")\n  .style(\"font\", \"ariel\")\n  .style(\"border-radius\",\"8px\");     \n      }); \n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    \n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n\n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n   \n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\") // background for ruler\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1)\n\t\t\t;\n      \n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"ariel\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"black\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n      \n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { return d.genes;})\n      .enter()\n      .append(\"g\");\n      gene.append(\"rect\")\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      .attr(\"fill\", function (d) {\n        if (d.direction == \"forward\") {\n          return \"aquamarine\";\n        }\n        else if (d.direction == \"reverse\") {\n          return \"lightskyblue\";\n        }\n        else {\n          return \"black\";\n        }\n      })\n      \n        .on(\"mouseover\", function(d) {\n        //console.log(d);\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", .9);\n        div\t.html(d.protein)\n        \n        // the text of the tooltip ...\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      })\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n\n      gene.append(\"text\") // gene name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { // forward and even\n            return -50;\n          }\n          else { return -10;} // forward and odd\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { // reverse and even\n            return 50;\n          }\n          else { return 80;} //reverse and odd\n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n      .attr(\"font-family\", \"ariel\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1)\n      ;\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n      .attr(\"font-family\", \"ariel\")\n      .text(function(d) {return d.pham})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1)\n    \t;\n  \n   \n  });\n  </script>\n  <script>\n    \n  </script>", "description": "Conserved Domains", "created_at": "2016-04-29T13:15:37Z", "updated_at": "2016-04-29T13:15:38Z", "api": ["d3.select", "d3.json", "d3.svg.line", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/1d3dcaefadd4c8f33318fe017cf730d6'>genome browser for final group project</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/d9330fbe7bbf1a68e3d634602eb4d7a2'>genome browser for final group project</a>\n\nforked from <a href='http://bl.ocks.org/smith13mr/'>smith13mr</a>'s block: <a href='http://bl.ocks.org/smith13mr/f405977b9bf51851a6b86476992c6ce9'>Two tooltips and fade out</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/794e8d9eb8c153a1778cc487ff4465ff'>Two tooltips and fade out</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/444730d0628d814b9ce02be0636e01f4'>Conserved Domains</a>", "uid": "rmar5h_d96e1ecedd1cd4b9cc6337e704c0e8ba"}, {"code": "<script>\n  \n    mapboxgl.accessToken = 'pk.eyJ1IjoiZW5qYWxvdCIsImEiOiJjaWhtdmxhNTIwb25zdHBsejk0NGdhODJhIn0.2-F2hS_oTZenAWc0BMf_uw'\n    \n    //Setup mapbox-gl map\n    var map = new mapboxgl.Map({\n      container: 'map', // container id\n      style: 'mapbox://styles/enjalot/cihmvv7kg004v91kn22zjptsc',\n      center: [-96,39],\n      zoom: 3.5,\n      \n    })\n    map.scrollZoom.disable()\n    map.addControl(new mapboxgl.Navigation());\n\n    // Setup our svg layer that we can manipulate with d3\n    var container = map.getCanvasContainer()\n    var svg = d3.select(container).append(\"svg\")\n\n    \n    function project(d) {\n      return map.project(getLL(d));\n    }\n    function getLL(d) {\n      return new mapboxgl.LngLat(+d.lng, +d.lat)\n    }\n  \n    d3.csv(\"dots.csv\", function(err, data) {\n      //console.log(data[0], getLL(data[0]), project(data[0]))\n      var dots = svg.selectAll(\"circle.dot\")\n        .data(data)\n      \n      dots.enter().append(\"circle\").classed(\"dot\", true)\n      .attr(\"r\", 1)\n      .style({\n        fill: \"#0082a3\",\n        \"fill-opacity\": 0.6,\n        stroke: \"#004d60\",\n        \"stroke-width\": 1\n      })\n      .transition().duration(1000)\n      .attr(\"r\", 6)\n      \n      function render() {\n        dots\n        .attr({\n          cx: function(d) { \n            var x = project(d).x;\n            return x\n          },\n          cy: function(d) { \n            var y = project(d).y;\n            return y\n          },\n        })\n      }\n\n      // re-render our visualization whenever the view changes\n      map.on(\"viewreset\", function() {\n        render()\n      })\n      map.on(\"move\", function() {\n        render()\n      })\n\n      // render our initial visualization\n      render()\n    })\n\n    \n  </script>", "description": "dots on a map: The Counted", "created_at": "2016-04-29T09:39:09Z", "updated_at": "2016-04-29T09:39:09Z", "api": ["d3.select", "d3.csv"], "readme": "This is a simple setup of Leaflet (via Mapbox) with d3 to show dots on a map. This can serve as a base for many interesting geographically based visualizations\n\nNice overview of using [d3 + Leaflet](http://chriszetter.com/blog/2014/06/15/building-a-voronoi-map-with-d3-and-leaflet/). \nI found this slightly simpler to use than Mike's [classic post](http://bost.ocks.org/mike/leaflet/).\n\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/18cb7a77b2d9de597b86'>dots on a map: setup-gl</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/dc1ce756527c072885dc'>dots on a map: The Counted</a>", "uid": "dogobox_4df88ca21dd4303d787649b8f389ade3"}, {"code": "<script>\n      d3.json(\"blocks.json\", function(err, blocks) {\n        var xf = crossfilter(blocks);\n        var author = xf.dimension(function(d) { return d.userId })\n        var created = xf.dimension(function(d) { return +new Date(d.created_at) })\n        var all = xf.dimension(function(d) { return true });\n        var thumb = xf.dimension(function(d) { return !!d.thumbnail });\n        //thumb.filter(function(d) { return d })\n        //var api = xf.dimension(function(d) { return d.api });\n\n        \n        //var layout = new hilbert()\n        //  .sideLength(9)\n\n        var layout = new grid()\n          .cellWidth(9)\n          .cellHeight(7)\n          .width(938)\n          .margin([1, 1])\n          //.offset([0, 28])\n          .brick(true)\n          \n        \n        //var data = layout.nodes(created.top(1000));\n        var data = layout.nodes(created.top(Infinity));\n        //var data = created.top(Infinity);\n        console.log(\"grid\", data.length)\n        \n        var color = d3.scale.linear()\n          .domain([0, data.length])\n          .range([\"#a8ff60\", \"#0600cc\"])\n          .interpolate(d3.interpolateHcl)\n        \n        var blockdivs = d3.select(\"#blocks\").selectAll(\"div.block\")\n        .data(data)\n        .enter()\n        .append(\"div\").classed(\"block\", true)\n        .style({\n          top: function(d) { return d.y  + \"px\" },\n          left: function(d) { return d.x  + \"px\" },\n          /*\n          \"border\": function(d,i) {\n            return \"1px solid \" + color(i);\n          },*/\n          \"background-color\": function(d,i) {\n            return color(i);\n          }\n        }).on(\"click\", function(d,i) {\n          console.log(d);\n          window.open(\"http://bl.ocks.org/\" + d.data.userId + \"/\" + d.data.id);\n        }).on(\"mouseover\", function(d,i) {\n          // select\n          var desc = d.data.description || \"\";\n          desc = desc.slice(0, 40);\n          if(d3.select(this).style(\"opacity\") == 1)\n            d3.select(\"#hover\").text(desc + \" by: \" + d.data.userId + \" \" + d.data.id)\n        })\n        \n        d3.select(\"#user\").on(\"keydown\", function() {\n          var that = this;\n          setTimeout(function() {\n            var val = that.value.toLowerCase();\n            d3.select(\"#hover\").text(\"\");\n            author.filter(function(d) { \n              return d.toLowerCase().indexOf(val) >= 0;\n\t\t\t\t\t\t})\n            var matched = author.top(Infinity)\n            var ids = matched.map(function(d) { return d.id });\n            \n\t\t\t\t\t\td3.select(\"#blocks\").selectAll(\"div.block\")\n            .transition().duration(400)\n            .style(\"opacity\", 0.1)\n            \n            var filtered = d3.select(\"#blocks\").selectAll(\"div.block\")\n            .filter(function(d) { return ids.indexOf(d.data.id) >= 0 })\n            .transition().duration(100)\n            .style(\"opacity\", 1)\n            \n          }, 10);\n          \n        })\n\n        \n        \n      })\n    </script>", "description": "block wall: filter user", "created_at": "2016-04-29T09:29:40Z", "updated_at": "2016-04-29T09:29:40Z", "api": ["d3.extent", "d3.rebind", "d3.json", "d3.scale.linear", "d3.select"], "readme": "A collection of blocks scanned with [blockscanner](https://github.com/iros/blockscanner) for the [bl.ocksplorer.org](http://bl.ocksplorer.org/) project and further processed with [block-similarity](https://github.com/enjalot/block-similarity).\n\n### Try filtering by some usernames\nmbostock, enjalot, syntagmatic, emeeks, nitaku\n\nIf you don't see any of your blocks here, [add your GitHub username](https://docs.google.com/forms/d/1VdDdycNuqJVw3Ik6-ZLj6v7X9g2vWlw_RCC3RCfD9-I/viewform)  \nIf you need to add thumbnails to your bl.ocks, use [blockbuilder.org](http://blockbuilder.org)\n\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/6ac67b0d8ed673c9aa61'>all the blocks</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/1d679f0322174b65d032'>block wall</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/211bd42857358a60a936'>block wall: thumbnails only</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/7b63fef8ccfbad1f851e'>block wall: filter user</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/64dbd9b7b740ba44462f'>block wall: filter user</a>", "uid": "dogobox_3edc0106447dcc869a7ffe2cac9fed02"}, {"code": "<script>\n    \n   \n          \n          var json = [\n  {\n    phagename: \"Butterscotch\",\n    pham: \"2412 (6)\",\n    pham: \"3464 (7)\",\n    checked: \"true\"\n       },\n            {\n    phagename: \"PBl1\",\n    pham: \"2411 (6)\",\n    checked: \"true\"\n       }\n \n];\n          \n          \n          \n          \n          \n       $.each(json, function () {\n        console.log(this);\n        $(\"#collapsible\").append(\"<li><div class='collapsible-header ><input type='checkbox' class='filled-in' id='filled-in-box' checked='checked' />\" + this.phagename + \"</div> <div class='collapsible-body' data-collapsible= 'expandable'><input type='checkbox' class='pham' id='filled-in-box_\" + this.pham + \"' checked='checked'/><label for='filled-in-box'></label>\" + this.pham + \"</div></li>\");\n  \t\t\t\n  \n         /*  <div id=\"cblist\">\n    <input type=\"checkbox\" value=\"first checkbox\" id=\"cb1\" /> <label for=\"cb1\">first checkbox</label>\n</div>\n\n<input type=\"text\" id=\"txtName\" />\n<input type=\"button\" value=\"ok\" id=\"btnSave\" />\n\n\n    });     \n   $(\"#checkboxes\").on('change', '[type=checkbox]', function () {\n    console.log($(this).val());\n  */\n     \n     \n   $(\"click-me\").click(function(event){\n    var x = event.target;\n    document.getElementById(\"click-me\").onclick = function (){\n    if (yes.clicked === true)\n      gene.append(\"\")\n    }\n\n     \n   })\n\n//      \n//    var phamcheckbox = d3.selectAll(\"pham\")\n//  \t\t.data (json)\n//     .enter()\n//  \t\t\t.append('div')\n//  \t\t\t.text(function(d,i){return d.pham + '';})\n });\n          \n          \n          \n      </script>\n      </div>\n     \n      \n<!--    <div class=\"collapsible-body\" id=\"body\">\n//      \t<script>\n//          $.each(json, function () {\n//        $(\"#body\").append($(\"<label>\").text(this.pham).prepend(\n//            $(\"<input>\").attr('type', 'checkbox').val(this.id)\n//               .prop('checked', this.checked)\n//        ));\n//    });\n    $(\"#checkboxes\").on('change', '[type=checkbox]', function () {\n       console.log($(this).val());\n    });\n        </script>\n      </div>-->\n    </li>\n   <!-- <li>\n      <div class=\"collapsible-header\"><i class=\"material-icons\">label</i>Genome 2</div>\n      <div class=\"collapsible-body\"><p>Pham 2</p></div>\n    </li>\n    <li>\n      <div class=\"collapsible-header\"><i class=\"material-icons\">label</i>Genome 3</div>\n      <div class=\"collapsible-body\"><p>Pham 3</p></div>\n    </li>-->\n  </ul>\n    \t\t\t\t\t\t</script>\n                </div>\n      \t</body>              \n        </div>        \t\n     \n\n      \n      </div>\n\n      </div>\n      </div>\n\n\n<div id=\"test2\" class=\"col s12\">\n\n         \n  \n<head>\n\n \n\t\n  <style>\n  \n  \n  \t.d3-tip {\n  line-height: 1;\n  font-weight: bold;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  border-radius: 2px;\n}\n\n.d3-tip:after {\n  box-sizing: border-box;\n  display: inline;\n  font-size: 10px;\n  width: 100%;\n  line-height: 1;\n  color: rgba(0, 0, 0, 0.8);\n  content: \"\\25BC\";\n  position: absolute;\n  text-align: center;\n}   \n  \n  .d3-tip.n:after {\n  margin: -1px 0 0 0;\n  top: 100%;\n  left: 0;\n}\n  \npath.link {\n                fill: none;\n                stroke: #666;\n                stroke-width: 1.5px;\n            }\n\t\t\t\n            path.link.licensing {\n                stroke: green;\n            }\n\t\t\t\n            path.link.resolved {\n                stroke-dasharray: 0,2 1;\n            }\n\t\t\t\n            marker#licensing {\n                fill: green;\n            }\n\t\t\t\n            marker#suit,\n            marker#resolved {\n                fill: black;\n            }\n\t\t\t\n      \n            text {\n                font: 10px sans-serif;\n                pointer-events: none;\n            }\n\t\t\t\n            text.shadow {\n                stroke: #fff;\n                stroke-width: 3px;\n                stroke-opacity: .8;\n            }\n\t\t\t\n            body,\n            .container {\n                background-color: white;\n                margin: 0px;\n            }\n\t\t    \n            .graphContainer {\n                text-shadow: -1px -1px 0 white, 1px -1px 0 white, -1px 1px 0 white, 1px 1px 0 white;\n            }\t\n            #sidebar{\n                position: absolute;\n                z-index: 2;\n                background-color: #FFF;\n                padding: 10px;\n                margin: 5px;\n                border: 1px solid #6895b4;\n                min-height: 3px;\n                min-width: 8px;\n            }\n\t\t\n            .item-group {\n                margin-bottom: 5px;\n            }\n\t\t\t\n            .item-group .item-label {\n                width: 90px;\n                text-align: right;\n                font-family: Arial,sans-serif;\n                font-size: 14px;\n                font-weight: bold;\n                position: relative;\n                min-height: 1px;\n                margin-top: 5px;\n                display: inline;\n                padding-right: 5px;\n                font-size: .90em;\n            }\n\t\n            .checkbox-interaction-group {\n                margin-left: 10px;\n                margin-top: 5px;\n                clear: both;\n            }\n\t\t\t\n            .checkbox-container {\n                display: block;\n                min-height: 22px;\n                vertical-align: middle;\n                margin-left: 10px;\n            }\n\t\t\t\n            .checkbox-container label{\n                display:inline;\n                margin-bottom: 0px;\n            }\t\t\n\n  </style>\n\n</head>\n\n    \n        \n\n         \n  \n       \n      \n        \n            \n\n      \n            \n</html> \n<body1>   \n\n  \n  <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-2.1.1.min.js\"></script>\n  \n  <script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js\"></script>\n  \n      <script type=\"text/javascript\" src=\"js/materialize.min.js\"></script>\n  \n \n  <script>\n\n  \n var svg = d3.select(\"body1\").append(\"svg\").attr(\"height\", 1000);\n d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n\n   var tip = d3.tip()\n   \n  .attr('class', 'd3-tip')\n  .offset([-25, 0])\n  .html(function(d) {\n    return \"<a target=_blank href= http://phagesdb.org> Actinobacteriophage Database </a>\";\n  })  \n      svg.call(tip);\n   \n  \n    \n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\")\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n   \n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n      \n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n      .append(\"g\");\n   \t\t\n   \n   \n   \n   \n   \n  \n var phamcheckbox = d3.selectAll(\"pham\")\n \t\t.data (json)\n    .enter()\n \t\t\t.append('div')\n \t\t\t.text(function(d,i){return d.pham + '';})\n\n   \n              \n     //document.getElementsByClassName(\"pham\")\n //  for (var i = 0; i < json.length; i++) \n  // {gene.append (\"input\")}\n \t\n  \n      \n      \n   //loop through checkboxes\n  //.html(\"<input id= 'phamily 1' type='checkbox' class='pham'>\");\n   \n   // .attr (\"fill\", function (d) {\n    //  if (clicked == true) {\n   //       return \"red\";\n   //   }\n    //  else {\n   //     return \"gray\";\n   //   } \n\n     //input id=\"Phamily 1\" type=\"checkbox\" class=\"pham\" ><label for=\"Phamily 1\">Phamily 1</label>\n  \n     //\t.getElementbyClass('pham')\n   \n   \n      gene.append(\"rect\")\n        .on('click', tip.show)\n       \t.on('dblclick', tip.hide)\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      .attr(\"fill\", function (d) {\n       if (d.direction == \"forward\") {\n          return \"purple\";\n        }\n        else if (d.direction == \"reverse\") {\n          return \"blue\";\n        }\n        else {\n          return \"black\";\n        }\n      })\n\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n\n   \n   \n   \n    \n // var fillcolor = document.getElementsByClassName(\"pham\")\n    //console.log(fillcolor);\n  \n     //if (pham.clicked == true) {\n     //  d.genes.style.fill =\"red\";\n    // }\n    // else {\n   //   d.genes.style.fill =\"gray\";\n   //  }\n //\n  \n   \n   \n   \n   \n   \n   \n  \n   \n      gene.append(\"text\")\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { \n            return -50;\n          }\n          else { return -10;} \n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { \n            return 50;\n          }\n          else { return 80;} \n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"white\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"blue\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n   \n   \n   \n});\n \n\n    \n    \n</script>", "description": "fresh block", "created_at": "2016-04-28T12:39:00Z", "updated_at": "2016-05-02T23:12:46Z", "api": ["d3.selectAll", "d3.select", "d3.json", "d3.max", "d3.tip", "d3.range"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/BDAguila/'>BDAguila</a>'s block: <a href='http://bl.ocks.org/BDAguila/f2befd433e182193027dfa1d1b7a65d4'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/BDAguila/'>BDAguila</a>'s block: <a href='http://bl.ocks.org/BDAguila/19c88beca509ce5195643099f5740838'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/ericamartel/'>ericamartel</a>'s block: <a href='http://bl.ocks.org/ericamartel/9409231fdbdc710dcbb46cff643f86c9'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/c185b3758e7fd011f9a32a3c0b806839'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/BDAguila/'>BDAguila</a>'s block: <a href='http://bl.ocks.org/BDAguila/da3f27dd8be82859b45e14898aa7fce0'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/ericamartel/'>ericamartel</a>'s block: <a href='http://bl.ocks.org/ericamartel/32d4c5badc4534da66b827122d6a1831'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/ericamartel/'>ericamartel</a>'s block: <a href='http://bl.ocks.org/ericamartel/ba1beb933b849d986453f374c9cfd206'>fresh block</a>", "uid": "ericamartel_b895d79139c315b4a14c7c4f63a9b00e"}, {"code": "<script>\n  \tvar svg = d3.select(\"#chartArea\").attr(\"height\", 1000);\n \t\td3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    //console.log(json);\n\n\n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter().append('svg').attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    })\n    .attr('height','500')\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\") // background for ruler\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n      .append(\"g\");\n      gene.append(\"rect\")\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      \n      \n      .attr(\"fill\", function (d) {\n     var C=0;\n     var G=0;\n     var min = 100;\n     var max = 0;\n     for(var i=0; i<=d.sequence.length;i++){\n       if(d.sequence[i]===\"C\")\n         {C++;}\n       else if (d.sequence[i]===\"G\")\n         {G++;}\n     }\n        var total=C+G;\n        //var toPercent = d3.format(\"%\");\n        var grandtotal = (total / d.sequence.length)*255;\n        if (grandtotal < min) {\n          min = grandtotal;\n        }\n        if (grandtotal > max) {\n          max = grandtotal;\n        } \n        //grandtotalhex = (grandtotal*255).toString(16);\n     \t\tconsole.log(d3.rgb(0, grandtotal, 0));\n       var Scale = d3.scale.linear()\n                     .domain([80,180])\n                     .range([0, 255]);\n        console.log(Scale(grandtotal));\n        return d3.rgb(0, Scale(grandtotal), 0);\n        //if (grandtotal <=0.5 ) {\n        //  return \"rgb(0, \" + (grandtotal) + \", 0)\";\n        //} \n        //else if (grandtotal >0.5) {\n        //  return \"rgb(0, \" + (grandtotal) + \", 0)\";\n        //}\n        //else {\n        //  return \"black\";\n        //}\n      })\n      \n      \n      \n      \n      \n      .on(\"mouseover\", function(d) {\n        console.log(d);\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", .9);\n        div\t.html(\"The direction of gene \" + d.name + \" is \" + d.direction)// the text of the tooltip ...\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      })\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n\n      gene.append(\"text\") // gene name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { // forward and even\n            return -50;\n          }\n          else { return -10;} // forward and odd\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { // reverse and even\n            return 50;\n          }\n          else { return 80;} //reverse and odd\n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"white\", \"font-weight\": \"bold\"})\n      .attr(\"font-family\", \"sans-serif\")\n       \n      .text(function(d){\n     var C=0;\n     var G=0;\n     for(var i=0; i<=d.sequence.length;i++){\n       if(d.sequence[i]===\"C\")\n         {C++;}\n       else if (d.sequence[i]===\"G\")\n         {G++;}\n     }\n        var total=C+G;\n        var toPercent = d3.format(\"%\");\n        var grandtotal = toPercent(total / d.sequence.length)\n        { return (grandtotal) }\n      }\n         )\n   \n     \n              \n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\", \"font-weight\": \"bold\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n      updatex();\n\n  });\n  </script>\n    <script>\nfunction updatex(){    x=$('svg')[0];\ny=$('svg')[1];\nz=$('svg')[2];              \n$('#chart1').append(x);\n$('#chart2').append(y);       $('#chart3').append(z);\n $('#chart1 svg').css({position:'absolute',top:'280px'});\n$('#chart1').css({width: '1000'});               \n$('#chart2').css({width: '770', top:'220'});\n$('#chart2 svg').css({position:'absolute',top:'100px'});\n $('#chart2').css('top',220);                  \n $('#chart3 svg').css({position:'absolute',top:'-130px',height:1500}); \n$('#chart3').css({width: '650', 'top':550});                   \n}\n  </script>", "description": "genome browser", "created_at": "2016-04-28T02:08:43Z", "updated_at": "2016-04-28T02:10:41Z", "api": ["d3.json", "d3.select", "d3.max", "d3.range", "d3.format", "d3.rgb", "d3.scale.linear"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/7b750aac02c274ce7be1a2ec65681b6b'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/adf2f396ed6f7a06bcee6e03a6f2a375'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e594934db447063ce886b35c2e3ea0c3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/63b313292ecb948800fb1bebaef690b3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/73d2088a4754f9a3b46db81c3a12ca42'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/752ff3769123dd6f733dd1a0fd139698'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8e82406ccf2abef3600b5c63db1830ca'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/0bc494cbfc5dab3fbea588a6a7cc0cdb'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/e08d1b622815450a47a52deb8644533d'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e844a36eff424d262f3de5d9baa16b91'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/ThanisataS/'>ThanisataS</a>'s block: <a href='http://bl.ocks.org/ThanisataS/1e629563fec7314eae2a09fa71d732a7'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/ThanisataS/'>ThanisataS</a>'s block: <a href='http://bl.ocks.org/ThanisataS/237c8eea17f00059191c179f1452ebbf'>genome browser</a>", "uid": "ThanisataS_8fd328b681644fe4468c76d09ebdd59d"}, {"code": "<script>\n\nvar nodes = d3_array.range(1000).map(function(i) {\n  return {\n    index: i\n  };\n});\n\nvar links = d3_array.range(nodes.length - 1).map(function(i) {\n  return {\n    source: Math.floor(Math.sqrt(i)),\n    target: i + 1\n  };\n});\n\nvar meter = document.querySelector(\"#progress\"),\n    canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height;\n\nvar worker = new Worker(\"worker.js\");\n\nworker.postMessage({\n  nodes: nodes,\n  links: links\n});\n\nworker.onmessage = function(event) {\n  switch (event.data.type) {\n    case \"tick\": return ticked(event.data);\n    case \"end\": return ended(event.data);\n  }\n};\n\nfunction ticked(data) {\n  var progress = data.progress;\n\n  meter.style.width = 100 * progress + \"%\";\n}\n\nfunction ended(data) {\n  var nodes = data.nodes,\n      links = data.links;\n\n  meter.style.display = \"none\";\n\n  context.clearRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n\n  context.beginPath();\n  links.forEach(drawLink);\n  context.strokeStyle = \"#aaa\";\n  context.stroke();\n\n  context.beginPath();\n  nodes.forEach(drawNode);\n  context.fill();\n  context.strokeStyle = \"#fff\";\n  context.stroke();\n\n  context.restore();\n}\n\nfunction drawLink(d) {\n  context.moveTo(d.source.x, d.source.y);\n  context.lineTo(d.target.x, d.target.y);\n}\n\nfunction drawNode(d) {\n  context.moveTo(d.x + 3, d.y);\n  context.arc(d.x, d.y, 3, 0, 2 * Math.PI);\n}\n\n</script>", "description": "Force-Directed Web Worker", "created_at": "2016-04-28T01:39:48Z", "updated_at": "2016-04-28T14:19:08Z", "api": [], "readme": "This example demonstrates how to compute a static force-directed graph layout using [web workers](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/01ab2e85e8727d6529d20391c0fd9a16'>Force-Directed Web Worker</a>", "uid": "krishanson_27fbc6e2c20938ee03422fca42661c5f"}, {"code": "<script>\n\nvar n = 20;\n\nvar nodes = d3.range(n * n).map(function(i) {\n  return {\n    index: i\n  };\n});\n\nvar links = [];\n\nfor (var y = 0; y < n; ++y) {\n  for (var x = 0; x < n; ++x) {\n    if (y > 0) links.push({source: (y - 1) * n + x, target: y * n + x});\n    if (x > 0) links.push({source: y * n + (x - 1), target: y * n + x});\n  }\n}\n\nvar simulation = d3.forceSimulation(nodes)\n    .force(\"charge\", d3.forceManyBody().strength(-30))\n    .force(\"link\", d3.forceLink(links).strength(1).distance(20).iterations(10))\n    .on(\"tick\", ticked);\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height;\n\nd3.select(canvas)\n    .call(d3.drag()\n        .container(canvas)\n        .subject(dragsubject)\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended));\n\nfunction ticked() {\n  context.clearRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n\n  context.beginPath();\n  links.forEach(drawLink);\n  context.strokeStyle = \"#aaa\";\n  context.stroke();\n\n  context.beginPath();\n  nodes.forEach(drawNode);\n  context.fill();\n  context.strokeStyle = \"#fff\";\n  context.stroke();\n\n  context.restore();\n}\n\nfunction dragsubject() {\n  return simulation.find(d3.event.x - width / 2, d3.event.y - height / 2);\n}\n\nfunction dragstarted() {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d3.event.subject.fx = d3.event.subject.x;\n  d3.event.subject.fy = d3.event.subject.y;\n}\n\nfunction dragged() {\n  d3.event.subject.fx = d3.event.x;\n  d3.event.subject.fy = d3.event.y;\n}\n\nfunction dragended() {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d3.event.subject.fx = null;\n  d3.event.subject.fy = null;\n}\n\nfunction drawLink(d) {\n  context.moveTo(d.source.x, d.source.y);\n  context.lineTo(d.target.x, d.target.y);\n}\n\nfunction drawNode(d) {\n  context.moveTo(d.x + 3, d.y);\n  context.arc(d.x, d.y, 3, 0, 2 * Math.PI);\n}\n\n</script>", "description": "Force-Directed Lattice", "created_at": "2016-04-27T18:45:53Z", "updated_at": "2016-07-04T13:19:47Z", "api": ["d3.range", "d3.forceSimulation", "d3.forceManyBody", "d3.forceLink", "d3.select", "d3.drag"], "readme": "This demonstrates [*forceLink*.iterations](https://github.com/d3/d3-force#link_iterations), which strengthens [d3-force](https://github.com/d3/d3-force)\u2019s link constraint by applying the constraint multiple times per simulation step.\n", "uid": "mbostock_1b64ec067fcfc51e7471d944f51f1611"}, {"code": "<script>\n\nvar nodes = d3.range(1000).map(function(i) {\n  return {\n    index: i\n  };\n});\n\nvar links = d3.range(nodes.length - 1).map(function(i) {\n  return {\n    source: Math.floor(Math.sqrt(i)),\n    target: i + 1\n  };\n});\n\nvar meter = document.querySelector(\"#progress\"),\n    canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height;\n\nvar worker = new Worker(\"worker.js\");\n\nworker.postMessage({\n  nodes: nodes,\n  links: links\n});\n\nworker.onmessage = function(event) {\n  switch (event.data.type) {\n    case \"tick\": return ticked(event.data);\n    case \"end\": return ended(event.data);\n  }\n};\n\nfunction ticked(data) {\n  var progress = data.progress;\n\n  meter.style.width = 100 * progress + \"%\";\n}\n\nfunction ended(data) {\n  var nodes = data.nodes,\n      links = data.links;\n\n  meter.style.display = \"none\";\n\n  context.clearRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n\n  context.beginPath();\n  links.forEach(drawLink);\n  context.strokeStyle = \"#aaa\";\n  context.stroke();\n\n  context.beginPath();\n  nodes.forEach(drawNode);\n  context.fill();\n  context.strokeStyle = \"#fff\";\n  context.stroke();\n\n  context.restore();\n}\n\nfunction drawLink(d) {\n  context.moveTo(d.source.x, d.source.y);\n  context.lineTo(d.target.x, d.target.y);\n}\n\nfunction drawNode(d) {\n  context.moveTo(d.x + 3, d.y);\n  context.arc(d.x, d.y, 3, 0, 2 * Math.PI);\n}\n\n</script>", "description": "Force-Directed Web Worker", "created_at": "2016-04-26T22:17:48Z", "updated_at": "2016-07-04T13:19:23Z", "api": ["d3.range", "d3.forceSimulation", "d3.forceManyBody", "d3.forceLink", "d3.forceX", "d3.forceY"], "readme": "This example demonstrates how to compute a static force-directed graph layout using [web workers](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers).\n", "uid": "mbostock_01ab2e85e8727d6529d20391c0fd9a16"}, {"code": "<script>\n    \n \n    \n var svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n   document.getElementById(\"option\").onclick = function(d) {\n     // color genes by pham color\n     genes = d3.selectAll(\".genes\")\n     \t\t.attr(\"fill-opacity\", 1)\n\t\t\t\t.attr(\"fill\", function(d) {\n       \t\treturn d.pham_color;\n     \t\t})     \n     \n   };\n   \n   \n   document.getElementById(\"Abundance Color\").onclick = function(d) {\n     // color genes by pham color\n     genes = d3.selectAll(\".genetext\")\n     \t\t.attr(\"fill-opacity\", 0)\n\t\t\t\t.attr(\"fill\", function(d) {\n       \t\treturn d.pham_abundance/150;\n     \t\t})     \n     \n   };\n   \n   \n   \n function normcolor(d) {return d.pham_abundance/1};\n\n   document.getElementById(\"Abundance Color\").onclick = function(d) {\n     // color genes by abundance\n     genes = d3.selectAll(\".genes\")\n     \t\t.attr(\"fill\", \"black\")\n\t\t\t\t.attr(\"fill-opacity\", function(d) {\n       \t\treturn d.pham_abundance/150;\n     \t\t})     \n   \n   };\n   \n   function myFunction(d) {\n  return d.pham_abundance/150\n};\n\n\n   var tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return d.sequence;\n  })  \n      svg.call(tip);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\")\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n    \t\n      .attr(\"fill-opacity\", 1);\n   \n   \n\n   \n   \n   \n   gene = phage.selectAll(\".genes\")\n   \n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n   \n      .append(\"g\");\n      gene.append(\"rect\")\n         .on('mouseover', tip.show)\n       .on('mouseout', tip.hide)\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      \n      .attr(\"class\", \"genes\")\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n     \t     \t\t.attr(\"fill-opacity\", 1)\n\t\t\t\t.attr(\"fill\", function(d) {\n       \t\treturn d.pham_color;\n     \t\t})     \n      \n      \n      \n      \n\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n   \n\n      gene.append(\"text\")\n      .attr(\"class\", \".genetext\")\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { \n            return -50;\n          }\n          else { return -10;} \n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { \n            return 50;\n          }\n          else { return 80;} \n        }\n      })\n\t\t\t.style({\"text-anchor\": \"middle\", \"fill\": function (d){\n          return \"black\";\n      }})\n      .style({\"text-anchor\": \"middle\", \"fill\": function (d){\n          return \"black\";\n      }})\n      \n      \n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1)\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"blue\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham + \" (\"+ d.pham_abundance +\")\"})\n   \n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n  });\n    \n   \n    \n    \n  </script>", "description": "genome browser abundance version", "created_at": "2016-04-26T16:11:24Z", "updated_at": "2016-04-26T16:11:24Z", "api": ["d3.select", "d3.json", "d3.max", "d3.selectAll", "d3.tip", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/BDAguila/'>BDAguila</a>'s block: <a href='http://bl.ocks.org/BDAguila/42f1c37f325999025db3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/ericamartel/'>ericamartel</a>'s block: <a href='http://bl.ocks.org/ericamartel/cc6cd97c95a80f35c824cc24a5bf0f6d'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/2c6fa34a28b157e78a22fc93800f0bc7'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/6222544da1551c11d55b505edf4b88fa'>genome browser abundance version</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/dcd52a1daf6b00e5f0afa9b32e2ca043'>genome browser abundance version</a>\n\nforked from <a href='http://bl.ocks.org/jpnoll/'>jpnoll</a>'s block: <a href='http://bl.ocks.org/jpnoll/f8bacc54b016d6ea014e54d81f2b7e48'>genome browser abundance version</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/4d7dfded54d1e2162265862ffb178f4a'>genome browser abundance version</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/9d49a219f72d8958313eb7fd9f236936'>genome browser abundance version</a>\n\nforked from <a href='http://bl.ocks.org/diepvf/'>diepvf</a>'s block: <a href='http://bl.ocks.org/diepvf/77fe31d25ee5c4d03dfe0e0a4cc6e1ba'>genome browser abundance version</a>", "uid": "diepvf_116450605691903918b951a996fdfabf"}, {"code": "<script>\n  \n  \n var svg1 = d3.selectAll(\"#chartArea\").attr('height','100%');\n\n d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n   // console.log(json);\n   svg1.attr(\"class\", 'genechart');\n    svg1.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n\n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    var phage = svg1.selectAll(\"genechart\")\n      .data(json)\n      .enter().append('svg').attr('width','100%').attr('height','100%')\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\") // background for ruler\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { //console.log(i, d); \n      return d.genes;})\n      .enter()\n      .append(\"g\");\n      gene.append(\"rect\")\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      .attr(\"fill\", function (d) {\n        if (d.direction == \"forward\") {\n          return \"green\";\n        }\n        else if (d.direction == \"reverse\") {\n          return \"red\";\n        }\n        else {\n          return \"black\";\n        }\n      })\n      .on(\"mouseover\", function(d) {\n       // console.log(d);\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", .9);\n        div\t.html(\"The direction of gene \" + d.name + \" is \" + d.direction)// the text of the tooltip ...\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      })\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n\n      gene.append(\"text\") // gene name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { // forward and even\n            return -50;\n          }\n          else { return -10;} // forward and odd\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { // reverse and even\n            return 50;\n          }\n          else { return 80;} //reverse and odd\n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n      .attr(\"font-family\", \"sans-serif\")\n       \n      .text(function(d){\n     var C=0;\n     var G=0;\n     for(var i=0; i<=d.sequence.length;i++){\n       if(d.sequence[i]===\"C\")\n         {C++;}\n       else if (d.sequence[i]===\"G\")\n         {G++;}\n     }\n        var total=C+G;\n        var toPercent = d3.format(\"%\");\n        var grandtotal = toPercent(total / d.sequence.length)\n        { return (grandtotal) }\n      }\n         )\n   \n     \n              \n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"blue\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n  });\n  </script>", "description": "genome browser", "created_at": "2016-04-26T15:54:37Z", "updated_at": "2016-04-26T15:54:38Z", "api": ["d3.json", "d3.selectAll", "d3.max", "d3.select", "d3.range", "d3.format"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/7b750aac02c274ce7be1a2ec65681b6b'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/adf2f396ed6f7a06bcee6e03a6f2a375'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e594934db447063ce886b35c2e3ea0c3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/63b313292ecb948800fb1bebaef690b3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/ThanisataS/'>ThanisataS</a>'s block: <a href='http://bl.ocks.org/ThanisataS/c43c04a7fe0185ff10e0cc0c8d5ef625'>genome browser</a>", "uid": "dunlapea_55456ce447666876a32497dfa91c35d4"}, {"code": "<script>\n  \tvar svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n \t\td3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    //console.log(json);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n\n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\") // background for ruler\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n      .append(\"g\");\n      gene.append(\"rect\")\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      \n      \n      .attr(\"fill\", function (d) {\n     var C=0;\n     var G=0;\n     var min = 100;\n     var max = 0;\n     for(var i=0; i<=d.sequence.length;i++){\n       if(d.sequence[i]===\"C\")\n         {C++;}\n       else if (d.sequence[i]===\"G\")\n         {G++;}\n     }\n        var total=C+G;\n        //var toPercent = d3.format(\"%\");\n        var grandtotal = (total / d.sequence.length)*255;\n        if (grandtotal < min) {\n          min = grandtotal;\n        }\n        if (grandtotal > max) {\n          max = grandtotal;\n        } \n        //grandtotalhex = (grandtotal*255).toString(16);\n     \t\tconsole.log(d3.rgb(0, grandtotal, 0));\n       var Scale = d3.scale.linear()\n                     .domain([80,180])\n                     .range([0, 255]);\n        console.log(Scale(grandtotal));\n        return d3.rgb(0, Scale(grandtotal), 0);\n        //if (grandtotal <=0.5 ) {\n        //  return \"rgb(0, \" + (grandtotal) + \", 0)\";\n        //} \n        //else if (grandtotal >0.5) {\n        //  return \"rgb(0, \" + (grandtotal) + \", 0)\";\n        //}\n        //else {\n        //  return \"black\";\n        //}\n      })\n      \n      \n      \n      \n      \n      .on(\"mouseover\", function(d) {\n        console.log(d);\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", .9);\n        div\t.html(\"The direction of gene \" + d.name + \" is \" + d.direction)// the text of the tooltip ...\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      })\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n\n      gene.append(\"text\") // gene name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { // forward and even\n            return -50;\n          }\n          else { return -10;} // forward and odd\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { // reverse and even\n            return 50;\n          }\n          else { return 80;} //reverse and odd\n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"white\", \"font-weight\": \"bold\"})\n      .attr(\"font-family\", \"sans-serif\")\n       \n      .text(function(d){\n     var C=0;\n     var G=0;\n     for(var i=0; i<=d.sequence.length;i++){\n       if(d.sequence[i]===\"C\")\n         {C++;}\n       else if (d.sequence[i]===\"G\")\n         {G++;}\n     }\n        var total=C+G;\n        var toPercent = d3.format(\"%\");\n        var grandtotal = toPercent(total / d.sequence.length)\n        { return (grandtotal) }\n      }\n         )\n   \n     \n              \n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\", \"font-weight\": \"bold\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n  });\n  </script>", "description": "genome browser", "created_at": "2016-04-26T15:48:39Z", "updated_at": "2016-04-26T15:48:40Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range", "d3.format", "d3.rgb", "d3.scale.linear"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/7b750aac02c274ce7be1a2ec65681b6b'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/adf2f396ed6f7a06bcee6e03a6f2a375'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e594934db447063ce886b35c2e3ea0c3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/63b313292ecb948800fb1bebaef690b3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/73d2088a4754f9a3b46db81c3a12ca42'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/752ff3769123dd6f733dd1a0fd139698'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8e82406ccf2abef3600b5c63db1830ca'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/0bc494cbfc5dab3fbea588a6a7cc0cdb'>genome browser</a>", "uid": "ThanisataS_5e87818a12b3ef84f43e9c8415ad16a6"}, {"code": "<script>\n\nvar nodes = d3.range(1000).map(function(i) {\n  return {\n    index: i\n  };\n});\n\nvar links = d3.range(nodes.length - 1).map(function(i) {\n  return {\n    source: Math.floor(Math.sqrt(i)),\n    target: i + 1\n  };\n});\n\nvar simulation = d3.forceSimulation(nodes)\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"link\", d3.forceLink(links).distance(20).strength(1))\n    .force(\"x\", d3.forceX())\n    .force(\"y\", d3.forceY())\n    .on(\"tick\", ticked);\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height;\n\nd3.select(canvas)\n    .call(d3.drag()\n        .container(canvas)\n        .subject(dragsubject)\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended));\n\nfunction ticked() {\n  context.clearRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n\n  context.beginPath();\n  links.forEach(drawLink);\n  context.strokeStyle = \"#aaa\";\n  context.stroke();\n\n  context.beginPath();\n  nodes.forEach(drawNode);\n  context.fill();\n  context.strokeStyle = \"#fff\";\n  context.stroke();\n\n  context.restore();\n}\n\nfunction dragsubject() {\n  return simulation.find(d3.event.x - width / 2, d3.event.y - height / 2);\n}\n\nfunction dragstarted() {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d3.event.subject.fx = d3.event.subject.x;\n  d3.event.subject.fy = d3.event.subject.y;\n}\n\nfunction dragged() {\n  d3.event.subject.fx = d3.event.x;\n  d3.event.subject.fy = d3.event.y;\n}\n\nfunction dragended() {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d3.event.subject.fx = null;\n  d3.event.subject.fy = null;\n}\n\nfunction drawLink(d) {\n  context.moveTo(d.source.x, d.source.y);\n  context.lineTo(d.target.x, d.target.y);\n}\n\nfunction drawNode(d) {\n  context.moveTo(d.x + 3, d.y);\n  context.arc(d.x, d.y, 3, 0, 2 * Math.PI);\n}\n\n</script>", "description": "Force-Directed Tree", "created_at": "2016-04-25T17:58:32Z", "updated_at": "2016-10-12T04:36:58Z", "api": ["d3.range", "d3.forceSimulation", "d3.forceManyBody", "d3.forceLink", "d3.forceX", "d3.forceY", "d3.select", "d3.drag"], "readme": "This randomly-generated tree is positioned using a force simulation.\n", "uid": "mbostock_95aa92e2f4e8345aaa55a4a94d41ce37"}, {"code": "<script>\nvar genomelength = 80000\n    \nvar keystone = d3.svg.arc()\n  .innerRadius(230)\n  .outerRadius(250)\n  .startAngle(-0.0436332)\n  .endAngle(0.0436332)\n    \nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-5, 5])\n  .html(function(d) {\n    return \"<strong>GP:</strong> <span style='color:red'>\" + d.name + \"</span>\";\n  })\n    \nvar chart = d3.select(\"body\").append(\"svg:svg\")\n\t.attr(\"class\", \"chart\")\n\t.attr(\"width\", 700)\n\t.attr(\"height\", 700).append(\"svg:g\")\n\t.attr(\"transform\", \"translate(400,400)\")  \n\t;    \nd3.json(\"genes.json.txt\", function(error, json) {\n\tif (error) return console.warn(error);\n    \nvar arcg = d3.svg.arc()\n\t.innerRadius(function(d){if (d.name%2==0)\n        return 290\n      else if (d.name%2==1)\n        return 250;})\n\t.outerRadius(function(d){if (d.name%2==0)\n        return 330\n      else if (d.name%2==1)\n        return 290;})\n\t.startAngle(function(d, i){\n      return ((d.start/genomelength)*6.2)+0.0436332;})\n  .endAngle(function(d, i){\n      return ((d.stop/genomelength)*6.2)+0.0436332;})\n\t\t\t;\n      \nchart.call(tip);\n  \n      \nchart.selectAll(\"path\")\n\t.data(json)\n\t.enter().append(\"svg:path\")\n\t.style(\"fill\", function(d, i){\n      if (d.direction==\"forward\")\n\t\t\t\treturn \"green\"\n      else if (d.direction==\"reverse\")\n        return \"red\";\n\t\t\t})\n  .style(\"stroke\", \"black\")\n  .attr(\"d\", arcg)\n  .style(\"opacity\", 0)\n  .on('mouseover', tip.show)\n  .on('mouseout', tip.hide)\n  .transition().duration(3000)\n  .style(\"opacity\",1)\n\t\t\t\nchart.append(\"circle\")\n   .attr({cx: 0, cy: 0, r: 250})\n   .style({ fill: \"gray\", opacity: 1})\n   .attr({stroke: \"black\"});\n    \n    //Keystone\nchart.append(\"path\")\n   .attr(\"d\", keystone)\n   .attr(\"fill\", \"black\")  \n      \n//Add code for line ticks\nvar r = d3.scale.linear()\n   .domain([0, 1])\n   .range([0, 200]);\n\n\n//default accessor [[x1,y1]] => radian and angle\nvar line = d3.svg.line.radial()\n   .radius(function(d){; return (r(d[1])); })  // will change between -1 and 1\n   .angle(function(d) { ;return d[0];});\n  \n  \n// radius axis\n// cheat with CSS\nvar gr = chart.append(\"g\")\n  .attr(\"class\", \"r axis\")\n  .selectAll(\"g\")\n  .data(r.ticks(10).slice(0))\n  .enter().append(\"g\");\n      \nvar thoutick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n  .data(d3.range(2.5, 357.5, (1000/genomelength)*355))\n  .enter().append(\"g\")\n  .attr(\"transform\", function(d) {\n      return \"rotate(\" + (d-90) + \")\"; });\n\nvar fhuntick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n  .data(d3.range(2.5, 357.5, (500/genomelength)*355))\n  .enter().append(\"g\")\n  .attr(\"transform\", function(d) {\n      return \"rotate(\" + (d-90) + \")\"; });\n\nvar fthotick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n  .data(d3.range(2.5, 357.5, (5000/genomelength)*355))\n  .enter().append(\"g\")\n  .attr(\"transform\", function(d) {\n      return \"rotate(\" + (d-90) + \")\"; });\n\nfthotick.append(\"line\")\n  .attr(\"x2\", 250);      \n \nfhuntick.append(\"line\")\n  .attr(\"x2\", 235);\n      \nthoutick.append(\"line\")\n  .attr(\"x2\", 240)\n  .style(\"stroke\", \"black\");\n    \nchart.append(\"circle\")\n  .attr({cx: 0, cy: 0, r: 230})\n  .attr({stroke: \"black\"})\n  .style({ fill: \"white\", opacity: 1});\n      \nfthotick.append(\"text\")\n  .attr(\"x\", 240)\n  .attr(\"dy\", \".35em\")\n  .style(\"text-anchor\", \"middle\")\n  .text(function(d) { return Math.ceil(((d-2.5)/355)*genomelength/1000); })\n  .style(\"fill\", \"white\")\n  .attr({stroke: \"none\"})\n  .attr({\"font-size\": \"14px\", \"font-family\": \"Arial\"})\n    ;      \n      ;})\n\nd3.json(\"repeats.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n  \nvar coor = json.coordinates;\n\nvar tipRepeat = d3.tip()\n  .attr('class', 'd3-tip1')\n  .offset([0,0])\n  .html(function(d) {\n    return \"<strong>Repeat:</strong> <span style='color:red'>\" + d.sequence + \"</span>\";\n  })\n  \nvar connectfunc = d3.svg.line()\n  .x(function(d){\n      return 230*(Math.sin(((d.start/genomelength)*6.2)+0.0436332));\n    })\n  .y(function(d){\n      return -230*(Math.cos( ((d.start/genomelength)*6.2)+0.0436332));\n    })\n  .interpolate(\"linear\")\n    ;\n  \nvar loc = chart.selectAll(\".loc\")\n  .data([coor])\n  .enter()\n  .append(\"svg:path\")\n    .attr(\"d\", function(d) {\n      return connectfunc(d);})\n    .attr(\"stroke\", \"blue\")\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke-width\", 2)\n    .style(\"opacity\", 0)\n    .on('mouseover', tipRepeat.show)\n    .on('mouseout', tipRepeat.hide)\n    .transition().duration(500).delay(1900)\n    .style(\"opacity\",1);\n      \nchart.call(tipRepeat);\n  \n   \n    ;})\n    \n  </script>", "description": "Repeat finder circle ruler arc genes line gen keystone numbering Tool tip repeat connect attempt1 line tool tips", "created_at": "2016-04-24T00:17:36Z", "updated_at": "2016-04-24T00:17:36Z", "api": ["d3.svg.arc", "d3.tip", "d3.select", "d3.json", "d3.scale.linear", "d3.svg.line.radial", "d3.range", "d3.svg.line"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/50f0b4412292163bf4b50d06253994ae'>Repeat finder circle ruler</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/f8f62045f69c65e3514cfe20f33fb9f1'>Repeat finder circle ruler</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/b4f37349887a4c178ef93ed855153605'>Repeat finder circle ruler arc genes</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/1431967216e048fcb4890445e1741c7c'>Repeat finder circle ruler arc genes</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/59d18946ec237fe864d70b811a62eddd'>Repeat finder circle ruler arc genes line gen keystone</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/9be28947eccefb1ac05598b8fbc53d27'>Repeat finder circle ruler arc genes line gen keystone numbering</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/0bbec668d5ba6765cc908eafd6c556fc'>Repeat finder circle ruler arc genes line gen keystone numbering path attempt1</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/7d41f75647bdc4fef8736442db42bad0'>Repeat finder circle ruler arc genes line gen keystone numbering Tool tip repeat connect attempt1</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/afc1b005be34f64b495b259263733b35'>Repeat finder circle ruler arc genes line gen keystone numbering Tool tip repeat connect attempt1</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/33505001b3f4ff96c29fcb15425b561b'>Repeat finder circle ruler arc genes line gen keystone numbering Tool tip repeat connect attempt1</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/90056c4e88c140345ac8a52b8999cf1c'>Repeat finder circle ruler arc genes line gen keystone numbering Tool tip repeat connect attempt1</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/0762f972ce5785f6efd4b975f2a95ff5'>Repeat finder circle ruler arc genes line gen keystone numbering Tool tip repeat connect attempt1 line tool tips</a>", "uid": "JohnWall64_5d3dcd2e01bff585e6928fa18626a958"}, {"code": "<script>\nvar genomelength = 80000\n    \nvar keystone = d3.svg.arc()\n  .innerRadius(230)\n  .outerRadius(250)\n  .startAngle(-0.0436332)\n  .endAngle(0.0436332)\n    \nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-5, 5])\n  .html(function(d) {\n    return \"<strong>GP:</strong> <span style='color:red'>\" + d.name + \"</span>\";\n  })\n    \nvar chart = d3.select(\"body\").append(\"svg:svg\")\n\t.attr(\"class\", \"chart\")\n\t.attr(\"width\", 700)\n\t.attr(\"height\", 700).append(\"svg:g\")\n\t.attr(\"transform\", \"translate(400,400)\")  \n\t;    \nd3.json(\"genes.json.txt\", function(error, json) {\n\tif (error) return console.warn(error);\n    \nvar arcg = d3.svg.arc()\n\t.innerRadius(function(d){if (d.name%2==0)\n        return 290\n      else if (d.name%2==1)\n        return 250;})\n\t.outerRadius(function(d){if (d.name%2==0)\n        return 330\n      else if (d.name%2==1)\n        return 290;})\n\t.startAngle(function(d, i){\n      return ((d.start/genomelength)*6.2)+0.0436332;})\n  .endAngle(function(d, i){\n      return ((d.stop/genomelength)*6.2)+0.0436332;})\n\t\t\t;\n      \nchart.call(tip);\n  \n      \nchart.selectAll(\"path\")\n\t.data(json)\n\t.enter().append(\"svg:path\")\n\t.style(\"fill\", function(d, i){\n      if (d.direction==\"forward\")\n\t\t\t\treturn \"green\"\n      else if (d.direction==\"reverse\")\n        return \"red\";\n\t\t\t})\n  .style(\"stroke\", \"black\")\n  .attr(\"d\", arcg)\n  .style(\"opacity\", 0)\n  .on('mouseover', tip.show)\n  .on('mouseout', tip.hide)\n  .transition().duration(3000)\n  .style(\"opacity\",1)\n\t\t\t\nchart.append(\"circle\")\n   .attr({cx: 0, cy: 0, r: 250})\n   .style({ fill: \"gray\", opacity: 1})\n   .attr({stroke: \"black\"});\n    \n    //Keystone\nchart.append(\"path\")\n   .attr(\"d\", keystone)\n   .attr(\"fill\", \"black\")  \n      \n//Add code for line ticks\nvar r = d3.scale.linear()\n   .domain([0, 1])\n   .range([0, 200]);\n\n\n//default accessor [[x1,y1]] => radian and angle\nvar line = d3.svg.line.radial()\n   .radius(function(d){; return (r(d[1])); })  // will change between -1 and 1\n   .angle(function(d) { ;return d[0];});\n  \n  \n// radius axis\n// cheat with CSS\nvar gr = chart.append(\"g\")\n  .attr(\"class\", \"r axis\")\n  .selectAll(\"g\")\n  .data(r.ticks(10).slice(0))\n  .enter().append(\"g\");\n      \nvar thoutick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n  .data(d3.range(2.5, 357.5, (1000/genomelength)*355))\n  .enter().append(\"g\")\n  .attr(\"transform\", function(d) {\n      return \"rotate(\" + (d-90) + \")\"; });\n\nvar fhuntick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n  .data(d3.range(2.5, 357.5, (500/genomelength)*355))\n  .enter().append(\"g\")\n  .attr(\"transform\", function(d) {\n      return \"rotate(\" + (d-90) + \")\"; });\n\nvar fthotick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n  .data(d3.range(2.5, 357.5, (5000/genomelength)*355))\n  .enter().append(\"g\")\n  .attr(\"transform\", function(d) {\n      return \"rotate(\" + (d-90) + \")\"; });\n\nfthotick.append(\"line\")\n  .attr(\"x2\", 250);      \n \nfhuntick.append(\"line\")\n  .attr(\"x2\", 235);\n      \nthoutick.append(\"line\")\n  .attr(\"x2\", 240)\n  .style(\"stroke\", \"black\");\n    \nchart.append(\"circle\")\n  .attr({cx: 0, cy: 0, r: 230})\n  .attr({stroke: \"black\"})\n  .style({ fill: \"white\", opacity: 1});\n      \nfthotick.append(\"text\")\n  .attr(\"x\", 240)\n  .attr(\"dy\", \".35em\")\n  .style(\"text-anchor\", \"middle\")\n  .text(function(d) { return Math.ceil(((d-2.5)/355)*genomelength/1000); })\n  .style(\"fill\", \"white\")\n  .attr({stroke: \"none\"})\n  .attr({\"font-size\": \"14px\", \"font-family\": \"Arial\"})\n    ;      \n      ;})\n\nd3.json(\"repeats.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\n\n  \nvar tipRepeat = d3.tip()\n  .attr('class', 'd3-tip1')\n  .offset([0,0])\n  .html(function(d) {\n    return \"<strong>Sequence:</strong> <span style='color:red'>\" + d.sequence + \"</span>\"+\"<br>\"+\"<strong>Width:</strong> <span style='color:red'>\" + d.width+\"</span>\"+\"<br>\"+\"<strong>E-value:</strong> <span style='color:red'>\" + d.Evalue   ;\n  });\n \nvar connectfunc = d3.svg.line()\n  .x(function(d){\n      return 230*(Math.sin(((d.start/genomelength)*6.2)+0.0436332));\n    })\n  .y(function(d){\n      return -230*(Math.cos( ((d.start/genomelength)*6.2)+0.0436332));\n    })\n  .interpolate(function(points) { return points.join(\"A 1,1 0 0 0 \"); })\n    ;\n  \nvar loc = chart.selectAll(\".loc\")\n  .data(json)\n  .enter()\n  .append(\"svg:path\")\n    .attr(\"d\", function(d) {\n      return connectfunc(d.coordinates);})\n    .attr(\"stroke\", \"blue\")\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke-width\", 2)\n    .style(\"opacity\", 0)\n    .on('mouseover', tipRepeat.show)\n    .on('mouseout', tipRepeat.hide)\n    .transition().duration(500).delay(1900)\n    .style(\"opacity\",1);\n      \nchart.call(tipRepeat);\n  \n   \n    ;})\n    \n  </script>", "description": "Repeat finder circle ruler arc genes line gen keystone numbering Tool tip repeat connect line tool tips", "created_at": "2016-04-24T00:00:32Z", "updated_at": "2016-04-26T14:46:07Z", "api": ["d3.svg.arc", "d3.tip", "d3.select", "d3.json", "d3.scale.linear", "d3.svg.line.radial", "d3.range", "d3.svg.line"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/50f0b4412292163bf4b50d06253994ae'>Repeat finder circle ruler</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/f8f62045f69c65e3514cfe20f33fb9f1'>Repeat finder circle ruler</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/b4f37349887a4c178ef93ed855153605'>Repeat finder circle ruler arc genes</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/1431967216e048fcb4890445e1741c7c'>Repeat finder circle ruler arc genes</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/59d18946ec237fe864d70b811a62eddd'>Repeat finder circle ruler arc genes line gen keystone</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/9be28947eccefb1ac05598b8fbc53d27'>Repeat finder circle ruler arc genes line gen keystone numbering</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/0bbec668d5ba6765cc908eafd6c556fc'>Repeat finder circle ruler arc genes line gen keystone numbering path attempt1</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/7d41f75647bdc4fef8736442db42bad0'>Repeat finder circle ruler arc genes line gen keystone numbering Tool tip repeat connect attempt1</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/afc1b005be34f64b495b259263733b35'>Repeat finder circle ruler arc genes line gen keystone numbering Tool tip repeat connect attempt1</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/33505001b3f4ff96c29fcb15425b561b'>Repeat finder circle ruler arc genes line gen keystone numbering Tool tip repeat connect attempt1</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/90056c4e88c140345ac8a52b8999cf1c'>Repeat finder circle ruler arc genes line gen keystone numbering Tool tip repeat connect attempt1</a>", "uid": "grybnicky_0762f972ce5785f6efd4b975f2a95ff5"}, {"code": "<script>\n    var genomelength = 80000\n    \n    var keystone = d3.svg.arc()\n      .innerRadius(230)\n      .outerRadius(250)\n      .startAngle(-0.0436332)\n      .endAngle(0.0436332)\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n    var arc = d3.svg.arc()\n\t\t\t.innerRadius(function(d){if (d.name%2==0)\n          return 290\n        else if (d.name%2==1)\n          return 250;})\n\t\t\t.outerRadius(function(d){if (d.name%2==0)\n          return 330\n        else if (d.name%2==1)\n          return 290;})\n\t\t    .startAngle(function(d, i){return ((d.start/genomelength)*6.2)+0.0436332;})\n\t\t    .endAngle(function(d, i){return ((d.stop/genomelength)*6.2)+0.0436332;})\n\t\t\t;\n\n      \n\tvar chart = d3.select(\"body\").append(\"svg:svg\")\n\t\t\t.attr(\"class\", \"chart\")\n\t\t\t.attr(\"width\", 420)\n\t\t\t.attr(\"height\", 420).append(\"svg:g\")\n\t\t\t.attr(\"transform\", \"translate(400,400)\")\n      \n        \n\t\t\t;\n\n  \n      \n\tchart.selectAll(\"path\")\n\t\t\t.data(json)\n\t\t\t.enter().append(\"svg:path\")\n\t\t\t.style(\"fill\", function(d, i){ if (d.direction==\"forward\")\n\t\t\t\treturn \"green\"\n        else if (d.direction==\"reverse\")\n        return \"red\";\n\t\t\t})\n      .style(\"stroke\", \"black\")\n\t\t\t.attr(\"d\", arc)\n\t\t\t\n      \n    chart.append(\"circle\")\n      .attr({cx: 0, cy: 0, r: 250})\n      .style({ fill: \"gray\", opacity: 1})\n      .attr({stroke: \"black\"});\n    \n    //Keystone\n  chart.append(\"path\")\n      .attr(\"d\", keystone)\n      .attr(\"fill\", \"black\")\n      //.attr(\"stroke\", \"black\")  \n      \n//Add code for line ticks\nvar r = d3.scale.linear()\n    .domain([0, 1])\n    .range([0, 200]);\n\n\n//default accessor [[x1,y1]] => radian and angle\nvar line = d3.svg.line.radial()\n    .radius(function(d){; return (r(d[1])); })  // will change between -1 and 1\n    .angle(function(d) { ;return d[0];});\n  \n  \n// radius axis\n// cheat with CSS\nvar gr = chart.append(\"g\")\n  .attr(\"class\", \"r axis\")\n  .selectAll(\"g\")\n  .data(r.ticks(10).slice(0))\n  .enter().append(\"g\");\n      \nvar thoutick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (1000/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nvar fhuntick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (500/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nvar fthotick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (5000/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nfthotick.append(\"line\")\n    .attr(\"x2\", 250);      \n \nfhuntick.append(\"line\")\n    .attr(\"x2\", 235);\n      \nthoutick.append(\"line\")\n    .attr(\"x2\", 240)\n    .style(\"stroke\", \"black\");\n    \n    chart.append(\"circle\")\n      .attr({cx: 0, cy: 0, r: 230})\n      .attr({stroke: \"black\"})\n      .style({ fill: \"white\", opacity: 1});\n      \nfthotick.append(\"text\")\n    .attr(\"x\", 240)\n    .attr(\"dy\", \".35em\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) { return (((d-2.5)/355)*genomelength)/1000; })\n    .style(\"fill\", \"white\")\n    .attr({stroke: \"none\"})\n    .attr({\"font-size\": \"14px\", \"font-family\": \"Arial\"})\n    //.attr(\"transform\", \"rotate(90)\")\n    ;      \n//.range(start angle, stop angle, something) want to connect repeat 1 start and repeat 2 start, use as start and stop angles     \nvar data = d3.range(0, 20, .001).map(function(d) {\n  return [d/10,d/10 ];\n  });\n\n     chart.append(\"path\")\n    .datum(data)\n    .attr(\"class\", \"line\")\n    .attr(\"d\", line)\n      ;})\n\n     \n    \n  </script>", "description": "Repeat finder circle ruler arc genes line gen keystone numbering path attempt1", "created_at": "2016-04-22T20:09:47Z", "updated_at": "2016-04-22T20:09:47Z", "api": ["d3.svg.arc", "d3.json", "d3.select", "d3.scale.linear", "d3.svg.line.radial", "d3.range"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/50f0b4412292163bf4b50d06253994ae'>Repeat finder circle ruler</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/f8f62045f69c65e3514cfe20f33fb9f1'>Repeat finder circle ruler</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/b4f37349887a4c178ef93ed855153605'>Repeat finder circle ruler arc genes</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/1431967216e048fcb4890445e1741c7c'>Repeat finder circle ruler arc genes</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/59d18946ec237fe864d70b811a62eddd'>Repeat finder circle ruler arc genes line gen keystone</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/9be28947eccefb1ac05598b8fbc53d27'>Repeat finder circle ruler arc genes line gen keystone numbering</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/0bbec668d5ba6765cc908eafd6c556fc'>Repeat finder circle ruler arc genes line gen keystone numbering path attempt1</a>", "uid": "scresawn_b7c34de6536e00a4f11de558b916156a"}, {"code": "<script>\n    \n \n    \n var svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n   \n   /*changes color scheme when clicking Default pham color button*/\n   document.getElementById(\"option\").onclick = function(d) {\n     // color genes by pham color\n      d3.selectAll(\".genes\")\n     \t\t.transition().duration(1000) //fades to white\n     \t\t.attr(\"fill-opacity\", 0)\n     \t\t.transition().duration(2000) //fades to color scheme\n     \t\t.attr(\"fill-opacity\", 1)\n\t\t\t\t.attr(\"fill\", function(d) {\n       \t\treturn d.pham_color;\n        \n     \t\t});\n        d3.selectAll(\".genetext\") // changes text back to black\n     .transition().duration(1000)\n        .attr(\"fill-opacity\", 0) //fades to white\n      \t.style(\"fill\",\"black\")\n        .transition().duration(2000) //fades to black font\n        .attr(\"fill-opacity\", 1);       \n         \n   };\n   \n   \n\n/*changes color scheme when clicking pham abundance button*/\n   document.getElementById(\"Abundance Color\").onclick = function(d) {\n     // color genes by abundance\n      d3.selectAll(\".genes\")\n     \t\t.transition().duration(1000)\n     \t\t.attr(\"fill\", \"black\")\n     \t\t.attr(\"fill-opacity\", 0)\n     \t\t.transition().duration(2000)\n\t\t\t\t.attr(\"fill-opacity\", function(d) {\n       \t\treturn d.pham_abundance/150;  //sets grayscale for shades geneboxes\n     \t\t});\n    d3.selectAll(\".genetext\") \n    .transition().duration(1000)\n        .style({\"text-anchor\": \"middle\", \"fill\": function (d){\n if (d.pham_abundance/150 <= 0.5) {\n          return \"black\";\n        }\n        else if (d.pham_abundance > 0.5){\n          return \"white\";\n      }}})  // allows for dark boxes to have white text and light boxes to have dark text\n\n    .attr(\"fill-opacity\", 0)\n    .transition().duration(2000)\n    .attr(\"fill-opacity\", 1)\n\n   \n   };\n   \n\n\n\n   var tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return d.sequence;\n  })  \n      svg.call(tip);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\")\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n    \t\n      .attr(\"fill-opacity\", 1);\n   \n   \n\n   \n   \n   \n   gene = phage.selectAll(\"genes\")\n   \n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n   \n      .append(\"g\");\n      gene.append(\"rect\")\n         .on('mouseover', tip.show)\n       .on('mouseout', tip.hide)\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      \n      .attr(\"class\", \"genes\")\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n     \t     \t\t.attr(\"fill-opacity\", 1)\n\t\t\t\t.attr(\"fill\", function(d) {\n       \t\treturn d.pham_color;\n     \t\t})     \n      \n      \n      \n      \n\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n   \n\n      gene.append(\"text\")\n      .attr(\"class\", \"genetext\")\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { \n            return -50;\n          }\n          else { return -10;} \n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { \n            return 50;\n          }\n          else { return 80;} \n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1)\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"blue\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham + \" (\"+ d.pham_abundance +\")\"})\n   \n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n  });\n    \n   \n    \n    \n  </script>", "description": "genome browser abundance version", "created_at": "2016-04-22T19:42:41Z", "updated_at": "2016-04-28T14:44:58Z", "api": ["d3.select", "d3.json", "d3.max", "d3.selectAll", "d3.tip", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/BDAguila/'>BDAguila</a>'s block: <a href='http://bl.ocks.org/BDAguila/42f1c37f325999025db3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/ericamartel/'>ericamartel</a>'s block: <a href='http://bl.ocks.org/ericamartel/cc6cd97c95a80f35c824cc24a5bf0f6d'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/2c6fa34a28b157e78a22fc93800f0bc7'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/6222544da1551c11d55b505edf4b88fa'>genome browser abundance version</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/dcd52a1daf6b00e5f0afa9b32e2ca043'>genome browser abundance version</a>\n\nforked from <a href='http://bl.ocks.org/jpnoll/'>jpnoll</a>'s block: <a href='http://bl.ocks.org/jpnoll/f8bacc54b016d6ea014e54d81f2b7e48'>genome browser abundance version</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/4d7dfded54d1e2162265862ffb178f4a'>genome browser abundance version</a>", "uid": "lambrex_9d49a219f72d8958313eb7fd9f236936"}, {"code": "<script>\n    \n \n    \n var svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n   document.getElementById(\"option\").onclick = function(d) {\n     // color genes by pham color\n     genes = d3.selectAll(\".genes\")\n     \t\t.attr(\"fill-opacity\", 1)\n\t\t\t\t.attr(\"fill\", function(d) {\n       \t\treturn d.pham_color;\n     \t\t})     \n     //myFunction(d)\n   };\n function normcolor(d) {return d.pham_abundance/1};\n\n   document.getElementById(\"Abundance Color\").onclick = function(d) {\n     // color genes by abundance\n     genes = d3.selectAll(\".genes\")\n     \t\t.attr(\"fill\", \"black\")\n\t\t\t\t.attr(\"fill-opacity\", function(d) {\n       \t\treturn d.pham_abundance/150;\n     \t\t})     \n   };\n   \n   function myFunction(d) {\n  return d.pham_abundance/150\n};\n\n\n   var tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return d.sequence;\n  })  \n      svg.call(tip);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\")\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n    \t\n      .attr(\"fill-opacity\", 1);\n   \n   \n\n   \n   \n   \n   gene = phage.selectAll(\".genes\")\n   \n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n   \n      .append(\"g\");\n      gene.append(\"rect\")\n         .on('mouseover', tip.show)\n       .on('mouseout', tip.hide)\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      \n      .attr(\"class\", \"genes\")\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n     \t.attr(\"fill-opacity\", normcolor) \n      \n      \n      \n      \n\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n   \n\n      gene.append(\"text\")\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { \n            return -50;\n          }\n          else { return -10;} \n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { \n            return 50;\n          }\n          else { return 80;} \n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": function (d){\n if (d.pham_abundance/150 <= 0.5) {\n          return \"black\";\n        }\n        else if (d.pham_abundance >= 0.5){\n          return \"white\";\n      }}})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1)\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"blue\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham + \" (\"+ d.pham_abundance +\")\"})\n   \n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n  });\n    \n   \n    \n    \n  </script>", "description": "genome browser abundance version", "created_at": "2016-04-22T19:27:39Z", "updated_at": "2016-04-22T19:40:05Z", "api": ["d3.select", "d3.json", "d3.max", "d3.selectAll", "d3.tip", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/BDAguila/'>BDAguila</a>'s block: <a href='http://bl.ocks.org/BDAguila/42f1c37f325999025db3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/ericamartel/'>ericamartel</a>'s block: <a href='http://bl.ocks.org/ericamartel/cc6cd97c95a80f35c824cc24a5bf0f6d'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/2c6fa34a28b157e78a22fc93800f0bc7'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/6222544da1551c11d55b505edf4b88fa'>genome browser abundance version</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/dcd52a1daf6b00e5f0afa9b32e2ca043'>genome browser abundance version</a>\n\nforked from <a href='http://bl.ocks.org/jpnoll/'>jpnoll</a>'s block: <a href='http://bl.ocks.org/jpnoll/f8bacc54b016d6ea014e54d81f2b7e48'>genome browser abundance version</a>", "uid": "scresawn_4d7dfded54d1e2162265862ffb178f4a"}, {"code": "<script>\n\t\tfunction applyStyling(root) {\n\t\t\troot.nodes() \n\t\t\t\t.style('border', '1px solid #000000')\n\t\t\t\t.style('padding', '4px 8px')\n\t\t\t\t.style('background', \"lightblue\")\n\t\t\t\t.style('width', '100px')\n\t\t\t\t.on('mouseenter', function() {\n\t\t\t\t\td3.select(this).transition() \n\t\t\t\t\t\t.style('background', 'lightyellow')\n\t\t\t\t})\n\t\t\t\t.on('mouseleave', function() {\n\t\t\t\t\td3.select(this).transition()\n\t\t\t\t\t\t.style('background', '#eee')\n\t\t\t\t})\n\n\t\t\troot.childNodes() \n\t\t\t\t.style('background', 'lightblue')\n\t\t\t\t.style('width', '75px')\n\t\t\t\t.on('mouseenter', function() {\n\t\t\t\t\td3.select(this).transition()\n\t\t\t\t\t\t.style('background', '#cc3')\n\t\t\t\t})\n\t\t\t\t.on('mouseleave', function() {\n\t\t\t\t\td3.select(this).transition()\n\t\t\t\t\t\t.style('background', '#ccc')\n\t\t\t\t})\n\t\t}\n\t\t</script>\n  \n  \n<style>\n  \t.d3-tip {\n  line-height: 1;\n  font-weight: bold;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  border-radius: 2px;\n}\n.d3-tip:after {\n  box-sizing: border-box;\n  display: inline;\n  font-size: 10px;\n  width: 100%;\n  line-height: 1;\n  color: rgba(0, 0, 0, 0.8);\n  content: \"\\25BC\";\n  position: absolute;\n  text-align: center;\n}   \n  \n  .d3-tip.n:after {\n  margin: -1px 0 0 0;\n  top: 100%;\n  left: 0;\n}\n  </style>\n\n</head>\n\n<body>  \n  <div id='demo'></div>\n\t\t<script>\n\t\t\td3.element.dropdownmenu('#demo')\n\t\t\t\t.add({\n\t\t\t\t\t'Ex.' : {\n\t\t\t\t\t\t'Default' : \n            {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t'Color' : {\n\t\t\t\t\t\t'Default' : null,\n\t\t\t\t\t\t'Abundance' : null,\n\t\t\t\t\t},\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t})\n\t\t\t\t.show() // basic menu has been created\n\t\t\t\t.firstChildNode() // Option 1\n\t\t\t\t.nextSiblingNode() // Option 2\n\t\t\t\t.lastChildNode() // 1\n\t\t\t\t.add({\n\t\t\t\t\t'New Option 1' : null,\n\t\t\t\t\t'New Option 2' : null,\n\t\t\t\t})\n\t\t\t\t.add({\n\t\t\t\t\t'New Option 3' : null,\n\t\t\t\t})\n\t\t\t\t.lastChildNode()\n\t\t\t\t.add({\n\t\t\t\t\t'Option 2.1.3.A' : null,\n\t\t\t\t\t'Option 2.1.3.B' : null,\n\t\t\t\t})\n\t\t\t\t.root()\n\t\t\t\t.call(function(root) {\n\t\t\t\t\troot.select('#option3-2').style('color', 'blue')\n\t\t\t\t})\n\t\t\t\t.call(applyStyling) // defined in header\n\t\t\t\t.call(function(root) {\n\t\t\t\t\troot.childLink().horizontal() // make top level horizontal\n\t\t\t\t})\n\t\t\t\t.call(function(root) {\n\t\t\t\t\tvar option = root.firstChildNode();\n\t\t\t\t\tfor (var i = 0; option != null; option = option.firstChildNode()) {\n\t\t\t\t\t\toption.style('color', '#0' + (i%10) + (i%10));\n\t\t\t\t\t\ti+=3;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// center it\n\t\t\t\t.call(function(root) {\n\t\t\t\t\troot.style('position', 'relative')\n\t\t\t\t\t\t.style('left', '10%')\n\t\t\t    \t\t.style('margin-left', -parseInt(root.childLink().style('width'))/2 + 'px');\n\t\t\t\t})\n\t\t</script>\n  \n  \n  \n  <script>\n var svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n   var tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return d.sequence;\n  })  \n      svg.call(tip);\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n    phage.append(\"rect\")\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n      .append(\"g\");\n      gene.append(\"rect\")\n         .on('mouseover', tip.show)\n       .on('mouseout', tip.hide)\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n     .attr(\"fill-opacity\", function(d) {return (d.pham_abundance)/150})\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n      gene.append(\"text\")\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { \n            return -50;\n          }\n          else { return -10;} \n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { \n            return 50;\n          }\n          else { return 80;} \n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": function (d){\n if (d.pham_abundance/150 <= 0.5) {\n          return \"black\";\n        }\n        else if (d.pham_abundance >= 0.5){\n          return \"white\";\n      }}})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1)\n    gene.append(\"text\") \n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"blue\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham + \" (\"+ d.pham_abundance +\")\"})\n   \n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n   \n   \n   var select = d3.select(\"body\")\n   \t\t\t\t\t\t\t\t.append(\"div\")\n   \t\t\t\t\t\t\t\t.append(\"dropdown\")\n   \t\t\t\t\t\t\t\t\n   \t\t\t\t\t\t\t\t\n   \n   \n  });\n    \n    \n  </script>", "description": "Phamabundance", "created_at": "2016-04-22T18:23:41Z", "updated_at": "2016-04-22T19:13:41Z", "api": ["d3.select", "d3.element.dropdownmenu", "d3.json", "d3.max", "d3.tip", "d3.range", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jpnoll_12a91cc928de17b09856dc8c06dead2c"}, {"code": "<script>\n\nvar margin = {top: 40, right: 20, bottom: 20, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar randomX = d3.randomNormal(width / 2, 80),\n    randomY = d3.randomNormal(height / 2, 80),\n    points = d3.range(2000).map(function() { return [randomX(), randomY()]; });\n\nvar hexbin = d3_hexbin.hexbin()\n    .extent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]])\n    .radius(20);\n\nvar bins = hexbin(points);\n\nvar color = d3.scaleMagma()\n    .domain([d3.max(bins, function(d) { return d.length; }), 0]);\n\nvar x = d3.scaleIdentity()\n    .domain([0, width]);\n\nvar y = d3.scaleIdentity()\n    .domain([0, height]);\n\nvar xAxis = d3.axisTop(x);\n\nvar yAxis = d3.axisLeft(y);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"hexagons\")\n  .selectAll(\"path\")\n    .data(bins)\n  .enter().append(\"path\")\n    .attr(\"d\", hexbin.hexagon())\n    .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .style(\"fill\", function(d) { return color(d.length); });\n\nsvg.append(\"g\")\n    .attr(\"class\", \"axis axis--y\")\n    .call(yAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"axis axis--x\")\n    .call(xAxis);\n\n</script>", "description": "Hexagonal Binning", "created_at": "2016-04-21T19:05:15Z", "updated_at": "2016-09-07T21:47:41Z", "api": ["d3.randomNormal", "d3.range", "d3.scaleMagma", "d3.max", "d3.scaleIdentity", "d3.axisTop", "d3.axisLeft", "d3.select"], "readme": "A demonstration of the [d3-hexbin](https://github.com/d3/d3-hexbin) plugin for D3 4.0.\n", "uid": "mbostock_5583afd2a0d03b9c94918659fa151cac"}, {"code": "<script>\n var svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n\n   var tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return d.sequence;\n  })  \n      svg.call(tip);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\")\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n      .append(\"g\");\n      gene.append(\"rect\")\n         .on('mouseover', tip.show)\n       .on('mouseout', tip.hide)\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n     .attr(\"fill-opacity\", function(d) {return (d.pham_abundance)/150})\n\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n\n      gene.append(\"text\")\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { \n            return -50;\n          }\n          else { return -10;} \n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { \n            return 50;\n          }\n          else { return 80;} \n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": function (d){\n if (d.pham_abundance/150 <= 0.5) {\n          return \"black\";\n        }\n        else if (d.pham_abundance >= 0.5){\n          return \"white\";\n      }}})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1)\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"blue\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham + \" (\"+ d.pham_abundance +\")\"})\n   \n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n  });\n    \n    \n  </script>", "description": "genome browser abundance version1", "created_at": "2016-04-21T14:19:22Z", "updated_at": "2016-04-21T14:19:23Z", "api": ["d3.select", "d3.json", "d3.max", "d3.tip", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/BDAguila/'>BDAguila</a>'s block: <a href='http://bl.ocks.org/BDAguila/42f1c37f325999025db3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/ericamartel/'>ericamartel</a>'s block: <a href='http://bl.ocks.org/ericamartel/cc6cd97c95a80f35c824cc24a5bf0f6d'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/2c6fa34a28b157e78a22fc93800f0bc7'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/6222544da1551c11d55b505edf4b88fa'>genome browser abundance version</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/dcd52a1daf6b00e5f0afa9b32e2ca043'>genome browser abundance version1</a>", "uid": "diepvf_499a938e9f44ba8d9abc94151e8aa3f5"}, {"code": "<script>\n  \tvar svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n \t\td3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    //console.log(json);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n\n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\") // background for ruler\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n      .append(\"g\");\n      gene.append(\"rect\")\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      \n      \n      .attr(\"fill\", function (d) {\n     var C=0;\n     var G=0;\n     var min = 100;\n     var max = 0;\n     for(var i=0; i<=d.sequence.length;i++){\n       if(d.sequence[i]===\"C\")\n         {C++;}\n       else if (d.sequence[i]===\"G\")\n         {G++;}\n     }\n        var total=C+G;\n        //var toPercent = d3.format(\"%\");\n        var grandtotal = (total / d.sequence.length)*255;\n        if (grandtotal < min) {\n          min = grandtotal;\n        }\n        if (grandtotal > max) {\n          max = grandtotal;\n        } \n        //grandtotalhex = (grandtotal*255).toString(16);\n     \t\tconsole.log(d3.rgb(0, grandtotal, 0));\n       var Scale = d3.scale.linear()\n                     .domain([80,180])\n                     .range([0, 255]);\n        console.log(Scale(grandtotal));\n        return d3.rgb(0, Scale(grandtotal), 0);\n        //if (grandtotal <=0.5 ) {\n        //  return \"rgb(0, \" + (grandtotal) + \", 0)\";\n        //} \n        //else if (grandtotal >0.5) {\n        //  return \"rgb(0, \" + (grandtotal) + \", 0)\";\n        //}\n        //else {\n        //  return \"black\";\n        //}\n      })\n      \n      \n      \n      \n      \n      .on(\"mouseover\", function(d) {\n        console.log(d);\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", .9);\n        div\t.html(\"The direction of gene \" + d.name + \" is \" + d.direction)// the text of the tooltip ...\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      })\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n\n      gene.append(\"text\") // gene name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { // forward and even\n            return -50;\n          }\n          else { return -10;} // forward and odd\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { // reverse and even\n            return 50;\n          }\n          else { return 80;} //reverse and odd\n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"white\", \"font-weight\": \"bold\"})\n      .attr(\"font-family\", \"sans-serif\")\n       \n      .text(function(d){\n     var C=0;\n     var G=0;\n     for(var i=0; i<=d.sequence.length;i++){\n       if(d.sequence[i]===\"C\")\n         {C++;}\n       else if (d.sequence[i]===\"G\")\n         {G++;}\n     }\n        var total=C+G;\n        var toPercent = d3.format(\"%\");\n        var grandtotal = toPercent(total / d.sequence.length)\n        { return (grandtotal) }\n      }\n         )\n   \n     \n              \n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\", \"font-weight\": \"bold\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n  });\n  </script>", "description": "genome browser", "created_at": "2016-04-21T14:08:27Z", "updated_at": "2016-04-21T16:11:57Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range", "d3.format", "d3.rgb", "d3.scale.linear"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/7b750aac02c274ce7be1a2ec65681b6b'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/adf2f396ed6f7a06bcee6e03a6f2a375'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/e594934db447063ce886b35c2e3ea0c3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/63b313292ecb948800fb1bebaef690b3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/73d2088a4754f9a3b46db81c3a12ca42'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/752ff3769123dd6f733dd1a0fd139698'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8e82406ccf2abef3600b5c63db1830ca'>genome browser</a>", "uid": "dunlapea_0bc494cbfc5dab3fbea588a6a7cc0cdb"}, {"code": "<script>\n    var genomelength = 80000\n    \n    var keystone = d3.svg.arc()\n      .innerRadius(230)\n      .outerRadius(250)\n      .startAngle(-0.0436332)\n      .endAngle(0.0436332)\n    \n    var tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>GP:</strong> <span style='color:red'>\" + d.name + \"</span>\";\n  })\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n    var arc = d3.svg.arc()\n\t\t\t.innerRadius(function(d){if (d.name%2==0)\n          return 290\n        else if (d.name%2==1)\n          return 250;})\n\t\t\t.outerRadius(function(d){if (d.name%2==0)\n          return 330\n        else if (d.name%2==1)\n          return 290;})\n\t\t    .startAngle(function(d, i){return ((d.start/genomelength)*6.2)+0.0436332;})\n\t\t    .endAngle(function(d, i){return ((d.stop/genomelength)*6.2)+0.0436332;})\n\t\t\t;\n\n      \n\tvar chart = d3.select(\"body\").append(\"svg:svg\")\n\t\t\t.attr(\"class\", \"chart\")\n\t\t\t.attr(\"width\", 700)\n\t\t\t.attr(\"height\", 700).append(\"svg:g\")\n\t\t\t.attr(\"transform\", \"translate(400,400)\")  \n\t\t\t;\nchart.call(tip);\n  \n      \n\tchart.selectAll(\"path\")\n\t\t\t.data(json)\n\t\t\t.enter().append(\"svg:path\")\n\t\t\t.style(\"fill\", function(d, i){ if (d.direction==\"forward\")\n\t\t\t\treturn \"green\"\n        else if (d.direction==\"reverse\")\n        return \"red\";\n\t\t\t})\n      .style(\"stroke\", \"black\")\n\t\t\t.attr(\"d\", arc)\n\t\t\t.on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n      \n    chart.append(\"circle\")\n      .attr({cx: 0, cy: 0, r: 250})\n      .style({ fill: \"gray\", opacity: 1})\n      .attr({stroke: \"black\"});\n    \n    //Keystone\n  chart.append(\"path\")\n      .attr(\"d\", keystone)\n      .attr(\"fill\", \"black\")\n      //.attr(\"stroke\", \"black\")  \n      \n//Add code for line ticks\nvar r = d3.scale.linear()\n    .domain([0, 1])\n    .range([0, 200]);\n\n\n//default accessor [[x1,y1]] => radian and angle\nvar line = d3.svg.line.radial()\n    .radius(function(d){; return (r(d[1])); })  // will change between -1 and 1\n    .angle(function(d) { ;return d[0];});\n  \n  \n// radius axis\n// cheat with CSS\nvar gr = chart.append(\"g\")\n  .attr(\"class\", \"r axis\")\n  .selectAll(\"g\")\n  .data(r.ticks(10).slice(0))\n  .enter().append(\"g\");\n      \nvar thoutick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (1000/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nvar fhuntick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (500/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nvar fthotick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (5000/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nfthotick.append(\"line\")\n    .attr(\"x2\", 250);      \n \nfhuntick.append(\"line\")\n    .attr(\"x2\", 235);\n      \nthoutick.append(\"line\")\n    .attr(\"x2\", 240)\n    .style(\"stroke\", \"black\");\n    \n    chart.append(\"circle\")\n      .attr({cx: 0, cy: 0, r: 230})\n      .attr({stroke: \"black\"})\n      .style({ fill: \"white\", opacity: 1});\n      \nfthotick.append(\"text\")\n    .attr(\"x\", 240)\n    .attr(\"dy\", \".35em\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) { return Math.ceil(((d-2.5)/355)*genomelength/1000); })\n    .style(\"fill\", \"white\")\n    .attr({stroke: \"none\"})\n    .attr({\"font-size\": \"14px\", \"font-family\": \"Arial\"})\n    //.attr(\"transform\", \"rotate(90)\")\n    ;      \n      ;})\n\n     \n    \n  </script>", "description": "Repeat finder circle ruler arc genes line gen keystone numbering Tool tip", "created_at": "2016-04-21T14:04:30Z", "updated_at": "2016-04-21T16:21:35Z", "api": ["d3.svg.arc", "d3.tip", "d3.json", "d3.select", "d3.scale.linear", "d3.svg.line.radial", "d3.range"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/50f0b4412292163bf4b50d06253994ae'>Repeat finder circle ruler</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/f8f62045f69c65e3514cfe20f33fb9f1'>Repeat finder circle ruler</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/b4f37349887a4c178ef93ed855153605'>Repeat finder circle ruler arc genes</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/1431967216e048fcb4890445e1741c7c'>Repeat finder circle ruler arc genes</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/59d18946ec237fe864d70b811a62eddd'>Repeat finder circle ruler arc genes line gen keystone</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/9be28947eccefb1ac05598b8fbc53d27'>Repeat finder circle ruler arc genes line gen keystone numbering</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/0bbec668d5ba6765cc908eafd6c556fc'>Repeat finder circle ruler arc genes line gen keystone numbering path attempt1</a>", "uid": "grybnicky_7d41f75647bdc4fef8736442db42bad0"}, {"code": "<script>\n    var genomelength = 80000\n    \n    var keystone = d3.svg.arc()\n      .innerRadius(230)\n      .outerRadius(250)\n      .startAngle(-0.0436332)\n      .endAngle(0.0436332)\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n    var arc = d3.svg.arc()\n\t\t\t.innerRadius(function(d){if (d.name%2==0)\n          return 290\n        else if (d.name%2==1)\n          return 250;})\n\t\t\t.outerRadius(function(d){if (d.name%2==0)\n          return 330\n        else if (d.name%2==1)\n          return 290;})\n\t\t    .startAngle(function(d, i){return ((d.start/genomelength)*6.2)+0.0436332;})\n\t\t    .endAngle(function(d, i){return ((d.stop/genomelength)*6.2)+0.0436332;})\n\t\t\t;\n\n      \n\tvar chart = d3.select(\"body\").append(\"svg:svg\")\n\t\t\t.attr(\"class\", \"chart\")\n\t\t\t.attr(\"width\", 420)\n\t\t\t.attr(\"height\", 420).append(\"svg:g\")\n\t\t\t.attr(\"transform\", \"translate(400,400)\")\n      \n        \n\t\t\t;\n\n  \n      \n\tchart.selectAll(\"path\")\n\t\t\t.data(json)\n\t\t\t.enter().append(\"svg:path\")\n\t\t\t.style(\"fill\", function(d, i){ if (d.direction==\"forward\")\n\t\t\t\treturn \"green\"\n        else if (d.direction==\"reverse\")\n        return \"red\";\n\t\t\t})\n      .style(\"stroke\", \"black\")\n\t\t\t.attr(\"d\", arc)\n\t\t\t\n      \n    chart.append(\"circle\")\n      .attr({cx: 0, cy: 0, r: 250})\n      .style({ fill: \"gray\", opacity: 1})\n      .attr({stroke: \"black\"});\n    \n    //Keystone\n  chart.append(\"path\")\n      .attr(\"d\", keystone)\n      .attr(\"fill\", \"black\")\n      //.attr(\"stroke\", \"black\")  \n      \n//Add code for line ticks\nvar r = d3.scale.linear()\n    .domain([0, 1])\n    .range([0, 200]);\n\n\n//default accessor [[x1,y1]] => radian and angle\nvar line = d3.svg.line.radial()\n    .radius(function(d){; return (r(d[1])); })  // will change between -1 and 1\n    .angle(function(d) { ;return d[0];});\n  \n  \n// radius axis\n// cheat with CSS\nvar gr = chart.append(\"g\")\n  .attr(\"class\", \"r axis\")\n  .selectAll(\"g\")\n  .data(r.ticks(10).slice(0))\n  .enter().append(\"g\");\n      \nvar thoutick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (1000/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nvar fhuntick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (500/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nvar fthotick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (5000/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nfthotick.append(\"line\")\n    .attr(\"x2\", 250);      \n \nfhuntick.append(\"line\")\n    .attr(\"x2\", 235);\n      \nthoutick.append(\"line\")\n    .attr(\"x2\", 240)\n    .style(\"stroke\", \"black\");\n    \n    chart.append(\"circle\")\n      .attr({cx: 0, cy: 0, r: 230})\n      .attr({stroke: \"black\"})\n      .style({ fill: \"white\", opacity: 1});\n      \nfthotick.append(\"text\")\n    .attr(\"x\", 240)\n    .attr(\"dy\", \".35em\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) { return (((d-2.5)/355)*genomelength)/1000; })\n    .style(\"fill\", \"white\")\n    .attr({stroke: \"none\"})\n    .attr({\"font-size\": \"14px\", \"font-family\": \"Arial\"})\n    //.attr(\"transform\", \"rotate(90)\")\n    ;      \n//.range(start angle, stop angle, something) want to connect repeat 1 start and repeat 2 start, use as start and stop angles     \nvar data = d3.range(0, 20, .001).map(function(d) {\n  return [d/10,d/10 ];\n  });\n\n     chart.append(\"path\")\n    .datum(data)\n    .attr(\"class\", \"line\")\n    .attr(\"d\", line)\n      ;})\n\n     \n    \n  </script>", "description": "Repeat finder circle ruler arc genes line gen keystone numbering path attempt1", "created_at": "2016-04-21T01:53:02Z", "updated_at": "2016-04-21T02:15:54Z", "api": ["d3.svg.arc", "d3.json", "d3.select", "d3.scale.linear", "d3.svg.line.radial", "d3.range"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/50f0b4412292163bf4b50d06253994ae'>Repeat finder circle ruler</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/f8f62045f69c65e3514cfe20f33fb9f1'>Repeat finder circle ruler</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/b4f37349887a4c178ef93ed855153605'>Repeat finder circle ruler arc genes</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/1431967216e048fcb4890445e1741c7c'>Repeat finder circle ruler arc genes</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/59d18946ec237fe864d70b811a62eddd'>Repeat finder circle ruler arc genes line gen keystone</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/9be28947eccefb1ac05598b8fbc53d27'>Repeat finder circle ruler arc genes line gen keystone numbering</a>", "uid": "grybnicky_0bbec668d5ba6765cc908eafd6c556fc"}, {"code": "<script>\n \n    \n    var genomelength = 80000\n    \n    var keystone = d3.svg.arc()\n      .innerRadius(230)\n      .outerRadius(250)\n      .startAngle(-0.0436332)\n      .endAngle(0.0436332)\n    \n    \n var tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Name:</strong> <span style='color:red'>\" + d.name + \"</span>\";\n  }) \n\n\n \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n    var arc = d3.svg.arc()\n\t\t\t.innerRadius(function(d){if (d.name%2==0)\n          return 290\n        else if (d.name%2==1)\n          return 250;})\n\t\t\t.outerRadius(function(d){if (d.name%2==0)\n          return 330\n        else if (d.name%2==1)\n          return 290;})\n\t\t    .startAngle(function(d, i){return ((d.start/genomelength)*6.2)+0.0436332;})\n\t\t    .endAngle(function(d, i){return ((d.stop/genomelength)*6.2)+0.0436332;})\n\t\t\t;\n\n      \n\tvar chart = d3.select(\"body\").append(\"svg:svg\")\n\t\t\t.attr(\"class\", \"chart\")\n\t\t\t.attr(\"width\", 420)\n\t\t\t.attr(\"height\", 420).append(\"svg:g\")\n\t\t\t.attr(\"transform\", \"translate(400,400)\")\n\t\t\t;\nchart.call(tip);\n  \n      \n\tchart.selectAll(\"path\")\n\t\t\t.data(json)\n\t\t\t.enter().append(\"svg:path\")\n\t\t\t.style(\"fill\", function(d, i){ if (d.direction==\"forward\")\n\t\t\t\treturn \"green\"\n        else if (d.direction==\"reverse\")\n        return \"red\";\n\t\t\t})\n      .style(\"stroke\", \"black\")\n\t\t\t.attr(\"d\", arc)\n\t\t\t.on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n      \n    chart.append(\"circle\")\n      .attr({cx: 0, cy: 0, r: 250})\n      .style({ fill: \"gray\", opacity: 1})\n      .attr({stroke: \"black\"});\n    \n    //Keystone\n  chart.append(\"path\")\n      .attr(\"d\", keystone)\n      .attr(\"fill\", \"black\")\n      //.attr(\"stroke\", \"black\")  \n      \n//Add code for line ticks\nvar r = d3.scale.linear()\n    .domain([0, 1])\n    .range([0, 200]);\n\n\n//default accessor [[x1,y1]] => radian and angle\nvar line = d3.svg.line.radial()\n    .radius(function(d){; return (r(d[1])); })  // will change between -1 and 1\n    .angle(function(d) { ;return d[0];});\n  \n  \n// radius axis\n// cheat with CSS\nvar gr = chart.append(\"g\")\n  .attr(\"class\", \"r axis\")\n  .selectAll(\"g\")\n  .data(r.ticks(10).slice(0))\n  .enter().append(\"g\");\n      \nvar thoutick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (1000/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nvar fhuntick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (500/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nvar fthotick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (5000/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nfthotick.append(\"line\")\n    .attr(\"x2\", 250);      \n \nfhuntick.append(\"line\")\n    .attr(\"x2\", 235);\n      \nthoutick.append(\"line\")\n    .attr(\"x2\", 240)\n    .style(\"stroke\", \"black\");\n    \n    chart.append(\"circle\")\n      .attr({cx: 0, cy: 0, r: 230})\n      .attr({stroke: \"black\"})\n      .style({ fill: \"white\", opacity: 1});\n      ;})\n\n     \n    \n  </script>", "description": "fresh block", "created_at": "2016-04-21T01:42:15Z", "updated_at": "2016-04-21T01:42:15Z", "api": ["d3.svg.arc", "d3.tip", "d3.json", "d3.select", "d3.scale.linear", "d3.svg.line.radial", "d3.range"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/JohnWall64/'>JohnWall64</a>'s block: <a href='http://bl.ocks.org/JohnWall64/b8b38811c239925e9c579cc59ba568d2'>fresh block</a>", "uid": "JohnWall64_0b45df4222660357022e999fcb2df172"}, {"code": "<script>\n\nvar n = 4, // number of layers\n    m = 58, // number of samples per layer\n    stack = d3.layout.stack(),\n    layers = stack(d3.range(n).map(function() { return bumpLayer(m, .1); })),\n    yGroupMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y; }); }),\n    yStackMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); });\n\nvar margin = {top: 40, right: 10, bottom: 20, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .domain(d3.range(m))\n    .rangeRoundBands([0, width], .08);\n\nvar y = d3.scale.linear()\n    .domain([0, yStackMax])\n    .range([height, 0]);\n\nvar color = d3.scale.linear()\n    .domain([0, n - 1])\n    .range([\"#aad\", \"#556\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickSize(0)\n    .tickPadding(6)\n    .orient(\"bottom\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar layer = svg.selectAll(\".layer\")\n    .data(layers)\n  .enter().append(\"g\")\n    .attr(\"class\", \"layer\")\n    .style(\"fill\", function(d, i) { return color(i); });\n\nvar rect = layer.selectAll(\"rect\")\n    .data(function(d) { return d; })\n  .enter().append(\"rect\")\n    .attr(\"x\", function(d) { return x(d.x); })\n    .attr(\"y\", height)\n    .attr(\"width\", x.rangeBand())\n    .attr(\"height\", 0);\n\nrect.transition()\n    .delay(function(d, i) { return i * 10; })\n    .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n    .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); });\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nd3.selectAll(\"input\").on(\"change\", change);\n\nvar timeout = setTimeout(function() {\n  d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n}, 2000);\n\nfunction change() {\n  clearTimeout(timeout);\n  if (this.value === \"grouped\") transitionGrouped();\n  else transitionStacked();\n}\n\nfunction transitionGrouped() {\n  y.domain([0, yGroupMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"x\", function(d, i, j) { return x(d.x) + x.rangeBand() / n * j; })\n      .attr(\"width\", x.rangeBand() / n)\n    .transition()\n      .attr(\"y\", function(d) { return y(d.y); })\n      .attr(\"height\", function(d) { return height - y(d.y); });\n}\n\nfunction transitionStacked() {\n  y.domain([0, yStackMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n      .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); })\n    .transition()\n      .attr(\"x\", function(d) { return x(d.x); })\n      .attr(\"width\", x.rangeBand());\n}\n\n// Inspired by Lee Byron's test data generator.\nfunction bumpLayer(n, o) {\n\n  function bump(a) {\n    var x = 1 / (.1 + Math.random()),\n        y = 2 * Math.random() - .5,\n        z = 10 / (.1 + Math.random());\n    for (var i = 0; i < n; i++) {\n      var w = (i / n - y) * z;\n      a[i] += x * Math.exp(-w * w);\n    }\n  }\n\n  var a = [], i;\n  for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n  for (i = 0; i < 5; ++i) bump(a);\n  return a.map(function(d, i) { return {x: i, y: Math.max(0, d)}; });\n}\n\n</script>", "description": "Stacked-to-Grouped Bars", "created_at": "2016-04-20T22:10:38Z", "updated_at": "2016-04-20T22:10:38Z", "api": ["d3.layout.stack", "d3.range", "d3.max", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.selectAll"], "readme": "Switch between stacked and grouped layouts using sequenced transitions! Animations preserve object constancy and allow the user to follow the data across views. Animation design by [Heer and Robertson](http://vis.berkeley.edu/papers/animated_transitions/). Colors and data generation inspired by [Byron and Wattenberg](http://www.leebyron.com/else/streamgraph/).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3943967'>Stacked-to-Grouped Bars</a>", "uid": "piyushbhargava7_3fbc1276f4fef8dde67d3d9675903f23"}, {"code": "<script>\n      var outerWidth = 960;\n      var outerHeight = 500;\n      var margin = { left: 130, top: 44, right: 30, bottom: 47 };\n      var barPadding = 0.2;\n\n      var xColumn = \"country\";\n      var yColumn = \"population\";\n      var colorColumn = \"religion\";\n      var layerColumn = colorColumn;\n      \n      var hoveredColorValue;\n      var hoveredStrokeColor = \"black\";\n\n      var innerWidth  = outerWidth  - margin.left - margin.right;\n      var innerHeight = outerHeight - margin.top  - margin.bottom;\n\n      var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\",  outerWidth)\n        .attr(\"height\", outerHeight);\n      var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      \n      // This is the layer where the bars are drawn.\n      var baseBarLayer = g.append(\"g\");\n      \n      // This layer contains a semi-transparent overlay\n      // that fades out the base bars.\n      var overlayRect = g.append(\"g\")\n        .append(\"rect\")\n        .attr(\"width\", innerWidth)\n        .attr(\"height\", innerHeight)\n        .style(\"pointer-events\", \"none\");\n      \n      // This contains the subset of bars rendered on top\n      // when you hover over the entries in the color legend.\n      var foregroundBarLayer = g.append(\"g\");\n      \n      var xAxisG = g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + innerHeight + \")\");\n      var yAxisG = g.append(\"g\")\n        .attr(\"class\", \"y axis\");\n      var colorLegendG = g.append(\"g\")\n        .attr(\"class\", \"color-legend\")\n        .attr(\"transform\", \"translate(596, 0)\");\n\n      var xScale = d3.scale.ordinal().rangeBands([0, innerWidth], barPadding);\n      var yScale = d3.scale.linear().range([innerHeight, 0]);\n      var colorScale = d3.scale.category10();\n      \n      var tipNumberFormat = d3.format(\",\");\n      var tip = d3.tip()\n        .attr(\"class\", \"d3-tip\")\n        .offset([-10, 0])\n        .html(function(d) {\n          return [\n            d[colorColumn],\n            \" in \",\n            d[xColumn],\n            \": \",\n            tipNumberFormat(d[yColumn])\n          ].join(\"\");\n        });\n      g.call(tip);\n      \n      // Use a modified SI formatter that uses \"B\" for Billion.\n      var siFormat = d3.format(\"s\");\n      var customTickFormat = function (d){\n        return siFormat(d).replace(\"G\", \"B\");\n      };\n\n      var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\")\n        .outerTickSize(0);\n      var yAxis = d3.svg.axis().scale(yScale).orient(\"left\")\n        .ticks(5)\n        .tickFormat(customTickFormat)\n        .outerTickSize(0);\n\n      var colorLegend = d3.legend.color()\n        .scale(colorScale)\n        .shapePadding(6.24)\n        .shapeWidth(25)\n        .shapeHeight(25)\n        .labelOffset(5);\n\n      function render(data){\n\n        var nested = d3.nest()\n          .key(function (d){ return d[layerColumn]; })\n          .entries(data);\n\n        var stack = d3.layout.stack()\n          .y(function (d){ return d[yColumn]; })\n          .values(function (d){ return d.values; });\n\n        var layers = stack(nested.reverse()).reverse();\n\n        xScale.domain(layers[0].values.map(function (d){\n          return d[xColumn];\n        }));\n\n        yScale.domain([\n          0,\n          d3.max(layers, function (layer){\n            return d3.max(layer.values, function (d){\n              return d.y0 + d.y;\n            });\n          })\n        ]);\n\n        colorScale.domain(layers.map(function (layer){\n          return layer.key;\n        }));\n\n        xAxisG.call(xAxis); \n        yAxisG.call(yAxis);\n\n        renderBars(baseBarLayer, layers);\n        \n        if(hoveredColorValue){\n          setOverlayTransparency(0.7);\n          renderBars(foregroundBarLayer, layers.filter(function (layer){\n            return layer.key === hoveredColorValue;\n          }));\n        } else {\n          setOverlayTransparency(0.0);\n          renderBars(foregroundBarLayer, []);\n        }\n        \n        colorLegendG.call(colorLegend);\n        \n        // Move the text down a bit.\n        colorLegendG.selectAll(\"text\").attr(\"y\", 4);\n        \n        listenForHover(colorLegendG.selectAll(\"rect\"), data);\n        listenForHover(colorLegendG.selectAll(\"text\"), data);\n      }\n      \n      function setOverlayTransparency(alpha){\n        overlayRect\n          .transition().duration(400)\n          .attr(\"fill\", \"rgba(255, 255, 255, \" + alpha + \")\");\n      }\n      \n      function renderBars(g, layers){\n        var layerGs = g.selectAll(\".layer\").data(layers);\n        layerGs.enter().append(\"g\").attr(\"class\", \"layer\");\n        layerGs.exit().remove();\n        layerGs.style(\"fill\", function (d){\n          return colorScale(d.key);\n        });\n\n        var bars = layerGs.selectAll(\"rect\").data(function (d){\n          return d.values;\n        });\n        bars.enter().append(\"rect\")\n          .on(\"mouseover\", tip.show)\n          .on(\"mouseout\", tip.hide);\n        bars.exit().remove();\n        bars\n          .attr(\"x\", function (d){ return xScale(d[xColumn]); })\n          .attr(\"y\", function (d){ return yScale(d.y0 + d.y); })\n          .attr(\"width\", xScale.rangeBand())\n          .attr(\"height\", function (d){ return innerHeight - yScale(d.y); });\n      }\n      \n      function listenForHover(selection, data){\n        selection\n          .on(\"mouseover\", function (d){\n            hoveredColorValue = d;\n            render(data);\n          })\n          .on(\"mouseout\", function (d){\n            hoveredColorValue = null;\n            render(data);\n          })\n          .style(\"cursor\", \"pointer\");\n      }\n\n      function type(d){\n        d.population = +d.population;\n        return d;\n      }\n\n      var data = [\n        {\n          \"country\": \"China\",\n          \"religion\": \"Christian\",\n          \"population\": 68410000\n        },\n        {\n          \"country\": \"China\",\n          \"religion\": \"Muslim\",\n          \"population\": 24690000\n        },\n        {\n          \"country\": \"China\",\n          \"religion\": \"Unaffiliated\",\n          \"population\": 700680000\n        },\n        {\n          \"country\": \"China\",\n          \"religion\": \"Hindu\",\n          \"population\": 20000\n        },\n        {\n          \"country\": \"China\",\n          \"religion\": \"Buddhist\",\n          \"population\": 244130000\n        },\n        {\n          \"country\": \"China\",\n          \"religion\": \"Folk Religions\",\n          \"population\": 294320000\n        },\n        {\n          \"country\": \"China\",\n          \"religion\": \"Other Religions\",\n          \"population\": 9080000\n        },\n        {\n          \"country\": \"China\",\n          \"religion\": \"Jewish\",\n          \"population\": 0\n        },\n        {\n          \"country\": \"India\",\n          \"religion\": \"Christian\",\n          \"population\": 31130000\n        },\n        {\n          \"country\": \"India\",\n          \"religion\": \"Muslim\",\n          \"population\": 176190000\n        },\n        {\n          \"country\": \"India\",\n          \"religion\": \"Unaffiliated\",\n          \"population\": 870000\n        },\n        {\n          \"country\": \"India\",\n          \"religion\": \"Hindu\",\n          \"population\": 973750000\n        },\n        {\n          \"country\": \"India\",\n          \"religion\": \"Buddhist\",\n          \"population\": 9250000\n        },\n        {\n          \"country\": \"India\",\n          \"religion\": \"Folk Religions\",\n          \"population\": 5840000\n        },\n        {\n          \"country\": \"India\",\n          \"religion\": \"Other Religions\",\n          \"population\": 27560000\n        },\n        {\n          \"country\": \"India\",\n          \"religion\": \"Jewish\",\n          \"population\": 10000\n        },\n        {\n          \"country\": \"USA\",\n          \"religion\": \"Christian\",\n          \"population\": 243060000\n        },\n        {\n          \"country\": \"USA\",\n          \"religion\": \"Muslim\",\n          \"population\": 2770000\n        },\n        {\n          \"country\": \"USA\",\n          \"religion\": \"Unaffiliated\",\n          \"population\": 50980000\n        },\n        {\n          \"country\": \"USA\",\n          \"religion\": \"Hindu\",\n          \"population\": 1790000\n        },\n        {\n          \"country\": \"USA\",\n          \"religion\": \"Buddhist\",\n          \"population\": 3570000\n        },\n        {\n          \"country\": \"USA\",\n          \"religion\": \"Folk Religions\",\n          \"population\": 630000\n        },\n        {\n          \"country\": \"USA\",\n          \"religion\": \"Other Religions\",\n          \"population\": 1900000\n        },\n        {\n          \"country\": \"USA\",\n          \"religion\": \"Jewish\",\n          \"population\": 5690000\n        },\n        {\n          \"country\": \"Indonesia\",\n          \"religion\": \"Christian\",\n          \"population\": 23660000\n        },\n        {\n          \"country\": \"Indonesia\",\n          \"religion\": \"Muslim\",\n          \"population\": 209120000\n        },\n        {\n          \"country\": \"Indonesia\",\n          \"religion\": \"Unaffiliated\",\n          \"population\": 240000\n        },\n        {\n          \"country\": \"Indonesia\",\n          \"religion\": \"Hindu\",\n          \"population\": 4050000\n        },\n        {\n          \"country\": \"Indonesia\",\n          \"religion\": \"Buddhist\",\n          \"population\": 1720000\n        },\n        {\n          \"country\": \"Indonesia\",\n          \"religion\": \"Folk Religions\",\n          \"population\": 750000\n        },\n        {\n          \"country\": \"Indonesia\",\n          \"religion\": \"Other Religions\",\n          \"population\": 340000\n        },\n        {\n          \"country\": \"Indonesia\",\n          \"religion\": \"Jewish\",\n          \"population\": 0\n        },\n        {\n          \"country\": \"Brazil\",\n          \"religion\": \"Christian\",\n          \"population\": 173300000\n        },\n        {\n          \"country\": \"Brazil\",\n          \"religion\": \"Muslim\",\n          \"population\": 40000\n        },\n        {\n          \"country\": \"Brazil\",\n          \"religion\": \"Unaffiliated\",\n          \"population\": 15410000\n        },\n        {\n          \"country\": \"Brazil\",\n          \"religion\": \"Hindu\",\n          \"population\": 0\n        },\n        {\n          \"country\": \"Brazil\",\n          \"religion\": \"Buddhist\",\n          \"population\": 250000\n        },\n        {\n          \"country\": \"Brazil\",\n          \"religion\": \"Folk Religions\",\n          \"population\": 5540000\n        },\n        {\n          \"country\": \"Brazil\",\n          \"religion\": \"Other Religions\",\n          \"population\": 300000\n        },\n        {\n          \"country\": \"Brazil\",\n          \"religion\": \"Jewish\",\n          \"population\": 110000\n        }\n      ];\n\n      render(data);\n    </script>", "description": "[unlisted] Using Literal Data", "created_at": "2016-04-20T10:05:03Z", "updated_at": "2016-07-30T00:24:51Z", "api": ["d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.scale.category10", "d3.format", "d3.tip", "d3.svg.axis", "d3.legend.color", "d3.nest", "d3.layout.stack", "d3.max"], "readme": "This example shows how one can use an array literal as the data input to a visualization. Answers a question in the YouTube comments for the video [Splitting Charts (Part 1): Stacked & Grouped Bar Charts](https://www.youtube.com/watch?v=6Xynj_pBybc) by Maria Terekhina.\n\nforked from <a href='http://bl.ocks.org/curran/'>curran</a>'s block: <a href='http://bl.ocks.org/curran/805413fb3b2efaada1ce'>Stacked Bars</a>", "uid": "curran_bb9886529a77d4a3c0616b4b67a5ed66"}, {"code": "<script>\n\nvar correction = -45;\nvar correctionRad = Math.PI * 2 * (correction / 360);\n\nvar diameter = 960;\n\nvar tree = d3.layout.tree()\n    .size([90, diameter / 2 - 120])\n    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n\nvar diagonal = d3.svg.diagonal.radial()\n    .projection(function(d, i) { return [d.y, d.x / 180 * Math.PI + correctionRad + (i * Math.PI / 100)]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter - 150)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + diameter / 2 + \",\" + diameter / 2 + \")\");\n\nd3.json(\"flare.json\", function(error, root) {\n  if (error) throw error;\n\n  var nodes = tree.nodes(root),\n      links = tree.links(nodes);\n\n  var link = svg.selectAll(\".link\")\n      .data(links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal);\n\n  var node = svg.selectAll(\".node\")\n      .data(nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n       .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90 + correction) + \")translate(\" + d.y + \")\"; })\n\n  node.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n      .text(function(d) { return d.name; });\n});\n\nd3.select(self.frameElement).style(\"height\", diameter - 150 + \"px\");\n\n</script>", "description": "Radial Reingold\u2013Tilford Tree", "created_at": "2016-04-19T20:49:37Z", "updated_at": "2016-04-19T20:49:37Z", "api": ["d3.layout.tree", "d3.svg.diagonal.radial", "d3.select", "d3.json"], "readme": "The `tree` layout implements the Reingold-Tilford algorithm for efficient, tidy arrangement of layered nodes. The depth of nodes is computed by distance from the root, leading to a ragged appearance. Cartesian orientations are also supported. Implementation based on work by [Jeff Heer](http://jheer.org/) and [Jason Davies](http://www.jasondavies.com/) using [Buchheim et al.](http://www.springerlink.com/content/u73fyc4tlxp3uwt8/)'s linear-time variant of the Reingold-Tilford algorithm. Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, also courtesy Jeff Heer.\n\nCompare to this [Cartesian layout](/mbostock/4339184).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063550'>Radial Reingold\u2013Tilford Tree</a>\n\nforked from <a href='http://bl.ocks.org/trebor/'>trebor</a>'s block: <a href='http://bl.ocks.org/trebor/613b5c124e879dac7a91e99645ea8af6'>Radial Reingold\u2013Tilford Tree</a>\n\nforked from <a href='http://bl.ocks.org/trebor/'>trebor</a>'s block: <a href='http://bl.ocks.org/trebor/8f5746fd3c58993ecc7977c227e5de4b'>Radial Reingold\u2013Tilford Tree</a>\n\nforked from <a href='http://bl.ocks.org/trebor/'>trebor</a>'s block: <a href='http://bl.ocks.org/trebor/36a0fa91471b42da773550ea58c6e257'>Radial Reingold\u2013Tilford Tree</a>\n\nforked from <a href='http://bl.ocks.org/trebor/'>trebor</a>'s block: <a href='http://bl.ocks.org/trebor/2269cebaaf9b5a523f3ea11579fd9625'>Radial Reingold\u2013Tilford Tree</a>", "uid": "trebor_9d8c66d0db06f4896b245a94efa93d66"}, {"code": "<script>\n\nvar correction = -45;\nvar correctionRad = Math.PI * 2 * (correction / 360);\n\nvar diameter = 960;\n\nvar tree = d3.layout.tree()\n    .size([90, diameter / 2 - 120])\n    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n\nvar diagonal = d3.svg.diagonal.radial()\n    .projection(function(d) { return [d.y, d.x / 180 * Math.PI + correctionRad]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter - 150)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + diameter / 2 + \",\" + diameter / 2 + \")\");\n\nd3.json(\"flare.json\", function(error, root) {\n  if (error) throw error;\n\n  var nodes = tree.nodes(root),\n      links = tree.links(nodes);\n\n  var link = svg.selectAll(\".link\")\n      .data(links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal);\n\n  var node = svg.selectAll(\".node\")\n      .data(nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n       .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90 + correction) + \")translate(\" + d.y + \")\"; })\n\n  node.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n      .text(function(d) { return d.name; });\n});\n\nd3.select(self.frameElement).style(\"height\", diameter - 150 + \"px\");\n\n</script>", "description": "Radial Reingold\u2013Tilford Tree", "created_at": "2016-04-19T20:48:29Z", "updated_at": "2016-04-19T20:48:29Z", "api": ["d3.layout.tree", "d3.svg.diagonal.radial", "d3.select", "d3.json"], "readme": "The `tree` layout implements the Reingold-Tilford algorithm for efficient, tidy arrangement of layered nodes. The depth of nodes is computed by distance from the root, leading to a ragged appearance. Cartesian orientations are also supported. Implementation based on work by [Jeff Heer](http://jheer.org/) and [Jason Davies](http://www.jasondavies.com/) using [Buchheim et al.](http://www.springerlink.com/content/u73fyc4tlxp3uwt8/)'s linear-time variant of the Reingold-Tilford algorithm. Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, also courtesy Jeff Heer.\n\nCompare to this [Cartesian layout](/mbostock/4339184).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063550'>Radial Reingold\u2013Tilford Tree</a>\n\nforked from <a href='http://bl.ocks.org/trebor/'>trebor</a>'s block: <a href='http://bl.ocks.org/trebor/613b5c124e879dac7a91e99645ea8af6'>Radial Reingold\u2013Tilford Tree</a>\n\nforked from <a href='http://bl.ocks.org/trebor/'>trebor</a>'s block: <a href='http://bl.ocks.org/trebor/8f5746fd3c58993ecc7977c227e5de4b'>Radial Reingold\u2013Tilford Tree</a>\n\nforked from <a href='http://bl.ocks.org/trebor/'>trebor</a>'s block: <a href='http://bl.ocks.org/trebor/36a0fa91471b42da773550ea58c6e257'>Radial Reingold\u2013Tilford Tree</a>", "uid": "trebor_2269cebaaf9b5a523f3ea11579fd9625"}, {"code": "<script>\n\nvar correction = -45;\nvar correctionRad = Math.PI * 2 * (correction / 360);\n\nvar diameter = 960;\n\nvar tree = d3.layout.tree()\n    .size([90, diameter / 2 - 120])\n    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n\nvar diagonal = d3.svg.diagonal.radial()\n    .projection(function(d) { return [d.y, d.x / 180 * Math.PI + correctionRad]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter - 150)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + diameter / 2 + \",\" + diameter / 2 + \")\");\n\nd3.json(\"flare.json\", function(error, root) {\n  if (error) throw error;\n\n  var nodes = tree.nodes(root),\n      links = tree.links(nodes);\n\n  var link = svg.selectAll(\".link\")\n      .data(links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal);\n\n  var node = svg.selectAll(\".node\")\n      .data(nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n       .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90 + correction) + \")translate(\" + d.y + \")\"; })\n\n  node.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n      .text(function(d) { return d.name; });\n});\n\nd3.select(self.frameElement).style(\"height\", diameter - 150 + \"px\");\n\n</script>", "description": "Radial Reingold\u2013Tilford Tree", "created_at": "2016-04-19T20:43:23Z", "updated_at": "2016-04-19T20:43:24Z", "api": ["d3.layout.tree", "d3.svg.diagonal.radial", "d3.select", "d3.json"], "readme": "The `tree` layout implements the Reingold-Tilford algorithm for efficient, tidy arrangement of layered nodes. The depth of nodes is computed by distance from the root, leading to a ragged appearance. Cartesian orientations are also supported. Implementation based on work by [Jeff Heer](http://jheer.org/) and [Jason Davies](http://www.jasondavies.com/) using [Buchheim et al.](http://www.springerlink.com/content/u73fyc4tlxp3uwt8/)'s linear-time variant of the Reingold-Tilford algorithm. Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, also courtesy Jeff Heer.\n\nCompare to this [Cartesian layout](/mbostock/4339184).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063550'>Radial Reingold\u2013Tilford Tree</a>\n\nforked from <a href='http://bl.ocks.org/trebor/'>trebor</a>'s block: <a href='http://bl.ocks.org/trebor/613b5c124e879dac7a91e99645ea8af6'>Radial Reingold\u2013Tilford Tree</a>\n\nforked from <a href='http://bl.ocks.org/trebor/'>trebor</a>'s block: <a href='http://bl.ocks.org/trebor/8f5746fd3c58993ecc7977c227e5de4b'>Radial Reingold\u2013Tilford Tree</a>", "uid": "trebor_36a0fa91471b42da773550ea58c6e257"}, {"code": "<script>\n    var genomelength = 80000\n    \n    var keystone = d3.svg.arc()\n      .innerRadius(230)\n      .outerRadius(250)\n      .startAngle(-0.0436332)\n      .endAngle(0.0436332)\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n    var arc = d3.svg.arc()\n\t\t\t.innerRadius(function(d){if (d.name%2==0)\n          return 290\n        else if (d.name%2==1)\n          return 250;})\n\t\t\t.outerRadius(function(d){if (d.name%2==0)\n          return 330\n        else if (d.name%2==1)\n          return 290;})\n\t\t    .startAngle(function(d, i){return ((d.start/genomelength)*6.2)+0.0436332;})\n\t\t    .endAngle(function(d, i){return ((d.stop/genomelength)*6.2)+0.0436332;})\n\t\t\t;\n\n      \n\tvar chart = d3.select(\"body\").append(\"svg:svg\")\n\t\t\t.attr(\"class\", \"chart\")\n\t\t\t.attr(\"width\", 420)\n\t\t\t.attr(\"height\", 420).append(\"svg:g\")\n\t\t\t.attr(\"transform\", \"translate(400,400)\")\n\t\t\t;\n\n  \n      \n\tchart.selectAll(\"path\")\n\t\t\t.data(json)\n\t\t\t.enter().append(\"svg:path\")\n\t\t\t.style(\"fill\", function(d, i){ if (d.direction==\"forward\")\n\t\t\t\treturn \"green\"\n        else if (d.direction==\"reverse\")\n        return \"red\";\n\t\t\t})\n      .style(\"stroke\", \"black\")\n\t\t\t.attr(\"d\", arc)\n\t\t\t\n      \n    chart.append(\"circle\")\n      .attr({cx: 0, cy: 0, r: 250})\n      .style({ fill: \"gray\", opacity: 1})\n      .attr({stroke: \"black\"});\n    \n    //Keystone\n  chart.append(\"path\")\n      .attr(\"d\", keystone)\n      .attr(\"fill\", \"black\")\n      //.attr(\"stroke\", \"black\")  \n      \n//Add code for line ticks\nvar r = d3.scale.linear()\n    .domain([0, 1])\n    .range([0, 200]);\n\n\n//default accessor [[x1,y1]] => radian and angle\nvar line = d3.svg.line.radial()\n    .radius(function(d){; return (r(d[1])); })  // will change between -1 and 1\n    .angle(function(d) { ;return d[0];});\n  \n  \n// radius axis\n// cheat with CSS\nvar gr = chart.append(\"g\")\n  .attr(\"class\", \"r axis\")\n  .selectAll(\"g\")\n  .data(r.ticks(10).slice(0))\n  .enter().append(\"g\");\n      \nvar thoutick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (1000/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nvar fhuntick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (500/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nvar fthotick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (5000/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nfthotick.append(\"line\")\n    .attr(\"x2\", 250);      \n \nfhuntick.append(\"line\")\n    .attr(\"x2\", 235);\n      \nthoutick.append(\"line\")\n    .attr(\"x2\", 240)\n    .style(\"stroke\", \"black\");\n    \n    chart.append(\"circle\")\n      .attr({cx: 0, cy: 0, r: 230})\n      .attr({stroke: \"black\"})\n      .style({ fill: \"white\", opacity: 1});\n      ;})\n\n     \n    \n  </script>", "description": "Repeat finder circle ruler arc genes line gen keystone", "created_at": "2016-04-19T15:59:21Z", "updated_at": "2016-04-19T15:59:22Z", "api": ["d3.svg.arc", "d3.json", "d3.select", "d3.scale.linear", "d3.svg.line.radial", "d3.range"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/50f0b4412292163bf4b50d06253994ae'>Repeat finder circle ruler</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/f8f62045f69c65e3514cfe20f33fb9f1'>Repeat finder circle ruler</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/b4f37349887a4c178ef93ed855153605'>Repeat finder circle ruler arc genes</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/1431967216e048fcb4890445e1741c7c'>Repeat finder circle ruler arc genes</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/59d18946ec237fe864d70b811a62eddd'>Repeat finder circle ruler arc genes line gen keystone</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/9be28947eccefb1ac05598b8fbc53d27'>Repeat finder circle ruler arc genes line gen keystone</a>", "uid": "JohnWall64_38b37fc4dc5b6f773a8c57e84f933cc2"}, {"code": "<script>\n    var genomelength = 80000\n    \n    var keystone = d3.svg.arc()\n      .innerRadius(230)\n      .outerRadius(250)\n      .startAngle(-0.0436332)\n      .endAngle(0.0436332)\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n    var arc = d3.svg.arc()\n\t\t\t.innerRadius(function(d){if (d.name%2==0)\n          return 290\n        else if (d.name%2==1)\n          return 250;})\n\t\t\t.outerRadius(function(d){if (d.name%2==0)\n          return 330\n        else if (d.name%2==1)\n          return 290;})\n\t\t    .startAngle(function(d, i){return ((d.start/genomelength)*6.2)+0.0436332;})\n\t\t    .endAngle(function(d, i){return ((d.stop/genomelength)*6.2)+0.0436332;})\n\t\t\t;\n\n      \n\tvar chart = d3.select(\"body\").append(\"svg:svg\")\n\t\t\t.attr(\"class\", \"chart\")\n\t\t\t.attr(\"width\", 420)\n\t\t\t.attr(\"height\", 420).append(\"svg:g\")\n\t\t\t.attr(\"transform\", \"translate(400,400)\")\n      \n        \n\t\t\t;\n\n  \n      \n\tchart.selectAll(\"path\")\n\t\t\t.data(json)\n\t\t\t.enter().append(\"svg:path\")\n\t\t\t.style(\"fill\", function(d, i){ if (d.direction==\"forward\")\n\t\t\t\treturn \"green\"\n        else if (d.direction==\"reverse\")\n        return \"red\";\n\t\t\t})\n      .style(\"stroke\", \"black\")\n\t\t\t.attr(\"d\", arc)\n\t\t\t\n      \n    chart.append(\"circle\")\n      .attr({cx: 0, cy: 0, r: 250})\n      .style({ fill: \"gray\", opacity: 1})\n      .attr({stroke: \"black\"});\n    \n    //Keystone\n  chart.append(\"path\")\n      .attr(\"d\", keystone)\n      .attr(\"fill\", \"black\")\n      //.attr(\"stroke\", \"black\")  \n      \n//Add code for line ticks\nvar r = d3.scale.linear()\n    .domain([0, 1])\n    .range([0, 200]);\n\n\n//default accessor [[x1,y1]] => radian and angle\nvar line = d3.svg.line.radial()\n    .radius(function(d){; return (r(d[1])); })  // will change between -1 and 1\n    .angle(function(d) { ;return d[0];});\n  \n  \n// radius axis\n// cheat with CSS\nvar gr = chart.append(\"g\")\n  .attr(\"class\", \"r axis\")\n  .selectAll(\"g\")\n  .data(r.ticks(10).slice(0))\n  .enter().append(\"g\");\n      \nvar thoutick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (1000/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nvar fhuntick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (500/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nvar fthotick = chart.append(\"g\")\n  .attr(\"stroke\", \"black\")\n  .selectAll(\"g\")\n    .data(d3.range(2.5, 357.5, (5000/genomelength)*355))\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d-90) + \")\"; });\n\nfthotick.append(\"line\")\n    .attr(\"x2\", 250);      \n \nfhuntick.append(\"line\")\n    .attr(\"x2\", 235);\n      \nthoutick.append(\"line\")\n    .attr(\"x2\", 240)\n    .style(\"stroke\", \"black\");\n    \n    chart.append(\"circle\")\n      .attr({cx: 0, cy: 0, r: 230})\n      .attr({stroke: \"black\"})\n      .style({ fill: \"white\", opacity: 1});\n      \nfthotick.append(\"text\")\n    .attr(\"x\", 240)\n    .attr(\"dy\", \".35em\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) { return (((d-2.5)/355)*genomelength)/1000; })\n    .style(\"fill\", \"white\")\n    .attr({stroke: \"none\"})\n    .attr({\"font-size\": \"14px\", \"font-family\": \"Arial\"})\n    //.attr(\"transform\", \"rotate(90)\")\n    ;      \n      ;})\n\n     \n    \n  </script>", "description": "Repeat finder circle ruler arc genes line gen keystone numbering", "created_at": "2016-04-19T15:11:13Z", "updated_at": "2016-04-21T01:42:21Z", "api": ["d3.svg.arc", "d3.json", "d3.select", "d3.scale.linear", "d3.svg.line.radial", "d3.range"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/50f0b4412292163bf4b50d06253994ae'>Repeat finder circle ruler</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/f8f62045f69c65e3514cfe20f33fb9f1'>Repeat finder circle ruler</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/b4f37349887a4c178ef93ed855153605'>Repeat finder circle ruler arc genes</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/1431967216e048fcb4890445e1741c7c'>Repeat finder circle ruler arc genes</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/59d18946ec237fe864d70b811a62eddd'>Repeat finder circle ruler arc genes line gen keystone</a>", "uid": "grybnicky_9be28947eccefb1ac05598b8fbc53d27"}, {"code": "<script>\n var svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n\n   var tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return d.sequence;\n  })  \n      svg.call(tip);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\")\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n      .append(\"g\");\n      gene.append(\"rect\")\n         .on('mouseover', tip.show)\n       .on('mouseout', tip.hide)\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n     .attr(\"fill-opacity\", function(d) {return (d.pham_abundance)/150})\n\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n\n      gene.append(\"text\")\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { \n            return -50;\n          }\n          else { return -10;} \n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { \n            return 50;\n          }\n          else { return 80;} \n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": function (d){\n if (d.pham_abundance/150 <= 0.5) {\n          return \"black\";\n        }\n        else if (d.pham_abundance >= 0.5){\n          return \"white\";\n      }}})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1)\n\n    gene.append(\"text\") \n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"blue\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham + \" (\"+ d.pham_abundance +\")\"})\n   \n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n   \n   \n   var select = d3.select(\"body\")\n   \t\t\t\t\t\t\t\t.append(\"div\")\n   \t\t\t\t\t\t\t\t.append(\"dropdown\")\n   \t\t\t\t\t\t\t\t\n   \t\t\t\t\t\t\t\t\n   \n   \n\n  });\n    \n    \n  </script>", "description": "genome browser abundance version", "created_at": "2016-04-19T13:50:25Z", "updated_at": "2016-04-19T14:21:35Z", "api": ["d3.select", "d3.json", "d3.max", "d3.tip", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/BDAguila/'>BDAguila</a>'s block: <a href='http://bl.ocks.org/BDAguila/42f1c37f325999025db3'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/ericamartel/'>ericamartel</a>'s block: <a href='http://bl.ocks.org/ericamartel/cc6cd97c95a80f35c824cc24a5bf0f6d'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/2c6fa34a28b157e78a22fc93800f0bc7'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/6222544da1551c11d55b505edf4b88fa'>genome browser abundance version</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/dcd52a1daf6b00e5f0afa9b32e2ca043'>genome browser abundance version</a>", "uid": "jpnoll_0ba553dfc1c29bd8a92d9cc3817dff42"}, {"code": "<script>\n\nvar width = 960,\n    height = 136,\n    cellSize = 17,\n    margin = 14;\n\nvar format = d3.time.format(\"%x\");\n\nvar color = d3.scale.threshold()\n    .domain([51, 101, 151, 201, 301])\n    .range([\"#1a9850\", \"#fee08b\", \"#f46d43\", \"#d73027\", \"#a50026\", \"#67001f\"]);\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\");\n\nvar svg = d3.select(\"body\").selectAll(\"svg\")\n    .data(d3.range(2008, 2016))\n  .enter().append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height + margin)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + ((width - cellSize * 53) / 2) + \",\" + (height - cellSize * 7 - 1) + \")\");\n\nsvg.append(\"text\")\n    .attr(\"transform\", \"translate(-6,\" + cellSize * 3.5 + \")rotate(-90)\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) { return d; });\n\nvar rect = svg.selectAll(\".day\")\n    .data(function(d) { return d3.time.days(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"rect\")\n    .attr(\"class\", \"day\")\n    .attr(\"width\", cellSize)\n    .attr(\"height\", cellSize)\n    .attr(\"x\", function(d) { return d3.time.weekOfYear(d) * cellSize; })\n    .attr(\"y\", function(d) { return d.getDay() * cellSize; })\n    .datum(format);\n\nsvg.selectAll(\".month\")\n    .data(function(d) { return d3.time.months(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"path\")\n    .attr(\"class\", \"month\")\n    .attr(\"d\", monthPath);\n\nvar data = {}, remaining = 8; // parallel loading csv code from here: https://groups.google.com/forum/#!msg/d3-js/3Y9VHkOOdCM/YnmOPopWUxQJ\nd3.csv(\"/d/4c8f05129838a63ec90930f8c46262f0/Beijing_2008_HourlyPM2.5_created20140325.csv\", function(data_2008) {\n  data.yr_2008 = data_2008;\n  if (!--remaining) draw();\n})\n\nd3.csv(\"/d/4c8f05129838a63ec90930f8c46262f0/Beijing_2009_HourlyPM25_created20140709.csv\", function(data_2009) {\n  data.yr_2009 = data_2009;\n  if (!--remaining) draw();\n})\n\nd3.csv(\"/d/4c8f05129838a63ec90930f8c46262f0/Beijing_2010_HourlyPM25_created20140709.csv\", function(data_2010) {\n  data.yr_2010 = data_2010;\n  if (!--remaining) draw();\n})\n\nd3.csv(\"/d/4c8f05129838a63ec90930f8c46262f0/Beijing_2011_HourlyPM25_created20140709.csv\", function(data_2011) {\n  data.yr_2011 = data_2011;\n  if (!--remaining) draw();\n})\n\nd3.csv(\"/d/4c8f05129838a63ec90930f8c46262f0/Beijing_2012_HourlyPM2.5_created20140325.csv\", function(data_2012) {\n  data.yr_2012 = data_2012;\n  if (!--remaining) draw();\n})\n\nd3.csv(\"/d/4c8f05129838a63ec90930f8c46262f0/Beijing_2013_HourlyPM2.5_created20140325.csv\", function(data_2013) {\n  data.yr_2013 = data_2013;\n  if (!--remaining) draw();\n})\n\nd3.csv(\"/d/4c8f05129838a63ec90930f8c46262f0/Beijing_2014_HourlyPM25_created20150203.csv\", function(data_2014) {\n  data.yr_2014 = data_2014;\n  if (!--remaining) draw();\n})\n\nd3.csv(\"/d/4c8f05129838a63ec90930f8c46262f0/Beijing_2015_HourlyPM25_created20160201.csv\", function(data_2015) {\n  data.yr_2015 = data_2015;\n  if (!--remaining) draw();\n})\n\nfunction draw() {\n  data = d3.entries(data);\n\n  data.forEach(function(dataset) {\n    dataset.value = dataset.value.filter(function(d) { // only want valid readings\n      return d[\"QC Name\"] == \"Valid\" && d[\"Value\"] != \"-999\";\n    });\n  });\n\n  var flatData = d3.merge(data.map(function(d) { return d.value; }));\n\n  var dailyAvg = d3.nest()\n    .key(function(d) {\n      return format(new Date(d.Year, d.Month - 1, d.Day));\n    })\n    .rollup(function(hourlyReadings) {\n      if (hourlyReadings.length != 24) {\n        return \"N/A\";\n      }\n      return d3.sum(hourlyReadings, function(d) { return +d.Value; }) / 24\n    })\n    .map(flatData)\n\n  var key = { \"#1a9850\": \"Good\", \"#fee08b\": \"Moderate\", \"#f46d43\": \"Unhealthy for sensitive groups\",\n              \"#d73027\": \"Unhealthy\", \"#a50026\": \"Very Unhealthy\", \"#67001f\": \"Hazardous\" };\n\n  var calBounds = { \"cal2008\": { top: 150 }, \"cal2009\": { top: 255 }, \"cal2010\" : { top: 409 },\n                    \"cal2011\": { top: 563 }, \"cal2012\": { top: 718 }, \"cal2013\" : { top: 870 },\n                    \"cal2014\" : { top: 1024 }, \"cal2015\": { top: 1179 } };\n\n  var calTooltipTop = { \"cal2008\": 60, \"cal2009\": 217, \"cal2010\": 372, \"cal2011\": 525,\n                        \"cal2012\": 679, \"cal2013\": 833, \"cal2014\": 987, \"cal2015\": 1142 };\n\n  d3.keys(calBounds).forEach(function(cal) {\n    calBounds[cal].bottom = calBounds[cal].top + 114;\n  });\n\n  rect\n    .style(\"fill\", function(d) { // d here is the date sring for each day\n      if (dailyAvg[d] && dailyAvg[d] !== \"N/A\") {\n        return color(dailyAvg[d]);\n      }\n    })\n    .on(\"mouseover\", function(d) {\n      tooltip.html(\"\");\n      tooltip.append(\"pre\").attr(\"class\", \"tooltip_body\");\n      tooltip.select(\".tooltip_body\")\n        .text(\n           \"Date: \" + d + \"\\t Reading: \" + (dailyAvg[d] && dailyAvg[d] !== \"N/A\" ? d3.round(dailyAvg[d], 2) + \" g/cu PM2.5  \\t\" + \"Air Quality: \" + key[color(dailyAvg[d])] : \"No Data\")\n        );\n       return tooltip.style(\"visibility\", \"visible\");\n    })\n    .on(\"mousemove\", function() {\n      var y = d3.event.pageY;\n      var currentCal = \"\";\n\n      d3.keys(calBounds).forEach(function(cal) {\n        if (y >= calBounds[cal].top && y <= calBounds[cal].bottom) {\n          currentCal = cal;\n        }\n      });\n      return tooltip.style(\"top\", calTooltipTop[currentCal] + \"px\").style(\"left\", \"45px\");\n    })\n}\n\nfunction monthPath(t0) {\n  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),\n      d0 = t0.getDay(), w0 = d3.time.weekOfYear(t0),\n      d1 = t1.getDay(), w1 = d3.time.weekOfYear(t1);\n\n  return \"M\" + (w0 + 1) * cellSize + \",\" + d0 * cellSize\n      + \"H\" + w0 * cellSize + \"V\" + 7 * cellSize\n      + \"H\" + w1 * cellSize + \"V\" + (d1 + 1) * cellSize\n      + \"H\" + (w1 + 1) * cellSize + \"V\" + 0\n      + \"H\" + (w0 + 1) * cellSize + \"Z\";\n}\n\n</script>", "description": "Beijing Air Quality 2", "created_at": "2016-04-17T00:56:05Z", "updated_at": "2016-04-17T04:35:59Z", "api": ["d3.time.format", "d3.scale.threshold", "d3.select", "d3.range", "d3.time.days", "d3.time.weekOfYear", "d3.time.months", "d3.csv", "d3.entries", "d3.merge", "d3.nest", "d3.sum", "d3.keys", "d3.round"], "readme": "Beijing Air Quality Data recorded at the US Embassy in Beijing over the past 8 years and fed into [Mike's Calendar block](http://bl.ocks.org/mbostock/4063318).\n\nData is from [US State Department](http://www.stateair.net/web/historical/1/1.html) and is not fully validated or verified.", "uid": "dhoboy_19d5d6dda01690e314e9a14a3cc3118e"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"https://numeracy.co/projects/4qB9fPoRLRU/deaths-by-state?format=csv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.deaths_per_mil = parseFloat(d.deaths_per_mil);\n    d.violent_crime = +d.violent_crime;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.violent_crime; })).nice();\n  y.domain(d3.extent(data, function(d) { return d.deaths_per_mil; })).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Violent Crime (per 100,000)\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Police-involved deaths (per million)\")\n\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 4)\n      .attr(\"cx\", function(d) { return x(d.violent_crime); })\n      .attr(\"cy\", function(d) { return y(d.deaths_per_mil); })\n      .style(\"fill\", function(d) { return \"#5cb3ff\" })\n  \t\t.append(\"svg:title\")\n  \t\t\t.text(function(d) { return d.state });\n\n});\n\n</script>", "description": "Rate of Police Involved Deaths vs Violent Crime", "created_at": "2016-04-12T23:59:48Z", "updated_at": "2016-04-13T00:28:47Z", "api": ["d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.select", "d3.csv", "d3.extent"], "readme": "This scatterplot is constructed from a TSV file storing the dimensions of sepals and petals of various iris flowers. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *x*- and *y*-position encoding\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887118'>Scatterplot</a>", "uid": "sirwart_8ce3a98af7219dfd4d966c8a01019d99"}, {"code": "<script>\n       var margin = { top: 10, left: 100, bottom: 30, right: 50 },\n           width = 960 - margin.left - margin.right,\n           height = 600 - margin.top - margin.bottom;\n       \n       var x = function(d) { return d.rating; },\n           y = function(d) { return d.genre; },\n           area = function(d) { return d.budget; };\n       \n       var xScale = d3.scale.linear()\n             .domain([0, 10])\n             .range([0, width]),\n           yScale = d3.scale.ordinal()\n             .domain([\"Comedy\", \"Action\", \"Romance\", \"Animation\", \"Drama\"])\n             .rangeBands([height, 0]),\n           areaScale = d3.scale.linear().range([0, 125]),\n           colorScale = d3.scale.quantize()\n            .domain([0, 10])\n            .range([\"#AB879C\",\"#928EAB\",\"#6C97B0\",\"#3E9EA7\",\"#1BA38F\",\n                    \"#37A46C\",\"#62A145\",\"#8D991C\",\"#B98A00\",\"#E07423\"]);\n       \n       var xValue = function(d) { return xScale(x(d)); },\n           yValue = function(d) { return yScale(y(d)) + yScale.rangeBand()/2; },\n           rValue = function(d) {\n             var A = areaScale(area(d));\n             return Math.sqrt(A / Math.PI);\n           },\n           colorValue = function(d) { return colorScale(x(d)); };\n       \n       var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\"),\n           yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n       \n       var bubbleChart = d3.forceChart()\n        .size([width, height])\n        .x(xValue)\n        .y(yValue)\n        .r(rValue)\n        .xGravity(3)    // make the x-position more accurate\n        .yGravity(1/3); // ...and the y-position more flexible\n        \n       var svg = d3.select(\"body\").append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n       \n       d3.json(\"movies.json\", function(error, movies) {\n         if (error) throw error;\n         \n         console.table(movies);\n         \n         areaScale.domain([0,d3.max(movies, area)]);\n         \n         // Draw axes\n         svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis)\n          .append(\"text\")\n            .attr(\"dx\", width)\n            .attr(\"dy\", -6)\n            .style(\"text-anchor\", \"end\")\n            .text(\"IMDB Rating\");\n          \n         svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .call(yAxis)\n          .selectAll(\".tick line\")\n            .attr(\"x2\", width)\n            .attr(\"stroke-dasharray\", \"1, 2\")\n            .style(\"stroke\", \"lightgrey\");\n         \n         // Draw legend\n         svg.append(\"g\").call(legend);\n            \n         // Draw bubbles\n         svg.append(\"g\").call(bubbleChart, movies)\n            .attr(\"class\", \"bubbles\")\n          .selectAll(\".node\").append(\"circle\")\n            .attr(\"r\", function(d) { return d.r0; })\n            .attr(\"fill\", colorValue)\n            .attr(\"stroke\", \"slategrey\");\n       });\n       \n       function legend(selection) {\n         var legendData = [\n           { budget: 200000000, text: \"$200 million\", dy: 0 },\n           { budget: 100000000, text: \"$100 million\", dy: 20 },\n           { budget: 50000000, text: \"$50 million\", dy: 40 },\n           { budget: 10000000, text: \"$10 million\", dy: 60 }\n         ];\n         \n         var legend = selection\n            .attr(\"class\", \"legend\")\n            .attr(\"transform\", \"translate(\" + xScale(9.5) + \",\" + (height/2 - 30) + \")\");\n         \n         legend.append(\"text\")\n          .attr(\"dx\", -6)\n          .attr(\"dy\", -16)\n          .text(\"Budget\");\n          \n         legend.selectAll(\".item\").data(legendData)\n          .enter().append(\"g\")\n            .attr(\"transform\", function(d) { return \"translate(0,\" + d.dy + \")\"; })\n            .each(function(d) {\n              d3.select(this).append(\"circle\")\n                .attr(\"r\", rValue(d))\n                .style(\"fill\", \"none\")\n                .style(\"stroke\", \"slategrey\");\n              d3.select(this).append(\"text\")\n                .attr(\"dx\", 10)\n                .attr(\"dy\", 4)\n                .text(d.text);\n            });\n       }\n     </script>", "description": "Movie Genre, Rating and Budget", "created_at": "2016-04-12T14:42:20Z", "updated_at": "2016-04-12T14:42:20Z", "api": ["d3.layout.force", "d3.geom.quadtree", "d3.scale.linear", "d3.scale.ordinal", "d3.scale.quantize", "d3.svg.axis", "d3.forceChart", "d3.select", "d3.json", "d3.max"], "readme": "IMDB movie ratings by genre. Movies with bigger budgets have bigger \nbubbles. \n \nUses the [d3.forceChart()](https://github.com/armollica/force-chart) plugin. \nData are from the [ggplot2](http://docs.ggplot2.org/0.9.3/movies.html) R package.\n\nforked from <a href='http://bl.ocks.org/armollica/'>armollica</a>'s block: <a href='http://bl.ocks.org/armollica/2dcfd66a64922990995f905aa0dc4d7b'>Movie Genre, Rating and Budget</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/361f1fddbbccd2b19b235ddadcff67fc'>Movie Genre, Rating and Budget</a>", "uid": "domhorvath_7a5c949e0e8c6772781faf119c8e6d80"}, {"code": "<script>\n var svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    //console.log(json);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n\n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\") // background for ruler\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n      .append(\"g\");\n      gene.append(\"rect\")\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      .attr(\"fill\", function (d) {\n        if (d.direction == \"forward\") {\n          return \"green\";\n        }\n        else if (d.direction == \"reverse\") {\n          return \"red\";\n        }\n        else {\n          return \"black\";\n        }\n      })\n      .on(\"mouseover\", function(d) {\n        console.log(d);\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", .9);\n        div\t.html(\"The direction of gene \" + d.name + \" is \" + d.direction)// the text of the tooltip ...\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      })\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n\n      gene.append(\"text\") // gene name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { // forward and even\n            return -50;\n          }\n          else { return -10;} // forward and odd\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { // reverse and even\n            return 50;\n          }\n          else { return 80;} //reverse and odd\n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"blue\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n  });\n  </script>", "description": "Genome Browser", "created_at": "2016-04-07T14:22:27Z", "updated_at": "2016-04-07T14:22:44Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "jpnoll_ee3bf5a5e9a2ba1577d90a0ea7a79c4c"}, {"code": "<script>\n\nvar width = 960,\n    height = 900,\n    padding = 2, // separation between same-color nodes\n    clusterPadding = 34, // separation between different-color nodes\n    maxRadius = 22;\n\nvar n = 10, // total number of nodes\n    m = 10; // number of distinct clusters\n\nvar color = d3.scale.category10()\n    .domain(d3.range(m));\n\n// The largest node for each cluster.\nvar clusters = new Array(m);\n\nvar nodes = d3.range(n).map(function() {\n  var // random index based on num nodes\n      i = Math.floor(Math.random() * m),\n      // create random radius\n      r = Math.sqrt((i + 1) / m * -Math.log(Math.random())) * maxRadius,\n      // create a node\n      d = {cluster: i, radius: r};\n  // drop new nodes in bucket \n  if (!clusters[i] || (r > clusters[i].radius)) {\n    clusters[i] = d;\n    console.log('d : ',d);\n    console.log('i : ',i);\n    console.log('clusters : ', clusters);\n  }\n  return d;\n});\n\nvar nested = d3.nest()\n      .key(function(d) { return d.cluster; })\n      .entries(nodes); \n//console.log('node 7: ',nodes[7]);\n//console.log('nodes : ',nodes);\n//console.log('clusters: ',clusters);\nconsole.log('nested: ',nested);\n\n// Use the pack layout to initialize node positions.\nd3.layout.pack()\n    .sort(null)\n    .size([width, height])\n    .children(function(d) { return d.values; })\n    .value(function(d) { return d.radius * d.radius; })\n    .nodes({values: nested});\n\nvar force = d3.layout.force()\n    .nodes(nodes)\n    .size([width, height])\n    .gravity(.05)\n\t\t.friction(.9) //ideal for up to 1000\n    .charge(-10) //ideal for up to 1000\n    .on(\"tick\", tick)\n    .start();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar node = svg.selectAll(\"circle\")\n    .data(nodes)\n  .enter().append(\"circle\")\n    .style(\"fill\", function(d) { return color(d.cluster); })\n    .call(force.drag);\n\nnode.transition()\n    .duration(n * 2) // factor of number of nodes\n    .delay(function(d, i) { return i * 5; })\n    .attrTween(\"r\", function(d) {\n      var i = d3.interpolate(0, d.radius);\n      return function(t) { return d.radius = i(t); };\n    });\n\nfunction tick(e) {\n  node\n      .each(cluster(10 * e.alpha * e.alpha))\n      .each(collide(.25))\n      .attr(\"cx\", function(d) { return d.x; })\n      .attr(\"cy\", function(d) { return d.y; });\n}\n\n// Move d to be adjacent to the cluster node.\nfunction cluster(alpha) {\n  return function(d) {\n    var cluster = clusters[d.cluster];\n    if (cluster === d) return;\n    var x = d.x - cluster.x,\n        y = d.y - cluster.y,\n        l = Math.sqrt(x * x + y * y),\n        r = d.radius + cluster.radius;\n    if (l != r) {\n      l = (l - r) / l * alpha;\n      d.x -= x *= l;\n      d.y -= y *= l;\n      cluster.x += x;\n      cluster.y += y;\n    }\n  };\n}\n\n// Resolves collisions between d and all other circles.\nfunction collide(alpha) {\n  var quadtree = d3.geom.quadtree(nodes);\n  return function(d) {\n    var r = d.radius + maxRadius + Math.max(padding, clusterPadding),\n        nx1 = d.x - r,\n        nx2 = d.x + r,\n        ny1 = d.y - r,\n        ny2 = d.y + r;\n    quadtree.visit(function(quad, x1, y1, x2, y2) {\n      if (quad.point && (quad.point !== d)) {\n        var x = d.x - quad.point.x,\n            y = d.y - quad.point.y,\n            l = Math.sqrt(x * x + y * y),\n            r = d.radius + quad.point.radius + (d.cluster === quad.point.cluster ? padding : clusterPadding);\n        if (l < r) {\n          l = (l - r) / l * alpha;\n          d.x -= x *= l;\n          d.y -= y *= l;\n          quad.point.x += x;\n          quad.point.y += y;\n        }\n      }\n      return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n    });\n  };\n}\n\n</script>", "description": "Cluster Force Layout IV Circle Pack", "created_at": "2016-04-04T08:51:04Z", "updated_at": "2016-04-04T16:20:22Z", "api": ["d3.scale.category10", "d3.range", "d3.nest", "d3.layout.pack", "d3.layout.force", "d3.select", "d3.interpolate", "d3.geom.quadtree"], "readme": "This variation of a [clustered force layout](/mbostock/7881887) uses D3\u2019s circle-packing layout to initialize node positions.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/7882658'>Cluster Force Layout IV</a>", "uid": "newsummit_880d663dba66affaf18226113d34073d"}, {"code": "<script>\nvar margin = {top: 66, right: 110, bottom: 20, left: 188},\n    width = document.body.clientWidth - margin.left - margin.right,\n    height = 340 - margin.top - margin.bottom,\n    innerHeight = height - 2;\n\nvar devicePixelRatio = window.devicePixelRatio || 1;\n\nvar color = d3.scale.ordinal()\n  .range([\"#5DA5B3\",\"#D58323\",\"#DD6CA7\",\"#54AF52\",\"#8C92E8\",\"#E15E5A\",\"#725D82\",\"#776327\",\"#50AB84\",\"#954D56\",\"#AB9C27\",\"#517C3F\",\"#9D5130\",\"#357468\",\"#5E9ACF\",\"#C47DCB\",\"#7D9E33\",\"#DB7F85\",\"#BA89AD\",\"#4C6C86\",\"#B59248\",\"#D8597D\",\"#944F7E\",\"#D67D4B\",\"#8F86C2\"]);\n\nvar types = {\n  \"Number\": {\n    key: \"Number\",\n    coerce: function(d) { return +d; },\n    extent: d3.extent,\n    within: function(d, extent) { return extent[0] <= d && d <= extent[1]; },\n    defaultScale: d3.scale.linear().range([innerHeight, 0])\n  },\n  \"String\": {\n    key: \"String\",\n    coerce: String,\n    extent: function (data) { return data.sort(); },\n    within: function(d, extent, dim) { return extent[0] <= dim.scale(d) && dim.scale(d) <= extent[1]; },\n    defaultScale: d3.scale.ordinal().rangePoints([0, innerHeight])\n  },\n  \"Date\": {\n    key: \"Date\",\n    coerce: function(d) { return new Date(d); },\n    extent: d3.extent,\n    within: function(d, extent) { return extent[0] <= d && d <= extent[1]; },\n    defaultScale: d3.time.scale().range([0, innerHeight])\n  }\n};\n\nvar dimensions = [\n  {\n    key: \"food_group\",\n    description: \"Food Group\",\n    type: types[\"String\"],\n    axis: d3.svg.axis().orient(\"left\")\n      .tickFormat(function(d,i) {\n        return d;\n      })\n  },\n  {\n    key: \"Total lipid (fat) (g)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Sugars, total (g)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Calcium, Ca (mg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Sodium, Na (mg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Phosphorus, P (mg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Potassium, K (mg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Thiamin (mg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Riboflavin (mg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Niacin (mg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Iron, Fe (mg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Magnesium, Mg (mg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Protein (g)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Zinc, Zn (mg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Vitamin B-6 (mg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Vitamin B-12 (mcg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Folic acid (mcg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Selenium, Se (mcg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Vitamin A, IU (IU)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Vitamin K (phylloquinone) (mcg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Vitamin C, total ascorbic acid (mg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Vitamin D (IU)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Cholesterol (mg)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Fiber, total dietary (g)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"Carbohydrate, by difference (g)\",\n    type: types[\"Number\"],\n    scale: d3.scale.sqrt().range([innerHeight, 0])\n  },\n  {\n    key: \"manufac_name\",\n    description: \"Manufacturer\", \n    type: types[\"String\"],\n    axis: d3.svg.axis().orient(\"right\")\n      .tickFormat(function(d,i) {\n        if (d == null) return \"(null)\";\n        return i % 5 == 0 ? d.slice(0,22) : \"\";\n      })\n  }\n];\n\nvar xscale = d3.scale.ordinal()\n    .domain(d3.range(dimensions.length))\n    .rangePoints([0, width]);\n\nvar yAxis = d3.svg.axis()\n    .orient(\"left\");\n\nvar container = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"parcoords\")\n    .style(\"width\", width + margin.left + margin.right + \"px\")\n    .style(\"height\", height + margin.top + margin.bottom + \"px\");\n\nvar svg = container.append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar canvas = container.append(\"canvas\")\n    .attr(\"width\", width * devicePixelRatio)\n    .attr(\"height\", height * devicePixelRatio)\n    .style(\"width\", width + \"px\")\n    .style(\"height\", height + \"px\")\n    .style(\"margin-top\", margin.top + \"px\")\n    .style(\"margin-left\", margin.left + \"px\");\n\nvar ctx = canvas.node().getContext(\"2d\");\nctx.globalCompositeOperation = 'darken';\nctx.globalAlpha = 0.15;\nctx.lineWidth = 1.5;\nctx.scale(devicePixelRatio, devicePixelRatio);\n\nvar output = d3.select(\"body\").append(\"pre\");\n\nvar axes = svg.selectAll(\".axis\")\n    .data(dimensions)\n  .enter().append(\"g\")\n    .attr(\"class\", function(d) { return \"axis \" + d.key.replace(/ /g, \"_\"); })\n    .attr(\"transform\", function(d,i) { return \"translate(\" + xscale(i) + \")\"; });\n\nd3.csv(\"nutrient.csv\", function(error, data) {\n  if (error) throw error;\n\n  // shuffle the data!\n  data = d3.shuffle(data);\n\n  data.forEach(function(d) {\n    dimensions.forEach(function(p) {\n      d[p.key] = !d[p.key] ? null : p.type.coerce(d[p.key]);\n    });\n\n    // truncate long text strings to fit in data table\n    for (var key in d) {\n      if (d[key] && d[key].length > 35) d[key] = d[key].slice(0,36);\n    }\n  });\n\n  // type/dimension default setting happens here\n  dimensions.forEach(function(dim) {\n    if (!(\"domain\" in dim)) {\n      // detect domain using dimension type's extent function\n      dim.domain = d3.functor(dim.type.extent)(data.map(function(d) { return d[dim.key]; }));\n    }\n    if (!(\"scale\" in dim)) {\n      // use type's default scale for dimension\n      dim.scale = dim.type.defaultScale.copy();\n    }\n    dim.scale.domain(dim.domain);\n  });\n\n  var render = renderQueue(draw).rate(30);\n\n  ctx.clearRect(0,0,width,height);\n  ctx.globalAlpha = d3.min([0.85/Math.pow(data.length,0.3),1]);\n  render(data);\n\n  axes.append(\"g\")\n      .each(function(d) {\n        var renderAxis = \"axis\" in d\n          ? d.axis.scale(d.scale)  // custom axis\n          : yAxis.scale(d.scale);  // default axis\n        d3.select(this).call(renderAxis);\n      })\n    .append(\"text\")\n      .attr(\"class\", \"title\")\n      .attr(\"text-anchor\", \"start\")\n      .text(function(d) { return \"description\" in d ? d.description : d.key; });\n\n  // Add and store a brush for each axis.\n  axes.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) {\n        d3.select(this).call(d.brush = d3.svg.brush()\n          .y(d.scale)\n          .on(\"brushstart\", brushstart)\n          .on(\"brush\", brush));\n      })\n    .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n\n  d3.selectAll(\".axis.food_group .tick text\")\n    .style(\"fill\", color);\n    \n  output.text(d3.tsv.format(data.slice(0,24)));\n\n  function project(d) {\n    return dimensions.map(function(p,i) {\n      // check if data element has property and contains a value\n      if (\n        !(p.key in d) ||\n        d[p.key] === null\n      ) return null;\n\n      return [xscale(i),p.scale(d[p.key])];\n    });\n  };\n\n  function draw(d) {\n    ctx.strokeStyle = color(d.food_group);\n    ctx.beginPath();\n    var coords = project(d);\n    coords.forEach(function(p,i) {\n      // this tricky bit avoids rendering null values as 0\n      if (p === null) {\n        // this bit renders horizontal lines on the previous/next\n        // dimensions, so that sandwiched null values are visible\n        if (i > 0) {\n          var prev = coords[i-1];\n          if (prev !== null) {\n            ctx.moveTo(prev[0],prev[1]);\n            ctx.lineTo(prev[0]+6,prev[1]);\n          }\n        }\n        if (i < coords.length-1) {\n          var next = coords[i+1];\n          if (next !== null) {\n            ctx.moveTo(next[0]-6,next[1]);\n          }\n        }\n        return;\n      }\n      \n      if (i == 0) {\n        ctx.moveTo(p[0],p[1]);\n        return;\n      }\n\n      ctx.lineTo(p[0],p[1]);\n    });\n    ctx.stroke();\n  }\n\n  function brushstart() {\n    d3.event.sourceEvent.stopPropagation();\n  }\n\n  // Handles a brush event, toggling the display of foreground lines.\n  function brush() {\n    var actives = dimensions.filter(function(p) { return !p.brush.empty(); }),\n        extents = actives.map(function(p) { return p.brush.extent(); });\n\n    var selected = data.filter(function(d) {\n      if (actives.every(function(dim, i) {\n          // test if point is within extents for each active brush\n          return dim.type.within(d[dim.key], extents[i], dim);\n        })) {\n        return true;\n      }\n    });\n\n    // show ticks for active brush dimensions\n    // and filter ticks to only those within brush extents\n    svg.selectAll(\".axis\")\n        .filter(function(d) {\n          return actives.indexOf(d) > -1 ? true : false;\n        })\n        .classed(\"active\", true)\n        .each(function(dimension, i) {\n          var extent = extents[i];\n          d3.select(this)\n            .selectAll(\".tick text\")\n            .style(\"display\", function(d) {\n              var value = dimension.type.coerce(d);\n              return dimension.type.within(value, extent, dimension) ? null : \"none\";\n            });\n        });\n\n    // reset dimensions without active brushes\n    svg.selectAll(\".axis\")\n        .filter(function(d) {\n          return actives.indexOf(d) > -1 ? false : true;\n        })\n        .classed(\"active\", false)\n        .selectAll(\".tick text\")\n          .style(\"display\", null);\n\n    ctx.clearRect(0,0,width,height);\n    ctx.globalAlpha = d3.min([0.85/Math.pow(selected.length,0.3),1]);\n    render(selected);\n\n    output.text(d3.tsv.format(selected.slice(0,24)));\n  }\n});\n</script>", "description": "Nutrient Parallel Coordinates III", "created_at": "2016-04-01T09:59:07Z", "updated_at": "2016-04-29T14:33:13Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.time.scale", "d3.svg.axis", "d3.scale.sqrt", "d3.range", "d3.select", "d3.csv", "d3.shuffle", "d3.functor", "d3.min", "d3.svg.brush", "d3.selectAll", "d3.tsv.format", "d3.event.sourceEvent.stopPropagation"], "readme": "[Previous Version](http://bl.ocks.org/syntagmatic/0d1635533f6fb5ac4da3)\n\nA visualization of the mean nutrient contents of all 8789 foods in USDA's [SR28 Nutrient Database](http://www.ars.usda.gov/Services/docs.htm?docid=24912).\n\nData processed with [SQLite and Node.js](https://github.com/syntagmatic/usda-sqlite).\n\nAlso see the [Nutrient Explorer](http://bl.ocks.org/syntagmatic/raw/3150059/).\n", "uid": "syntagmatic_c9fb69e425a3c07cfbd09169941fbf46"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(40,0)\");\n\nvar tree = d3.tree()\n    .size([height - 400, width - 160]);\n\nvar cluster = d3.cluster()\n    .size([height, width - 160]);\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sort(function(a, b) { return (a.height - b.height) || a.id.localeCompare(b.id); });\n\n  cluster(root);\n\n  var link = g.selectAll(\".link\")\n      .data(root.descendants().slice(1))\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal);\n\n  var node = g.selectAll(\".node\")\n      .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"); })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  node.append(\"circle\")\n      .attr(\"r\", 2.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", 3)\n      .attr(\"x\", function(d) { return d.children ? -8 : 8; })\n      .style(\"text-anchor\", function(d) { return d.children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1); });\n\n  d3.selectAll(\"input\")\n      .on(\"change\", changed);\n\n  var timeout = setTimeout(function() {\n    d3.select(\"input[value=\\\"tree\\\"]\")\n        .property(\"checked\", true)\n        .dispatch(\"change\");\n  }, 1000);\n\n  function changed() {\n    timeout = clearTimeout(timeout);\n    (this.value === \"tree\" ? tree : cluster)(root);\n    var t = d3.transition().duration(750);\n    node.transition(t).attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n    link.transition(t).attr(\"d\", diagonal);\n  }\n});\n\nfunction diagonal(d) {\n  return \"M\" + d.y + \",\" + d.x\n      + \"C\" + (d.parent.y + 100) + \",\" + d.x\n      + \" \" + (d.parent.y + 100) + \",\" + d.parent.x\n      + \" \" + d.parent.y + \",\" + d.parent.x;\n}\n\n</script>", "description": "Tidy Tree vs. Dendrogram", "created_at": "2016-03-31T21:22:28Z", "updated_at": "2016-07-06T17:30:19Z", "api": ["d3.select", "d3.tree", "d3.cluster", "d3.stratify", "d3.csv", "d3.selectAll", "d3.transition"], "readme": "", "uid": "mbostock_e9ba78a2c1070980d1b530800ce7fa2b"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(40,0)\");\n\nvar tree = d3.tree()\n    .size([height, width - 160]);\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sort(function(a, b) { return (a.height - b.height) || a.id.localeCompare(b.id); });\n\n  tree(root);\n\n  var link = g.selectAll(\".link\")\n      .data(root.descendants().slice(1))\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        return \"M\" + d.y + \",\" + d.x\n            + \"C\" + (d.y + d.parent.y) / 2 + \",\" + d.x\n            + \" \" + (d.y + d.parent.y) / 2 + \",\" + d.parent.x\n            + \" \" + d.parent.y + \",\" + d.parent.x;\n      });\n\n  var node = g.selectAll(\".node\")\n      .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"); })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; })\n\n  node.append(\"circle\")\n      .attr(\"r\", 2.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", 3)\n      .attr(\"x\", function(d) { return d.children ? -8 : 8; })\n      .style(\"text-anchor\", function(d) { return d.children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1); });\n});\n\n</script>", "description": "Tidy Tree", "created_at": "2016-03-31T16:56:35Z", "updated_at": "2016-10-06T14:55:52Z", "api": ["d3.select", "d3.tree", "d3.stratify", "d3.csv"], "readme": "", "uid": "mbostock_9d0899acb5d3b8d839d9d613a9e1fe04"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(40,0)\");\n\nvar cluster = d3.cluster()\n    .size([height, width - 160]);\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sort(function(a, b) { return (a.height - b.height) || a.id.localeCompare(b.id); });\n\n  cluster(root);\n\n  var link = g.selectAll(\".link\")\n      .data(root.descendants().slice(1))\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        return \"M\" + d.y + \",\" + d.x\n            + \"C\" + (d.parent.y + 100) + \",\" + d.x\n            + \" \" + (d.parent.y + 100) + \",\" + d.parent.x\n            + \" \" + d.parent.y + \",\" + d.parent.x;\n      });\n\n  var node = g.selectAll(\".node\")\n      .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"); })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; })\n\n  node.append(\"circle\")\n      .attr(\"r\", 2.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", 3)\n      .attr(\"x\", function(d) { return d.children ? -8 : 8; })\n      .style(\"text-anchor\", function(d) { return d.children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1); });\n});\n\n</script>", "description": "Dendrogram", "created_at": "2016-03-31T00:15:34Z", "updated_at": "2016-07-06T17:34:30Z", "api": ["d3.select", "d3.cluster", "d3.stratify", "d3.csv"], "readme": "", "uid": "mbostock_ff91c1558bc570b08539547ccc90050b"}, {"code": "<script>\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 500 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\nvar xValue = function(d) { return d['Rushing TD'];}, // data -> value\n    xScale = d3.scale.linear().range([0, width]), // value -> display\n    xMap = function(d) { return xScale(xValue(d));}, // data -> display\n    xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\nvar yValue = function(d) { return d[\"Passing TD\"];}, // data -> value\n    yScale = d3.scale.linear().range([height, 0]), // value -> display\n    yMap = function(d) { return yScale(yValue(d));}, // data -> display\n    yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\n// setup fill color\nvar cValue = function(d) {\nif(d['Conf'] ==  'Big 12' || d['Conf'] == 'Big Ten' || d['Conf'] == 'Conf' || d['Conf'] == 'Pac-12' || d['Conf'] ==  'ACC') {\n\t\treturn 'Big Five';\n\t} else if(d['Conf'] == 'MWC' || d['Conf'] == 'Sun Belt' || d['Conf'] == 'American' || d['Conf'] == 'CUSA' || d['Conf'] == 'MAC'){\n\t\treturn 'Group of Five';\n}\n\n}, color = function(val) {\n\tif(val == 'Big Five') {\n\t\treturn '#ffeda0';\n\t} else if (val == 'Group of Five') {\n\t\treturn '#feb24c';\n\t} else {\n\t\treturn '#f03b20';\n\t}\n}\n\nvar svg = d3.select(\".no_res\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n// load data\nd3.csv(\"passing-stats-2014.csv\", function(error, data) {\n\n  data.forEach(function(d) {\n     d['Rushing TD'] = +d['Rushing TD'];\n\td['Passing TD'] = +d['Passing TD'];\n  });\n  \n\n  xScale.domain([d3.min(data, xValue)-3, d3.max(data, xValue)+3]);\n  yScale.domain([d3.min(data, yValue)-3, d3.max(data, yValue)+3]);\n\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Rushing TD\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Passing TD\");\n\n\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", xMap)\n      .attr(\"cy\", yMap)\n      .style(\"fill\", function(d) { return color(cValue(d));}) \n      .on(\"mouseover\", function(d) {tooltip.transition().duration(200)\n               .style(\"opacity\", .9);\n          tooltip.html(d[\"Player\"] + \"<br/> (\" + xValue(d) \n\t        + \", \" + yValue(d) + \")\")\n               .style(\"left\", (d3.event.pageX + 10) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n\t\t\t   \n      })\n\t    .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n\t\t\t   })\n\t\t\t   \n\t\t\t   .on(\"click\", function(d) {\n          var current = cValue(d);\n          console.log(current);\n          svg.selectAll(\"circle\")\n              .data(data) \n              .transition()  \n              .duration(5000)  \n              .each(\"start\", function() {  \n                  d3.select(this)  \n                      .attr(\"r\", function(d) {\n                          if (cValue(d) == current) {return \"15\"}\n                          else \t{ return \"3.5\" }  \n                      })\n                  })\n              .each(\"end\", function() {  \n                  d3.select(this)  \n                      .transition()\n                      .duration(500)\n                      .attr(\"r\", 3.5);  \n              }); });\n    \n  var legend = svg.selectAll(\".legend\")\n      .data(['Big Five', 'Group of Five', 'Independent'])\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 24 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n</script>", "description": "Visual Implementation (VI9)", "created_at": "2016-03-29T22:52:39Z", "updated_at": "2016-03-29T22:52:39Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "evansodu_a6c0b6b8d32cf99143181f286d991956"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar format = d3.format(\",d\");\n\nvar color = d3.scaleRainbow();\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar treemap = d3.treemap()\n    .size([width, height])\n    .round(true)\n    .padding(1);\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var sum = 0;\n\n  var root = stratify(data)\n      .sum(function(d) { return d.value; })\n      .sort(function(a, b) { return b.height - a.height || b.value - a.value; });\n\n  treemap(root);\n\n  color.domain([0, root.value]);\n\n  var cell = svg.selectAll(\"g\")\n    .data(root.leaves())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x0 + \",\" + d.y0 + \")\"; });\n\n  cell.append(\"rect\")\n      .attr(\"id\", function(d) { return \"rect-\" + d.id; })\n      .attr(\"width\", function(d) { return d.x1 - d.x0; })\n      .attr(\"height\", function(d) { return d.y1 - d.y0; })\n      .style(\"fill\", function(d) { return color(sum += d.value); });\n\n  cell.append(\"clipPath\")\n      .attr(\"id\", function(d) { return \"clip-\" + d.id; })\n    .append(\"use\")\n      .attr(\"xlink:href\", function(d) { return \"#rect-\" + d.id + \"\"; });\n\n  cell.append(\"text\")\n      .attr(\"clip-path\", function(d) { return \"url(#clip-\" + d.id + \")\"; })\n    .selectAll(\"tspan\")\n      .data(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).concat(format(d.value)); })\n    .enter().append(\"tspan\")\n      .attr(\"x\", 4)\n      .attr(\"y\", function(d, i) { return 13 + i * 10; })\n      .text(function(d) { return d; });\n\n  cell.append(\"title\")\n      .text(function(d) { return d.id + \"\\n\" + format(d.value); });\n});\n\n</script>", "description": "Rainbow Treemap", "created_at": "2016-03-28T18:05:33Z", "updated_at": "2016-10-11T05:29:44Z", "api": ["d3.select", "d3.format", "d3.scaleRainbow", "d3.stratify", "d3.treemap", "d3.csv"], "readme": "", "uid": "mbostock_e6962a152275373f8504"}, {"code": "<script>\n\nvar width = 960,\n    height = 1060,\n    offset = 3;\n\nvar format = d3.format(\",d\");\n\nvar color = d3.scaleMagma()\n    .domain([-4, 4]);\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar treemap = d3.treemap()\n    .size([width, height])\n    .paddingInner(1)\n    .paddingOuter(offset)\n    .paddingTop(function(d) { return d.depth < 3 ? 19 : offset; })\n    .round(true);\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sum(function(d) { return d.value; })\n      .sort(function(a, b) { return b.height - a.height || b.value - a.value; });\n\n  cascade(treemap(root));\n\n  d3.select(\"body\")\n    .selectAll(\".node\")\n    .data(root.descendants())\n    .enter().append(\"div\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--left\"); })\n      .attr(\"title\", function(d) { return d.id + \"\\n\" + format(d.value); })\n      .style(\"left\", function(d) { return d.x0 + \"px\"; })\n      .style(\"top\", function(d) { return d.y0 + \"px\"; })\n      .style(\"width\", function(d) { return d.x1 - d.x0 + \"px\"; })\n      .style(\"height\", function(d) { return d.y1 - d.y0 + \"px\"; })\n      .style(\"background\", function(d) { return color(d.depth); })\n      .each(function(d) { d.node = this; })\n      .on(\"mouseover\", hovered(true))\n      .on(\"mouseout\", hovered(false))\n      .text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).join(\"\\u200b\"); });\n});\n\nfunction cascade(root) {\n  return root.eachAfter(function(d) {\n    if (d.children) {\n      d.heightRight = 1 + d3.max(d.children, function(c) { return c.x1 === d.x1 - offset ? c.heightRight : NaN; });\n      d.heightBottom = 1 + d3.max(d.children, function(c) { return c.y1 === d.y1 - offset  ? c.heightBottom : NaN; });\n    } else {\n      d.heightRight =\n      d.heightBottom = 0;\n    }\n  }).eachBefore(function(d) {\n    d.x1 -= 2 * offset * d.heightRight;\n    d.y1 -= 2 * offset * d.heightBottom;\n  });\n}\n\nfunction hovered(hover) {\n  return function(d) {\n    d3.selectAll(d.ancestors().map(function(d) { return d.node; }))\n        .classed(\"node--hover\", hover);\n  };\n}\n\n</script>", "description": "Cascaded Treemap", "created_at": "2016-03-28T17:36:20Z", "updated_at": "2016-05-03T18:38:19Z", "api": ["d3.format", "d3.scaleMagma", "d3.stratify", "d3.treemap", "d3.csv", "d3.select", "d3.max", "d3.selectAll"], "readme": "Based on work by [Matteo Abrate](http://bl.ocks.org/nitaku/142545ea7bac1866327a) and [L\u00fc and Fogarty](https://homes.cs.washington.edu/~jfogarty/publications/gi2008.pdf).\n", "uid": "mbostock_f85ffb3a5ac518598043"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar format = d3.format(\",d\");\n\nvar color = d3.scaleMagma()\n    .domain([-4, 4]);\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar treemap = d3.treemap()\n    .size([width, height])\n    .paddingOuter(3)\n    .paddingTop(19)\n    .paddingInner(1)\n    .round(true);\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sum(function(d) { return d.value; })\n      .sort(function(a, b) { return b.height - a.height || b.value - a.value; });\n\n  treemap(root);\n\n  var cell = svg\n    .selectAll(\".node\")\n    .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x0 + \",\" + d.y0 + \")\"; })\n      .attr(\"class\", \"node\")\n      .each(function(d) { d.node = this; })\n      .on(\"mouseover\", hovered(true))\n      .on(\"mouseout\", hovered(false));\n\n  cell.append(\"rect\")\n      .attr(\"id\", function(d) { return \"rect-\" + d.id; })\n      .attr(\"width\", function(d) { return d.x1 - d.x0; })\n      .attr(\"height\", function(d) { return d.y1 - d.y0; })\n      .style(\"fill\", function(d) { return color(d.depth); });\n\n  cell.append(\"clipPath\")\n      .attr(\"id\", function(d) { return \"clip-\" + d.id; })\n    .append(\"use\")\n      .attr(\"xlink:href\", function(d) { return \"#rect-\" + d.id + \"\"; });\n\n  var label = cell.append(\"text\")\n      .attr(\"clip-path\", function(d) { return \"url(#clip-\" + d.id + \")\"; });\n\n  label\n    .filter(function(d) { return d.children; })\n    .selectAll(\"tspan\")\n      .data(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).concat(\"\\xa0\" + format(d.value)); })\n    .enter().append(\"tspan\")\n      .attr(\"x\", function(d, i) { return i ? null : 4; })\n      .attr(\"y\", 13)\n      .text(function(d) { return d; });\n\n  label\n    .filter(function(d) { return !d.children; })\n    .selectAll(\"tspan\")\n      .data(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).concat(format(d.value)); })\n    .enter().append(\"tspan\")\n      .attr(\"x\", 4)\n      .attr(\"y\", function(d, i) { return 13 + i * 10; })\n      .text(function(d) { return d; });\n\n  cell.append(\"title\")\n      .text(function(d) { return d.id + \"\\n\" + format(d.value); });\n});\n\nfunction hovered(hover) {\n  return function(d) {\n    d3.selectAll(d.ancestors().map(function(d) { return d.node; }))\n        .classed(\"node--hover\", hover)\n      .select(\"rect\")\n        .attr(\"width\", function(d) { return d.x1 - d.x0 - hover; })\n        .attr(\"height\", function(d) { return d.y1 - d.y0 - hover; });\n  };\n}\n\n</script>", "description": "Nested Treemap", "created_at": "2016-03-25T17:34:51Z", "updated_at": "2016-05-03T18:38:05Z", "api": ["d3.select", "d3.format", "d3.scaleMagma", "d3.stratify", "d3.treemap", "d3.csv", "d3.selectAll"], "readme": "", "uid": "mbostock_911ad09bdead40ec0061"}, {"code": "<script>\n\nvar margin = {top: 20, right: 40, bottom: 20, left: 25},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatValue = d3.format(\",.2f\");\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.order); })\n    .y(function(d) { return y(d.score); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.order = +d.order;\n    d.score = +d.score;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.order; }));\n  y.domain([0,60]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", 10)\n      .attr(\"transform\", \"rotate(-90)\")\n      .style(\"text-anchor\", \"end\")\n      .style(\"font-weight\",\"bold\")\n      .text(\"Hackerrank Score\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", -4)\n      .attr(\"transform\", \"translate(\" + width + \",0)\")\n      .style(\"text-anchor\", \"end\")\n      .style(\"font-weight\",\"bold\")\n      .text(\"Attempts\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  var dot = svg.selectAll(\".dot\")\n    .data(data)\n  .enter().append(\"g\")\n    .attr(\"class\",\"dot\");\n\n  dot.append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 5)\n      .attr(\"cx\", function(d) { return x(d.order); })\n      .attr(\"cy\", function(d) { return y(d.score); })\n      .style(\"stroke-width\",\"1px\")\n      .style(\"stroke\",\"white\")\n      .style(\"fill\",\"#22B84C\");\n\n    dot.append(\"text\")\n      .attr(\"class\", \"dot\")\n      .attr(\"x\", function(d) { return x(d.order) + 5; })\n      .attr(\"y\", function(d) { return y(d.score) - 5; })\n      // .style(\"font-weight\",\"bold\")\n      .style(\"font-size\",\"11px\")\n      .text(function(d) { return d.score; });\n\n});\n\n</script>", "description": "Hackerrank score", "created_at": "2016-03-24T16:26:42Z", "updated_at": "2016-03-24T16:43:06Z", "api": ["d3.format", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent"], "readme": "", "uid": "bricedev_6fa60662f4dabd7e3ecb"}, {"code": "<script>\n    var svg = d3.select(\"body\")\n    \t.append(\"svg\")\n    \t.attr(\"height\", 1000)\n    \t;\n   \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n      svg.attr(\"width\", function(d) {\n        return d3.max(json, function(d) {\n          return d.genomelength/10;\n        })\n      });\n      \n      var sequences = svg.selectAll(\".genomes\")\n      \t.data(json)\n      \t.enter()\n      \t.append(\"g\");\n      sequences.attr(\"transform\", function(d, i) { \n        return \"translate(0,\" + (0 + (i*153)) + \")\"; \n      });\n      \n      //starting the ruler\n      sequences.append(\"rect\") \n        .attr({x: -500, y: 100, width: function(d) { \n          return d.genomelength/10; }, height: 30\n              })\n        .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"#000000\",})\n        .attr(\"stroke-opacity\", 0)\n        .transition(1000).duration(3000)\n      \t.attr({x: 0})\n        .attr(\"stroke-opacity\", 1);\n      \n      //grouping the 3 tick groups and displaying them\n    \tvar group = sequences.selectAll(\".a\")\n      \t.data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n       })\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\":\"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n    \t.attr({x: -100})\n\t\t\t.transition().duration(3000)\n    \t.attr({x: function (d) { return d/10; }, y: 100, width: \"1px\", height: 30})\n    \t.attr({\"fill-opacity\": 1})\n\t    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    //numbers @1000 ticks\n    group.append(\"text\")\n   \t\t.attr(\"y\", 112)\n    \t.attr(\"x\", function(d) { return (d/10) + 1 })\n    \t.style({\"font-size\":\"30px\",\"fill\":\"red\"})\n    \t.transition().duration(1000).delay(2000)\n    \t.style({\"font-family\":\"verdana\",\"font-size\":\"10px\",\"fill\":\"red\"})\n      .text(function(d,i) { return i; })\n\t\tvar group2 = sequences.selectAll(\".b\")\n      .data(function(d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 15})\n     \t.attr({x:-100})\n      .transition().duration(3000)\n    \t.attr({x: function(d) {return d/10;}, y: 100, width: \"1px\", height: 15})\n      //.attr(\"transform\", function (d) {return \"translate(\" + d/10 + \",0)\";});\n\t\tvar group3 = sequences.selectAll(\".onehundredticks\")\n      .data(function(d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 500 !== 0 \n              & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        });\n        return ticks;\n      })\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 115, width: \"1px\", height: 15})\n    \t.attr({x: -100})\n      .transition().duration(3000)\n    \t.attr({x: function (d) { return d/10; }, y: 115, width: \"1px\", height: 15})\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    \n    \t//Attaching the coming gene boxes to the graph w/the data \n      var genes = sequences.selectAll(\".genes\")\n  \t  \t.data(function(d) { return d.genes;})\n    \t  .enter()\n      \t.append(\"g\");\n      \t\n      //Hover box when you mouseover genes\n      var tip = d3.tip()\n      .attr('class', 'd3-tip')\n      .offset(function (d) {\n        if (d.direction == \"forward\") {\n            return [-33, -8];\n        }\n        else if (d.direction == \"reverse\") {\n            return [-20, -8];\n        }\n      })\n      .html(function(d) {\n        return \"<b>Product:</b> <span style='color:white'>\" + d.product + \"</span>\";})\n      \n      //Clickable tip box \n      var hidden = d3.tip()\n        .attr('class', 'd3-hidden')\n        .offset(function (d) {\n        if (d.direction == \"forward\") {\n            return [80, -8];\n        }\n        else if (d.direction == \"reverse\") {\n            return [95, -8];\n        }\n      })\n    //  .html(function(d) {\n  //      return \"<a style=color:white target=_blank //href=http://blast.ncbi.nlm.nih.gov/Blast.cgi>BLAST:</a><span style='color:white'>\" \n  //        + \" \" + d.translation + \"</span>\";\n  //    })\n      \n\t\t//call the \"tool-tips\"\n      svg.call(tip);\n      svg.call(hidden);\n      \n\t\t //The gene boxes attributes\n\t\t genes.append(\"rect\")\n       \t.on('mouseover', tip.show).on('mouseout', tip.hide)\n      \t.on('click', hidden.show).on('dblclick', hidden.hide)\n  \t    .attr(\"x\", function (d) {\n        \tif (d.direction === \"forward\") {\n            return (0 - ((d.stop-d.start)/10)) - 2;\n          }\n        \telse if (d.direction === \"reverse\") {\n            return (d.genomelength/10) + 2;\n          }\n      \t})\n    \t  .attr(\"y\", function (d) { return 100; })\n     \t\t//.attr(\"rx\", \"10\")\n     \t\t//.attr(\"ry\", \"10\")\n      \t.attr(\"height\", function(d) { return 0; })\n      \t.attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style(\"fill\", function(d) {\n          if (d.direction === \"forward\") { return \"009900\"; \n          } else if\t(d.direction === \"reverse\"){ \n            return \"red\";\n          } else  { \n            return \"yellow\";\n          }\n        })\n      \t.style(\"stroke\", function(d) {\n          if (d.direction === \"forward\") {\n            return \"#000000\"; \n          } else if (d.direction === \"reverse\") {\n            return \"#000000\";\n          } else {\n            return \"yellow\";\n          }\n        })\n     \t\t.style({\"stroke-width\":\"3px\"})\n   \t\t\t.transition().delay(2000).duration(2000)\n     \t\t.attr(\"x\", function (d) { \n          return d.start/10; \n        })\n     \t  .attr(\"y\", function (d) { \n          if (d.direction == \"forward\") { \n            if (d.name % 2 ==0) {\n              return 34; \n          } else {\n            return 67;\n          \t}\n          } else if (d.direction == \"reverse\") {\n            if (d.name %2 == 0) {\n              return 133;\n          } else {\n            return 165;\n          \t}\n          } else\t{\n            return 60;\n          \t}\n        })\n       \t.attr(\"height\", function (d) {return 30;})\n      \tgroup.on(\"click\", function() {\n        \tconsole.log(\"rect\");\n      \t})\n  \t\t//text in gene boxes\n      genes.append(\"text\") \n        .attr(\"x\", function (d) { return ((d.start+d.stop)/10)/2})\n        .style(\"text-anchor\",\"middle\")\n        .style({\"font-family\":\"verdana\",\"font-size\":\"18px\",\"fill\":\"white\"})\n        .attr(\"y\", function (d) { \n          if (d.direction === \"forward\" && d.name%2==0) {\n            return 58;\n          }\n          else if (d.direction === \"forward\" && d.name%2!==0) {\n            return 91;\n          }\n          else if (d.direction === \"reverse\" && d.name%2==0) {\n            return 151;\n          }\n          else if (d.direction === \"reverse\" && d.name%2!==0) {\n            return 185;\n          }\n          else {\n            return 80;\n        \t}\n      \t})\n        .text(function (d) {\n        \treturn d.name;})\n         \n      genes.append(\"text\") \n        .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n        .attr(\"y\", function (d) {\n          if (d.direction == \"forward\") {\n            if (d.name % 2 === 0) {\n              return 28;\n            }\n            else { return 59;}\n          }\n          else if (d.direction == \"reverse\") {\n            if (d.name % 2 === 0) {\n              return 181;\n            }\n              else { return 213;}\n          }\n      \t})\n        .style({\"text-anchor\":\"middle\",\"fill\":\"black\",\"font-weight\":\"bold\"})\n        .attr(\"font-family\",\"sans-serif\")\n        .text(function(d) {return d.subnum})\n        .attr(\"fill-opacity\", 0)\n        .transition().delay(4500).duration(1000)\n        .attr(\"fill-opacity\", 1);\n      \n     \n  function writeDownloadLink(){\n    var html = d3.select(\"svg\")\n        .attr(\"title\", \"svg_title\")\n        .attr(\"version\", 1.1)\n        .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n        .node().parentNode.innerHTML;\n    \n    d3.select(this)\n        .attr(\"href-lang\", \"image/svg+xml\")\n        .attr(\"href\", \"data:image/svg+xml;base64,\\n\" + btoa(html))\n        .on(\"mousedown\", function(){\n            if(event.button != 2){\n                d3.select(this)\n                    .attr(\"href\", null)\n                    .html(\"Use right click\");\n            }\n        })\n        .on(\"mouseout\", function(){\n            d3.select(this)\n                .html(\"Download SVG\");\n        });\n\t};\n });\n  </script>", "description": "Genome viewer Final", "created_at": "2016-03-24T16:12:06Z", "updated_at": "2016-03-29T13:47:26Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range", "d3.tip"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/nguyenbq/'>nguyenbq</a>'s block: <a href='http://bl.ocks.org/nguyenbq/00c36fbe045e5d0290fc'>Genome Viewer Final</a>\n\nforked from <a href='http://bl.ocks.org/devssunil/'>devssunil</a>'s block: <a href='http://bl.ocks.org/devssunil/681bfd06a86a6d5e237c'>Genome viewer Final</a>", "uid": "devssunil_cd887ec9d6ebd46aa12e"}, {"code": "<script>\n    \n    // Feel free to change or delete any of the code you see!\n          var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar genomes = svg.selectAll(\".genomes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"g\");\n      var genes =genomes.selectAll(\".genes\")\n      \t.data(function(d) { return d.genes})\n      \t.enter()\n      \t.append(\"g\");\n//Hover box when you mouseover genes\n\n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n    \t.attr(\"stroke-opacity\", 0)\n    \t.transition().duration(1000)\n    \t.attr(\"stroke-opacity\", 1);\n\n      var tip = d3.tip()\n      .attr('class', 'd3-tip')\n      .offset(function (d) {\n        if (d.direction == \"forward\") {\n            return [-55, -48];\n        }\n        else if (d.direction == \"reverse\") {\n            return [-55, -48];\n        }\n      })\n      .html(function(d) {\n        return \"<b>Product:</b> <span style='color:white'>\" \n          + d.product + \"</span>\";\n      })\n      //Clickable tip box attr\n      var hidden = d3.tip()\n        .attr('class', 'd3-hidden')\n        .offset(function (d) {\n        if (d.direction == \"forward\") {\n            return [70, -48];\n            }\n        else if (d.direction == \"reverse\") {\n            return [70, -48];\n        }\n      })\n      .html(function(d) {\n        return \"<a style=color:white target=_blank href=http://blast.ncbi.nlm.nih.gov/Blast.cgi>BLAST:</a><span style='color:white'>\" \n          + \" \" + d.translation + \"</span>\";\n      })\n      //call the \"tool-tips\"\n      svg.call(tip);\n      svg.call(hidden);\n\t\t\tgenes.append(\"rect\")\n             \t.on('mouseover', tip.show).on('mouseout', tip.hide)\n      \t.on('click', hidden.show).on('dblclick', hidden.hide)\n     \t  .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          \tif (d.name % 2 === 0) {\n            \treturn 70;\n            }\n          \telse { return 40;}\n          }\n        \telse if (d.direction == \"reverse\") {\n            if (d.name % 2 === 0) {\n            \treturn 160;\n            }\n            else { return 130; }\n          }\n      })\n      \t.attr(\"x\", function (d) {\n        \tif (d.direction === \"forward\") {\n            return (0 - ((d.stop-d.start)/10)) - 2;\n          }\n        \telse if (d.direction === \"reverse\") {\n            return (genomelength/10) + 2;\n          }\n      })\n       \t.attr(\"height\", function (d) {return 30;})\n        .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      \t.attr(\"fill\", function (d) {\n        \tif (d.direction == \"forward\") {\n            return \"green\";\n          }\n        \telse if (d.direction == \"reverse\") {\n            return \"red\";\n          }\n        \telse {\n            return \"black\";\n          }\n      \t})\n   \t\t\t.transition().delay(1000).duration(1500).attr(\"x\", function (d) { return d.start/10; });\n\n\n    genes.append(\"text\") // gene name\n    \t.attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 90;\n        }\n        else { return 60;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 180;\n        }\n        \telse { return 150;}\n      }\n    })\n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    //.text(function(d) {return d.name})\n    //.text(function(d) {return (d.sequence.split((\"C\" -1) + (\"G\" -1) ).length)/(d.sequence.length) * 100})\n    .text(function(d) {\n      return ((d.sequence.match(/G/gi).length \n              + \n              d.sequence.match(/C/gi).length)/\n        d.sequence.length \n        * 100).toPrecision(2) +\"%\"})\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(2000).duration(1500)\n\t\t.attr(\"fill-opacity\", 1);\n\n    genes.append(\"text\") // pham name\n    \t.attr(\"x\", function(d) { \n      \treturn ((d.start + d.stop)/2)/10;\n    \t})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 60;\n        }\n        else { return 30;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 210;\n        }\n        \telse { return 180;}\n      }\n    })\n    \n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    .text(function(d) {\n      return d.pham\n    })\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(3500).duration(1500)\n\t\t.attr(\"fill-opacity\", 1);\n    });\n    \n\n    var group = svg.selectAll(\".thousandticks\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 100, width: \"1px\", height: 30})\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n\n\t    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n  \tgroup.append(\"text\")\n\t    .attr(\"x\", function(d) {return (d/10) + 3;})\n  \t  .attr(\"y\", (90) + 22)\n\t    .attr(\"font-family\", \"sans-serif\")\n\t    .attr(\"font-size\", \"14px\")\n\t    .attr(\"fill\", \"green\")\n\t    .style(\"text-anchor\", \"start\")\n\t    .text(function(d) { return d/1000; })\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n\t\tvar group2 = svg.selectAll(\".fivehundredticks\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n\t\t  .attr({x: function(d) {return d/10;}, y: 100, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n     \t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".onehundredticks\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 115, width: \"1px\", height: 15})\n    \t.attr(\"fill-opacity\", 0)\n    \t.transition().duration(1500)\n    \t.attr(\"fill-opacity\", 1);\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  </script>", "description": "genome browser", "created_at": "2016-03-24T16:03:56Z", "updated_at": "2016-03-24T16:04:00Z", "api": ["d3.json", "d3.select", "d3.tip"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/7fedb282aca4df15b0d4'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/ddd41979fd8e96c976f6'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/c7cf338b400b90b04f95'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/9ffb265094d8dffb8627'>genome browser</a>", "uid": "lambrex_374f80c550b969bc0853"}, {"code": "<script>\n var svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    //console.log(json);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n\n   // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\") // background for ruler\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    group.append(\"text\") \n    // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n      .append(\"g\");\n      gene.append(\"rect\")\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      .attr(\"fill\", function (d) {\n        if (d.direction == \"forward\") {\n          return \"green\";\n        }\n        else if (d.direction == \"reverse\") {\n          return \"red\";\n        }\n        else {\n          return \"black\";\n        }\n      })\n      .on(\"mouseover\", function(d) {\n        console.log(d);\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", .9);\n        div\t.html(\"gene direction \" + d.name + \" is \" + d.direction)//the text of the tooltip ...\n        \n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      })\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n\n      gene.append(\"text\") // gene name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { // forward and even\n            return -50;\n          }\n          else { return -10;} // forward and odd\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { // reverse and even\n            return 50;\n          }\n          else { return 80;} //reverse and odd\n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"blue\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n  });\n  </script>", "description": "genome browser", "created_at": "2016-03-24T14:14:26Z", "updated_at": "2016-03-24T15:12:16Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "ashtonburg_c9ff5176a08a7f1d55dd"}, {"code": "<script>\n    var svg = d3.select(\"body\")\n    \t.append(\"svg\")\n    \t.attr(\"height\", 1000);\n   \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n      svg.attr(\"width\", function(d) {\n        return d3.max(json, function(d) {\n          return d.genomelength/10;\n        })\n      });\n      \n      var sequences = svg.selectAll(\".genomes\")\n      \t.data(json)\n      \t.enter()\n      \t.append(\"g\");\n      sequences.attr(\"transform\", function(d, i) { \n        return \"translate(0,\" + (10 + (i*225)) + \")\"; \n      });\n      \n      //starting the ruler\n      sequences.append(\"rect\")\n        .attr({x: -500, y: 100, width: function(d) { \n          return d.genomelength/10; }, height: 30\n              })\n        .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n        .attr(\"stroke-opacity\", 0)\n        .transition(1000).duration(1000)\n      \t.attr({x: 0})\n        .attr(\"stroke-opacity\", 1);\n      \n      //grouping the 3 tick groups and displaying them\n    \tvar group = sequences.selectAll(\".a\")\n      \t.data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n       })\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\":\"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n    \t.attr({x: function (d) { return d/10; }, y: 100, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    //numbers @1000 ticks\n    group.append(\"text\")\n   \t\t.attr(\"y\", 112)\n    \t.attr(\"x\", function(d) {\n        return (d/10) + 1\n      })\n    \t.style({\"font-size\":\"20px\",\"fill\":\"red\"})\n    \t.transition().duration(2000).delay(2000)\n    \t.style({\"font-family\":\"verdana\",\"font-size\":\"10px\",\"fill\":\"green\"})\n      .text(function(d,i) {\n      \t\treturn i;\n    })\n\t\tvar group2 = sequences.selectAll(\".b\")\n      .data(function(d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0) {\n            ticks.push(currentValue);\n          }\n        });\n        return ticks;\n      })\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 15})\n     \t.attr({x: function(d) {return d/10;}, y: 100, width: \"1px\", height: 15})\n      .transition().duration(3000)\n      .attr(\"transform\", function (d) {\n      \treturn \"translate(\" + d/10 + \",0)\";\n    \t});\n\t\tvar group3 = sequences.selectAll(\".onehundredticks\")\n      .data(function(d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 500 !== 0 \n              & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        });\n        return ticks;\n      })\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 115, width: \"1px\", height: 15})\n    \t.attr({x: function (d) { return d/10; }, y: 115, width: \"1px\", height: 15})\n      .transition().duration(3000)\n      .attr(\"transform\", function (d) { \n      \treturn \"translate(\" + d/10 + \",0)\"; \n    \t});\n    \n      var genes = sequences.selectAll(\".genes\")\n  \t  \t.data(function(d) { return d.genes;})\n    \t  .enter()\n      \t.append(\"g\");\n      \t\n      //Hover box when you mouseover genes\n      var tip = d3.tip()\n      .attr('class', 'd3-tip')\n      .offset(function (d) {\n        if (d.direction == \"forward\") {\n            return [-20, -8];\n        }\n        else if (d.direction == \"reverse\") {\n            return [-20, -8];\n        }\n      })\n      .html(function(d) {\n        return \"<b>Product:</b> <span style='color:white'>\" \n          + d.product + \"</span>\";\n      })\n      //Clickable tip box attr\n      var hidden = d3.tip()\n        .attr('class', 'd3-hidden')\n        .offset(function (d) {\n        if (d.direction == \"forward\") {\n            return [80, -8];\n            }\n        else if (d.direction == \"reverse\") {\n            return [80, -8];\n        }\n      })\n      .html(function(d) {\n        return \"<a style=color:white target=_blank href=http://blast.ncbi.nlm.nih.gov/Blast.cgi>BLAST:</a><span style='color:white'>\" \n          + \" \" + d.translation + \"</span>\";\n      })\n\t\t//call the \"tool-tips\"\n      svg.call(tip);\n      svg.call(hidden);\n      \n\t\t //add in gene boxes with transistion\n\t\t genes.append(\"rect\")\n       \t.on('mouseover', tip.show).on('mouseout', tip.hide)\n      \t.on('click', hidden.show).on('dblclick', hidden.hide)\n  \t    .attr(\"x\", function (d) {\n        \tif (d.direction === \"forward\") {\n            return (0 - ((d.stop-d.start)/10)) - 2;\n          }\n        \telse if (d.direction === \"reverse\") {\n            return (d.genomelength/10) + 2;\n          }\n      \t})\n    \t  .attr(\"y\", function (d) { return 100; })\n      \t.attr(\"height\", function(d) { return 0; })\n      \t.attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style(\"fill\", function(d) {\n          if (d.direction === \"forward\") {\n            return \"009900\";\n          }\n          else if\t(d.direction === \"reverse\"){\n            return \"FF6600\";\n          }\n          else  {\n            return \"yellow\";\n          }\n        })\n      \t.style({\"stroke\":\"black\", \"stroke-width\":\"2px\"})\n   \t\t\t.transition().delay(2000).duration(2000)\n     \t\t.attr(\"x\", function (d) { \n          return d.start/10; \n        })\n     \t  .attr(\"y\", function (d) { \n          if (d.direction == \"forward\" && d.name%2==0) {\n          return 34; \n          }\n          else if (d.direction == \"forward\" && d.name%2!==0) {\n          \treturn 67; \n          }\n          else if (d.direction == \"reverse\" && d.name%2==0) {\n            return 133;\n          }\n          else if (d.direction == \"reverse\" && d.name%2!==0) {\n            return 165;\n          }\n          else\t{\n            return 60;\n          }\n        })\n       \t.attr(\"height\", function (d) {return 30;})\n      \tgroup.on(\"click\", function() {\n        \tconsole.log(\"rect\");\n      \t})\n  \t\t//text in gene boxes\n      genes.append(\"text\") \n        .attr(\"x\", function (d) { return ((d.start+d.stop)/10)/2})\n        .style(\"text-anchor\",\"middle\")\n        .style({\"font-family\":\"verdana\",\"font-size\":\"18px\",\"fill\":\"white\"})\n        .attr(\"y\", function (d) { \n          if (d.direction === \"forward\" && d.name%2==0) {\n            return 58;\n          }\n          else if (d.direction === \"forward\" && d.name%2!==0) {\n            return 91;\n          }\n          else if (d.direction === \"reverse\" && d.name%2==0) {\n            return 151;\n          }\n          else if (d.direction === \"reverse\" && d.name%2!==0) {\n            return 185;\n          }\n          else {\n            return 80;\n        \t}\n      \t})\n        .text(function (d) {\n        \treturn d.name;})\n          //var c = 0;\n          //var g = 0;\n          //for (var i=0; i<=d.sequence.length; i++) {\n           // if (d.sequence[i] === \"C\") {c++; }\n           // else if (d.sequence[i] === \"G\") {g++;}\n          //}\n         // return (((c+g)/d.sequence.length)*100);})\n        //.attr(\"fill-opacity\",0)\n        //.transition().duration(3000).delay(2000)\n        //.attr(\"fill-opacity\",1);\n\n      // text above or below boxes\n      genes.append(\"text\") \n        .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n        .attr(\"y\", function (d) {\n          if (d.direction == \"forward\") {\n            if (d.name % 2 === 0) {\n              return 28;\n            }\n            else { return 59;}\n          }\n          else if (d.direction == \"reverse\") {\n            if (d.name % 2 === 0) {\n              return 181;\n            }\n              else { return 213;}\n          }\n      \t})\n        .style({\"text-anchor\":\"middle\",\"fill\":\"black\",\"font-weight\":\"bold\"})\n        .attr(\"font-family\",\"sans-serif\")\n        .text(function(d) {return d.subnum})\n        .attr(\"fill-opacity\", 0)\n        .transition().delay(4500).duration(1000)\n        .attr(\"fill-opacity\", 1);\n       \n });\n  </script>", "description": "genome browser with tool tip and multi genome", "created_at": "2016-03-24T14:03:51Z", "updated_at": "2016-03-24T14:04:14Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range", "d3.tip"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/JohnWall64/'>JohnWall64</a>'s block: <a href='http://bl.ocks.org/JohnWall64/6c3c37cde8f7ccf01c22'>fresh block</a>", "uid": "grybnicky_754657775a7809725130"}, {"code": "<script>\n\t\tvar margin = {top: 20, right: 20, bottom: 30, left: 30},\n\t\t\twidth = 960 - margin.left - margin.right,\n\t\t\theight = 500 - margin.top - margin.bottom;\n\t\t// Setup x \n\t\tvar xValue = function(d) { return d[\"Rushing TD\"];}, // data -> value\n\t\t\txScale = d3.scale.linear().range([0, width]), // value -> display\n\t\t\txMap = function(d) { return xScale(xValue(d));}, // data -> display\n\t\t\txAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\t\t// Setup y\n\t\tvar yValue = function(d) { return d[\"Passing TD\"];}, // data -> value\n\t\t\tyScale = d3.scale.linear().range([height, 0]), // value -> display\n\t\t\tyMap = function(d) { return yScale(yValue(d));}, // data -> display\n\t\t\tyAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\t\t// Setup fill color\n\t\tvar cValue = function(d) { return d.Group;},\n\t\t\tcolor = d3.scale.ordinal().range(colorbrewer.Set1[3]);\n\t\t// Add the graph canvas to the body of the webpage\n\t\tvar svg = d3.select(\"body\").append(\"svg\")\n\t\t\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t\t\t\t\t.append(\"g\")\n\t\t\t\t\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\t// Add the tooltip area to the webpage\n\t\tvar tooltip = d3.select(\"body\").append(\"div\")\n\t\t\t\t\t\t\t.attr(\"class\", \"tooltip\")\n\t\t\t\t\t\t\t.style(\"opacity\", 0);\n\t\t// load data\n\t\td3.csv(\"passing-stats-2014.csv\", function(error, data) {\n\t\t\t// Change string from CSV into number format\n\t\t\tdata.forEach(function(d) {\n\t\t\t\td[\"Passing TD\"] = +d[\"Passing TD\"];\n\t\t\t\td[\"Rushing TD\"] = +d[\"Rushing TD\"];\n\t\t\t});\n\t\t\t// Add buffer to data domain so dots won't overlap axis\n\t\t\txScale.domain([d3.min(data, xValue)-1, d3.max(data, xValue)+1]);\n\t\t\tyScale.domain([d3.min(data, yValue)-1, d3.max(data, yValue)+1]);\n\t\t\t// Create x-axis\n\t\t\tsvg.append(\"g\")\n\t\t\t\t\t.attr(\"class\", \"x axis\")\n\t\t\t\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t\t\t\t.call(xAxis)\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"label\")\n\t\t\t\t\t.attr(\"x\", width)\n\t\t\t\t\t.attr(\"y\", -6)\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(\"Rushing TDs\");\n\t\t\t// Create y-axis\n\t\t\tsvg.append(\"g\")\n\t\t\t\t\t.attr(\"class\", \"y axis\")\n\t\t\t\t\t.call(yAxis)\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"label\")\n\t\t\t\t\t.attr(\"transform\", \"rotate(-90)\")\n\t\t\t\t\t.attr(\"y\", 6)\n\t\t\t\t\t.attr(\"dy\", \".71em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(\"Passing TDs\");\n\t\t\t// Draw dots\n\t\t\tsvg.selectAll(\".dot\")\n\t\t\t\t.data(data)\n\t\t\t\t.enter().append(\"circle\")\n\t\t\t\t.attr(\"class\", \"dot\")\n\t\t\t\t.attr(\"r\", 4.0)\n\t\t\t\t.attr(\"cx\", xMap)\n\t\t\t\t.attr(\"cy\", yMap)\n\t\t\t\t.style(\"fill\", function(d) { return color(cValue(d));}) \n\t\t\t\t.on(\"mouseover\", function(d) {\n\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.duration(200)\n\t\t\t\t\t\t\t.style(\"opacity\", .9);\n\t\t\t\t\ttooltip.html(d[\"Player\"] + \"<br/> \" + d.School + \"<br/> \" + d.Conf + \"<br/>(\" + xValue(d) \t//Hover information\n\t\t\t\t\t\t\t\t\t+ \", \" + yValue(d) + \")\")\n\t\t\t\t\t\t\t.style(\"left\", (d3.event.pageX + 10) + \"px\")\n\t\t\t\t\t\t\t.style(\"top\", (d3.event.pageY - 28) + \"px\");\n\t\t\t\t})\n\t\t\t\t.on(\"mouseout\", function(d) {\n\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.duration(500)\n\t\t\t\t\t\t\t.style(\"opacity\", 0);\n\t\t\t\t});\n\t\t\t// Draw legend\n\t\t\tvar legend = svg.selectAll(\".legend\")\n\t\t\t\t\t\t\t.data(color.domain())\n\t\t\t\t\t\t\t.enter().append(\"g\")\n\t\t\t\t\t\t\t\t.attr(\"class\", \"legend\")\n\t\t\t\t\t\t\t\t.attr(\"transform\", function(d, i) { return \"translate(10,\" + (i+7) * 20 + \")\"; });\n\t\t\t// Draw legend colored rectangles\n\t\t\tlegend.append(\"rect\")\n\t\t\t\t\t.attr(\"x\", width - 18)\n\t\t\t\t\t.attr(\"width\", 18)\n\t\t\t\t\t.attr(\"height\", 18)\n\t\t\t\t\t.style(\"fill\", color);\n\t\t\t// Draw legend text\n\t\t\tlegend.append(\"text\")\n\t\t\t\t\t.attr(\"x\", width - 24)\n\t\t\t\t\t.attr(\"y\", 9)\n\t\t\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(function(d) { return d;})\n\t\t});\n    </script>\n\t\t\n  \t     <h2> Color-blind Safe</h2>\n\t\t<p> People with color blindness cannot differentiate blue-yellow and green-red. Color blind safe palette has only differentiable colors. I used differtiable colors like orange, green, violet.\n\t\t<br>\n\t\t\n\t\n\t\n\t      <script>\n\t\tvar margin = {top: 20, right: 20, bottom: 30, left: 30},\n\t\t\twidth = 960 - margin.left - margin.right,\n\t\t\theight = 500 - margin.top - margin.bottom;\n\t\t// Setup x \n\t\tvar xValue = function(d) { return d[\"Rushing TD\"];}, // data -> value\n\t\t\txScale = d3.scale.linear().range([0, width]), // value -> display\n\t\t\txMap = function(d) { return xScale(xValue(d));}, // data -> display\n\t\t\txAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\t\t// Setup y\n\t\tvar yValue = function(d) { return d[\"Passing TD\"];}, // data -> value\n\t\t\tyScale = d3.scale.linear().range([height, 0]), // value -> display\n\t\t\tyMap = function(d) { return yScale(yValue(d));}, // data -> display\n\t\t\tyAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\t\t// Setup fill color\n\t\tvar cValue = function(d) { return d.Group;},\n\t\t\tcolor1 = d3.scale.ordinal().range(colorbrewer.Dark2[3]);\n\t\t// Add the graph canvas to the body of the webpage\n\t\tvar svg1 = d3.select(\"body\").append(\"svg\")\n\t\t\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t\t\t\t\t.append(\"g\")\n\t\t\t\t\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\t// Add the tooltip area to the webpage\n\t\tvar tooltip = d3.select(\"body\").append(\"div\")\n\t\t\t\t\t\t\t.attr(\"class\", \"tooltip\")\n\t\t\t\t\t\t\t.style(\"opacity\", 0);\n\t\t// load data\n\t\td3.csv(\"passing-stats-2014.csv\", function(error, data) {\n\t\t\t// Change string from CSV into number format\n\t\t\tdata.forEach(function(d) {\n\t\t\t\td[\"Passing TD\"] = +d[\"Passing TD\"];\n\t\t\t\td[\"Rushing TD\"] = +d[\"Rushing TD\"];\n\t\t\t});\n\t\t\t// Add buffer to data domain so dots won't overlap axis\n\t\t\txScale.domain([d3.min(data, xValue)-1, d3.max(data, xValue)+1]);\n\t\t\tyScale.domain([d3.min(data, yValue)-1, d3.max(data, yValue)+1]);\n\t\t\t// Create x-axis\n\t\t\tsvg1.append(\"g\")\n\t\t\t\t\t.attr(\"class\", \"x axis\")\n\t\t\t\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t\t\t\t.call(xAxis)\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"label\")\n\t\t\t\t\t.attr(\"x\", width)\n\t\t\t\t\t.attr(\"y\", -6)\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(\"Rushing TDs\");\n\t\t\t// Create y-axis\n\t\t\tsvg1.append(\"g\")\n\t\t\t\t\t.attr(\"class\", \"y axis\")\n\t\t\t\t\t.call(yAxis)\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"label\")\n\t\t\t\t\t.attr(\"transform\", \"rotate(-90)\")\n\t\t\t\t\t.attr(\"y\", 6)\n\t\t\t\t\t.attr(\"dy\", \".71em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(\"Passing TDs\");\n\t\t\t// Draw dots\n\t\t\tsvg1.selectAll(\".dot\")\n\t\t\t\t.data(data)\n\t\t\t\t.enter().append(\"circle\")\n\t\t\t\t.attr(\"class\", \"dot\")\n\t\t\t\t.attr(\"r\", 4.0)\n\t\t\t\t.attr(\"cx\", xMap)\n\t\t\t\t.attr(\"cy\", yMap)\n\t\t\t\t.style(\"fill\", function(d) { return color1(cValue(d));}) \n\t\t\t\t.on(\"mouseover\", function(d) {\n\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.duration(200)\n\t\t\t\t\t\t\t.style(\"opacity\", .9);\n\t\t\t\t\ttooltip.html(d[\"Player\"] + \"<br/> \" + d.School + \"<br/> \" + d.Conf + \"<br/>(\" + xValue(d) \t//Hover information\n\t\t\t\t\t\t\t\t\t+ \", \" + yValue(d) + \")\")\n\t\t\t\t\t\t\t.style(\"left\", (d3.event.pageX + 10) + \"px\")\n\t\t\t\t\t\t\t.style(\"top\", (d3.event.pageY - 28) + \"px\");\n\t\t\t\t})\n\t\t\t\t.on(\"mouseout\", function(d) {\n\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.duration(500)\n\t\t\t\t\t\t\t.style(\"opacity\", 0);\n\t\t\t\t});\n\t\t\t// Draw legend\n\t\t\tvar legend = svg1.selectAll(\".legend\")\n\t\t\t\t\t\t\t.data(color1.domain())\n\t\t\t\t\t\t\t.enter().append(\"g\")\n\t\t\t\t\t\t\t\t.attr(\"class\", \"legend\")\n\t\t\t\t\t\t\t\t.attr(\"transform\", function(d, i) { return \"translate(10,\" + (i+7) * 20 + \")\"; });\n\t\t\t// Draw legend colored rectangles\n\t\t\tlegend.append(\"rect\")\n\t\t\t\t\t.attr(\"x\", width - 18)\n\t\t\t\t\t.attr(\"width\", 18)\n\t\t\t\t\t.attr(\"height\", 18)\n\t\t\t\t\t.style(\"fill\", color1);\n\t\t\t// Draw legend text\n\t\t\tlegend.append(\"text\")\n\t\t\t\t\t.attr(\"x\", width - 24)\n\t\t\t\t\t.attr(\"y\", 9)\n\t\t\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(function(d) { return d;})\n\t\t});\n\t\t\n\t</script>\n    \n    <h2> Photocopy Safe</h2>\n\t\t<p> Photocopy safe colors should have same amount of brightness and lightness, I choose a set of colors from color brewer which have the same brightness and lightness.\n\t\t<br>\n\t\t\n\t\n\t\n\t      <script>\n\t\tvar margin = {top: 20, right: 20, bottom: 30, left: 30},\n\t\t\twidth = 960 - margin.left - margin.right,\n\t\t\theight = 500 - margin.top - margin.bottom;\n\t\t// Setup x \n\t\tvar xValue = function(d) { return d[\"Rushing TD\"];}, // data -> value\n\t\t\txScale = d3.scale.linear().range([0, width]), // value -> display\n\t\t\txMap = function(d) { return xScale(xValue(d));}, // data -> display\n\t\t\txAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\t\t// Setup y\n\t\tvar yValue = function(d) { return d[\"Passing TD\"];}, // data -> value\n\t\t\tyScale = d3.scale.linear().range([height, 0]), // value -> display\n\t\t\tyMap = function(d) { return yScale(yValue(d));}, // data -> display\n\t\t\tyAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\t\t// Setup fill color\n\t\tvar cValue = function(d) { return d.Group;},\n\t\t\tcolor2 = d3.scale.ordinal().range(colorbrewer.Set3[3]);\n\t\t// Add the graph canvas to the body of the webpage\n\t\tvar svg2 = d3.select(\"body\").append(\"svg\")\n\t\t\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t\t\t\t\t.append(\"g\")\n\t\t\t\t\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\t// Add the tooltip area to the webpage\n\t\tvar tooltip = d3.select(\"body\").append(\"div\")\n\t\t\t\t\t\t\t.attr(\"class\", \"tooltip\")\n\t\t\t\t\t\t\t.style(\"opacity\", 0);\n\t\t// load data\n\t\td3.csv(\"passing-stats-2014.csv\", function(error, data) {\n\t\t\t// Change string from CSV into number format\n\t\t\tdata.forEach(function(d) {\n\t\t\t\td[\"Passing TD\"] = +d[\"Passing TD\"];\n\t\t\t\td[\"Rushing TD\"] = +d[\"Rushing TD\"];\n\t\t\t});\n\t\t\t// Add buffer to data domain so dots won't overlap axis\n\t\t\txScale.domain([d3.min(data, xValue)-1, d3.max(data, xValue)+1]);\n\t\t\tyScale.domain([d3.min(data, yValue)-1, d3.max(data, yValue)+1]);\n\t\t\t// Create x-axis\n\t\t\tsvg2.append(\"g\")\n\t\t\t\t\t.attr(\"class\", \"x axis\")\n\t\t\t\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t\t\t\t.call(xAxis)\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"label\")\n\t\t\t\t\t.attr(\"x\", width)\n\t\t\t\t\t.attr(\"y\", -6)\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(\"Rushing TDs\");\n\t\t\t// Create y-axis\n\t\t\tsvg2.append(\"g\")\n\t\t\t\t\t.attr(\"class\", \"y axis\")\n\t\t\t\t\t.call(yAxis)\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"label\")\n\t\t\t\t\t.attr(\"transform\", \"rotate(-90)\")\n\t\t\t\t\t.attr(\"y\", 6)\n\t\t\t\t\t.attr(\"dy\", \".71em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(\"Passing TDs\");\n\t\t\t// Draw dots\n\t\t\tsvg2.selectAll(\".dot\")\n\t\t\t\t.data(data)\n\t\t\t\t.enter().append(\"circle\")\n\t\t\t\t.attr(\"class\", \"dot\")\n\t\t\t\t.attr(\"r\", 4.0)\n\t\t\t\t.attr(\"cx\", xMap)\n\t\t\t\t.attr(\"cy\", yMap)\n\t\t\t\t.style(\"fill\", function(d) { return color2(cValue(d));}) \n\t\t\t\t.on(\"mouseover\", function(d) {\n\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.duration(200)\n\t\t\t\t\t\t\t.style(\"opacity\", .9);\n\t\t\t\t\ttooltip.html(d[\"Player\"] + \"<br/> \" + d.School + \"<br/> \" + d.Conf + \"<br/>(\" + xValue(d) \t//Hover information\n\t\t\t\t\t\t\t\t\t+ \", \" + yValue(d) + \")\")\n\t\t\t\t\t\t\t.style(\"left\", (d3.event.pageX + 10) + \"px\")\n\t\t\t\t\t\t\t.style(\"top\", (d3.event.pageY - 28) + \"px\");\n\t\t\t\t})\n\t\t\t\t.on(\"mouseout\", function(d) {\n\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.duration(500)\n\t\t\t\t\t\t\t.style(\"opacity\", 0);\n\t\t\t\t});\n\t\t\t// Draw legend\n\t\t\tvar legend = svg2.selectAll(\".legend\")\n\t\t\t\t\t\t\t.data(color1.domain())\n\t\t\t\t\t\t\t.enter().append(\"g\")\n\t\t\t\t\t\t\t\t.attr(\"class\", \"legend\")\n\t\t\t\t\t\t\t\t.attr(\"transform\", function(d, i) { return \"translate(10,\" + (i+7) * 20 + \")\"; });\n\t\t\t// Draw legend colored rectangles\n\t\t\tlegend.append(\"rect\")\n\t\t\t\t\t.attr(\"x\", width - 18)\n\t\t\t\t\t.attr(\"width\", 18)\n\t\t\t\t\t.attr(\"height\", 18)\n\t\t\t\t\t.style(\"fill\", color2);\n\t\t\t// Draw legend text\n\t\t\tlegend.append(\"text\")\n\t\t\t\t\t.attr(\"x\", width - 24)\n\t\t\t\t\t.attr(\"y\", 9)\n\t\t\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(function(d) { return d;})\n\t\t});\n\t\t\n\t</script>\n      \n       <h2>QBs from schools in the Big Five conferences,Color the marks by conference.</h2>\n\t<h2>No Restrictions</h2>\n    <p> To identify conferences easily,used various diffrentiable colors.\n\t\t\n\t<script>\n\t\tvar margin = {top: 20, right: 20, bottom: 30, left: 30},\n\t\t\twidth = 960 - margin.left - margin.right,\n\t\t\theight = 500 - margin.top - margin.bottom;\n\t\t// Setup x \n\t\tvar xValue = function(d2) { return d2[\"Rushing TD\"];}, // data -> value\n\t\t\txScale = d3.scale.linear().range([0, width]), // value -> display\n\t\t\txMap = function(d2) { return xScale(xValue(d2));}, // data -> display\n\t\t\txAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\t\t// Setup y\n\t\tvar yValue = function(d2) { return d2[\"Passing TD\"];}, // data -> value\n\t\t\tyScale = d3.scale.linear().range([height, 0]), // value -> display\n\t\t\tyMap = function(d2) { return yScale(yValue(d2));}, // data -> display\n\t\t\tyAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\t\t// Setup fill color\n\t\tvar cValue1 = function(d2) { return d2.Conf;},\n\t\t\tcolor3 = d3.scale.ordinal()\n\t\t\t\t\t\t.range(colorbrewer.Set1[5]);\n\t\t// Add the graph canvas to the body of the webpage\n\t\tvar svg3 = d3.select(\"body\").append(\"svg\")\n\t\t\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t\t\t\t\t.append(\"g\")\n\t\t\t\t\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\t// Add the tooltip area to the webpage\n\t\tvar tooltip = d3.select(\"body\").append(\"div\")\n\t\t\t\t\t\t\t.attr(\"class\", \"tooltip\")\n\t\t\t\t\t\t\t.style(\"opacity\", 0);\n\t\t// load data\n\t\td3.csv(\"passing-stats-2014.csv\", function(error, data1) {\n\t\t\t// Change string from CSV into number format\n\t\t\tdata1.forEach(function(d2) {\n\t\t\t\td2[\"Passing TD\"] = +d2[\"Passing TD\"];\n\t\t\t\td2[\"Rushing TD\"] = +d2[\"Rushing TD\"];\n\t\t\t});\n\t\t\t// Add buffer to data domain so dots won't overlap axis\n\t\t\txScale.domain([d3.min(data1, xValue)-1, d3.max(data1, xValue)+1]);\n\t\t\tyScale.domain([d3.min(data1, yValue)-1, d3.max(data1, yValue)+1]);\n\t\t\t// Create x-axis\n\t\t\tsvg3.append(\"g\")\n\t\t\t\t\t.attr(\"class\", \"x axis\")\n\t\t\t\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t\t\t\t.call(xAxis)\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"label\")\n\t\t\t\t\t.attr(\"x\", width)\n\t\t\t\t\t.attr(\"y\", -6)\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(\"Rushing TDs\");\n\t\t\t// Create y-axis\n\t\t\tsvg3.append(\"g\")\n\t\t\t\t\t.attr(\"class\", \"y axis\")\n\t\t\t\t\t.call(yAxis)\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"label\")\n\t\t\t\t\t.attr(\"transform\", \"rotate(-90)\")\n\t\t\t\t\t.attr(\"y\", 6)\n\t\t\t\t\t.attr(\"dy\", \".71em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(\"Passing TDs\");\n\t\t\t// Draw dots\n\t\t\tsvg3.selectAll(\".dot\")\n\t\t\t\t.data(data1)\n\t\t\t\t.enter().append(\"circle\")\n\t\t\t\t.filter(function(d2) { return d2.Group == \"Big Five\" })\n\t\t\t\t.attr(\"class\", \"dot\")\n\t\t\t\t.attr(\"r\", 4.0)\n\t\t\t\t.attr(\"cx\", xMap)\n\t\t\t\t.attr(\"cy\", yMap)\n\t\t\t\t.style(\"fill\", function(d2) { return color3(cValue1(d2));}) \n\t\t\t\t.on(\"mouseover\", function(d2) {\n\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.duration(200)\n\t\t\t\t\t\t\t.style(\"opacity\", .9);\n\t\t\t\t\ttooltip.html(d2[\"Player\"] + \"<br/> \" + d2.School + \"<br/> \" + d2.Conf + \"<br/>(\" + xValue(d2) \t//Hover information\n\t\t\t\t\t\t\t\t\t+ \", \" + yValue(d2) + \")\")\n\t\t\t\t\t\t\t.style(\"left\", (d3.event.pageX + 10) + \"px\")\n\t\t\t\t\t\t\t.style(\"top\", (d3.event.pageY - 28) + \"px\");\n\t\t\t\t})\n\t\t\t\t.on(\"mouseout\", function(d2) {\n\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.duration(500)\n\t\t\t\t\t\t\t.style(\"opacity\", 0);\n\t\t\t\t});\n\t\t\t// Draw legend\n\t\t\tvar legend1 = svg3.selectAll(\".legend\")\n\t\t\t\t\t\t\t.data(color3.domain())\n\t\t\t\t\t\t\t.enter().append(\"g\")\n\t\t\t\t\t\t\t\t.attr(\"class\", \"legend\")\n\t\t\t\t\t\t\t\t.attr(\"transform\", function(d2, i) { return \"translate(10,\" + (i+7) * 20 + \")\"; });\n\t\t\t// Draw legend colored rectangles\n\t\t\tlegend1.append(\"rect\")\n\t\t\t\t\t.attr(\"x\", width - 18)\n\t\t\t\t\t.attr(\"width\", 18)\n\t\t\t\t\t.attr(\"height\", 18)\n\t\t\t\t\t.style(\"fill\", color3);\n\t\t\t// Draw legend text\n\t\t\tlegend1.append(\"text\")\n\t\t\t\t\t.attr(\"x\", width - 24)\n\t\t\t\t\t.attr(\"y\", 9)\n\t\t\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(function(d2) { return d2;})\n\t\t});\n\t\t\n\t</script> \n    <h2>Can you do a color-blind safe or photocopy safe version?  why or why not? </h2>\n\t\t<p>It is not possible to do a color-blind safe or a photocopy safe version. This is because, we are increasing the number of categories here from 3 to 5.Since photocopy safe and color-blind limit the number of available bins we can work with and even though the chart can be displayed, we do not have enough bins to separate the categories</p>\n\t\n\t <h2> Top 5 QBs by rank and color the marks by rank</h2>\n    <h2>Multi-hue colormap</h2>\n      <p> Colors diverge from orange to violet,the data is ordered by rank. Rank1(orange)  -Rank5(violet).</p>\n\t<script>\n\t\tvar margin = {top: 20, right: 20, bottom: 30, left: 30},\n\t\t\twidth = 960 - margin.left - margin.right,\n\t\t\theight = 500 - margin.top - margin.bottom;\n\t\t// Setup x \n\t\tvar xValue = function(d1) { return d1[\"Rushing TD\"];}, // data -> value\n\t\t\txScale = d3.scale.linear().range([0, width]), // value -> display\n\t\t\txMap = function(d1) { return xScale(xValue(d1));}, // data -> display\n\t\t\txAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\t\t// Setup y\n\t\tvar yValue = function(d1) { return d1[\"Passing TD\"];}, // data -> value\n\t\t\tyScale = d3.scale.linear().range([height, 0]), // value -> display\n\t\t\tyMap = function(d1) { return yScale(yValue(d1));}, // data -> display\n\t\t\tyAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\t\t// Setup fill color\n\t\tvar cValue3 = function(d1) { return d1.Rk;},\n\t\t\tcolor5 = d3.scale.ordinal()\n\t\t\t\t\t\t.range(colorbrewer.PuOr[5]);\n\t\t// Add the graph canvas to the body of the webpage\n\t\tvar svg5 = d3.select(\"body\").append(\"svg\")\n\t\t\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t\t\t\t\t.append(\"g\")\n\t\t\t\t\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\t// Add the tooltip area to the webpage\n\t\tvar tooltip = d3.select(\"body\").append(\"div\")\n\t\t\t\t\t\t\t.attr(\"class\", \"tooltip\")\n\t\t\t\t\t\t\t.style(\"opacity\", 0);\n\t\t// load data\n\t\td3.csv(\"passing-stats-2014.csv\", function(error, data) {\n\t\t\t// Change string from CSV into number format\n\t\t\tdata.forEach(function(d1) {\n\t\t\t\td1[\"Passing TD\"] = +d1[\"Passing TD\"];\n\t\t\t\td1[\"Rushing TD\"] = +d1[\"Rushing TD\"];\n\t\t\t});\n\t\t\t// Add buffer to data domain so dots won't overlap axis\n\t\t\txScale.domain([d3.min(data, xValue)-1, d3.max(data, xValue)+1]);\n\t\t\tyScale.domain([d3.min(data, yValue)-1, d3.max(data, yValue)+1]);\n\t\t\t// Create x-axis\n\t\t\tsvg5.append(\"g\")\n\t\t\t\t\t.attr(\"class\", \"x axis\")\n\t\t\t\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t\t\t\t.call(xAxis)\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"label\")\n\t\t\t\t\t.attr(\"x\", width)\n\t\t\t\t\t.attr(\"y\", -6)\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(\"Rushing TDs\");\n\t\t\t// Create y-axis\n\t\t\tsvg5.append(\"g\")\n\t\t\t\t\t.attr(\"class\", \"y axis\")\n\t\t\t\t\t.call(yAxis)\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"label\")\n\t\t\t\t\t.attr(\"transform\", \"rotate(-90)\")\n\t\t\t\t\t.attr(\"y\", 6)\n\t\t\t\t\t.attr(\"dy\", \".71em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(\"Passing TDs\");\n\t\t\t// Draw dots\n\t\t\tsvg5.selectAll(\".dot\")\n\t\t\t\t.data(data)\n\t\t\t\t.enter().append(\"circle\")\n\t\t\t\t.filter(function(d1) { return d1.Rk < 6 })\n\t\t\t\t.attr(\"class\", \"dot\")\n\t\t\t\t.attr(\"r\", 4.0)\n\t\t\t\t.attr(\"cx\", xMap)\n\t\t\t\t.attr(\"cy\", yMap)\n\t\t\t\t.style(\"fill\", function(d1) { return color5(cValue3(d1));}) \n\t\t\t\t.on(\"mouseover\", function(d1) {\n\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.duration(200)\n\t\t\t\t\t\t\t.style(\"opacity\", .9);\n\t\t\t\t\ttooltip.html(d1[\"Player\"] + \"<br/> \" + d1.School + \"<br/> \" + d1.Conf + \"<br/>(\" + xValue(d1) \t//Hover information\n\t\t\t\t\t\t\t\t\t+ \", \" + yValue(d1) + \")\")\n\t\t\t\t\t\t\t.style(\"left\", (d3.event.pageX + 10) + \"px\")\n\t\t\t\t\t\t\t.style(\"top\", (d3.event.pageY - 28) + \"px\");\n\t\t\t\t})\n\t\t\t\t.on(\"mouseout\", function(d1) {\n\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.duration(500)\n\t\t\t\t\t\t\t.style(\"opacity\", 0);\n\t\t\t\t});\n\t\t\t// Draw legend\n\t\t\tvar legend = svg5.selectAll(\".legend\")\n\t\t\t\t\t\t\t.data(color5.domain())\n\t\t\t\t\t\t\t.enter().append(\"g\")\n\t\t\t\t\t\t\t\t.attr(\"class\", \"legend\")\n\t\t\t\t\t\t\t\t.attr(\"transform\", function(d1, i) { return \"translate(10,\" + (i+7) * 20 + \")\"; });\n\t\t\t// Draw legend colored rectangles\n\t\t\tlegend.append(\"rect\")\n\t\t\t\t\t.attr(\"x\", width - 18)\n\t\t\t\t\t.attr(\"width\", 18)\n\t\t\t\t\t.attr(\"height\", 18)\n\t\t\t\t\t.style(\"fill\", color5);\n\t\t\t// Draw legend text\n\t\t\tlegend.append(\"text\")\n\t\t\t\t\t.attr(\"x\", width - 24)\n\t\t\t\t\t.attr(\"y\", 9)\n\t\t\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(function(d1) { return d1;})\n\t\t});\n\t\t\n\t</script> \n\t\n\t\n\n\t\n\t\t<h2>Single-hue Colormap </h2>\n\t\t\n    <p>A lighter color of green to dark green to represent the ordered data. </p>\n\t<script>\n\t\tvar margin = {top: 20, right: 20, bottom: 30, left: 30},\n\t\t\twidth = 960 - margin.left - margin.right,\n\t\t\theight = 500 - margin.top - margin.bottom;\n\t\t// Setup x \n\t\tvar xValue = function(d1) { return d1[\"Rushing TD\"];}, // data -> value\n\t\t\txScale = d3.scale.linear().range([0, width]), // value -> display\n\t\t\txMap = function(d1) { return xScale(xValue(d1));}, // data -> display\n\t\t\txAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\t\t// Setup y\n\t\tvar yValue = function(d1) { return d1[\"Passing TD\"];}, // data -> value\n\t\t\tyScale = d3.scale.linear().range([height, 0]), // value -> display\n\t\t\tyMap = function(d1) { return yScale(yValue(d1));}, // data -> display\n\t\t\tyAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\t\t// Setup fill color\n\t\tvar cValue3 = function(d1) { return d1.Rk;},\n\t\t\tcolor4 = d3.scale.ordinal()\n\t\t\t\t\t\t.range(colorbrewer.Greens[5]);\n\t\t// Add the graph canvas to the body of the webpage\n\t\tvar svg4 = d3.select(\"body\").append(\"svg\")\n\t\t\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t\t\t\t\t.append(\"g\")\n\t\t\t\t\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\t// Add the tooltip area to the webpage\n\t\tvar tooltip = d3.select(\"body\").append(\"div\")\n\t\t\t\t\t\t\t.attr(\"class\", \"tooltip\")\n\t\t\t\t\t\t\t.style(\"opacity\", 0);\n\t\t// load data\n\t\td3.csv(\"passing-stats-2014.csv\", function(error, data) {\n\t\t\t// Change string from CSV into number format\n\t\t\tdata.forEach(function(d1) {\n\t\t\t\td1[\"Passing TD\"] = +d1[\"Passing TD\"];\n\t\t\t\td1[\"Rushing TD\"] = +d1[\"Rushing TD\"];\n\t\t\t});\n\t\t\t// Add buffer to data domain so dots won't overlap axis\n\t\t\txScale.domain([d3.min(data, xValue)-1, d3.max(data, xValue)+1]);\n\t\t\tyScale.domain([d3.min(data, yValue)-1, d3.max(data, yValue)+1]);\n\t\t\t// Create x-axis\n\t\t\tsvg4.append(\"g\")\n\t\t\t\t\t.attr(\"class\", \"x axis\")\n\t\t\t\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t\t\t\t.call(xAxis)\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"label\")\n\t\t\t\t\t.attr(\"x\", width)\n\t\t\t\t\t.attr(\"y\", -6)\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(\"Rushing TDs\");\n\t\t\t// Create y-axis\n\t\t\tsvg4.append(\"g\")\n\t\t\t\t\t.attr(\"class\", \"y axis\")\n\t\t\t\t\t.call(yAxis)\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"label\")\n\t\t\t\t\t.attr(\"transform\", \"rotate(-90)\")\n\t\t\t\t\t.attr(\"y\", 6)\n\t\t\t\t\t.attr(\"dy\", \".71em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(\"Passing TDs\");\n\t\t\t// Draw dots\n\t\t\tsvg4.selectAll(\".dot\")\n\t\t\t\t.data(data)\n\t\t\t\t.enter().append(\"circle\")\n\t\t\t\t.filter(function(d1) { return d1.Rk < 6 })\n\t\t\t\t.attr(\"class\", \"dot\")\n\t\t\t\t.attr(\"r\", 4.0)\n\t\t\t\t.attr(\"cx\", xMap)\n\t\t\t\t.attr(\"cy\", yMap)\n\t\t\t\t.style(\"fill\", function(d1) { return color4(cValue3(d1));}) \n\t\t\t\t.on(\"mouseover\", function(d1) {\n\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.duration(200)\n\t\t\t\t\t\t\t.style(\"opacity\", .9);\n\t\t\t\t\ttooltip.html(d1[\"Player\"] + \"<br/> \" + d1.School + \"<br/> \" + d1.Conf + \"<br/>(\" + xValue(d1) \t//Hover information\n\t\t\t\t\t\t\t\t\t+ \", \" + yValue(d1) + \")\")\n\t\t\t\t\t\t\t.style(\"left\", (d3.event.pageX + 10) + \"px\")\n\t\t\t\t\t\t\t.style(\"top\", (d3.event.pageY - 28) + \"px\");\n\t\t\t\t})\n\t\t\t\t.on(\"mouseout\", function(d1) {\n\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.duration(500)\n\t\t\t\t\t\t\t.style(\"opacity\", 0);\n\t\t\t\t});\n\t\t\t// Draw legend\n\t\t\tvar legend = svg4.selectAll(\".legend\")\n\t\t\t\t\t\t\t.data(color4.domain())\n\t\t\t\t\t\t\t.enter().append(\"g\")\n\t\t\t\t\t\t\t\t.attr(\"class\", \"legend\")\n\t\t\t\t\t\t\t\t.attr(\"transform\", function(d1, i) { return \"translate(10,\" + (i+7) * 20 + \")\"; });\n\t\t\t// Draw legend colored rectangles\n\t\t\tlegend.append(\"rect\")\n\t\t\t\t\t.attr(\"x\", width - 18)\n\t\t\t\t\t.attr(\"width\", 18)\n\t\t\t\t\t.attr(\"height\", 18)\n\t\t\t\t\t.style(\"fill\", color4);\n\t\t\t// Draw legend text\n\t\t\tlegend.append(\"text\")\n\t\t\t\t\t.attr(\"x\", width - 24)\n\t\t\t\t\t.attr(\"y\", 9)\n\t\t\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(function(d1) { return d1;})\n\t\t});\n\t\t\n\t</script>", "description": "VI8", "created_at": "2016-03-23T05:05:43Z", "updated_at": "2016-03-24T20:24:02Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.scale.ordinal", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "VI8\n\nRajyalakshmi Mukkamala\n\n1.Color the marks by if the QB's school is in the Big Five, Group of Five, or Independent\n\n2.Plot only QBs from schools in the Big Five conferences.  Color the marks by conference\n\n3.Plot only the top 5 QBs by rank and color the marks by rank.", "uid": "Mrajyalakshmi_df5a31dd7db44dbd142f"}, {"code": "<script>\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n// setup x \nvar xValue = function(d) { return d[\"Rushing TD\"];}, // data -> value\n    xScale = d3.scale.linear().range([0, width]), // value -> display\n    xMap = function(d) { return xScale(xValue(d));}, // data -> display\n    xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n// setup y\nvar yValue = function(d) { return d[\"Passing TD\"];}, // data -> value\n    yScale = d3.scale.linear().range([height, 0]), // value -> display\n    yMap = function(d) { return yScale(yValue(d));}, // data -> display\n    yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n// setup fill color\nvar cValue = function(d) { return d.Rk;},\n color = function(val) {\n\tif(val == '1') {\n\t\treturn '#fef0d9';\n\t} else if (val == '2') {\n\t\treturn '#fdcc8a';\n\t} else if( val == '3'){\n\t\treturn '#fc8d59';\n\t}\n   else if(val == '4')\n     {\n       return '#e34a33';\n     }\n     else\n       {\n         return '#b30000';\n       }\n};\n// add the graph canvas to the body of the webpage\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n// add the tooltip area to the webpage\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n// load data\nd3.csv(\"passing-stats-2014.csv\", function(error, data) {\n  // change string (from CSV) into number format\n  data.forEach(function(d) {\n    d[\"Rushing TD\"] = +d[\"Rushing TD\"];\n    d[\"Passing TD\"] = +d[\"Passing TD\"];\n\n  });\n  // don't want dots overlapping axis, so add in buffer to data domain\n  xScale.domain([d3.min(data, xValue), d3.max(data, xValue)+4]);\n  yScale.domain([d3.min(data, yValue)-4, d3.max(data, yValue)+4]);\n\n  // x-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Rushing TD\");\n  // y-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Passing TD\");\n  // draw dots\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", xMap)\n      .attr(\"cy\", yMap)\n      .style(\"fill\", function(d) { return color(cValue(d));}) \n      .on(\"mouseover\", function(d) {\n          tooltip.transition()\n               .duration(200)\n               .style(\"opacity\", .9);\n          tooltip.html(d[\"Player\"] + \"<br/> \" + d.School + \"<br/>(\" + xValue(d) \n\t        + \", \" + yValue(d) + \")\")\n               .style(\"left\", (d3.event.pageX + 10) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n  // draw legend\n  var legend = svg.selectAll(\".legend\")\n      .data(['1','2','3','4','5'])\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(5,\" +i * 22 + \")\"; });\n  // draw legend colored rectangles\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n  // draw legend text\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d;})\n});\n</script>", "description": "VI8 5", "created_at": "2016-03-23T04:57:16Z", "updated_at": "2016-03-23T07:40:57Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "###Plot only the top 5 QBs by rank and color the marks by rank\n\nchoose a multi-hue colormap-\n\nIn multi hue we use multiple colors to decrease the intensity of base color.", "uid": "sumanthpopuri567_3924dc925c242935ec6a"}, {"code": "<script>\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 500 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\nvar xValue = function(d) { return d['Rushing TD'];}, // data -> value\n    xScale = d3.scale.linear().range([0, width]), // value -> display\n    xMap = function(d) { return xScale(xValue(d));}, // data -> display\n    xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\nvar yValue = function(d) { return d[\"Passing TD\"];}, // data -> value\n    yScale = d3.scale.linear().range([height, 0]), // value -> display\n    yMap = function(d) { return yScale(yValue(d));}, // data -> display\n    yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\n// setup fill color\nvar cValue = function(d) {\nif(d['Conf'] ==  'Big 12' || d['Conf'] == 'Big Ten' || d['Conf'] == 'Conf' || d['Conf'] == 'Pac-12' || d['Conf'] ==  'ACC') {\n\t\treturn 'Big Five';\n\t} else if(d['Conf'] == 'MWC' || d['Conf'] == 'Sun Belt' || d['Conf'] == 'American' || d['Conf'] == 'CUSA' || d['Conf'] == 'MAC'){\n\t\treturn 'Group of Five';\n}\n\n}, color = function(val) {\n\tif(val == 'Big Five') {\n\t\treturn '#ffeda0';\n\t} else if (val == 'Group of Five') {\n\t\treturn '#feb24c';\n\t} else {\n\t\treturn '#f03b20';\n\t}\n}\n\nvar svg = d3.select(\".no_res\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n// load data\nd3.csv(\"passing-stats-2014.csv\", function(error, data) {\n\n  data.forEach(function(d) {\n     d['Rushing TD'] = +d['Rushing TD'];\n\td['Passing TD'] = +d['Passing TD'];\n  });\n  \n\n  xScale.domain([d3.min(data, xValue)-3, d3.max(data, xValue)+3]);\n  yScale.domain([d3.min(data, yValue)-3, d3.max(data, yValue)+3]);\n\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Rushing TD\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Passing TD\");\n\n\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", xMap)\n      .attr(\"cy\", yMap)\n      .style(\"fill\", function(d) { return color(cValue(d));}) \n      .on(\"mouseover\", function(d) {tooltip.transition().duration(200)\n               .style(\"opacity\", .9);\n          tooltip.html(d[\"Player\"] + \"<br/> (\" + xValue(d) \n\t        + \", \" + yValue(d) + \")\")\n               .style(\"left\", (d3.event.pageX + 10) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n\t\t\t   \n      })\n\t    .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n\t\t\t   });\n    \n  var legend = svg.selectAll(\".legend\")\n      .data(['Big Five', 'Group of Five', 'Independent'])\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\n//B\n\n// setup fill color\nvar cValue2 = function(d) {\nif(d['Conf'] ==  'Big 12' || d['Conf'] == 'Big Ten' || d['Conf'] == 'Conf' || d['Conf'] == 'Pac-12' || d['Conf'] ==  'ACC') {\n\t\treturn 'Big Five';\n\t} else if(d['Conf'] == 'MWC' || d['Conf'] == 'Sun Belt' || d['Conf'] == 'American' || d['Conf'] == 'Conf' || d['Conf'] == 'MAC'){\n\t\treturn 'Group of Five';\n}\n\n}, color2 = function(val) {\n\tif(val == 'Big Five') {\n\t\treturn '#f7fcb9';\n\t} else if (val == 'Group of Five') {\n\t\treturn '#addd8e';\n\t} else {\n\t\treturn '#31a354';\n\t}\n}\n\nvar svg2 = d3.select(\".color_blind\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n\n\n// load data\nd3.csv(\"passing-stats-2014.csv\", function(error, data) {\n\n  data.forEach(function(d) {\n     d['Rushing TD'] = +d['Rushing TD'];\n\td['Passing TD'] = +d['Passing TD'];\n  });\n  \n\n  xScale.domain([d3.min(data, xValue)-3, d3.max(data, xValue)+3]);\n  yScale.domain([d3.min(data, yValue)-3, d3.max(data, yValue)+3]);\n\n\n  svg2.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Rushing TD\");\n\n  svg2.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Passing TD\");\n\n\n  svg2.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", xMap)\n      .attr(\"cy\", yMap)\n      .style(\"fill\", function(d) { return color2(cValue2(d));}) \n      .on(\"mouseover\", function(d) {tooltip.transition().duration(200)\n               .style(\"opacity\", .9);\n          tooltip.html(d[\"Player\"] + \"<br/> (\" + xValue(d) \n\t        + \", \" + yValue(d) + \")\")\n               .style(\"left\", (d3.event.pageX + 10) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n\t\t\t   \n      })\n\t    .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n\t\t\t   });\n    \n  var legend = svg2.selectAll(\".legend\")\n      .data(['Big Five', 'Group of Five', 'Independent'])\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color2);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\n//C\n\n// setup fill color\nvar cValue3 = function(d) {\nif(d['Conf'] ==  'Big 12' || d['Conf'] == 'Big Ten' || d['Conf'] == 'Conf' || d['Conf'] == 'Pac-12' || d['Conf'] ==  'ACC') {\n\t\treturn 'Big Five';\n\t} else if(d['Conf'] == 'MWC' || d['Conf'] == 'Sun Belt' || d['Conf'] == 'American' || d['Conf'] == 'CUSA' || d['Conf'] == 'MAC'){\n\t\treturn 'Group of Five';\n}\n\n}, color3 = function(val) {\n\tif(val == 'Big Five') {\n\t\treturn '#efedf5';\n\t} else if (val == 'Group of Five') {\n\t\treturn '#bcbddc';\n\t} else {\n\t\treturn '#756bb1';\n\t}\n}\n\nvar svg3 = d3.select(\".Photo_Safe\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n\n\n// load data\nd3.csv(\"passing-stats-2014.csv\", function(error, data) {\n\n  data.forEach(function(d) {\n     d['Rushing TD'] = +d['Rushing TD'];\n\td['Passing TD'] = +d['Passing TD'];\n  });\n  \n\n  xScale.domain([d3.min(data, xValue)-3, d3.max(data, xValue)+3]);\n  yScale.domain([d3.min(data, yValue)-3, d3.max(data, yValue)+3]);\n\n\n  svg3.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Rushing TD\");\n\n  svg3.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Passing TD\");\n\n\n  svg3.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", xMap)\n      .attr(\"cy\", yMap)\n      .style(\"fill\", function(d) { return color3(cValue3(d));}) \n      .on(\"mouseover\", function(d) {tooltip.transition().duration(200)\n               .style(\"opacity\", .9);\n          tooltip.html(d[\"Player\"] + \"<br/> (\" + xValue(d) \n\t        + \", \" + yValue(d) + \")\")\n               .style(\"left\", (d3.event.pageX + 10) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n\t\t\t   \n      })\n\t    .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n\t\t\t   });\n    \n  var legend = svg3.selectAll(\".legend\")\n      .data(['Big Five', 'Group of Five', 'Independent'])\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color3);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\n\n</script>", "description": "Visual Implementation (VI8)", "created_at": "2016-03-23T04:27:24Z", "updated_at": "2016-03-24T02:34:57Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "evansodu_fd0005b1df148238da1e"}, {"code": "<script>\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\nvar x = d3.scale.linear()\n    .range([0, width]);\nvar y = d3.scale.linear()\n    .range([height, 0]);\nvar color = d3.scale.ordinal()\n    .domain([\"1\", \"2\", \"3\", \"4\", \"5\"])\n    .range([\"#F2F0F7\", \"#CBC9E2\", \"#9E9AC8\", \"#756BB1\", \"#54278F\"]);\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n  data.forEach(function(d) {\n    d.Passing = +d.Passing;\n    d.Rushing = +d.Rushing;\n  });\n  x.domain(d3.extent(data, function(d) { return d.Rushing; })).nice();\n  y.domain(d3.extent(data, function(d) { return d.Passing; })).nice();\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Rushing Yards (yds)\");\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Passing Yards (yds)\")\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", function(d) { return x(d.Rushing); })\n      .attr(\"cy\", function(d) { return y(d.Passing); })\n      .style(\"fill\", function(d) { return color(d.Rk); })\n      .on(\"mouseover\", function(d) {\n          tooltip.transition()\n               .duration(200)\n               .style(\"opacity\", .9);\n          tooltip.html(d[\"Player\"])\n               .style(\"left\", (x(d.Rushing) + 5) + \"px\")\n               .style(\"top\", (y(d.Passing) - 15) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n});\n</script>", "description": "VI8 3b", "created_at": "2016-03-23T01:10:17Z", "updated_at": "2016-03-23T01:15:04Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.select", "d3.tsv", "d3.extent"], "readme": "The following scatterplot utilizing d3 is based heavily on code generated by Mike Bostock and Michelle Weigle.\n\nPlot only the top 5 QBs by rank and color the marks by rank. - choose a choose a single-hue colormap\n\nThese colors were chosen because they were far from the multi-hue colormap previuosly chosen from ColorBrewer for a single-hue colormap.", "uid": "deckerlr_90d8928adf0098720bc9"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.ordinal()\n    .domain([\"1\", \"2\", \"3\", \"4\", \"5\"])\n    .range([\"#F0F9E8\", \"#BAE4BC\", \"#7BCCC4\", \"#43A2CA\", \"#0868AC\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.Passing = +d.Passing;\n    d.Rushing = +d.Rushing;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.Rushing; })).nice();\n  y.domain(d3.extent(data, function(d) { return d.Passing; })).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Rushing Yards (yds)\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Passing Yards (yds)\")\n\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", function(d) { return x(d.Rushing); })\n      .attr(\"cy\", function(d) { return y(d.Passing); })\n      .style(\"fill\", function(d) { return color(d.Rk); })\n      .on(\"mouseover\", function(d) {\n          tooltip.transition()\n               .duration(200)\n               .style(\"opacity\", .9);\n          tooltip.html(d[\"Player\"])\n               .style(\"left\", (x(d.Rushing) + 5) + \"px\")\n               .style(\"top\", (y(d.Passing) - 15) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\n</script>", "description": "VI8 P3a", "created_at": "2016-03-23T00:59:11Z", "updated_at": "2016-03-23T01:14:47Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.select", "d3.tsv", "d3.extent"], "readme": "The following scatterplot utilizing d3 is based heavily on code generated by Mike Bostock and Michelle Weigle.\n\nPlot only the top 5 QBs by rank and color the marks by rank. - choose a multi-hue colormap\n\nThese colors were chosen because they were first on the list from ColorBrewer for a multi-hue colormap.\n", "uid": "deckerlr_1041b4846396a1af3b27"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.ordinal()\n    .domain([\"SEC\", \"ACC\", \"Big 12\", \"Pac-12\", \"Big Ten\"])\n    .range([\"#E41A1C\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\", \"#FF7F00\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.Passing = +d.Passing;\n    d.Rushing = +d.Rushing;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.Rushing; })).nice();\n  y.domain(d3.extent(data, function(d) { return d.Passing; })).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Rushing Yards (yds)\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Passing Yards (yds)\")\n\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", function(d) { return x(d.Rushing); })\n      .attr(\"cy\", function(d) { return y(d.Passing); })\n      .style(\"fill\", function(d) { return color(d.Conf); })\n      .on(\"mouseover\", function(d) {\n          tooltip.transition()\n               .duration(200)\n               .style(\"opacity\", .9);\n          tooltip.html(d[\"Player\"])\n               .style(\"left\", (x(d.Rushing) + 5) + \"px\")\n               .style(\"top\", (y(d.Passing) - 15) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\n</script>", "description": "VI8 P2a", "created_at": "2016-03-23T00:38:55Z", "updated_at": "2016-03-23T01:06:17Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.select", "d3.tsv", "d3.extent"], "readme": "The following scatterplot utilizing d3 is based heavily on code generated by Mike Bostock and Michelle Weigle.\n\n\nPlot only QBs from schools in the Big Five conferences.  Color the marks by conference. - no restrictions\n\n\nThese colors were chosen because they were close to the primary colors.", "uid": "deckerlr_4fe62e3b157c5db54deb"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar format = d3.format(\",d\");\n\nvar color = d3.scaleSequential(d3.interpolateMagma)\n    .domain([-4, 4]);\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar pack = d3.pack()\n    .size([width - 2, height - 2])\n    .padding(3);\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sum(function(d) { return d.value; })\n      .sort(function(a, b) { return b.value - a.value; });\n\n  pack(root);\n\n  var node = svg.select(\"g\")\n    .selectAll(\"g\")\n    .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n      .attr(\"class\", function(d) { return \"node\" + (!d.children ? \" node--leaf\" : d.depth ? \"\" : \" node--root\"); })\n      .each(function(d) { d.node = this; })\n      .on(\"mouseover\", hovered(true))\n      .on(\"mouseout\", hovered(false));\n\n  node.append(\"circle\")\n      .attr(\"id\", function(d) { return \"node-\" + d.id; })\n      .attr(\"r\", function(d) { return d.r; })\n      .style(\"fill\", function(d) { return color(d.depth); });\n\n  var leaf = node.filter(function(d) { return !d.children; });\n\n  leaf.append(\"clipPath\")\n      .attr(\"id\", function(d) { return \"clip-\" + d.id; })\n    .append(\"use\")\n      .attr(\"xlink:href\", function(d) { return \"#node-\" + d.id + \"\"; });\n\n  leaf.append(\"text\")\n      .attr(\"clip-path\", function(d) { return \"url(#clip-\" + d.id + \")\"; })\n    .selectAll(\"tspan\")\n    .data(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g); })\n    .enter().append(\"tspan\")\n      .attr(\"x\", 0)\n      .attr(\"y\", function(d, i, nodes) { return 13 + (i - nodes.length / 2 - 0.5) * 10; })\n      .text(function(d) { return d; });\n\n  node.append(\"title\")\n      .text(function(d) { return d.id + \"\\n\" + format(d.value); });\n});\n\nfunction hovered(hover) {\n  return function(d) {\n    d3.selectAll(d.ancestors().map(function(d) { return d.node; })).classed(\"node--hover\", hover);\n  };\n}\n\n</script>", "description": "Circle-Packing", "created_at": "2016-03-22T19:33:03Z", "updated_at": "2016-10-04T22:59:23Z", "api": ["d3.select", "d3.format", "d3.scaleSequential", "d3.stratify", "d3.pack", "d3.csv", "d3.selectAll"], "readme": "", "uid": "mbostock_ca5b03a33affa4160321"}, {"code": "<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 270 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(5);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.close = +d.close;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n    // Add the valueline path.\n    svg.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(data));\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n</script>", "description": "Simple d3.js Graph", "created_at": "2016-03-22T11:08:17Z", "updated_at": "2016-03-22T11:08:17Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This is a simple d3.js graph used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt is aimed at providing some exposure to some d3.js functions and should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "yesoreyeram_c1b07998add14ffc9d03"}, {"code": "<script>\nvar translate = function(x, y) { return \"translate(\" + x + \",\" + y + \")\"; };\n\nvar margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar dateFormat = d3.time.format(\"%x\");\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"linear\")\n    .x(function(d) { return x(new Date(d.key)); })\n    .y(function(d) { return y(d.values); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", translate(margin.left, margin.top));\n\nd3.csv(\"sfpd-property-crimes-2005-2015.csv\", function(d) {\n    var row = {};\n\n    row.date  = dateFormat.parse(d[\"Date\"]);\n    row.category = d[\"Category\"];\n    row.count = +d[\"Incidents\"];\n\n    return row;\n  },\n  function(error, rows) {\n    if (error) throw error;\n\n    data = d3.nest()\n      .key(function(d) { return d.category; })\n      .key(function(d) { return d.date;})\n      .rollup(function(values) {\n        return d3.sum(values, function(d) {\n          return d.count;\n        })\n      })\n      .entries(rows);\n\n    var crimes = data.keys();\n    color.domain(crimes);\n\n    var min = 100, max = 1;\n\n    data.forEach(function(d) {\n      d.values.forEach(function(c) {\n\n        if (c.values > max) {\n          max = c.values;\n        } else if (c.values < min) {\n          min = c.values;\n        }\n\n      });\n    });\n\n//     console.table(rows);\n//     console.table(data);\n\n    x.domain(d3.extent(rows, function(d) { return d.date; }));\n    y.domain([min, max]);\n\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", translate(0, height))\n        .call(xAxis)\n        .append(\"text\")\n          .attr(\"x\", width - 10)\n          .attr(\"y\", 10)\n          .attr(\"dy\", \".71em\")\n          .style(\"text-anchor\", \"end\")\n          .text(\"Date\");\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis)\n      .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .text(\"Number of Incidents\");\n\n    svg.append(\"text\")\n        .text(\"SF Property Crimes from 2005 to 2015\")\n        .attr(\"x\", 450)\n        .attr(\"y\", 20)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", \"18px\");\n\n    var crime = svg.selectAll(\".crime\")\n        .data(data)\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"crime\");\n\n    crime.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", function(d) {\n          return line(d.values); })\n        .style(\"stroke\", function(d) { return color(d.key); });\n\n    var legend = svg.selectAll(\".legend\")\n        .data(color.domain().slice().reverse())\n      .enter().append(\"g\")\n        .attr(\"class\", \"legend\")\n        .attr(\"transform\", function(d, i) { return translate(0, i * 20);\n        });\n\n    legend.append(\"rect\")\n        .attr(\"x\", 130)\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .style(\"fill\", color);\n\n    legend.append(\"text\")\n        .attr(\"x\", 120)\n        .attr(\"y\", 9)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"end\")\n        .text(function(d) { return d; });\n});\n</script>", "description": "MidtermMultiSeries", "created_at": "2016-03-21T01:51:45Z", "updated_at": "2016-03-21T01:51:45Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.nest", "d3.sum", "d3.extent"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "junngeronimo_ea20ddf8d56b4d97c196"}, {"code": "<script>\n var svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    //console.log(json);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n\n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\") // background for ruler\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n      .append(\"g\");\n      gene.append(\"rect\")\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"#genome-map\").select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      .attr(\"fill\", function (d) {\n        if (d.direction == \"forward\") {\n          return \"green\";\n        }\n        else if (d.direction == \"reverse\") {\n          return \"red\";\n        }\n        else {\n          return \"black\";\n        }\n      })\n      .on(\"mouseover\", function(d) {\n        console.log(d);\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", .9);\n        div\t.html(\"The direction of gene \" + d.name + \" is \" + d.direction)// the text of the tooltip ...\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      })\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n\n      gene.append(\"text\") // gene name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { // forward and even\n            return -50;\n          }\n          else { return -10;} // forward and odd\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { // reverse and even\n            return 50;\n          }\n          else { return 80;} //reverse and odd\n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"blue\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n  });\n  </script>", "description": "genome browser", "created_at": "2016-03-20T23:00:41Z", "updated_at": "2016-03-20T23:00:42Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "ThanisataS_da165812278897b669ed"}, {"code": "<script>\n\n// Ratio of Obese (BMI >= 30) in U.S. Adults, CDC 2008\nvar valueById = [\n   NaN, .187, .198,  NaN, .133, .175, .151,  NaN, .100, .125,\n  .171,  NaN, .172, .133,  NaN, .108, .142, .167, .201, .175,\n  .159, .169, .177, .141, .163, .117, .182, .153, .195, .189,\n  .134, .163, .133, .151, .145, .130, .139, .169, .164, .175,\n  .135, .152, .169,  NaN, .132, .167, .139, .184, .159, .140,\n  .146, .157,  NaN, .139, .183, .160, .143\n];\n\nvar margin = {top: 0, right: 0, bottom: 0, left: 0},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    padding = 3;\n\nvar projection = d3.geo.albersUsa();\n\nvar radius = d3.scale.sqrt()\n    .domain([0, d3.max(valueById)])\n    .range([0, 30]);\n\nvar force = d3.layout.force()\n    .charge(0)\n    .gravity(0)\n    .size([width, height]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"us-state-centroids.json\", function(error, states) {\n  if (error) throw error;\n\n  var nodes = states.features\n      .filter(function(d) { return !isNaN(valueById[+d.id]); })\n      .map(function(d) {\n        var point = projection(d.geometry.coordinates),\n            value = valueById[+d.id];\n        if (isNaN(value)) fail();\n        return {\n          x: point[0], y: point[1],\n          x0: point[0], y0: point[1],\n          r: radius(value),\n          value: value\n        };\n      });\n\n  force\n      .nodes(nodes)\n      .on(\"tick\", tick)\n      .start();\n\n  var node = svg.selectAll(\"rect\")\n      .data(nodes)\n    .enter().append(\"rect\")\n      .attr(\"width\", function(d) { return d.r * 2; })\n      .attr(\"height\", function(d) { return d.r * 2; });\n\n  function tick(e) {\n    node.each(gravity(e.alpha * .1))\n        .each(collide(.5))\n        .attr(\"x\", function(d) { return d.x - d.r; })\n        .attr(\"y\", function(d) { return d.y - d.r; });\n  }\n\n  function gravity(k) {\n    return function(d) {\n      d.x += (d.x0 - d.x) * k;\n      d.y += (d.y0 - d.y) * k;\n    };\n  }\n\n  function collide(k) {\n    var q = d3.geom.quadtree(nodes);\n    return function(node) {\n      var nr = node.r + padding,\n          nx1 = node.x - nr,\n          nx2 = node.x + nr,\n          ny1 = node.y - nr,\n          ny2 = node.y + nr;\n      q.visit(function(quad, x1, y1, x2, y2) {\n        if (quad.point && (quad.point !== node)) {\n          var x = node.x - quad.point.x,\n              y = node.y - quad.point.y,\n              lx = Math.abs(x),\n              ly = Math.abs(y),\n              r = nr + quad.point.r;\n          if (lx < r && ly < r) {\n            if (lx > ly) {\n              lx = (lx - r) * (x < 0 ? -k : k);\n              node.x -= lx;\n              quad.point.x += lx;\n            } else {\n              ly = (ly - r) * (y < 0 ? -k : k);\n              node.y -= ly;\n              quad.point.y += ly;\n            }\n          }\n        }\n        return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n      });\n    };\n  }\n});\n\n</script>", "description": "Pseudo-Demers Cartogram", "created_at": "2016-03-18T20:26:03Z", "updated_at": "2016-03-18T20:26:31Z", "api": ["d3.geo.albersUsa", "d3.scale.sqrt", "d3.max", "d3.layout.force", "d3.select", "d3.json", "d3.geom.quadtree"], "readme": "This is not a true Demers cartogram; it lacks links between adjacent features. Instead of trying to preserve connectedness, this pseudo-cartogram tries to preserve locality, putting each square as close as possible to its origin without overlapping.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4055889'>Pseudo-Demers Cartogram</a>", "uid": "SpaceActuary_9a92db9794c21d576087"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar format = d3.format(\",d\");\n\nvar color = d3.scaleCategory10();\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar partition = d3.partition()\n    .size([height, width])\n    .padding(1)\n    .round(true);\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sum(function(d) { return d.value; })\n      .sort(function(a, b) { return b.height - a.height || b.value - a.value; });\n\n  partition(root);\n\n  var cell = svg\n    .selectAll(\".node\")\n    .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"); })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y0 + \",\" + d.x0 + \")\"; });\n\n  cell.append(\"rect\")\n      .attr(\"id\", function(d) { return \"rect-\" + d.id; })\n      .attr(\"width\", function(d) { return d.y1 - d.y0; })\n      .attr(\"height\", function(d) { return d.x1 - d.x0; })\n    .filter(function(d) { return !d.children; })\n      .style(\"fill\", function(d) { while (d.depth > 1) d = d.parent; return color(d.id); });\n\n  cell.append(\"clipPath\")\n      .attr(\"id\", function(d) { return \"clip-\" + d.id; })\n    .append(\"use\")\n      .attr(\"xlink:href\", function(d) { return \"#rect-\" + d.id + \"\"; });\n\n  cell.append(\"text\")\n      .attr(\"clip-path\", function(d) { return \"url(#clip-\" + d.id + \")\"; })\n      .attr(\"x\", 4)\n    .selectAll(\"tspan\")\n      .data(function(d) { return [d.id.substring(d.id.lastIndexOf(\".\") + 1), \" \" + format(d.value)]; })\n    .enter().append(\"tspan\")\n      .attr(\"y\", 13)\n      .text(function(d) { return d; });\n\n  cell.append(\"title\")\n      .text(function(d) { return d.id + \"\\n\" + format(d.value); });\n});\n\n</script>", "description": "Partition", "created_at": "2016-03-17T16:49:00Z", "updated_at": "2016-05-03T18:35:31Z", "api": ["d3.select", "d3.format", "d3.scaleCategory10", "d3.stratify", "d3.partition", "d3.csv"], "readme": "Each pixel represents approximately one byte.\n", "uid": "mbostock_2e73ec84221cb9773f4c"}, {"code": "<script>\n\n    // Genome size\n    var genomelength = 100000;\n    \n    var tickMarks = {\n      thousand: [], \n      fivehundred: [], \n      onehundred: []\n    };\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    \n    \n    var svg = d3.select(\"body\")\n    \t.append(\"svg\")\n    \t.attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\":\"2px\",\"fill\":\"white\",\"stroke\":\"black\"});\n   \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar genes = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"g\");\n      \n      //Hover box when you mouseover genes\n      var tip = d3.tip()\n      .attr('class', 'd3-tip')\n      .offset(function (d) {\n        if (d.direction == \"forward\") {\n            return [-55, -48];\n        }\n        else if (d.direction == \"reverse\") {\n            return [-55, -48];\n        }\n      })\n      .html(function(d) {\n        return \"<b>Product:</b> <span style='color:white'>\" \n          + d.product + \"</span>\";\n      })\n      //Clickable tip box attr\n      var hidden = d3.tip()\n        .attr('class', 'd3-hidden')\n        .offset(function (d) {\n        if (d.direction == \"forward\") {\n            return [70, -48];\n            }\n        else if (d.direction == \"reverse\") {\n            return [70, -48];\n        }\n      })\n      .html(function(d) {\n        return \"<a style=color:white target=_blank href=http://blast.ncbi.nlm.nih.gov/Blast.cgi>BLAST:</a><span style='color:white'>\" \n          + \" \" + d.translation + \"</span>\";\n      })\n      //call the \"tool-tips\"\n      svg.call(tip);\n      svg.call(hidden);\n      \t\n\t\t //add in gene boxes with transistion\n\t\t genes.append(\"rect\")\n       \t.on('mouseover', tip.show).on('mouseout', tip.hide)\n      \t.on('click', hidden.show).on('dblclick', hidden.hide)\n  \t    .attr(\"x\", function (d) {\n        \tif (d.direction === \"forward\") {\n            return (0 - ((d.stop-d.start)/10)) - 2;\n          }\n        \telse if (d.direction === \"reverse\") {\n            return (genomelength/10) + 2;\n          }\n      \t})\n    \t  .attr(\"y\", function (d) { \n          return 100; \n        })\n      \t.attr(\"height\", function(d) { \n          return 0;\n        })\n      \t.attr(\"width\", function (d) { \n          return (d.stop-d.start)/10; \n        })\n       \t.style(\"fill\", function(d) {\n          if (d.direction === \"forward\") {\n            return \"009900\";\n          }\n          else if\t(d.direction === \"reverse\"){\n            return \"FF6600\";\n          }\n          else  {\n            return \"yellow\";\n          }\n        })\n      \t.style({\"stroke\":\"black\", \"stroke-width\":\"2px\"})\n   \t\t\t.transition().delay(2000).duration(2000)\n     \t\t.attr(\"x\", function (d) { \n          return d.start/10; \n        })\n     \t  .attr(\"y\", function (d) { \n          if (d.direction == \"forward\" && d.name%2==0) {\n          return 34; \n          }\n          else if (d.direction == \"forward\" && d.name%2!==0) {\n          \treturn 67; \n          }\n          else if (d.direction == \"reverse\" && d.name%2==0) {\n            return 133;\n          }\n          else if (d.direction == \"reverse\" && d.name%2!==0) {\n            return 165;\n          }\n          else\t{\n            return 60;\n          }\n        })\n       \t.attr(\"height\", function (d) {return 30;})\n      \tgroup.on(\"click\", function() {\n        \tconsole.log(\"rect\");\n      \t})\n  \t\t//text in gene boxes\n      genes.append(\"text\") \n        .attr(\"x\", function (d) { return ((d.start+d.stop)/10)/2})\n        .style(\"text-anchor\",\"middle\")\n        .style({\"font-family\":\"verdana\",\"font-size\":\"18px\",\"fill\":\"white\"})\n        .attr(\"y\", function (d) { \n          if (d.direction === \"forward\" && d.name%2==0) {\n            return 58;\n          }\n          else if (d.direction === \"forward\" && d.name%2!==0) {\n            return 91;\n          }\n          else if (d.direction === \"reverse\" && d.name%2==0) {\n            return 151;\n          }\n          else if (d.direction === \"reverse\" && d.name%2!==0) {\n            return 185;\n          }\n          else {\n            return 80;\n        \t}\n      \t})\n        .text(function (d) {\n        \treturn d.name;})\n          //var c = 0;\n          //var g = 0;\n          //for (var i=0; i<=d.sequence.length; i++) {\n           // if (d.sequence[i] === \"C\") {c++; }\n           // else if (d.sequence[i] === \"G\") {g++;}\n          //}\n         // return (((c+g)/d.sequence.length)*100);})\n        //.attr(\"fill-opacity\",0)\n        //.transition().duration(3000).delay(2000)\n        //.attr(\"fill-opacity\",1);\n\n      // text above or below boxes\n      genes.append(\"text\") \n        .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n        .attr(\"y\", function (d) {\n          if (d.direction == \"forward\") {\n            if (d.name % 2 === 0) {\n              return 28;\n            }\n            else { return 59;}\n          }\n          else if (d.direction == \"reverse\") {\n            if (d.name % 2 === 0) {\n              return 181;\n            }\n              else { return 213;}\n          }\n      \t})\n        .style({\"text-anchor\":\"middle\",\"fill\":\"black\",\"font-weight\":\"bold\"})\n        .attr(\"font-family\",\"sans-serif\")\n        .text(function(d) {return d.subnum})\n        .attr(\"fill-opacity\", 0)\n        .transition().delay(4500).duration(1000)\n        .attr(\"fill-opacity\", 1);\n    });\n\t\t//grouping the 3 tick groups and displaying them\n    var group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\":\"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    //numbers @1000 ticks\n    group.append(\"text\")\n   \t\t.attr({y:110})\n    \t.attr(\"x\", function(d) {\n        return (d/10) + 1\n      })\n    \t.style({\"font-size\":\"20px\",\"fill\":\"red\"})\n    \t.transition().duration(2000).delay(1000)\n    \t.style({\"font-family\":\"verdana\",\"font-size\":\"10px\",\"fill\":\"green\"})\n      .text(function(d) {return d/1000})\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 15})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) {\n      \treturn \"translate(\" + d/10 + \",0)\";\n    \t});\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 115, width: \"1px\", height: 15})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { \n      \treturn \"translate(\" + d/10 + \",0)\"; \n    \t});\n  </script>", "description": "Genome Viewer", "created_at": "2016-03-17T15:45:30Z", "updated_at": "2016-03-17T16:09:10Z", "api": ["d3.select", "d3.json", "d3.tip"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/nguyenbq/'>nguyenbq</a>'s block: <a href='http://bl.ocks.org/nguyenbq/00c36fbe045e5d0290fc'>Genome Viewer</a>\n\nforked from <a href='http://bl.ocks.org/cheneymb/'>cheneymb</a>'s block: <a href='http://bl.ocks.org/cheneymb/eaab03204fa1acac43ea'>Genome Viewer</a>", "uid": "nguyenbq_b18d0144ce09e1acee26"}, {"code": "<script>\n var svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    //console.log(json);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n\n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\") // background for ruler\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n      .append(\"g\");\n      gene.append(\"rect\")\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"#genome-map\").select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      .attr(\"fill\", function (d) {\n        if (d.direction == \"forward\") {\n          return \"green\";\n        }\n        else if (d.direction == \"reverse\") {\n          return \"red\";\n        }\n        else {\n          return \"black\";\n        }\n      })\n      .on(\"mouseover\", function(d) {\n        console.log(d);\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", .9);\n        div\t.html(\"The direction of gene \" + d.name + \" is \" + d.direction)// the text of the tooltip ...\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      })\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n\n      gene.append(\"text\") // gene name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { // forward and even\n            return -50;\n          }\n          else { return -10;} // forward and odd\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { // reverse and even\n            return 50;\n          }\n          else { return 80;} //reverse and odd\n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"blue\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n  });\n  </script>", "description": "genome browser", "created_at": "2016-03-17T14:51:15Z", "updated_at": "2016-03-24T14:10:45Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "devssunil_8e2ca140232cfbf68a17"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n    \t.attr(\"stroke-opacity\", 0)\n    \t.transition().duration(1000)\n    \t.attr(\"stroke-opacity\", 1);\n\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar genes = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"g\");\n\n\t\t\tgenes.append(\"rect\")\n     \t  .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          \tif (d.name % 2 === 0) {\n            \treturn 70;\n            }\n          \telse { return 40;}\n          }\n        \telse if (d.direction == \"reverse\") {\n            if (d.name % 2 === 0) {\n            \treturn 160;\n            }\n            else { return 130; }\n          }\n      })\n      \t.attr(\"x\", function (d) {\n        \tif (d.direction === \"forward\") {\n            return (0 - ((d.stop-d.start)/10)) - 2;\n          }\n        \telse if (d.direction === \"reverse\") {\n            return (genomelength/10) + 2;\n          }\n      })\n       \t.attr(\"height\", function (d) {return 30;})\n        .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      \t.attr(\"fill\", function (d) {\n        \tif (d.direction == \"forward\") {\n            return \"green\";\n          }\n        \telse if (d.direction == \"reverse\") {\n            return \"red\";\n          }\n        \telse {\n            return \"black\";\n          }\n      \t})\n   \t\t\t.transition().delay(1000).duration(1500).attr(\"x\", function (d) { return d.start/10; });\n\n\n    genes.append(\"text\") // gene name\n    \t.attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 90;\n        }\n        else { return 60;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 180;\n        }\n        \telse { return 150;}\n      }\n    })\n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    .text(function(d) {return d.name})\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(2000).duration(1500)\n\t\t.attr(\"fill-opacity\", 1);\n\n    genes.append(\"text\") // pham name\n    \t.attr(\"x\", function(d) { \n      \treturn ((d.start + d.stop)/2)/10;\n    \t})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 60;\n        }\n        else { return 30;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 210;\n        }\n        \telse { return 180;}\n      }\n    })\n    \n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    .text(function(d) {\n      return d.pham\n    })\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(3500).duration(1500)\n\t\t.attr(\"fill-opacity\", 1);\n    });\n    \n\n    var group = svg.selectAll(\".thousandticks\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 100, width: \"1px\", height: 30})\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n\n\t    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n  \tgroup.append(\"text\")\n\t    .attr(\"x\", function(d) {return (d/10) + 3;})\n  \t  .attr(\"y\", (90) + 22)\n\t    .attr(\"font-family\", \"sans-serif\")\n\t    .attr(\"font-size\", \"14px\")\n\t    .attr(\"fill\", \"green\")\n\t    .style(\"text-anchor\", \"start\")\n\t    .text(function(d) { return d/1000; })\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n\t\tvar group2 = svg.selectAll(\".fivehundredticks\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n\t\t  .attr({x: function(d) {return d/10;}, y: 100, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n     \t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".onehundredticks\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 115, width: \"1px\", height: 15})\n    \t.attr(\"fill-opacity\", 0)\n    \t.transition().duration(1500)\n    \t.attr(\"fill-opacity\", 1);\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  </script>", "description": "genome browser", "created_at": "2016-03-17T14:23:51Z", "updated_at": "2016-03-17T14:23:51Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/955beda9851111b7c4b1'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/dce660b60d70576d6447'>genome browser</a>", "uid": "dunlapea_545566453d4c45d1f4a3"}, {"code": "<script>\n\nvar width = 960,\n    height = 1060;\n\nvar format = d3.format(\",d\");\n\nvar color = d3.scaleOrdinal()\n    .range(d3.schemeCategory10\n        .map(function(c) { c = d3.rgb(c); c.opacity = 0.6; return c; }));\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar treemap = d3.treemap()\n    .size([width, height])\n    .padding(1)\n    .round(true);\n\nd3.csv(\"flare.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sum(function(d) { return d.value; })\n      .sort(function(a, b) { return b.height - a.height || b.value - a.value; });\n\n  treemap(root);\n\n  d3.select(\"body\")\n    .selectAll(\".node\")\n    .data(root.leaves())\n    .enter().append(\"div\")\n      .attr(\"class\", \"node\")\n      .attr(\"title\", function(d) { return d.id + \"\\n\" + format(d.value); })\n      .style(\"left\", function(d) { return d.x0 + \"px\"; })\n      .style(\"top\", function(d) { return d.y0 + \"px\"; })\n      .style(\"width\", function(d) { return d.x1 - d.x0 + \"px\"; })\n      .style(\"height\", function(d) { return d.y1 - d.y0 + \"px\"; })\n      .style(\"background\", function(d) { while (d.depth > 1) d = d.parent; return color(d.id); })\n    .append(\"div\")\n      .attr(\"class\", \"node-label\")\n      .text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).join(\"\\n\"); })\n    .append(\"div\")\n      .attr(\"class\", \"node-value\")\n      .text(function(d) { return format(d.value); });\n});\n\nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n\n</script>", "description": "Treemap", "created_at": "2016-03-16T22:20:37Z", "updated_at": "2016-06-29T21:29:18Z", "api": ["d3.format", "d3.scaleOrdinal", "d3.rgb", "d3.stratify", "d3.treemap", "d3.csv", "d3.select"], "readme": "Each pixel represents approximately one byte.\n", "uid": "mbostock_6bbb0a7ff7686b124d80"}, {"code": "<script>\n\nvar width = 960,\n    height = 136,\n    cellSize = 17; // cell size\n\nvar percent = d3.format(\".1%\"),\n    format = d3.time.format(\"%Y-%m-%d\");\n\nvar color = d3.scale.quantize()\n    .domain([-.05, .05])\n    .range(d3.range(11).map(function(d) { return \"q\" + d + \"-11\"; }));\n\nvar svg = d3.select(\"body\").selectAll(\"svg\")\n    .data(d3.range(1990, 2011))\n  .enter().append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .attr(\"class\", \"RdYlGn\")\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + ((width - cellSize * 53) / 2) + \",\" + (height - cellSize * 7 - 1) + \")\");\n\nsvg.append(\"text\")\n    .attr(\"transform\", \"translate(-6,\" + cellSize * 3.5 + \")rotate(-90)\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) { return d; });\n\nvar rect = svg.selectAll(\".day\")\n    .data(function(d) { return d3.time.days(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"rect\")\n    .attr(\"class\", \"day\")\n    .attr(\"width\", cellSize)\n    .attr(\"height\", cellSize)\n    .attr(\"x\", function(d) { return d3.time.weekOfYear(d) * cellSize; })\n    .attr(\"y\", function(d) { return d.getDay() * cellSize; })\n    .datum(format);\n\nrect.append(\"title\")\n    .text(function(d) { return d; });\n\nsvg.selectAll(\".month\")\n    .data(function(d) { return d3.time.months(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"path\")\n    .attr(\"class\", \"month\")\n    .attr(\"d\", monthPath);\n\nd3.csv(\"dji.csv\", function(error, csv) {\n  if (error) throw error;\n\n  var data = d3.nest()\n    .key(function(d) { return d.Date; })\n    .rollup(function(d) { return (d[0].Close - d[0].Open) / d[0].Open; })\n    .map(csv);\n\n  rect.filter(function(d) { return d in data; })\n      .attr(\"class\", function(d) { return \"day \" + color(data[d]); })\n    .select(\"title\")\n      .text(function(d) { return d + \": \" + percent(data[d]); });\n});\n\nfunction monthPath(t0) {\n  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),\n      d0 = t0.getDay(), w0 = d3.time.weekOfYear(t0),\n      d1 = t1.getDay(), w1 = d3.time.weekOfYear(t1);\n  return \"M\" + (w0 + 1) * cellSize + \",\" + d0 * cellSize\n      + \"H\" + w0 * cellSize + \"V\" + 7 * cellSize\n      + \"H\" + w1 * cellSize + \"V\" + (d1 + 1) * cellSize\n      + \"H\" + (w1 + 1) * cellSize + \"V\" + 0\n      + \"H\" + (w0 + 1) * cellSize + \"Z\";\n}\n\n</script>", "description": "Calendar View", "created_at": "2016-03-16T17:45:59Z", "updated_at": "2016-03-16T17:46:01Z", "api": ["d3.format", "d3.time.format", "d3.scale.quantize", "d3.range", "d3.select", "d3.time.days", "d3.time.weekOfYear", "d3.time.months", "d3.csv", "d3.nest"], "readme": "This example demonstrates loading of CSV data, which is then quantized into a diverging color scale. The values are visualized as colored cells per day. Days are arranged into columns by week, then grouped by month and years. Colors by [Cynthia Brewer](http://colorbrewer.org/). Layout inspired by [Rick Wicklin and Robert Allison](http://stat-computing.org/dataexpo/2009/posters/). Dow Jones historical data copyright [Yahoo! Finance](http://finance.yahoo.com/) or independent data provider; fair use for educational purposes.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063318'>Calendar View</a>", "uid": "caHaber_327c854c2b24d6835382"}, {"code": "<script>\n\nvar width = 750,\n    height = 600;\n\nvar color = d3.scale.category10();\n\nvar force = d3.layout.force()\n    .gravity(0.1)\n    .charge(-120)\n    .linkDistance(100)\n    .size([width, height]);\n  \n\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"states.json\", function(error, graph) {\n  if (error) throw error;\n\n  force\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .start();\n\n  var link = svg.selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"line\")\n      .attr(\"class\", \"link\")\n      .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n  var node = svg.selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"node\")\n      .attr(\"r\", 8)\n      .style(\"fill\", function(d) { return color(d.group); })\n      .call(force.drag);\n\n  var label = node.append(\"text\")\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.abb; });\n\n  var cell = node.append(\"path\")\n      .attr(\"class\", \"cell\");\n\n  node.append(\"title\")\n      .text(function(d) { return d.name; });\n\n  force.on(\"tick\", function() {\n    \n     \n    \n    link.attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n    label\n        .attr(\"x\", function(d) { return d.x + 8; })\n        .attr(\"y\", function(d) { return d.y; });\n\n    node.attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; });\n  });\n});\n\n</script>", "description": "VI 7 Node Link ", "created_at": "2016-03-16T11:45:29Z", "updated_at": "2016-03-16T19:56:02Z", "api": ["d3.scale.category10", "d3.layout.force", "d3.select", "d3.json"], "readme": "Rajyalakshmi Mukkamala\n\n## Node Link\n\n### Insight\n\n1.Color reprentation is with respect to regions, states colored with same color to belong to same region. For example,Oregon,Washington and California belong to pacific region and nodes are colored red.\n\n2.South Atlantic region has highest number of states i.e. 9 states.\n\n\nMouse hover on the node gives state name.\n\n\n", "uid": "Mrajyalakshmi_661a44c5ce6d6800f00c"}, {"code": "<script>\nvar margin = {top: 80, right: 200, bottom: 130, left: 100},\n    width = 820,\n    height = 820;\nvar x = d3.scale.ordinal().rangeBands([0, width]),\n    z = d3.scale.linear().domain([0, 4]).clamp(true),\n    c = d3.scale.category10().domain(d3.range(10));\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .style(\"margin-left\", margin.left + \"px\")\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\nd3.json(\"regions.json\", function(regions) {\n  var matrix = [],\n      nodes = regions.nodes,\n      n = nodes.length;\n  // Compute index per node.\n \n\n nodes.forEach(function(node, i) {\n    node.index = i;\n    node.count = 0;\n    matrix[i] = d3.range(n).map(function(j) { return {x: j, y: i, z: 0}; });\n  });\n  // Convert links to matrix; count character occurrences.\n  regions.links.forEach(function(link) {\n    matrix[link.source][link.target].z += link.value;\n    matrix[link.target][link.source].z += link.value;\n   // matrix[link.source][link.source].z += link.value;\n    //matrix[link.target][link.target].z += link.value;\n    nodes[link.source].count += link.value;\n    nodes[link.target].count += link.value;\n  });\n  // Precompute the orders.\n  var orders = {\n    name: d3.range(n).sort(function(a, b) { return d3.ascending(nodes[a].name, nodes[b].name); }),\n    count: d3.range(n).sort(function(a, b) { return nodes[b].count - nodes[a].count; }),\n    group: d3.range(n).sort(function(a, b) { return nodes[b].group - nodes[a].group; })\n  };\n  // The default sort order.\n  x.domain(orders.name);\n  svg.append(\"rect\")\n      .attr(\"class\", \"background\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n  var row = svg.selectAll(\".row\")\n      .data(matrix)\n    .enter().append(\"g\")\n      .attr(\"class\", \"row\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + x(i) + \")\"; })\n      .each(row);\n  row.append(\"line\")\n      .attr(\"x2\", width);\n  row.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", x.rangeBand() / 2)\n      .attr(\"dy\", \".32em\")\n      .attr(\"text-anchor\", \"end\")\n      .text(function(d, i) { return nodes[i].name; });\n  var column = svg.selectAll(\".column\")\n      .data(matrix)\n    .enter().append(\"g\")\n      .attr(\"class\", \"column\")\n      .attr(\"transform\", function(d, i) { return \"translate(\" + x(i) + \")rotate(-90)\"; });\n  column.append(\"line\")\n      .attr(\"x1\", -width);\n  column.append(\"text\")\n      .attr(\"x\", 6)\n      .attr(\"y\", x.rangeBand() / 2)\n      .attr(\"dy\", \".32em\")\n      .attr(\"text-anchor\", \"start\")\n      .text(function(d, i) { return nodes[i].name; });\n  function row(row) {\n    var cell = d3.select(this).selectAll(\".cell\")\n        .data(row.filter(function(d) { return d.z; }))\n      .enter().append(\"rect\")\n        .attr(\"class\", \"cell\")\n        .attr(\"x\", function(d) { return x(d.x); })\n        .attr(\"width\", x.rangeBand())\n        .attr(\"height\", x.rangeBand())\n        .style(\"fill-opacity\", function(d) { return z(d.z); })\n        .style(\"fill\", function(d) { return nodes[d.x].group == nodes[d.y].group ? c(nodes[d.x].group) : null; })\n        .on(\"mouseover\", mouseover)\n        .on(\"mouseout\", mouseout);\n  }\n  function mouseover(p) {\n    d3.selectAll(\".row text\").classed(\"active\", function(d, i) { return i == p.y; });\n    d3.selectAll(\".column text\").classed(\"active\", function(d, i) { return i == p.x; });\n  }\n  function mouseout() {\n    d3.selectAll(\"text\").classed(\"active\", false);\n  }\n  d3.select(\"#order\").on(\"change\", function() {\n    clearTimeout(timeout);\n    order(this.value);\n  });\n  function order(value) {\n    x.domain(orders[value]);\n    var t = svg.transition().duration(2500);\n    t.selectAll(\".row\")\n        .delay(function(d, i) { return x(i) * 4; })\n        .attr(\"transform\", function(d, i) { return \"translate(0,\" + x(i) + \")\"; })\n      .selectAll(\".cell\")\n        .delay(function(d) { return x(d.x) * 4; })\n        .attr(\"x\", function(d) { return x(d.x); });\n    t.selectAll(\".column\")\n        .delay(function(d, i) { return x(i) * 4; })\n        .attr(\"transform\", function(d, i) { return \"translate(\" + x(i) + \")rotate(-90)\"; });\n  }\n  var timeout = setTimeout(function() {\n    order(\"group\");\n    d3.select(\"#order\").property(\"selectedIndex\", 2).node().focus();\n  }, 5000);\n});\n</script>\n\n<script async src=\"//www.google-analytics.com/analytics.js\"></script>", "description": "VI7 Adjacency matrix", "created_at": "2016-03-16T06:29:38Z", "updated_at": "2016-03-16T14:10:34Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.scale.category10", "d3.range", "d3.select", "d3.json", "d3.ascending", "d3.selectAll"], "readme": "", "uid": "manojchandrak_965566485cb33ee9ae80"}, {"code": "<script>\nvar margin = {top: 90, right: 0, bottom: 10, left: 90},\n    width = 750,\n    height = 750;\nvar x = d3.scale.ordinal().rangeBands([0, width]),\n    z = d3.scale.linear().domain([0, 4]).clamp(true),\n    c = d3.scale.category10().domain(d3.range(10));\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .style(\"margin-right\", -margin.left + \"px\")\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\nd3.json(\"data.json\", function(data) {\n  var matrix = [],\n      nodes = data.nodes,\n      n = nodes.length;\n  // Compute index per node.\n  nodes.forEach(function(node, i) {\n    node.index = i;\n    node.count = 0;\n    matrix[i] = d3.range(n).map(function(j) { return {x: j, y: i, z: 0}; });\n  });\n  // Convert links to matrix; count character occurrences.\n  data.links.forEach(function(link) {\n    matrix[link.source][link.target].z += link.value;\n    matrix[link.target][link.source].z += link.value;\n    //matrix[link.source][link.source].z += link.value;\n    //matrix[link.target][link.target].z += link.value;\n    nodes[link.source].count += link.value;\n    nodes[link.target].count += link.value;\n  });\n  // Precompute the orders.\n  var orders = {\n    name: d3.range(n).sort(function(a, b) { return d3.ascending(nodes[a].name, nodes[b].name); }),\n    count: d3.range(n).sort(function(a, b) { return nodes[b].count - nodes[a].count; }),\n    group: d3.range(n).sort(function(a, b) { return nodes[b].group - nodes[a].group; })\n  };\n  // The default sort order.\n  x.domain(orders.name);\n  svg.append(\"rect\")\n      .attr(\"class\", \"background\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n  var row = svg.selectAll(\".row\")\n      .data(matrix)\n    .enter().append(\"g\")\n      .attr(\"class\", \"row\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + x(i) + \")\"; })\n      .each(row);\n  row.append(\"line\")\n      .attr(\"x2\", width);\n  row.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", x.rangeBand() / 2)\n      .attr(\"dy\", \".32em\")\n      .attr(\"text-anchor\", \"end\")\n      .text(function(d, i) { return nodes[i].abbr; });\n  var column = svg.selectAll(\".column\")\n      .data(matrix)\n    .enter().append(\"g\")\n      .attr(\"class\", \"column\")\n      .attr(\"transform\", function(d, i) { return \"translate(\" + x(i) + \")rotate(-90)\"; });\n  column.append(\"line\")\n      .attr(\"x1\", -width);\n  column.append(\"text\")\n      .attr(\"x\", 6)\n      .attr(\"y\", x.rangeBand() / 2)\n      .attr(\"dy\", \".32em\")\n      .attr(\"text-anchor\", \"start\")\n      .text(function(d, i) { return nodes[i].abbr; });\n  function row(row) {\n    var cell = d3.select(this).selectAll(\".cell\")\n        .data(row.filter(function(d) { return d.z; }))\n      .enter().append(\"rect\")\n        .attr(\"class\", \"cell\")\n        .attr(\"x\", function(d) { return x(d.x); })\n        .attr(\"width\", x.rangeBand())\n        .attr(\"height\", x.rangeBand())\n        .style(\"fill-opacity\", function(d) { return z(d.z); })\n        .style(\"fill\", function(d) { return nodes[d.x].group == nodes[d.y].group ? c(nodes[d.x].group) : null; })\n        .on(\"mouseover\", mouseover)\n        .on(\"mouseout\", mouseout);\n  }\n  function mouseover(p) {\n    d3.selectAll(\".row text\").classed(\"active\", function(d, i) { return i == p.y; });\n    d3.selectAll(\".column text\").classed(\"active\", function(d, i) { return i == p.x; });\n  }\n  function mouseout() {\n    d3.selectAll(\"text\").classed(\"active\", false);\n  }\n  d3.select(\"#order\").on(\"change\", function() {\n    clearTimeout(timeout);\n    order(this.value);\n  });\n  function order(value) {\n    x.domain(orders[value]);\n    var t = svg.transition().duration(2500);\n    t.selectAll(\".row\")\n        .delay(function(d, i) { return x(i) * 4; })\n        .attr(\"transform\", function(d, i) { return \"translate(0,\" + x(i) + \")\"; })\n      .selectAll(\".cell\")\n        .delay(function(d) { return x(d.x) * 4; })\n        .attr(\"x\", function(d) { return x(d.x); });\n    t.selectAll(\".column\")\n        .delay(function(d, i) { return x(i) * 4; })\n        .attr(\"transform\", function(d, i) { return \"translate(\" + x(i) + \")rotate(-90)\"; });\n  }\n  var timeout = setTimeout(function() {\n    order(\"group\");\n    d3.select(\"#order\").property(\"selectedIndex\", 2).node().focus();\n  }, 5000);\n});\n</script>", "description": "Adjacency matrix view", "created_at": "2016-03-16T02:15:56Z", "updated_at": "2016-03-16T03:46:44Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.scale.category10", "d3.range", "d3.select", "d3.json", "d3.ascending", "d3.selectAll"], "readme": "##Insight gained:\n\n- We can clearly see the state adjacency.\n- When ordered by connections, the connections are gradually decreasing from top to bottom and left to right.", "uid": "RithikaReddyM_d0577504b72d2e03b2ac"}, {"code": "<script>\n\t\tvar margin = {\n\t\t\ttop : 30,\n\t\t\tright : 0,\n\t\t\tbottom : 5,\n\t\t\tleft : 30\n\t\t}, width = 400, height = 400;\n\n\t\tvar x = d3.scale.ordinal().rangeBands([ 0, width ]), z = d3.scale\n\t\t\t\t.linear().domain([ 0, 4 ]).clamp(true), c = d3.scale\n\t\t\t\t.category10().domain(d3.range(10));\n\n\t\tvar svg = d3.select(\"body\").append(\"svg\").attr(\"width\",\n\t\t\t\twidth + margin.left + margin.right).attr(\"height\",\n\t\t\t\theight + margin.top + margin.bottom).style(\"margin-left\",\n\t\t\t\t-margin.left + \"px\").append(\"g\").attr(\"transform\",\n\t\t\t\t\"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\t\td3\n\t\t\t\t.json(\n\t\t\t\t\t\t\"myData.json\",\n\t\t\t\t\t\tfunction(data) {\n\t\t\t\t\t\t\tvar matrix = [], nodes = data.nodes, n = nodes.length;\n\n\t\t\t\t\t\t\t// Compute index per node.\n\t\t\t\t\t\t\tnodes.forEach(function(node, i) {\n\t\t\t\t\t\t\t\tnode.index = i;\n\t\t\t\t\t\t\t\tnode.count = 0;\n\t\t\t\t\t\t\t\tmatrix[i] = d3.range(n).map(function(j) {\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tx : j,\n\t\t\t\t\t\t\t\t\t\ty : i,\n\t\t\t\t\t\t\t\t\t\tz : 0\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t// Convert links to matrix; count character occurrences.\n\t\t\t\t\t\t\tdata.links\n\t\t\t\t\t\t\t\t\t.forEach(function(link) {\n\t\t\t\t\t\t\t\t\t\tmatrix[link.source][link.target].z += 10;\n\t\t\t\t\t\t\t\t\t\tmatrix[link.target][link.source].z += 10;\n\t\t\t\t\t\t\t\t\t\tmatrix[link.source][link.source].z += 10;\n\t\t\t\t\t\t\t\t\t\tmatrix[link.target][link.target].z += 10;\n\t\t\t\t\t\t\t\t\t\tnodes[link.source].count += 1;\n\t\t\t\t\t\t\t\t\t\tnodes[link.target].count += 1;\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t// Precompute the orders.\n\t\t\t\t\t\t\tvar orders = {\n\t\t\t\t\t\t\t\tname : d3.range(n).sort(\n\t\t\t\t\t\t\t\t\t\tfunction(a, b) {\n\t\t\t\t\t\t\t\t\t\t\treturn d3.ascending(nodes[a].name,\n\t\t\t\t\t\t\t\t\t\t\t\t\tnodes[b].name);\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tcount : d3.range(n).sort(function(a, b) {\n\t\t\t\t\t\t\t\t\treturn nodes[b].count - nodes[a].count;\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tgroup : d3.range(n).sort(function(a, b) {\n\t\t\t\t\t\t\t\t\treturn nodes[b].group - nodes[a].group;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// The default sort order.\n\t\t\t\t\t\t\tx.domain(orders.name);\n\n\t\t\t\t\t\t\tsvg.append(\"rect\").attr(\"class\", \"background\")\n\t\t\t\t\t\t\t\t\t.attr(\"width\", width)\n\t\t\t\t\t\t\t\t\t.attr(\"height\", height);\n\n\t\t\t\t\t\t\tvar row = svg.selectAll(\".row\").data(matrix)\n\t\t\t\t\t\t\t\t\t.enter().append(\"g\").attr(\"class\", \"row\")\n\t\t\t\t\t\t\t\t\t.attr(\"transform\", function(d, i) {\n\t\t\t\t\t\t\t\t\t\treturn \"translate(0,\" + x(i) + \")\";\n\t\t\t\t\t\t\t\t\t}).each(row);\n\n\t\t\t\t\t\t\trow.append(\"line\").attr(\"x2\", width);\n\n\t\t\t\t\t\t\trow.append(\"text\").attr(\"x\", -6).attr(\"y\",\n\t\t\t\t\t\t\t\t\tx.rangeBand() / 2).attr(\"dy\", \".32em\")\n\t\t\t\t\t\t\t\t\t.style(\"font-size\", \"8px\")\n\t\t\t\t\t\t\t\t\t.attr(\"text-anchor\", \"end\").text(\n\t\t\t\t\t\t\t\t\t\t\tfunction(d, i) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn nodes[i].abb;\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tvar column = svg.selectAll(\".column\").data(matrix)\n\t\t\t\t\t\t\t\t\t.enter().append(\"g\")\n\t\t\t\t\t\t\t\t\t.attr(\"class\", \"column\").attr(\n\t\t\t\t\t\t\t\t\t\t\t\"transform\",\n\t\t\t\t\t\t\t\t\t\t\tfunction(d, i) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn \"translate(\" + x(i)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ \")rotate(-90)\";\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tcolumn.append(\"line\").attr(\"x1\", -width);\n\n\t\t\t\t\t\t\tcolumn.append(\"text\").attr(\"x\", 6).attr(\"y\",\n\t\t\t\t\t\t\t\t\tx.rangeBand() / 2).attr(\"dy\", \".32em\")\n\t\t\t\t\t\t\t\t\t.style(\"font-size\", \"8px\")\n\t\t\t\t\t\t\t\t\t.attr(\"text-anchor\", \"start\").text(\n\t\t\t\t\t\t\t\t\t\t\tfunction(d, i) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn nodes[i].abb;\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tfunction row(row) {\n\t\t\t\t\t\t\t\tvar cell = d3\n\t\t\t\t\t\t\t\t\t\t.select(this)\n\t\t\t\t\t\t\t\t\t\t.selectAll(\".cell\")\n\t\t\t\t\t\t\t\t\t\t.data(row.filter(function(d) {\n\t\t\t\t\t\t\t\t\t\t\treturn d.z;\n\t\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t\t.enter()\n\t\t\t\t\t\t\t\t\t\t.append(\"rect\")\n\t\t\t\t\t\t\t\t\t\t.attr(\"class\", \"cell\")\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", function(d) {\n\t\t\t\t\t\t\t\t\t\t\treturn x(d.x);\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", x.rangeBand())\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", x.rangeBand())\n\t\t\t\t\t\t\t\t\t\t.style(\"fill-opacity\", function(d) {\n\t\t\t\t\t\t\t\t\t\t\treturn z(d.z);\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.style(\n\t\t\t\t\t\t\t\t\t\t\t\t\"fill\",\n\t\t\t\t\t\t\t\t\t\t\t\tfunction(d) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn nodes[d.x].group == nodes[d.y].group ? c(nodes[d.x].group)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null;\n\t\t\t\t\t\t\t\t\t\t\t\t}).on(\"mouseover\", mouseover)\n\t\t\t\t\t\t\t\t\t\t.on(\"mouseout\", mouseout);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfunction mouseover(p) {\n\t\t\t\t\t\t\t\td3.selectAll(\".row text\").classed(\"active\",\n\t\t\t\t\t\t\t\t\t\tfunction(d, i) {\n\t\t\t\t\t\t\t\t\t\t\treturn i == p.y;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\td3.selectAll(\".column text\").classed(\"active\",\n\t\t\t\t\t\t\t\t\t\tfunction(d, i) {\n\t\t\t\t\t\t\t\t\t\t\treturn i == p.x;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfunction mouseout() {\n\t\t\t\t\t\t\t\td3.selectAll(\"text\").classed(\"active\", false);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\td3.select(\"#order\").on(\"change\", function() {\n\t\t\t\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\t\t\t\torder(this.value);\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tfunction order(value) {\n\t\t\t\t\t\t\t\tx.domain(orders[value]);\n\n\t\t\t\t\t\t\t\tvar t = svg.transition().duration(2500);\n\n\t\t\t\t\t\t\t\tt.selectAll(\".row\").delay(function(d, i) {\n\t\t\t\t\t\t\t\t\treturn x(i) * 4;\n\t\t\t\t\t\t\t\t}).attr(\"transform\", function(d, i) {\n\t\t\t\t\t\t\t\t\treturn \"translate(0,\" + x(i) + \")\";\n\t\t\t\t\t\t\t\t}).selectAll(\".cell\").delay(function(d) {\n\t\t\t\t\t\t\t\t\treturn x(d.x) * 4;\n\t\t\t\t\t\t\t\t}).attr(\"x\", function(d) {\n\t\t\t\t\t\t\t\t\treturn x(d.x);\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tt.selectAll(\".column\").delay(function(d, i) {\n\t\t\t\t\t\t\t\t\treturn x(i) * 4;\n\t\t\t\t\t\t\t\t}).attr(\n\t\t\t\t\t\t\t\t\t\t\"transform\",\n\t\t\t\t\t\t\t\t\t\tfunction(d, i) {\n\t\t\t\t\t\t\t\t\t\t\treturn \"translate(\" + x(i)\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ \")rotate(-90)\";\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar timeout = setTimeout(function() {\n\t\t\t\t\t\t\t\torder(\"group\");\n\t\t\t\t\t\t\t\td3.select(\"#order\")\n\t\t\t\t\t\t\t\t\t\t.property(\"selectedIndex\", 2).node()\n\t\t\t\t\t\t\t\t\t\t.focus();\n\t\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t\t});\n\t</script>", "description": "VI7 Matrix View", "created_at": "2016-03-16T00:44:55Z", "updated_at": "2016-03-16T18:42:34Z", "api": ["d3.scale.ordinal", "d3.range", "d3.select", "d3.ascending", "d3.selectAll"], "readme": "Insight gained: you can see the state adjacency as well as find the path distance between each node(state).", "uid": "meysamabl_fae4da04564935d3f3be"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\nvar color = d3.scale.category20();\n\nvar force = d3.layout.force()\n    .charge(-120)\n    .linkDistance(30)\n    .size([width, height]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"data.json\", function(error, graph) {\n  if (error) throw error;\n\n  force\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .start();\n\n  var link = svg.selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"line\")\n      .attr(\"class\", \"link\")\n      .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n  var node = svg.selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"node\")\n      .attr(\"r\", 5)\n      .style(\"fill\", function(d) { return color(d.group); })\n      .call(force.drag);\n\n  node.append(\"title\")\n      .text(function(d) { return d.name; });\n\n  force.on(\"tick\", function() {\n    link.attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\n    node.attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; });\n  });\n});\n\n</script>", "description": "VI7 Node- link diagram", "created_at": "2016-03-15T22:03:23Z", "updated_at": "2016-03-16T03:13:19Z", "api": ["d3.scale.category20", "d3.layout.force", "d3.select", "d3.json"], "readme": "The states are divided into various groups and each group is assigned with a particular color. \nThe nodes which has less number of connections are moving more freely when compared which has links.\nThere are more number of states that belong to south atlantic region.\n\nMy implementation is more similar to the Mike bostocks and I took the json dataset from Mr.Hung Do\n", "uid": "abhishekpolavarapu_13c5ec70f7840df9ce5c"}, {"code": "<script>\nvar width = 500;\nvar height = 500;\n  \nvar color = d3.scale.category10();\n\nd3.json(\"simulation.json\", function(err, data) {\n\n  // network is the array describing the delays between neurons\n  var N = data.network.length;\n  var nt = data.numTimeSteps + 4; // hardcoded, but should be max delay\n  \n  var startRaster = 50;\n  var endRaster = 450;\n  \n  var headLength = 20;\n  var headWidth = 14;\n  var linkWidth = 8;\n  \n  // fill in the plasticity for time steps when it doesn't change\n  // so its easier to look up by time step\n  var plasticity = []\n  d3.range(nt).forEach(function(t) { \n    if(data.plasticity[t]) {\n      plasticity[t] = data.plasticity[t];\n    } else {\n      plasticity[t] = plasticity[t-1];\n    }\n  })\n  \n  // nodes for the force layout\n  var nodes = d3.range(N).map(function(i) { \n    var x = width / 2 + Math.random() * 10;\n    var y = height / 2 + Math.random() * 10;\n    return {\n      index: i,\n      radius: 15,\n      x: x,\n      y: y,\n      px: x,\n      py: y,\n    };\n  })\n  \n  // links for the force layout\n  var links = [];\n  data.network.forEach(function(row, i) {\n    // row is incoming (target)\n    row.forEach(function(delay, j) {\n      // j is source\n      if(i === j) {\n        // figure out how do represent self-referential links\n      } else {\n        var p = plasticity[0][j][i];\n        links.push({\n          source: nodes[j], target: nodes[i],\n          delay: delay, type: \"normal\",\n          linkWidth: linkWidth * p, \n          headLength: headLength, \n          headWidth: headWidth * p\n        })\n      }\n    })\n  })\n  \n  // setup data structures used for showing neural activity\n  var spikes = [];\t\t\t\t\t// when a neuron fires\n  var activations = []; \t\t// the subset of activations that lead to spikes\n  var allActivations = [];  // all activations (when a neuron spikes it sends activations to all linked neurons)\n  \n  data.init.forEach(function(time, index) {\n    spikes.push({\n      index: index,\n      time: time,\n      initial: true\n    })\n    addActivationsForSpike(time, index)\n  })\n  \n  // create the time steps and the historical data for spikes and activations\n  var steps = d3.range(nt).map(function (time) {\n    data.polygroup.forEach(function(node, index) {\n      var sources = node[time];\n      if(sources && sources.length) {\n        spikes.push({ \n          time: time,\n          index: index\n        })\n        // loop over the sources of the spikes to get the activations\n        sources.forEach(function(source) {\n          // we want to render each spike\n          activations.push({\n            target: index,\n            source: source[0], \n            sourceTime: source[1], \n            time: time\n          })\n        })\n        \n        addActivationsForSpike(time, index)\n      }\n    })\n    return {\n      time: time,\n    }\n  })\n  \n  \n  function addActivationsForSpike(time, index) {\n    // loop over all connections for this neuron to create an activation\n    //var row = data.network[index]\n    // row is incoming (target)\n    data.network.forEach(function(row, i) {\n      var delay = row[index]\n      // j is source\n      if(index === i) {\n        // figure out how do represent self-referential links\n      } else {\n        allActivations.push({\n          sourceTime: time,\n          targetTime: time + delay,\n          source: index, target: i, // could reference the nodes instead\n          delay: delay, \n          type: \"normal\",\n        })\n      }\n    })\n  }\n  \n  var xscale = d3.scale.ordinal()\n    .domain(d3.range(nt))\n    .rangeBands([startRaster, endRaster])\n\n  var yscale = d3.scale.ordinal()\n    .domain(d3.range(N))\n    .rangePoints([30, 300])\n  \n  \n  //---------------------------------------------------------------  \n  // RASTER PLOT\n  //---------------------------------------------------------------  \n\n  renderRaster();\n  function renderRaster() {\n    var rastersvg = d3.select(\"#raster\").append(\"svg\")\n    \n    var radius = 10;\n    \n        \n    console.log(\"spikes\", spikes)\n    console.log(\"activations\", activations)\n    \n    var stepRects = rastersvg.selectAll(\"rect.step\")\n    .data(steps)\n    stepRects.enter().append(\"rect\").classed(\"step\", true)\n    stepRects.attr({\n      x: function(d,i) { return xscale(d.time) },\n      y: 10,\n      width: xscale.rangeBand(),\n      height: 400\n    })\n    \n    var stepLabels = rastersvg.selectAll(\"text.step\")\n    .data(steps)\n    stepLabels.enter().append(\"text\").classed(\"step\", true)\n    .text(function(d) { return d.time })\n    .attr({\n      x: function(d,i) { return xscale(d.time) + 5 },\n      y: 405\n    })\n    \n    var legendCircles = rastersvg.selectAll(\"circle.legend\")\n    .data(d3.range(N))\n    .enter()\n    .append(\"circle\").classed(\"legend\", true)\n    .attr({\n      cx: startRaster - 2 * radius,\n      cy: function(d) { return yscale(d) },\n      fill: function(d) { return color(d) },\n      r: radius\n    })\n    \n    var legendLines = rastersvg.selectAll(\"line.legend\")\n    .data(d3.range(N))\n    .enter()\n    .append(\"line\").classed(\"legend\", true)\n    .attr({\n      x1: startRaster - radius,\n      y1: function(d) { return yscale(d) },\n      x2: endRaster,\n      y2: function(d) { return yscale(d) },\n      stroke: function(d) { return color(d) },\n    })\n    \n    var legendText = rastersvg.selectAll(\"text.legend\")\n    .data(d3.range(N))\n    .enter()\n    .append(\"text\").classed(\"legend\", true)\n    .text(function(d) { return d })\n    .attr({\n      x: startRaster - 2 * radius,\n      y: function(d) { return yscale(d) + 20 },\n      fill: function(d) { return color(d) },\n      \"alignment-baseline\": \"middle\",\n      \"text-anchor\":\"middle\"\n    })\n\n    \n    var activationLines = rastersvg.selectAll(\"line.activation\")\n     .data(activations)\n    activationLines.enter().append(\"line\").classed(\"activation\", true)\n    activationLines.attr({\n      x1: function(d) { return xscale(d.sourceTime)},\n      y1: function(d) { return yscale(d.source)},\n      x2: function(d) { return xscale(d.time)},\n      y2: function(d) { return yscale(d.target)},\n    })\n    \n    var activeLines = rastersvg.selectAll(\"line.active\")\n     .data(activations)\n    activeLines.enter().append(\"line\").classed(\"active\", true)\n    activeLines.attr({\n      x1: function(d) { return xscale(d.sourceTime)},\n      y1: function(d) { return yscale(d.source)},\n      x2: function(d) { return xscale(d.sourceTime)},\n      y2: function(d) { return yscale(d.source)},\n    })\n    \n    var activationDots = rastersvg.selectAll(\"circle.activation\")\n      .data(activations)\n    activationDots.enter().append(\"circle\").classed(\"activation\", true)\n    activationDots.attr({\n      cx: function(d) { return xscale(d.sourceTime)},\n      cy: function(d) { return yscale(d.source)},\n      r: 5,\n      opacity: 0\n    })\n    \n    \n    var spikeCircles = rastersvg.selectAll(\"circle.spike\")\n      .data(spikes)\n    spikeCircles.enter().append(\"circle\").classed(\"spike\", true)\n    spikeCircles.attr({\n      cx: function(d) { return xscale(d.time) },\n      cy: function(d) { return yscale(d.index) },\n      r: radius,\n      //fill: function(d) { return color(d.index) },\n      fill: \"#eee\",\n      opacity: 0.1,\n      stroke: function(d) { \n      \t//return d.initial ? \"#111\": \"#eee\"\n        return \"#444\"\n      }\n    })\n  }\n  \n  //---------------------------------------------------------------  \n  // FORCE DIAGRAM\n  //---------------------------------------------------------------\n    \n  renderForce();\n  function renderForce() {\n    \n    var delayScale = d3.scale.linear()\n    .domain(d3.extent(links, function(d) { return d.delay }))\n    .range([100, 300])\n\n    var force = d3.layout.force()\n        .gravity(0.05)\n        .charge(function(d) {\n          if(d.type === \"rigid\") {\n            return -100\n          }\n          return -30\n        })\n\n        .nodes(nodes.concat(links))\n        .size([width, height]);\n\n    force.start();\n\n    var forcesvg = d3.select(\"#force\").append(\"svg\")\n\n    var svgLinks = forcesvg.selectAll(\".link\")\n      .data(links)\n      .enter().append(\"polygon\").classed(\"link\", true)\n\n    var svgNodes = forcesvg.selectAll(\"circle\")\n        .data(nodes)\n      .enter().append(\"circle\").classed(\"node\", true)\n        .attr(\"r\", function(d) { return d.radius; })\n        .style(\"fill\", function(d, i) { return color(d.index); })\n    .call(force.drag)\n\n    //console.log(links)\n    \n    var activeRects = forcesvg.selectAll(\"rect.activation\")\n      .data(allActivations)\n    activeRects.enter().append(\"rect\").classed(\"activation\", true)\n\n    force.on(\"tick\", function(e) {\n      var nodes = force.nodes()\n      force.alpha(0.1)\n\n      // collision detection\n      var q = d3.geom.quadtree(nodes);\n      nodes.forEach(function(node) {\n        q.visit(collide(node))\n      })\n\n      // strongly coupling certain nodes\n      links.forEach(function(link) {\n        var source = link.source;\n        var target = link.target;\n        /*\n        if(link.type == \"normal\") {\n          var x = source.x - target.x;\n          var y = source.y - target.y;\n          var dist = Math.sqrt(x * x + y * y);\n          //var r = source.radius + target.radius;\n          var r = delayScale(link.delay)\n\n          if (dist < r) {\n            // this condition adapted from collision detection\n            dist = (dist - r) / dist * .5; //don't quite understand this\n            source.x -= x *= dist;\n            source.y -= y *= dist;\n            target.x += x;\n            target.y += y;\n          } else {\n            dist = -0.01; // not sure how to do the opposive of above\n            source.x += x *= dist;\n            source.y += y *= dist;\n            target.x -= x;\n            target.y -= y;\n          }\n        }\n        */\n\n        // move the invisible link nodes\n        var x1 = link.source.x,\n            x2 = link.target.x,\n            y1 = link.source.y,\n            y2 = link.target.y,\n            slope = (y2 - y1) / (x2  - x1);\n\n          link.x = (x2 + x1)/ 2;\n          link.y = (x2 - x1) * slope / 2 + y1;\n      })\n\n      forcesvg.selectAll(\"circle.node\")\n      .attr({\n        cx: function(d) {return d.x },\n        cy: function(d) { return d.y },\n        r: function(d) { return d.radius }\n      })\n\n      svgLinks.attr(\"points\", calculatePolygon);\n    }); \n  }\n    \n  controller();\n  function controller() {\n    \n    var rastersvg = d3.select(\"#raster svg\")\n    // the travelling dots and lines that show an activation en route to a neuron spike\n    var activationDots = rastersvg.selectAll(\"circle.activation\")\n    var activeLines = rastersvg.selectAll(\"line.active\")\n    // colored circles signifying when a neuron spikes\n    var spikeCircles = rastersvg.selectAll(\"circle.spike\")\n\n    var forcesvg = d3.select(\"#force svg\")\n    var neuronCircles = forcesvg.selectAll(\"circle.node\")\n    var neuronLinks = forcesvg.selectAll(\".link\")\n    var activationRects = forcesvg.selectAll(\"rect.activation\")\n    \n    var stepRects = rastersvg.selectAll(\"rect.step\")\n    stepRects.on(\"mouseover\", function(d) {\n      //console.log(\"step\", d);\n\t\t\trasterSpike(d);\n      forceSpike(d);\n    })\n    .on(\"mouseout\", function(d) {\n\n    })\n    \n    function rasterSpike(step) {\n\t\t\tspikeCircles.filter(function(f) { return f.time === step.time })\n        .transition()\n        .attr({\n          r: 15\n        })\n        .each(\"end\", function(c) {\n          d3.select(this).transition()\n          .attr({\n            r: 10\n          })\n        })\n    }\n    function forceSpike(step) {\n      var spiked = [];\n      spikes.forEach(function(d) {\n        if(d.time === step.time) {\n          spiked.push(d.index)\n        }\n      })\n      neuronCircles.filter(function(f) { return spiked.indexOf(f.index) >= 0 })\n        .transition()\n        .attr({\n          r: function(d) { return d.radius * 1.5}\n        })\n        .each(\"end\", function(c) {\n          d3.select(this).transition()\n          .attr({\n            r: function(d) { return d.radius }\n          })\n        })\n    }\n    \n    \n    rastersvg.on(\"mousemove\", function() {\n      var x = d3.mouse(this)[0];\n      timeTravel(x);\n    })\n    function timeTravel(x) {\n      var inRaster = x - startRaster;\n      var rasterWidth = endRaster - startRaster;\n      if(inRaster < rasterWidth && inRaster > 0) {\n        var continuous = nt * inRaster / rasterWidth;\n        var step = Math.floor(continuous);\n        //console.log(\"step\", step, continuous, inRaster, x)\n\n        spikes.forEach(function(d) {\n          var circles = spikeCircles.filter(function(f) { return f == d})\n          if(continuous >= d.time) {\n            circles.style({\n              opacity: 1,\n              fill: function(d) { return color(d.index )}\n            })\n          } else {\n            circles.style({\n              opacity: 0.1,\n              fill: \"#eee\"\n            })  \n          }\n        })\n        \n        activations.forEach(function(d) {\n          var dots = activationDots.filter(function(f) { return f == d })\n          var lines = activeLines.filter(function(f) { return f == d })\n          \n          // source x and y\n          var sx = xscale(d.sourceTime);\n          var sy = yscale(d.source);\n          // a number between 0 and 1, how far along we are in this time step, in continuous time\n          var fraction = (continuous - d.sourceTime) / (d.time - d.sourceTime);\n          if(fraction > 1) fraction = 1;\n          // target x and y\n          var tx = sx + (xscale(d.time) - sx) * fraction;\n          var ty = sy + (yscale(d.target) - sy) * fraction;\n          if(d.sourceTime < continuous && continuous < d.time) {\n            dots.attr({\n              cx: tx,\n              cy: ty\n            })\n            .style(\"opacity\", 1)\n            \n            lines.attr({\n              x2: tx,\n              y2: ty\n            })\n\n          } else {\n            dots.style(\"opacity\", 0)\n            \n            if(d.sourceTime < continuous) {\n              lines.attr({\n                x2: tx,\n                y2: ty\n              })\n            } else {\n              lines.attr({\n                x2: sx,\n                y2: sy\n              })\n            }\n          }\n        })\n        \n        // update the widths of the links based on plasticity over time\n        neuronLinks.attr({\n          points: function(d) {\n            var p = plasticity[step][d.source.index][d.target.index];\n            d.headWidth = headWidth * p\n            d.linkWidth = linkWidth * p\n            return calculatePolygon(d)\n          }\n          \n        })\n        // update the activation pulses on the force graph\n        allActivations.forEach(function(d) {\n          var rects = activationRects.filter(function(f) { return f == d })\n          \n          var fraction = (continuous - d.sourceTime) / (d.targetTime - d.sourceTime);\n          if(fraction > 1) fraction = 1;\n          \n          var p = plasticity[d.sourceTime][d.source][d.target];\n          var sx = nodes[d.source].x;\n          var sy = nodes[d.source].y;\n          var tx = sx + (nodes[d.target].x - sx) * fraction;\n          var ty = sy + (nodes[d.target].y - sy) * fraction;\n          if(d.sourceTime < continuous && continuous < d.targetTime) {\n            //console.log(d, sx, sy, tx, ty, nodes[d.target])\n            rects.attr({\n              x: tx,\n              y: ty,\n              width: headWidth * p,\n              height: headWidth * p\n            })\n            .style(\"opacity\", 1)\n          } else {\n            rects.style(\"opacity\", 0)\n          }\n          \n        })\n\n      }\n    }\n  }\n\n\n  function collide(node) {\n    var r = node.radius + 16,\n        nx1 = node.x - r,\n        nx2 = node.x + r,\n        ny1 = node.y - r,\n        ny2 = node.y + r;\n    return function(quad, x1, y1, x2, y2) {\n      if (quad.point && (quad.point !== node)) {\n        var x = node.x - quad.point.x,\n            y = node.y - quad.point.y,\n            dist = Math.sqrt(x * x + y * y),\n            r = node.radius + quad.point.radius;\n        if (dist < r) {\n          dist = (dist - r) / dist * .5;\n          node.x -= x *= dist;\n          node.y -= y *= dist;\n          quad.point.x += x;\n          quad.point.y += y;\n        }\n      }\n      return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n    };\n  }\n  \n  // taken from http://blockbuilder.org/erkal/9746652\n  function calculatePolygon(d) {\n    var p2  = d.source,\n        w   = diff(d.target, p2),\n        wl  = length(w),\n        v1  = scale(w, (wl - d.target.radius) / wl),\n        p1  = sum(p2, v1),\n        v2  = scale(rotate90(w), d.linkWidth / length(w)),\n        p3  = sum(p2, v2),\n        v1l = length(v1),\n        v3  = scale(v1, (v1l - d.headLength) / v1l),\n        p4  = sum(p3, v3),\n        v2l = length(v2),\n        v4  = scale(v2, d.headWidth / v2l),\n        p5  = sum(p4, v4);\n\n    return pr(p1) +\" \"+ pr(p2) +\" \"+ pr(p3) +\" \"+ pr(p4) +\" \"+ pr(p5);\n\n    function length(v) {return Math.sqrt(v.x * v.x + v.y * v.y)}\n    function diff(v, w) {return {x: v.x - w.x, y: v.y - w.y}}\n    function sum(v, w) {return {x: v.x + w.x, y: v.y + w.y}}\n    function scale(v, f) {return {x: f * v.x, y: f * v.y}}\n    function rotate90(v) {return {x: v.y, y: -v.x}} // clockwise\n    function pr(v) {return v.x +\",\"+ v.y}\n  }\n})\n</script>", "description": "polygroups visualization: activate", "created_at": "2016-03-15T20:39:22Z", "updated_at": "2016-03-15T20:39:23Z", "api": ["d3.scale.category10", "d3.json", "d3.range", "d3.scale.ordinal", "d3.select", "d3.scale.linear", "d3.extent", "d3.layout.force", "d3.geom.quadtree", "d3.mouse"], "readme": "Prototyping Neural Network algorithm visualization\n\n`simulation.json`\n```javascript\n{\n\t\"polygroup\": [{\n\t\t\"5\": [ \t\t\t\t\t// timestep this node was activated\n      \t\t\t\t\t\t\t// each tuple describes incoming activations\n\t\t\t[2, 3],\t\t\t\t// [node index, timestep when this node fired]\n\t\t\t[1, 4]\t\t\t\t// \n\t\t]\n\t}, {}, {\t\t\t\t\t\n  \t\t\t\t\t\t\t\t\t// this node (index 2) fired at times 2 and 6\n\t\t\"2\": [\n\t\t\t[0, 2],\n\t\t\t[2, 2]\n\t\t],\n\t\t\"6\": [\n\t\t\t[0, 6],\n\t\t\t[1, 4]\n\t\t]\n\t}],\n\t\"init\": [1, 3, 1],\n\t\"numTimeSteps\": 6,\n\t\"network\": [\n\t\t[0, 2, 3],\n\t\t[1, 4, 2],\n\t\t[1, 3, 1]\n\t]\n}\n```\n\nNOTES\n  // when a node fires, what would be super cool is in the connection\n  // between two nodes, that node can increase or decrease in size, can\n  // flash different color whether plasticity is increasing or decreasing\n\n\nAlso using [@sxywu's trick](http://blockbuilder.org/sxywu/9354026) of adding links as invisible nodes and centering them between source and target, this keeps the graph from forming straight lines in some configurations.\n\nUsing [@erkal's polygon links](http://blockbuilder.org/erkal/9746652).\n\n-----------------------\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3231298'>Collision Detection</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/7402f55e19e1e609f014'>rigid links</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/36014350348825ded276'>rigid links</a>\n\nforked from <a href='http://bl.ocks.org/mathnathan/'>mathnathan</a>'s block: <a href='http://bl.ocks.org/mathnathan/0568c594c55b8951b94c'>polygroups visualization</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/fd78a64d3ff9f03907c4'>polygroups visualization</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/eb69ef5fbcd2330a7d61'>polygroups visualization: activate</a>", "uid": "mathnathan_e77414e67bd47439c57c"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n    \t.attr(\"stroke-opacity\", 0)\n    \t.transition().duration(1000)\n    \t.attr(\"stroke-opacity\", 1);\n\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar genes = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"g\");\n\n\t\t\tgenes.append(\"rect\")\n     \t  .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          \tif (d.name % 2 === 0) {\n            \treturn 70;\n            }\n          \telse { return 40;}\n          }\n        \telse if (d.direction == \"reverse\") {\n            if (d.name % 2 === 0) {\n            \treturn 160;\n            }\n            else { return 130; }\n          }\n      })\n      \t.attr(\"x\", function (d) {\n        \tif (d.direction === \"forward\") {\n            return (0 - ((d.stop-d.start)/10)) - 2;\n          }\n        \telse if (d.direction === \"reverse\") {\n            return (genomelength/10) + 2;\n          }\n      })\n       \t.attr(\"height\", function (d) {return 30;})\n        .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      \t.attr(\"fill\", function (d) {\n        \tif (d.direction == \"forward\") {\n            return \"green\";\n          }\n        \telse if (d.direction == \"reverse\") {\n            return \"red\";\n          }\n        \telse {\n            return \"black\";\n          }\n      \t})\n   \t\t\t.transition().delay(1000).duration(1500).attr(\"x\", function (d) { return d.start/10; });\n\n\n    genes.append(\"text\") // GC\n    \t.attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 90;\n        }\n        else { return 60;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 180;\n        }\n        \telse { return 150;}\n      }\n    })\n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    .text(function(d) {\n      return ((((d.sequence.match(/G/gi).length)+(d.sequence.match(/C/gi).length))/(d.sequence.length))*100).toPrecision(3)+\"%\";\n    })\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(2000).duration(1500)\n\t\t.attr(\"fill-opacity\", 1);\n\n    genes.append(\"text\") // pham name\n    \t.attr(\"x\", function(d) { \n      \treturn ((d.start + d.stop)/2)/10;\n    \t})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 60;\n        }\n        else { return 30;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 210;\n        }\n        \telse { return 180;}\n      }\n    })\n    \n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    .text(function(d) {\n      return d.pham\n    })\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(3500).duration(1500)\n\t\t.attr(\"fill-opacity\", 1);\n    });\n    \n\n    var group = svg.selectAll(\".thousandticks\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 100, width: \"1px\", height: 30})\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n\n\t    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n  \tgroup.append(\"text\")\n\t    .attr(\"x\", function(d) {return (d/10) + 3;})\n  \t  .attr(\"y\", (90) + 22)\n\t    .attr(\"font-family\", \"sans-serif\")\n\t    .attr(\"font-size\", \"14px\")\n\t    .attr(\"fill\", \"green\")\n\t    .style(\"text-anchor\", \"start\")\n\t    .text(function(d) { return d/1000; })\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n\t\tvar group2 = svg.selectAll(\".fivehundredticks\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n\t\t  .attr({x: function(d) {return d/10;}, y: 100, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n     \t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".onehundredticks\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 115, width: \"1px\", height: 15})\n    \t.attr(\"fill-opacity\", 0)\n    \t.transition().duration(1500)\n    \t.attr(\"fill-opacity\", 1);\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  </script>", "description": "genome browser with GC", "created_at": "2016-03-15T16:13:23Z", "updated_at": "2016-03-15T16:13:24Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/1d8085294b6094e617e9'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/a3cd99de2763a9a696d1'>genome browser with GC</a>\n\nforked from <a href='http://bl.ocks.org/JohnWall64/'>JohnWall64</a>'s block: <a href='http://bl.ocks.org/JohnWall64/51eb761c085056e1ba50'>genome browser with GC</a>", "uid": "JohnWall64_391a2664b155f90cc601"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n    \t.attr(\"stroke-opacity\", 0)\n    \t.transition().duration(1000)\n    \t.attr(\"stroke-opacity\", 1);\n\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar genes = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"g\");\n\n\t\t\tgenes.append(\"rect\")\n     \t  .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          \tif (d.name % 2 === 0) {\n            \treturn 70;\n            }\n          \telse { return 40;}\n          }\n        \telse if (d.direction == \"reverse\") {\n            if (d.name % 2 === 0) {\n            \treturn 160;\n            }\n            else { return 130; }\n          }\n      })\n      \t.attr(\"x\", function (d) {\n        \tif (d.direction === \"forward\") {\n            return (0 - ((d.stop-d.start)/10)) - 2;\n          }\n        \telse if (d.direction === \"reverse\") {\n            return (genomelength/10) + 2;\n          }\n      })\n       \t.attr(\"height\", function (d) {return 30;})\n        .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      \t.attr(\"fill\", function (d) {\n        \tif (d.direction == \"forward\") {\n            return \"green\";\n          }\n        \telse if (d.direction == \"reverse\") {\n            return \"red\";\n          }\n        \telse {\n            return \"black\";\n          }\n      \t})\n   \t\t\t.transition().delay(1000).duration(1500).attr(\"x\", function (d) { return d.start/10; });\n\n\n    genes.append(\"text\") // gene name\n    \t.attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 90;\n        }\n        else { return 60;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 180;\n        }\n        \telse { return 150;}\n      }\n    })\n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    .text(function(d) {return d.name})\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(2000).duration(1500)\n\t\t.attr(\"fill-opacity\", 1);\n\n    genes.append(\"text\") // pham name\n    \t.attr(\"x\", function(d) { \n      \treturn ((d.start + d.stop)/2)/10;\n    \t})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 60;\n        }\n        else { return 30;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 210;\n        }\n        \telse { return 180;}\n      }\n    })\n    \n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    .text(function(d) {\n      return d.pham\n    })\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(3500).duration(1500)\n\t\t.attr(\"fill-opacity\", 1);\n    });\n    \n\n    var group = svg.selectAll(\".thousandticks\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 100, width: \"1px\", height: 30})\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n\n\t    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n  \tgroup.append(\"text\")\n\t    .attr(\"x\", function(d) {return (d/10) + 3;})\n  \t  .attr(\"y\", (90) + 22)\n\t    .attr(\"font-family\", \"sans-serif\")\n\t    .attr(\"font-size\", \"14px\")\n\t    .attr(\"fill\", \"green\")\n\t    .style(\"text-anchor\", \"start\")\n\t    .text(function(d) { return d/1000; })\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n\t\tvar group2 = svg.selectAll(\".fivehundredticks\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n\t\t  .attr({x: function(d) {return d/10;}, y: 100, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n     \t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".onehundredticks\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 115, width: \"1px\", height: 15})\n    \t.attr(\"fill-opacity\", 0)\n    \t.transition().duration(1500)\n    \t.attr(\"fill-opacity\", 1);\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  </script>", "description": "genome browser", "created_at": "2016-03-15T15:05:10Z", "updated_at": "2016-03-15T15:05:10Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/mcgovemc/'>mcgovemc</a>'s block: <a href='http://bl.ocks.org/mcgovemc/bbc662a5bf51665cce8b'>genome browser</a>", "uid": "BDAguila_102a0982e35cdad76e15"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });\n    \n    //define tooltip\n    var div = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    \n    \n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n    \t.attr(\"stroke-opacity\", 0)\n    \t.transition().duration(1000)\n    \t.attr(\"stroke-opacity\", 1);\n\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar genes = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"g\");\n\n\t\t\tgenes.append(\"rect\")\n     \t  .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          \tif (d.name % 2 === 0) {\n            \treturn 70;\n            }\n          \telse { return 40;}\n          }\n        \telse if (d.direction == \"reverse\") {\n            if (d.name % 2 === 0) {\n            \treturn 160;\n            }\n            else { return 130; }\n          }\n      })\n      \t.attr(\"x\", function (d) {\n        \tif (d.direction === \"forward\") {\n            return (0 - ((d.stop-d.start)/10)) - 2;\n          }\n        \telse if (d.direction === \"reverse\") {\n            return (genomelength/10) + 2;\n          }\n      })\n       \t.attr(\"height\", function (d) {return 30;})\n        .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      \t.attr(\"fill\", function (d) {\n        \tif (d.direction == \"forward\") {\n            return \"green\";\n          }\n        \telse if (d.direction == \"reverse\") {\n            return \"red\";\n          }\n        \telse {\n            return \"black\";\n          }\n      \t})\n   \t\t\t.transition().delay(1000).duration(1500).attr(\"x\", function (d) { return d.start/10; });\n     //------------------------------- \n \n\n    genes.append(\"text\") // gene name\n    \t.attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 90;\n        }\n        else { return 60;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 180;\n        }\n        \telse { return 150;}\n      }\n    })\n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    .text(function(d) {return d.name})\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(2000).duration(1500)\n\t\t.attr(\"fill-opacity\", 1);\n\n    genes.append(\"text\") // pham name\n    \t.attr(\"x\", function(d) { \n      \treturn ((d.start + d.stop)/2)/10;\n    \t})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 60;\n        }\n        else { return 30;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 210;\n        }\n        \telse { return 180;}\n      }\n    })\n    \n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    .text(function(d) {\n      return d.pham\n    })\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(3500).duration(1500)\n\t\t.attr(\"fill-opacity\", 1);\n    });\n    \n\n    var group = svg.selectAll(\".thousandticks\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 100, width: \"1px\", height: 30})\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n\n\t    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n  \tgroup.append(\"text\")\n\t    .attr(\"x\", function(d) {return (d/10) + 3;})\n  \t  .attr(\"y\", (90) + 22)\n\t    .attr(\"font-family\", \"sans-serif\")\n\t    .attr(\"font-size\", \"14px\")\n\t    .attr(\"fill\", \"green\")\n\t    .style(\"text-anchor\", \"start\")\n\t    .text(function(d) { return d/1000; })\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n\t\tvar group2 = svg.selectAll(\".fivehundredticks\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n\t\t  .attr({x: function(d) {return d/10;}, y: 100, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n     \t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".onehundredticks\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 115, width: \"1px\", height: 15})\n    \t.attr(\"fill-opacity\", 0)\n    \t.transition().duration(1500)\n    \t.attr(\"fill-opacity\", 1);\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  </script>", "description": "genome browser(before test)", "created_at": "2016-03-15T14:53:29Z", "updated_at": "2016-03-17T16:03:38Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser(before test)</a>", "uid": "diepvf_793ae40d4139f2959561"}, {"code": "<script>\n\nvar width = 1060,\n    height = 600;\n    d3.select(self.frameElement).style(\"height\", \"900px\");\nvar color = d3.scale.category10();\n\nvar force = d3.layout.force()\n    .charge(-120)\n    .linkDistance(30)\n    .size([width, height]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"USstates.json\", function(error, graph) {\n  force\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .start();\n\n  var link = svg.selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"line\")\n      .attr(\"class\", \"link\")\n      .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n  var node = svg.selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"node\")\n      .attr(\"r\", 8)\n      .style(\"fill\", function(d) { return color(d.group); })\n\t    .attr(\"data-legend\",function(d) { return d.category; })\n      .call(force.drag);\n\t   \n    legend = svg.append(\"g\")\n    .attr(\"class\",\"legend\")\n    .attr(\"transform\",\"translate(800,140)\")\n    .style(\"font-size\",\"16px\")\n    .call(d3.legend);\n\t\n\t  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".25em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\t \n  node.append(\"title\")\n      .text(function(d) { return d.name; });\n\t  \n\t \n  force.on(\"tick\", function() {\n    link.attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\n    node.attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; });\n  });\n});\n\n</script>", "description": "Visual Implementation (Node Link View)", "created_at": "2016-03-15T02:35:34Z", "updated_at": "2016-04-03T01:38:55Z", "api": ["d3.select", "d3.scale.category10", "d3.layout.force", "d3.json", "d3.entries"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "srinivashavanur_ab441b0f43779f5ea140"}, {"code": "<script>\n\nfunction speciesSelect(array,species){\n return array.filter(function(d){\n   return d.species===species;\n });\n}\n\nfunction residuals(array,y,x,regOutput){\n  array.forEach(function(d) {\n   d.residual = d[y]-d[x]*regOutput.beta-regOutput.alpha;\n  });\n}\n\n\n\nfunction regressionOutput(array,x,y){\n  var meanX = mean(array,x);\n  var meanY = mean(array,y);\n  var dotProductXY = dotProduct(array,x,y);\n  var dotProductXX = dotProduct(array,x,x);\n  var beta = (dotProductXY-meanX*meanY)/(dotProductXX-meanX^2);\n  var alpha = meanY - beta*meanX;\n  return {'alpha':alpha,'beta':beta};\n}\n\n\nfunction dotProduct(array,x,y){\n  var result = 0;\n  array.forEach(function(d) {\n    result += d[x]*d[y];\n  });\n  return result;\n}\n\nfunction mean(array,x){\n  var result = 0;\n  array.forEach(function(d) {\n    result += d[x];\n  });\n  result=result/array.length;\n  return result;\n}\n\n\n\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.sepalLength = +d.sepalLength;\n    d.sepalWidth = +d.sepalWidth;\n  });\n\n\n\n  var species=[\"setosa\",\"virginica\",\"versicolor\"];\n  var xlimits=d3.extent(data, function(d) { return d.sepalWidth;}) \n  xlimits[0]=0;\n  var ylimits=d3.extent(data, function(d) { return d.sepalLength;})\n  ylimits[0]=0;\n\n  x.domain(xlimits).nice();\n  y.domain(ylimits).nice();\n\n\n  var regressionstats=[];\n  species.forEach(function(d){\n    regressionstats.push(regressionOutput(speciesSelect(data,d),\"sepalWidth\",\"sepalLength\"));\n    });\n\n\n  var lineDataMotherload=[];\n  regressionstats.forEach(function(d){\n    lineDataMotherload.push([ { \"x\": xlimits[0],   \"y\": d.alpha},  { \"x\": xlimits[1],\n      \"y\":d.alpha+d.beta*xlimits[1]}]);\n  });\n\n\n  var lineFunction = d3.svg.line()\n                      .x(function(d) { return x(d.x); })\n                      .y(function(d) { return y(d.y); })\n                      .interpolate(\"linear\");\n\n  var linePlots = lineDataMotherload.map(lineFunction);\n\n  var lineGraph = svg.selectAll(\".line\")\n                            .data(linePlots)\n                            .enter().append(\"path\")\n                            .attr(\"d\",function(d){return d;})\n                            .attr(\"stroke\",function(d,i){return color(species[i]);})\n                            .attr(\"stroke-width\", 2)\n                            .attr(\"fill\", \"none\")\n                            .attr(\"opacity\",.5);\n\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sepal Width (cm)\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sepal Length (cm)\")\n\n  svg.selectAll(\".dot\")\n      .data(data)\n.attr(\"d\",function(d){console.log(d);})\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", function(d) { return x(d.sepalWidth); })\n      .attr(\"cy\", function(d) { return y(d.sepalLength); })\n      .style(\"fill\", function(d) { return color(d.species); });\n\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\n</script>", "description": "Simple linear regression", "created_at": "2016-03-11T21:48:21Z", "updated_at": "2016-03-11T21:53:47Z", "api": ["d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.select", "d3.tsv", "d3.extent", "d3.svg.line"], "readme": "", "uid": "Bcohn_45bcd1eb1394898ceaf8"}, {"code": "<script>\n  \n    mapboxgl.accessToken = 'pk.eyJ1IjoiZW5qYWxvdCIsImEiOiJjaWhtdmxhNTIwb25zdHBsejk0NGdhODJhIn0.2-F2hS_oTZenAWc0BMf_uw'\n    \n    //Setup mapbox-gl map\n    var map = new mapboxgl.Map({\n      container: 'map', // container id\n      style: 'mapbox://styles/enjalot/cihmvv7kg004v91kn22zjptsc',\n      center: [-0.1,51.5119112],\n      zoom: 13.5,\n    })\n    map.dragPan.disable();\n    map.scrollZoom.disable();\n    \n    // Setup our svg layer that we can manipulate with d3\n    var container = map.getCanvasContainer()\n    var svg = d3.select(container).append(\"svg\")\n\n    var active = true;\n    var circleControl = new circleSelector(svg)\n      .projection(project)\n      .inverseProjection(function(a) {\n        return map.unproject({x: a[0], y: a[1]});\n      })\n      .activate(active);\n    \n    d3.select(\"#circle\").on(\"click\", function() {\n      active = !active;\n      circleControl.activate(active)\n      if(active) {\n        map.dragPan.disable();\n      } else {\n        map.dragPan.enable();\n      }\n      d3.select(this).classed(\"active\", active)\n    })\n    \n    // Add zoom and rotation controls to the map.\n    map.addControl(new mapboxgl.Navigation());\n    \n    function project(d) {\n      return map.project(getLL(d));\n    }\n    function getLL(d) {\n      return new mapboxgl.LngLat(+d.lng, +d.lat)\n    }\n  \n    d3.csv(\"dots.csv\", function(err, data) {\n      //console.log(data[0], getLL(data[0]), project(data[0]))\n      var dots = svg.selectAll(\"circle.dot\")\n        .data(data)\n      \n      dots.enter().append(\"circle\").classed(\"dot\", true)\n      .attr(\"r\", 1)\n      .style({\n        fill: \"#0082a3\",\n        \"fill-opacity\": 0.6,\n        stroke: \"#004d60\",\n        \"stroke-width\": 1\n      })\n      .transition().duration(1000)\n      .attr(\"r\", 6)\n\n      circleControl.on(\"update\", function() {\n        svg.selectAll(\"circle.dot\").style({\n          fill: function(d) {\n            var thisDist = circleControl.distance(d);\n            var circleDist = circleControl.distance()\n            if(thisDist < circleDist) {\n              return \"#ff8eec\";\n            } else {\n              return \"#0082a3\"\n            }\n          }\n        })\n      })\n      circleControl.on(\"clear\", function() {\n        svg.selectAll(\"circle.dot\").style(\"fill\", \"#0082a3\")\n      })\n      \n      function render() {\n        dots.attr({\n          cx: function(d) { \n            var x = project(d).x;\n            return x\n          },\n          cy: function(d) { \n            var y = project(d).y;\n            return y\n          },\n        })\n        \n        circleControl.update(svg)\n      }\n\n      // re-render our visualization whenever the view changes\n      map.on(\"viewreset\", function() {\n        render()\n      })\n      map.on(\"move\", function() {\n        render()\n      })\n\n      // render our initial visualization\n      render()\n    })\n  </script>", "description": "fresh block", "created_at": "2016-03-07T13:57:45Z", "updated_at": "2016-03-07T14:09:13Z", "api": ["d3.geo.mercator", "d3.dispatch", "d3.mouse", "d3.behavior.drag", "d3.rebind", "d3.select", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "namibian15_5d353f5f4a093a74d75f"}, {"code": "<script>\n\n// ************** Generate the tree diagram   *****************\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n  width = 1200 - margin.right - margin.left,\n  height = 900 - margin.top - margin.bottom;\n  \nvar i = 0;\n  duration = 750;\n\nvar tree = d3.layout.tree()\n  .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n  .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.right + margin.left)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + \n                                    margin.top + \")\");\n\n// load the external data\nd3.csv(\"ps.csv\", function(error, data) {\n\n  // *********** Convert flat data into a nice tree ***************\n  // create a name: node map\n  var dataMap = data.reduce(function(map, node) {\n    map[node.name] = node;\n    return map;\n  }, {});\n\n  // create the tree array\n  var treeData = [];\n  data.forEach(function(node) {\n    // add to parent\n    var parent = dataMap[node.parent];\n    if (parent) {\n      // create child array if it doesn't exist\n      (parent.children || (parent.children = []))\n        // add node to child array\n        .push(node);\n    } else {\n      // parent is null or missing\n      treeData.push(node);\n    }\n  });\n\n  root = treeData[0];\n  root.x0 = height / 2;\n  root.y0 = 0;\n  \n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"500px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n    links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n    .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .attr(\"transform\", function(d) {\n      return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n    .on(\"click\", click)\n      // add tool tip for ps -eo pid,ppid,pcpu,size,comm,ruser,s\n      .on(\"mouseover\", function(d) {\n        div.transition()\n          .duration(200)\n          .style(\"opacity\", .9);\n        div .html(\n            \"PID: \" + d.name + \"<br/>\" + \n            \"Command: \" + d.COMMAND + \"<br/>\" +\n            \"User: \" + d.RUSER + \"<br/>\" +\n            \"%CPU: \" + d.CPU + \"<br/>\" +\n            \"Memory: \" + d.SIZE\n            )\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n        })\n      .on(\"mouseout\", function(d) {\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n        });\n\n  nodeEnter.append(\"circle\")\n    .attr(\"r\", 1e-6)\n    .style(\"fill\", function(d) {\n      return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n    .attr(\"x\", function(d) {\n      return d.children || d._children ? -13 : 13; })\n    .attr(\"dy\", \".35em\")\n    .attr(\"text-anchor\", function(d) { \n      return d.children || d._children ? \"end\" : \"start\"; })\n    .text(function(d) { return d.COMMAND; })\n    .style(\"fill-opacity\", 1e-6);\n\n// add the tool tip\n  var div = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n    .duration(duration)\n    .attr(\"transform\", function(d) { \n        return \"translate(\" + d.y + \",\" + d.x + \")\";\n      });\n\n  nodeUpdate.select(\"circle\")\n    .attr(\"r\", 10)\n    .style(\"fill\", function(d) { \n\t  return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n    .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n    .duration(duration)\n    .attr(\"transform\", function(d) { return \"translate(\" + source.y + \n                                             \",\" + source.x + \")\"; })\n    .remove();\n\n  nodeExit.select(\"circle\")\n    .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n    .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n    .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n    .attr(\"class\", \"link\")\n    .attr(\"d\", function(d) {\n      var o = {x: source.x0, y: source.y0};\n      return diagonal({source: o, target: o});\n    });\n\n  // Transition links to their new position.\n  link.transition()\n    .duration(duration)\n    .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n    .duration(duration)\n    .attr(\"d\", function(d) {\n      var o = {x: source.x, y: source.y};\n      return diagonal({source: o, target: o});\n    })\n    .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n  d.x0 = d.x;\n  d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Interactive Hierachy", "created_at": "2016-03-04T18:56:24Z", "updated_at": "2016-03-08T14:50:26Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.csv"], "readme": "This is a chart as used as an example to demonstrate the relationships between Linux processes as a tree using [d3.js](http://d3js.org/).\n\nThe nodes can be collapsed (since they tend to get crowded) by clicking on them and they include a tool tip feature to provide additional information about each process. It is used as an example and described in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nThe csv file used here was taken by running the command...\n\n`ps -eo pid,ppid,pcpu,size,comm,ruser,s`\n\n...and converting the resultant output to a csv file. I manually added the 'start' line (0, ,0,0,start,nul,u) to include the root node and removed the '%' sign from the '%CPU' label to reduce chance of errors. In theory this process of formatting the data file could be automated (indeed, there may be a much better way to gather and include it!).\n\nWhile I have included a tool tip feature for displaying more data from each node, ultimately, I would have grand visions of this being more useful by encoding the node/link colour according to CPU usage or memory use.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/9692795'>Interactive Hierachy</a>", "uid": "Lincoln-Jiang_3a92f6973f730a2f4bb4"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\n\nvar circles = d3.range(10).map(function(i) { \n  return {\n    radius: Math.random() * 12 + 8,\n    index: i,\n    radius: 15,\n    group: Math.floor((i)/4) % 4\n  }; \n})\nvar nodes = [{index: -1, group: -1, radius: 200 }].concat(circles)\n\n//var circles = nodes.slice(1)\nvar links = [\n  {source: circles[0], target: circles[1], type: \"bond\"},\n  {source: circles[1], target: circles[2], type: \"bond\"},\n  {source: circles[2], target: circles[3], type: \"bond\"},\n  {source: circles[3], target: circles[0], type: \"bond\"},\n];\n  \nvar root = nodes[0];\nvar color = d3.scale.category10();\n\nroot.radius = 0;\nroot.fixed = true;\n\nvar force = d3.layout.force()\n    .gravity(0.05)\n    //.charge(function(d, i) { return i ? 0 : -200; })\n    //.linkStrength(function(l, i) { return l.strength || 0 })\n\t\t//.linkStrength(0.5)\n    //.linkDistance(10)\n    .nodes(nodes)\n    .size([width, height]);\n\nforce.start();\n  \n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"circle\")\n    .data(circles)\n  .enter().append(\"circle\").classed(\"node\", true)\n    .attr(\"r\", function(d) { return d.radius; })\n    .style(\"fill\", function(d, i) { return color(d.group); })\n  .on(\"mouseout\", splitNode)\n.call(force.drag)\n\nfunction splitNode(d) {\n  var nodes = force.nodes()\n  console.log(\"d\", d)\n  \n  var index = nodes.length;\n  var jiggle = 5 + Math.random() * 10;\n \n  var newNode = {\n    index: index,\n    radius: Math.random() * 12 + 8,\n    group: d.group,\n    x: d.x + jiggle,\n    y: d.y + jiggle,\n    px: d.px + jiggle,\n    py: d.py + jiggle\n  }\n  nodes.push(newNode)\n  \n  var newLink = {\n    source: d, target: newNode, type: \"bond\"\n  }\n  links.push(newLink)\n  \n  svg.append(\"circle\")\n  .datum(newNode)\n    .classed(\"node\", true)\n    .style(\"fill\", function(d, i) { return color(d.group); })\n  .call(force.drag)\n  .on(\"mouseout\", splitNode)\n\n  \n  svg.append(\"line\")\n  .datum(newLink)\n  .classed(\"link\", true)\n  .attr({\n  stroke: \"#111\"\n})\n  \n}\n  \nsvg.selectAll(\"line\")\n  .data(links)\n.enter().append(\"line\").classed(\"link\", true)\n.attr({\n  stroke: \"#111\"\n})\n\nforce.on(\"tick\", function(e) {\n  var nodes = force.nodes()\n\n  // collision detection\n  var q = d3.geom.quadtree(nodes);\n  nodes.forEach(function(node) {\n    q.visit(collide(node))\n  })\n\n  // strongly coupling certain nodes\n  links.forEach(function(link) {\n    var source = link.source;\n    var target = link.target;\n    if(link.type == \"bond\") {\n      var x = source.x - target.x;\n      var y = source.y - target.y;\n      var dist = Math.sqrt(x * x + y * y);\n      var r = source.radius + target.radius;\n      \n      if (dist < r) {\n        dist = (dist - r) / dist * .5; //don't quite understand this\n        source.x -= x *= dist;\n        source.y -= y *= dist;\n        target.x += x;\n        target.y += y;\n      } else {\n        dist = -0.021; // not sure how to do the opposive of above\n        source.x += x *= dist;\n        source.y += y *= dist;\n        target.x -= x;\n        target.y -= y;\n      }\n    }\n    link.strength = 1;\n  })\n\n\n  svg.selectAll(\"circle.node\")\n  .attr({\n    cx: function(d) {return d.x },\n    cy: function(d) { return d.y },\n    r: function(d) { return d.radius }\n  })\n   \n  svg.selectAll(\"line.link\")\n  .attr({\n    x1: function(d) { return d.source.x },\n    y1: function(d) { return d.source.y },\n    x2: function(d) { return d.target.x },\n    y2: function(d) { return d.target.y },\n  })\n});\n  \n\n\nsvg.on(\"mousemove\", function() {\n  //var p1 = d3.mouse(this);\n  //root.px = p1[0];\n  //root.py = p1[1];\n  force.resume();\n});\n\nfunction collide(node) {\n  var r = node.radius + 16,\n      nx1 = node.x - r,\n      nx2 = node.x + r,\n      ny1 = node.y - r,\n      ny2 = node.y + r;\n  return function(quad, x1, y1, x2, y2) {\n    if (quad.point && (quad.point !== node)) {\n      var x = node.x - quad.point.x,\n          y = node.y - quad.point.y,\n          dist = Math.sqrt(x * x + y * y),\n          r = node.radius + quad.point.radius;\n      if (dist < r) {\n        dist = (dist - r) / dist * .5;\n        node.x -= x *= dist;\n        node.y -= y *= dist;\n        quad.point.x += x;\n        quad.point.y += y;\n      }\n    }\n    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n  };\n}\n\n</script>", "description": "Node splitting", "created_at": "2016-03-04T03:23:05Z", "updated_at": "2016-03-05T07:11:24Z", "api": ["d3.range", "d3.scale.category10", "d3.layout.force", "d3.select", "d3.geom.quadtree", "d3.mouse"], "readme": "Mouseover to repel nodes. Adapted from my [talk on force layouts](http://vimeo.com/29458354). Compare to the [canvas version](/mbostock/3231307).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3231298'>Collision Detection</a>", "uid": "enjalot_7402f55e19e1e609f014"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar rects = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"rect\");\n\n\t\t\tvar rectAttributes = rects\n  \t    .attr(\"x\", function (d) { return d.start/10; })\n    \t  .attr(\"y\", function (d) { return 100; })\n      \t.attr(\"height\", function(d) { return 0;})\n      \n      \t.attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n    \t\t.style ({\"stroke-width\": \"2px\", \"stroke\": \"black\"})\n      .style (\"fill\", function (d) {\n        if (d.direction ==\"forward\") {return \"#29ac41\"}\n        else {return \"#452AAB\"}\n        ;})\n   \t\t\t.transition().delay(3000).duration(1000)\n     \t \t.attr(\"y\", function (d) { return 70; })\n       \t.attr(\"height\", function (d) {return 30;})\n      \n\t.attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          \tif (d.name % 2 === 0) \n            \treturn 70\n            \n          \telse { return 40;}\n          }\n        \telse if (d.direction == \"reverse\") {\n            if (d.name % 2 === 0) {\n            \treturn 160;\n            }\n            else { return 130; }\n          }\n      })\n       \t.attr(\"height\", function (d) {return 30;});\n      }) \n    \n \n      \t\n    d3.json(\"genes.json.txt\", function(error, json) {\n    var text = svg.selectAll(\".e\")\n    \t\t\t\t\t\t.data(json)\n    \t\t\t\t\t\t.enter()\n    \t\t\t\t\t\t.append(\"text\")\n    var textLabels = text\n    \t.attr(\"x\", function (d) { return d.start/10 + (d.stop-d.start)/20 ; })\n      .attr(\"y\", function (d){\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return 90;\n          }\n          else { return 60;}\n          }\n        \telse if (d.direction == \"reverse\") {\n            if (d.name % 2 === 0) {\n            \treturn 180;\n            }\n            else { return 150;}\n          }\n      })\n    \t.attr(\"text-anchor\", \"middle\")\n    var gc_content= text\n    .text(function(d){\n      var count = 0;\n      for (i=0;i<d.sequence.length, i++ ){\n        if (d.sequence[i] == \"G\" || d.sequence[i] == \"C\"){\n          count++\n        }\n    \tconsole.log(count)\n    }});\n   \t\t\n    \n    \n    var group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    group. append (\"text\")\n    .attr(\"y\", 110)\n    .attr(\"x\", function (d) {return (d/10) +3;})\n    .text (function (d){return (d/1000)})\n    .attr(\"font-family\", \"arial\")\n    .attr(\"font-size\", \"10px\")\n    .attr(\"fill\",\"green\")\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 15})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 115, width: \"1px\", height: 15})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n  \n  \t\t\n    \n    \n  </script>", "description": "genome browser-2", "created_at": "2016-03-03T15:51:38Z", "updated_at": "2016-03-15T16:16:21Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/Ifeanyi-1/'>Ifeanyi-1</a>'s block: <a href='http://bl.ocks.org/Ifeanyi-1/2815fad230758e7d218c'>genome browser-2</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/713543c3345ff5d86220'>genome browser-2</a>\n\nforked from <a href='http://bl.ocks.org/Ifeanyi-1/'>Ifeanyi-1</a>'s block: <a href='http://bl.ocks.org/Ifeanyi-1/65bf1de37fbe8caed4a7'>genome browser-2</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/e3717999219085e87859'>genome browser-2</a>", "uid": "Ifeanyi-1_41704a49f9f81ca9f29b"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n    \t.attr(\"stroke-opacity\", 0)\n    \t.transition().duration(1000)\n    \t.attr(\"stroke-opacity\", 1);\n\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar genes = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"g\");\n\n\t\t\tgenes.append(\"rect\")\n     \t  .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          \tif (d.name % 2 === 0) {\n            \treturn 70;\n            }\n          \telse { return 40;}\n          }\n        \telse if (d.direction == \"reverse\") {\n            if (d.name % 2 === 0) {\n            \treturn 160;\n            }\n            else { return 130; }\n          }\n      })\n      \t.attr(\"x\", function (d) {\n        \tif (d.direction === \"forward\") {\n            return (0 - ((d.stop-d.start)/10)) - 2;\n          }\n        \telse if (d.direction === \"reverse\") {\n            return (genomelength/10) + 2;\n          }\n      })\n       \t.attr(\"height\", function (d) {return 30;})\n        .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      \t.attr(\"fill\", function (d) {\n        \tif (d.direction == \"forward\") {\n            return \"green\";\n          }\n        \telse if (d.direction == \"reverse\") {\n            return \"red\";\n          }\n        \telse {\n            return \"black\";\n          }\n      \t})\n   \t\t\t.transition().delay(1000).duration(1500).attr(\"x\", function (d) { return d.start/10; });\n\n\n    genes.append(\"text\") // gene name\n    \t.attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 90;\n        }\n        else { return 60;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 180;\n        }\n        \telse { return 150;}\n      }\n    })\n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    //.text(function(d) {return d.name})\n    //.text(function(d) {return (d.sequence.split((\"C\" -1) + (\"G\" -1) ).length)/(d.sequence.length) * 100})\n    .text(function(d) {\n      return ((d.sequence.match(/G/gi).length \n              + \n              d.sequence.match(/C/gi).length)/\n        d.sequence.length \n        * 100).toPrecision(2) +\"%\"})\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(2000).duration(1500)\n\t\t.attr(\"fill-opacity\", 1);\n\n    genes.append(\"text\") // pham name\n    \t.attr(\"x\", function(d) { \n      \treturn ((d.start + d.stop)/2)/10;\n    \t})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 60;\n        }\n        else { return 30;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 210;\n        }\n        \telse { return 180;}\n      }\n    })\n    \n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    .text(function(d) {\n      return d.pham\n    })\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(3500).duration(1500)\n\t\t.attr(\"fill-opacity\", 1);\n    });\n    \n\n    var group = svg.selectAll(\".thousandticks\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 100, width: \"1px\", height: 30})\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n\n\t    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n  \tgroup.append(\"text\")\n\t    .attr(\"x\", function(d) {return (d/10) + 3;})\n  \t  .attr(\"y\", (90) + 22)\n\t    .attr(\"font-family\", \"sans-serif\")\n\t    .attr(\"font-size\", \"14px\")\n\t    .attr(\"fill\", \"green\")\n\t    .style(\"text-anchor\", \"start\")\n\t    .text(function(d) { return d/1000; })\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n\t\tvar group2 = svg.selectAll(\".fivehundredticks\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n\t\t  .attr({x: function(d) {return d/10;}, y: 100, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n     \t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".onehundredticks\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 115, width: \"1px\", height: 15})\n    \t.attr(\"fill-opacity\", 0)\n    \t.transition().duration(1500)\n    \t.attr(\"fill-opacity\", 1);\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  </script>", "description": "genome browser", "created_at": "2016-03-03T15:29:38Z", "updated_at": "2016-03-15T14:53:28Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "lambrex_7fedb282aca4df15b0d4"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n    \t.attr(\"stroke-opacity\", 0)\n    \t.transition().duration(1000)\n    \t.attr(\"stroke-opacity\", 1);\n\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar genes = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"g\");\n\n\t\t\tgenes.append(\"rect\")\n     \t  .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          \tif (d.name % 2 === 0) {\n            \treturn 70;\n            }\n          \telse { return 40;}\n          }\n        \telse if (d.direction == \"reverse\") {\n            if (d.name % 2 === 0) {\n            \treturn 160;\n            }\n            else { return 130; }\n          }\n      })\n      \t.attr(\"x\", function (d) {\n        \tif (d.direction === \"forward\") {\n            return (0 - ((d.stop-d.start)/10)) - 2;\n          }\n        \telse if (d.direction === \"reverse\") {\n            return (genomelength/10) + 2;\n          }\n      })\n       \t.attr(\"height\", function (d) {return 30;})\n        .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      \t.attr(\"fill\", function (d) {\n        \tif (d.direction == \"forward\") {\n            return \"green\";\n          }\n        \telse if (d.direction == \"reverse\") {\n            return \"red\";\n          }\n        \telse {\n            return \"black\";\n          }\n      \t})\n   \t\t\t.transition().delay(1000).duration(1500).attr(\"x\", function (d) { return d.start/10; });\n      \n    genes.append(\"text\") // gene name\n    \t.attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 90;\n        }\n        else { return 60;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 180;\n        }\n        \telse { return 150;}\n      }\n    })\n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    .text(function(d) {return d.name})\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(2000).duration(1500)\n\t\t.attr(\"fill-opacity\", 1);\n\n    genes.append(\"text\") // pham name\n    \t.attr(\"x\", function(d) { \n      \treturn ((d.start + d.stop)/2)/10;\n    \t})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 60;\n        }\n        else { return 30;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 210;\n        }\n        \telse { return 180;}\n      }\n    })\n    \n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    .text(function(d) {\n      return d.pham\n    })\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(3500).duration(1500)\n\t\t.attr(\"fill-opacity\", 1);\n    });\n    \n\n    var group = svg.selectAll(\".thousandticks\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 100, width: \"1px\", height: 30})\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n\n\t    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n  \tgroup.append(\"text\") //green letters in boxes\n\t    .attr(\"x\", function(d) {return (d/10) + 3;})\n  \t  .attr(\"y\", (90) + 22)\n\t    .attr(\"font-family\", \"sans-serif\")\n\t    .attr(\"font-size\", \"14px\")\n\t    .attr(\"fill\", \"green\")\n\t    .style(\"text-anchor\", \"start\")\n\t    .text(function(d) { return d/1000; })\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n\t\tvar group2 = svg.selectAll(\".fivehundredticks\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n\t\t  .attr({x: function(d) {return d/10;}, y: 100, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n     \t.transition().duration(1500)\n    \t.attr({\"fill-opacity\": 1});\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".onehundredticks\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 115, width: \"1px\", height: 15})\n    \t.attr(\"fill-opacity\", 0)\n    \t.transition().duration(1500)\n    \t.attr(\"fill-opacity\", 1);\n      //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n  </script>", "description": "The genome browser", "created_at": "2016-03-03T15:28:37Z", "updated_at": "2016-03-17T14:31:39Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "AdamBlaine1_fb8e1e6750843954ead0"}, {"code": "<script>\n//jQuery\t\t\nvar maxLength= 0;\n\n\nwindow.addEventListener('load', function () {\n    $.getJSON(\"genes.json.txt\", function(data){\n       for(i=0; i < data.length; i++){\n      \tif(data[i].stop > maxLength){\n      \t\tmaxLength = data[i].stop;\n        }\n         \n      }\n    genomelength = maxLength + maxLength/50;  \n\n//Tick mark object\n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n//Array with numbers from 1->genomelength\n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n//Creates 1000, 500 and 100 bp ticks\n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    }); \n    \n   \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"g\")\n   \t\t.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n    \n         \n              \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n     // var jsonData = svg.selectAll(\".genes\")\n  \t // \t.data(json)\n     //\t  .enter();\n      \n\t\t\tvar rects = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"rect\");\n\n\t\t\tvar rectAttributes = rects\n  \t    .attr(\"x\", function (d) { return d.start/10; })\n      \t.attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\", \"fill-opacity\":0.5})\n     \t  .attr(\"y\", function (d) { \n          if(d.direction == \"reverse\" && d.name%2==0){\n            return 130\n          }\n          else if(d.direction == \"reverse\" && d.name%2!=0){\n            return 160\n          }\n          else if(d.direction == \"forward\" && d.name%2!=0){\n            return 70\n          }\n          else{\n            return 40\n          }; \n        })\n       \t.attr(\"height\", function (d) {return 30;})\n      \t.style({\"fill\": function(d) {if(d.direction == \"forward\"){\n          return \"green\"}\n        else if(d.direction == \"reverse\"){\n          return \"red\"\n        }\n        \t}})\n      \n      var text = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"text\");\n       \n      var texts = text\n      \t.text(function(d){return d.name})\n      \t.attr(\"y\", function(d){\n          if(d.direction == \"reverse\" && d.name%2==0){\n            return 150\n          }\n          else if(d.direction == \"reverse\" && d.name%2!=0){\n            return 180\n          }\n           else if(d.direction == \"forward\" && d.name%2!=0){\n            return 90\n          }\n          else{\n            return 60\n          }\n        })\n      \t.attr(\"x\", function(d) {return ((d.start+(d.stop-d.start)/2)/10)})\n      \t.attr(\"font-size\", \"20px\")\n\t\t\t   \t\n      });\n    \n    \n    var group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 30})\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    group.append(\"text\")\n    \t\t.text(function(d){return d/1000})\n    \t\t\t.attr(\"x\", function (d){return d/10 })\n    \t\t.attr(\"y\",110)\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 15})\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 115, width: \"1px\", height: 15})\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    \n\n    }\n    )\n\n\n}, false);  \n\n\n\n  </script>", "description": "genome browser", "created_at": "2016-03-03T15:07:28Z", "updated_at": "2016-03-03T15:07:28Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/Wanagram/'>Wanagram</a>'s block: <a href='http://bl.ocks.org/Wanagram/abdff74d4f8ebf9b3350'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/mcgovemc/'>mcgovemc</a>'s block: <a href='http://bl.ocks.org/mcgovemc/c16d4bf5e677045e9b94'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/mcgovemc/'>mcgovemc</a>'s block: <a href='http://bl.ocks.org/mcgovemc/8d48064f03c22ae1a539'>genome browser</a>", "uid": "mcgovemc_9ae67e0693d9a5fbb4de"}, {"code": "<script>\n//jQuery\t\t\nvar maxLength= 0;\n\n\nwindow.addEventListener('load', function () {\n    $.getJSON(\"genes.json.txt\", function(data){\n       for(i=0; i < data.length; i++){\n      \tif(data[i].stop > maxLength){\n      \t\tmaxLength = data[i].stop;\n        }\n         \n      }\n    genomelength = maxLength + maxLength/50;  \n\n//Tick mark object\n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n//Array with numbers from 1->genomelength\n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n//Creates 1000, 500 and 100 bp ticks\n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    }); \n    \n   \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"g\")\n   \t\t.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n    \n         \n              \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n     // var jsonData = svg.selectAll(\".genes\")\n  \t // \t.data(json)\n     //\t  .enter();\n      \n\t\t\tvar rects = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"rect\");\n\n\t\t\tvar rectAttributes = rects\n  \t    .attr(\"x\", function (d) { return d.start/10; })\n      \t.attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\", \"fill-opacity\":0.5})\n     \t  .attr(\"y\", function (d) { \n          if(d.direction == \"reverse\" && d.name%2==0){\n            return 130\n          }\n          else if(d.direction == \"reverse\" && d.name%2!=0){\n            return 160\n          }\n          else if(d.direction == \"forward\" && d.name%2!=0){\n            return 70\n          }\n          else{\n            return 40\n          }; \n        })\n       \t.attr(\"height\", function (d) {return 30;})\n      \t.style({\"fill\": function(d) {if(d.direction == \"forward\"){\n          return \"green\"}\n        else if(d.direction == \"reverse\"){\n          return \"red\"\n        }\n        \t}})\n      \n      var text = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"text\");\n       \n      var texts = text\n      \t.text(function(d){return d.name})\n      \t.attr(\"y\", function(d){\n          if(d.direction == \"reverse\" && d.name%2==0){\n            return 150\n          }\n          else if(d.direction == \"reverse\" && d.name%2!=0){\n            return 180\n          }\n           else if(d.direction == \"forward\" && d.name%2!=0){\n            return 90\n          }\n          else{\n            return 60\n          }\n        })\n      \t.attr(\"x\", function(d) {return ((d.start+(d.stop-d.start)/2)/10)})\n      \t.attr(\"font-size\", \"20px\")\n\t\t\t   \t\n      });\n    \n    \n    var group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 30})\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    group.append(\"text\")\n    \t\t.text(function(d){return d/1000})\n    \t\t\t.attr(\"x\", function (d){return d/10 })\n    \t\t.attr(\"y\",110)\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 15})\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 115, width: \"1px\", height: 15})\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    \n\n    }\n    )\n\n\n}, false);  \n\n\n\n  </script>", "description": "genome browser", "created_at": "2016-03-03T14:44:35Z", "updated_at": "2016-03-03T14:44:36Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/Wanagram/'>Wanagram</a>'s block: <a href='http://bl.ocks.org/Wanagram/abdff74d4f8ebf9b3350'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/mcgovemc/'>mcgovemc</a>'s block: <a href='http://bl.ocks.org/mcgovemc/c16d4bf5e677045e9b94'>genome browser</a>", "uid": "mcgovemc_8d48064f03c22ae1a539"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar genes = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"g\");\n\n\t\t\tgenes.append(\"rect\")\n     \t  .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          \tif (d.name % 2 === 0) {\n            \treturn 70;\n            }\n          \telse { return 40;}\n          }\n        \telse if (d.direction == \"reverse\") {\n            if (d.name % 2 === 0) {\n            \treturn 160;\n            }\n            else { return 130; }\n          }\n      })\n      \t.attr(\"x\", function (d) {\n        \tif (d.direction === \"forward\") {\n            return (0 - ((d.stop-d.start)/10)) - 2;\n          }\n        \telse if (d.direction === \"reverse\") {\n            return (genomelength/10) + 2;\n          }\n      })\n       \t.attr(\"height\", function (d) {return 30;})\n        .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n   \t\t\t.transition().delay(3000).duration(1500)\n   \t    .attr(\"x\", function (d) { return d.start/10; })\n\n      \t.attr(\"fill\", function (d) {\n        \tif (d.direction == \"forward\") {\n            return \"green\";\n          }\n        \telse if (d.direction == \"reverse\") {\n            return \"red\";\n          }\n        \telse {\n            return \"black\";\n          }\n      \t});\n\n\n    genes.append(\"text\") // gene name\n    \t.attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 90;\n        }\n        else { return 60;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 180;\n        }\n        \telse { return 150;}\n      }\n    })\n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    .text(function(d) {return d.name})\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(4500).duration(1000)\n\t\t.attr(\"fill-opacity\", 1);\n\n    genes.append(\"text\") // pham name\n    \t.attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n     \t.attr(\"y\", function (d) {\n      if (d.direction == \"forward\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 60;\n        }\n        else { return 30;}\n      }\n\t\t\telse if (d.direction == \"reverse\") {\n      \tif (d.name % 2 === 0) {\n        \treturn 210;\n        }\n        \telse { return 180;}\n      }\n    })\n    \n    .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n    .attr(\"font-family\", \"sans-serif\")\n    .text(function(d) {return d.pham})\n    .attr(\"fill-opacity\", 0)\n    .transition().delay(4500).duration(1000)\n\t\t.attr(\"fill-opacity\", 1);\n    });\n    \n\n    var group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 100, width: \"1px\", height: 30})\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(3000)\n    \t.attr({\"fill-opacity\": 1});\n\n\t    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n  \tgroup.append(\"text\")\n\t    .attr(\"x\", function(d) {return (d/10) + 3;})\n  \t  .attr(\"y\", (90) + 22)\n\t    .attr(\"font-family\", \"sans-serif\")\n\t    .attr(\"font-size\", \"14px\")\n\t    .attr(\"fill\", \"green\")\n\t    .style(\"text-anchor\", \"start\")\n\t    .text(function(d) { return d/1000; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 15})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 115, width: \"1px\", height: 15})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n  </script>", "description": "genome browser", "created_at": "2016-03-03T14:40:17Z", "updated_at": "2016-03-03T14:40:17Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "thanisata_cb0058e2f04d134798e2"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar rects = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"g\");\n  \n      rects.append(\"rect\")\n  \t    .attr(\"x\", function (d) { return d.start/10; })\n    \t  .attr(\"y\", function (d) {\n      \t\t\t\t\t\t\tif (d.direction === \"forward\") { return 50;}\n        \t\t\t\t\t\telse if (d.direction ===\"reverse\") {return 200;}\n      \n       \n      })\n      \t.attr(\"height\", function(d) { return 0;})\n      \t.attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style(\"fill\", function (d) {\n                \t\t\tif (d.direction === \"forward\") {return \"#51bb00\"}\n                      else if (d.direction===\"reverse\") {return \"#fe4b48\"}\n                          })\n      \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n   \t\t\t.transition().delay(3000).duration(1000)\n     \t  .attr(\"y\", function (d,i) {\n        \t\t\t\t\t\tif (d.direction === \"forward\") { \n                    if (i%2===0) {return 50;}\n                    else {return 70;}}\n        \t\t\t\t\t\telse if (d.direction ===\"reverse\") \n                    {if (i%2===0) {return 160;}\n                    else {return 130;}}\n        \n        \t\t\t\n    \n      })\n       \t.attr(\"height\", function (d) {return 30;});\n      \n    \trects.append(\"text\")\n      .attr(\"y\", function (d) {\n        \t\t\t\t\tif (d.direction ===\"forward\") {return 90;}\n        \t\t\t\t\telse if (d.direction ===\"reverse\") {return 150}\n      })\n      .attr(\"x\", function (d) { return ((d.stop+d.start)/2)/10; })\n      .text(function(d) { return d.name; })\n      \n      .attr (\"y\", function (d,i) {\n        \t\t\tif (d.direction ===\"forward\") {\n              if (i%2===0) {return 70;}\n              else {return 90;}}\n        \t\t\telse if (d.direction ===\"reverse\") {\n              if (i%2===0) {return 180;}\n              else {return 150;}\n              }\n      })\n      .style (\"fill\", function(d) {\n        if (d.direction===\"forward\") {return \"black\"}\n        else if (d.direction ===\"reverse\") {return \"white\"}\n      })\n   \t \t.style(\"font-weight\", \"bold\")\n      });\n    \t\n    \n    \n    var group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 15})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 115, width: \"1px\", height: 15})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    group.append(\"text\")\n    \t.text (function (d,i)\n            {return i+1;})\n\t\t\t.attr({y: 110, width: \"1px\", height: 30})\n    \t.attr(\"x\", function(d) {return (d/10)+2;})\n    \t.attr(\"font-size\", \"10px\")\n    \t.attr(\"fill\", \"green\")\n    \n    \t\n      \n //pham name\n  \n    \n    \t\n\n  </script>", "description": "genome browser alternate", "created_at": "2016-03-01T15:39:33Z", "updated_at": "2016-03-15T16:16:02Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/Ivanhound/'>Ivanhound</a>'s block: <a href='http://bl.ocks.org/Ivanhound/56e9b387e10aba019535'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/b90172b5072e0d610d79'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/5efd578d91dc7586d7d4'>genome browser</a>", "uid": "Ivanhound_f417f0034cf8b1454d8c"}, {"code": "<script>\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n        \n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar genes = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"g\");\n\n\t\t\tgenes.append(\"rect\")\n  \t    .attr(\"x\", function (d) { return d.start/10; })\n    \t  .attr(\"y\", function (d) { return 100; })\n      \t.attr(\"height\", function(d) { return 0;})\n      \t.attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n   \t\t\t.transition().delay(3000).duration(1500)\n      \t.attr(\"fill\", function (d) {\n        \tif (d.direction == \"forward\") {\n            return \"green\";\n          }\n        \telse if (d.direction == \"reverse\") {\n            return \"red\";\n          }\n        \telse {\n            return \"black\";\n          }\n      \t}) \n      \n     \t  .attr(\"y\", function (d) {\n             \n              if (d.direction === \"forward\") \n              if (d.name %2 === 0)\n              {return 70}\n        \t\t\telse {return 40} \n        else if (d.direction === \"reverse\") \n        \t\t\tif (d.name %2 === 0)\n              {return 160}\n      \t\t\t\telse {return 130}}\n              \n             )\n       \t.attr(\"height\", function (d) {return 30;});\n\n    genes.append(\"text\")\n      \t.attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      \t.attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return 90;\n          }\n          else { return 60;}\n          }\n        \telse if (d.direction == \"reverse\") {\n            if (d.name % 2 === 0) {\n            \treturn 180;\n            }\n            else { return 150;}\n          }\n      })\n      \t.style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n        .text(function(d) {return d.name})\n      \t.attr(\"fill-opacity\", 0)\n        .transition().delay(4500).duration(1000)\n\t\t\t\t.attr(\"fill-opacity\", 1);\n    });\n    \n    var group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\")\n    \n    //var markers = [];\n\t\t//for (var i = 1; i <= genomelength; i++) {\n    \t//markers.push(i)\n      //if ()\n      {//return i};\n\t\t};\n    \n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 100, width: \"1px\", height: 30})\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(3000)\n    \t.attr({\"fill-opacity\": 1});\n\n\t    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 15})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 115, width: \"1px\", height: 15})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n  </script>", "description": "genome browser", "created_at": "2016-03-01T15:30:48Z", "updated_at": "2016-03-15T13:46:21Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "diepvf_5839d689529d717cb8c4"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar genes = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"g\");\n\n\t\t\tgenes.append(\"rect\")\n  \t    .attr(\"x\", function (d) { return d.start/10; })\n    \t  .attr(\"y\", function (d) { return 100; })\n      \t.attr(\"height\", function(d) { return 0;})\n      \t.attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n   \t\t\t.transition().delay(3000).duration(1500)\n      \t.attr(\"fill\", function (d) {\n        \tif (d.direction == \"forward\") {\n            return \"purple\";\n          }\n        \telse if (d.direction == \"reverse\") {\n            return \"blue\";\n          }\n        \telse {\n            return \"black\";\n          }\n      \t})\n     \t  .attr(\"y\", function (d) {\n        if (d.direction == \"forward\" && d.name%2 == 0) {\n            return 70;\n          }\n        \telse if (d.direction == \"reverse\" && d.name%2!==0) {\n            return 160\n          }\n        \telse if (d.direction == \"reverse\" && d.name%2==0) {\n            return 130\n      }\n        \telse if (d.direction == \"forward\" && d.name%2!== 0) {\n            return 40\n          }})\n       \t.attr(\"height\", function (d) {return 30;});\n\n      genes.append(\"text\")\n      \t.attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      \t.attr(\"y\", function (d) {\n          if (d.direction == \"forward\" && d.name%2 == 0) {\n            return 90;\n          }\n        \telse if (d.direction == \"reverse\" && d.name%2!==0) {\n            return 180\n          }\n        \telse if (d.direction == \"reverse\" && d.name%2==0) {\n            return 150\n      }\n        \telse if (d.direction == \"forward\" && d.name%2!== 0) {\n            return 60\n          }})\n        .attr(\"font-family\", \"verdana\")\n        .attr(\"font-size\", \"20px\")\n        .attr(\"fill\", \"white\")\n        .text(function(d) {return d.name});\n    });\n\n    var group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n\n      .attr({x: function (d) { return d/10; }, y: 100, width: \"1px\", height: 30})\n    \t.attr({\"fill-opacity\": 0})\n\t\t\t.transition().duration(3000)\n    \t.attr({\"fill-opacity\": 1})\n    group.append(\"text\")\n    \t.text(function(d) {return d/1000} )\n\t   \t.attr(\"x\", function (d) { return d/10; })\n      .attr(\"y\", function (d) { return 110; })\n\t\t  .attr(\"font-family\", \"verdana\")\n      .attr(\"font-size\", \"10px\")\n      .attr(\"fill\", \"green\")\n    \n    var group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 15})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 115, width: \"1px\", height: 15})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"});\n\n  </script>", "description": "genome browser", "created_at": "2016-03-01T14:33:58Z", "updated_at": "2016-03-01T17:13:33Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "BDAguila_14223e6d3ea9e79f9e3b"}, {"code": "<script>\n     \n  \n  function bar() {\n  console.log(\"click\");\n  force.stop();\n  force.start();\n}\n\n  \n  \n  var links = [\n  {source: \"A\", target: \"D\", type: \"high\"},\n  {source: \"A\", target: \"K\", type: \"high\"},\n  {source: \"B\", target: \"G\", type: \"high\"},\n  {source: \"H\", target: \"B\", type: \"high\"},\n  {source: \"C\", target: \"A\", type: \"low\"},\n  {source: \"C\", target: \"L\", type: \"low\"},\n  {source: \"E\", target: \"A\", type: \"low\"},\n  {source: \"F\", target: \"B\", type: \"low\"},\n  {source: \"F\", target: \"G\", type: \"low\"},\n  {source: \"K\", target: \"J\", type: \"low\"},\n  {source: \"F\", target: \"I\", type: \"low\"},\n  {source: \"G\", target: \"H\", type: \"low\"},\n  {source: \"E\", target: \"K\", type: \"high\"},\n  {source: \"E\", target: \"G\", type: \"low\"},\n  {source: \"E\", target: \"F\", type: \"high\"},\n  {source: \"E\", target: \"M\", type: \"high\"},\n];\n\nvar nodes = {};\n\n// Compute the distinct nodes from the links.\nlinks.forEach(function(link) {\n  link.source = nodes[link.source] || (nodes[link.source] = {name: link.source});\n  link.target = nodes[link.target] || (nodes[link.target] = {name: link.target});\n});\n\nvar width = 960,\n    height = 700;\n\nvar force = d3.layout.force()\n    .nodes(d3.values(nodes))\n    .links(links)\n    .size([width, height])\n    .linkDistance(105)\n    .charge(-775)\n    .on(\"tick\", tick)\n    .start();\n\n  \n  \nforce.on(\"start\", function () {\n    console.log(\"start\");\n});\nforce.on(\"end\", function () {\n    console.log(\"end\");\n});\n\nR=18\n \n\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n// add defs-marker\n// add defs-markers\nsvg.append('svg:defs').selectAll(\"marker\")\n    .data([{id:\"end-arrow\", opacity:1}, {id:\"end-arrow-fade\", opacity:0.075}])\n  .enter().append('marker')\n    .attr('id', function(d) { return d.id; })\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 2+R)\n    .attr('refY', 5)\n    .attr('markerWidth', 4)\n    .attr('markerHeight', 4)\n    .attr('orient', 'auto')\n  .append('svg:path')\n    .attr('d', 'M0,0 L0,10 L10,5 z')\n    .style(\"opacity\", function(d) { return d.opacity; });\n\n//phantom marker\n  svg.append('svg:defs')\n    .append('svg:marker')\n    .attr('id', 'end-arrow-phantom')\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 2+R)\n    .attr('refY', 5)\n     .attr('markerWidth', 4)\n     .attr('markerHeight', 4)\n    .attr('orient', 'auto')\n    .attr('fill', '#EEE')\n    .append('svg:path')\n    .attr('d', 'M0,0 L0,10 L10,5 z');\n  \n  \nvar link = svg.selectAll(\".link\")\n    .data(force.links())\n    .enter()\n    .append(\"line\")\n    .attr(\"class\", \"link\")\n    .attr(\"stroke\", \"#88A\")    \n    .attr('marker-end', 'url(#end-arrow)')\n    .on(\"mouseout\", fade(1))\n;  \n \nvar node = svg.selectAll(\".node\")\n    .data(force.nodes())\n    .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .call(force.drag);\n\nnode.append(\"circle\")\n    .attr(\"r\", R)\n    .attr(\"stroke\", '#777')\n    .attr(\"fill\", '#DDD')\n    .on(\"mouseover\", fade(.1))\n    .on(\"mouseout\", fade(1))\n   \n;\n\nnode.append(\"text\")\n    .attr(\"x\", 0)\n    .attr(\"dy\", \".35em\")\n    .text(function(d) { return d.name; });\n\n\n  \n  \nfunction tick() {\n  link\n      .attr(\"x1\", function(d) { return d.source.x; })\n      .attr(\"y1\", function(d) { return d.source.y; })\n      .attr(\"x2\", function(d) { return d.target.x; })\n      .attr(\"y2\", function(d) { return d.target.y; })      \n    ;\n\n  node\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n}\n\n  \n  \n   var linkedByIndex = {};\n    links.forEach(function(d) {\n        linkedByIndex[d.source.index + \",\" + d.target.index] = 1;\n    });\n\n    function isConnected(a, b) {\n        return linkedByIndex[a.index + \",\" + b.index] || linkedByIndex[b.index + \",\" + a.index] || a.index == b.index;\n    }\n  \n function fade(opacity) {\n        return function(d) {\n          \n            node.style(\"stroke-opacity\", function(o) {\n                thisOpacity = isConnected(d, o) ? 1 : opacity;\n                this.setAttribute('fill-opacity', thisOpacity);\n                return thisOpacity;\n            }); \n          \n          \n          link.style(\"stroke-opacity\", function(o) {\n                return opacity === 1 ||  o.source === d || o.target === d ? 1 : opacity/2;\n            });\n        \n            \n            link.attr(\"marker-end\", function(o) {\n                return opacity === 1 || o.source === d || o.target === d ? 'url(#end-arrow)' : 'url(#end-arrow-phantom)';\n            });          \n            \n          \n          \n          \n        };\n }\n  \n  \n</script>", "description": "network fade 2", "created_at": "2016-02-28T07:22:53Z", "updated_at": "2016-02-28T07:22:59Z", "api": ["d3.layout.force", "d3.values", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/jalapic/'>jalapic</a>'s block: <a href='http://bl.ocks.org/jalapic/14fcf6f266e877cb1c23'>network fade</a>\n\nforked from <a href='http://bl.ocks.org/jalapic/'>jalapic</a>'s block: <a href='http://bl.ocks.org/jalapic/0020bebb012760de0d54'>network fade 2</a>", "uid": "jfost00_9000b051c96dd30c300e"}, {"code": "<script>\n      var margin = { top: 20, left: 200, bottom: 30, right: 70 },\n          width = 960 - margin.right - margin.left,\n          height = 2000 - margin.top - margin.bottom,\n          padding = 3;\n\n      var majorGroups = {\n        \"11\": \"Management\",\n        \"13\": \"Business and financial operations\",\n        \"15\": \"Computer and mathematical\",\n        \"17\": \"Architecture and engineering\",\n        \"19\": \"Life, physical, and social science\",\n        \"21\": \"Community and social service\",\n        \"23\": \"Legal\",\n        \"25\": \"Education, training, and library\",\n        \"27\": \"Art, design, entertainment, sport and media\",\n        \"29\": \"Healthcare practitioners and technical\",\n        \"31\": \"Healthcare support\",\n        \"33\": \"Protective service\",\n        \"35\": \"Food preparation and serving related\",\n        \"37\": \"Building and ground cleaning and maintenance\",\n        \"39\": \"Personal care and service\",\n        \"41\": \"Sales and related\",\n        \"43\": \"Office and administration\",\n        \"45\": \"Farming, fishing, and forestry\",\n        \"47\": \"Construction and extraction\",\n        \"49\": \"Installation, maintenance, and repair\",\n        \"51\": \"Production\",\n        \"53\": \"Transportation and material moving\"\n      };\n\n      var scale = {\n        x: d3.scale.linear().domain([0, 200000]).range([0, width]),\n        y: d3.scale.ordinal().rangeBands([height, 0]),\n        area: d3.scale.linear().range([25, 750]),\n        color: d3.scale.category20()\n      };\n\n      var dollarFormat = d3.format(\"$,\");\n      var thousandFormat = d3.format(\",\");\n\n      var axis = {\n        x: d3.svg.axis().scale(scale.x).orient(\"bottom\")\n            .tickFormat(dollarFormat),\n        y: d3.svg.axis().scale(scale.y).orient(\"left\")\n            .tickFormat(function(d) { return majorGroups[d]; })\n      };\n\n      var force = d3.layout.force()\n        .charge(0)\n        .gravity(0)\n        .size([width, height]);\n\n      var body = d3.select(\"body\");\n\n      var svg = body.append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      svg.append(\"g\").attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\");\n      svg.append(\"g\").attr(\"class\", \"y axis\");\n\n      var tooltip = body.append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"position\", \"absolute\")\n        .classed(\"hidden\", true);\n      tooltip.append(\"h4\").attr(\"class\", \"title\")\n      tooltip.append(\"p\").attr(\"class\", \"employment\")\n      tooltip.append(\"p\").attr(\"class\", \"wage\");\n\n      d3.json(\"occupation.json\", ready);\n\n      function ready(error, nodes) {\n        if (error) throw error;\n\n        scale.y.domain(nodes\n          .map(function(d) { return d.majorGroup; })\n          .sort(d3.descending)\n        );\n        scale.area.domain([0, d3.max(nodes, function(d) { return d.employment; })]);\n\n        svg.select(\".x.axis\").call(axis.x)\n          .append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"x\", width)\n            .attr(\"y\", -6)\n            .style(\"text-anchor\", \"end\")\n            .text(\"Median Annual Wage\");\n\n        svg.select(\".y.axis\").call(axis.y)\n          .selectAll(\".tick text\")\n            .call(wrap, 180)\n              .selectAll(\"tspan\")\n              .attr(\"x\", -9);\n\n        nodes.forEach(function(d) {\n          d.x = scale.x(d.wage);\n          d.y = scale.y(d.majorGroup) + scale.y.rangeBand()/2 + 10*Math.random() - 5;\n          d.x0 = d.x;\n          d.y0 = scale.y(d.majorGroup) + scale.y.rangeBand()/2;\n          var area = scale.area(d.employment);\n          d.r = Math.sqrt(area / Math.PI);\n        });\n\n        force\n          .nodes(nodes)\n          .on(\"tick\", tick)\n          .start();\n\n        var circles = svg.selectAll(\"circle\").data(nodes)\n          .enter().append(\"circle\")\n            .attr(\"r\", function(d) { return d.r; })\n            .style(\"fill\", function(d) { return scale.color(d.majorGroup); })\n            .style(\"stroke\", function(d) {\n              return d3.hsl(scale.color(d.majorGroup)).darker(2);\n            })\n            .on(\"mouseenter\", function(d) {\n              var mouse = d3.mouse(this),\n                  x = mouse[0] + 300,\n                  y = mouse[1] - 50;\n\n              // shift left if mouse is too far right\n              x = x > (960 - 300) ? mouse[0] - 300 : x;\n\n              tooltip\n                .classed(\"hidden\", false)\n                .style(\"left\", x + \"px\")\n                .style(\"top\", y + \"px\");\n              tooltip.select(\".title\").text(d.title);\n              tooltip.select(\".employment\")\n                .text(thousandFormat(d.employment*1000) + \" jobs\");\n              tooltip.select(\".wage\")\n                .text(\"Wage: \" + dollarFormat(d.wage));\n            })\n            .on(\"mouseleave\", function() {\n              tooltip.classed(\"hidden\", true);\n            });\n\n        function tick(e) {\n          circles\n            .each(gravity(e.alpha * .1))\n            .each(collide(.5))\n            .attr(\"cx\", function(d) { return d.x; })\n            .attr(\"cy\", function(d) { return d.y; });\n        }\n\n        function gravity(k) {\n          return function(d) {\n            d.x += (d.x0 - d.x) * k;\n            d.y += (d.y0 - d.y) * k;\n          };\n        }\n\n        function collide(k) {\n          var q = d3.geom.quadtree(nodes);\n          return function(node) {\n            var nr = node.r + padding,\n                nx1 = node.x - nr,\n                nx2 = node.x + nr,\n                ny1 = node.y - nr,\n                ny2 = node.y + nr;\n            q.visit(function(quad, x1, y1, x2, y2) {\n              if (quad.point && (quad.point !== node)) {\n                var x = node.x - quad.point.x,\n                    y = node.y - quad.point.y,\n                    l = x * x + y * y,\n                    r = nr + quad.point.r;\n                if (l < r * r) {\n                  l = ((l = Math.sqrt(l)) - r) / l * k;\n                  node.x -= x *= l;\n                  node.y -= y *= l;\n                  quad.point.x += x;\n                  quad.point.y += y;\n                }\n              }\n              return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n            });\n          };\n        }\n\n        function wrap(text, width) {\n          text.each(function() {\n            var text = d3.select(this),\n                words = text.text().split(/\\s+/).reverse(),\n                word,\n                line = [],\n                lineNumber = 0,\n                lineHeight = 1.1, // ems\n                y = text.attr(\"y\"),\n                dy = parseFloat(text.attr(\"dy\")),\n                tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n            while (word = words.pop()) {\n              line.push(word);\n              tspan.text(line.join(\" \"));\n              if (tspan.node().getComputedTextLength() > width) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [word];\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n              }\n            }\n          });\n        }\n      }\n    </script>", "description": "Bubbly Jobs Chart", "created_at": "2016-02-28T02:30:56Z", "updated_at": "2016-02-28T02:30:56Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.scale.category20", "d3.format", "d3.svg.axis", "d3.layout.force", "d3.select", "d3.json", "d3.max", "d3.hsl", "d3.mouse", "d3.geom.quadtree"], "readme": "Each bubble is an occupation. Hover bubbles to see info on that occupation\n\nThe size of the bubble shows how many jobs in this occupation there are in the US in 2014. Bubbles on the left are lower paying occupations\nand bubbles on the right are higher paying jobs. Bubbles are bunched vertically into larger occupation categories (management occupations,\nproduction occupations, etc.).\n\nDesign inspired by this [graphic](http://www.nytimes.com/interactive/2013/05/25/sunday-review/corporate-taxes.html) from the New York Times.\nData source: [Bureau of Labor Statistics](http://www.bls.gov/emp/tables.htm).\n\nNotes: Because this uses a [force layout](https://github.com/mbostock/d3/wiki/Force-Layout) for bubble positioning, the x-axis only\napproximates where an occupation's bubble should be based on its wage. Wages from this dataset are [top-coded](https://en.wikipedia.org/wiki/Top-coded)\nat $187,000. Wages for jobs at this top-coded level may, in reality, have higher median annual wages.\n\n\nforked from <a href='http://bl.ocks.org/armollica/'>armollica</a>'s block: <a href='http://bl.ocks.org/armollica/93491e923d72e81df769'>Bubbly Jobs Chart</a>", "uid": "jalapic_000b9683638c18c48273"}, {"code": "<script>\n     \n  \n  function bar() {\n  console.log(\"click\");\n  force.stop();\n  force.start();\n}\n\n  \n  \n  var links = [\n  {source: \"A\", target: \"D\", type: \"high\"},\n  {source: \"A\", target: \"K\", type: \"high\"},\n  {source: \"B\", target: \"G\", type: \"high\"},\n  {source: \"C\", target: \"A\", type: \"low\"},\n  {source: \"D\", target: \"K\", type: \"low\"},\n  {source: \"E\", target: \"A\", type: \"low\"},\n  {source: \"F\", target: \"B\", type: \"low\"},\n  {source: \"K\", target: \"J\", type: \"low\"},\n  {source: \"F\", target: \"A\", type: \"low\"},\n  {source: \"F\", target: \"I\", type: \"low\"},\n  {source: \"G\", target: \"H\", type: \"low\"},\n  {source: \"E\", target: \"K\", type: \"high\"},\n  {source: \"E\", target: \"G\", type: \"low\"},\n  {source: \"E\", target: \"F\", type: \"high\"},\n  {source: \"D\", target: \"E\", type: \"high\"}  \n];\n\nvar nodes = {};\n\n// Compute the distinct nodes from the links.\nlinks.forEach(function(link) {\n  link.source = nodes[link.source] || (nodes[link.source] = {name: link.source});\n  link.target = nodes[link.target] || (nodes[link.target] = {name: link.target});\n});\n\nvar width = 960,\n    height = 700;\n\nvar force = d3.layout.force()\n    .nodes(d3.values(nodes))\n    .links(links)\n    .size([width, height])\n    .linkDistance(105)\n    .charge(-775)\n    .on(\"tick\", tick)\n    .start();\n\n  \n  \nforce.on(\"start\", function () {\n    console.log(\"start\");\n});\nforce.on(\"end\", function () {\n    console.log(\"end\");\n});\n\nR=18\n \n\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n// add defs-marker\nsvg.append('svg:defs')\n    .append('svg:marker')\n    .attr('id', 'end-arrow')\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 2+R)\n    .attr('refY', 5)\n     .attr('markerWidth', 4)\n     .attr('markerHeight', 4)\n    .attr('orient', 'auto')\n    .append('svg:path')\n    .attr('d', 'M0,0 L0,10 L10,5 z')\n    .style(\"opacity\", 1)\n;\n\n// add second defs-marker\nsvg.append('svg:defs')\n    .append('svg:marker')\n    .attr('id', 'end-arrow-fade')\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 2+R)\n    .attr('refY', 5)\n     .attr('markerWidth', 4)\n     .attr('markerHeight', 4)\n    .attr('orient', 'auto')\n    .append('svg:path')\n    .attr('d', 'M0,0 L0,10 L10,5 z')\n    .style(\"opacity\", 0.1)\n\nvar link = svg.selectAll(\".link\")\n    .data(force.links())\n    .enter()\n    .append(\"line\")\n    .attr(\"class\", \"link\")\n    .attr('marker-end', 'url(#end-arrow)')\n;  \n \nvar node = svg.selectAll(\".node\")\n    .data(force.nodes())\n    .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .call(force.drag);\n\nnode.append(\"circle\")\n    .attr(\"r\", R)\n    .on(\"mouseover\", fade(.1))\n    .on(\"mouseout\", fade(1))\n;\n\nnode.append(\"text\")\n    .attr(\"x\", 0)\n    .attr(\"dy\", \".35em\")\n    .text(function(d) { return d.name; });\n\n\n  \n  \nfunction tick() {\n  link\n      .attr(\"x1\", function(d) { return d.source.x; })\n      .attr(\"y1\", function(d) { return d.source.y; })\n      .attr(\"x2\", function(d) { return d.target.x; })\n      .attr(\"y2\", function(d) { return d.target.y; })      \n    ;\n\n  node\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n}\n\n  \n  \n   var linkedByIndex = {};\n    links.forEach(function(d) {\n        linkedByIndex[d.source.index + \",\" + d.target.index] = 1;\n    });\n\n    function isConnected(a, b) {\n        return linkedByIndex[a.index + \",\" + b.index] || linkedByIndex[b.index + \",\" + a.index] || a.index == b.index;\n    }\n  \n function fade(opacity) {\n        return function(d) {\n            node.style(\"stroke-opacity\", function(o) {\n                thisOpacity = isConnected(d, o) ? 1 : opacity;\n                this.setAttribute('fill-opacity', thisOpacity);\n                return thisOpacity;\n            });\n\n            link.style(\"stroke-opacity\", function(o) {\n                return o.source === d || o.target === d ? 1 : opacity;\n            });\n          \n           \n            link.attr(\"marker-end\", function(o) {\n                return opacity === 1 || o.source === d || o.target === d ? 'url(#end-arrow)' : 'url(#end-arrow-fade)';\n            });          \n        };\n }\n  \n  \n</script>", "description": "network fade", "created_at": "2016-02-26T20:09:27Z", "updated_at": "2016-02-26T20:10:40Z", "api": ["d3.layout.force", "d3.values", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/jalapic/'>jalapic</a>'s block: <a href='http://bl.ocks.org/jalapic/14fcf6f266e877cb1c23'>network fade</a>", "uid": "altocumulus_8b607978218e4a7513f3"}, {"code": "<script>\n     \n  \n  function bar() {\n  console.log(\"click\");\n  force.stop();\n  force.start();\n}\n\n  \n  \n  var links = [\n  {source: \"A\", target: \"D\", type: \"high\"},\n  {source: \"A\", target: \"K\", type: \"high\"},\n  {source: \"B\", target: \"G\", type: \"high\"},\n  {source: \"H\", target: \"B\", type: \"high\"},\n  {source: \"C\", target: \"A\", type: \"low\"},\n  {source: \"C\", target: \"L\", type: \"low\"},\n  {source: \"E\", target: \"A\", type: \"low\"},\n  {source: \"F\", target: \"B\", type: \"low\"},\n  {source: \"F\", target: \"G\", type: \"low\"},\n  {source: \"K\", target: \"J\", type: \"low\"},\n  {source: \"F\", target: \"I\", type: \"low\"},\n  {source: \"G\", target: \"H\", type: \"low\"},\n  {source: \"E\", target: \"K\", type: \"high\"},\n  {source: \"E\", target: \"G\", type: \"low\"},\n  {source: \"E\", target: \"F\", type: \"high\"},\n  {source: \"E\", target: \"M\", type: \"high\"},\n];\n\nvar nodes = {};\n\n// Compute the distinct nodes from the links.\nlinks.forEach(function(link) {\n  link.source = nodes[link.source] || (nodes[link.source] = {name: link.source});\n  link.target = nodes[link.target] || (nodes[link.target] = {name: link.target});\n});\n\nvar width = 960,\n    height = 700;\n\nvar force = d3.layout.force()\n    .nodes(d3.values(nodes))\n    .links(links)\n    .size([width, height])\n    .linkDistance(105)\n    .charge(-775)\n    .on(\"tick\", tick)\n    .start();\n\n  \n  \nforce.on(\"start\", function () {\n    console.log(\"start\");\n});\nforce.on(\"end\", function () {\n    console.log(\"end\");\n});\n\nR=18\n \n\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n// add defs-marker\n// add defs-markers\nsvg.append('svg:defs').selectAll(\"marker\")\n    .data([{id:\"end-arrow\", opacity:1}, {id:\"end-arrow-fade\", opacity:0.1}])\n  .enter().append('marker')\n    .attr('id', function(d) { return d.id; })\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 2+R)\n    .attr('refY', 5)\n    .attr('markerWidth', 4)\n    .attr('markerHeight', 4)\n    .attr('orient', 'auto')\n  .append('svg:path')\n    .attr('d', 'M0,0 L0,10 L10,5 z')\n    .style(\"opacity\", function(d) { return d.opacity; });\nvar link = svg.selectAll(\".link\")\n    .data(force.links())\n    .enter()\n    .append(\"line\")\n    .attr(\"class\", \"link\")\n    .attr('marker-end', 'url(#end-arrow)')\n    .on(\"mouseout\", fade(1))\n;  \n \nvar node = svg.selectAll(\".node\")\n    .data(force.nodes())\n    .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .call(force.drag);\n\nnode.append(\"circle\")\n    .attr(\"r\", R)\n    .on(\"mouseover\", fade(.1))\n    .on(\"mouseout\", fade(1))\n   \n;\n\nnode.append(\"text\")\n    .attr(\"x\", 0)\n    .attr(\"dy\", \".35em\")\n    .text(function(d) { return d.name; });\n\n\n  \n  \nfunction tick() {\n  link\n      .attr(\"x1\", function(d) { return d.source.x; })\n      .attr(\"y1\", function(d) { return d.source.y; })\n      .attr(\"x2\", function(d) { return d.target.x; })\n      .attr(\"y2\", function(d) { return d.target.y; })      \n    ;\n\n  node\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n}\n\n  \n  \n   var linkedByIndex = {};\n    links.forEach(function(d) {\n        linkedByIndex[d.source.index + \",\" + d.target.index] = 1;\n    });\n\n    function isConnected(a, b) {\n        return linkedByIndex[a.index + \",\" + b.index] || linkedByIndex[b.index + \",\" + a.index] || a.index == b.index;\n    }\n  \n function fade(opacity) {\n        return function(d) {\n            node.style(\"stroke-opacity\", function(o) {\n                thisOpacity = isConnected(d, o) ? 1 : opacity;\n                this.setAttribute('fill-opacity', thisOpacity);\n                return thisOpacity;\n            });\n   \n          \n          link.style(\"stroke-opacity\", function(o) {\n                return o.source === d || o.target === d ? 1 : opacity;\n            });\n          \n            \n            link.attr(\"marker-end\", function(o) {\n                return opacity === 1 || o.source === d || o.target === d ? 'url(#end-arrow)' : 'url(#end-arrow-fade)';\n            });          \n               \n        \n          \n          \n          \n        };\n }\n  \n  \n</script>", "description": "network fade", "created_at": "2016-02-26T15:03:52Z", "updated_at": "2016-02-27T00:00:09Z", "api": ["d3.layout.force", "d3.values", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jalapic_14fcf6f266e877cb1c23"}, {"code": "<script>\n        var margin = {\n                top: 20,\n                right: 20,\n                bottom: 30,\n                left: 50\n            },\n            width = 960 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        var formatDate = d3.time.format(\"%d-%b-%y\");\n\n        var x = d3.time.scale()\n            .range([0, width]);\n\n        var y = d3.scale.linear()\n            .range([height, 0]);\n\n        var touchScaleX = d3.scale.linear();\n        var touchScaleY = d3.scale.linear();\n\n        var xAxis = d3.svg.axis()\n            .scale(x)\n            .orient(\"bottom\");\n\n        var yAxis = d3.svg.axis()\n            .scale(y)\n            .orient(\"left\");\n\n        var line = d3.svg.line()\n            .x(function(d) {\n                return x(d.date);\n            })\n            .y(function(d) {\n                return y(d.close);\n            });\n\n        var svg = d3.select(\"body\").append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        var rect = svg.append('rect')\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .style(\"fill\", \"white\");\n\n        var chartData = [];\n        var pointCoordinates = [];\n\n        d3.tsv(\"data.tsv\", type, function(error, data) {\n            data.sort(function(a, b) {\n                if (a.date.getTime() > b.date.getTime()) {\n                    return 1;\n                } else if (a.date.getTime() < b.date.getTime()) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            });\n            if (error) throw error;\n\n            x.domain(d3.extent(data, function(d) {\n                return d.date;\n            }));\n            y.domain(d3.extent(data, function(d) {\n                return d.close;\n            }));\n\n            chartData = data;\n            data.forEach(function(d) {\n                var localCoordinates = {};\n                localCoordinates.x = x(d.date);\n                localCoordinates.y = y(d.close);\n                pointCoordinates.push(localCoordinates);\n            });\n\n            touchScaleX.domain(pointCoordinates.map(function(d) {\n                return d.x;\n            }));\n            touchScaleX.range(pointCoordinates.map(function(d, i) {\n                return i;\n            })).clamp(true);\n\n            touchScaleY.domain(pointCoordinates.map(function(d) {\n                return d.y;\n            }));\n            touchScaleY.range(pointCoordinates.map(function(d, i) {\n                return i;\n            })).clamp(true);\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xAxis);\n\n            svg.append(\"g\")\n                .attr(\"class\", \"y axis\")\n                .call(yAxis)\n                .append(\"text\")\n                .attr(\"transform\", \"rotate(-90)\")\n                .attr(\"y\", 6)\n                .attr(\"dy\", \".71em\")\n                .style(\"text-anchor\", \"end\")\n                .text(\"Price ($)\");\n\n            svg.append(\"path\")\n                .datum(data)\n                .attr(\"class\", \"line\")\n                .attr(\"d\", line);\n\n            svg.append(\"g\").attr(\"id\", \"touchLayer\");\n        });\n\n        function type(d) {\n            d.date = formatDate.parse(d.date);\n            d.close = +d.close;\n            return d;\n        }\n\n        var boxWidth = 0;\n        var boxHeight = 24;\n\n        function updatePositionsCallbackEvent(positions) {\n            positions.forEach(function(x, posIndex) {\n                var currX = positions[posIndex][0];\n                var currY = positions[posIndex][1];\n                var index = ~~touchScaleX(currX);\n                if (currX > 0 && index < pointCoordinates.length - 1) {\n                    var perc = (currX - pointCoordinates[index].x) / (pointCoordinates[index + 1].x - pointCoordinates[index].x);\n                    if (perc <= 0.5) {\n                        positions[posIndex][0] = pointCoordinates[index].x == 0 ? 1 : pointCoordinates[index].x;\n                        positions[posIndex][1] = pointCoordinates[index].y;\n                    } else {\n                        positions[posIndex][0] = pointCoordinates[index + 1].x;\n                        positions[posIndex][1] = pointCoordinates[index + 1].y;\n                    }\n                }\n            });\n\n            for (var i = 1; i < positions.length; i++) {\n                if (positions[i - 1][0] === positions[i][0]) {\n                    positions.splice(i, 1);\n                    i--;\n                }\n            }\n\n            var lines = svg.select(\"#touchLayer\").selectAll(\"g.touchElements\")\n                .data(positions);\n\n            var touchElements = lines.enter()\n                .append(\"g\").attr(\"class\", \"touchElements\");\n            // boxWidthboxHeight\n\n            touchElements.append(\"circle\")\n                .attr(\"cx\", 0)\n                .attr(\"cy\", 0)\n                .attr(\"r\", 5)\n                .style(\"fill\", \"blue\")\n                .style(\"stroke-width\", 2)\n                .style(\"stroke\", 'blue');\n\n            touchElements.append(\"rect\")\n                .attr(\"height\", boxHeight)\n                .style(\"fill\", \"#EEE\")\n            ;\n            touchElements.append(\"text\")\n                .attr(\"x\", boxWidth / 2)\n                .attr(\"y\", boxHeight / 2)\n                .style(\"font-size\", 14)\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"dominant-baseline\", \"middle\")\n                .style(\"fill\", \"black\")\n                .attr(\"transform\", function(d) {\n                    return \"translate(-\" + boxWidth / 2 + \",0)\"\n                });\n\n            var inlineSpanData = [{\n                text: \"Hello\",\n                class: \"xValue\"\n            }, {\n                text: \"There\",\n                class: \"yValue\"\n            }];\n            var spans = lines.selectAll(\"text\").selectAll(\"tspan\").data(inlineSpanData);\n\n            spans.enter().append(\"tspan\")\n                .text(function(d) {\n                    return d.text;\n                })\n                .attr(\"class\", function(d) {\n                    return d.class;\n                });\n\n            touchElements.append(\"line\")\n                .attr(\"x1\", 0)\n                .attr(\"x2\", 0)\n                .attr(\"y1\", height)\n                .attr(\"y2\", boxHeight)\n                .style(\"stroke-dasharray\", \"1, 2\")\n                .style(\"stroke-width\", 0.5)\n                .style(\"stroke\", 'black')\n                .style(\"fill\", 'black');\n\n\n\n            lines.attr(\"transform\", function(d) {\n                return \"translate(\" + d[0] + \",0)\";\n            });\n\n            var showSeperate = false;\n            if (showSeperate) {\n              lines.selectAll(\"text\")\n                  .each(function(d, i) {\n                      var tspanVal1 = \"Hello\";\n                      var tspanVal2 = \"There\";\n                      var tspanClass1 = \"xValue\";\n                      var tspanClass2 = \"yValue\";\n                      var tspanDx2 = \".4em\";\n                          tspanVal1 = Math.round(y.invert(d3.select(this.parentNode).datum()[1]) * 100) / 100;\n                          tspanVal2 = d3.time.format(\"%b %d, %Y\")(x.invert(d3.select(this.parentNode).datum()[0]));\n                      var tspans = d3.select(this).selectAll('tspan')[0];\n                      d3.select(tspans[0]).text(tspanVal1).attr(\"class\", tspanClass1);\n                      d3.select(tspans[1]).text(tspanVal2).attr(\"class\", tspanClass2).attr(\"dx\", tspanDx2);\n\n                      var bbox = this.getBBox();\n                      if (boxWidth < bbox.width) {\n                          boxWidth = bbox.width + 20;\n                      }\n                  });\n\n                lines.selectAll(\"rect\")\n                    .attr(\"width\", boxWidth)\n                    .attr(\"transform\", function(d) {\n                        d = d3.select(this.parentNode).datum();\n                        if (d[0] < (boxWidth / 2)) {\n                            return \"translate(-\" + (d[0]) + \",0)\";\n                        } else if (d[0] > width - (boxWidth / 2)) {\n                            return \"translate(-\" + (boxWidth - (width - d[0])) + \",0)\";\n                        } else {\n                            return \"translate(-\" + boxWidth / 2 + \",0)\";\n                        }\n                    });\n\n                lines.selectAll(\"text\")\n                    .attr(\"x\", boxWidth / 2)\n                    .attr(\"y\", boxHeight / 2)\n                    .attr(\"transform\", function(d) {\n                        d = d3.select(this.parentNode).datum();\n                        if (d[0] < (boxWidth / 2)) {\n                            return \"translate(-\" + (d[0]) + \",0)\";\n                        } else if (d[0] > width - (boxWidth / 2)) {\n                            return \"translate(-\" + (boxWidth - (width - d[0])) + \",0)\";\n                        } else {\n                            return \"translate(-\" + boxWidth / 2 + \",0)\";\n                        }\n                    });\n            } else {\n                var direction = 1;\n                if (positions[0][0] > positions[positions.length - 1][0])\n                    direction = -1;\n                var padding = 0;\n                boxWidth = 0;\n                lines.selectAll(\"text\")\n                    .each(function(d) {\n                        var tspanVal1 = \"Hello\";\n                        var tspanVal2 = \"There\";\n                        var tspanClass1 = \"xValue\";\n                        var tspanClass2 = \"yValue\";\n                        var tspanDx2 = \".4em\";\n                        if (positions.length === 1) {\n                            tspanVal1 = Math.round(y.invert(d3.select(this.parentNode).datum()[1]) * 100) / 100;\n                            tspanVal2 = d3.time.format(\"%b %d, %Y\")(x.invert(d3.select(this.parentNode).datum()[0]));\n                        } else {\n                            var val1 = y.invert(positions[direction == 1 ? 0 : positions.length - 1][1]);\n                            var val2 = y.invert(positions[direction == -1 ? 0 : positions.length - 1][1]);\n                            var diff = Math.round((val2 - val1) * 100) / 100;\n                            if (diff >= 0) {\n                                tspanClass1 += \" xPos\";\n                            } else {\n                                tspanClass1 += \" xNeg\";\n                            }\n                            tspanClass2 += \" range\";\n                            var perc = ((val2 - val1) * 100 / val1)\n                            tspanVal1 = diff + \"(\" + Math.round(perc) + \"%)\";\n                            tspanVal2 = d3.time.format(\"%b %d, %Y\")(x.invert(positions[direction == 1 ? 0 : positions.length - 1][0])) + '-' + d3.time.format(\"%b %d, %Y\")(x.invert(positions[direction == -1 ? 0 : positions.length - 1][0]));\n                            tspanDx2 = \"1em\";\n                        }\n                        var tspans = d3.select(this).selectAll('tspan')[0];\n                        d3.select(tspans[0]).text(tspanVal1).attr(\"class\", tspanClass1);\n                        d3.select(tspans[1]).text(tspanVal2).attr(\"class\", tspanClass2).attr(\"dx\", tspanDx2);\n\n                        var bbox = this.getBBox();\n                        if (boxWidth < bbox.width) {\n                            //padding += (bbox.width - boxWidth)/2;\n                            boxWidth = bbox.width + 20;\n                        }\n                    });\n\n                if (boxWidth < (positions[direction == -1 ? 0 : positions.length - 1][0] - positions[direction == 1 ? 0 : positions.length - 1][0])) {\n                    boxWidth = (positions[direction == -1 ? 0 : positions.length - 1][0] - positions[direction == 1 ? 0 : positions.length - 1][0])\n                } else {\n                    padding = (boxWidth - (positions[direction == -1 ? 0 : positions.length - 1][0] - positions[direction == 1 ? 0 : positions.length - 1][0])) / 2\n                }\n                console.log(\"*****\");\n                lines.selectAll(\"rect\")\n                    .attr(\"width\", boxWidth)\n                    .attr(\"transform\", function(d, i) {\n                        d[0] = d3.select(this.parentNode).datum()[0];\n                        var diff = 0;\n                        if (positions.length === 1) {\n                            if (d[0] < (boxWidth / 2)) {\n                                diff += (boxWidth / 2) - d[0];\n                            } else if (d[0] > width - (boxWidth / 2)) {\n                                diff -= d[0] - (width - (boxWidth / 2));\n                            }\n                        } else {\n                            diff = positions[direction == 1 ? 0 : positions.length - 1][0] - d3.select(this.parentNode).datum()[0];\n                            if (d[0] - (-diff + padding) < 0) {\n                                diff -= d[0] - (-diff + padding);\n                            } else if (d[0] - (-diff + padding) + (boxWidth) > width) {\n                                diff -= d[0] - (-diff + padding) + (boxWidth) - width;\n                            }\n                        }\n                        return \"translate(-\" + (-diff + padding) + \",0)\";\n                    });\n\n                lines.selectAll(\"text\")\n                    .attr(\"x\", boxWidth / 2)\n                    .attr(\"y\", boxHeight / 2)\n                    .attr(\"transform\", function(d) {\n                        d[0] = d3.select(this.parentNode).datum()[0];\n                        var diff = 0;\n                        if (positions.length === 1) {\n                            if (d[0] < (boxWidth / 2)) {\n                                diff += (boxWidth / 2) - d[0];\n                            } else if (d[0] > width - (boxWidth / 2)) {\n                                diff -= d[0] - (width - (boxWidth / 2));\n                            }\n                        } else {\n                            diff = positions[direction == 1 ? 0 : positions.length - 1][0] - d3.select(this.parentNode).datum()[0];\n                            if (d[0] - (-diff + padding) < 0) {\n                                diff -= d[0] - (-diff + padding);\n                            } else if (d[0] - (-diff + padding) + (boxWidth) > width) {\n                                diff -= d[0] - (-diff + padding) + (boxWidth) - width;\n                            }\n                        }\n                        return \"translate(-\" + (-diff + padding) + \",0)\";\n                    });\n            }\n\n            lines.selectAll(\"circle\").attr(\"transform\", function(d) {\n                var currX = d3.select(this.parentNode).datum()[0];\n                var currY = d3.select(this.parentNode).datum()[1];\n                var index = ~~touchScaleX(d3.select(this.parentNode).datum()[0]);\n                if (currX > 0 && index < pointCoordinates.length - 1) {\n                    //console.log(index, currX, pointCoordinates[index], pointCoordinates[index + 1]);\n                    var perc = (currX - pointCoordinates[index].x) / (pointCoordinates[index + 1].x - pointCoordinates[index].x)\n                    var newY = (perc * (pointCoordinates[index + 1].y - pointCoordinates[index].y)) + pointCoordinates[index].y;\n                    return \"translate(0,\" + newY + \")\";\n                }\n            });\n\n            lines.exit().remove();\n        }\n\n        watchTouchMoveEvents(svg, updatePositionsCallbackEvent);\n\n        function watchTouchMoveEvents(element, updatePositionsCallback) {\n            var isDrag = false;\n            var selectionPoints = [];\n            var touchEventsSupport = false;\n            element.on('mousedown', function(e) {\n                isDrag = true;\n                d3.event.preventDefault();\n            }).on('mouseup', function(e) {\n                isDrag = false;\n                d3.event.preventDefault();\n            }).on('mousemove', function(e) {\n                var coordinates = d3.mouse(this);\n                if (coordinates[0] <= 0 || coordinates[0] >= width)\n                    return;\n                if (touchEventsSupport === false) {\n                    if (isDrag === false) {\n                        selectionPoints = [];\n                        selectionPoints[0] = coordinates;\n                    } else {\n                        selectionPoints[1] = coordinates;\n                    }\n                    updatePositions();\n                } else {\n                    d3.event.preventDefault();\n                }\n            }).on(\"touchstart\", function(e) {\n                touchEventsSupport = true;\n                var coordinates = d3.touches(this);\n                if (coordinates[0] <= 0 || coordinates[0] >= width)\n                    return;\n                selectionPoints = coordinates;\n                updatePositions();\n            }).on(\"touchmove\", function(e) {\n                var coordinates = d3.touches(this);\n                if (coordinates[0] <= 0 || coordinates[0] >= width)\n                    return;\n                selectionPoints = coordinates;\n                updatePositions();\n            }).on(\"touchend\", function(e) {\n                // do nothing\n                // var coordinates = d3.touches(this); // selectionPoints = coordinates; //updatePositions();\n                // d3.select(\"#events\").append(\"div\").text(\"touchend:\" + coordinates);\n            });\n\n            var timer = 0;\n\n            function updatePositions() {\n                d3.event.preventDefault();\n                clearTimeout(timer);\n                timer = setTimeout(updatePositionsFinal, 0);\n            }\n\n            function updatePositionsFinal() {\n                updatePositionsCallback(selectionPoints);\n            }\n        }\n    </script>", "description": "Line chart like google stock chart with Touch support", "created_at": "2016-02-26T14:03:57Z", "updated_at": "2016-04-14T15:49:37Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.event.preventDefault", "d3.mouse", "d3.touches"], "readme": "For reference, I have taken sample code from Mike Bostock's  [Line Chart Example](http://bl.ocks.org/mbostock/3883245).\nMade few changes to handle touch and mouse move/drag \n", "uid": "darshit-shah_3b0327f5e04f89887a4f"}, {"code": "<script>\n    var margin = {\n        top: 130,\n        right: 145,\n        bottom: 30,\n        left: 45\n      },\n      width = 850 - margin.left - margin.right,\n      height = 820 - margin.top - margin.bottom;\n\n    var x = d3.scale.linear()\n      .range([0, width]);\n\n    var y = d3.scale.linear()\n      .range([height, 0]);\n\n    var color = d3.scale.category20();\n\n    var xAxis = d3.svg.axis()\n      .scale(x)\n      .orient(\"bottom\");\n\n    var yAxis = d3.svg.axis()\n      .scale(y)\n      .orient(\"left\");\n \n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n\n    d3.csv(\"data.csv\", function(error, data) {\n\n      data.forEach(function(d) {\n        if (d.pays == \"United Kingdom\") {\n          return d.visible = true;\n          d.prod = +d.prod;\n          d.cons = +d.cons;\n        } else {\n          return d.visible = false;\n          d.prod = +d.prod;\n          d.cons = +d.cons;\n        };\n      });\n\n      var dataNest = d3.nest()\n        .key(function(d) {\n          return d.pays;\n        })\n        .entries(data);\n\n      var categories = dataNest.map(function(d, i) {\n        return {\n          name: d.key,\n          values: dataNest[i].values.map(function(d) {\n            return {\n              prod: +d.prod,\n              cons: +d.cons,\n              year: d.year\n            };\n          }),\n          visible: (d.key === \"United Kingdom\" ? true : false)\n        };\n      });\n\n      x.domain([0, 31]);\n      y.domain([0, 31]);\n\n      svg.append(\"foreignObject\")\n    .attr(\"width\", 600)\n    .attr(\"height\", 200)\n    .attr(\"x\", 50)\n    .attr(\"y\", -110)\n  .append(\"xhtml:body\")\n    .style(\"font-size\", \"12px\")\n    .html(\"<h2>Daily Biofuels Production and Consumption, 2010-2012</h2><p>Explore the connections between consumption and production for the top-40 highest consumers and producers of biofuels in the world. Countries below the dashed line consume more biofuels than they produce. Countries above the line produce more than they consume. For example, United Kingdom and Germany consume more than they produce, whereas Argentina and Indonesia produce more than they consume.</p>\");\n      \n      svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .append(\"text\")\n        .attr(\"class\", \"label\")\n        .attr(\"x\", width)\n        .attr(\"y\", -6)\n        .style(\"text-anchor\", \"end\")\n        .style(\"font-weight\", 800)\n        .text(\"Daily Biofuels Consumption (1,000 Barrels)\");\n\n      svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis)\n        .append(\"text\")\n        .attr(\"class\", \"label\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .style(\"font-weight\", 800)\n        .text(\"DailyBiofuels Production (1,000 Barrels)\");\n\n      var agencies = svg.selectAll(\".agencies\")\n        .data(categories) // Select nested data and append to new svg group elements\n        .enter().append(\"g\")\n        .attr(\"class\", \"agencies\");\n\n      var dots = svg.selectAll(\".dot\")\n        .data(data).enter().append(\"g\").attr(\"class\", \"dot\")\n\n      dots.append(\"circle\")\n        .attr(\"id\", function(d) {\n          return d.pays.replace(/\\s+/g, \"\");\n        })\n        .attr(\"class\", \"circles\")\n        .attr(\"opacity\", 1)\n        .attr(\"r\", 3.5)\n        .attr(\"cx\", function(d) {\n          return d.visible ? x(d.cons) : x(-100 * 100);\n        })\n        .attr(\"cy\", function(d) {\n          return d.visible ? y(d.prod) : y(-100 * 100);\n        })\n        .style(\"fill\", function(d) {\n          return color(d.pays);\n        });\n\n      // begin of drawing lines\n      var line = d3.svg.line()\n        .x(function(d) {\n          return x(d.cons);\n        })\n        .y(function(d) {\n          return y(d.prod);\n        })\n        .interpolate(\"linear\");\n\n      var fitLine = svg.append(\"line\")\n        .attr({\n          \"class\": \"regressionLine\",\n          \"x1\": x(0),\n          \"x2\": x(31),\n          \"y1\": y(0),\n          \"y2\": y(31)\n        })\n      \n      svg.append(\"foreignObject\")\n      .attr(\"class\", \"label\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"x\", -510)\n      .attr(\"y\", 88)\n      .attr(\"transform\", \"rotate(-45) translate(333, 353)\")\n      .append(\"xhtml:body\")\n        .html(\"&uarr;\");\n      \n      svg.append(\"text\")\n        .attr(\"class\", \"label\")\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"x\", -500)\n        .attr(\"y\", -65)\n        .attr(\"dy\", \"165px\")\n        .attr(\"transform\", \"rotate(-45) translate(333, 353)\")\n        .text(\"Production higher than consumption\");\n      \n      svg.append(\"foreignObject\")\n      .attr(\"class\", \"label\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"x\", -510)\n      .attr(\"y\", 123)\n      .attr(\"transform\", \"rotate(-45) translate(333, 353)\")\n      .append(\"xhtml:body\")\n        .html(\"&darr;\");\n\n      svg.append(\"text\")\n        .attr(\"class\", \"label\")\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"x\", -500)\n        .attr(\"y\", -60)\n        .attr(\"dy\", \"195px\")\n        .attr(\"transform\", \"rotate(-45) translate(333, 353)\")\n        .text(\"Consumption higher than production\");\n      \n      agencies.append(\"path\")\n        .attr(\"d\", function(d) {\n          return d.visible ? line(d.values) : null; // If array key \"visible\" = true then draw line, if not then don't \n        })\n        .attr(\"id\", function(d) {\n          return d.name.replace(/\\s+/g, \"\")\n        })\n        .attr(\"class\", \"linkcircles\")\n        .attr(\"transform\", \"translate(0,0)\")\n        .attr(\"opacity\", 1)\n        .style(\"stroke-width\", 1.5)\n        .style(\"stroke\", function(d) {\n          return color(d.name);\n        })\n        .style(\"fill\", \"none\");\n      // end of drawing lines\n\n\n      dots.append(\"text\").attr(\"id\", function(d) {\n        return d.pays.replace(/\\s+/g, \"\");\n      }).attr(\"class\", \"labels\").attr(\"x\", function(d) {\n        return d.visible ? x(d.cons) : -1000;\n      }).attr(\"y\", function(d) {\n        return d.visible ? y(d.prod) - 7 : -100 * 100;\n      }).text(function(d) {\n        return (d.year)\n      }).attr(\"text-anchor\", \"middle\");\n\n      agencies.append(\"rect\")\n        .attr(\"width\", 10)\n        .attr(\"height\", 10)\n        .attr(\"x\", (width + 15))\n        .attr(\"y\", function(d, i) {\n          return i * 13\n        })\n        .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\"; // If array key \"visible\" = true then color rect, if not then make it grey \n        })\n        .attr(\"class\", \"legend-box\")\n        .on(\"click\", function(d) { // On click make d.visible \n          d.visible = !d.visible; // If array key for this data selection is \"visible\" = true then make\n          data.forEach(function(data) {\n            if (data.pays == d.name) {\n              return data.visible = !data.visible; // If array key for this data selection is \"visible\" = true then make\n            }\n          });\n\n\n          maxX = findMaxX(categories); // Find max X rating value categories data with \"visible\"; true\n          maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n\n          if (maxX > maxY) {\n            maxY = maxX;\n          } else {\n            maxX = maxY;\n          }\n\n          x.domain([0, maxX]); // Redefine xAxis domain based on highest y value of categories data with \"visible\"; true\n          svg.select(\".x.axis\")\n            .transition()\n            .call(xAxis);\n\n          y.domain([0, maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n          svg.select(\".y.axis\")\n            .transition()\n            .call(yAxis);\n\n          dots.selectAll(\".circles\")\n            .transition()\n            .attr(\"cx\", function(d) {\n              return d.visible ? x(d.cons) : x(-(100 * 100)); // Replace dots with new scale\n            })\n            .attr(\"cy\", function(d) {\n              return d.visible ? y(d.prod) : y(-(100 * 100)); // Replace dots with new scale\n            });\n\n          agencies.selectAll(\".linkcircles\")\n            .transition()\n            .attr(\"d\", function(d) {\n              return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n            });\n\n          agencies.select(\"rect\")\n            .transition()\n            .attr(\"fill\", function(d) {\n              return d.visible ? color(d.name) : \"#F1F1F2\";\n            });\n\n          dots.selectAll(\".labels\")\n            .transition()\n            .attr(\"x\", function(d) {\n              return d.visible ? x(d.cons) : x(-(100 * 100)); // Replace labels with new scale\n            })\n            .attr(\"y\", function(d) {\n              return d.visible ? y(d.prod) - 7 : y(-(100 * 100)); // Replace labels with new scale\n            });\n\n          svg.selectAll(\"line.regressionLine\")\n            .transition()\n            .attr(\"x1\", x(0))\n            .attr(\"x2\", function(d) {\n              if (maxX < maxY) {\n                return x(maxX);\n              } else {\n                return x(maxY);\n              }\n            })\n            .attr(\"y1\", y(0))\n            .attr(\"y2\", function(d) {\n              if (maxX < maxY) {\n                return y(maxX);\n              } else {\n                return y(maxY);\n              }\n            });\n\n        })\n        .on(\"mouseover\", function(d) {\n          d3.select(\"#\" + d.name.replace(/\\s+/g, \"\")).transition().style(\"stroke-width\", 2.5)\n        })\n        .on(\"mouseout\", function(d) {\n          d3.select(\"#\" + d.name.replace(/\\s+/g, \"\")).transition().style(\"stroke-width\", 1.5)\n        });\n\n      agencies.append(\"text\")\n        .attr(\"x\", (width + 30)) // space legend\n        .attr(\"y\", function(d, i) {\n          return i * 13 + 9\n        })\n        .attr(\"class\", \"legend\") // style the legend\n        .text(function(d) {\n          return d.name\n        });\n\n\n      function findMaxX(data) { // Define function \"findMaxY\"\n        var maxXValues = data.map(function(d) {\n          console.log(d);\n          if (d.visible) {\n            return d3.max(d.values, function(value) { // Return max rating value\n              return value.cons * 1.05;\n            })\n          }\n        });\n        return d3.max(maxXValues);\n      };\n\n      function findMaxY(data) { // Define function \"findMaxY\"\n        var maxYValues = data.map(function(d) {\n          if (d.visible) {\n            return d3.max(d.values, function(value) { // Return max rating value\n              return value.prod * 1.05;\n            })\n          }\n        });\n        return d3.max(maxYValues);\n      };\n\n    });\n    </script>", "description": "Biofuels Production and Consumption", "created_at": "2016-02-25T21:40:51Z", "updated_at": "2016-02-26T23:23:07Z", "api": ["d3.scale.linear", "d3.scale.category20", "d3.svg.axis", "d3.select", "d3.csv", "d3.nest", "d3.svg.line", "d3.max"], "readme": "Original chart created by [Charles Boutaud](https://github.com/cboutaud), based on [DStruths](http://bl.ocks.org/DStruths/)'s block \"[d3.js Multi-series line chart interactive](http://bl.ocks.org/DStruths/9c042e3a6b66048b5bd4)\" and [mbostock](http://bl.ocks.org/mbostock/)'s block, \"[Scatterplot with Multiple Series](http://bl.ocks.org/mbostock/3183403)\".\n\nData Source: [U.S. Energy Information Administration](https://www.eia.gov/cfapps/ipdbproject/IEDIndex3.cfm?tid=79&pid=79&aid=1).\n\nBuilt with [blockbuilder.org](http://blockbuilder.org).", "uid": "renecnielsen_c36879a6060718fce321"}, {"code": "<script>\n\nvar margin = {top: 20, right: 80, bottom: 30, left: 70},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"right\")\n  \t.tickFormat(function(d){return d +\"\"});\n\nvar line = d3.svg.line()\n    .interpolate(\"linear\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name], name: name};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n\t\n  y.domain([y.domain()[0]-5, y.domain()[1]+5]);\n  \n  //x axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n  \n\t//y axis\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n \t\t\t.attr(\"transform\", \"translate(\" + (width) + \",0)\")\n      .call(yAxis)\n    .append(\"text\")\n     .attr(\"transform\", \"rotate(270)\") \n      .attr(\"y\", -15)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temp (F)\");\n      \n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return color(d.name); });\n  \n  var point = city.append(\"g\")\n  .attr(\"class\", \"line-point\");\n\n  point.selectAll('dot')\n  .data(function(d){ return d.values})\n  .enter().append('circle')\n  .attr(\"cx\", function(d) { return x(d.date) })\n  .attr(\"cy\", function(d) { return y(d.temperature) })\n  .attr(\"r\", 1.5)\n  .style(\"fill\", function(d) {return color(d.name);})\n  .style(\"stroke\", function(d) { return color(this.parentNode.__data__.name); });\n  \n\tvar colors = function(d) {\n    return color(d.name);\n  }\n  \n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[0]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n  \t\t.attr(\"x\", function(d) {\n            if (d.name === \"San Francisco\") {\n    \t\t\t\t\t\treturn -65;\n  \t\t\t\t\t}\n  \t\t\t\t\telse if (d.name === \"New York\") {\n                return -45;\n            }\n  \t\t\t\t\telse {\n              \treturn -30;\n            }\n            })\n  \t\t.attr(\"dy\", function(d) {\n            if (d.name === \"San Francisco\") {\n      \t\t\t\t\t\treturn \".95em\";\n  \t\t\t\t\t}\n  \t\t\t\t\telse {\n              return \".35em\";\n            }\n\t\t\t})\n  \t\t.attr(\"fill\" , function(d) {return colors(d)})\n  \t\t.text(function(d) {return d.name;});\n  \n});\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-02-25T19:33:21Z", "updated_at": "2016-02-25T19:33:21Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/sliu72/'>sliu72</a>'s block: <a href='http://bl.ocks.org/sliu72/f80a387b1ce45adfbe08'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/sliu72/'>sliu72</a>'s block: <a href='http://bl.ocks.org/sliu72/ca351b22bc0778e97d79'>Multi-Series Line Chart</a>", "uid": "sliu72_bb84f01ac9ce7dae7281"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {yes:\"#807dba\", no:\"#e08214\",unknown:\"#41ab5d\"}[c]; }\n    \n    // compute total for each state.\n    fData.forEach(function(d){d.total=d.freq.yes+d.freq.no+d.freq.unknown;});\n    \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){ return d3.format(\",\")(d[1])})\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.State == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){ return d3.format(\",\")(d[1])})\n                .attr(\"y\", function(d) {return y(d[1])-5; });            \n        }        \n        return hG;\n    }\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.State,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.State,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n            .attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['yes','no','unknown'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.State,d.total];});\n    var hG = histoGram(sF), // create the histogram.\n        pC = pieChart(tF), // create the pie-chart.\n        leg= legend(tF);  // create the legend.\n}\n</script>\n<script>\nvar freqData=[\n{State:'Norte',freq:{yes:1054105, no:2100439, unknown:535138}},\n{State:'Lisboa',freq:{yes:645976, no:1287192, unknown:888708}},\n{State:'Centro',freq:{yes:667462, no:1330004, unknown:330289}},\n{State:'Alentejo',freq:{yes:216645, no:431693, unknown:108964}},\n{State:'Algarve',freq:{yes:136372, no:271739, unknown:42895}},\n{State:'Da Madeira',freq:{yes:76811, no:153056, unknown:37918}},\n{State:'Dos Acores',freq:{yes:68294, no:136085, unknown:42393}}\n];\ndashboard('#dashboard',freqData);\n</script>", "description": "Portugal, Housing Loan Customers, DashBoard", "created_at": "2016-02-25T18:43:07Z", "updated_at": "2016-04-15T15:38:11Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.format", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.sum"], "readme": "A simple example of creating a dashboard. This example was created for the paper [Interactive HTML Reporting Using D3](http://www.mwsug.org/proceedings/2014/DV/MWSUG-2014-DV09.pdf) at the MWSUG2014 conference.\n\n- Hovering over a bar in histogram will modify the pie chart and legend.\n- Hovering over pie slice will update the histogram.\n\nforked from <a href='http://bl.ocks.org/NPashaP/'>NPashaP</a>'s block: <a href='http://bl.ocks.org/NPashaP/96447623ef4d342ee09b'>DashBoard</a>\n\nforked from <a href='http://bl.ocks.org/MatteoTomassetti/'>MatteoTomassetti</a>'s block: <a href='http://bl.ocks.org/MatteoTomassetti/4d79d0cdb41a16903b7e'>DashBoard</a>", "uid": "MatteoTomassetti_a19238e5b706a43b68bf"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n   \n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar rects = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"rect\");\n\n\t\t\tvar rectAttributes = rects\n  \t    .attr(\"x\", function (d) { return d.start/10; })\n    \t  .attr(\"y\", function (d) { return 100; })\n      \t.attr(\"height\", function(d) { return 0;})\n      \t.attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n   \t\t\t.transition().delay(3000).duration(1000)\n     \t  .attr(\"y\", function (d) { return 70; })\n       \t.attr(\"height\", function (d) {return 30;})\n\t\t\t\t.attr(\"fill\", function (d){\n      if (d.direction === \"forward\"){\n        return \"pink\";\n    }\n\t\t\telse{(d.direction === \"reverse\")\n          return \"yellow\";\n      }\n\n     });\n      });\n    var group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    \n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 15})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    \n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 115, width: \"1px\", height: 15})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; })\n    \n  </script>", "description": "genome browser", "created_at": "2016-02-25T17:03:27Z", "updated_at": "2016-02-25T17:03:28Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/a1c9688944f950218658'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/ericamartel/'>ericamartel</a>'s block: <a href='http://bl.ocks.org/ericamartel/2dd0548aee7cd62dd496'>genome browser</a>", "uid": "ericamartel_1a7a11da8c91707edf6f"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar rects = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"rect\");\n\n\t\t\tvar rectAttributes = rects\n  \t    .attr(\"x\", function (d) { return d.start/10; })\n    \t  .attr(\"y\", function (d) { return 100; })\n      \t.attr(\"height\", function(d) { return 0;})\n      \t.attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      \n        .attr(\"fill\", function(d) {\n          if (d.direction === \"reverse\") {return \"red\"}\n            else if (d.direction === \"forward\") {return \"green\"}\n        else {return \"black\"}})\n       \t.style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      \n        .transition().delay(3000).duration(1000)\n     \t  .attr(\"y\", function (d) {\n             \n              if (d.direction === \"forward\") {return 70}\n        else if (d.direction === \"reverse\") {return 130} }\n              \n             )\n       \t.attr(\"height\", function (d) {return 30;});\n\n      });\n    var group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 15})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 115, width: \"1px\", height: 15})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n  </script>", "description": "genome browser", "created_at": "2016-02-25T16:09:25Z", "updated_at": "2016-02-25T17:09:07Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "diepvf_d30e1f3cd1f7219bd0e5"}, {"code": "<script>\n    var genomelength = 9000;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n\n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar genes = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append (\"g\");\n      \n      genes.append(\"rect\")\t\n  \t    .attr(\"x\", function (d) { return d.start/10; })\n    \t  .attr(\"y\", function (d) { return 100; })\n      \t.attr(\"height\", function(d) { return 0;})\n      \t.attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      \t.attr(\"style\", function (d) { return (d.dirction)})\n      \t.style (\"fill\", function (d) {\n            if (d.direction === \"forward\") { \n              return \"cyan\";\n            }\n            else if (d.direction === \"reverse\") { \n              return \"pink\";\n            }\n        \t\telse {\n              return \"black\";\n            }\n        })\n \n      \t.attr(\"y\", function (d) {\n        if (d.direction === \"forward\") {\n          if (d.name%2 === 0)\n          \treturn 70;\n          else {\n            return 40;\n          }\n        }\n        else {\n          if (d.name%2 === 0)\n          \treturn 130;\n          else {\n            return 170;\n          }\n        }\n      })\n\t\t\t\t.attr(\"x\", function (d) {\n        \tif (d.direction === \"forward\") {\n            return (0 - ((d.stop-d.start)/10)) - 2;\n          }\n        \telse if (d.direction === \"reverse\") {\n            return (genomelength/10) + 2;\n          }\n      })\n      \t.style ({\"stroke-width\": \"2px\", \"stroke\": \"black\"})\n   \t\t\t.transition().delay(3000).duration(1000)\n       \t.attr(\"height\", function (d) {\n        \t\treturn 30;\n        })\n      \t.attr(\"x\", function (d) { \n        \t\treturn d.start/10; \n      });\n      \n      genes.append(\"text\") // gene name\n      \t.attr(\"x\", function (d) { \n        \t\treturn ((d.stop+d.start)/2)/10; \n        })\n    \t  .attr(\"y\", function (d) { \n        if (d.direction === \"forward\") {\n          if (d.name%2 === 0)\n            return 90;\n        \telse {\n          \treturn 60;\n        }\n        }\n        else {\n          if (d.name%2 === 0)\n            return 150;\n          else {\n            return 190;\n          }\n        }\n      })\n        .transition().delay(4000).duration(1000)\n      \t.text ( function (d) { return d.name; })\n     \t\t.style({\"text-anchor\": \"middle\", \"font-family\": \"ariel\", \"font-weight\": \"bold\"})\n        .style (\"fill\", function(d) {\n        if (d.direction === \"forward\") {\n          return \"black\";\n        }\n        else {\n          return \"black\";\n        }\n      });\n      \t\n    \t\t\n    var group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 15})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 115, width: \"1px\", height: 15})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; })\n    group.append(\"text\")\n    \t.text(function (d,i) {\n            return i+1;\n    })\n      .attr({y: 115, width: \"1px\", height: 15})\n    \t.attr(\"x\", function(d) {return (d/10)+2;})\n    \t.attr({\"font-size\": \"10px\", \"fill\":\"grey\"});\n    });\n\n\n  </script>", "description": "genome browser 2 with numbers", "created_at": "2016-02-25T15:37:27Z", "updated_at": "2016-03-03T15:26:52Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "smith13mr_4742802e9cf761912270"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar rects = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"rect\");\n\n\t\t\tvar rectAttributes = rects\n  \t    .attr(\"x\", function (d) { return d.start/10; })\n    \t  .attr(\"y\", function (d) { return 100; })\n      \t.attr(\"height\", function(d) { return 0;})\n      \t.attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n       \t.style({\"fill\":\"green\",\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n   \t\t\t.transition().delay(3000).duration(1000)\n     \t  .attr(\"y\", function (d) { return 70; })\n       \t.attr(\"height\", function (d) {return 30;});\n\n      });\n    var group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 15})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 115, width: \"1px\", height: 15})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n  </script>", "description": "genome browser", "created_at": "2016-02-25T15:29:30Z", "updated_at": "2016-02-25T15:29:30Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "cheneymb_5a9a4b90f3f89e07918c"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({height: 500,width: genomelength/10});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 100, width: genomelength/10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n    \n    d3.json(\"genes.json.txt\", function(error, json) {\n\t\t  if (error) return console.warn(error);\n\t\t\tvar rects = svg.selectAll(\".genes\")\n  \t  \t.data(json)\n    \t  .enter()\n      \t.append(\"rect\");\n\n      var genename = svg.selectAll (\".name\")\n      \t.data (json)\n      \t.enter()\n      \t.append(\"text\")\n      \t\n    \tvar genenameposition = genename\n      \t.attr(\"x\", function (d) {return ((d.stop+d.start)/10)/2})\n      \t.attr(\"y\", function (d) {\n          if (d.direction === \"forward\") {return 90}\n        else if (d.direction === \"reverse\") {return 150}})  \n      \t.transition ().delay (4000)\n      \t.text( function (d) {return d.name})\n      \t.attr(\"font-family\", \"sans-serif\")\n\t\t\t\t.attr(\"font-size\", \"20px\")\n      \t.attr(\"fill\", \"white\")\n\n      \t\n      \n\t\t\tvar rectAttributes = rects\n  \t    .attr(\"x\", function (d) { return d.start/10; })\n    \t  .attr(\"y\", function (d) { return 100; })\n      \t.attr(\"height\", function(d) { return 0;})\n      \t.attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      \t.attr(\"fill\", function (d) {\n          if (d.direction === \"forward\") {return \"green\"}\n        else if (d.direction === \"reverse\") {return \"blue\"}})\n      \t.attr(\"stroke\", function(d) { return \"black\";})\n      \t.attr(\"stroke-width\", function (d) { console.log(d.direction); return \"2px\"; })\n       \t//.style({\"fill\":\"green\",\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n   \t\t\t.transition().delay(3000).duration(1000)\n     \t  .attr(\"y\", function (d) {\n          if (d.direction === \"forward\") {return 70}\n        else if (d.direction === \"reverse\") {return 130}})\n       \t.attr(\"height\", function (d) {return 30;});\n\n      });\n    var group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 100, width: \"1px\", height: 15})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 115, width: \"1px\", height: 15})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n  </script>", "description": "genome browser", "created_at": "2016-02-25T15:29:20Z", "updated_at": "2016-02-25T17:14:08Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "AdamBlaine1_01215dfa696fb3ec66f6"}, {"code": "<script>\n\nvar width = 960,\n    height = 960;\n\nvar projection = d3.geo.bonne()\n    .center([0, 27])\n    .scale(220)\n    .translate([width / 2, height / 2])\n    .parallel(90)\n    .precision(0.2);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar graticule = d3.geo.graticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"defs\").append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\nsvg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"fill\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\nd3.json(\"/mbostock/raw/4090846/world-50m.json\", function(error, world) {\n  if (error) throw error;\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n});\n\n</script>", "description": "Werner", "created_at": "2016-02-25T01:57:41Z", "updated_at": "2016-02-25T01:57:45Z", "api": ["d3.geo.bonne", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.json"], "readme": "The [Werner projection](https://en.wikipedia.org/wiki/Werner_projection) is a limiting form of the [Bonne projection](/mbostock/3734313), having its standard parallel at \u00b190\u00b0. It is available as d3.geo.bonne in [d3-geo-projection](https://github.com/d3/d3-geo-projection).\n", "uid": "mbostock_a7ae83252305ed4d54d4"}, {"code": "<script>\n      d3.json(\"blocks.json\", function(err, blocks) {\n        var xf = crossfilter(blocks);\n        var author = xf.dimension(function(d) { return d.userId })\n        var created = xf.dimension(function(d) { return +new Date(d.created_at) })\n        var all = xf.dimension(function(d) { return true });\n        var thumb = xf.dimension(function(d) { return !!d.thumbnail });\n        //thumb.filter(function(d) { return d })\n        //var api = xf.dimension(function(d) { return d.api });\n\n        \n        //var layout = new hilbert()\n        //  .sideLength(9)\n\n        var layout = new grid()\n          .cellWidth(9)\n          .cellHeight(7)\n          .width(938)\n          .margin([1, 1])\n          //.offset([0, 28])\n          .brick(true)\n          \n        \n        //var data = layout.nodes(created.top(1000));\n        var data = layout.nodes(created.top(Infinity));\n        //var data = created.top(Infinity);\n        console.log(\"grid\", data.length)\n        \n        var color = d3.scale.linear()\n          .domain([0, data.length])\n          .range([\"#a8ff60\", \"#0600cc\"])\n          .interpolate(d3.interpolateHcl)\n        \n        var blockdivs = d3.select(\"#blocks\").selectAll(\"div.block\")\n        .data(data)\n        .enter()\n        .append(\"div\").classed(\"block\", true)\n        .style({\n          top: function(d) { return d.y  + \"px\" },\n          left: function(d) { return d.x  + \"px\" },\n          /*\n          \"border\": function(d,i) {\n            return \"1px solid \" + color(i);\n          },*/\n          \"background-color\": function(d,i) {\n            return color(i);\n          }\n        }).on(\"click\", function(d,i) {\n          console.log(d);\n          window.open(\"http://bl.ocks.org/\" + d.data.userId + \"/\" + d.data.id);\n        }).on(\"mouseover\", function(d,i) {\n          // select\n          var desc = d.data.description || \"\";\n          desc = desc.slice(0, 40);\n          if(d3.select(this).style(\"opacity\") == 1)\n            d3.select(\"#hover\").text(desc + \" by: \" + d.data.userId + \" \" + d.data.id)\n        })\n        \n        d3.select(\"#user\").on(\"keydown\", function() {\n          var that = this;\n          setTimeout(function() {\n            var val = that.value.toLowerCase();\n            d3.select(\"#hover\").text(\"\");\n            author.filter(function(d) { \n              return d.toLowerCase().indexOf(val) >= 0;\n\t\t\t\t\t\t})\n            var matched = author.top(Infinity)\n            var ids = matched.map(function(d) { return d.id });\n            \n\t\t\t\t\t\td3.select(\"#blocks\").selectAll(\"div.block\")\n            .transition().duration(400)\n            .style(\"opacity\", 0.1)\n            \n            var filtered = d3.select(\"#blocks\").selectAll(\"div.block\")\n            .filter(function(d) { return ids.indexOf(d.data.id) >= 0 })\n            .transition().duration(100)\n            .style(\"opacity\", 1)\n            \n          }, 10);\n          \n        })\n\n        \n        \n      })\n    </script>", "description": "block wall: filter user", "created_at": "2016-02-24T18:43:28Z", "updated_at": "2016-02-24T18:43:28Z", "api": ["d3.extent", "d3.rebind", "d3.json", "d3.scale.linear", "d3.select"], "readme": "A collection of blocks scanned with [blockscanner](https://github.com/iros/blockscanner) for the [bl.ocksplorer.org](http://bl.ocksplorer.org/) project and further processed with [block-similarity](https://github.com/enjalot/block-similarity).\n\n### Try filtering by some usernames\nmbostock, enjalot, syntagmatic, emeeks, nitaku\n\nIf you don't see any of your blocks here, [add your GitHub username](https://docs.google.com/forms/d/1VdDdycNuqJVw3Ik6-ZLj6v7X9g2vWlw_RCC3RCfD9-I/viewform)  \nIf you need to add thumbnails to your bl.ocks, use [blockbuilder.org](http://blockbuilder.org)\n\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/6ac67b0d8ed673c9aa61'>all the blocks</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/1d679f0322174b65d032'>block wall</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/211bd42857358a60a936'>block wall: thumbnails only</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/7b63fef8ccfbad1f851e'>block wall: filter user</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/64dbd9b7b740ba44462f'>block wall: filter user</a>", "uid": "nguyenbq_295468868e2533b1ac77"}, {"code": "<script>\n\nvar margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (F)\");\n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name; });\n});\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-02-23T23:20:31Z", "updated_at": "2016-02-25T11:37:14Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>", "uid": "junngeronimo_cc8b7c3fa1163d314d06"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 40, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(2000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 40, width: \"1px\", height: 30})\n\t\t\t.transition().duration(2000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y:40, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 55, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    svg.append(\"rect\")\n    \t.attr({x: 50, y: 2, width:250, height:30})\n\t\t\t.style({\"stroke-width\": \"2px\", \"fill\": \"blue\", \"stroke\": \"black\"})\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T17:07:49Z", "updated_at": "2016-02-23T17:07:49Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/BrandonStroud/'>BrandonStroud</a>'s block: <a href='http://bl.ocks.org/BrandonStroud/d5ce25776cb31dde851b'>genome browser</a>", "uid": "BrandonStroud_76e2c83907897fdd7aae"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n var svg = d3.select(\"body\").append(\"svg\")\n    svg.append(\"rect\")\n      .attr({x: 59, y: 10, width: 74, height: 80}) \n    \nd3.json(\"genes.json.txt\", function(error, data) {\n  if (error) throw error});\n\n var jsonCircles = [\n   { \"x_axis\": 30, \"y_axis\": 30, \"radius\": 20, \"color\" : \"green\" },\n   { \"x_axis\": 70, \"y_axis\": 70, \"radius\": 20, \"color\" : \"purple\"},\n   { \"x_axis\": 110, \"y_axis\": 110, \"radius\": 20, \"color\" : \"red\"}];\n \n var svgContainer = d3.select(\"body\").append(\"svg\")\n                                     .attr(\"width\", 200)\n                                     .attr(\"height\", 200);\n \nvar circles = svgContainer.selectAll(\"circle\")\n                          .data(jsonCircles)\n                          .enter()\n                          .append(\"circle\");\n\nvar circleAttributes = circles\n                       .attr(\"cx\", function (d) { return d.x_axis; })\n                       .attr(\"cy\", function (d) { return d.y_axis; })\n                       .attr(\"r\", function (d) { return d.radius; })\n                       .style(\"fill\", function(d) { return d.color; });\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T17:02:38Z", "updated_at": "2016-02-23T17:18:51Z", "api": ["d3.select", "d3.json"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/AdamBlaine1/'>AdamBlaine1</a>'s block: <a href='http://bl.ocks.org/AdamBlaine1/e263c1e6b71ff8fe0976'>genome browser</a>", "uid": "AdamBlaine1_c577bf5492366964735a"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .rangeRound([height, 0]);\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(d3.format(\".2s\"));\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"State\"; }));\n\n  data.forEach(function(d) {\n    var y0 = 0;\n    d.ages = color.domain().map(function(name) { return {name: name, y0: y0, y1: y0 += +d[name]}; });\n    d.total = d.ages[d.ages.length - 1].y1;\n  });\n\n  data.sort(function(a, b) { return b.total - a.total; });\n\n  x.domain(data.map(function(d) { return d.State; }));\n  y.domain([0, d3.max(data, function(d) { return d.total; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Population\");\n\n  var state = svg.selectAll(\".state\")\n      .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"g\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.State) + \",0)\"; });\n\n  state.selectAll(\"rect\")\n      .data(function(d) { return d.ages; })\n    .enter().append(\"rect\")\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.y1); })\n      .attr(\"height\", function(d) { return y(d.y0) - y(d.y1); })\n      .style(\"fill\", function(d) { return color(d.name); });\n\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain().slice().reverse())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\n</script>", "description": "Stacked Bar Chart", "created_at": "2016-02-23T16:41:05Z", "updated_at": "2016-02-23T16:48:29Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max"], "readme": "This stacked bar chart is constructed from a CSV file storing the populations of different states by age group. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding and color encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting#wiki-d3_format) - SI prefix formatting (e.g., \u201c10M\u201d for 10,000,000)\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\nThis example doesn\u2019t use [d3.layout.stack](https://github.com/mbostock/d3/wiki/Stack-Layout) because it\u2019s easy to just stack each state independently via [array.forEach](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/forEach). Here, it makes sense to group the rects by state (column), rather than grouping by age group (series), as you do with a [stacked area chart](../3885211).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3886208'>Stacked Bar Chart</a>", "uid": "mhipley_423ed5ef0cc50fcdff0c"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    \n    \n  \tvar svgContainer = d3.select(\"body\").append(\"svg\")\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.attr(\"width\", genomelength)\n                                    \t\t.attr(\"height\", 30);\n    \n    var rectangles = svgContainer.selectAll(\"rect\")\n                          .data(genes)\n                          .enter()\n                          .append(\"rect\");\n\n\n  </script>", "description": "Genome Ruler", "created_at": "2016-02-23T16:20:08Z", "updated_at": "2016-02-23T16:20:08Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/jpnoll/'>jpnoll</a>'s block: <a href='http://bl.ocks.org/jpnoll/646c80e683c3fdecf5b7'>Genome Ruler</a>\n\nforked from <a href='http://bl.ocks.org/jpnoll/'>jpnoll</a>'s block: <a href='http://bl.ocks.org/jpnoll/1a32a92131723a1cc808'>Genome Ruler</a>", "uid": "jpnoll_e9c7153fca7217c500b2"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:13:25Z", "updated_at": "2016-02-23T16:13:50Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "Rico3734_d2ab6b9c3ee57ed647f4"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:13:14Z", "updated_at": "2016-02-23T16:13:14Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "Rico3734_596bee71fb0e0373f2bd"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:13:04Z", "updated_at": "2016-02-23T16:13:04Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "Rico3734_ce962fd82a6f7c8c1836"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:11:05Z", "updated_at": "2016-02-23T16:11:10Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "dunlapea_f5a3b738d32cf23ee0da"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:10:43Z", "updated_at": "2016-02-23T16:10:43Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/dunlapea/'>dunlapea</a>'s block: <a href='http://bl.ocks.org/dunlapea/f1b2b824bd9cccea57df'>genome browser</a>", "uid": "dunlapea_cb81841a3531e586aa08"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 110, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 110, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 110, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 124, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n   \nvar spacerect = ['gene 1', 'gene 2', 'gene 3'];\n \nvar svgContainer = d3.select(\"body\").append(\"svg\")\n                                     .attr(\"width\", 200)\n                                     .attr(\"height\", 200);\n \nvar rect = svgContainer.selectAll(\"rect\")\n                           .data(spacerect)\n                           .enter()\n                          .append(\"rect\");\nvar rectAttributes = rect\n                       .attr(\"cx\", function (d) { return d; })\n                       .attr(\"cy\", function (d) { return d; })\n                       .style(\"fill\", function(d) {\n                         var returnColor;\n                         if (d === 'gene 1') { returnColor = \"green\";\n                         } else if (d === 'gene 2') { returnColor = \"purple\";\n                         } else if (d === 'gene 3') { returnColor = \"red\"; }\n                         return returnColor;\n                       });\n\n \nvar genes = [\n\t{\n\t\tname: 'gene 1',\n\t\tstart: 50,\n\t\tstop: 300,\n\t\tdirection: \"forward\"\n\t},\n\t{\n\t\tname: 'gene 2',\n\t\tstart: 400,\n\t\tstop: 950,\n\t\tdirection: \"forward\"\n\t},\n\t{\n\t\tname: 'gene 3',\n\t\tstart: 4000,\n\t\tstop: 5550,\n\t\tdirection: \"forward\"\n\t}\n];\n\n\n    \n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:10:31Z", "updated_at": "2016-02-23T17:18:36Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "NgoScope_f5b840a531408aa77ead"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 10, y: 100, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 10, y: 100, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 10, y: 100, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 10, y: 115, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n    var genes = []\n    \n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:10:24Z", "updated_at": "2016-02-23T16:11:54Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "grybnicky_36511a38ee44a254c172"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:10:21Z", "updated_at": "2016-02-23T16:10:21Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "ericamartel_2c7a18c7fe09e8475715"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:10:20Z", "updated_at": "2016-02-23T16:10:20Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "dunlapea_f1b2b824bd9cccea57df"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:10:11Z", "updated_at": "2016-02-23T16:10:12Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "zaccagbj_72570438c3c733a43c7b"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:10:01Z", "updated_at": "2016-02-23T16:10:02Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "ericamartel_7659024aa5a2c74c8de1"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:09:56Z", "updated_at": "2016-02-23T16:09:57Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "grybnicky_974c107a455f3ee4a40d"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:09:50Z", "updated_at": "2016-02-23T16:09:51Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "zaccagbj_3ec06ca5a0c4696e38c0"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 10, y: 100, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 10, y: 100, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 10, y: 100, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 10, y: 115, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n    var genes = []\n    D3.txt \n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:09:48Z", "updated_at": "2016-02-23T16:09:48Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "grybnicky_16ffc82ccdc6275d9e31"}, {"code": "<script>\n    \n    var genes = [\n  {\n    \"x_axis\": 0,\n    \"y_axis\": 180,\n    \"start\": 50, //250\n     \"stop\": 300,\n    \"height\": 20,\n    \"color\" : \"green\"\n   }, {\n    \"x_axis\": 0,\n    \"y_axis\": 180,\n   \"start\": 400, //550\n     \"stop\": 950,\n     \"height\": 20,\n   \"color\" : \"purple\"\n  }, {\n   \"x_axis\": 0,\n   \"y_axis\": 180,\n   \"start\": 4000, //1550\n     \"stop\": 5550,\n    \"height\": 20,\n   \"color\" : \"red\"\n  }\n  ];\n\nvar svgContainer = d3.select(\"body\").append(\"svg\")\n                                    .attr(\"width\", 50000)\n                                    .attr(\"height\", 200);\n    \nvar circles = svgContainer.selectAll(\"rect\")\n                          .data(genes)\n                          .enter()\n                          .append(\"rect\");\n    \n    var makeCircles = circles\n    .attr(\"x\", function (d) { return d.start/10; })\n    .attr(\"y\", function (d) { return d.y_axis; }) \n    .attr(\"width\", function (d) { return d.start-d.stop/10; })\n    .attr(\"height\", function (d) { return d.height; })\n    .style(\"fill\", function(d) { return d.color; });\n\n    \n    var genomelength = 50000;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T16:09:37Z", "updated_at": "2016-02-23T17:17:40Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>", "uid": "diepvf_7e065f7afc9056315fbb"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n\n  </script>", "description": "fresh block", "created_at": "2016-02-23T15:39:03Z", "updated_at": "2016-02-23T16:09:30Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "JohnWall64_1409924ec52bb2867b27"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see!\n    var genomelength = 7800;\n    \n    var tickMarks = {thousand: [], fivehundred: [], onehundred: []};\n    \n\t\tvar genome_positions = [];\n\t\tfor (var i = 1; i <= genomelength; i++) {\n    \tgenome_positions.push(i);\n\t\t}\n    \n    genome_positions.forEach(function(currentValue, index, myArray){\n      if (currentValue % 1000 === 0) {\n        tickMarks.thousand.push(currentValue);\n      }\n      else if (currentValue % 500 === 0) {\n        tickMarks.fivehundred.push(currentValue);\n\n      }\n      else if (currentValue % 100 === 0) {\n        tickMarks.onehundred.push(currentValue);\n      }\n    });    \n    var svg = d3.select(\"body\").append(\"svg\").attr({width:genomelength});\n    svg.append(\"rect\")\n      .attr({x: 0, y: 10, width: (genomelength) / 10, height: 30})\n    \t.style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"});\n      //.style({ fill: \"#a72d1a\"})\n      //.transition().duration(3000).ease(\"bounce\")\n      //.style({ fill: \"#5db9e3\"})\n    \n    console.log(tickMarks);\n    \n\t\tvar group = svg.selectAll(\".a\")\n      .data(tickMarks.thousand)\n      .enter()\n\t    .append(\"g\");\n    group.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 30})\n\t\t\t.transition().duration(3000)\n\t    .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group2 = svg.selectAll(\".b\")\n      .data(tickMarks.fivehundred)\n      .enter()\n\t    .append(\"g\");\n    group2.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 10, width: \"1px\", height: 16})\n     \t.transition().duration(2000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\t\tvar group3 = svg.selectAll(\".c\")\n      .data(tickMarks.onehundred)\n      .enter()\n\t    .append(\"g\");\n    group3.append(\"rect\")\n     \t.style({\"fill\": \"black\"})\n      .attr({x: 0, y: 24, width: \"1px\", height: 16})\n    \t.transition().duration(1000)\n      .attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n\n\n  </script>", "description": "genome browser", "created_at": "2016-02-23T15:34:44Z", "updated_at": "2016-02-23T15:34:44Z", "api": ["d3.select"], "readme": "Genome browser for phamerator.org\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/b8a8fcb885b6840bfde5'>genome browser</a>\n\nforked from <a href='http://bl.ocks.org/mcgovemc/'>mcgovemc</a>'s block: <a href='http://bl.ocks.org/mcgovemc/0c1b97dc48a6096ea7ce'>genome browser</a>", "uid": "mcgovemc_6ab200758a817e8af7cc"}, {"code": "<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height;\n\nvar n = 200,\n    tau = 2 * Math.PI,\n    nodes = d3.range(n).map(function() { return {radius: Math.random() * 8 + 2}; });\n\nvar force = d3.layout.force()\n    .charge(0.5)\n    .gravity(0)\n    .friction(1)\n    .nodes(nodes)\n    .size([width, height])\n    .start();\n\nvar stroke = d3.scale.linear()\n    .domain([0, 1])\n    .range([\"steelblue\", \"brown\"]);\n\nforce.on(\"tick\", function(e) {\n  var q = d3.geom.quadtree(nodes), node, i, vx, vy;\n  context.clearRect(0, 0, width, height);\n  context.lineWidth = 1.5;\n\n  for (i = 0; i < n; ++i) {\n    q.visit(collide(nodes[i]));\n  }\n\n  for (i = 0; i < n; ++i) {\n    node = nodes[i];\n    context.beginPath();\n    context.arc(node.x, node.y, node.radius - 0.75, 0, tau);\n    context.strokeStyle = stroke((vx = node.x - node.px) * vx + (vy = node.y - node.py) * vy);\n    context.stroke();\n  }\n\n  context.beginPath();\n  for (i = 0; i < n; ++i) {\n    node = nodes[i];\n    context.moveTo(node.x, node.y);\n    context.lineTo(node.x + (node.x - node.px) * 3, node.y + (node.y - node.py) * 3);\n  }\n  context.strokeStyle = \"#fff\";\n  context.stroke();\n\n  force.resume();\n});\n\nfunction collide(node) {\n  var r = node.radius + 16,\n      nx1 = node.x - r,\n      nx2 = node.x + r,\n      ny1 = node.y - r,\n      ny2 = node.y + r;\n  return function(quad, x1, y1, x2, y2) {\n    if (quad.point && (quad.point !== node)) {\n      var x = node.x - quad.point.x,\n          y = node.y - quad.point.y,\n          l = Math.sqrt(x * x + y * y),\n          r = node.radius + quad.point.radius;\n      if (l < r) {\n        l = (l - r) / (l * 2);\n        node.x -= x *= l;\n        node.y -= y *= l;\n        quad.point.x += x;\n        quad.point.y += y;\n      }\n    }\n    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n  }\n}\n\n</script>", "description": "N-Body Problem", "created_at": "2016-02-20T01:13:07Z", "updated_at": "2016-05-13T20:13:41Z", "api": ["d3.range", "d3.layout.force", "d3.scale.linear", "d3.geom.quadtree"], "readme": "A recreation of an [earlier Protovis example](https://mbostock.github.io/protovis/ex/nbody.html).\n", "uid": "mbostock_835cf2925ba217821434"}, {"code": "<script>\n\tfunction sliderChange() {\n\t\tvar v = d3.select('input')[0][0].value;\n\n\t\td3.select('label').text(v);\n\n\t\tx.domain([1, v]);\n\t\tredraw();\n\t}\n\n\tfunction redraw() {\n\t\tfakeAxisGroup\n\t\t\t\t.attr(\"class\", \"grid\")\n\t\t\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t\t\t.call(d3.svg.axis().orient('bottom').scale(x).ticks(12))\n\t\t\t\t.selectAll(\".tick\")\n\t\t\t\t.select('line')\n\t\t\t\t.attr('y1', function (d, i) {\n\t\t\t\t\tif ((i + 1) % 4)\n\t\t\t\t\t\treturn -25;\n\t\t\t\t\telse\n\t\t\t\t\t\treturn 0;\n\t\t\t\t})\n\t\t\t\t.attr('y2', function (d, i) {\n\t\t\t\t\tif ((i + 1) % 2)\n\t\t\t\t\t\treturn -18;\n\t\t\t\t\tif ((i + 1) % 4)\n\t\t\t\t\t\treturn 10;\n\t\t\t\t\telse\n\t\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\trealAxisGroup\n\t\t\t\t.attr(\"class\", \"axis\")\n\t\t\t\t.attr(\"transform\", \"translate(0,0)\")\n\t\t\t\t.call(d3.svg.axis().orient('bottom').scale(x).ticks(4).tickSize(18));\n\t}\n\n\tvar margin = {top: 0, right: 10, bottom: 25, left: 10},\n\t\t\twidth = 960 - margin.right - margin.left,\n\t\t\theight = 50 - margin.top - margin.bottom;\n\n\tvar x = d3.scale.linear()\n\t\t\t.domain([1, d3.select('input')[0][0].value])\n\t\t\t.range([0, width]);\n\n\tvar y = d3.scale.linear()\n\t\t\t.range([0, height]);\n\n\tvar svg = d3.select(\"body\").append(\"svg\")\n\t\t\t.attr(\"width\", width + margin.right + margin.left)\n\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\tsvg.append(\"rect\")\n\t\t\t.attr(\"class\", \"grid-background\")\n\t\t\t.attr('y', 0)\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height + 20);\n\n\tvar fakeAxisGroup = svg.append(\"g\");\n\tvar realAxisGroup = svg.append(\"g\");\n\tsliderChange();\n</script>", "description": "Genome Scale", "created_at": "2016-02-18T17:11:07Z", "updated_at": "2016-02-18T17:11:27Z", "api": ["d3.select", "d3.svg.axis", "d3.scale.linear"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "mansfimx_8afdede69a25463716c0"}, {"code": "<script>\n\tfunction sliderChange() {\n\t\tvar v = d3.select('input')[0][0].value;\n\n\t\td3.select('label').text(v);\n\n\t\tx.domain([1, v]);\n\t\tredraw();\n\t}\n\n\tfunction redraw() {\n\t\tfakeAxisGroup\n\t\t\t\t.attr(\"class\", \"grid\")\n\t\t\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t\t\t.call(d3.svg.axis().orient('bottom').scale(x).ticks(12))\n\t\t\t\t.selectAll(\".tick\")\n\t\t\t\t.select('line')\n\t\t\t\t.attr('y1', function (d, i) {\n\t\t\t\t\tif ((i + 1) % 4)\n\t\t\t\t\t\treturn -25;\n\t\t\t\t\telse\n\t\t\t\t\t\treturn 0;\n\t\t\t\t})\n\t\t\t\t.attr('y2', function (d, i) {\n\t\t\t\t\tif ((i + 1) % 2)\n\t\t\t\t\t\treturn -18;\n\t\t\t\t\tif ((i + 1) % 4)\n\t\t\t\t\t\treturn 10;\n\t\t\t\t\telse\n\t\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\trealAxisGroup\n\t\t\t\t.attr(\"class\", \"axis\")\n\t\t\t\t.attr(\"transform\", \"translate(0,0)\")\n\t\t\t\t.call(d3.svg.axis().orient('bottom').scale(x).ticks(4).tickSize(18));\n\t}\n\n\tvar margin = {top: 0, right: 10, bottom: 25, left: 10},\n\t\t\twidth = 960 - margin.right - margin.left,\n\t\t\theight = 50 - margin.top - margin.bottom;\n\n\tvar x = d3.scale.linear()\n\t\t\t.domain([1, d3.select('input')[0][0].value])\n\t\t\t.range([0, width]);\n\n\tvar y = d3.scale.linear()\n\t\t\t.range([0, height]);\n\n\tvar svg = d3.select(\"body\").append(\"svg\")\n\t\t\t.attr(\"width\", width + margin.right + margin.left)\n\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\tsvg.append(\"rect\")\n\t\t\t.attr(\"class\", \"grid-background\")\n\t\t\t.attr('y', 0)\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height + 20);\n\n\tvar fakeAxisGroup = svg.append(\"g\");\n\tvar realAxisGroup = svg.append(\"g\");\n\tsliderChange();\n</script>", "description": "fresh block", "created_at": "2016-02-18T17:06:42Z", "updated_at": "2016-02-18T17:06:43Z", "api": ["d3.select", "d3.svg.axis", "d3.scale.linear"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "Smith5mr_993688a11a5012207c36"}, {"code": "<script>\n\nvar margin = {top: 200, right: 10, bottom: 200, left: 10},\n    width = 960 - margin.right - margin.left,\n    height = 500 - margin.top - margin.bottom;\n\nvar big = d3.scale.linear()\n    .domain([500, 9500])\n    .range([0, width]);\n\n  \nvar y = d3.scale.linear()\n    .range([0, height]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"rect\")\n    .attr(\"class\", \"grid-background\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"grid\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.svg.axis().scale(big).ticks(0).tickSize(-height))\n  .selectAll(\".tick\")\n    .data(big.ticks(10), function(d) { return d; })\n  .exit()\n    .classed(\"minor\", true);\n  \n\nsvg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.svg.axis().scale(big).ticks(10));\n\n</script>", "description": "fresh block", "created_at": "2016-02-18T16:59:18Z", "updated_at": "2016-02-18T16:59:18Z", "api": ["d3.scale.linear", "d3.select", "d3.svg.axis"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/b7a3a7766c546ba8b792'>fresh block</a>", "uid": "lambrex_b52a4c0ad10ca83e8ed2"}, {"code": "<script>\n\nvar margin = {top: 200, right: 30, bottom: 200, left: 10},\n    width = 960 - margin.right - margin.left,\n    height = 420 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .domain([0, 10000])\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([0, height]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"rect\")\n    .attr(\"class\", \"grid-background\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  \t\n\nsvg.append(\"g\")\n    .attr(\"class\", \"grid\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.svg.axis().scale(x).ticks(100).tickSize(-5))\n\t\t\n   \nsvg.append(\"g\")\n    .attr(\"class\", \"grid\")\n    .attr(\"transform\", \"translate(0,10)\")\n    .call(d3.svg.axis().scale(x).ticks(20).tickSize(-10))\n\nsvg.append(\"g\")\n    .attr(\"class\", \"grid\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.svg.axis().scale(x).ticks(10).tickSize(-20))\n  .selectAll(\".tick\")\n    .data(x.ticks(10), function(d) { return d; })\n  .exit()\n    .classed(\"minor\", true);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.svg.axis().scale(x).ticks(0));\n\n</script>", "description": "Ruler", "created_at": "2016-02-18T16:32:40Z", "updated_at": "2016-02-18T17:13:49Z", "api": ["d3.scale.linear", "d3.select", "d3.svg.axis"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "Wanagram_a4a5dbb278ba56f94d98"}, {"code": "<script>\n\nvar margin = {top: 200, right: 10, bottom: 200, left: 10},\n    width = 960 - margin.right - margin.left,\n    height = 452 - margin.top - margin.bottom\n;\n\nvar x = d3.scale.linear()\n    .domain([.05, 0.95])\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([0, height]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\t\t\t;\n\nvar border=1\nvar bordercolor='black';\n  \nsvg.append(\"rect\")\n    .attr(\"class\", \"grid-background\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n\t\t.style(\"stroke\", bordercolor)\n\t\t.style(\"stroke-width\",border);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"grid\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.svg.axis().scale(x).ticks(20).tickSize(-height))\n  .selectAll(\".tick\")\n   .data(x.ticks(10), function(d) { return d; })\n\t\t.exit()\n    .classed(\"minor\", true);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.svg.axis().scale(x).ticks(0));\n\n</script>", "description": "ggplot2-Style Axis", "created_at": "2016-02-18T15:38:52Z", "updated_at": "2016-02-18T16:49:35Z", "api": ["d3.scale.linear", "d3.select", "d3.svg.axis"], "readme": "These axes are styled in the manner of [ggplot2](http://ggplot2.org/), a plotting system for R. Two [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) instances are used: one for the gray grid lines, and one for the black ticks and labels below the bottom of the chart area. The exit selection of a data-join is used to customize the appearance of minor ticks.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4349486'>ggplot2-Style Axis</a>", "uid": "cheneymb_955d61b7d5a8f52a42bb"}, {"code": "<script>\n\nvar margin = {top: 250, right: 20, bottom: 250, left: 20},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar superscript = \"\",\n    formatPower = function(d) { return (d + \"\").split(\"\").map(function(c) { return superscript[c]; }).join(\"\"); };\n\nvar x = d3.scale.log()\n    .domain([1e0, 1e9])\n    .range([0, width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .ticks(10, function(d) { return 10 + formatPower(Math.round(Math.log(d) / Math.LN10)); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\n</script>", "description": "Superscript Format", "created_at": "2016-02-18T15:34:08Z", "updated_at": "2016-02-18T15:34:08Z", "api": ["d3.scale.log", "d3.svg.axis", "d3.select"], "readme": "Perhaps not the best approach due to the inconsistent vertical positioning of \u00b9\u00b2\u00b3 *vs.* the other numbers\u2026 Alternatively, you could use [axis post-selection](/mbostock/6738229) to achieve the same effect.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6738109'>Superscript Format</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/1f1ab0ec1cc8cee5970f'>Superscript Format</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/23e98ddcc9ff35b6517f'>Superscript Format</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/7b807fa90c485937b2ea'>Superscript Format</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/bf6871220d8db6efd10f'>Superscript Format</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/b378b3a76c1e12038c43'>Superscript Format</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/74cc63dc0a9ae18297de'>Superscript Format</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/96a3758777f9bb5e91c6'>Superscript Format</a>", "uid": "ashtonburg_981721947501c7fc2fbc"}, {"code": "<script>\n\nvar margin = {top: 250, right: 20, bottom: 250, left: 20},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar superscript = \"\",\n    formatPower = function(d) { return (d + \"\").split(\"\").map(function(c) { return superscript[c]; }).join(\"\"); };\n\nvar x = d3.scale.log()\n    .domain([1e0, 1e9])\n    .range([0, width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .ticks(10, function(d) { return 10 + formatPower(Math.round(Math.log(d) / Math.LN10)); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\n</script>", "description": "Superscript Format", "created_at": "2016-02-18T15:33:51Z", "updated_at": "2016-02-18T15:33:55Z", "api": ["d3.scale.log", "d3.svg.axis", "d3.select"], "readme": "Perhaps not the best approach due to the inconsistent vertical positioning of \u00b9\u00b2\u00b3 *vs.* the other numbers\u2026 Alternatively, you could use [axis post-selection](/mbostock/6738229) to achieve the same effect.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6738109'>Superscript Format</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/1f1ab0ec1cc8cee5970f'>Superscript Format</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/23e98ddcc9ff35b6517f'>Superscript Format</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/7b807fa90c485937b2ea'>Superscript Format</a>\n\nforked from <a href='http://bl.ocks.org/ashtonburg/'>ashtonburg</a>'s block: <a href='http://bl.ocks.org/ashtonburg/bf6871220d8db6efd10f'>Superscript Format</a>", "uid": "ashtonburg_b378b3a76c1e12038c43"}, {"code": "<script>\n\nvar margin = {top: 250, right: 20, bottom: 250, left: 20},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar superscript = \"\",\n    formatPower = function(d) { return (d + \"\").split(\"\").map(function(c) { return superscript[c]; }).join(\"\"); };\n\nvar x = d3.scale.log()\n    .domain([1e0, 1e9])\n    .range([0, width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .ticks(10, function(d) { return 10 + formatPower(Math.round(Math.log(d) / Math.LN10)); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\n</script>", "description": "Superscript Format", "created_at": "2016-02-18T15:33:21Z", "updated_at": "2016-02-18T15:33:23Z", "api": ["d3.scale.log", "d3.svg.axis", "d3.select"], "readme": "Perhaps not the best approach due to the inconsistent vertical positioning of \u00b9\u00b2\u00b3 *vs.* the other numbers\u2026 Alternatively, you could use [axis post-selection](/mbostock/6738229) to achieve the same effect.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6738109'>Superscript Format</a>", "uid": "dunlapea_54650ee6b4cbf0c03504"}, {"code": "<script>\n var svg = d3.select(\"body\").append(\"svg\").attr(\"height\", 1000);\n d3.json(\"genes.json.txt\", function(error, json) {\n    if (error) return console.warn(error);\n    //console.log(json);\n    svg.attr(\"width\", function (d) {\n      return d3.max(json, function(d) {\n        return d.genomelength/10;\n      })\n    });\n\n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    var phage = svg.selectAll(\".genomes\")\n      .data(json)\n      .enter()\n      .append(\"g\");\n    phage.attr(\"transform\", function(d, i) { return \"translate(0,\" + (100 + (i*225)) + \")\"; });\n\n    phage.append(\"rect\") // background for ruler\n      .attr({x: 0, y: 0, width: function(d) { return d.genomelength/10; }, height: 30})\n      .style({\"stroke-width\": \"2px\", \"fill\": \"white\", \"stroke\": \"black\"})\n      .attr(\"stroke-opacity\", 0)\n      .transition().duration(1000)\n      .attr(\"stroke-opacity\", 1);\n\n    var group = phage.selectAll(\".thousandticks\")\n      .data(function (d) {\n          ticks = [];\n          genome_positions = d3.range(d.genomelength);\n          genome_positions.forEach(function (currentValue, index, myArray) {\n            if (currentValue % 1000 === 0) {\n              ticks.push(currentValue);\n            }\n          });\n          return ticks;\n        }\n      )\n      .enter()\n      .append(\"g\");\n    group.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      //.attr({x: 0, y: 100, width: \"1px\", height: 30})\n      .attr({x: function (d) { return d/10; }, y: 0, width: \"1px\", height: 30})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    group.append(\"text\") // kbp label\n      .attr(\"x\", function(d) {return (d/10) + 3;})\n      .attr(\"y\", 12)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"fill\", \"green\")\n      .style(\"text-anchor\", \"start\")\n      .text(function(d) { return d/1000; })\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    var group2 = phage.selectAll(\".fivehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 500 === 0 & currentValue % 1000 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group2.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function(d) {return d/10;}, y: 0, width: \"1px\", height: 15})\n      .attr({\"fill-opacity\": 0})\n      .transition().duration(1500)\n      .attr({\"fill-opacity\": 1});\n    //.attr(\"transform\", function (d) { return \"translate(\" + d/10 + \",0)\"; });\n    var group3 = phage.selectAll(\".onehundredticks\")\n      .data(function (d) {\n        ticks = [];\n        genome_positions = d3.range(d.genomelength);\n        genome_positions.forEach(function (currentValue, index, myArray) {\n          if (currentValue % 100 === 0 & currentValue % 1000 !== 0 & currentValue % 500 !== 0) {\n            ticks.push(currentValue);\n          }\n        })\n        return ticks;\n      })\n      .enter()\n      .append(\"g\");\n    group3.append(\"rect\")\n      .style({\"fill\": \"black\"})\n      .attr({x: function (d) { return d/10; }, y: 15, width: \"1px\", height: 15})\n      .attr(\"fill-opacity\", 0)\n      .transition().duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene = phage.selectAll(\".genes\")\n      .data(function(d, i) { console.log(i, d); return d.genes;})\n      .enter()\n      .append(\"g\");\n      gene.append(\"rect\")\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return  -70;\n          }\n          else { return -30;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 30;\n          }\n          else { return 60;}\n        }\n      })\n      .attr(\"x\", function (d) {\n        if (d.direction === \"forward\") {\n          return (0 - ((d.stop-d.start)/10)) - 2;\n        }\n        else if (d.direction === \"reverse\") {\n          w = d3.select(\"svg\").style(\"width\");\n          return w;\n        }\n      })\n      .attr(\"height\", function (d) {return 30;})\n      .attr(\"width\", function (d) { return (d.stop-d.start)/10; })\n      .style({\"stroke\":\"black\", \"stroke-width\": \"2px\"})\n      .attr(\"fill\", function (d) {\n        if (d.direction == \"forward\") {\n          return \"green\";\n        }\n        else if (d.direction == \"reverse\") {\n          return \"red\";\n        }\n        else {\n          return \"black\";\n        }\n      })\n      .on(\"mouseover\", function(d) {\n        console.log(d);\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", .9);\n        div\t.html(\"The direction of gene \" + d.name + \" is \" + d.direction)// the text of the tooltip ...\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        div.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n      })\n      .transition().delay(1000).duration(1500)\n      .attr(\"x\", function (d) { return d.start/10; });\n\n      gene.append(\"text\") // gene name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) { // forward and even\n            return -50;\n          }\n          else { return -10;} // forward and odd\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) { // reverse and even\n            return 50;\n          }\n          else { return 80;} //reverse and odd\n        }\n      })\n      .style({\"text-anchor\": \"middle\", \"fill\": \"black\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.name})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(2000).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n    gene.append(\"text\") // pham name\n      .attr(\"x\", function(d) { return ((d.start + d.stop)/2)/10;})\n      .attr(\"y\", function (d) {\n        if (d.direction == \"forward\") {\n          if (d.name % 2 === 0) {\n            return -80;\n          }\n          else { return -40;}\n        }\n        else if (d.direction == \"reverse\") {\n          if (d.name % 2 === 0) {\n            return 80;\n          }\n          else { return 110;}\n        }\n      })\n\n      .style({\"text-anchor\": \"middle\", \"fill\": \"blue\"})\n      .attr(\"font-family\", \"sans-serif\")\n      .text(function(d) {return d.pham})\n      .attr(\"fill-opacity\", 0)\n      .transition().delay(3500).duration(1500)\n      .attr(\"fill-opacity\", 1);\n\n  });\n  </script>", "description": "genome browser", "created_at": "2016-02-18T15:32:17Z", "updated_at": "2016-03-21T00:49:22Z", "api": ["d3.select", "d3.json", "d3.max", "d3.range"], "readme": "Genome browser for phamerator.org", "uid": "scresawn_b8a8fcb885b6840bfde5"}, {"code": "<script>\n\nvar width = 960,\n    height = 550,\n    breaks = 5,\n    legendCopy = 'Hate Groups Per 10m',\n    scales = {},\n    path = d3.geo.path();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nqueue()\n\t.defer(d3.json, \"data.v2.json\")\n\t.defer(d3.csv, \"groups.v2.csv\")\n\t.await(ready)\n\nfunction ready(err, us, groups) {\n  console.log(\"err\", err)\n  console.log(\"us\", us)\n  console.log(\"groups\", groups)\n  var rateById = {};\n  \n  groups.forEach(function(d) {\n    rateById[d[\"id\"]] = +d[\"Per 10m\"]; });\n  \t\n  scales.quantile = d3.scale.quantile()\n    .domain([0, d3.max(d3.values(rateById))])\n    .range([\"#4f5c6d\",\"#77565a\",\"#9d5048\",\"#c54936\",\"#ec4524\"]);\n  scales.jenks = d3.scale.quantile()\n      .domain(ss.jenks(groups.map(function(d) { return +d[\"Per 10m\"]; }), breaks - 1))\n      .range([\"#4f5c6d\",\"#77565a\",\"#9d5048\",\"#c54936\",\"#ec4524\"]);\n\n  var choro = svg.append(\"g\")\n  \t\t.attr(\"transform\", \"translate(0,40)\")\n      .attr(\"class\", \"choro\")\n    .selectAll(\"path\")\n      .data(topojson.object(us, us.objects.states).geometries)\n    .enter().append(\"path\")\n  \t\t.attr(\"id\", function(d) {return d.id})\n      .attr(\"d\", path);\n\n  d3.selectAll('input').on('change', function() {\n      setScale(this.id);\n  });\n  \n  var g = svg.append(\"g\")\n    .attr(\"class\", \"key\")\n    .attr(\"transform\", \"translate(440,20)\");\n\n  var color = d3.scale.quantile()\n    .domain(scales.jenks.quantiles())\n    .range([\"#4f5c6d\",\"#77565a\",\"#9d5048\",\"#c54936\",\"#ec4524\"]);\n  // A position encoding for the key only.\n  var x = d3.scale.linear()\n      .domain([0, d3.max(d3.values(rateById))])\n      .range([0, 400]);\n\n  var xAxis = d3.svg.axis()\n      .scale(x)\n      .orient(\"bottom\")\n      .tickSize(13)\n      .tickValues(color.domain())\n  \n  g.selectAll(\"rect\")\n      .data(color.range().map(function(d, i) {\n        return {\n          x0: i ? x(color.domain()[i - 1]) : x.range()[0],\n          x1: i < color.domain().length ? x(color.domain()[i]) : x.range()[1],\n          z: d\n        };\n      }))\n    .enter().append(\"rect\")\n      .attr(\"height\", 8)\n      .attr(\"x\", function(d) { return d.x0; })\n      .attr(\"width\", function(d) { return d.x1 - d.x0; })\n      .style(\"fill\", function(d) { return d.z; });\n\n  g.call(xAxis).append(\"text\")\n      .attr(\"class\", \"caption\")\n      .attr(\"y\", -6)\n      .text(legendCopy);\n\n  function setScale(s) {\n    choro.style(\"fill\", function(d) { return scales[s](rateById[d.id]); })\n    var breaksArr = (s ===\"jenks\")? scales[s].domain() : scales[s].quantiles()\n  \tcolor = d3.scale.quantile()\n      .domain(breaksArr)\n      .range([\"#4f5c6d\",\"#77565a\",\"#9d5048\",\"#c54936\",\"#ec4524\"]);\n\n    x = d3.scale.linear()\n        .domain([0, d3.max(d3.values(rateById))])\n        .range([0, 400])\n\n    xAxis = d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\")\n        .tickSize(13)\n        .tickValues(color.domain())\n\n    g.selectAll(\"rect\")\n        .data(color.range().map(function(d, i) {\n          return {\n            x0: i ? x(color.domain()[i - 1]) : x.range()[0],\n            x1: i < color.domain().length ? x(color.domain()[i]) : x.range()[1],\n            z: d\n          };\n        }))\n      .transition()\n        .attr(\"x\", function(d) { return d.x0; })\n        .attr(\"width\", function(d) { return d.x1 - d.x0; })\n        .style(\"fill\", function(d) { return d.z; })\n\t\tg.transition().call(xAxis)\n  }\n\n  setScale('jenks');\n}\n\n</script>", "description": "SF Land Use Year Built Jenks With Linear Scale", "created_at": "2016-02-17T22:04:44Z", "updated_at": "2016-05-19T01:41:09Z", "api": ["d3.geo.path", "d3.select", "d3.scale.quantile", "d3.max", "d3.values", "d3.selectAll", "d3.scale.linear", "d3.svg.axis"], "readme": "Demonstrating [jenks natural breaks](http://en.wikipedia.org/wiki/Jenks_natural_breaks_optimization)\nimplemented in [simple-statistics](https://github.com/tmcw/simple-statistics).\n\nRendered by [d3js](http://d3js.org/), based on [an example by Mike Bostock](http://bl.ocks.org/mbostock/4060606).\n\nforked from <a href='http://bl.ocks.org/tmcw/'>tmcw</a>'s block: <a href='http://bl.ocks.org/tmcw/4969184'>Jenks Natural Breaks with simple-statistics and d3</a>\n\nData from the [2016 SF Land Use](https://data.sfgov.org/Housing-and-Buildings/Land-Use/ngem-gcfs) map", "uid": "geraldarthur_54636978ffb349dd4e0b"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x0 = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar x1 = d3.scale.ordinal();\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.ordinal()\n    .range([\"#4e548c\", \"#a09281\", \"#6e8590\", \"#835783\", \"#d88b5e\", \"#ffe970\"]);\n\n\nvar xAxis = d3.svg.axis()\n    .scale(x0)\n    .orient(\"bottom\");\n  \t\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(d3.format(\".2s\"));\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"https://gist.githubusercontent.com/surabhishankar/ac6bce42e328526adde7/raw/b209e67b5f97443c1dd7631e597f067061acce06/data.csv\", function(error, data) {\n  var years = d3.keys(data[0]).filter(function(key) { return key !== \"State\"; });\n\n  data.forEach(function(d) {\n    d.year = years.map(function(name) { return {name: name, value: +d[name]}; });\n  });\n\n  x0.domain(data.map(function(d) { return d.State; }));\n  x1.domain(years).rangeRoundBands([0, x0.rangeBand()]);\n  y.domain([0, d3.max(data, function(d) { return d3.max(d.year, function(d) { return d.value; }); })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n    \n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", -40)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Population\");\n\n  var state = svg.selectAll(\".state\")\n      .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"g\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x0(d.State) + \",0)\"; });\n\n  state.selectAll(\"rect\")\n      .data(function(d) { return d.year; })\n    .enter().append(\"rect\")\n      .attr(\"width\", x1.rangeBand())\n      .attr(\"x\", function(d) { return x1(d.name); })\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); })\n      .style(\"fill\", function(d) { return color(d.name); });\n\n  var legend = svg.selectAll(\".legend\")\n      .data(years.slice())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 21 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 20)\n      .attr(\"width\", 20)\n      .attr(\"height\", 20)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 25)\n      .attr(\"y\", 10)\n      .attr(\"dy\", \".40em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\n</script>", "description": "VI4_1", "created_at": "2016-02-17T05:28:26Z", "updated_at": "2016-02-17T06:45:22Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "surabhishankar_3139b91d478f35c3b0aa"}, {"code": "<script>\n  \n\n\n  \n  \n  var margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 900 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n  d3.select(self.frameElement).style(\"height\", \"1900px\"); \n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n \n    var svg = d3.select(\"#div1\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"medicarefiltered.tsv\", function(error, data) {\n  if (error) throw error;\n  \n  \n\n  data.forEach(function(d) {\n    d.average_submitted_chrg_amt = +d.average_submitted_chrg_amt;\n    d.average_Medicare_payment_amt = +d.average_Medicare_payment_amt;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.average_Medicare_payment_amt; })).nice();\n  y.domain(d3.extent(data, function(d) { return d.average_submitted_chrg_amt; })).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Average Medicare Payment Amt\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Average Submitted Charge Amt\")\n\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n  \t\t.attr(\"r\",5.5)\n  \t\t//.attr(\"r\", function (d) { return d.average_submitted_chrg_amt*0.008; })\n      .attr(\"cx\", function(d) { return x(d.average_Medicare_payment_amt); })\n      .attr(\"cy\", function(d) { return y(d.average_submitted_chrg_amt); })\n      .style(\"fill\", \"blue\");\n\n  \n\n\n});\n    \n    \n    var svg3 = d3.select(\"#div2\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"medicarefiltered.tsv\", function(error, data) {\n  if (error) throw error;\n  \n  \n\n  data.forEach(function(d) {\n    d.average_submitted_chrg_amt = +d.average_submitted_chrg_amt;\n    d.average_Medicare_payment_amt = +d.average_Medicare_payment_amt;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.average_Medicare_payment_amt; })).nice();\n  y.domain(d3.extent(data, function(d) { return d.average_submitted_chrg_amt; })).nice();\n\n  svg3.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Average Medicare Payment Amt\");\n\n  svg3.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Average Submitted Charge Amt\")\n\n  svg3.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n  \t\t//.attr(\"r\",3.5)\n  \t\t.attr(\"r\", function (d) { return d.average_submitted_chrg_amt*0.008; })\n      .attr(\"cx\", function(d) { return x(d.average_Medicare_payment_amt); })\n      .attr(\"cy\", function(d) { return y(d.average_submitted_chrg_amt); })\n      .style(\"fill\", function(d) { return color(d.nppes_provider_state); });\n\n  var legend1 = svg3.selectAll(\".legend1\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(60,\" + i * 20 + \")\"; });\n\n  legend1.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend1.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".25em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n\n});\n    \n var diameter = 500, //max size of the bubbles\n    colors    = d3.scale.category20(); //color category\n\nvar bubble = d3.layout.pack()\n    .sort(null)\n    .size([diameter, diameter])\n    .padding(1.5);\n\nvar svg1 = d3.select(\"#div3\")\n    .append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n    .attr(\"class\", \"bubble\");\n\nd3.tsv(\"medicareavg.tsv\", function(error, data){\n\n    //convert numerical values from strings to numbers\n    data = data.map(function(d){ d.value = +d[\"average_submitted_chrg_amt\"]; return d; });\n\n    //bubbles needs very specific format, convert data to this.\n    var nodes = bubble.nodes({children:data}).filter(function(d) { return !d.children; });\n\n    //setup the chart\n    var bubbles = svg1.append(\"g\")\n        .attr(\"transform\", \"translate(0,0)\")\n        .selectAll(\".bubble\")\n        .data(nodes)\n        .enter();\n\n    //create the bubbles\n    bubbles.append(\"circle\")\n        .attr(\"r\", function(d){ return d.r; })\n        .attr(\"cx\", function(d){ return d.x; })\n        .attr(\"cy\", function(d){ return d.y; })\n        .style(\"fill\", function(d) { return colors(d.nppes_provider_state); });\n\n    //format the text for each bubble\n    bubbles.append(\"text\")\n        .attr(\"x\", function(d){ return d.x; })\n        .attr(\"y\", function(d){ return d.y + 5; })\n        .attr(\"text-anchor\", \"middle\")\n        .text(function(d){ return d[\"average_submitted_chrg_amt\"]; })\n        .style({\n            \"fill\":\"white\", \n            \"font-family\":\"Helvetica Neue, Helvetica, Arial, san-serif\",\n            \"font-size\": \"12px\"\n        });\n   var legend = svg1.selectAll(\".legend\")\n      .data(colors.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(60,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", colors);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".25em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n  \n  \n})\n    \n</script>", "description": "v4", "created_at": "2016-02-14T05:40:20Z", "updated_at": "2016-02-15T23:03:38Z", "api": ["d3.select", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.tsv", "d3.extent", "d3.scale.category20", "d3.layout.pack"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nData is obtained from the medicare website cms.gov\n\n(https://www.cms.gov/Research-Statistics-Data-and-Systems/Statistics-Trends-and-Reports/Medicare-Provider-Charge-Data/Physician-and-Other-Supplier2012.html)\n\nSince the dataset is huge. I have made use of portion of the dataset to represent it in the graph.\n\nDiscriminability is achieved in the following way for each of the graphs.\n\n1. From the first graph, individual items or scatter points can be identified just by looking at it. From this graph, one can identify position of a point on a common scale.\n   However, it is difficult to distinguish to which category every point belongs to which is clearly addressed in the second graph.\n\n2. From the second graph, one can easily distinguish the scatter points belonging to every category using suitable color codes.\n    Eg: Correlation between average submitted charge amount and average medicare payment amount is calculated using scatter plot. \n     From the graph, we can identify the points belonging to every state with a color code.\n\n3. From the third graph, one can easily identify the data based on area and category because in the second graph even though we have distinguished it by\n   sizes, sometimes its hard to identify as the size of certain scatter points are close to each other. Hence the bubble chart is suitable.\n   Eg: Average submitted charge amount of every state is identified based on the size and suitable color code as shown.\n\t\n![scatterplot_magnitude1](https://cloud.githubusercontent.com/assets/17229507/13061760/ef69a110-d407-11e5-9292-4a1798e7ee98.png)\n![scatterplot_2](https://cloud.githubusercontent.com/assets/17229507/13061720/b742c168-d407-11e5-92be-92a9cfb1e62f.png)\n![bubblechart](https://cloud.githubusercontent.com/assets/17229507/13061722/b744bdc4-d407-11e5-95ff-3d3218b7babd.png)", "uid": "sjhavanur_d335d1ea06102c47d653"}, {"code": "<script>\n\nvar margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (F)\");\n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name; });\n});\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-02-12T22:43:23Z", "updated_at": "2016-02-12T22:43:24Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/jeremiahraymond/'>jeremiahraymond</a>'s block: <a href='http://bl.ocks.org/jeremiahraymond/cf3031700f42670dccf6'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/jeremiahraymond/'>jeremiahraymond</a>'s block: <a href='http://bl.ocks.org/jeremiahraymond/97a40f1c0684bc5bd0d5'>Multi-Series Line Chart</a>", "uid": "jeremiahraymond_81d0c04cbd78c95cc674"}, {"code": "<script>\n\nvar margin = {top: 20, right: 50, bottom: 30, left: 80},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"right\")\n\t\t.tickFormat(function(d) {return d + \"\"});\n\nvar line = d3.svg.line()\n    .interpolate(\"linear\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n  \n  y.domain([\n    d3.min(y.domain()) - 5,\n    d3.max(y.domain()) + 5\n  ]);\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n  \t\t.attr(\"transform\", \"translate(\" + width + \", 0)\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"-1.25em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temp (F)\");\n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return color(d.name); });\n  \n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[0]}; })\n      .attr(\"transform\", function(d) { return \"translate(0, \" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", -3)\n  \t\t.attr(\"text-anchor\", \"end\")\n      .attr(\"dy\", \".35em\")\n  \t\t.style(\"fill\", function(d) { return color(d.name);})\n      .text(function(d) { return d.name; });\n});\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-02-12T22:34:54Z", "updated_at": "2016-02-15T04:07:29Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/HelenHChen/'>HelenHChen</a>'s block: <a href='http://bl.ocks.org/HelenHChen/a7b5b1f23019e065d8aa'>Multi-Series Line Chart</a>", "uid": "HelenHChen_d1699c22d0067e4cb2d3"}, {"code": "<script>\n\nvar margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (F)\");\n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n      .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name; });\n});\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-02-12T22:29:22Z", "updated_at": "2016-02-12T22:29:22Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/fengqingli/'>fengqingli</a>'s block: <a href='http://bl.ocks.org/fengqingli/8a6e0ca67f054dd9ef29'>Multi-Series Line Chart</a>", "uid": "fengqingli_a2c2ab6da0a0aa3d8fd1"}, {"code": "<script>\n\nvar margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (F)\");\n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name; });\n});\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-02-12T22:27:41Z", "updated_at": "2016-02-12T22:27:41Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/kiansheik/'>kiansheik</a>'s block: <a href='http://bl.ocks.org/kiansheik/2fbe51dcbc0d27cf897b'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/kiansheik/'>kiansheik</a>'s block: <a href='http://bl.ocks.org/kiansheik/ea72de53eb3daad14f73'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/kiansheik/'>kiansheik</a>'s block: <a href='http://bl.ocks.org/kiansheik/f3e6415f79b078b75fe4'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/kiansheik/'>kiansheik</a>'s block: <a href='http://bl.ocks.org/kiansheik/d3b1e127741d5be5bbc3'>Multi-Series Line Chart</a>", "uid": "kiansheik_fea2240ea499f36b7ec4"}, {"code": "<script>\n\nvar margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (F)\");\n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name; });\n});\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-02-12T22:25:06Z", "updated_at": "2016-02-12T22:25:07Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/kiansheik/'>kiansheik</a>'s block: <a href='http://bl.ocks.org/kiansheik/2fbe51dcbc0d27cf897b'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/kiansheik/'>kiansheik</a>'s block: <a href='http://bl.ocks.org/kiansheik/ea72de53eb3daad14f73'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/kiansheik/'>kiansheik</a>'s block: <a href='http://bl.ocks.org/kiansheik/f3e6415f79b078b75fe4'>Multi-Series Line Chart</a>", "uid": "kiansheik_d3b1e127741d5be5bbc3"}, {"code": "<script>\n\nvar margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (F)\");\n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name; });\n});\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-02-12T22:14:47Z", "updated_at": "2016-02-12T22:14:47Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>", "uid": "kiansheik_2fbe51dcbc0d27cf897b"}, {"code": "<script>\n\nvar alphabet = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(32,\" + (height / 2) + \")\");\n\nfunction update(data) {\n  var t = d3.transition()\n      .duration(750);\n\n  // JOIN new data with old elements.\n  var text = g.selectAll(\"text\")\n    .data(data, function(d) { return d; });\n\n  // EXIT old elements not present in new data.\n  text.exit()\n      .attr(\"class\", \"exit\")\n    .transition(t)\n      .attr(\"y\", 60)\n      .style(\"fill-opacity\", 1e-6)\n      .remove();\n\n  // UPDATE old elements present in new data.\n  text.attr(\"class\", \"update\")\n      .attr(\"y\", 0)\n      .style(\"fill-opacity\", 1)\n    .transition(t)\n      .attr(\"x\", function(d, i) { return i * 32; });\n\n  // ENTER new elements present in new data.\n  text.enter().append(\"text\")\n      .attr(\"class\", \"enter\")\n      .attr(\"dy\", \".35em\")\n      .attr(\"y\", -60)\n      .attr(\"x\", function(d, i) { return i * 32; })\n      .style(\"fill-opacity\", 1e-6)\n      .text(function(d) { return d; })\n    .transition(t)\n      .attr(\"y\", 0)\n      .style(\"fill-opacity\", 1);\n}\n\n// The initial display.\nupdate(alphabet);\n\n// Grab a random sample of letters from the alphabet, in alphabetical order.\nd3.interval(function() {\n  update(d3.shuffle(alphabet)\n      .slice(0, Math.floor(Math.random() * 26))\n      .sort());\n}, 1500);\n\n</script>", "description": "General Update Pattern 4.0 [UNLISTED]", "created_at": "2016-02-12T22:03:31Z", "updated_at": "2016-07-18T12:36:52Z", "api": ["d3.select", "d3.transition", "d3.interval", "d3.shuffle"], "readme": "This example shows improvements to the [transitions API](https://github.com/d3/d3-transition) when using the [General Update Pattern](/mbostock/3808234) in [D3 4.0](https://github.com/mbostock/d3/tree/4). In 4.0, transition timing parameters don\u2019t need to be repeated for the enter, update, and exit selections. Instead, a top-level transition `t` sets the duration, and then subsequent transitions use [*selection*.transition](https://github.com/d3/d3-transition#selection_transition), passing in `t` to inherit timing:\n\n```js\nvar t = d3.transition()\n    .duration(750);\n```\n\nThis fixes a (tiny) bug in the 3.x pattern, where occasionally the transitions would be out of sync by a millisecond or two. However, even without explicitly sharing a transition, D3 4.0 synchronizes transitions via [d3.now](https://github.com/d3/d3-timer#now)!\n\nThis example also uses [d3.interval](https://github.com/d3/d3-timer#interval) to pause transitions when the page is backgrounded. Unlike [setInterval](https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval), this also ensures that the interval and transitions are precisely synchronized.\n", "uid": "mbostock_a8a5baa4c4a470cda598"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {CGO:\"#2ca02c\", FGO:\"#ff7f0e\",COL:\"#9467bd\"}[c]; }\n    \n    // compute total for each state.\n    fData.forEach(function(d){d.total=d.freq.CGO+d.freq.FGO+d.freq.COL;});\n    \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){ return d3.format(\",\")(d[1])})\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.State == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){ return d3.format(\",\")(d[1])})\n                .attr(\"y\", function(d) {return y(d[1])-5; });            \n        }        \n        return hG;\n    }\n\n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.State,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.State,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['CGO','FGO','COL'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.State,d.total];});\n\n    var hG = histoGram(sF), // create the histogram.\n        pC = pieChart(tF), // create the pie-chart.\n        leg= legend(tF);  // create the legend.\n}\n</script>\n\n<script>\nvar freqData=[\n{State:'AETC',freq:{CGO:130, FGO:66, COL:8}}\n,{State:'ACC',freq:{CGO:139, FGO:37, COL:8}}\n,{State:'PACAF',freq:{CGO:85, FGO:29, COL:7}}\n,{State:'AMC',freq:{CGO:81, FGO:28, COL:4}}\n,{State:'USAFE',freq:{CGO:65, FGO:26, COL:5}}\n,{State:'HAF',freq:{CGO:17, FGO:67, COL:10}}\n,{State:'GSC',freq:{CGO:61, FGO:15, COL:4}}\n,{State:'AFPC',freq:{CGO:39, FGO:30, COL:10}}\n,{State:'AFMC',freq:{CGO:46, FGO:9, COL:6}}\n,{State:'AFSPC',freq:{CGO:37, FGO:13, COL:6}}\n,{State:'AFSOC',freq:{CGO:24, FGO:12, COL:1}}\n,{State:'USAFA',freq:{CGO:16, FGO:11, COL:2}}\n,{State:'OTHER',freq:{CGO:84, FGO:125, COL:32}}\n];\n\ndashboard('#dashboard',freqData);\n</script>", "description": "38P Core Dashboard by MAJCOM  and Grade", "created_at": "2016-02-12T20:29:02Z", "updated_at": "2016-07-21T03:21:23Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.format", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.sum"], "readme": "This was an early attempt to make something like dc.js dashboard. Example from bl.ocks.org/NpashaP\n", "uid": "johangithub_c9887b42dcaac09381b5"}, {"code": "<script>\n\nvar margin = {top: 20, right: 80, bottom: 70, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n\t\t.ticks(d3.time.months)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n  \t\t.selectAll(\"text\")\n  \t\t.style(\"text-anchor\",\"end\")\n  \t\t.attr(\"transform\", function(d) {\n    return \"rotate(-45)\"});\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Cases\");\n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name; });\n});\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-02-11T16:29:47Z", "updated_at": "2016-02-11T16:29:48Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/AdamBlaine1/'>AdamBlaine1</a>'s block: <a href='http://bl.ocks.org/AdamBlaine1/6be047ed3c064b505c8f'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/AdamBlaine1/'>AdamBlaine1</a>'s block: <a href='http://bl.ocks.org/AdamBlaine1/d6c5a1923f53a60876ad'>Multi-Series Line Chart</a>", "uid": "AdamBlaine1_7af6f1a2463de9febde0"}, {"code": "<script>\n\nvar margin = {top: 20, right: 80, bottom: 50, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%m/%d/%Y\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\").ticks(24)\n\t\t.tickFormat(d3.time.format(\"%Y-%m-%d\"));\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Total Cases\");\n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name; });\n});\n\n</script>", "description": "fresh block", "created_at": "2016-02-11T16:11:29Z", "updated_at": "2016-02-11T16:11:29Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/2b1e4cc603310e9abc86'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/17567df60d22eed325b4'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/e758727fb4e111fdf045'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/b3f97b9b6a27a2878f5b'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/51cd71f0b6854e57e6a1'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/c55265d611e30e7e95f0'>fresh block</a>", "uid": "lambrex_0514ad3e56d05722f997"}, {"code": "<script>\n\nvar margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (F)\");\n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name; });\n});\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-02-11T16:04:34Z", "updated_at": "2016-02-11T16:04:35Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>", "uid": "thanisata_e817989f31d3ab7bae48"}, {"code": "<script>\n\nvar margin = {top: 20, right: 80, bottom: 70, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n\t\t.ticks(d3.time.months)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.txt\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n  \t\t.selectAll(\"text\")\n  \t\t.style(\"test-anchor\",\"end\")\n  \t\t.attr(\"transform\",function(d){\n     return \"rotate(-45)\"\n            });\n  \t\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Total number of Cases\");\n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name; });\n});\n\n</script>", "description": "fresh block", "created_at": "2016-02-11T15:47:14Z", "updated_at": "2016-02-11T16:35:56Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "thoma2nm_882ceca293eb26143043"}, {"code": "<script>\n\nvar margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%m/%d/%Y\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  var cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: +d[name]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })\n  ]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Total Cases\");\n\n  var city = svg.selectAll(\".city\")\n      .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name; });\n});\n\n</script>", "description": "fresh block", "created_at": "2016-02-11T15:41:46Z", "updated_at": "2016-02-11T15:41:46Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.min", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/lambrex/'>lambrex</a>'s block: <a href='http://bl.ocks.org/lambrex/2b1e4cc603310e9abc86'>fresh block</a>", "uid": "lambrex_17567df60d22eed325b4"}, {"code": "<script>\n\n\n\nw = 500;\nh = 300;\npadding = 30;\nnumDataPoints = 50;\t\t\t\t//Number of dummy data points to create\nxRange = Math.random() * 1000;\t//Max range of new x values\nyRange = Math.random() * 1000;\t//Max range of new y values\ndataset = Array.apply(null, {length: numDataPoints})\n    .map(function () {\n        return [Math.round(Math.random() * xRange),\n            Math.round(Math.random() * yRange)]\n    });\n\n\n//Create scale functions\nxScale = d3.scale.linear()\n    .domain([0, d3.max(dataset, function (d) {\n        return d[0];\n    })])\n    .range([padding, w - padding * 2]);\n\nyScale = d3.scale.linear()\n    .domain([0, d3.max(dataset, function (d) {\n        return d[1];\n    })])\n    .range([h - padding, padding]);\n\nrScale = d3.scale.linear()\n    .domain([0, d3.max(dataset, function (d) {\n        return d[1];\n    })])\n    .range([2, 5]);\n\n\n//Define X axis\nxAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\")\n    .ticks(5);\n//.tickFormat(formatAsPercentage);\n\n//Define Y axis\nyAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\")\n    .ticks(5);\n//.tickFormat(formatAsPercentage);\n\n//Create SVG element\nsvg = d3.select(\"#third\")\n    .append(\"svg\")\n    .attr(\"width\", w)\n    .attr(\"height\", h);\n\n//Create circles\nsvg.selectAll(\"circle\")\n    .data(dataset)\n    .enter()\n    .append(\"circle\")\n    .attr(\"cx\", function (d) {\n        return xScale(d[0]);\n    })\n    .attr(\"cy\", function (d) {\n        return yScale(d[1]);\n    })\n    .attr(\"r\", function (d) {\n        return rScale(d[1]);\n    });\n\n/*\n //Create labels\n svg.selectAll(\"text\")\n .data(dataset)\n .enter()\n .append(\"text\")\n .text(function(d) {\n return d[0] + \",\" + d[1];\n })\n .attr(\"x\", function(d) {\n return xScale(d[0]);\n })\n .attr(\"y\", function(d) {\n return yScale(d[1]);\n })\n .attr(\"font-family\", \"sans-serif\")\n .attr(\"font-size\", \"11px\")\n .attr(\"fill\", \"red\");\n */\n\n//Create X axis\nsvg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .attr(\"transform\", \"translate(0,\" + (h - padding) + \")\")\n    .call(xAxis);\n\n//Create Y axis\nsvg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .attr(\"transform\", \"translate(\" + padding + \",0)\")\n    .call(yAxis);\n//____________________________________________________________________________________________\nw = 500;\nh = 300;\nvar padding = 30;\nvar numDataPoints = 50;\t\t\t\t//Number of dummy data points to create\nvar xRange = Math.random() * 1000;\t//Max range of new x values\nvar yRange = Math.random() * 1000;\t//Max range of new y values\ndataset = Array.apply(null, {length: numDataPoints})\n    .map(function () {\n        return [Math.round(Math.random() * xRange),\n            Math.round(Math.random() * yRange)]\n    });\n\nvar xScale = d3.scale.linear()\n    .domain([0, d3.max(dataset, function (d) {\n        return d[0];\n    })])\n    .range([padding, w - padding * 2]);\n\nvar yScale = d3.scale.linear()\n    .domain([0, d3.max(dataset, function (d) {\n        return d[1];\n    })])\n    .range([h - padding, padding]);\n\nvar rScale = d3.scale.linear()\n    .domain([0, d3.max(dataset, function (d) {\n        return d[1];\n    })])\n    .range([2, 5]);\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\")\n    .ticks(5);\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\")\n    .ticks(5);\nvar svg = d3.select(\"#fourth\")\n    .append(\"svg\")\n    .attr(\"width\", w)\n    .attr(\"height\", h);\n\nsvg.append(\"clipPath\")\n    .attr(\"id\", \"chart-area\")\n    .append(\"rect\")\n    .attr(\"x\", padding)\n    .attr(\"y\", padding)\n    .attr(\"width\", w - padding * 3)\n    .attr(\"height\", h - padding * 2);\n\nsvg.append(\"g\")\n    .attr(\"id\", \"circles\")\n    .attr(\"clip-path\", \"url(#chart-area)\")\n    .selectAll(\"circle\")\n    .data(dataset)\n    .enter()\n    .append(\"circle\")\n    .attr(\"cx\", function (d) {\n        return xScale(d[0]);\n    })\n    .attr(\"cy\", function (d) {\n        return yScale(d[1]);\n    })\n    .attr(\"r\", function (d) {\n        return rScale(d[1]);\n    });\n\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + (h - padding) + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", \"translate(\" + padding + \",0)\")\n    .call(yAxis);\n\nd3.select(\"#fourth\").select(\"p\")\n    .on(\"click\", function () {\n        svg.selectAll(\"circle\")\n            .data(dataset)\n            .transition()\n            .duration(1000)\n            .each(\"start\", function () {\n                d3.select(this)\n                    .attr(\"fill\", \"magenta\")\n                    .attr(\"r\", 6);\n            })\n            .attr(\"cx\", function (d) {\n                return xScale(d[0]);\n            })\n            .attr(\"cy\", function (d) {\n                return yScale(d[1]);\n            })\n            .each(\"end\", function () {\n                d3.select(this)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"fill\", \"black\")\n                    .attr(\"r\", 2);\n            });\n\n\n        svg.select(\".x.axis\")\n            .transition()\n            .duration(1000)\n            .call(xAxis);\n\n        svg.select(\".y.axis\")\n            .transition()\n            .duration(1000)\n            .call(yAxis);\n    });\n    \n    d3.select(self.frameElement).style(\"height\", \"1300px\");\n  </script>", "description": " Visualization Implementation (VI3)", "created_at": "2016-02-09T21:43:21Z", "updated_at": "2016-02-12T01:53:53Z", "api": ["d3.scale.linear", "d3.max", "d3.svg.axis", "d3.select"], "readme": "View on [bl.ocks.org](http://bl.ocks.org/N0taN3rd/ca8a6d89ed7a8cc2d972)\n\nJohn Berlin\n\n1. Transitions can be hard\n2. Domains are tricky\n3. Plotting data is easy with d3", "uid": "N0taN3rd_ca8a6d89ed7a8cc2d972"}, {"code": "<script>\n\t\tvar svg2 = d3.select(\".chart2\")\n            .append(\"svg\")\n            .attr(\"width\", 500)\n            .attr(\"height\", 300);\n\t\tvar star = svg2.append(\"path\")\n\t\t\t.attr(\"transform\", \"translate(100,120)rotate(0)\")\n\t\t\t.style(\"stroke\", \"blue\")\n\t\t\t.style(\"fill\", \"none\")\n\t\t\t.attr(\"d\", \"m 0,-60 l 20,40 l 40,20 l -40,20 l -20,40 l -20,-40 l -40,-20 l 40,-20 z\");\n\t\tfunction transit() {\n\t\tvar button = d3.select(\"button\");\n\t\tif(button.text() ==\"Transit\") { \n\t\t\tstar\n\t\t\t.style(\"fill\", \"white\")\n\t\t\t.transition()\n\t\t\t.duration(1000)\n\t\t\t.style(\"fill\", \"blue\")\n\t\t\t.attr(\"transform\", \"translate(440,120)rotate(180)\")\n\t\t\t.attr(\"d\", \"m 0,-60 l 40,20 l 20,40 l -20,40 l -40,20 l -40,-20 l -20,-40 l 20,-40 z\")\n\t\t\t.each(\"end\",function() { \n\t\t\tsvg2.append(\"circle\")\n\t\t\t.attr(\"cx\", 440)\n\t\t\t.attr(\"cy\", 120)\n\t\t\t.attr(\"r\",250)\n\t\t\t.style(\"fill\", \"green\")\n\t\t\t.style(\"opacity\", \"0\")\n\t\t\t.transition()\n\t\t\t.duration(700)\n\t\t\t.attr(\"r\",0)\n\t\t\t.style(\"fill\", \"yellow\")\n\t\t\t.style(\"opacity\",1)\n\t\t\t.remove();});\n\t\t\td3.select(\"button\").text(\"Reset\");\n\t\t} else {\n\t\t\td3.select(\"button\").text(\"Transit\");\n\t\t\tstar\n\t\t\t.transition()\n\t\t\t.duration(1000)\n\t\t\t.attr(\"transform\", \"translate(100,120)rotate(0)\")\n\t\t\t.style(\"stroke\", \"blue\")\n\t\t\t.style(\"fill\", \"none\")\n\t\t\t.attr(\"d\", \"m 0,-60 l 20,40 l 40,20 l -40,20 l -20,40 l -20,-40 l -40,-20 l 40,-20 z\");\n\t\t}\n\t\t\n\t\t};\n\t\t/*\n\t\tbutton.on(\"click\", function() {\n\t\t\tmySquare.transition().attr(\"x\",320);\n\t\t});*/\n\t\tvar w = 500, h = 300;\n\t\tvar padding = 30;\n\t\t//Dynamic, random dataset\n\t\tvar dataset = [];\n\t\tvar numDataPoints = 50;\n\t\tvar xRange = Math.random() * 1000;\n\t\tvar yRange = Math.random() * 1000;\n\t\tfor (var i = 0; i < numDataPoints; i++) {\n\t\t\tvar newNumber1 = Math.round(Math.random() * xRange);\n\t\t\tvar newNumber2 = Math.round(Math.random() * yRange);\n\t\t\tdataset.push([newNumber1, newNumber2]);\n\t\t}\n\t\tvar xScale = d3.scale.linear()\n                     .domain([0, d3.max(dataset, function(d) { return d[0]; })])\n                     .range([padding, w-padding * 2]);\n\t\tvar yScale = d3.scale.linear()\n                     .domain([0, d3.max(dataset, function(d) { return d[1]; })])\n                     .range([h-padding, padding]);\n\t\tvar rScale = d3.scale.linear()\n                     .domain([0, d3.max(dataset, function(d) { return d[1]; })])\n                     .range([2, 5]);\n\t\t//Create SVG element\n\t\tvar svg = d3.select(\".chart1\")\n            .append(\"svg\")\n            .attr(\"width\", w)\n            .attr(\"height\", h);\n\t\tsvg.selectAll(\"circle\")\n\t\t   .data(dataset)\n\t\t   .enter()\n\t\t   .append(\"circle\")\n\t\t   .attr(\"cx\", function(d) {\n\t\t\t\treturn xScale(d[0]);\n\t\t   })\n\t\t   .attr(\"cy\", function(d) {\n\t\t\t\treturn yScale(d[1]);\n\t\t   })\n\t\t   .attr(\"r\", function(d){\n\t\t\t\treturn rScale(d[1]);\n\t\t   });\n\t\t/*\n\t\tsvg.selectAll(\"text\")\n\t\t   .data(dataset)\n\t\t   .enter()\n\t\t   .append(\"text\")\n\t\t   .text(function(d) {\n\t\t\t\treturn d[0] + \",\" + d[1];\n\t\t   })\n\t\t   .attr(\"x\", function(d) {\n\t\t\t\treturn xScale(d[0]);\n\t\t   })\n\t\t   .attr(\"y\", function(d) {\n\t\t\t\treturn yScale(d[1]);\n\t\t   })\n\t\t   .attr(\"font-family\", \"sans-serif\")\n\t\t   .attr(\"font-size\", \"11px\")\n\t\t   .attr(\"fill\", \"red\");\n\t\t   */\n\t\t//var formatAsPercentage = d3.format(\".1%\");\n\t\tvar xAxis = d3.svg.axis()\n\t\t\t.scale(xScale)\n\t\t\t.orient(\"bottom\")\n\t\t\t.ticks(5);\n\t\t//xAxis.tickFormat(formatAsPercentage);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", \"translate(0,\" + (h - padding) + \")\")\n\t\t\t.call(xAxis);\n\t\t//Define Y axis\n\t\tvar yAxis = d3.svg.axis()\n                  .scale(yScale)\n                  .orient(\"left\")\n                  .ticks(5);\n\t\t//Create Y axis\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", \"translate(\" + padding + \",0)\")\n\t\t\t.call(yAxis);\n\t\t   \n    </script>", "description": "VI3", "created_at": "2016-02-06T22:27:28Z", "updated_at": "2016-02-07T03:16:20Z", "api": ["d3.select", "d3.scale.linear", "d3.max", "d3.format", "d3.svg.axis"], "readme": "Name: Meysam Abolghasemi\n\nThree things that I have learnt: \n\n1) How to generate scatterplot with scale and x and y axis. <br />\n2) How to animate the objects using d3 transition. <br />\n3) How to create path in SVG. \n", "uid": "meysamabl_05f79318b878e5cc2f4b"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\t\n    \n\nd3.tsv(\"graph1-cumulative-reported-cases-all.txt\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.country; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\t\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Cases\");\n  \n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n  \t\t.attr({x: 400, y: 700})\n  \t\t.transition().duration(3000).ease(\"elastic\").attr()\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.country); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n  \n\n});\n  \nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart", "created_at": "2016-02-04T17:12:07Z", "updated_at": "2016-02-04T17:12:07Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/nguyenbq/'>nguyenbq</a>'s block: <a href='http://bl.ocks.org/nguyenbq/2f38a14c707cac4c4132'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/nguyenbq/'>nguyenbq</a>'s block: <a href='http://bl.ocks.org/nguyenbq/257957bc334582b1115e'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/nguyenbq/'>nguyenbq</a>'s block: <a href='http://bl.ocks.org/nguyenbq/9d0c36c4ad5f63fbdafa'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/nguyenbq/'>nguyenbq</a>'s block: <a href='http://bl.ocks.org/nguyenbq/05f859f169dbe3dcbbfe'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/nguyenbq/'>nguyenbq</a>'s block: <a href='http://bl.ocks.org/nguyenbq/b6281fd5f4918686da23'>Bar Chart</a>", "uid": "nguyenbq_cbd685cc1c75046303ae"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    \n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, 1000);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"graph1-cumulative-reported-cases-all.txt\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")  \n    .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n    \t.attr(\"y\", 1000).transition().duration(1000)\n    \t.attr(\"y\", function(d) { return y(d.frequency); })\n \n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n \nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart", "created_at": "2016-02-04T17:12:05Z", "updated_at": "2016-02-04T17:12:05Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/c5d9a583437b19493ba3'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/a7ef0b8473773b3ccda1'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/zaccagbj/'>zaccagbj</a>'s block: <a href='http://bl.ocks.org/zaccagbj/a2db15a154b360c591c7'>Bar Chart</a>", "uid": "zaccagbj_75878caf6912fe6bfe85"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Total Number of Cases\")\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart", "created_at": "2016-02-04T17:10:37Z", "updated_at": "2016-02-04T17:10:37Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/Smith5mr/'>Smith5mr</a>'s block: <a href='http://bl.ocks.org/Smith5mr/4082de18058c055efe84'>Bar Chart</a>", "uid": "Smith5mr_13ea59d2d6a615a0f7df"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart", "created_at": "2016-02-04T17:09:15Z", "updated_at": "2016-02-04T17:09:16Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "uid": "diepvf_2436efd44fc8f9cb646e"}, {"code": "<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\");\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = canvas.width - margin.left - margin.right,\n    height = canvas.height - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .rangeRound([0, width])\n    .padding(0.1);\n\nvar y = d3.scaleLinear()\n    .rangeRound([height, 0]);\n\ncontext.translate(margin.left, margin.top);\n\nd3.requestTsv(\"cases2.txt\", function(d) {\n  d.frequency = +d.frequency;\n  return d;\n}, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  var yTickCount = 10,\n      yTicks = y.ticks(yTickCount),\n      yTickFormat = y.tickFormat(yTickCount, \"%\");\n\n  context.beginPath();\n  x.domain().forEach(function(d) {\n    context.moveTo(x(d) + x.bandwidth() / 2, height);\n    context.lineTo(x(d) + x.bandwidth() / 2, height + 6);\n  });\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  context.textAlign = \"center\";\n  context.textBaseline = \"top\";\n  x.domain().forEach(function(d) {\n    context.fillText(d, x(d) + x.bandwidth() / 2, height + 6);\n  });\n\n  context.beginPath();\n  yTicks.forEach(function(d) {\n    context.moveTo(0, y(d) + 0.5);\n    context.lineTo(-6, y(d) + 0.5);\n  });\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  context.textAlign = \"right\";\n  context.textBaseline = \"middle\";\n  yTicks.forEach(function(d) {\n    context.fillText(yTickFormat(d), -9, y(d));\n  });\n\n  context.beginPath();\n  context.moveTo(-6.5, 0 + 0.5);\n  context.lineTo(0.5, 0 + 0.5);\n  context.lineTo(0.5, height + 0.5);\n  context.lineTo(-6.5, height + 0.5);\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  context.save();\n  context.rotate(-Math.PI / 2);\n  context.textAlign = \"right\";\n  context.textBaseline = \"top\";\n  context.font = \"bold 10px sans-serif\";\n  context.fillText(\"Frequency\", -10, 10);\n  context.restore();\n\n  context.fillStyle = \"steelblue\";\n  data.forEach(function(d) {\n    context.fillRect(x(d.letter), y(d.frequency), x.bandwidth(), height - y(d.frequency));\n  });\n});\n\n</script>", "description": "Canvas Bar Chart", "created_at": "2016-02-04T17:08:09Z", "updated_at": "2016-02-04T17:08:10Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.requestTsv", "d3.max"], "readme": "A variant of the [simple bar chart](/mbostock/3885304) using [d3-scale](https://github.com/d3/d3-scale) and [d3-request](https://github.com/d3/d3-request) to render to Canvas.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/946ddf8a32b3b660ffd8'>Canvas Bar Chart</a>", "uid": "Ifeanyi-1_591f14d2edbd11dda068"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(1, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\t\n    \n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.country; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\t\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Cases\");\n  \n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n  \t\t.attr({x: 400, y: 700})\n  \t\t.transition().duration(3000).ease(\"elastic\").attr()\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.country); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n  \n\n});\n  \nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart", "created_at": "2016-02-04T17:08:06Z", "updated_at": "2016-02-04T17:08:06Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/nguyenbq/'>nguyenbq</a>'s block: <a href='http://bl.ocks.org/nguyenbq/2f38a14c707cac4c4132'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/nguyenbq/'>nguyenbq</a>'s block: <a href='http://bl.ocks.org/nguyenbq/257957bc334582b1115e'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/nguyenbq/'>nguyenbq</a>'s block: <a href='http://bl.ocks.org/nguyenbq/9d0c36c4ad5f63fbdafa'>Bar Chart</a>", "uid": "nguyenbq_05f859f169dbe3dcbbfe"}, {"code": "<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\");\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = canvas.width - margin.left - margin.right,\n    height = canvas.height - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .rangeRound([0, width])\n    .padding(0.1);\n\nvar y = d3.scaleLinear()\n    .rangeRound([height, 0]);\n\ncontext.translate(margin.left, margin.top);\n\nd3.requestTsv(\"data.tsv\", function(d) {\n  d.frequency = +d.frequency;\n  return d;\n}, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  var yTickCount = 10,\n      yTicks = y.ticks(yTickCount),\n      yTickFormat = y.tickFormat(yTickCount, \"%\");\n\n  context.beginPath();\n  x.domain().forEach(function(d) {\n    context.moveTo(x(d) + x.bandwidth() / 2, height);\n    context.lineTo(x(d) + x.bandwidth() / 2, height + 6);\n  });\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  context.textAlign = \"center\";\n  context.textBaseline = \"top\";\n  x.domain().forEach(function(d) {\n    context.fillText(d, x(d) + x.bandwidth() / 2, height + 6);\n  });\n\n  context.beginPath();\n  yTicks.forEach(function(d) {\n    context.moveTo(0, y(d) + 0.5);\n    context.lineTo(-6, y(d) + 0.5);\n  });\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  context.textAlign = \"right\";\n  context.textBaseline = \"middle\";\n  yTicks.forEach(function(d) {\n    context.fillText(yTickFormat(d), -9, y(d));\n  });\n\n  context.beginPath();\n  context.moveTo(-6.5, 0 + 0.5);\n  context.lineTo(0.5, 0 + 0.5);\n  context.lineTo(0.5, height + 0.5);\n  context.lineTo(-6.5, height + 0.5);\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  context.save();\n  context.rotate(-Math.PI / 2);\n  context.textAlign = \"right\";\n  context.textBaseline = \"top\";\n  context.font = \"bold 10px sans-serif\";\n  context.fillText(\"Frequency\", -10, 10);\n  context.restore();\n\n  context.fillStyle = \"steelblue\";\n  data.forEach(function(d) {\n    context.fillRect(x(d.letter), y(d.frequency), x.bandwidth(), height - y(d.frequency));\n  });\n});\n\n</script>", "description": "Canvas Bar Chart", "created_at": "2016-02-04T17:08:06Z", "updated_at": "2016-02-04T17:08:06Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.requestTsv", "d3.max"], "readme": "A variant of the [simple bar chart](/mbostock/3885304) using [d3-scale](https://github.com/d3/d3-scale) and [d3-request](https://github.com/d3/d3-request) to render to Canvas.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/946ddf8a32b3b660ffd8'>Canvas Bar Chart</a>", "uid": "NgoScope_19e6a6b81b8ae8c93de4"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(14, 1000);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    \n\t\t.attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  \t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Total Cases\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n  \t\t.attr(\"y\", 1000).transition().duration(1000)\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y (d.frequency); })\n  \t\t\n  \n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart", "created_at": "2016-02-04T17:07:05Z", "updated_at": "2016-02-04T17:07:06Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/BDAguila/'>BDAguila</a>'s block: <a href='http://bl.ocks.org/BDAguila/18c2975af798328a528f'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/BDAguila/'>BDAguila</a>'s block: <a href='http://bl.ocks.org/BDAguila/01deb69af82797bd8738'>Bar Chart</a>", "uid": "BDAguila_fc1eca1081329aa55ef7"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Number of Deaths\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n  \t\t.attr(\"y\", (-500))\n  \t\t.transition().duration(1306).ease(\"bounce\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Country Deaths", "created_at": "2016-02-04T17:00:20Z", "updated_at": "2016-02-04T17:00:20Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/Ivanhound/'>Ivanhound</a>'s block: <a href='http://bl.ocks.org/Ivanhound/3f30772f60defc481e2e'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/Ivanhound/'>Ivanhound</a>'s block: <a href='http://bl.ocks.org/Ivanhound/eee40150d1aca64eade4'>Country Deaths</a>\n\nforked from <a href='http://bl.ocks.org/Ivanhound/'>Ivanhound</a>'s block: <a href='http://bl.ocks.org/Ivanhound/69ebb87e6551ba33d36b'>Country Deaths</a>\n\nforked from <a href='http://bl.ocks.org/Ivanhound/'>Ivanhound</a>'s block: <a href='http://bl.ocks.org/Ivanhound/e39c7096c5670b2a5bc2'>Country Deaths</a>", "uid": "Ivanhound_b3110ce49e95c7b2afc2"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"Deaths.txt\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Number of Cases\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")  \n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", \"470\")\n      .attr(\"height\", \"0\")\n      .transition().duration(1000)\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "", "created_at": "2016-02-04T16:44:49Z", "updated_at": "2016-02-04T16:44:49Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/9e3f368898e5fca662f2'></a>\n\nforked from <a href='http://bl.ocks.org/grybnicky/'>grybnicky</a>'s block: <a href='http://bl.ocks.org/grybnicky/2ed04b7552f1ef9f8e0c'></a>", "uid": "grybnicky_165e231864dcafa71551"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); })\n\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart", "created_at": "2016-02-04T15:48:08Z", "updated_at": "2016-02-04T15:48:08Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "uid": "Smith5mr_1733c62207e0bf614f06"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart", "created_at": "2016-02-04T15:48:05Z", "updated_at": "2016-02-04T15:48:07Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/Ifeanyi-1/'>Ifeanyi-1</a>'s block: <a href='http://bl.ocks.org/Ifeanyi-1/2f6b2109243170eb4d0f'>Bar Chart</a>", "uid": "Ifeanyi-1_7d361ee944d5798257fc"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart", "created_at": "2016-02-04T15:25:25Z", "updated_at": "2016-02-04T15:25:27Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "uid": "Smith5mr_3b68e9c28545771802a3"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart", "created_at": "2016-02-04T15:25:04Z", "updated_at": "2016-02-04T15:25:04Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "uid": "grybnicky_9e3f368898e5fca662f2"}, {"code": "<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\");\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = canvas.width - margin.left - margin.right,\n    height = canvas.height - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .rangeRound([0, width])\n    .padding(0.1);\n\nvar y = d3.scaleLinear()\n    .rangeRound([height, 0]);\n\ncontext.translate(margin.left, margin.top);\n\nd3.requestTsv(\"data.tsv\", function(d) {\n  d.frequency = +d.frequency;\n  return d;\n}, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  var yTickCount = 10,\n      yTicks = y.ticks(yTickCount),\n      yTickFormat = y.tickFormat(yTickCount, \"%\");\n\n  context.beginPath();\n  x.domain().forEach(function(d) {\n    context.moveTo(x(d) + x.bandwidth() / 2, height);\n    context.lineTo(x(d) + x.bandwidth() / 2, height + 6);\n  });\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  context.textAlign = \"center\";\n  context.textBaseline = \"top\";\n  x.domain().forEach(function(d) {\n    context.fillText(d, x(d) + x.bandwidth() / 2, height + 6);\n  });\n\n  context.beginPath();\n  yTicks.forEach(function(d) {\n    context.moveTo(0, y(d) + 0.5);\n    context.lineTo(-6, y(d) + 0.5);\n  });\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  context.textAlign = \"right\";\n  context.textBaseline = \"middle\";\n  yTicks.forEach(function(d) {\n    context.fillText(yTickFormat(d), -9, y(d));\n  });\n\n  context.beginPath();\n  context.moveTo(-6.5, 0 + 0.5);\n  context.lineTo(0.5, 0 + 0.5);\n  context.lineTo(0.5, height + 0.5);\n  context.lineTo(-6.5, height + 0.5);\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  context.save();\n  context.rotate(-Math.PI / 2);\n  context.textAlign = \"right\";\n  context.textBaseline = \"top\";\n  context.font = \"bold 10px sans-serif\";\n  context.fillText(\"Frequency\", -10, 10);\n  context.restore();\n\n  context.fillStyle = \"steelblue\";\n  data.forEach(function(d) {\n    context.fillRect(x(d.letter), y(d.frequency), x.bandwidth(), height - y(d.frequency));\n  });\n});\n\n</script>", "description": "Canvas Bar Chart", "created_at": "2016-02-04T15:24:58Z", "updated_at": "2016-02-04T15:24:58Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.requestTsv", "d3.max"], "readme": "A variant of the [simple bar chart](/mbostock/3885304) using [d3-scale](https://github.com/d3/d3-scale) and [d3-request](https://github.com/d3/d3-request) to render to Canvas.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/946ddf8a32b3b660ffd8'>Canvas Bar Chart</a>", "uid": "ashtonburg_2d788f6fbeced724ea6e"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart", "created_at": "2016-02-04T15:24:40Z", "updated_at": "2016-02-04T15:24:40Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "uid": "Darius9_96b39c3c21c18f0ace31"}, {"code": "<script>\n    // http://slavevoyages.org/tast/assessment/estimates.faces\n    d3.tsv(\"slavery.tsv\", function(err, data) {\n      var countries = Object.keys(data[0]).slice(1,7);\n      countries = [\n        \"Portugal\",\n        \"Great Britain\",\n        \"France\",\n        \"Spain\",\n\t\t\t\t\"Netherlands\",\n\t\t\t\t\"U.S.A.\",\n      ]\n      var countryData = {}\n      countries.forEach(function(country) {\n        countryData[country] = data.map(function(d) {\n          return parseInt(d[country].replace(/,/g, ''));\n        })\n      })\n      console.log(countries)\n      console.log(data[0]);\n      var width = 960;\n      var height = 500;\n      \n      var lineHeight = 211;\n      var lineOffset = 21;\n      \n      var chartHeight = 350;\n      \n      var color = d3.scale.ordinal()\n      .domain(d3.range(countries.length))\n      .range([\n        \"#7C938D\",\n        \"#544C36\",\n        \"#BB976E\",\n        \"#A4B284\",\n        \"#5E6560\",\n        \"#7A8868\",\n        \"#9AB7B5\"\n      ])\n\n      \n      var svg = d3.select(\"svg\")\n      .attr({width: width, height: height });\n      \n      var xscale = d3.scale.linear()\n      //.domain(d3.extent(data, function(d) { return +d.year }))\n      .domain([0, data.length])\n      .range([140, width - 20])\n      \n      var yscale = d3.scale.linear()\n      .domain([0, d3.max(countries, function(country) {\n        return d3.max(countryData[country])\n      })])\n      .range([lineHeight, 0])\n      \n      var area = d3.svg.area()\n        .x(function(d,i) { return xscale(i); })\n        .y0(function(d) { return lineHeight; })\n        .y1(function(d) { return yscale(d); })\n        .interpolate(\"basis\")\n\n      var xaxis = svg.selectAll(\"g.year\")\n      .data(data)\n      .enter()\n      .append(\"g\").classed(\"year\", true)\n      .attr({\n        transform: function(d,i) {\n          return \"translate(\" + [xscale(i), chartHeight] + \")\"\n        }\n      })\n      .style({\n        \"display\": function(d,i) { return i % 20 == 0 ? \"\": \"none\" },\n        \"font-size\": \"10px\"\n      })\n      xaxis\n      .append(\"line\").attr({\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: -chartHeight,\n        stroke: \"#f7f7f7\",\n\n      })\n      xaxis\n      .append(\"text\")\n        .text(function(d) { return d.year })\n        .attr(\"transform\", \"rotate(0)translate(-10,12)\")\n      \n      var legend = svg.selectAll(\"g.country\")\n      .data(countries)\n      .enter()\n      .append(\"g\").classed(\"country\", true)\n        .attr(\"transform\", function(d,i) {\n          return \"translate(\" + [20, 205 + i * lineOffset] + \")\";\n        })\n        .style({\n          fill: function(d,i) { return color(i) },\n          \"font-family\": \"Helvetica\"\n        })\n        .append(\"text\")\n      \t.text(function(d) { return d })\n      \n\n      var groups = svg.selectAll(\"g.countries\")\n        .data(countries)\n        .enter().append(\"g\").classed(\"countries\", true)\n        .attr({\n          transform: function(d,i) { return \"translate(\" + [0, i * lineOffset] + \")\" },\n          fill: function(d,i) { return color(i) },\n        })\n      \n      var areas = groups.selectAll(\"path.country\")\n      \t.data(function(d) { return [countryData[d]] })\n      areas\n        .enter()\n        .append(\"path\").classed(\"country\", true)\n        .attr(\"d\", function(d) {\n          return area(d)\n        })\n      \n      \n      \n    })\n  </script>", "description": "slave voyages - embarking", "created_at": "2016-02-02T17:22:16Z", "updated_at": "2016-02-02T17:22:17Z", "api": ["d3.tsv", "d3.scale.ordinal", "d3.range", "d3.select", "d3.scale.linear", "d3.extent", "d3.max", "d3.svg.area"], "readme": "## Slave Voyages - Embarking\n\nThis is an attempt at visualizing the relative scale of the slave trade by country. The data comes from [slavevoyages.org](http://slavevoyages.org/tast/assessment/estimates.faces).\n\nThe visualization is inpsired by the [Mountains-out-of-molehills](http://www.informationisbeautiful.net/visualizations/mountains-out-of-molehills/) visualization. The focus is to communicate the relative scale over time, giving us a sense of activity over time of this attrocious part of our history.\n\n\n\n\n\n\n\n\n\n\n\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/754c7d061c2d0b71be37'>slave voyages - embarking</a>", "uid": "sivartravis_9a5ba3d2f25d1eebc912"}, {"code": "<script>\n//sample based upon: http://www.pryor.com/blog/creating-a-pareto-chart-in-excel/\n//TODO - perhaps add circle \"points\" on the line to match the reference sample\n\n  //Set dimensions\nvar m = {top: 50, right: 50, bottom: 50, left: 50}\n  , h = 500 - m.top - m.bottom\n  , w = 960 - m.left - m.right\n  , barWidth = 5;\n\nvar dataset = null;\n\nd3.csv(\"pareto_data.csv\",function(error,data){\n  if (error) return console.log(error);\n\n  //typecast Amount to #, calculate total, and cumulative amounts\n  var totalAmount = 0;\n  for(var i = 0; i < data.length; i++){\n    data[i].Amount = +data[i].Amount;\n    totalAmount += data[i].Amount;\n    if(i > 0){\n      data[i]['CumulativeAmount'] = data[i].Amount + data[i-1].CumulativeAmount;\n    }else{\n      data[i]['CumulativeAmount'] = data[i].Amount;\n    }\n  }\n  //now calculate cumulative % from the cumulative amounts & total, round %\n  for(var i = 0; i < data.length; i++){\n    data[i]['CumulativePercentage'] = (data[i]['CumulativeAmount'] / totalAmount);\n    data[i]['CumulativePercentage'] = parseFloat(data[i]['CumulativePercentage'].toFixed(2));\n  }\n\n  dataset = data;\n\n  //Axes and scales\n  var xScale = d3.scale.ordinal().rangeRoundBands([0, w], 0.1);\n  xScale.domain(data.map(function(d) { return d.Category; }));\n\n  var yhist = d3.scale.linear()\n                  .domain([0, d3.max(data, function(d) { return d.Amount; })])\n                  .range([h, 0]);\n\n  var ycum = d3.scale.linear().domain([0, 1]).range([h, 0]);\n\n  var xAxis = d3.svg.axis()\n                .scale(xScale)\n                .orient('bottom');\n\n  var yAxis = d3.svg.axis()\n                .scale(yhist)\n                .orient('left');\n\n  var yAxis2 = d3.svg.axis()\n                 .scale(ycum)\n                 .orient('right');\n\n  //Draw svg\n  var svg = d3.select(\"body\").append(\"svg\")\n              .attr(\"width\", w + m.left + m.right)\n              .attr(\"height\", h + m.top + m.bottom)\n              .append(\"g\")\n              .attr(\"transform\", \"translate(\" + m.left + \",\" + m.top + \")\");\n\n  //Draw histogram\n  var bar = svg.selectAll(\".bar\")\n                .data(data)\n                .enter().append(\"g\")\n                .attr(\"class\", \"bar\");\n\n  bar.append(\"rect\")\n      .attr(\"x\", function(d) { return xScale(d.Category); })\n      .attr(\"width\", xScale.rangeBand())\n      .attr(\"y\", function(d) { return yhist(d.Amount); })\n      .attr(\"height\", function(d) { return h - yhist(d.Amount); });\n\n  //Draw CDF line\n  var guide = d3.svg.line()\n                .x(function(d) { return xScale(d.Category); })\n                .y(function(d){ return ycum(d.CumulativePercentage) })\n                .interpolate('basis');\n\n  var line = svg.append('path')\n                .datum(data)\n                .attr('d', guide)\n                .attr('class', 'line');\n\n  //Draw axes\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + h + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Amount\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + [w, 0] + \")\")\n      .call(yAxis2)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 4)\n      .attr(\"dy\", \"-.71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Cumulative %\");\n});\n</script>", "description": "d3 Pareto Chart Example", "created_at": "2016-02-01T01:35:13Z", "updated_at": "2016-02-01T01:37:13Z", "api": ["d3.csv", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.select", "d3.svg.line"], "readme": "", "uid": "daluu_d43ec5e610dd5dedbbe1"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 50, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar xValue = function(d) { return d.Year; }, // data -> value\n    xScale = d3.scale.ordinal().rangeRoundBands([0, width], .1), // value -> display\n    xMap = function(d) { return xScale(xValue(d)); }, // data -> display\n    xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\nvar yValue = function(d) { return d.DogsEaten; }, // data -> value\n    yScale = d3.scale.linear().range([height, 0]), // value -> display\n    yMap = function(d) { return yScale(yValue(d)); }, // data -> display\n    yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  xScale.domain(data.map(xValue)); // data.map(xValue) returns an array of years\n  yScale.domain([0, d3.max(data, yValue)]);\n\n// Note: domain for ordinal needs to be the whole range, not just min/max\n\n  console.log (\"data.map(xValue) = \", data.map(xValue));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"x\", margin.left + 20)\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Dogs Eaten\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", xMap)\n      .attr(\"width\", xScale.rangeBand)\n      .attr(\"y\", yMap)\n      .attr(\"height\", function(d) { return height - yMap(d); })\n      .attr(\"style\", function(d) {if (d.NewRecord == 1) return \"fill:green\";})\n      .attr(\"debug\", function (d) {console.log(d); \n      console.log(\"x data = \", xValue(d)); \n      console.log(\"x pixel = \", xMap(d)); \n      console.log(\"y data = \", yValue(d)); \n      console.log(\"y pixel = \", yMap(d)); \n      console.log(\"width = \", xScale.rangeBand(d));\n      });\n});\n\nfunction type(d) {\n  d.DogsEaten = +d.DogsEaten;  // change string into number format\n  return d;\n}\n\n</script>", "description": "Bar chart practice", "created_at": "2016-01-30T14:19:53Z", "updated_at": "2016-01-30T14:31:37Z", "api": ["d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.select", "d3.csv", "d3.max"], "readme": "My notes\n\n* Using [Nathan's Hot Dog Contest datafile](http://datasets.flowingdata.com/hot-dog-contest-winners.csv) from flowingdata.com\n* Changing tsv to csv to read in datafile w/o modification\n\nEdit of [mbostock's DRY Bar Chart](http://gist.github.com/mbostock/5977197)\n> A variation of the [example bar chart](/mbostock/3885304) using a slightly more [D.R.Y. style](http://en.wikipedia.org/wiki/Don't_repeat_yourself). The visual encoding is represented by two functions and their composition:\n\n> * The *value* accessor returns the value (or property) to encode for a given data object.\n> * The *scale* maps this value to a visual display encoding, such as a pixel position.\n> * The *map* function represents the composition *value* \u25cb *scale*, mapping from data to display.\n\n> Inspired by [Andrew Winterman](http://awinterman.github.io/)\u2019s post, [Tooling for the Lazy Programmer: DRYing up D3](http://urbanairship.com/blog/2013/07/11/drying-up-d3).\n\n", "uid": "hungvietdo_7bc52597560fc51e1117"}, {"code": "<script>\n\n      var outerWidth = 960;\n      var outerHeight = 500;\n      var margin = { left: -100, top: 0, right: -100, bottom: 0 };\n\n      var xColumn = \"longitude\";\n      var yColumn = \"latitude\";\n      var rColumn = \"population\";\n      var peoplePerPixel = 50000;\n\n      var innerWidth  = outerWidth  - margin.left - margin.right;\n      var innerHeight = outerHeight - margin.top  - margin.bottom;\n\n      var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\",  outerWidth)\n        .attr(\"height\", outerHeight);\n\n      var zoom = d3.behavior.zoom()\n        .scaleExtent([1, 20])\n        .on(\"zoom\", zoomed);\n\n      var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        .call(zoom);\n\n      var rect = g.append(\"rect\")\n        .attr(\"width\", outerWidth)\n        .attr(\"height\", outerHeight)\n        .style(\"fill\", \"none\")\n        .style(\"pointer-events\", \"all\");\n\n      var container = g.append(\"g\");\n\n      function zoomed(){\n        container.attr(\"transform\", \"translate(\" + d3.event.translate + \")scale(\" + d3.event.scale + \")\");\n      }\n\n      var populationFormat = d3.format(\",\");\n\n      var tip = d3.tip()\n        .attr(\"class\", \"d3-tip\")\n        .offset([-10, 0])\n        .html(function(d) {\n          return d.name + \": \" + populationFormat(d.population);\n        });\n\n      g.call(tip);\n\n      var xScale = d3.scale.linear().range([0, innerWidth]);\n      var yScale = d3.scale.linear().range([innerHeight, 0]);\n      var rScale = d3.scale.sqrt();\n\n      function render(data){\n\n        xScale.domain( d3.extent(data, function (d){ return d[xColumn]; }));\n        yScale.domain( d3.extent(data, function (d){ return d[yColumn]; }));\n        rScale.domain([0, d3.max(data, function (d){ return d[rColumn]; })]);\n\n        // Compute the size of the biggest circle as a function of peoplePerPixel.\n        var peopleMax = rScale.domain()[1];\n        var rMin = 0;\n        var rMax = Math.sqrt(peopleMax / (peoplePerPixel * Math.PI));\n        rScale.range([rMin, rMax]);\n\n        var circles = container.selectAll(\"circle\").data(data);\n        circles.enter().append(\"circle\");\n        circles\n          .attr(\"cx\", function (d){ return xScale(d[xColumn]); })\n          .attr(\"cy\", function (d){ return yScale(d[yColumn]); })\n          .attr(\"r\",  function (d){ return rScale(d[rColumn]); })\n          .on(\"mouseover\", tip.show)\n          .on(\"mouseout\", tip.hide);\n        circles.exit().remove();\n      }\n\n      function type(d){\n        d.latitude = +d.latitude;\n        d.longitude = +d.longitude;\n        d.population = +d.population;\n        return d;\n      }\n\n      d3.csv(\"Soda Taxes Around the World - Soda Taxes Around the World.csv\", type, render);\n\n    </script>", "description": "World City Explorer", "created_at": "2016-01-30T01:39:32Z", "updated_at": "2016-01-30T19:59:48Z", "api": ["d3.select", "d3.behavior.zoom", "d3.format", "d3.tip", "d3.scale.linear", "d3.scale.sqrt", "d3.extent", "d3.max", "d3.csv"], "readme": "This program allows you to explore the world's cities.\n\n * Zoom in and out with the scroll wheel.\n * Pan by dragging.\n * Hover over a city to get its name and population.\n\nEach circle represents a city. Each filled in pixel of a circle represents 50,000 people. When city circles overlap, they appear brighter, so brightness can be interpreted as population density.\n\nThe data comes from [Geonames](https://github.com/curran/data/tree/gh-pages/geonames) and shows only cities with population >100,000.\n\nDraws from:\n\n * [Example 96 of an introductory D3 tutorial](http://curran.github.io/screencasts/introToD3/examples/viewer/#/96)\n * [Using d3-tip to add tooltips to a d3 bar chart](http://bl.ocks.org/Caged/6476579)\n * [d3-tip](https://github.com/caged/d3-tip)\n * [Drag + Zoom example by Mike Bostock](http://bl.ocks.org/mbostock/6123708)\n\nEnjoy exploring!\n\n--Curran, April 2015", "uid": "sheffieldhale_275a6ed8e985b01ed150"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 120, left: 60},\n    margin2 = {top: 410, right: 20, bottom: 50, left: 60},\n    width = 940 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    height2 = 500 - margin2.top - margin2.bottom;\n\nvar parseDate = d3.time.format(\"%b %Y\").parse;\n\nvar x = d3.time.scale().range([0, width]),\n    x2 = d3.time.scale().range([0, width]),\n    y = d3.scale.linear().range([height, 0]),\n    y2 = d3.scale.linear().range([height2, 0]);\n\nvar xAxis = d3.svg.axis().scale(x).orient(\"bottom\"),\n    xAxis2 = d3.svg.axis().scale(x2).orient(\"bottom\"),\n    yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\nvar brush = d3.svg.brush()\n    .x(x2)\n    .on(\"brush\", brushed);\n\nvar area = d3.svg.area()\n    .interpolate(\"monotone\")\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.price); });\n\nvar area2 = d3.svg.area()\n    .interpolate(\"monotone\")\n    .x(function(d) { return x2(d.date); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.price); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom);\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar context = svg.append(\"g\")\n    .attr(\"class\", \"context\")\n    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\nd3.csv(\"sp500.csv\", type, function(error, data) {\n  x.domain(d3.extent(data.map(function(d) { return d.date; })));\n  y.domain([0, d3.max(data.map(function(d) { return d.price; }))]);\n  x2.domain(x.domain());\n  y2.domain(y.domain());\n\n  focus.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n  context.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"x brush\")\n      .call(brush)\n    .selectAll(\"rect\")\n      .attr(\"y\", -6)\n      .attr(\"height\", height2 + 7);\n});\n\nfunction brushed() {\n  x.domain(brush.empty() ? x2.domain() : brush.extent());\n  focus.select(\".area\").attr(\"d\", area);\n  focus.select(\".x.axis\").call(xAxis);\n}\n\nfunction type(d) {\n  d.date = parseDate(d.date);\n  d.price = +d.price;\n  return d;\n}\n\n</script>", "description": "Focus+Context via Brushing", "created_at": "2016-01-29T06:36:18Z", "updated_at": "2016-01-29T06:36:19Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.brush", "d3.svg.area", "d3.select", "d3.csv", "d3.extent", "d3.max"], "readme": "This examples demonstrates how to use D3's brush component to implement focus + context zooming. Click and drag in the small chart below to pan or zoom.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1667367'>Focus+Context via Brushing</a>", "uid": "benduffin_4506b5bf37fab13586f7"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .rangeRound([height, 0]);\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(d3.format(\".2s\"));\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar active_link = \"0\"; //to control legend selections and hover\nvar legendClicked; //to control legend selections\nvar legendClassArray = []; //store legend classes to select bars in plotSingle()\nvar y_orig; //to store original y-posn\n\nd3.csv(\"state_data.csv\", function(error, data) {\n  if (error) throw error;\n\n  color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"State\"; }));\n\n  data.forEach(function(d) {\n    var mystate = d.State; //add to stock code\n    var y0 = 0;\n    //d.ages = color.domain().map(function(name) { return {name: name, y0: y0, y1: y0 += +d[name]}; });\n    d.ages = color.domain().map(function(name) { return {mystate:mystate, name: name, y0: y0, y1: y0 += +d[name]}; });\n    d.total = d.ages[d.ages.length - 1].y1;\n\n  });\n\n  data.sort(function(a, b) { return b.total - a.total; });\n\n  x.domain(data.map(function(d) { return d.State; }));\n  y.domain([0, d3.max(data, function(d) { return d.total; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\");\n      //.text(\"Population\");\n\n  var state = svg.selectAll(\".state\")\n      .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"g\")\n      .attr(\"transform\", function(d) { return \"translate(\" + \"0\" + \",0)\"; });\n      //.attr(\"transform\", function(d) { return \"translate(\" + x(d.State) + \",0)\"; })\n\n  state.selectAll(\"rect\")\n      .data(function(d) {\n        return d.ages; \n      })\n    .enter().append(\"rect\")\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.y1); })\n      .attr(\"x\",function(d) { //add to stock code\n          return x(d.mystate)\n        })\n      .attr(\"height\", function(d) { return y(d.y0) - y(d.y1); })\n      .attr(\"class\", function(d) {\n        classLabel = d.name.replace(/\\s/g, ''); //remove spaces\n        return \"class\" + classLabel;\n      })\n      .style(\"fill\", function(d) { return color(d.name); });\n\n  state.selectAll(\"rect\")\n       .on(\"mouseover\", function(d){\n\n          var delta = d.y1 - d.y0;\n          var xPos = parseFloat(d3.select(this).attr(\"x\"));\n          var yPos = parseFloat(d3.select(this).attr(\"y\"));\n          var height = parseFloat(d3.select(this).attr(\"height\"))\n\n          d3.select(this).attr(\"stroke\",\"blue\").attr(\"stroke-width\",0.8);\n\n          svg.append(\"text\")\n          .attr(\"x\",xPos)\n          .attr(\"y\",yPos +height/2)\n          .attr(\"class\",\"tooltip\")\n          .text(d.name +\": \"+ delta); \n          \n       })\n       .on(\"mouseout\",function(){\n          svg.select(\".tooltip\").remove();\n          d3.select(this).attr(\"stroke\",\"pink\").attr(\"stroke-width\",0.2);\n                                \n        })\n\n\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain().slice().reverse())\n    .enter().append(\"g\")\n      //.attr(\"class\", \"legend\")\n      .attr(\"class\", function (d) {\n        legendClassArray.push(d.replace(/\\s/g, '')); //remove spaces\n        return \"legend\";\n      })\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  //reverse order to match order in which bars are stacked    \n  legendClassArray = legendClassArray.reverse();\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color)\n      .attr(\"id\", function (d, i) {\n        return \"id\" + d.replace(/\\s/g, '');\n      })\n      .on(\"mouseover\",function(){        \n\n        if (active_link === \"0\") d3.select(this).style(\"cursor\", \"pointer\");\n        else {\n          if (active_link.split(\"class\").pop() === this.id.split(\"id\").pop()) {\n            d3.select(this).style(\"cursor\", \"pointer\");\n          } else d3.select(this).style(\"cursor\", \"auto\");\n        }\n      })\n      .on(\"click\",function(d){        \n\n        if (active_link === \"0\") { //nothing selected, turn on this selection\n          d3.select(this)           \n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", 2);\n\n            active_link = this.id.split(\"id\").pop();\n            plotSingle(this);\n\n            //gray out the others\n            for (i = 0; i < legendClassArray.length; i++) {\n              if (legendClassArray[i] != active_link) {\n                d3.select(\"#id\" + legendClassArray[i])\n                  .style(\"opacity\", 0.5);\n              }\n            }\n           \n        } else { //deactivate\n          if (active_link === this.id.split(\"id\").pop()) {//active square selected; turn it OFF\n            d3.select(this)           \n              .style(\"stroke\", \"none\");\n\n            active_link = \"0\"; //reset\n\n            //restore remaining boxes to normal opacity\n            for (i = 0; i < legendClassArray.length; i++) {              \n                d3.select(\"#id\" + legendClassArray[i])\n                  .style(\"opacity\", 1);\n            }\n\n            //restore plot to original\n            restorePlot(d);\n\n          }\n\n        } //end active_link check\n                          \n                                \n      });\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n  function restorePlot(d) {\n\n    state.selectAll(\"rect\").forEach(function (d, i) {      \n      //restore shifted bars to original posn\n      d3.select(d[idx])\n        .transition()\n        .duration(1000)        \n        .attr(\"y\", y_orig[i]);\n    })\n\n    //restore opacity of erased bars\n    for (i = 0; i < legendClassArray.length; i++) {\n      if (legendClassArray[i] != class_keep) {\n        d3.selectAll(\".class\" + legendClassArray[i])\n          .transition()\n          .duration(1000)\n          .delay(750)\n          .style(\"opacity\", 1);\n      }\n    }\n\n  }\n\n  function plotSingle(d) {\n        \n    class_keep = d.id.split(\"id\").pop();\n    idx = legendClassArray.indexOf(class_keep);    \n   \n    //erase all but selected bars by setting opacity to 0\n    for (i = 0; i < legendClassArray.length; i++) {\n      if (legendClassArray[i] != class_keep) {\n        d3.selectAll(\".class\" + legendClassArray[i])\n          .transition()\n          .duration(1000)          \n          .style(\"opacity\", 0);\n      }\n    }\n\n    //lower the bars to start on x-axis\n    y_orig = [];\n    state.selectAll(\"rect\").forEach(function (d, i) {        \n    \n      //get height and y posn of base bar and selected bar\n      h_keep = d3.select(d[idx]).attr(\"height\");\n      y_keep = d3.select(d[idx]).attr(\"y\");\n      //store y_base in array to restore plot\n      y_orig.push(y_keep);\n\n      h_base = d3.select(d[0]).attr(\"height\");\n      y_base = d3.select(d[0]).attr(\"y\");    \n\n      h_shift = h_keep - h_base;\n      y_new = y_base - h_shift;\n\n      //reposition selected bars\n      d3.select(d[idx])\n        .transition()\n        .ease(\"bounce\")\n        .duration(1000)\n        .delay(750)\n        .attr(\"y\", y_new);\n   \n    })    \n   \n  } \n\n});\n\n</script>", "description": "d3js clickable stacked bar chart", "created_at": "2016-01-25T16:30:54Z", "updated_at": "2016-09-26T12:23:08Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max", "d3.selectAll"], "readme": "Clickable legend added to [Mike Bostock's stacked bar chart](http://bl.ocks.org/mbostock/3886208) to select display of an individual category.\nWith help from [yuuniverse4444\u2019s block #8325617](http://bl.ocks.org/yuuniverse4444/8325617).", "uid": "KatiRG_5f168b5c884b1f9c36a5"}, {"code": "<script>\n\t\t////////////////////////////////////////////////////////////\n\t\t//////////////////////// Set-up ////////////////////////////\n\t\t////////////////////////////////////////////////////////////\n\n\t\tvar screenWidth = $(window).innerWidth(),\n\t\t\tscreenHeight = ( $(window).innerHeight() > 160 ? $(window).innerHeight() - 120 : screenWidth );\n\t\t    mobileScreen = (screenWidth > 500 ? false : true);\n\t\n\t\tvar margin = {left: 10, top: 10, right: 10, bottom: 10},\n\t\t\twidth = screenWidth - margin.left - margin.right - 30,\n\t\t\theight = (mobileScreen ? 300 : screenHeight) - margin.top - margin.bottom - 30;\n\t\t\t\n\t\tvar maxSize = Math.min(width, height) / 2,\n\t\t\tdrawDuration = 20;\n\t\t\t\n\t\t//d3.select(\"#rangeSlider\").attr(\"value\", drawDuration);\n\t\t\t\t\t\n\t\tvar svg = d3.select(\"#chart\").append(\"svg\")\n\t\t\t\t\t.attr(\"width\", (width + margin.left + margin.right))\n\t\t\t\t\t.attr(\"height\", (height + margin.top + margin.bottom))\n\t\t\t\t  .append(\"g\").attr(\"class\", \"wrapper\")\n\t\t\t\t\t.attr(\"transform\", \"translate(\" + (width / 2 + margin.left) + \",\" + (height / 2 + margin.top) + \")\");\n\n\t\tvar line = d3.svg.line()\n\t\t\t.x(function(d) { return d.x; })\n\t\t\t.y(function(d) { return d.y; });\n\n\t\t////////////////////////////////////////////////////////////\n\t\t//////////////////// Draw a Spirograph /////////////////////\n\t\t////////////////////////////////////////////////////////////\n\t\tvar colors = [\"#00AC93\", \"#EC0080\", \"#FFE763\"];\t\n\t\tvar numColors = 3;\n\t\tvar startColor = getRandomNumber(0,numColors); //Loop through the colors, but the starting color is random\n\t\t\n\t\tfunction addSpiro(doDash) {\n\t\t\tvar path = svg.append(\"path\")\n\t\t\t\t.attr(\"class\", \"spirograph\")\n\t\t\t\t.attr(\"d\", line(plotSpiroGraph()) )\n\t\t\t\t.style(\"stroke\", colors[startColor]);\n\t\t\t\t//.style(\"stroke\", \"hsla(\" + startColor/numColors * 360 + \", 100%, 50%, \" + 0.9 + \")\");\t\n\t\t\t\t\n\t\t\tvar totalLength = path.node().getTotalLength();\t\n\t\t\t  \n\t\t\tif (doDash) {\n\t\t\t\t//Adjusted from http://stackoverflow.com/questions/24021971/animate-the-drawing-of-a-dashed-svg-line\n\t\t\t\t//The first number specifies the length of the visible part, the dash, the second number specifies the length of the white part\n\t\t\t\tvar dashing = getRandomNumber(1,10) + \", \" + getRandomNumber(1,10);  //Something such as \"6,6\" could happen\n\t\t\t\tconsole.log(\"Dash pattern is: \" + dashing);\n\t\t\t\t//This returns the length of adding all of the numbers in dashing (the length of one pattern in essense)\n\t\t\t\t//So for \"6,6\", for example, that would return 6+6 = 12\n\t\t\t\tvar dashLength = \n\t\t\t\t\tdashing\n\t\t\t\t\t\t.split(/[\\s,]/)\n\t\t\t\t\t\t.map(function (a) { return parseFloat(a) || 0 })\n\t\t\t\t\t\t.reduce(function (a, b) { return a + b });\n\t\t\t\t//How many of these dash patterns will fit inside the entire path?\n\t\t\t    var dashCount = Math.ceil( totalLength / dashLength );\n\t\t\t\t//Create an array that holds the pattern as often so it will fill the entire path\n\t\t\t    var newDashes = new Array(dashCount).join( dashing + \" \" );\n\t\t\t\t//Then add one more dash pattern, namely with a visible part of length 0 (so nothing) and a white part\n\t\t\t\t//that is the same length as the entire path\n\t\t\t\tvar dashArray = newDashes + \" 0, \" + totalLength;\n\t\t\t} else {\n\t\t\t\t//For a solid looking line, create a dash pattern with a visible part and a white part\n\t\t\t\t//that are the same length as the entire path\n\t\t\t\tvar dashArray = totalLength + \" \" + totalLength;\n\t\t\t}\n\t\t\t\n\t\t\t//Animate the path by offsetting the path so all you see is the white last bit of dashArray \n\t\t\t//(which has a length that is the same length as the entire path), and then slowly move this\n\t\t\t//out of the way so the rest of the path becomes visible (the stuff at the start of dashArray)\n\t\t\tpath\n\t\t\t  \t.attr(\"stroke-dasharray\", dashArray)\n\t\t\t  \t.attr(\"stroke-dashoffset\", totalLength)\n\t\t\t  \t.transition().duration(drawDuration * 1000).ease(\"linear\")\n\t\t\t\t.attr(\"stroke-dashoffset\", 0);\n\t\t\t\t\n\t\t}//function addSpiro\n\n\t\t////////////////////////////////////////////////////////////\n\t\t////////////////// Button Activity /////////////////////////\n\t\t////////////////////////////////////////////////////////////\n\n\t\td3.select(\"#addButton\").on(\"click\", function () {\n\t\t\t//Create and draw a spiro\n\t\t\taddSpiro(false);\n\t\t\tstartColor = (startColor+1)%numColors;\n\t\t\t//Make the button inactive again\n\t\t\tsetTimeout( function() { d3.select(\"#addButton\").classed(\"active\", false); }, 200);\n\t\t});\n\t\t\n\t\td3.select(\"#addDashedButton\").on(\"click\", function () {\n\t\t\t//Create and draw a dashed spiro\n\t\t\taddSpiro(true);\n\t\t\tstartColor = (startColor+1)%numColors;\n\t\t\t//Make the button inactive again\n\t\t\tsetTimeout( function() { d3.select(\"#addDashedButton\").classed(\"active\", false); }, 200);\n\t\t});\n\t\t\n\t\td3.select(\"#resetButton\").on(\"click\", function () {\n\t\t\t//Remove all spiros\n\t\t\td3.selectAll(\".spirograph\").remove();\n\t\t\tgetRandomNumber(0,numColors);\n\t\t\t//Make the button inactive again\n\t\t\tsetTimeout( function() { d3.select(\"#resetButton\").classed(\"active\", false); }, 200);\n\t\t});\n\t\t\n\t\tfunction updateSlider(value) {\n\t\t\tdrawDuration = value;\n\t\t}\n\t\t\n\t\t//Start drawing one spirograph after 1 second after reload\n\t\tsetTimeout(function() {\n\t\t\taddSpiro(false);\n\t\t\tstartColor = (startColor+1)%numColors;\n\t\t}, 1000);\n\t\n\t\t////////////////////////////////////////////////////////////\n\t\t////////////////// Spirograph functions ////////////////////\n\t\t////////////////////////////////////////////////////////////\n\t\t\t\t\t\t\n        function plotSpiroGraph() {\n            //Function adjusted from: https://github.com/alpha2k/HTML5Demos/blob/master/Canvas/spiroGraph.html\n\t\t\t\n            var R = getRandomNumber(60, maxSize);\n            var r = getRandomNumber(40, (R * 0.75));\n            var alpha = getRandomNumber(25, r);\n            var l = alpha / r;\n            var k = r / R;\n            \n            //Create the x and y coordinates for the spirograph and put these in a variable\n\t\t\tvar lineData = [];\n            for(var theta=1; theta<=20000; theta += 1){\n                var t = ((Math.PI / 180) * theta);\n                var ang = ((l-k)/k) * t;\n                var x = R * ((1-k) * Math.cos(t) + ((l*k) * Math.cos(ang)));\n                var y = R * ((1-k) * Math.sin(t) - ((l*k) * Math.sin(ang)));\n\t\t\t\t\n                lineData.push({x: x, y: y});                               \n            }  \n\t\t\t\n\t\t\t//Output the variables of this spiro         \n\t\t\tconsole.log(\"R: \" + R + \", r: \" + r + \", alpha: \" + alpha + \", l: \" + l + \", k: \" + k);\n\t\t\t\n\t\t\treturn lineData;\n        }\n\t\t\t\t\n        function getRandomNumber(start, end) {\n            return (Math.floor((Math.random() * (end-start))) + start);\n        }\t\n\t\t\n\t\t//iFrame handler\n\t\tvar pymChild = new pym.Child();\n\t\tpymChild.sendHeight();\n\t\t//setTimeout(function() { pymChild.sendHeight(); }, 2000);\n\t\t\n\t</script>", "description": "Spirograph drawer - Animating solid and dashed lines", "created_at": "2016-01-24T18:01:57Z", "updated_at": "2016-06-11T17:00:37Z", "api": ["d3.select", "d3.svg.line", "d3.selectAll"], "readme": "This is a random Spirograph drawing script, used to explain and show how solid and dashed lines can be animated through D3 in my blog [\"Animated (dashed) lines in d3.js with Spirographs\"](http://www.visualcinnamon.com/2016/01/animating-dashed-line-d3.html)\n\nThe shape of the spirograph is random and the optional dash pattern is random as well. You can use the slider to make the animation go faster (which in counter-intuitive form happens when you slide to the left) or slower (when you slide right. See it as number of seconds of the animation, left is low, right is high). Remove all the spirographs to start anew by pressing \u201creset\u201d.", "uid": "nbremer_d7071c6a5a7206701015"}, {"code": "<script>\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n/* \n * value accessor - returns the value to encode for a given data object.\n * scale - maps value to a visual display encoding, such as a pixel position.\n * map function - maps from data value to display value\n * axis - sets up axis\n */ \n\n// setup x \nvar xValue = function(d) { return d.Beg%100;}, // data -> value\n    xScale = d3.scale.linear().range([0, width]), // value -> display\n    xMap = function(d) { return xScale(xValue(d));}, // data -> display\n    xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\n// setup y\nvar yValue = function(d) { return -Math.trunc(d.Beg/100);}, // data -> value\n    yScale = d3.scale.linear().range([height, 0]), // value -> display\n    yMap = function(d) { return yScale(yValue(d));}, // data -> display\n    yAxis = d3.svg.axis().scale(yScale).orient(\"left\").tickValues([-14, -15, -16, -17, -18, -19]).tickFormat(function(d) {\n      return -d;\n    }).tickSize(10,1);\n\nvar colors = [\"#e41a1c\",\"#AAAAAA\",\"#C9A61A\"];\n\n// setup fill color\nvar cValue = function(d) { return d.Result;};\nvar color = function(d) {\n  \n  return colors[+d];\n};\n    //color = d3.scale.category10();\n\n// add the graph canvas to the body of the webpage\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// add the tooltip area to the webpage\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n\n\n// load data\nd3.csv(\"Wars.csv\", function(error, data) {\n\n  // change string (from CSV) into number format\n  data.forEach(function(d) {\n\n    d.Beg = +d.Beg;\n    d.End = +d.End;\n    d.Length = +d.Length;\n    d.Murdered = +d.Murdered;\n    \n  });\n\n  data = data.sort(function(a, b){\n      return b[\"Murdered\"]-a[\"Murdered\"];\n  });\n\n\n  \n  // don't want dots overlapping axis, so add in buffer to data domain\n  //xScale.domain([d3.min(data, xValue)-1, d3.max(data, xValue)+1]);\n  xScale.domain([-1, 101]);\n  yScale.domain([d3.min(data, yValue)-0.5, d3.max(data, yValue)+1]);\n\n  // x-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"\");\n\n  // y-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(0,-10)\")\n      .style(\"stroke-width\",0)\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\"); \n\n  // draw lines\n\n  years = [14,15,16,17,18,19];\n\n  svg.selectAll(\".hlines\")\n    .data(years)\n    .enter()\n    .append(\"line\")\n    .classed(\"hlines\",true)\n    .attr('x1', xScale(-5))\n    .attr('y1',function(d) {\n      return yScale(-d);\n    })\n    .attr('x2',xScale(100))\n    .attr('y2',function(d) {\n      return yScale(-d);\n    });\n\nconsole.log(data);\n  // draw dots\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", function(d) {\n        return 3*d.Murdered;\n      })\n      .style(\"stroke-width\", 0)\n      .attr(\"cx\", xMap)\n      .attr(\"cy\", yMap)\n      .style(\"fill\", function(d) { return color(cValue(d));})\n      .style(\"opacity\",0.5) \n      .on(\"mouseover\", function(d) {\n            d3.select(this).transition().duration(200)\n            .style(\"opacity\", .7);\n          tooltip.transition()\n               .duration(200)\n               .style(\"opacity\", .8);\n          tooltip.html(d.Conflict + \"(\" + d.Beg \n\t        + \"-\" + d.End + \")\" +\"<br/> : \" +Math.trunc(d.Murdered*10000))\n               .style(\"left\", (d3.event.pageX + 5) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        d3.select(this).transition().duration(200)\n            .style(\"opacity\", .5);\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n\n});\n\n</script>", "description": "", "created_at": "2016-01-14T12:59:36Z", "updated_at": "2016-01-14T13:00:54Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.scale.category10", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "", "uid": "foolosopher_0ed409fcb969ad282ccf"}, {"code": "<script>\n\t//DATA\n\nvar cardinals =[{\"year\": 2008, \"offense\": 4, \"defense\": 19},\n             {\"year\": 2009, \"offense\": 14, \"defense\": 20},\n             {\"year\": 2010, \"offense\": 31, \"defense\": 29},\n             {\"year\": 2011, \"offense\": 19, \"defense\": 18},\n             {\"year\": 2012, \"offense\": 32, \"defense\": 12},\n             {\"year\": 2013, \"offense\": 12, \"defense\": 6},\n             {\"year\": 2014, \"offense\": 24, \"defense\": 24},\n             {\"year\": 2015, \"offense\": 1, \"defense\": 5},\n             ];    \n \nvar panthers =[{\"year\": 2008, \"offense\": 10, \"defense\": 18},\n             {\"year\": 2009, \"offense\": 19, \"defense\": 8},\n             {\"year\": 2010, \"offense\": 32, \"defense\": 18},\n             {\"year\": 2011, \"offense\": 7, \"defense\": 28},\n             {\"year\": 2012, \"offense\": 26, \"defense\": 10},\n             {\"year\": 2013, \"offense\": 26, \"defense\": 2},\n             {\"year\": 2014, \"offense\": 16, \"defense\": 10},\n             {\"year\": 2015, \"offense\": 11, \"defense\": 6},\n             ];    \n    \nvar packers =[{\"year\": 2008, \"offense\": 8, \"defense\": 20},\n             {\"year\": 2009, \"offense\": 6, \"defense\": 2},\n             {\"year\": 2010, \"offense\": 9, \"defense\": 5},\n             {\"year\": 2011, \"offense\": 3, \"defense\": 32},\n             {\"year\": 2012, \"offense\": 13, \"defense\": 11},\n             {\"year\": 2013, \"offense\": 3, \"defense\": 25},\n             {\"year\": 2014, \"offense\": 6, \"defense\": 15},\n             {\"year\": 2015, \"offense\": 23, \"defense\": 15},\n             ];  \n    \n    \n  //Tausta-asetukset\n    var margin = {top: 30, right: 20, bottom: 30, left: 30},\n    w = 900 - margin.left - margin.right\n    h = 500 - margin.top - margin.bottom;\n    \n  var svg = d3.select(\"body\")\n  .append(\"svg\")\n  .attr(\"width\", w + margin.left + margin.right)\n  .attr(\"height\", h + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n  //akselisto\n\t\t    \n    var xScale = d3.scale.linear()\n    \t.domain([1,32])\n    \t.range([w, 0])\n    \n    var yScale = d3.scale.linear()\n    \t.domain([1, 32])\n    \t.range([0, h])\n\n    var xAxis = d3.svg.axis()\n\t\t\t.scale(xScale)\n      .orient(\"bottom\")\n      .ticks(32);\n    \n    var yAxis = d3.svg.axis()\n\t\t\t.scale(yScale)\n      .orient(\"left\")\n      .ticks(32);\n\n\t\tsvg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + h + \")\")\n      .call(xAxis);\n    \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(0, 0)\")\n      .call(yAxis);\n    \n //ViivaCardinals\n    \nvar lineFunction = d3.svg.line()\n\t\t\t\t.x(function(d) { return xScale(d.offense); })\n\t\t\t\t.y(function(d) { return yScale(d.defense); })\n\t\t\t\t.interpolate(\"cardinal\");\n    \n\t\tsvg.selectAll(\"#line\")\n    \t\t.data(cardinals)\n    \t\t.enter()\n\t\t\t\t.append(\"path\")\n    \t\t.attr(\"d\", lineFunction(cardinals))\n    \t\t.attr(\"stroke\", \"#A1003E\")\n    \t\t.attr(\"stroke-width\", 1)\n    \t\t.attr(\"fill\", \"none\")\n    \t\t.attr(\"opacity\", 0.1);;\n\n    //ViivaPanthers \n    \nvar lineFunction = d3.svg.line()\n\t\t\t\t.x(function(d) { return xScale(d.offense); })\n\t\t\t\t.y(function(d) { return yScale(d.defense); })\n\t\t\t\t.interpolate(\"cardinal\");\n    \n\t\tsvg.selectAll(\"#line\")\n    \t\t.data(panthers)\n    \t\t.enter()\n\t\t\t\t.append(\"path\")\n    \t\t.attr(\"d\", lineFunction(panthers))\n    \t\t.attr(\"stroke\", \"#009FD7\")\n    \t\t.attr(\"stroke-width\", 1)\n    \t\t.attr(\"fill\", \"none\")\n   \t\t .attr(\"opacity\", 0.1);\n    \n        //ViivaPackers\n    \nvar lineFunction = d3.svg.line()\n\t\t\t\t.x(function(d) { return xScale(d.offense); })\n\t\t\t\t.y(function(d) { return yScale(d.defense); })\n\t\t\t\t.interpolate(\"cardinal\");\n    \n\t\tsvg.selectAll(\"#line\")\n    \t\t.data(packers)\n    \t\t.enter()\n\t\t\t\t.append(\"path\")\n    \t\t.attr(\"d\", lineFunction(packers))\n    \t\t.attr(\"stroke\", \"#003B2A\")\n    \t\t.attr(\"stroke-width\", 1)\n    \t\t.attr(\"fill\", \"none\")\n    \t\t.attr(\"opacity\", 0.1);\n   \n    \n    //PallotCardinals\n    \n    svg.selectAll(\"circle\")\n    \t.data(cardinals)\n    \t.enter()\n    \t.append(\"circle\")\n    \t.attr(\"cx\", function(d) { return xScale(d.offense)})\n    \t.attr(\"cy\", function(d) { return yScale(d.defense)})\n    \t.attr(\"r\", 8)\n    \t.attr(\"fill\", \"white\")\n    \t.attr(\"stroke-width\", 2)\n    \t.attr(\"stroke\", \"#A1003E\")\n    \t.on(\"mouseover\", function(d) { return d3.select(this).attr(\"fill\", \"yellow\");})\n   \t\t.on(\"mouseout\", function(d) { return d3.select(this).attr(\"fill\", \"white\");}); \n    \n    svg.selectAll(\"#labels\")\n    \t.data(cardinals)\n    \t.enter()\n    \t.append(\"text\")\n    \t.text(function(d) { return d.year; })\n    \t.attr(\"x\", function(d) { return xScale(d.offense) + 10; })\n    \t.attr(\"y\", function(d) { return yScale(d.defense) + 5; })\n    \t.attr(\"font-family\", \"sans-serif\");\n     \n    //PallotPanthers\n    \n       svg.selectAll(\"#circle2\")\n    \t.data(panthers)\n    \t.enter()\n    \t.append(\"circle\")\n    \t.attr(\"cx\", function(d) { return xScale(d.offense)})\n    \t.attr(\"cy\", function(d) { return yScale(d.defense)})\n    \t.attr(\"r\", 8)\n    \t.attr(\"fill\", \"white\")\n    \t.attr(\"stroke-width\", 2)\n    \t.attr(\"stroke\", \"#009FD7\")\n    \t.on(\"mouseover\", function(d) { return d3.select(this).attr(\"fill\", \"yellow\");})\n   \t\t.on(\"mouseout\", function(d) { return d3.select(this).attr(\"fill\", \"white\");});\n    \n    svg.selectAll(\"#labels\")\n    \t.data(panthers)\n    \t.enter()\n    \t.append(\"text\")\n    \t.text(function(d) { return d.year; })\n    \t.attr(\"x\", function(d) { return xScale(d.offense) + 10; })\n    \t.attr(\"y\", function(d) { return yScale(d.defense) + 5; })\n    \t.attr(\"font-family\", \"sans-serif\");\n    \n        //PallotPackers\n    \n       svg.selectAll(\"#circle2\")\n    \t.data(packers)\n    \t.enter()\n    \t.append(\"circle\")\n    \t.attr(\"cx\", function(d) { return xScale(d.offense)})\n    \t.attr(\"cy\", function(d) { return yScale(d.defense)})\n    \t.attr(\"r\", 8)\n    \t.attr(\"fill\", \"white\")\n    \t.attr(\"stroke-width\", 2)\n    \t.attr(\"stroke\", \"#003B2A\")\n    \t.on(\"mouseover\", function(d) { return d3.select(this).attr(\"fill\", \"yellow\");})\n   \t\t.on(\"mouseout\", function(d) { return d3.select(this).attr(\"fill\", \"white\");});\n    \n    svg.selectAll(\"#labels\")\n    \t.data(packers)\n    \t.enter()\n    \t.append(\"text\")\n    \t.text(function(d) { return d.year; })\n    \t.attr(\"x\", function(d) { return xScale(d.offense) + 10; })\n    \t.attr(\"y\", function(d) { return yScale(d.defense) + 5; })\n    \t.attr(\"font-family\", \"sans-serif\");\n    \n  </script>", "description": "scatterplot-lines-SAINTS", "created_at": "2016-01-12T17:08:28Z", "updated_at": "2016-01-12T19:25:42Z", "api": ["d3.select", "d3.scale.linear", "d3.svg.axis", "d3.svg.line"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "Sokrates86_1297670a35e6e0841636"}, {"code": "<script>\n   \n    L.mapbox.accessToken = 'pk.eyJ1IjoiZW5qYWxvdCIsImEiOiJjaWhtdmxhNTIwb25zdHBsejk0NGdhODJhIn0.2-F2hS_oTZenAWc0BMf_uw'\n    \n    //Setup our Leaflet map using Mapbox.js\n    var map = L.mapbox.map('map', 'mapbox.pencil', {maxZoom: 18, minZoom: 14})\n    .setView([51.5119112,-0.10000], 15);\n    \n    // Setup our svg layer that we can manipulate with d3\n    var svg = d3.select(map.getPanes().overlayPane)\n      .append(\"svg\");\n    var g = svg.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\");\n    \n    function project(ll) {\n      // our data came from csv, make it Leaflet friendly\n      var a = [+ll.lat, +ll.lon]; \n      // convert it to pixel coordinates\n      var point = map.latLngToLayerPoint(L.latLng(ll))\n      return point;\n    }\n  \n    d3.csv(\"dots.csv\", function(err, data) {\n      var dots = g.selectAll(\"circle.dot\")\n        .data(data)\n      \n      dots.enter().append(\"circle\").classed(\"dot\", true)\n      .attr(\"r\", 1)\n      .style({\n        fill: \"#0082a3\",\n        \"fill-opacity\": 0.6,\n        stroke: \"#004d60\",\n        \"stroke-width\": 1\n      })\n      .transition().duration(1000)\n      .attr(\"r\", 6)\n      \n      \n      function render() {\n        // We need to reposition our SVG and our containing group when the map\n        // repositions via zoom or pan\n        // https://github.com/zetter/voronoi-maps/blob/master/lib/voronoi_map.js\n        var bounds = map.getBounds();\n        var topLeft = map.latLngToLayerPoint(bounds.getNorthWest())\n        var bottomRight = map.latLngToLayerPoint(bounds.getSouthEast())\n        svg.style(\"width\", map.getSize().x + \"px\")\n          .style(\"height\", map.getSize().y + \"px\")\n          .style(\"left\", topLeft.x + \"px\")\n          .style(\"top\", topLeft.y + \"px\");\n        g.attr(\"transform\", \"translate(\" + -topLeft.x + \",\" + -topLeft.y + \")\");\n\n        // We reproject our data with the updated projection from leaflet\n        g.selectAll(\"circle.dot\")\n        .attr({\n          cx: function(d) { return project(d).x},\n          cy: function(d) { return project(d).y},\n        })\n\n      }\n\n      // re-render our visualization whenever the view changes\n      map.on(\"viewreset\", function() {\n        render()\n      })\n      map.on(\"move\", function() {\n        render()\n      })\n\n      // render our initial visualization\n      render()\n    })\n    \n  </script>", "description": "dots on a map: setup", "created_at": "2016-01-11T06:41:14Z", "updated_at": "2016-01-11T06:41:15Z", "api": ["d3.select", "d3.csv"], "readme": "This is a simple setup of Leaflet (via Mapbox) with d3 to show dots on a map. This can serve as a base for many interesting geographically based visualizations\n\nNice overview of using [d3 + Leaflet](http://chriszetter.com/blog/2014/06/15/building-a-voronoi-map-with-d3-and-leaflet/). \nI found this slightly simpler to use than Mike's [classic post](http://bost.ocks.org/mike/leaflet/).\n\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/18cb7a77b2d9de597b86'>dots on a map: setup</a>", "uid": "renecnielsen_744b716f997b2abd2fca"}, {"code": "<script>\n\n  var w = 700,\n      bar_h = 100,    // height of div holding bars\n      bar_top_margin = 30,  // space above top of highest bar\n      bar_padding = 10; // width between bars + padding\n      default_height = 30;  // default height of top bar\n\n  d3.csv(\"foalreg.csv\", function(csv) {\n\n    // load and organise data\n\n    // clean data\n    csv.forEach(function(v) {\n      v.year = parseInt(v.year);\n      v.foals = parseInt(v.foals);\n      v.mares = parseInt(v.mares);\n      v.coverings = parseInt(v.coverings);\n    });\n\n    // create crossfilter\n    var cf = crossfilter(csv);\n\n    // create dimensions\n    cf.county = cf.dimension(function(d) { return d.county; });\n    cf.year = cf.dimension(function(d) { return d.year; });\n    cf.foals = cf.dimension(function(d) { return d.foals; });\n\n    // totals by year\n    var t1 = cf.year.group()\n      .reduceSum(function(d) { return d.foals; })\n      .top(Infinity);\n\n    // convert to an associative array\n    var year_foals = new Array();\n    t1.forEach(function(v) {\n      year_foals[v.key] = v.value;\n    })\n\n    console.log('cf.county.top(3)', cf.county.top(3));\n\n    // load svg map\n    d3.xml(\"ireland.svg\", \"image/svg+xml\", function(xml) {\n      var importedNode = document.importNode(xml.documentElement, true);\n      d3.select(\"div#map\")\n        .each(function() {\n          this.appendChild(importedNode);\n        })\n      drawYearBars(cf);\n      updateChart(cf, 1999);\n    });\n\n    ////////////////////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////////////////////\n\n    function drawYearBars(cf) {\n\n      // create histogram/tabs at top\n      var year_range = [1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011];\n\n      // get a list of the years for which there is data\n      var yrs = cf.year.group()\n        .reduceSum(function(d) { return d.foals; })\n        .top(Infinity)\n      \n      var got_years = new Array();\n\n      yrs.forEach(function(v) {\n          got_years[v.key] = v.value;\n      })\n\n      // scale for histogram\n      var bar_height = d3.scale.linear()\n        .domain([0, d3.max(yrs, function(d) { return d.value; })])\n        .range([0, bar_h]);\n\n      var bar_width = ( w / (year_range.length-1) ) - bar_padding;\n\n      var bar_xpos = d3.scale.linear()\n        .domain([0, year_range.length])\n        .range([0, w]);\n\n      var tabs = d3.select(\"#nav\")\n        .append(\"svg\")\n        .attr(\"width\", w)\n        .attr(\"height\", bar_h + 40);\n\n      tabs.selectAll(\"rect\")\n        .data(year_range)\n        .enter().append(\"rect\")\n        .attr(\"x\", function(d, i) { return bar_xpos(i); })\n        .attr(\"y\", function(d) {\n            if (got_years[d] != undefined) {\n                return bar_h + bar_top_margin - bar_height(got_years[d]);\n            } else {\n                return bar_h + bar_top_margin - default_height;}\n        })\n        .attr(\"height\", function(d) {\n            if (got_years[d] != undefined) {\n                return bar_height(got_years[d]);\n            } else {\n                return default_height;}\n        })\n        .attr(\"width\", bar_width)\n        .attr(\"id\", function(d) { return d; })\n        .attr(\"class\", function(d) {\n            var cls = \"slide\";\n            if (d in got_years) {\n                cls += \" enabled\";\n            }\n            return cls;\n        })\n        .on('mouseover', function() {\n            if (got_years[this.id] != undefined) {\n                d3.select(this).style(\"fill\", \"#6bdd8d\");\n                updateChart(cf, this.id);\n            }\n        })\n        .on(\"mouseout\", function(){\n            if (got_years[this.id] != undefined) {\n                d3.select(this).style(\"fill\", \"rgb(238,238,238)\");\n            }\n        })\n\n      // add year labels\n      tabs.selectAll(\".year_label\")\n        .data(year_range)\n        .enter()\n        .append(\"text\")\n          .text(function(d) { return d; })\n          .attr(\"class\", \"year_label\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"x\", function(d, i) { \n            return bar_xpos(i+1) - (bar_width/2) - (bar_padding/2); \n          })\n          .attr(\"y\", function() { \n            return (bar_h + bar_top_margin - 10 ); \n          });\n\n      // add value labels\n      tabs.selectAll(\".year_total\")\n        .data(year_range)\n        .enter()\n        .append(\"text\")\n        .text(function(d) {\n            if (got_years[d] != undefined) {\n                return got_years[d];\n            } else {\n                return ''}\n        })\n        .attr(\"class\", \"year_total\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", function(d, i) { return bar_xpos(i+1) - (bar_width/2) - (bar_padding/2); })\n        .attr(\"y\", function(d) {\n            if (got_years[d] != undefined) {\n                return bar_h + bar_top_margin - 5 - bar_height(got_years[d] ) ;\n            } else {\n                return 0;}\n        });\n    }\n\n    function updateChart(cf, year) {\n\n      var total_foals,\n          data,\n          t,\n          ext,\n          color,\n          map,\n          countiesRepublic,\n          countiesNI;\n\n      updateMap(cf, year);\n\n      var county_data = cf.foals.top(Infinity);\n      var ext = [0, 900];\n      var county_scale = d3.scale.linear()\n        .domain(ext)\n        .range([0, 150]);\n\n      // show top counties list\n      d3.select(\"#stats\")\n        .selectAll(\"div\")\n        .remove();\n\n      var list = d3.select(\"#stats\")\n        .selectAll(\"div\")\n        .data(county_data)\n\n      list\n        .enter()\n        .append(\"div\")\n        .attr(\"class\", \"county_list\")\n        .attr(\"id\", function(d) { return d.county + d.year;})\n        .text(function(d) {\n            return toProper(d.county); })\n        .call(div_bar);\n      \n      list\n        .exit().remove();\n\n\n      function div_bar() {\n        this\n          .style(\"height\", \"16px\")\n          .style('white-space', 'nowrap') \n          .style(\"width\", function(d) {\n            return county_scale(d.foals)+\"px\";\n          })\n      }\n\n      // put the year selected on the map\n      d3.select(\".big_year\").remove();\n\n      var year = d3.select(\"#ireland\").append(\"text\")\n        .attr(\"class\", \"big_year\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"y\", 490)\n        .attr(\"x\", 360)\n        .text(year);\n\n      setCountyBarMouseoverEvent(cf);\n\n  }\n\n  function updateMap (cf, year) {\n    cf.year.filterExact(year);\n    total_foals = cf.county.group()\n      .reduceSum(function(d) { return d.foals;})\n      .top(Infinity);\n\n    data = cf.county.top(Infinity);\n\n    t = cf.foals.groupAll().value();\n\n    ext = d3.extent(data, function(d) { return d.foals; });\n    ext = [0,1000];\n\n    color = d3.scale.linear()\n      .domain(ext)\n      .range([\"white\", \"green\"]);\n\n    map = d3.select('#map');\n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    ////////////// shade the counties of the Republic of Ireland individually /////////////////\n    ///////////////////////////////////////////////////////////////////////////////////////////\n\n    countiesRepublic = map.selectAll('path.republic')\n      .style('fill', function(d) {    // would normally use attr but svg has used style for fill\n        \n        var clr = \"#fff\";\n        // only look at items in the counties layer\n        if (this.parentNode.id == \"republic\") {\n\n          var county = this.id.toUpperCase();\n\n          data.forEach(function(v, i, ar) {\n              if (v.county == county) {\n                  clr =  color(v.foals)\n              }\n          });\n        }\n        return clr;\n\n      });\n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    /////////////////// shade the counties of Northern Ireland together ///////////////////////\n    ///////////////////////////////////////////////////////////////////////////////////////////\n\n    countiesNI = map.selectAll('path.northernireland')\n      .style('fill', function(d) {    // would normally use attr but svg has used style for fill\n        \n        var clr = \"#fff\";\n        // only look at items in the counties layer\n        if (this.parentNode.id == \"northernireland\") {\n\n          var county = this.id.toUpperCase();\n\n          data.forEach(function(v, i, ar) {\n              if (v.county == \"NORTHERN IRELAND\") {\n                  clr =  color(v.foals)\n              }\n          });\n        }\n        return clr;\n\n      });\n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////////////////////\n\n\n  }\n\n  function setCountyBarMouseoverEvent (cf) {\n    d3.selectAll('div.county_list')\n      .on('mouseover', function(d) {\n        // style the bar gray\n        d3.select(this).style(\"background\", \"rgb(238,238,238)\"); \n\n        cf.county.filter(d.county);\n        updateMap(cf, d.year);\n      })\n      .on(\"mouseout\", function(d) {\n        // style the bar green again\n        d3.select(this).style(\"background\", \"#6bdd8d\");\n\n        var countyID = toProper(d.county);\n        cf.county.filterAll();\n        updateMap(cf, d.year);\n\n      })\n  } //setCountyBarMouseoverEvent\n\n  });\n\n\n  function toProper(str)\n  {\n      return str.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n  }\n</script>", "description": "Sporthorse Foal Registrations II", "created_at": "2016-01-10T07:14:18Z", "updated_at": "2016-06-14T22:26:49Z", "api": ["d3.csv", "d3.xml", "d3.select", "d3.scale.linear", "d3.max", "d3.extent", "d3.selectAll"], "readme": "an **iteration** on [Sporthorse Foal Registrations](http://bl.ocks.org/phoebebright/3878819) by [phoebebright](http://bl.ocks.org/phoebebright)\n\nan **example** of using [d3](http://d3js.org/) + [crossfilter](http://square.github.io/crossfilter/) together to make an svg map with linked bar charts\n\nthese **additions** and **modifications** were made made along the way:\n\n- format code so that it's comfortable for me\n- comment out the title on the page, and use the text for the title of the bl.ock\n- set `.style('white-space', 'nowrap')` so that for `Northern Ireland` and `1999` the bar's text fit's within the bar's height\n- on mouseover of the county bar the `cf` crossfilter object is filtered for only that county.  then, `updateMap` function is called, which re-renders the map with only the selected county shaded.  on mouseout of the county bar, the cf object is unfiltered and the `updatemMap` function is called once again.  Now all of the counties on the map have data-driven fill colors.\n- hide the breed code text\n- abstract out the map svg out of `index.html` and into a separate file, `ireland.svg`.  this is more difficult that you might think. these links proved to be quite helpful:\n\n[d3 google group thread on working with external svg files](https://groups.google.com/forum/embed/#!topic/d3-js/-qYDy71c_lA)\n\n[an external svg example](http://bl.ocks.org/mbostock/1014829)\n\n[an iteration on that example](http://bl.ocks.org/biovisualize/1238376)\n\n[jsfiddle with .each() technique](http://jsfiddle.net/christopheviau/XnG6r/)\n\nOk, we figured it out. the counties of Northern Ireland now show a data-driven fill color when you mouse over the Northern Ireland bar. Cool!  hat tip to [@lucastimmons](https://twitter.com/lucastimmons), [phoebebright](https://twitter.com/phoebebright), and [@DashingD3js](https://twitter.com/DashingD3js) for the implementation ideas.  \n\nhere's the approach I went with:\n\n#### in ireland.svg \n- move the path for county Fermanagh from `<g id=\"republic\">` to `<g id=\"northernireland\">` \n- add the class `northernireland` to all of the paths that are children of the `g` element with `id=\"northernireland\".\n- set fill color for county Fermanagh path to `#fff`.  I'm curious why the fill was originally set `#d1d7ab` for this county.  Maybe the svg was repurposed from another graphic originally about county Fermanagh?\n- remove the styles `;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible` from the county Fermanagh path to match the paths for the other Northern Ireland counties.\n- add `sodipodi:nodetypes=\"cssscssscsssssscccssssscsssssssc\"` to the county Fermanagh path to match the paths for the other Northern Ireland counties.  What is this `sodipodi:nodetypes`? It looks like [some artifact from Inkscape](http://www.inkscapeforum.com/viewtopic.php?t=4590)\n\nhave comments or thoughts on this example? [tweet at me](https://twitter.com/micahstubbs) or comment on the [github gist](https://gist.github.com/micahstubbs/99df29f258860e53c5e2).", "uid": "micahstubbs_99df29f258860e53c5e2"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseTime = d3.timeParse(\"%d-%b-%y\");\n\nvar x = d3.scaleTime()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar line = d3.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain(d3.extent(data, function(d) { return d.close; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y))\n    .append(\"text\")\n      .attr(\"class\", \"axis-title\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Price ($)\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n});\n\nfunction type(d) {\n  d.date = parseTime(d.date);\n  d.close = +d.close;\n  return d;\n}\n\n</script>", "description": "Line Chart 4.0", "created_at": "2016-01-09T00:05:22Z", "updated_at": "2016-05-19T07:16:41Z", "api": ["d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.line", "d3.select", "d3.tsv", "d3.extent", "d3.axisBottom", "d3.axisLeft"], "readme": "", "uid": "mbostock_02d893e3486c70c4475f"}, {"code": "<script>\n\nvar width = 960,\n    height = 600;\n\nvar projection = d3.geo.bottomley()\n    .scale(170)\n    .translate([width / 2, height / 2])\n    .precision(0.2);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar graticule = d3.geo.graticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"defs\").append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\nsvg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"fill\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\nd3.json(\"/mbostock/raw/4090846/world-50m.json\", function(error, world) {\n  if (error) throw error;\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n});\n\n</script>", "description": "Bottomley", "created_at": "2016-01-06T17:02:20Z", "updated_at": "2016-02-25T01:51:36Z", "api": ["d3.geo.bottomley", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.json"], "readme": "", "uid": "mbostock_ad2d520dd26dcc5af13b"}, {"code": "<script>\n\nvar width = 600,\n    height = 560,\n    viewPort = 400;\n\nvar sample = poissonDiscSampler(viewPort, viewPort, 10);\n\nvar svg = d3.select('#vis').append('svg')\n    .attr('width', width)\n    .attr('height', height);\n    \nvar g1 = svg.append('g')\n    .attr({\n        id: 'holder1',\n        transform: 'translate(80, 80) rotate(0)'\n     });\n\nvar g2 = svg.append('g')\n    .attr({\n        id: 'holder2',\n        transform: 'translate(80, 80) rotate(0)'\n     });\n\n// when the input range changes update the angle \nd3.select('#nAngle').on('input', function() {\n  update(+this.value);\n});\n\n// initial starting angle of overlap\nupdate(0);\n\n// update the element\nfunction update(nAngle) {\n\n  d3.select('#nAngle-value').text(nAngle);\n  d3.select('#nAngle').property('value', nAngle);\n  // rotate \n  svg.select('#holder2') \n    .attr('transform', 'translate(80, 80) rotate('+nAngle+', ' + viewPort/2 + ',' + viewPort/2 + ')');\n}\n\nd3.timer(function() {\n  for (var i = 0; i < 10; ++i) {\n    var s = sample();\n    if (!s) return true;\n    g1.append('circle')\n        .attr('cx', s[0])\n        .attr('cy', s[1])\n        .attr('r', 2)\n        .attr('fill', '#130C0E')\n      .transition()\n        .attr('r', 2);\n\n    g2.append('circle')\n        .attr('cx', s[0])\n        .attr('cy', s[1])\n        .attr('r', 2)\n        .attr('fill', '#130C0E')\n      .transition()\n        .attr('r', 2);\n  }\n});\n\n// Based on https://www.jasondavies.com/poisson-disc/\nfunction poissonDiscSampler(width, height, radius) {\n  var k = 30, // maximum number of samples before rejection\n      radius2 = radius * radius,\n      R = 3 * radius2,\n      cellSize = radius * Math.SQRT1_2,\n      gridWidth = Math.ceil(width / cellSize),\n      gridHeight = Math.ceil(height / cellSize),\n      grid = new Array(gridWidth * gridHeight),\n      queue = [],\n      queueSize = 0,\n      sampleSize = 0;\n\n  return function() {\n    if (!sampleSize) return sample(Math.random() * width, Math.random() * height);\n\n    // Pick a random existing sample and remove it from the queue.\n    while (queueSize) {\n      var i = Math.random() * queueSize | 0,\n          s = queue[i];\n\n      // Make a new candidate between [radius, 2 * radius] from the existing sample.\n      for (var j = 0; j < k; ++j) {\n        var a = 2 * Math.PI * Math.random(),\n            r = Math.sqrt(Math.random() * R + radius2),\n            x = s[0] + r * Math.cos(a),\n            y = s[1] + r * Math.sin(a);\n\n        // Reject candidates that are outside the allowed extent,\n        // or closer than 2 * radius to any existing sample.\n        if (0 <= x && x < width && 0 <= y && y < height && far(x, y)) return sample(x, y);\n      }\n\n      queue[i] = queue[--queueSize];\n      queue.length = queueSize;\n    }\n  };\n\n  function far(x, y) {\n    var i = x / cellSize | 0,\n        j = y / cellSize | 0,\n        i0 = Math.max(i - 2, 0),\n        j0 = Math.max(j - 2, 0),\n        i1 = Math.min(i + 3, gridWidth),\n        j1 = Math.min(j + 3, gridHeight);\n\n    for (j = j0; j < j1; ++j) {\n      var o = j * gridWidth;\n      for (i = i0; i < i1; ++i) {\n        if (s = grid[o + i]) {\n          var s,\n              dx = s[0] - x,\n              dy = s[1] - y;\n          if (dx * dx + dy * dy < radius2) return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function sample(x, y) {\n    var s = [x, y];\n    queue.push(s);\n    grid[gridWidth * (y / cellSize | 0) + (x / cellSize | 0)] = s;\n    ++sampleSize;\n    ++queueSize;\n    return s;\n  }\n}\n\nd3.select(self.frameElement).style('height', '700px');\n\n</script>", "description": "d3 | Freaky Dot Patterns", "created_at": "2016-01-05T12:48:58Z", "updated_at": "2016-01-05T12:49:02Z", "api": ["d3.select", "d3.timer"], "readme": "Testing out Tadashi Tokieda's examples in his [Moir\u00e9 Patterns video](https://youtu.be/QAja2jp1VjE) applied to [poisson-disc sampling](http://bl.ocks.org/mbostock/dbb02448b0f93e4c82c3)\n\nA duplicated pattern can be rotated to reveal [Freaky Dot Patterns](https://youtu.be/QAja2jp1VjE)\n\ncode sources:\n- [mbostock\u2019s Poisson-Disc block](http://bl.ocks.org/mbostock/19168c663618b7f07158)\n- [d3noob\u2019s text rotation](http://bl.ocks.org/d3noob/10633421)\n\n", "uid": "eesur_f1147cb871cfe9cdf121"}, {"code": "<script>\nvar margin = {top: 20, right: 160, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 1400 - margin.top - margin.bottom;\nvar i = 0,\n    duration = 350,\n    root;\nvar tree = d3.layout.tree()\n    .size([height, width]);\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\nd3.json(\"readme.json\", function(error, flare) {\n  if (error) throw error;\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n  root.children.forEach(collapse);\n  update(root);\n});\nd3.select(self.frameElement).style(\"height\", \"px\");\nfunction update(source) {\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 160; });\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n</script>", "description": "Technology Reference Tree ", "created_at": "2016-01-03T20:25:31Z", "updated_at": "2016-04-29T06:43:29Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a [Reingold\u2013Tilford tree](/4339184). Click on the nodes to expand or collapse.", "uid": "dogobox_e694099d4bae5c390551"}, {"code": "<script>\n\n    \n    // random data\n    var data = [];\n    \n    for (var i = 0; i < 50; i++) {\n    \tdata.push(Math.random())\n\t\t}\n    // Scale the height of bars\n    var hScale = d3.scale.linear()\n                    .domain([d3.min(data), d3.max(data)])\n                    .range([0, 10])\n    \n    // Set color scale\n    var colors = d3.scale.linear()\n                    .domain([0, data.length*.33, data.length*.66, data.length])\n                    .range(['#B58929','#C61C6F', '#268BD2', '#85992C'])\n    \n    // Select the scene object just like an svg\n    var scene = d3.select(\"a-scene\")\n    \n    // Use d3's enter/update/exit pattern to draw and bind the dom elements\n    var bars = scene.selectAll(\"a-cylinder.bar\")\n    \t\t\t\t\t\t\t\t.data(data)\n    \n    \t\t\t\t\t\tbars.enter()\n                    .append(\"a-cylinder\")\n                    .classed(\"bar\", true)\n\n    \n    // Set attributes on the cubes \n    bars.attr({\n      position: function(d,i) {\n        // cubes are positioned by their center so we\n        // offset for their height\n        var y = 1 + hScale(d)/2;\n        // lets place the bars all around our camera\n        var radius = 15;\n        //var x = i - data.length/2;\n        var x = radius * Math.cos(i/data.length * 2 * Math.PI);\n        var z = radius * Math.sin(i/data.length * 2 * Math.PI);\n        return x + \" \" + y + \" \" + z\n      },\n      rotation: function(d,i) {\n        var x = 0;\n        var z = 0;\n        var y = -(i/data.length)*360;\n        return x + \" \" + y + \" \" + z\n      },\n      width: function(d) { return 0.5},\n      depth: function(d) { return 0.9},\n      height: 0,\n      color: function(d,i) { return colors(i);}     \n    })\n        .transition()\n        .attr(\"height\", function(d) { return  hScale(d) })\n        .delay(function(d, i) {\n            return i * 100;\n        })\n        .duration(7000)\n        .ease(\"elastic\")\n    \n    \n  </script>", "description": "a-frame + d3 test", "created_at": "2015-12-19T06:38:04Z", "updated_at": "2015-12-19T06:46:14Z", "api": ["d3.scale.linear", "d3.min", "d3.max", "d3.select"], "readme": "Testing out [aframe.io](https://aframe.io/) with [d3.js](http://d3js.org).\n\nAlthough a-frame has its animation method based on tween.js, we can use d3's transition method to animate the DOM.\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/8be32e6f1f32920ba841'>aframe + d3 test</a>", "uid": "YasufumiSaito_35b59c0b074cac700798"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom - 10;\n\nvar x0 = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar x1 = d3.scale.ordinal();\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.ordinal()\n    .range([\"#9EBD06\",\"00A1DC\",\"#DD4B39\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x0)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(d3.format(\".2s\"));\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar globalData = [];\nvar countType = undefined;\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n  var sortType = 'Give'\n\n  countType = d3.keys(data[0]).filter(function(key) { return key !== \"Engineer\"; });\n  data.forEach(function(d) {\n    d.counts = countType.map(function(name) { return {name: name, value: +d[name]}; });\n  })\n  globalData = data.slice();\n  data = data.sort(function(a, b){\n    return +b[sortType] - +a[sortType];\n  })\n\n  x0.domain(data.map(function(d) { return d.Engineer; }));\n  x1.domain(countType).rangeRoundBands([0, x0.rangeBand()]);\n  y.domain([0, d3.max(data, function(d) { return d3.max(d.counts, function(d) { return d.value; }); })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Count\");\n\n  var engineer = svg.selectAll(\".engineer\")\n      .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"g engineer\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x0(d.Engineer) + \",0)\"; });\n\n  engineer.selectAll(\"rect\")\n      .data(function(d) { return d.counts; })\n    .enter().append(\"rect\")\n      .attr(\"width\", x1.rangeBand())\n      .attr(\"height\", 0)\n      .attr(\"x\", function(d) { return x1(d.name); })\n      .attr(\"y\", function(d) { return y(0); })\n      .style(\"fill\", function(d) { return color(d.name); })\n      .style(\"opacity\", function(d) { \n        if (d.name === sortType) return 1;\n        return 0.15;\n      })\n      .transition().duration(1000)\n      .attr(\"height\", function(d) { return height - y(d.value); })\n      .attr(\"y\", function(d) { return y(d.value); })\n\n  var legend = svg.selectAll(\".legend\")\n      .data(countType.slice().reverse())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\nd3.selectAll(\"input\").on(\"change\", change);\n  \nfunction change() {\n  sortType = this.value\n  transitionData(sortType);\n}\n\nfunction transitionData(sortType){\n  var data = globalData.slice().sort(function(a, b){\n    return +b[sortType] - +a[sortType];\n  })\n\n  x0.domain(data.map(function(d) { return d.Engineer; }));\n  x1.domain(countType).rangeRoundBands([0, x0.rangeBand()]);\n\n  var engineer = d3.selectAll(\".engineer\")\n  \n  engineer.transition().delay(800)\n      .duration(function(d, i){ return 300 * i + 300; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x0(d.Engineer) + \",0)\"; });\n\n  engineer.selectAll(\"rect\")\n      .transition()\n      .duration(800)\n      .style(\"opacity\", function(d) { \n        if (d.name === sortType) return 1;\n        return 0.15;\n      })\n\n  xAxis.scale(x0);\n  d3.selectAll(\".x.axis\").transition().delay(1000)\n      .duration(data.length * 100).call(xAxis)\n}\n\n</script>", "description": "Lever Love (Hire2)", "created_at": "2015-12-17T02:16:35Z", "updated_at": "2015-12-17T21:20:21Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max", "d3.selectAll"], "readme": "This grouped bar chart is constructed from a CSV file storing the number of LGTM's of different pull requests at Lever's repo of Hire2 by user. \n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887051'>Grouped Bar Chart</a>", "uid": "jonsadka_810749b7dbcf0eca1e4e"}, {"code": "<script>\n\nvar margin = {top: 30, right: 30, bottom: 40, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatPercent = d3.format(\"+.0%\"),\n    formatChange = function(x) { return formatPercent(x - 1); },\n    parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.log()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickSize(-width, 0)\n    .tickFormat(formatChange);\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.ratio); });\n\nvar area = d3.svg.area()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.ratio); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar gX = svg.append(\"g\")\n    .attr(\"class\", \"axis axis--x\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\");\n\nvar gY = svg.append(\"g\")\n    .attr(\"class\", \"axis axis--y\");\n\ngY.append(\"text\")\n    .attr(\"class\", \"axis-title\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .text(\"Change in Price\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  // Compute price relative to base value (hypothetical purchase price).\n  var baseValue = +data[0].close;\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.ratio = d.close / baseValue;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain(d3.extent(data, function(d) { return d.ratio; }));\n\n  area.y0(y(1));\n\n  // Use a second linear scale for ticks.\n  yAxis.tickValues(d3.scale.linear()\n      .domain(y.domain())\n      .ticks(20));\n\n  gX.call(xAxis);\n\n  gY.call(yAxis)\n    .selectAll(\".tick\")\n      .classed(\"tick--one\", function(d) { return Math.abs(d - 1) < 1e-6; });\n\n  var defs = svg.append(\"defs\");\n\n  defs.append(\"clipPath\")\n      .attr(\"id\", \"clip-above\")\n    .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", y(1));\n\n  defs.append(\"clipPath\")\n      .attr(\"id\", \"clip-below\")\n    .append(\"rect\")\n      .attr(\"y\", y(1))\n      .attr(\"width\", width)\n      .attr(\"height\", height - y(1));\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"clip-path\", \"url(#clip-above)\")\n      .attr(\"class\", \"area area--above\")\n      .attr(\"d\", area);\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"clip-path\", \"url(#clip-below)\")\n      .attr(\"class\", \"area area--below\")\n      .attr(\"d\", area);\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n});\n\n</script>", "description": "Percentage Change II", "created_at": "2015-12-14T17:07:58Z", "updated_at": "2016-09-23T12:37:00Z", "api": ["d3.format", "d3.time.format", "d3.time.scale", "d3.scale.log", "d3.svg.axis", "d3.svg.line", "d3.svg.area", "d3.select", "d3.tsv", "d3.extent", "d3.scale.linear"], "readme": "A variation of the [percentage change example](/mbostock/c69f5960c6b1a95b6f78) using clipping to apply different colors for positive change (green) and negative change (purple).\n", "uid": "mbostock_978f6c03c9aab8af8594"}, {"code": "<script>\n\nvar margin = {top: 30, right: 30, bottom: 40, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatPercent = d3.format(\"+.0%\"),\n    formatChange = function(x) { return formatPercent(x - 1); },\n    parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.log()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickSize(-width, 0)\n    .tickFormat(formatChange);\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.ratio); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar gX = svg.append(\"g\")\n    .attr(\"class\", \"axis axis--x\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\");\n\nvar gY = svg.append(\"g\")\n    .attr(\"class\", \"axis axis--y\");\n\ngY.append(\"text\")\n    .attr(\"class\", \"axis-title\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .text(\"Change in Price\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  // Compute price relative to base value (hypothetical purchase price).\n  var baseValue = +data[0].close;\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.ratio = d.close / baseValue;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain(d3.extent(data, function(d) { return d.ratio; }));\n\n  // Use a second linear scale for ticks.\n  yAxis.tickValues(d3.scale.linear()\n      .domain(y.domain())\n      .ticks(20));\n\n  gX.call(xAxis);\n\n  gY.call(yAxis)\n    .selectAll(\".tick\")\n      .classed(\"tick--one\", function(d) { return Math.abs(d - 1) < 1e-6; });\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n});\n\n</script>", "description": "Percentage Change", "created_at": "2015-12-14T16:51:49Z", "updated_at": "2016-04-29T14:09:18Z", "api": ["d3.format", "d3.time.format", "d3.time.scale", "d3.scale.log", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.scale.linear"], "readme": "Assuming you bought AAPL stock at its closing price on January 2, 2008, how would your investment fare over the next four and a half years? (Quite well, for the most part\u2026)\n\nRather than simply plot the absolute price on a linear scale, which would exaggerate gains and understate losses, instead compute the *relative* price, *i.e.*, the current price divided by the purchase price. Then, use a log scale to accurately show proportional gains and losses: a +100% gain (2\u00d7) is as good as a -50% loss is bad (0.5\u00d7). As long as the current value never reaches absolute zero, meaning as long as the stock is not completely worthless, the scale domain never crosses zero.\n\nTo show [percentage change](https://en.wikipedia.org/wiki/Relative_change_and_difference#Percentage_change) (+20%, -20%), simply subtract 1 from the relative price:\n\n```js\nvar formatPercent = d3.format(\"+.0%\");\n\n// Formats a relative price (e.g., 2) as percentage change (e.g., +100%).\nfunction formatChange(x) {\n  return formatPercent(x - 1);\n}\n```\n\nAlthough the log scale ticks are adequate in relative price space, a second linear scale can also be used to generate uniformly-spaced ticks.\n\nA nice related technique is to add color to show [positive or negative change](/mbostock/978f6c03c9aab8af8594).\n", "uid": "mbostock_c69f5960c6b1a95b6f78"}, {"code": "<script>\n\t\nvar units = \"People\";\n\nvar margin = {top: 10, right: 0, bottom: 10, left: 0},\n    width = 300 - margin.left - margin.right,\n    height = 1500 - margin.top - margin.bottom;\n\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { \n      if (d > 1) { return formatNumber(d) + \" people\";}\n      else {return formatNumber(d) + \" person\";}\n   };\n    \n// append the svg canvas to the page\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(15)\n    .nodePadding(10)\n    .size([width, height]);\n\nvar path = sankey.link();\n\nvar div = d3.select(\"body\")\n  .append(\"div\")  // declare the tooltip div \n  .attr(\"class\", \"tooltip\")              // apply the 'tooltip' class\n  .style(\"opacity\", 0);\n\n// load the data (using the timelyportfolio csv method)\nd3.csv(\"refugee_sandbox.csv\", function(error, data) {\n\n  // set up graph in same style as original example but empty\n  graph = {\"nodes\" : [], \"links\" : []};\n\n    data.forEach(function (d) {\n      graph.nodes.push({ \"name\": d.source });\n      graph.nodes.push({ \"name\": d.target });\n      graph.links.push({ \"source\": d.source,\n                         \"target\": d.target,\n                         \"value\": +d.value });\n     });\n\n     // return only the distinct / unique nodes\n     graph.nodes = d3.keys(d3.nest()\n       .key(function (d) { return d.name; })\n       .map(graph.nodes));\n\n     // loop through each link replacing the text with its index from node\n     graph.links.forEach(function (d, i) {\n       graph.links[i].source = graph.nodes.indexOf(graph.links[i].source);\n       graph.links[i].target = graph.nodes.indexOf(graph.links[i].target);\n     });\n\n     //now loop through each nodes to make nodes an array of objects\n     // rather than an array of strings\n     graph.nodes.forEach(function (d, i) {\n       graph.nodes[i] = { \"name\": d };\n     });\n\n  sankey\n    .nodes(graph.nodes)\n    .links(graph.links)\n    .layout(32);\n\nfunction nospace (in_string) {\n  return in_string.replace(/\\s+/g, \"\");\n}\n\nfunction labelgetter (some_num, some_str) {\n  if (some_num > 0) {return \"Everywhere  \" + some_str;}\n    else {return some_str + \"  Everywhere\"}\n}\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", function (d) {return \"link \" + nospace(d.source.name) + \" \" + nospace(d.target.name);})\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) {return Math.max(1, d.dy); })\n      // .sort(function(a, b) { return a.dy - b.dy; })\n      .style(\"opacity\", 0.15)\n      .on(\"click\", function (d) {\n        d3.selectAll(\".link\").style(\"stroke\", \"#000\").style(\"opacity\", 0.15)\n        d3.select(this).transition().style(\"stroke\", \"darkred\").style(\"opacity\", 0.6)   \n        div.transition()\n        .duration(500)  \n        .style(\"opacity\", 0);\n      div.transition()\n        .duration(200)  \n        .style(\"opacity\", .9)\n        .style(\"background\",\"lightgray\")\n      div .html(\n        d.source.name + \"  \" + d.target.name + \"<br>\" + format(d.value))   \n        // .style(\"left\", (d3.event.pageX - 160) + \"px\") \n        .style(\"left\", width/2 + \"px\")      \n        .style(\"top\", (d3.event.pageY - 26) + \"px\");\n      });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", function (d) {return \"node \" + nospace(d.name);})\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n\n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function (d) {\n        if(d.x < width/2) {return \"darkkhaki\";}\n        else {return \"darkseagreen\";}\n      })\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", \"5px\")\n      .style(\"stroke-opacity\", 0) // add a big invisible border to each box so the small ones are clickable\n    .on(\"click\", function (d) {\n      div.transition()\n        .duration(500)  \n        .style(\"opacity\", 0);\n      div.transition()\n        .duration(200)  \n        .style(\"opacity\", .9)\n        .style(\"background\",\"lightgray\")\n      div .html(labelgetter(d.x, d.name) + \"<br>\" + format(d.value))   \n        .style(\"left\", width/2 + \"px\")      \n        .style(\"top\", (d3.event.pageY - 26) + \"px\");\n      d3.selectAll(\".link\").style(\"stroke\", \"#000\").style(\"opacity\", 0.15); // reset paths to default\n      d3.selectAll(\".link\").filter(\".\" + nospace(d.name)).transition().style(\"stroke\", \"darkred\").style(\"opacity\", 0.6); //turn selected ones red.\n    });\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -4)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .attr(\"class\", function (d) { \n        return \"tag \" + nospace(d.name);})\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 4 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n\n\n\n\n\n });\n\n</script>", "description": "Sankey refugees", "created_at": "2015-12-07T20:33:22Z", "updated_at": "2015-12-07T20:33:22Z", "api": ["d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest", "d3.format", "d3.select", "d3.sankey", "d3.csv", "d3.keys", "d3.selectAll"], "readme": "", "uid": "greencracker_8661fbc35815d261b9fa"}, {"code": "<script>\n\nvar margin = {top: 0, right: 0, bottom: 0, left: 0},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar randomX = d3.random.normal(width / 2, 80),\n    randomY = d3.random.normal(height / 2, 80),\n    points = d3.range(2000).map(function() { return [randomX(), randomY()]; });\n\nvar hexbin = d3.hexbin()\n    .size([width, height])\n    .radius(20);\n\n// the result of the hexbin layout\nvar hexbinData = hexbin(points);\nconsole.log('hexbinData', hexbinData);\n\nvar color = d3.scale.linear()\n    .domain([0, d3.max(hexbinData, function(d) {\n      return d.length;\n    })])\n    .range([\"white\", \"steelblue\"])\n    .interpolate(d3.interpolateLab);\n\nvar x = d3.scale.identity()\n    .domain([0, width]);\n\nvar y = d3.scale.linear()\n    .domain([0, height])\n    .range([height, 0]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"class\", \"mesh\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"g\")\n    .attr(\"clip-path\", \"url(#clip)\")\n  .selectAll(\".hexagon\")\n    .data(hexbinData)\n  .enter().append(\"path\")\n    .attr(\"class\", \"hexagon\")\n    .attr(\"d\", hexbin.hexagon())\n    .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .style(\"fill\", function(d) {\n      return color(d.length) \n    })\n    .style(\"stroke\", \"none\");\n\n</script>", "description": "hexbin with no axes", "created_at": "2015-12-05T00:09:06Z", "updated_at": "2015-12-05T00:19:48Z", "api": ["d3.values", "d3.range", "d3.random.normal", "d3.hexbin", "d3.scale.linear", "d3.max", "d3.scale.identity", "d3.select"], "readme": "## hexbin scatterplot\n\na [d3.hexbin()](https://github.com/d3/d3-plugins/tree/master/hexbin) example with no axes for [xaranke](http://bl.ocks.org/xaranke)\n\nthis example modifies the block [Hexagonal Binning](http://bl.ocks.org/mbostock/4248145) by\n\n+ removing the axes\n\n+ removing the stroke from the hexagon paths\n\n---\n\nThis example shows how to use the [d3.hexbin](https://github.com/d3/d3-plugins/tree/master/hexbin) plugin for hexagonal binning. 2,000 random points with a normal distribution are binned into hexagons; color encodes the number of points that fall into each bin. You can also use [area encoding](../4248146). Inspired by earlier work by [Zachary Forest Johnson](http://indiemaps.com/blog/2011/10/hexbins/).", "uid": "micahstubbs_4ee4c58c9dfc2a41ed26"}, {"code": "<script>\n  \n    mapboxgl.accessToken = 'pk.eyJ1IjoiZW5qYWxvdCIsImEiOiJjaWhtdmxhNTIwb25zdHBsejk0NGdhODJhIn0.2-F2hS_oTZenAWc0BMf_uw'\n    \n    //Setup mapbox-gl map\n    var map = new mapboxgl.Map({\n      container: 'map', // container id\n      style: 'mapbox://styles/enjalot/cihmvv7kg004v91kn22zjptsc',\n      center: [-0.1,51.5119112],\n      zoom: 13.5,\n    })\n    map.dragPan.disable();\n    map.scrollZoom.disable();\n    \n    // Setup our svg layer that we can manipulate with d3\n    var container = map.getCanvasContainer()\n    var svg = d3.select(container).append(\"svg\")\n\n    var active = true;\n    var circleControl = new circleSelector(svg)\n      .projection(project)\n      .inverseProjection(function(a) {\n        return map.unproject({x: a[0], y: a[1]});\n      })\n      .activate(active);\n    \n    d3.select(\"#circle\").on(\"click\", function() {\n      active = !active;\n      circleControl.activate(active)\n      if(active) {\n        map.dragPan.disable();\n      } else {\n        map.dragPan.enable();\n      }\n      d3.select(this).classed(\"active\", active)\n    })\n    \n    // Add zoom and rotation controls to the map.\n    map.addControl(new mapboxgl.Navigation());\n    \n    function project(d) {\n      return map.project(getLL(d));\n    }\n    function getLL(d) {\n      return new mapboxgl.LngLat(+d.lng, +d.lat)\n    }\n  \n    d3.csv(\"dots.csv\", function(err, data) {\n      //console.log(data[0], getLL(data[0]), project(data[0]))\n      var dots = svg.selectAll(\"circle.dot\")\n        .data(data)\n      \n      dots.enter().append(\"circle\").classed(\"dot\", true)\n      .attr(\"r\", 1)\n      .style({\n        fill: \"#0082a3\",\n        \"fill-opacity\": 0.6,\n        stroke: \"#004d60\",\n        \"stroke-width\": 1\n      })\n      .transition().duration(1000)\n      .attr(\"r\", 6)\n\n      circleControl.on(\"update\", function() {\n        svg.selectAll(\"circle.dot\").style({\n          fill: function(d) {\n            var thisDist = circleControl.distance(d);\n            var circleDist = circleControl.distance()\n            if(thisDist < circleDist) {\n              return \"#ff8eec\";\n            } else {\n              return \"#0082a3\"\n            }\n          }\n        })\n      })\n      circleControl.on(\"clear\", function() {\n        svg.selectAll(\"circle.dot\").style(\"fill\", \"#0082a3\")\n      })\n      \n      function render() {\n        dots.attr({\n          cx: function(d) { \n            var x = project(d).x;\n            return x\n          },\n          cy: function(d) { \n            var y = project(d).y;\n            return y\n          },\n        })\n        \n        circleControl.update(svg)\n      }\n\n      // re-render our visualization whenever the view changes\n      map.on(\"viewreset\", function() {\n        render()\n      })\n      map.on(\"move\", function() {\n        render()\n      })\n\n      // render our initial visualization\n      render()\n    })\n  </script>", "description": "dots on a map-gl: circle", "created_at": "2015-12-04T05:22:24Z", "updated_at": "2016-04-29T10:08:00Z", "api": ["d3.select", "d3.csv", "d3.geo.mercator", "d3.dispatch", "d3.mouse", "d3.behavior.drag", "d3.rebind"], "readme": "This is a simple setup of Leaflet (via Mapbox) with d3 to show dots on a map. This can serve as a base for many interesting geographically based visualizations\n\nNice overview of using [d3 + Leaflet](http://chriszetter.com/blog/2014/06/15/building-a-voronoi-map-with-d3-and-leaflet/). \nI found this slightly simpler to use than Mike's [classic post](http://bost.ocks.org/mike/leaflet/).\n\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/18cb7a77b2d9de597b86'>dots on a map: setup-gl</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/dc1ce756527c072885dc'>dots on a map-gl: circle</a>", "uid": "enjalot_0912e1962ed512093895"}, {"code": "<script>\n  \nvar units = \"Mt CO2\";\n \nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 1200 - margin.left - margin.right,\n    height = 740 - margin.top - margin.bottom;\n \nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scale.category20();\n \n// append the svg canvas to the page\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(10)\n    .size([width, height]);\n \nvar path = sankey.link();\n \n// load the data\nd3.json(\"emissions.json\", function(error, graph) {\n \n    var nodeMap = {};\n    graph.nodes.forEach(function(x) { nodeMap[x.name] = x; });\n    graph.links = graph.links.map(function(x) {\n      return {\n        source: nodeMap[x.source],\n        target: nodeMap[x.target],\n        value: x.value\n      };\n    });\n \n  sankey\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .layout(32);\n \n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n \n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n      \treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n \n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\";\n      })\n    //.call(d3.behavior.drag()\n    //  .origin(function(d) { return d; })\n    //  .on(\"dragstart\", function() { \n    //\t\t  this.parentNode.appendChild(this); })\n    //  .on(\"drag\", dragmove))\n    .call(function () {\n      manualLayout();\n    });\n \n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n        if (d.name == \"Europe\" || d.name == \"Spain\" || d.name == \"Ukraine\" || d.name == \"Poland\"\n            || d.name == \"France\" || d.name == \"Italy\" || d.name == \"United Kingdom\" || d.name == \"Germany\"\n            || d.name == \"Russian Federation\" || d.name == \"Netherlands\" || d.name == \"Czech Republic\") return \"#FF8A4D\"\n        else if (d.name == \"North America\" || d.name == \"United States\" || d.name == \"Canada\" \n                 || d.name == \"Mexico\" ) return \"#BAFFC9\"\n        else if (d.name == \"Asia\" || d.name == \"China\" || d.name == \"India\" || d.name == \"Japan\"\n                 || d.name == \"South Korea\" || d.name == \"Indonesia\" || d.name == \"Thailand\"\n                 || d.name == \"Kazakhstan\" || d.name == \"Taiwan\" || d.name == \"Malaysia\"\n                 || d.name == \"Vietnam\" || d.name == \"Pakistan\" || d.name == \"Uzbekistan\" ) return \"#FFFEBB\"\n        else if (d.name == \"Middle East\" || d.name == \"Saudi Arabia\" || d.name == \"UAE\"\n                 || d.name == \"Turkey\" || d.name == \"Iran\" || d.name == \"Kuwait\"\n                 || d.name == \"Iraq\" ) return \"#F0CF28\"\n        else if (d.name == \"Africa\" || d.name == \"South Africa\" || d.name == \"Egypt\"\n                 || d.name == \"Algeria\" ) return \"#592062\"\n        else if (d.name == \"Latin Am - Carribean\" || d.name == \"Brazil\" || d.name == \"Venezuela\" \n                 || d.name == \"Argentina\") return \"#FFB4BB\"\n        else if (d.name == \"Oceania\" || d.name == \"Australia\") return \"#61E3F1\"\n        else if (d.name == \"Coal\") return \"#3B3131\"\n        else if (d.name == \"Oil\") return \"#886666\"\n        else if (d.name == \"Gas Flaring\") return \"#AEC7E8\"\n        else if (d.name == \"Cement\") return \"#666688\"\n        else if (d.name == \"Gas\") return \"#AEC7E8\"\n        else return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t    return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t    return d.name + \"\\n\" + format(d.value); \n      });\n \n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n \n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \n        \"translate(\" + (\n        \t   d.x = Math.max(0, Math.min(width - d.dx, d3.event.x))\n        \t) + \",\" + (\n                   d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n            ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n  // manually customize node position\n  function manualLayout() {\n    //http://stackoverflow.com/questions/10337640/how-to-access-the-dom-element-that-correlates-to-a-d3-svg-object\n    //displacements in order of foo nodes (foo[0][j])\n    var displacements = [56,299,485,647,766, 55, 746, 307, 490, 612, 677, 429];\n    var foo = d3.selectAll(\"g.node\");\n\n    for (j=0; j < displacements.length; j++) {\n      pickNode = foo[0][j]; //equals \"this\" in d3.behavior.drag()...on(\"dragstart\")\n      d = graph.nodes[j];\n\n      d3.select(pickNode).attr(\"transform\", \n            \"translate(\" + (\n                   d.x = d.x\n          ) + \",\" + (\n                   d.y = displacements[j] //Math.max(0, Math.min(height - d.dy, d3.event.y))\n            ) + \")\");\n   \n    }\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n \n</script>", "description": "Sankey set node position", "created_at": "2015-12-03T22:42:23Z", "updated_at": "2015-12-05T17:09:06Z", "api": ["d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest", "d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.json", "d3.behavior.drag", "d3.rgb", "d3.selectAll"], "readme": "Sets y-position of selected nodes according to a defined array after sankey.js has calculated their position.", "uid": "KatiRG_90a972bad9109ae556c0"}, {"code": "<script>\n   \n    L.mapbox.accessToken = 'pk.eyJ1IjoiZW5qYWxvdCIsImEiOiJjaWhtdmxhNTIwb25zdHBsejk0NGdhODJhIn0.2-F2hS_oTZenAWc0BMf_uw'\n    \n    //Setup our Leaflet map using Mapbox.js\n    var map = L.mapbox.map('map', 'mapbox.pencil', {\n      maxZoom: 18, minZoom: 14,\n      //zoomControl: false\n    })\n    .setView([51.5119112,-0.10000], 15);\n    \n    // Disable drag and zoom handlers.\n    map.dragging.disable();\n    map.touchZoom.disable();\n    map.doubleClickZoom.disable();\n    map.scrollWheelZoom.disable();\n    // Disable tap handler, if present.\n    if (map.tap) map.tap.disable();\n    \n    // Setup our svg layer that we can manipulate with d3\n    var svg = d3.select(map.getPanes().overlayPane)\n      .append(\"svg\");\n    var g = svg.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\");\n    \n    function project(ll) {\n      if(!ll) return;\n      // our data came from csv, make it Leaflet friendly\n      var a = [+ll.lat, +ll.lng]; \n      // convert it to pixel coordinates\n      var point = map.latLngToLayerPoint(L.latLng(ll))\n      return point;\n    }\n  \n    d3.csv(\"dots.csv\", function(err, data) {\n      var dots = g.selectAll(\"circle.dot\")\n        .data(data)\n      \n      dots.enter().append(\"circle\").classed(\"dot\", true)\n      .attr(\"r\", 1)\n      .style({\n        fill: \"#0082a3\",\n        \"fill-opacity\": 0.6,\n        stroke: \"#004d60\",\n        \"stroke-width\": 1\n      })\n      .transition().duration(1000)\n      .attr(\"r\", 6);\n      \n      var circleControl = new circleSelector(svg)\n        .projection(project)\n        .inverseProjection(function(a) {\n          return map.containerPointToLatLng(L.point(a));\n        })\n        .activate(true);\n      \n      circleControl.on(\"update\", function() {\n        g.selectAll(\"circle.dot\").style({\n          fill: function(d) {\n            var thisDist = circleControl.distance(d);\n            var circleDist = circleControl.distance()\n            if(thisDist < circleDist) {\n              return \"#ff8eec\";\n            } else {\n              return \"#0082a3\"\n            }\n          }\n        })\n      })\n      \n      function render() {\n        // We need to reposition our SVG and our containing group when the map\n        // repositions via zoom or pan\n        // https://github.com/zetter/voronoi-maps/blob/master/lib/voronoi_map.js\n        var bounds = map.getBounds();\n        var topLeft = map.latLngToLayerPoint(bounds.getNorthWest())\n        var bottomRight = map.latLngToLayerPoint(bounds.getSouthEast())\n        svg.style(\"width\", map.getSize().x + \"px\")\n          .style(\"height\", map.getSize().y + \"px\")\n          .style(\"left\", topLeft.x + \"px\")\n          .style(\"top\", topLeft.y + \"px\");\n        g.attr(\"transform\", \"translate(\" + -topLeft.x + \",\" + -topLeft.y + \")\");\n\n        // We reproject our data with the updated projection from leaflet\n        g.selectAll(\"circle.dot\")\n        .attr({\n          cx: function(d) { return project(d).x},\n          cy: function(d) { return project(d).y},\n        })\n        \n        // Render our selector, and update it whenever the map updates;\n        circleControl.update(g)\n      }\n      // re-render our visualization whenever the view changes\n      map.on(\"viewreset\", function() {\n        render()\n      })\n      // render our initial visualization\n      render()\n    })\n    \n    \n    \n    /* \n    ===============================================================\n    Circle Selection component\n    ===============================================================\n    */\n    function circleSelector(svg) {\n      var that = this;\n      var circleCenter, circleOuter; //control points\n      var circleSelected = false; //have we completed the circle?\n      var dragging = false; //track whether we are dragging\n      var active = false; // user can turn on/off this behavior\n      var container; // the container we render our points in\n\n      // this will likely be overriden by leaflet projection\n      var project = d3.geo.mercator();\n      var unproject = d3.geo.mercator().invert;\n\n      //we expose events on our component\n      var dispatch = d3.dispatch(\"update\");\n      \n      // The user provides an svg element to listen on events\n      svg.on(\"mouseup.circle\", function() {\n        if(!active) return;\n        if(dragging && circleSelected) return;\n        \n        var p = d3.mouse(this);\n        var ll = unproject([p[0],p[1]])\n        \n        if(circleCenter) {\n          // if we already have the circle's center and the circle\n          // is finished selecting, another click means destroy the circle\n          if(circleSelected) {\n            // start over\n            circleCenter = null;\n            circleOuter = null;\n            circleSelected = false;\n            g.selectAll(\"circle.lasso\").remove();\n            g.selectAll(\"circle.control\").remove();\n            g.selectAll(\"circle.dot\").style(\"fill\", \"#0082a3\")\n            g.selectAll(\"line.lasso\").remove();\n          } else {\n            // Set the outer point\n            circleOuter = ll;\n            circleSelected = true;\n          }\n        } else {\n          // We set the center to the initial click\n          circleCenter = ll;\n          circleOuter = ll;\n        }\n        // we let the user know \n        update()\n      })\n      svg.on(\"mousemove.circle\", function() {\n        if(circleSelected) return;\n        // we draw a guideline for where the next point would go.\n        var p = d3.mouse(this);\n        var ll = unproject([p[0],p[1]])\n        circleOuter = ll;\n        update();\n      })\n      \n      var drag = d3.behavior.drag()\n        .on(\"drag\", function(d,i) {\n          if(circleSelected) {\n            dragging = true;\n            var p = d3.mouse(svg.node());\n            var ll = unproject([p[0],p[1]])\n            if(i) {\n              circleOuter = ll;\n            } else {\n              var dlat = circleCenter.lat - ll.lat;\n              var dlng = circleCenter.lng - ll.lng;\n              circleCenter = ll;\n              circleOuter.lat -= dlat;\n              circleOuter.lng -= dlng;\n            }\n            update();\n          } else {\n            return false;\n          }\n        })\n        .on(\"dragend\", function(d) {\n          // kind of a dirty hack...\n          setTimeout(function() {\n            dragging = false;\n          },100)\n        })\n      \n      function update(g) {\n        if(g) container = g;\n        if(!circleCenter || !circleOuter) return;\n        var dist = distance(circleCenter, circleOuter)\n        var circleLasso = container.selectAll(\"circle.lasso\").data([dist])\n        circleLasso.enter().append(\"circle\").classed(\"lasso\", true)\n        circleLasso\n        .attr({\n          cx: project(circleCenter).x,\n          cy: project(circleCenter).y,\n          r: dist\n        })\n        .style({\n          stroke: \"#010\",\n          fill: \"#010\",\n          \"fill-opacity\": 0.1\n        })\n        \n        var line = container.selectAll(\"line.lasso\").data([circleOuter])\n        line.enter().append(\"line\").classed(\"lasso\", true)\n        \n        if(!circleSelected && circleCenter || dragging) {\n          line.attr({\n            x1: project(circleCenter).x,\n            y1: project(circleCenter).y,\n            x2: project(circleOuter).x,\n            y2: project(circleOuter).y\n          })\n          .style({\n            stroke: \"#111\",\n            \"stroke-dasharray\": \"5 5\"\n          })\n        } else {\n          line.remove();\n        }\n        \n        var controls = container.selectAll(\"circle.control\")\n        .data([circleCenter, circleOuter])\n        controls.enter().append(\"circle\").classed(\"control\", true)\n        controls.attr({\n          cx: function(d) { return project(d).x},\n          cy: function(d) { return project(d).y},\n          r: 8,\n          stroke: \"#010\",\n          fill: \"#b7feb7\",\n          \"fill-opacity\":0.9\n        })\n        .call(drag)\n        .on(\"click.control\", function(d) {\n          if(circleSelected)\n            d3.event.stopPropagation();\n        })\n        \n        dispatch.update();\n      }\n      this.update = update;\n      \n      this.projection = function(val) {\n        if(!val) return project;\n        project = val;\n        return this;\n      }\n      \n      this.inverseProjection = function(val) {\n        if(!val) return unproject;\n        unproject = val;\n        return this;\n      }\n      this.activate = function(val) {\n        active = val;\n        return this;\n      }\n      \n      this.distance = function(ll) {\n        if(!ll) ll = circleOuter;\n        return distance(circleCenter, ll)\n      }\n      \n      function distance(ll0, ll1) {\n        var p0 = project(ll0)\n        var p1 = project(ll1)\n        var dist = Math.sqrt((p1.x - p0.x)*(p1.x - p0.x) + (p1.y - p0.y)*(p1.y-p0.y))\n        return dist;\n      }\n      \n      d3.rebind(this, dispatch, \"on\")\n      return this;\n    }\n\n  </script>", "description": "dots on a map: circle", "created_at": "2015-12-01T22:27:52Z", "updated_at": "2015-12-03T17:35:41Z", "api": ["d3.select", "d3.csv", "d3.geo.mercator", "d3.dispatch", "d3.mouse", "d3.behavior.drag", "d3.event.stopPropagation", "d3.rebind"], "readme": "Prototyping a lasso tool for selecting geographic points with an arbitrary polygon.\n\nUsing [this point-in-polygon](https://github.com/substack/point-in-polygon/blob/master/index.js) code to calculate which points are selected within the polygon. All calculations are done in the projected (pixel) space.\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/18cb7a77b2d9de597b86'>dots on a map: setup</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/b95748220bd4752fb33a'>dots on a map: lasso</a>", "uid": "enjalot_7a8dd01fe61fba5fea45"}, {"code": "<script>\n\nvar data = d3.range(40).map(function(i) {\n  return i % 5 ? {x: i / 39, y: (Math.sin(i / 3) + 2) / 4} : null;\n});\n\nvar margin = {top: 40, right: 40, bottom: 40, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleLinear()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar line = d3.line()\n    .defined(function(d) { return d; })\n    .x(function(d) { return x(d.x); })\n    .y(function(d) { return y(d.y); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .datum(data)\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"axis axis--x\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom().scale(x));\n\nsvg.append(\"g\")\n    .attr(\"class\", \"axis axis--y\")\n    .call(d3.axisLeft().scale(y));\n\nsvg.append(\"path\")\n    .attr(\"class\", \"line\")\n    .attr(\"d\", line);\n\nsvg.selectAll(\".dot\")\n    .data(data.filter(function(d) { return d; }))\n  .enter().append(\"circle\")\n    .attr(\"class\", \"dot\")\n    .attr(\"cx\", line.x())\n    .attr(\"cy\", line.y())\n    .attr(\"r\", 3.5);\n\n</script>", "description": "Line with Missing Data", "created_at": "2015-12-01T21:42:38Z", "updated_at": "2016-04-29T14:08:49Z", "api": ["d3.range", "d3.scaleLinear", "d3.line", "d3.select", "d3.axisBottom", "d3.axisLeft"], "readme": "A demonstration of [*line*.defined](https://github.com/mbostock/d3/wiki/SVG-Shapes#line_defined).\n", "uid": "mbostock_0533f44f2cfabecc5e3a"}, {"code": "<script>\n   \n    L.mapbox.accessToken = 'pk.eyJ1IjoiZW5qYWxvdCIsImEiOiJjaWhtdmxhNTIwb25zdHBsejk0NGdhODJhIn0.2-F2hS_oTZenAWc0BMf_uw'\n    \n    //Setup our Leaflet map using Mapbox.js\n    var map = L.mapbox.map('map', 'mapbox.pencil', {maxZoom: 18, minZoom: 14})\n    .setView([51.5119112,-0.10000], 15);\n    \n    // Setup our svg layer that we can manipulate with d3\n    var svg = d3.select(map.getPanes().overlayPane)\n      .append(\"svg\");\n    var g = svg.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\");\n    \n    function project(ll) {\n      // our data came from csv, make it Leaflet friendly\n      var a = [+ll.lat, +ll.lon]; \n      // convert it to pixel coordinates\n      var point = map.latLngToLayerPoint(L.latLng(ll))\n      return point;\n    }\n  \n    d3.csv(\"dots.csv\", function(err, data) {\n      var dots = g.selectAll(\"circle.dot\")\n        .data(data)\n      \n      dots.enter().append(\"circle\").classed(\"dot\", true)\n      .attr(\"r\", 1)\n      .style({\n        fill: \"#0082a3\",\n        \"fill-opacity\": 0.6,\n        stroke: \"#004d60\",\n        \"stroke-width\": 1\n      })\n      .transition().duration(1000)\n      .attr(\"r\", 6)\n      \n      \n      function render() {\n        // We need to reposition our SVG and our containing group when the map\n        // repositions via zoom or pan\n        // https://github.com/zetter/voronoi-maps/blob/master/lib/voronoi_map.js\n        var bounds = map.getBounds();\n        var topLeft = map.latLngToLayerPoint(bounds.getNorthWest())\n        var bottomRight = map.latLngToLayerPoint(bounds.getSouthEast())\n        svg.style(\"width\", map.getSize().x + \"px\")\n          .style(\"height\", map.getSize().y + \"px\")\n          .style(\"left\", topLeft.x + \"px\")\n          .style(\"top\", topLeft.y + \"px\");\n        g.attr(\"transform\", \"translate(\" + -topLeft.x + \",\" + -topLeft.y + \")\");\n\n        // We reproject our data with the updated projection from leaflet\n        g.selectAll(\"circle.dot\")\n        .attr({\n          cx: function(d) { return project(d).x},\n          cy: function(d) { return project(d).y},\n        })\n\n      }\n\n      // re-render our visualization whenever the view changes\n      map.on(\"viewreset\", function() {\n        render()\n      })\n      map.on(\"move\", function() {\n        render()\n      })\n\n      // render our initial visualization\n      render()\n    })\n    \n  </script>", "description": "dots on a map: setup", "created_at": "2015-12-01T04:40:58Z", "updated_at": "2016-04-29T10:08:29Z", "api": ["d3.select", "d3.csv"], "readme": "This is a simple setup of Leaflet (via Mapbox) with d3 to show dots on a map. This can serve as a base for many interesting geographically based visualizations\n\nNice overview of using [d3 + Leaflet](http://chriszetter.com/blog/2014/06/15/building-a-voronoi-map-with-d3-and-leaflet/). \nI found this slightly simpler to use than Mike's [classic post](http://bost.ocks.org/mike/leaflet/).\n\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "enjalot_18cb7a77b2d9de597b86"}, {"code": "<script>\n    \n      var outerWidth = 960;\n      var outerHeight = 500;\n      var margin = { left: 64, top: 3, right: 15, bottom: 56 };\n\n      var xColumn = \"year\";\n      var yColumn = \"population\";\n\n      var xAxisLabelText = \"Time\";\n      var xAxisLabelOffset = 48;\n\n      var yAxisLabelText = \"World Population\";\n      var yAxisLabelOffset = 40;\n\n      var innerWidth  = outerWidth  - margin.left - margin.right;\n      var innerHeight = outerHeight - margin.top  - margin.bottom;\n\n      var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", outerWidth)\n        .attr(\"height\", outerHeight);\n      var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      var path = g.append(\"path\")\n        .attr(\"class\", \"chart-line\");\n\n      var xAxisG = g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + innerHeight + \")\")\n      var xAxisLabel = xAxisG.append(\"text\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"transform\", \"translate(\" + (innerWidth / 2) + \",\" + xAxisLabelOffset + \")\")\n        .attr(\"class\", \"label\")\n        .text(xAxisLabelText);\n\n      var yAxisG = g.append(\"g\")\n        .attr(\"class\", \"y axis\");\n      var yAxisLabel = yAxisG.append(\"text\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"transform\", \"translate(-\" + yAxisLabelOffset + \",\" + (innerHeight / 2) + \") rotate(-90)\")\n        .attr(\"class\", \"label\")\n        .text(yAxisLabelText);\n\n      var xScale = d3.time.scale().range([0, innerWidth]);\n      var yScale = d3.scale.linear().range([innerHeight, 0]);\n\n      // Use a modified SI formatter that uses \"B\" for Billion.\n      var siFormat = d3.format(\"s\");\n      var customTickFormat = function (d){\n        return siFormat(d).replace(\"G\", \"B\");\n      };\n\n      var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\")\n        .ticks(12)\n        .outerTickSize(0);\n      var yAxis = d3.svg.axis().scale(yScale).orient(\"left\")\n        .ticks(10)\n        .tickFormat(customTickFormat)\n        .outerTickSize(0);\n\n      var line = d3.svg.line()\n        .x(function(d) { return xScale(d[xColumn]); })\n        .y(function(d) { return yScale(d[yColumn]); });\n\n      function render(data){\n        xScale.domain(d3.extent(data, function (d){ return d[xColumn]; }));\n        yScale.domain([0, d3.max(data, function (d){ return d[yColumn]; })]);\n\n        xAxisG.call(xAxis);\n        yAxisG.call(yAxis);\n\n        path.attr(\"d\", line(data));\n      }\n\n      function type(d){\n        d.year = new Date(d.year);\n        d.population = +d.population;\n        return d;\n      }\n\n      d3.csv(\"worldPopulationByYear.csv\", type, render);\n\n    </script>", "description": "World Population Line Chart", "created_at": "2015-11-30T18:55:22Z", "updated_at": "2016-01-22T00:19:42Z", "api": ["d3.select", "d3.time.scale", "d3.scale.linear", "d3.format", "d3.svg.axis", "d3.svg.line", "d3.extent", "d3.max", "d3.csv"], "readme": "Line chart of world population over time. Data from the [United Nations Population Estimates](https://github.com/curran/screencasts/tree/gh-pages/splittingCharts/datasets). This is example 36 from the screencast [Splitting Charts](https://github.com/curran/screencasts/tree/gh-pages/splittingCharts).\n\nMIT License\n\n<!-- Start of SimpleHitCounter Code -->\n<div align=\"center\"><a href=\"http://www.simplehitcounter.com\" target=\"_blank\"><img src=\"http://simplehitcounter.com/hit.php?uid=1983875&f=16777215&b=0\" border=\"0\" height=\"18\" width=\"83\" alt=\"web counter\"></a></div>\n<!-- End of SimpleHitCounter Code -->\n", "uid": "curran_e05c76ab9450cbc214ac"}, {"code": "<script>\n\nvar margin = {top: 10, right: 10, bottom: 100, left: 40},\n    margin2 = {top: 430, right: 10, bottom: 20, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    height2 = 500 - margin2.top - margin2.bottom;\n\nvar parseDate = d3.time.format(\"%b %Y\").parse;\n\nvar x = d3.time.scale().range([0, width]),\n    x2 = d3.time.scale().range([0, width]),\n    y = d3.scale.linear().range([height, 0]),\n    y2 = d3.scale.linear().range([height2, 0]);\n\nvar xAxis = d3.svg.axis().scale(x).orient(\"bottom\"),\n    xAxis2 = d3.svg.axis().scale(x2).orient(\"bottom\"),\n    yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\nvar brush = d3.svg.brush()\n    .x(x2)\n    .on(\"brush\", brushed);\n\nvar area = d3.svg.area()\n    .interpolate(\"monotone\")\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.price); });\n\nvar area2 = d3.svg.area()\n    .interpolate(\"monotone\")\n    .x(function(d) { return x2(d.date); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.price); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom);\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\nvar zoom = d3.behavior.zoom().scaleExtent([1,1000])\n    .on(\"zoom\", zoomed);\n  \nvar context = svg.append(\"g\")\n    .attr(\"class\", \"context\")\n    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\n\n\t\nd3.csv(\"sp500.csv\", type, function(error, data) {\n  x.domain(d3.extent(data.map(function(d) { return d.date; })));\n  y.domain([0, d3.max(data.map(function(d) { return d.price; }))]);\n  x2.domain(x.domain());\n  y2.domain(y.domain());\n  \n  zoom.x(x);\n  \n  focus.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\t  \n  focus.call(zoom);\n\t\n  context.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"x brush\")\n      .call(brush)\n    .selectAll(\"rect\")\n      .attr(\"y\", -6)\n      .attr(\"height\", height2 + 7);\n});\n\nfunction brushed() {\n  x.domain(brush.empty() ? x2.domain() : brush.extent());\n  focus.select(\".area\").attr(\"d\", area);\n  focus.select(\".x.axis\").call(xAxis);\n  var s = x.domain();\n  var s_orig = x2.domain();\n  var newS = (s_orig[1]-s_orig[0])/(s[1]-s[0]);\n  var t = (s[0]-s_orig[0])/(s_orig[1]-s_orig[0]); \n  var trans = width*newS*t;\n  zoom.scale(newS);\n  zoom.translate([-trans,0]);\n}\n\nfunction zoomed() {\n  var t = \td3.event.translate;\n  var s = \td3.event.scale;\n  var size = width*s;\n  t[0] = Math.min(t[0], 0);\n  t[0] = Math.max(t[0], width-size);\n  zoom.translate(t);\n  focus.select(\".area\").attr(\"d\", area);\n  focus.select(\".x.axis\").call(xAxis);\n  //Find extent of zoomed area, what's currently at edges of graphed region\n  var brushExtent = [x.invert(0), x.invert(width)];\n  context.select(\".brush\").call(brush.extent(brushExtent));\n}\n\nfunction type(d) {\n  d.date = parseDate(d.date);\n  d.price = +d.price;\n  return d;\n}\n\n</script>", "description": "Focus+Context via Brushing & Zoom & Pan", "created_at": "2015-11-30T01:49:19Z", "updated_at": "2016-07-06T08:39:10Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.brush", "d3.svg.area", "d3.select", "d3.behavior.zoom", "d3.csv", "d3.extent", "d3.max"], "readme": "This examples demonstrates how to use D3's brush component to implement focus + context zooming. Click and drag in the small chart below to pan or zoom.\nWith the abitility to zoom and pan in the Focus view using d3.zoom behavior.", "uid": "sbreslav_be9af0d809b49864b7d8"}, {"code": "<script>\n/* https://github.com/d3/d3-hierarchy Copyright 2015 Mike Bostock */\n!function(n,r){\"object\"==typeof exports&&\"undefined\"!=typeof module?r(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],r):r(n.hierarchy={})}(this,function(n){\"use strict\";function r(n){var r=[];return n.forEach(function(n){n.children&&n.children.forEach(function(e){r.push({source:n,target:e})})}),r}function e(n,e){return n.sort=function(){var r=e.sort.apply(e,arguments);return r===e?n:r},n.children=function(){var r=e.children.apply(e,arguments);return r===e?n:r},n.value=function(){var r=e.value.apply(e,arguments);return r===e?n:r},n.nodes=n,n.links=r,n}function t(n){return{x:n.x,y:n.y,dx:n.dx,dy:n.dy}}function u(n,r){var e=n.x+r[3],t=n.y+r[0],u=n.dx-r[1]-r[3],a=n.dy-r[0]-r[2];return 0>u&&(e+=u/2,u=0),0>a&&(t+=a/2,a=0),{x:e,y:t,dx:u,dy:a}}function a(n,r){for(var e=[n],t=[];null!=(n=e.pop());)if(t.push(n),(a=n.children)&&(u=a.length))for(var u,a,l=-1;++l<u;)e.push(a[l]);for(;null!=(n=t.pop());)r(n)}function l(n,r){for(var e=[n];null!=(n=e.pop());)if(r(n),(u=n.children)&&(t=u.length))for(var t,u;--t>=0;)e.push(u[t])}function i(n){return n.value}function c(n){return n.children}function o(n,r){return r.value-n.value}function f(){function n(r){var l,i=[r],c=[];for(r.parent=null,r.depth=0;null!=(l=i.pop());)if(c.push(l),(f=t.call(n,l,l.depth))&&(o=f.length)){for(var o,f,h;--o>=0;)i.push(h=f[o]),h.parent=l,h.depth=l.depth+1;u&&(l.value=0),l.children=f}else u&&(l.value=+u.call(n,l,l.depth)||0),delete l.children;return a(r,function(n){var r,t;e&&(r=n.children)&&r.sort(e),u&&(t=n.parent)&&(t.value+=n.value)}),c}var e=o,t=c,u=i;return n.nodes=n,n.links=r,n.sort=function(r){return arguments.length?(e=r,n):e},n.children=function(r){return arguments.length?(t=r,n):t},n.value=function(r){return arguments.length?(u=r,n):u},n.revalue=function(r){return u&&(l(r,function(n){n.children&&(n.value=0)}),a(r,function(r){var e;r.children||(r.value=+u.call(n,r,r.depth)||0),(e=r.parent)&&(e.value+=r.value)})),r},n}function h(){function n(n){var r=x.call(h,n,n.depth);return null==r?t(n):u(n,\"number\"==typeof r?[r,r,r,r]:r)}function r(n){return u(n,x)}function a(n,r){for(var e,t,u=-1,a=n.length;++u<a;)t=(e=n[u]).value*(0>r?0:r),e.area=isNaN(t)||0>=t?0:t}function l(n){var r=n.children;if(r&&r.length){var e,t,u,i=y(n),f=[],h=r.slice(),d=1/0,p=\"slice\"===m?i.dx:\"dice\"===m?i.dy:\"slice-dice\"===m?1&n.depth?i.dy:i.dx:Math.min(i.dx,i.dy);for(a(h,i.dx*i.dy/n.value),f.area=0;(u=h.length)>0;)f.push(e=h[u-1]),f.area+=e.area,\"squarify\"!==m||(t=c(f,p))<=d?(h.pop(),d=t):(f.area-=f.pop().area,o(f,p,i,!1),p=Math.min(i.dx,i.dy),f.length=f.area=0,d=1/0);f.length&&(o(f,p,i,!0),f.length=f.area=0),r.forEach(l)}}function i(n){var r=n.children;if(r&&r.length){var e,t=y(n),u=r.slice(),l=[];for(a(u,t.dx*t.dy/n.value),l.area=0;e=u.pop();)l.push(e),l.area+=e.area,null!=e.z&&(o(l,e.z?t.dx:t.dy,t,!u.length),l.length=l.area=0);r.forEach(i)}}function c(n,r){for(var e,t=n.area,u=0,a=1/0,l=-1,i=n.length;++l<i;)(e=n[l].area)&&(a>e&&(a=e),e>u&&(u=e));return t*=t,r*=r,t?Math.max(r*u*_/t,t/(r*a*_)):1/0}function o(n,r,e,t){var u,a=-1,l=n.length,i=e.x,c=e.y,o=r?v(n.area/r):0;if(r==e.dx){for((t||o>e.dy)&&(o=e.dy);++a<l;)u=n[a],u.x=i,u.y=c,u.dy=o,i+=u.dx=Math.min(e.x+e.dx-i,o?v(u.area/o):0);u.z=!0,u.dx+=e.x+e.dx-i,e.y+=o,e.dy-=o}else{for((t||o>e.dx)&&(o=e.dx);++a<l;)u=n[a],u.x=i,u.y=c,u.dx=o,c+=u.dy=Math.min(e.y+e.dy-c,o?v(u.area/o):0);u.z=!1,u.dy+=e.y+e.dy-c,e.x+=o,e.dx-=o}}function h(n){var r=d||p(n),e=r[0];return e.x=0,e.y=0,e.dx=s[0],e.dy=s[1],d&&p.revalue(e),a([e],e.dx*e.dy/e.value),(d?i:l)(e),g&&(d=r),r}var d,p=f(),v=Number,s=[1,1],x=null,y=t,g=!1,m=\"squarify\",_=V;return h.size=function(n){return arguments.length?(s=[+n[0],+n[1]],h):s.slice()},h.padding=function(e){if(!arguments.length)return Array.isArray(x)?x.slice():x;var u;return y=null==e?(x=null,t):\"function\"==(u=typeof e)?(x=e,n):\"number\"===u?(x=[e,e,e,e],r):(x=[+e[0],+e[1],+e[2],+e[3]],r),h},h.round=function(n){return arguments.length?(v=n?Math.round:Number,h):v!==Number},h.sticky=function(n){return arguments.length?(g=!!n,d=null,h):g},h.ratio=function(n){return arguments.length?(_=+n,h):_},h.mode=function(n){return arguments.length?(m=U.hasOwnProperty(n)?n+\"\":\"squarify\",h):m},e(h,p)}function d(n){var r=n.children;return r.length?r[0]:n.t}function p(n){var r,e=n.children;return(r=e.length)?e[r-1]:n.t}function v(n,r,e){return n.a.parent===r.parent?n.a:e}function s(n,r,e){var t=e/(r.i-n.i);r.c-=t,r.s+=e,n.c+=t,r.z+=e,r.m+=e}function x(n){for(var r,e=0,t=0,u=n.children,a=u.length;--a>=0;)r=u[a],r.z+=e,r.m+=e,e+=r.s+(t+=r.c)}function y(n,r){return n.parent===r.parent?1:2}function g(){function n(n,e){var i=o.call(this,n,e),f=i[0],d=r(f);if(a(d,t),d.parent.m=-d.z,l(d,u),m)l(f,c);else{var p=f,v=f,s=f;l(f,function(n){n.x<p.x&&(p=n),n.x>v.x&&(v=n),n.depth>s.depth&&(s=n)});var x=h(p,v)/2-p.x,y=g[0]/(v.x+h(v,p)/2+x),_=g[1]/(s.depth||1);l(f,function(n){n.x=(n.x+x)*y,n.y=n.depth*_})}return i}function r(n){for(var r,e={A:null,children:[n]},t=[e];null!=(r=t.pop());)for(var u,a=r.children,l=0,i=a.length;i>l;++l)t.push((a[l]=u={_:a[l],parent:r,children:(u=a[l].children)&&u.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:l}).a=u);return e.children[0]}function t(n){var r=n.children,e=n.parent.children,t=n.i?e[n.i-1]:null;if(r.length){x(n);var u=(r[0].z+r[r.length-1].z)/2;t?(n.z=t.z+h(n._,t._),n.m=n.z-u):n.z=u}else t&&(n.z=t.z+h(n._,t._));n.parent.A=i(n,t,n.parent.A||e[0])}function u(n){n._.x=n.z+n.parent.m,n.m+=n.parent.m}function i(n,r,e){if(r){for(var t,u=n,a=n,l=r,i=u.parent.children[0],c=u.m,o=a.m,f=l.m,x=i.m;l=p(l),u=d(u),l&&u;)i=d(i),a=p(a),a.a=n,t=l.z+f-u.z-c+h(l._,u._),t>0&&(s(v(l,n,e),n,t),c+=t,o+=t),f+=l.m,c+=u.m,x+=i.m,o+=a.m;l&&!p(a)&&(a.t=l,a.m+=f-o),u&&!d(i)&&(i.t=u,i.m+=c-x,e=n)}return e}function c(n){n.x*=g[0],n.y=n.depth*g[1]}var o=f().sort(null).value(null),h=y,g=[1,1],m=null;return n.separation=function(r){return arguments.length?(h=r,n):h},n.size=function(r){return arguments.length?(m=null==(g=r)?c:null,n):m?null:g},n.nodeSize=function(r){return arguments.length?(m=null==(g=r)?null:c,n):m?g:null},e(n,o)}function m(n){var r,e,t=n.children,u=0;if(t)for(r=0,e=t.length;e>r;++r)u=Math.max(u,m(t[r]));return 1+u}function _(n,r,e,t){var u=n.children;if(n.x=r,n.y=n.depth*t,n.dx=e,n.dy=t,u&&(a=u.length)){var a,l,i,c=-1;for(e=n.value?e/n.value:0;++c<a;)_(l=u[c],r,i=l.value*e,t),r+=i}}function k(){function n(n,e){var u=r.call(this,n,e);return _(u[0],0,t[0],t[1]/m(u[0])),u}var r=f(),t=[1,1];return n.size=function(r){return arguments.length?(t=[+r[0],+r[1]],n):t.slice()},e(n,r)}function z(n,r,e,t){var u=n.children;if(n.x=r+=t*n.x,n.y=e+=t*n.y,n.r*=t,u)for(var a=-1,l=u.length;++a<l;)z(u[a],r,e,t)}function M(n){delete n._pack_next,delete n._pack_prev}function b(n){for(var r,e=(n=n.slice()).length,t=null,u=t;e;){var a={id:n.length-e,value:n[e-1],next:null};u=u?u.next=a:t=a,n[r]=n[--e]}return{head:t,tail:u}}function q(n,r){var e=n.x-r.x,t=n.y-r.y;return Math.sqrt(e*e+t*t)<n.r-r.r+1e-6}function A(n,r,e){var t=n.x,u=n.y,a=n.r,l=r.x,i=r.y,c=r.r,o=e.x,f=e.y,h=e.r,d=2*(t-l),p=2*(u-i),v=2*(c-a),s=t*t+u*u-a*a-l*l-i*i+c*c,x=2*(t-o),y=2*(u-f),g=2*(h-a),m=t*t+u*u-a*a-o*o-f*f+h*h,_=x*p-d*y,k=(p*m-y*s)/_-t,z=(y*v-p*g)/_,M=(x*s-d*m)/_-u,b=(d*g-x*v)/_,q=z*z+b*b-1,A=2*(k*z+M*b+a),E=k*k+M*M-a*a,N=(-A-Math.sqrt(A*A-4*q*E))/(2*q);return{x:k+z*N+t,y:M+b*N+u,r:N}}function E(n,r){var e=n.x,t=n.y,u=n.r,a=r.x,l=r.y,i=r.r,c=a-e,o=l-t,f=i-u,h=Math.sqrt(c*c+o*o);return{x:(e+a+c/h*f)/2,y:(t+l+o/h*f)/2,r:(h+u+i)/2}}function N(n,r){var e,t,u,a=null,l=n.head;switch(r.length){case 1:e=r[0];break;case 2:e=E(r[0],r[1]);break;case 3:e=A(r[0],r[1],r[2])}for(;l;)u=l.value,t=l.next,e&&q(e,u)?a=l:(a?(n.tail=a,a.next=null):n.head=n.tail=null,r.push(u),e=N(n,r),r.pop(),n.head?(l.next=n.head,n.head=l):(l.next=null,n.head=n.tail=l),a=n.tail,a.next=t),l=t;return n.tail=a,e}function w(n){return N(b(n),[])}function S(n,r){var e=n._pack_next;n._pack_next=r,r._pack_prev=n,r._pack_next=e,e._pack_prev=r}function j(n,r){n._pack_next=r,r._pack_prev=n}function O(n,r){var e=r.x-n.x,t=r.y-n.y,u=n.r+r.r;return.999*u*u>e*e+t*t}function P(n,r,e){var t=n.r+e.r,u=r.x-n.x,a=r.y-n.y;if(t&&(u||a)){var l=r.r+e.r,i=u*u+a*a;l*=l,t*=t;var c=.5+(t-l)/(2*i),o=Math.sqrt(Math.max(0,2*l*(t+i)-(t-=i)*t-l*l))/(2*i);e.x=n.x+c*u+o*a,e.y=n.y+c*a-o*u}else e.x=n.x+t,e.y=n.y}function B(n){n._pack_next=n._pack_prev=n}function C(n){if((r=n.children)&&(c=r.length)){var r,e,t,u,a,l,i,c;if(r.forEach(B),e=r[0],e.x=-e.r,e.y=0,c>1&&(t=r[1],t.x=t.r,t.y=0,c>2))for(u=r[2],P(e,t,u),S(e,u),e._pack_prev=u,S(u,t),t=e._pack_next,a=3;c>a;a++){P(e,t,u=r[a]);var o=0,f=1,h=1;for(l=t._pack_next;l!==t;l=l._pack_next,f++)if(O(l,u)){o=1;break}if(1==o)for(i=e._pack_prev;i!==l._pack_prev&&!O(i,u);i=i._pack_prev,h++);o?(h>f||f==h&&t.r<e.r?j(e,t=l):j(e=i,t),a--):(S(e,u),t=u)}var u=w(r);for(a=0;c>a;++a)e=r[a],e.x-=u.x,e.y-=u.y;n.r=u.r,r.forEach(M)}}function D(n,r){return n.value-r.value}function F(){function n(n,e){var i=t.call(this,n,e),c=i[0],o=l[0],f=l[1],h=null==r?Math.sqrt:\"function\"==typeof r?r:function(){return r};if(c.x=c.y=0,a(c,function(n){n.r=+h(n.value)}),a(c,C),u){var d=u*(r?1:Math.max(2*c.r/o,2*c.r/f))/2;a(c,function(n){n.r+=d}),a(c,C),a(c,function(n){n.r-=d})}return z(c,o/2,f/2,r?1:1/Math.max(2*c.r/o,2*c.r/f)),i}var r,t=f().sort(D),u=0,l=[1,1];return n.size=function(r){return arguments.length?(l=[+r[0],+r[1]],n):l.slice()},n.radius=function(e){return arguments.length?(r=null==e||\"function\"==typeof e?e:+e,n):r},n.padding=function(r){return arguments.length?(u=+r,n):u},e(n,t)}function G(n){for(var r,e;(r=n.children)&&(e=r.length);)n=r[e-1];return n}function H(n){for(var r;(r=n.children)&&r.length;)n=r[0];return n}function I(n){return 1+n.reduce(function(n,r){return Math.max(n,r.y)},0)}function J(n){return n.reduce(function(n,r){return n+r.x},0)/n.length}function K(){function n(n,e){var i,c=r.call(this,n,e),o=c[0],f=0;a(o,function(n){var r=n.children;r&&r.length?(n.x=J(r),n.y=I(r)):(n.x=i?f+=t(n,i):0,n.y=0,i=n)});var h=H(o),d=G(o),p=h.x-t(h,d)/2,v=d.x+t(d,h)/2;return a(o,l?function(n){n.x=(n.x-o.x)*u[0],n.y=(o.y-n.y)*u[1]}:function(n){n.x=(n.x-p)/(v-p)*u[0],n.y=(1-(o.y?n.y/o.y:1))*u[1]}),c}var r=f().sort(null).value(null),t=y,u=[1,1],l=!1;return n.separation=function(r){return arguments.length?(t=r,n):t},n.size=function(r){return arguments.length?(l=null==(u=r),n):l?null:u},n.nodeSize=function(r){return arguments.length?(l=null!=(u=r),n):l?u:null},e(n,r)}function L(n){for(var r=[],e=n.parent;null!=e;)r.push(n),n=e,e=e.parent;return r.push(n),r}function Q(n,r){if(n===r)return n;var e=L(n),t=L(r),u=null;for(n=e.pop(),r=t.pop();n===r;)u=n,n=e.pop(),r=t.pop();return u}function R(n,r){for(var e=Q(n,r),t=[n];n!==e;)n=n.parent,t.push(n);for(var u=t.length;r!==e;)t.splice(u,0,r),r=r.parent;return t}function T(){return function(n){for(var r,e=-1,t=n.length,u=new Array(t);++e<t;)r=n[e],u[e]=R(r.source,r.end);return u}}var U={slice:1,dice:1,\"slice-dice\":1,squarify:1},V=(1+Math.sqrt(5))/2;n.bundle=T,n.cluster=K,n.links=r,n.pack=F,n.partition=k,n.tree=g,n.treemap=h});\n\nvar diameter = 960,\n    margin = 2;\n\nvar pack = hierarchy.pack()\n  .size([diameter - margin * 2, diameter - margin * 2])\n  .value(function(d) { return d.votes; })\n  .sort(function(a,b) {\n     return b.value - a.value;\n  })\n\nvar svg = d3.select(\"body\")\n  .append(\"svg\")\n  .attr(\"height\", diameter)\n  .attr(\"width\", diameter)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin + \",\" + margin + \")\")\n\nd3.csv(\"General_Election_2010_Summary_Results.csv\", function(data) {\n  var nested_data = d3.nest()\n    .key(function(d) { return d[\"Contest Title\"].replace(/[,\\\"]/g, \"\").replace(/[\\s]/g, \"_\").replace(/:_/g, \":\"); })\n    .entries(data);\n\n  var haiwaii_elections = { name: \"haiwaii_elections\", children: nested_data.map(function(d) {\n    return { \"name\": d.key, \"children\": d.values.map(function(v) {\n      return { name: v[\"Candidate Name\"], party: v[\"Candidate Party\"], votes: v[\"Total Votes\"]}\n    })}\n  })};\n\n  var tooltip = d3.select(\"body\")\n    .append(\"pre\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\");\n\n  var node = svg.selectAll(\".node\")\n     .data(pack.nodes(haiwaii_elections))\n     .enter()\n     .append(\"g\")\n     .attr(\"class\", function(d) {\n       var classes = \"\";\n       if (d.name == \"YES\") {\n         classes += \" yes\";\n       }\n       if (d.name == \"NO\") {\n         classes += \" no\";\n       }\n       if (/^\\(R\\)/.test(d.name)) {\n         classes += \" republican\";\n       }\n       if (/^\\(D\\)/.test(d.name)) {\n         classes += \" democrat\";\n       }\n      if (/^\\(G\\)/.test(d.name)) {\n         classes += \" green\";\n       }\n       if (/^\\(L\\)/.test(d.name)) {\n         classes += \" libertarian\";\n       }\n       if (/^\\(N\\)/.test(d.name)) {\n         classes += \" independent\";\n       }\n       if (d.children) {\n         classes += \" node\";\n       } else {\n         classes += \" leaf node\";\n       }\n       return classes;\n     })\n     .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"})\n     .append(\"circle\")\n     .attr(\"r\", function(d) { return d.r; })\n     .on(\"mouseover\", function(d) {\n       var tooltip_text = \"\";\n       if (d.parent != null) { // top-most level's parent is null\n         if (d.children) {\n           tooltip_text = d.name.replace(/:(.)/, \":_$1\").split(\"_\").map(function(d) { return d.charAt(0).toUpperCase() + d.substr(1).toLowerCase(); }).join(\" \");\n         } else {\n           tooltip_text = d.name + \"\\n\" + d.votes + \" votes\";\n         }\n         if (d.parent.children && d.parent.children.length == 1) { // 1 candidate contest\n           tooltip_text = d.parent.name.split(\"_\").map(function(d) { return d.charAt(0).toUpperCase() + d.substr(1).toLowerCase(); }).join(\" \") + \"\\n\" + d.name + \"\\n\" + d.votes + \" votes\";\n         }\n       } else { // top-most level's tooltip is just its name\n         tooltip_text = d.name.split(\"_\").map(function(d) { return d.charAt(0).toUpperCase() + d.substr(1).toLowerCase(); }).join(\" \");\n       }\n\n       if (d3.event.pageX >= 500) {\n         var whitespaces = [];\n         if (tooltip_text.length >= 40) {\n           var regex = /\\s/g, result;\n           while (result = regex.exec(tooltip_text)) {\n             whitespaces.push(result.index);\n           }\n           var l = whitespaces.length - 1,\n               b = [];\n\n           b.push(0);\n           b.push(Math.floor(l/2));\n\n           tooltip_text = tooltip_text.substr(0, whitespaces[b[0]]) + \"\\n\" + tooltip_text.substr(whitespaces[b[0]], whitespaces[b[1]] - whitespaces[b[0]]) + \"\\n\" + tooltip_text.substr(whitespaces[b[1]]);\n         }\n       }\n       tooltip.text(tooltip_text);\n       return tooltip.style(\"visibility\", \"visible\");\n     })\n     .on(\"mousemove\", function() {\n       var pageX = d3.event.pageX,\n           pageY = d3.event.pageY,\n           left, top, bottom, right;\n\n       if (pageX < 600) {\n         left = pageX + 10;\n         top = pageY - 10;\n       }\n       if (pageX >= 600) {\n         left = pageX - 250;\n         top = pageY - 80;\n       }\n       return tooltip.style(\"top\", top + \"px\").style(\"left\", left + \"px\");\n     })\n     .on(\"mouseout\", function() {\n       return tooltip.style(\"visibility\", \"hidden\");\n     });\n});\nd3.select(self.frameElement).style(\"height\", (diameter + margin) + \"px\").style(\"width\", (diameter + margin) + \"px\");\t\n</script>", "description": "Hawaii Elections 1", "created_at": "2015-11-27T23:53:11Z", "updated_at": "2015-11-28T01:38:23Z", "api": ["d3.select", "d3.csv", "d3.nest"], "readme": "d3 v4 pack layout of Hawaii 2010 Election Data. Based on [this](http://bl.ocks.org/mbostock/467f1a0db47753cc630e). ", "uid": "dhoboy_ceb621dd5e7a4ba2620c"}, {"code": "<script>\n    // http://slavevoyages.org/tast/assessment/estimates.faces\n    d3.tsv(\"slavery.tsv\", function(err, data) {\n      var countries = Object.keys(data[0]).slice(1,7);\n      countries = [\n        \"Portugal\",\n        \"Great Britain\",\n        \"France\",\n        \"Spain\",\n\t\t\t\t\"Netherlands\",\n\t\t\t\t\"U.S.A.\",\n      ]\n      var countryData = {}\n      countries.forEach(function(country) {\n        countryData[country] = data.map(function(d) {\n          return parseInt(d[country].replace(/,/g, ''));\n        })\n      })\n      console.log(countries)\n      console.log(data[0]);\n      var width = 960;\n      var height = 500;\n      \n      var lineHeight = 211;\n      var lineOffset = 21;\n      \n      var chartHeight = 350;\n      \n      var color = d3.scale.ordinal()\n      .domain(d3.range(countries.length))\n      .range([\n        \"#7C938D\",\n        \"#544C36\",\n        \"#BB976E\",\n        \"#A4B284\",\n        \"#5E6560\",\n        \"#7A8868\",\n        \"#9AB7B5\"\n      ])\n\n      \n      var svg = d3.select(\"svg\")\n      .attr({width: width, height: height });\n      \n      var xscale = d3.scale.linear()\n      //.domain(d3.extent(data, function(d) { return +d.year }))\n      .domain([0, data.length])\n      .range([140, width - 20])\n      \n      var yscale = d3.scale.linear()\n      .domain([0, d3.max(countries, function(country) {\n        return d3.max(countryData[country])\n      })])\n      .range([lineHeight, 0])\n      \n      var area = d3.svg.area()\n        .x(function(d,i) { return xscale(i); })\n        .y0(function(d) { return lineHeight; })\n        .y1(function(d) { return yscale(d); })\n        .interpolate(\"basis\")\n\n      var xaxis = svg.selectAll(\"g.year\")\n      .data(data)\n      .enter()\n      .append(\"g\").classed(\"year\", true)\n      .attr({\n        transform: function(d,i) {\n          return \"translate(\" + [xscale(i), chartHeight] + \")\"\n        }\n      })\n      .style({\n        \"display\": function(d,i) { return i % 20 == 0 ? \"\": \"none\" },\n        \"font-size\": \"10px\"\n      })\n      xaxis\n      .append(\"line\").attr({\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: -chartHeight,\n        stroke: \"#f7f7f7\",\n\n      })\n      xaxis\n      .append(\"text\")\n        .text(function(d) { return d.year })\n        .attr(\"transform\", \"rotate(0)translate(-10,12)\")\n      \n      var legend = svg.selectAll(\"g.country\")\n      .data(countries)\n      .enter()\n      .append(\"g\").classed(\"country\", true)\n        .attr(\"transform\", function(d,i) {\n          return \"translate(\" + [20, 205 + i * lineOffset] + \")\";\n        })\n        .style({\n          fill: function(d,i) { return color(i) },\n          \"font-family\": \"Helvetica\"\n        })\n        .append(\"text\")\n      \t.text(function(d) { return d })\n      \n\n      var groups = svg.selectAll(\"g.countries\")\n        .data(countries)\n        .enter().append(\"g\").classed(\"countries\", true)\n        .attr({\n          transform: function(d,i) { return \"translate(\" + [0, i * lineOffset] + \")\" },\n          fill: function(d,i) { return color(i) },\n        })\n      \n      var areas = groups.selectAll(\"path.country\")\n      \t.data(function(d) { return [countryData[d]] })\n      areas\n        .enter()\n        .append(\"path\").classed(\"country\", true)\n        .attr(\"d\", function(d) {\n          return area(d)\n        })\n      \n      \n      \n    })\n  </script>", "description": "slave voyages - embarking", "created_at": "2015-11-25T02:33:10Z", "updated_at": "2015-11-25T02:33:11Z", "api": ["d3.tsv", "d3.scale.ordinal", "d3.range", "d3.select", "d3.scale.linear", "d3.extent", "d3.max", "d3.svg.area"], "readme": "## Slave Voyages - Embarking\n\nThis is an attempt at visualizing the relative scale of the slave trade by country. The data comes from [slavevoyages.org](http://slavevoyages.org/tast/assessment/estimates.faces).\n\nThe visualization is inpsired by the [Mountains-out-of-molehills](http://www.informationisbeautiful.net/visualizations/mountains-out-of-molehills/) visualization. The focus is to communicate the relative scale over time, giving us a sense of activity over time of this attrocious part of our history.\n\n\n\n\n\n\n\n\n\n\n\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/754c7d061c2d0b71be37'>slave voyages - embarking</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/2d678d730b0791020711'>slave voyages - embarking</a>", "uid": "jonpage_324d2ec970c1f9556ddb"}, {"code": "<script>\n\n      // Extract the width and height that was computed by CSS.\n      var vizDiv = document.getElementById(\"viz\");\n      var width = vizDiv.clientWidth;\n      var height = vizDiv.clientHeight;\n      var minSide = d3.min([width, height]);\n      var xOffset = (width - minSide) / 2;\n      var yOffset = (height - minSide) / 2;\n\n      // Use the extracted size to set the size of an SVG element.\n      var svg = d3.select(vizDiv).append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .classed(\"main\", true);\n\n      d3.json(\"readme-blocks-graph.json\", function(error,data) { createNetwork(data) });\n\n      function onlyUnique(value, index, self) {\n        return self.indexOf(value) === index;\n      }\n\n      function createNetwork(graphContainer) {\n        var nodeHash = {};\n        var nodes = [];\n        var edges = [];\n\n        var edgelist = graphContainer[\"graph\"][\"edges\"];\n        var nodelist = graphContainer[\"graph\"][\"nodes\"];\n\n        edgelist.forEach(function (edge) {\n          if (!nodeHash[edge.source]) {\n            nodeHash[edge.source] = {\n              id: edge.source, \n              label: edge.source\n            };\n            nodes.push(nodeHash[edge.source]);\n          }\n          if (!nodeHash[edge.target]) {\n            nodeHash[edge.target] = {\n              id: edge.target, \n              label: edge.target\n            };\n            nodes.push(nodeHash[edge.target]);\n          }\n          if (edge/*.weight == 5*/) {\n            edges.push({id: nodeHash[edge.source].id + \"-\" + nodeHash[edge.target].id, source: nodeHash[edge.source], target: nodeHash[edge.target], weight: 1/*edge.weight*/});\n          }\n        });\n\n        // get some attributes from the nodelist (calculated elsewhere)\n        // and store them in the nodeHash\n        nodelist.forEach(function (node) {\n          if(nodeHash[node.id]) {\n            nodeHash[node.id][\"user\"] = node[\"user\"];\n            nodeHash[node.id][\"createdAt\"] = node[\"createdAt\"];\n            nodeHash[node.id][\"updatedAt\"] = node[\"updatedAt\"];\n            nodeHash[node.id][\"description\"] = node[\"description\"];\n          }\n        })\n\n        // take the attributes now in the nodeHash\n        // and hang them on the nodes (calculated here from the edgelist) \n        nodes.forEach(function (node) {\n          if(nodeHash[node.id]) {\n            node[\"user\"] = nodeHash[node.id][\"user\"];\n            node[\"createdAt\"] = nodeHash[node.id][\"createdAt\"];\n            node[\"updatedAt\"] = nodeHash[node.id][\"updatedAt\"];\n            node[\"description\"] = nodeHash[node.id][\"description\"];\n          }          \n        })\n\n        console.log(\"nodes\", nodes);\n        console.log(\"edges\", edges);\n\n        createForceNetwork(nodes, edges);\n      }\n\n      function modularityCensus(nodes, edges, moduleHash) {\n        edges.forEach(function (edge) {\n          if (edge.source.module !== edge.target.module) {\n            edge.border = true;\n          }\n          else {\n            edge.border = false;\n          }\n        });\n        nodes.forEach(function (node) {\n          var theseEdges = edges.filter(function(d) {return d.source === node || d.target === node});\n\n          var theseSourceModules = theseEdges.map(function (d) {return d.source.module}).filter(onlyUnique);\n          var theseTargetModules = theseEdges.map(function (d) {return d.target.module}).filter(onlyUnique);\n\n          if (theseSourceModules.length > 1 || theseTargetModules.length > 1) {\n            node.border = true;\n          }\n          else {\n            node.border = false;\n          }\n        });\n\n      }\n\n      function createForceNetwork(nodes, edges) {\n\n      //create a network from an edgelist\n\n      //var colors = d3.scale.ordinal().domain([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]).range([\"#996666\", \"#66CCCC\", \"#FFFF99\", \"#CC9999\", \"#666633\", \"#993300\", \"#999966\", \"#660000\", \"#996699\", \"#cc6633\", \"#ff9966\", \"#339999\", \"#6699cc\", \"#ffcc66\", \"#ff6600\", \"#00ccccc\"]);\n      var colors = d3.scale.category20();\n\n      var node_data = nodes.map(function (d) {return d.id});\n      var edge_data = edges.map(function (d) {return {source: d.source.id, target: d.target.id, weight: 1}; });\n\n      console.log(\"node_data for jLouvain\", node_data);\n      console.log(\"edge_data for jLouvain\", edge_data);\n\n      var community = jLouvain().nodes(node_data).edges(edge_data);\n      var result  = community();\n\n      console.log(\"jLouvain result\", result);\n\n      nodes.forEach(function (node) {\n        node.module = result[node.id]\n        //console.log(\"node.module\", node.module)\n      });\n\n      modularityCensus(nodes, edges, result);\n\n      var force = d3.layout.force().nodes(nodes).links(edges)\n        .size([minSide, minSide]) // make a square\n        .charge(-100)\n        .chargeDistance(100)\n        .linkStrength(2)\n        .linkDistance(3)\n        .gravity(0.07);\n\n      var edgeEnter = d3.select(\"svg.main\").selectAll(\"g.edge\")\n        .data(edges, function (d) {return d.id})\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"edge\");\n\n      edgeEnter\n        .append(\"line\")\n        .style(\"stroke-width\", \"1px\")\n        .style(\"stroke\", \"gray\")\n        .style(\"pointer-events\", \"none\");\n\n      var nodeEnter = d3.select(\"svg.main\").selectAll(\"g.node\")\n        .data(nodes, function (d) {return d.id})\n        .enter();\n        \n      nodeEnter\n        .append(\"a\")\n          .attr(\"xlink:href\", function (d){\n            return \"http://bl.ocks.org/\" + d.user + \"/\" + d.id;\n          })\n          //.attr(\"target\", \"_blank\")\n        .append(\"circle\")\n          .attr(\"r\", 3)\n          .attr(\"class\", \"foreground\")\n          .style(\"fill\", function (d) {return colors(d.module)})\n          .style(\"stroke-width\", function (d) {return d.border ? \"3px\" : \"1px\"})\n\n      /*\n        // draw labels over nodes\n        nodeEnter.append(\"text\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"y\", 3)\n        .style(\"stroke-width\", \"1px\")\n        .style(\"stroke-opacity\", 0.75)\n        .style(\"stroke\", \"white\")\n        .style(\"font-size\", \"8px\")\n        .text(function (d) {return d.id})\n        .style(\"pointer-events\", \"none\")\n\n        nodeEnter.append(\"text\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"y\", 3)\n        .style(\"font-size\", \"8px\")\n        .text(function (d) {return d.id})\n        .style(\"pointer-events\", \"none\")\n      */\n\n        \n        force.start();\n\n        for(var i = 0; i < 200; i++){\n          force.tick();\n        }\n        //force.on(\"tick\", updateNetwork);\n\n        // after 200 iterations, we say the network \n        // has stabilized and we stop the \n        // force layout physics simulation\n        force.stop();\n        // now we draw the network\n        updateNetwork();\n\n        function updateNetwork(e) {\n\n          // draw the links\n          d3.select(\"svg.main\").selectAll(\"line\")\n            .attr(\"x1\", function (d) {return d.source.x})\n            .attr(\"y1\", function (d) {return d.source.y})\n            .attr(\"x2\", function (d) {return d.target.x})\n            .attr(\"y2\", function (d) {return d.target.y})\n            .attr(\"transform\", \"translate(\" + xOffset + \",\" + yOffset +\")\");\n\n          // draw the nodes\n          d3.select(\"svg.main\").selectAll(\"circle\")\n            .attr(\"cx\", function (d) {return d.x; })\n            .attr(\"cy\", function (d) {return d.y; })\n            .attr(\"transform\", \"translate(\" + xOffset + \",\" + yOffset +\")\");\n\n        }\n\n      }\n    </script>", "description": "Blocks Graph I Readme Mentions", "created_at": "2015-11-23T06:33:22Z", "updated_at": "2016-06-14T22:35:31Z", "api": ["d3.min", "d3.select", "d3.json", "d3.scale.ordinal", "d3.scale.category20", "d3.layout.force"], "readme": "a look at `README.md` files from [bl.ocks.org](http://bl.ocks.org/) that contain links to other bl.ocks \n\nclick on a node to view that bl.ock  \n\ncommunity detection done with the [jLouvain](https://github.com/upphiminn/jLouvain) library\n\nsource data and scripts used to generate the graph data are at [this repository](https://github.com/micahstubbs/readme-vis)\n\na lineage of bl.ocks that informed this idea:\n\n* [all the blocks](http://bl.ocks.org/enjalot/6ac67b0d8ed673c9aa61) from [enjalot](http://bl.ocks.org/enjalot)\n* [Networks - Graphs 7](http://bl.ocks.org/emeeks/f2f6883ac7c965d09b90) from [emeeks](http://bl.ocks.org/emeeks)\n* [Blocks Graph](http://bl.ocks.org/curran/1da93bab4cdc708f41ae) from [curran](http://bl.ocks.org/curran)\n* [Blocks Graph Edges Only](http://bl.ocks.org/curran/daf6bc9db8b0a28e3973) from [curran](http://bl.ocks.org/curran)\n* [Blocks Graph with Links](http://bl.ocks.org/curran/be4a45ec74357e7d9b10) from [curran](http://bl.ocks.org/curran)\n* [Dynamic Size](http://bl.ocks.org/curran/db1e524cae5e4344b2e6) from [curran](http://bl.ocks.org/curran)\n\nMIT License\n\n", "uid": "micahstubbs_8a173cfcb9171627c7f1"}, {"code": "<script>\n    function draw(data) {\n    \"use strict\";\n    /*\n        D3.js setup code\n    */\n    // set margins according to Mike Bostock's margin conventions\n    // http://bl.ocks.org/mbostock/3019563\n    var margin = {top: 25, right: 40, bottom: 200, left: 100};\n    \n    // set height and width of chart\n    var width = innerWidth - margin.left - margin.right,\n        height = innerHeight - margin.top - margin.bottom;\n    \n    // specify the radius of our circles and the\n    // column we want to plot\n    var radius = 3,\n        field = 'San Francisco',\n        x_field = \"number_of_reviews\",\n        y_field = \"availability_365\";\n  \n    // Append the title for the graph\n    d3.select(\"body\")\n        .append(\"h2\")\n        .text(field + \" AirBnB Listings\")\n        .attr('class', 'title');\n    \n    // append the SVG tag with height and width to accommodate for margins\n    var svg = d3.select(\"body\")\n                .append(\"svg\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                .append('g')\n                    .attr('class','chart')\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // group data based on neighborhood and type of listing\n    var nested = d3.nest()\n                   .key(function(d) {\n                        return d.neighbourhood;\n                   })\n                   .key(function(d) {\n                        return d.room_type;\n                   })\n                   .rollup(function(leaves) {\n                        return leaves.length;\n                   })\n                   .entries(data);\n      \n      nested.forEach(function(group) {\n        var y0 = 0;\n\n        group.values = group.values.sort(function(a, b) {\n                            return a.key < b.key ? -1 : 1;\n                       }).map(function(d) {\n                                d.y0 = y0;\n                                d.y1 = y0 += d.values;\n                                return d;\n                        });\n        });\n\n      var total_listing = function(d) {\n          return d.values.reduce(function(a, b) {\n            return a + b.values;\n        }, 0)\n      };\n\n      // x scale\n      var x_scale = d3.scale.ordinal()\n                            .rangeRoundBands([0, width], .1)\n                            .domain(nested.sort(function(a, b) {\n                                        return total_listing(b) - total_listing(a);\n                                    }).map(function(d) {\n                                        return d.key;\n                                    }));\n\n      // get max y\n      var max_y = d3.max(nested, total_listing);\n\n      // Create y-axis scale mapping price -> pixels\n      var y_scale = d3.scale.linear()\n          .range([height, 0])\n          .domain([0, max_y]);\n\n      // create scale for color bars\n      var color = d3.scale.ordinal()\n                    .range([\"#7fc97f\", \"#beaed4\", \"#fdc086\"])\n                    .domain(nested[0].values.map(function(d) {\n                        return d.key;\n                    }));\n\n      // Create D3 axis object from time_scale for the x-axis\n      var x_axis = d3.svg.axis()\n          .scale(x_scale)\n          .orient('bottom');\n\n      // Create D3 axis object from measure_scale for the y-axis\n      var y_axis = d3.svg.axis()\n          .scale(y_scale)\n          .orient(\"left\");\n\n      // Append SVG to page corresponding to the D3 x-axis\n      svg.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', \"translate(0,\" + height + \")\")\n          .call(x_axis)\n            .selectAll(\"text\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"x\", -5)\n            .attr('y', 0)\n            .attr(\"dy\", \".25em\")\n            .style(\"text-anchor\", \"end\");\n\n      // hide x-axis lines\n      svg.select('.x.axis').select('path').remove();\n      svg.select('.x.axis').selectAll('line').remove();\n\n      // Append SVG to page corresponding to the D3 y-axis\n      svg.append('g')\n          .attr('class', 'y axis')\n          .call(y_axis);\n\n      // add label to y-axis\n      var y_label = d3.select(\".y.axis\")\n          .append(\"text\")\n          .attr('class', 'label')\n          .text(\"Number of Listings\")\n          .attr(\"transform\", \"rotate(-90)\");\n      \n      // center y axis label\n      y_label.attr(\"x\", -(height / 2)).attr('y', -60)\n            .style(\"text-anchor\", \"middle\");\n\n      // bind nested data and create a group for each bar\n      var neigh = svg.selectAll(\".neigh\")\n                      .data(nested)\n                    .enter().append(\"g\")\n                      .attr(\"class\", \"neigh\")\n                      .attr(\"transform\", function(d) { return \"translate(\" + x_scale(d.key) + \",0)\"; });\n\n      // based on the data bound to each svg rect,\n      // change its coordinates\n      neigh.selectAll(\"rect\")\n          .data(function(d) { return d.values })\n        .enter().append(\"rect\")\n          .attr(\"width\", x_scale.rangeBand())\n          .attr(\"y\", function(d) { debugger; return y_scale(d.y1); })\n          .attr(\"height\", function(d) { debugger; return y_scale(d.y0) - y_scale(d.y1); })\n          .style(\"fill\", function(d) { return color(d.key); });\n\n      // append a legend\n      var legend = svg.selectAll(\".legend\")\n          .data(color.domain().slice().reverse())\n        .enter().append(\"g\")\n          .attr(\"class\", \"legend\")\n          .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n      // append the colored square for legend\n      legend.append(\"rect\")\n          .attr(\"x\", width - 18)\n          .attr(\"width\", 18)\n          .attr(\"height\", 18)\n          .style(\"fill\", color);\n\n      // append the text for the legend\n      legend.append(\"text\")\n          .attr(\"x\", width - 24)\n          .attr(\"y\", 9)\n          .attr(\"dy\", \".35em\")\n          .style(\"text-anchor\", \"end\")\n          .text(function(d) { return d; });\n          \n        // make the bar chart responsive\n        var resize = function resize() {\n            // recalculate width and height\n            var width = innerWidth - margin.left - margin.right,\n                height = innerHeight - margin.top - margin.bottom;\n            \n            // recalculate scales\n            x_scale.rangeRoundBands([0, width], .1)\n            y_scale.range([height, 0]);\n\n            // resize x axis\n            svg.select('.x.axis')\n                 .attr(\"transform\", \"translate(0,\" + height + \")\")\n                 .call(x_axis)\n                 .selectAll(\"text\")\n                 .attr(\"transform\", \"rotate(-90)\")\n                 .attr(\"x\", -5)\n                 .attr('y', 0)\n                 .attr(\"dy\", \".25em\")\n                 .style(\"text-anchor\", \"end\");\n\n            // reposition x axis label\n            svg.select('.x.axis .label').attr(\"x\", width / 2 )\n            \n            // resize y axis\n            svg.select('.y.axis')\n                 .call(y_axis);\n\n            // hide x-axis lines\n            svg.select('.x.axis').select('path').remove();\n            svg.select('.x.axis').selectAll('line').remove();\n\n            // reposition y axis label\n            y_label.attr(\"x\", -(height / 2));\n            \n            // reposition bars\n            neigh.attr(\"transform\", function(d) { return \"translate(\" + x_scale(d.key) + \",0)\"; });\n\n            // resize bands within each bar\n            neigh.selectAll('rect')\n              .attr(\"width\", x_scale.rangeBand())\n              .attr(\"y\", function(d) { debugger; return y_scale(d.y1); })\n              .attr(\"height\", function(d) { debugger; return y_scale(d.y0) - y_scale(d.y1); })\n\n            // reposition legend\n            legend.select('rect').attr(\"x\", width - 18);\n            legend.select('text').attr(\"x\", width - 24);\n        };\n        \n        // trigger resize on window resize\n        d3.select(window).on('resize', resize);\n    }\n  </script>\n</head>\n<body>\n  <script>\n    // load data\n    d3.csv(\"http://jay-oh-en.github.io/interactive-data-viz/data/airbnb/listings.csv\", draw);\n  </script>", "description": "An Experiment in Sketching: Visualizing SF AirBnB Listings", "created_at": "2015-11-23T05:55:38Z", "updated_at": "2015-12-20T18:27:09Z", "api": ["d3.select", "d3.nest", "d3.scale.ordinal", "d3.max", "d3.scale.linear", "d3.svg.axis", "d3.csv"], "readme": "## An experiment in sketching or: How many ways can I visualize the same dataset\n\nThese series of visualizations serve two purposes:\n\n1. Educational guide for anyone looking to learn D3\n2. Starting point for anyone looking to apply a given chart type to their own data (or experiment with different visual encodings)\n\nIn this vein I encourage anyone to adapt, remix, and re-master any and every one of the following plots.  To help facilitate this, I encourage you to use the following tools to rapidly experiment and iterate for yourself:\n* [bl.ocks.org](http://bl.ocks.org/): D3.js Gist renderer and online community\n* [Building Blocks](http://blockbuilder.org/about): In-browser interactive D3.js bl.ock editor\n* [Tributary.io](http://tributary.io/): an experimental environment for rapidly prototyping visualization code\n\nAnd if you enjoy these reach out and say hello [@clearspandex](https://twitter.com/clearspandex)!\n\n### The Data\n\nThe [data](http://insideairbnb.com/get-the-data.html) comes from [Inside AirBnB](http://insideairbnb.com/index.html) and it is available below under a [Creative Commons CC0 1.0 Universal (CC0 1.0) \"Public Domain Dedication\"](http://creativecommons.org/publicdomain/zero/1.0/) license.\n\n> Inside AirBnB is an independent, non-commercial set of tools and data that allows you to explore how Airbnb is really being used in cities around the world.\n\n### Sketches\n\nEach of the following visualizations below applies one (or many) chart types to the same data of AirBnB listings.\n\n<!-- An aggregate visualization of all of the following can been seen here: bl.ocks.org \n\n_Inspired by @enjalot's block wall visualization of public D3 bl.ocks: [http://bl.ocks.org/enjalot/raw/211bd42857358a60a936/](http://bl.ocks.org/enjalot/raw/211bd42857358a60a936/)_ -->\n\n#### Charts\n\n* [Bubble Chart](15f52d2ec0b035b53c6f): simple bubble chart visualizing 3 dimensions of the data.\n* [Stacked Bar (you are here \ud83d\udc47)](1ca89dc69bcc18f3f4c0) \n* [Part 2](a29e820cb6d8f3a84249): thematic map of AirBnB listings distribution across SF neighborhoods.\n* [Stacked Area](a29e820cb6d8f3a84249): Stacked area chart of AirBnB listing growth across SF neighborhoods.\n* [Small Multiples -- Line Chart](a6e0ca2e13082ec099da)\n\n#### Maps\n\n* [Thematic Map](a29e820cb6d8f3a84249): thematic bubble map of AirBnB listings distribution across SF neighborhoods.\n* [Choropleth](a29e820cb6d8f3a84249): cartogram of AirBnB listings distribution across SF neighborhoods.\n* [Torque Map](a29e820cb6d8f3a84249): Map of AirBnB listings animated over time.\n* [Cartogram](a29e820cb6d8f3a84249): cartogram of AirBnB listings distribution across SF neighborhoods.\n    * [Cartogram + Choropleth](a29e820cb6d8f3a84249): cartogram of AirBnB listings distribution across SF neighborhoods colored by average price.\n* [Linked Map](b8ef4734abad1c644221): interactive linked map and line plot of AirBnB growth per each neighborhood in SF.\n    * [Review Data](b8ef4734abad1c644221): Visualization of AirBnB activity per each neighborhood in SF.\n\n### References (each bl.ock has its own)\n\n* http://bl.ocks.org/mbostock/4403522\n* http://colorbrewer2.org/\n* http://bl.ocks.org/phoebebright/raw/3176159/\n* http://bl.ocks.org/mbostock/3886208", "uid": "Jay-Oh-eN_f372f1555d1ab41dadd1"}, {"code": "<script>\n      var outerWidth = 960;\n      var outerHeight = 500;\n      var margin = { left: 90, top: 73, right: 26, bottom: 65 };\n      var barPadding = 0.2;\n\n      var xColumn = \"country\";\n      var yColumn = \"population\";\n\n      var innerWidth  = outerWidth  - margin.left - margin.right;\n      var innerHeight = outerHeight - margin.top  - margin.bottom;\n\n      var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\",  outerWidth)\n        .attr(\"height\", outerHeight);\n      var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      var xAxisG = g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + innerHeight + \")\");\n      var yAxisG = g.append(\"g\")\n        .attr(\"class\", \"y axis\");\n\n      var xScale = d3.scale.ordinal().rangeBands([0, innerWidth], barPadding);\n      \n      var yScale = d3.scale.log().range([innerHeight, 0.1]);\n      var rScale = d3.scale.sqrt().range([5, 50])\n      \n\n      // Use a modified SI formatter that uses \"B\" for Billion.\n      var siFormat = d3.format(\"s\");\n      var customTickFormat = function (d){\n        return siFormat(d).replace(\"G\", \"B\");\n      };\n\n      var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\")\n        .outerTickSize(0);\n      var yAxis = d3.svg.axis().scale(yScale).orient(\"left\")\n        //.ticks(5)\n        .tickValues([10,100,1000,10000,100000,1000000,10000000,100000000,1000000000])\n        .tickFormat(customTickFormat)\n        .outerTickSize(0);\n\n      \n      function render(data){\n        console.log(data)\n\n        xScale.domain(       data.map( function (d){ return d[xColumn]; }));\n        \n        var ymax = d3.max(data, function (d){ return d[yColumn]; })\n        yScale.domain([100000000.01, ymax]);\n        rScale.domain([10000000, ymax])\n        \n        console.log(\"domain\", yScale.domain())\n        console.log(\"ymax\", ymax)\n\n        xAxisG.call(xAxis);\n        yAxisG.call(yAxis);\n\n        var bars = g.selectAll(\"rect\").data(data);\n        bars.enter().append(\"rect\")\n          .attr(\"width\", xScale.rangeBand());\n        bars\n          .attr(\"x\",      function (d){ return               xScale(d[xColumn]); })\n          .attr(\"y\",      function (d){ return               yScale(d[yColumn]); })\n          .attr(\"height\", function (d){ return innerHeight - yScale(d[yColumn]); })\n          .attr({\n            \"fill-opacity\": 0.1\n          })\n        bars.exit().remove();\n        \n        var circles = g.selectAll(\"circle\").data(data)\n        circles.enter().append(\"circle\")\n        circles.attr({\n          cx: function (d){ return xScale(d[xColumn]) + xScale.rangeBand()/2 },\n          cy: function(d,i) { return yScale(d[yColumn]) },\n          r: function(d,i) { return rScale(d[yColumn]) }\n        })\n      }\n\n      function type(d){\n        d.population = +d.population;\n        return d;\n      }\n\n      d3.csv(\"populationByCountry2015.csv\", type, render);\n\n    </script>", "description": "Largest 5 Countries: Log Scatterplot", "created_at": "2015-11-21T19:44:42Z", "updated_at": "2015-11-21T19:45:00Z", "api": ["d3.select", "d3.scale.ordinal", "d3.scale.log", "d3.scale.sqrt", "d3.format", "d3.svg.axis", "d3.max", "d3.csv"], "readme": "Top 5 countries, sorted by population. Example 6 from the screencast [Splitting Charts](https://github.com/curran/screencasts/tree/gh-pages/splittingCharts).\n\nMIT License\n\n<!-- Start of SimpleHitCounter Code -->\n<div align=\"center\"><a href=\"http://www.simplehitcounter.com\" target=\"_blank\"><img src=\"http://simplehitcounter.com/hit.php?uid=1978100&f=16777215&b=0\" border=\"0\" height=\"18\" width=\"83\" alt=\"web counter\"></a></div>\n<!-- End of SimpleHitCounter Code -->\n\nforked from <a href='http://bl.ocks.org/curran/'>curran</a>'s block: <a href='http://bl.ocks.org/curran/6cd1e224d76811b68df4'>Largest 5 Countries</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/5d1f067bb3a89dfa6675'>Largest 5 Countries: Log Scatterplot</a>", "uid": "enjalot_527374377ab35222b5fe"}, {"code": "<script>\n      var outerWidth = 960;\n      var outerHeight = 500;\n      var margin = { left: 90, top: 16, right: 30, bottom: 85 };\n      var barPadding = 0.2;\n\n      var xColumn = \"religion\";\n      var yColumn = \"population\";\n      var colorColumn = \"religion\";\n\n      var innerWidth  = outerWidth  - margin.left - margin.right;\n      var innerHeight = outerHeight - margin.top  - margin.bottom;\n\n      var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\",  outerWidth)\n        .attr(\"height\", outerHeight);\n      var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      var xAxisG = g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + innerHeight + \")\");\n      var yAxisG = g.append(\"g\")\n        .attr(\"class\", \"y axis\");\n\n      var xScale = d3.scale.ordinal().rangeBands([0, innerWidth], barPadding);\n      var yScale = d3.scale.linear().range([innerHeight, 0]);\n      var colorScale = d3.scale.category10();\n\n      // Use a modified SI formatter that uses \"B\" for Billion.\n      var siFormat = d3.format(\"s\");\n      var customTickFormat = function (d){\n        return siFormat(d).replace(\"G\", \"B\");\n      };\n\n      var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\")\n        .outerTickSize(0);\n      var yAxis = d3.svg.axis().scale(yScale).orient(\"left\")\n        .ticks(5)\n        .tickFormat(customTickFormat)\n        .outerTickSize(0);\n\n      function render(data){\n\n        xScale.domain(       data.map( function (d){ return d[xColumn]; }));\n        yScale.domain([0, d3.max(data, function (d){ return d[yColumn]; })]);\n        colorScale.domain(data.map(function (d){ return d[colorColumn]; }));\n\n        xAxisG\n          .call(xAxis)\n          .selectAll(\"text\")  \n          .attr(\"dx\", \"-0.4em\")\n          .attr(\"dy\", \"1.24em\")\n          .attr(\"transform\", \"rotate(-16)\" );\n\n        yAxisG.call(yAxis);\n\n        var bars = g.selectAll(\"rect\").data(data);\n        bars.enter().append(\"rect\")\n          .attr(\"width\", xScale.rangeBand());\n        bars\n          .attr(\"x\", function (d){ return xScale(d[xColumn]); })\n          .attr(\"y\", function (d){ return yScale(d[yColumn]); })\n          .attr(\"height\", function (d){ return innerHeight - yScale(d[yColumn]); })\n          .attr(\"fill\", function (d){ return colorScale(d[colorColumn]); });\n        bars.exit().remove();\n      }\n\n      function type(d){\n        d.population = +d.population;\n        return d;\n      }\n\n      d3.csv(\"religionWorldTotals.csv\", type, render);\n\n    </script>", "description": "Colored Bar Chart", "created_at": "2015-11-20T00:16:59Z", "updated_at": "2016-02-01T01:19:13Z", "api": ["d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.scale.category10", "d3.format", "d3.svg.axis", "d3.max", "d3.csv"], "readme": "Adding color to a bar chart using [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#category10).\n\nThis is example 10 from the screencast [Splitting Charts](https://github.com/curran/screencasts/tree/gh-pages/splittingCharts).\n\nMIT License\n\n<!-- Start of SimpleHitCounter Code -->\n<div align=\"center\"><a href=\"http://www.simplehitcounter.com\" target=\"_blank\"><img src=\"http://simplehitcounter.com/hit.php?uid=1979118&f=16777215&b=0\" border=\"0\" height=\"18\" width=\"83\" alt=\"web counter\"></a></div>\n<!-- End of SimpleHitCounter Code -->\n", "uid": "curran_fea34ca9b3b8886e3ab8"}, {"code": "<script>\n\nvar states = [],\n    selectedStates = [\"CT\", \"RI\", \"MA\", \"NH\", \"ME\"];\n\nd3.select(\"#grid\").text().split(\"\\n\").forEach(function(line, i) {\n  var re = /\\w+/g, m;\n  while (m = re.exec(line)) states.push({\n    name: m[0],\n    selected: selectedStates.indexOf(m[0]) >= 0,\n    x: m.index / 3,\n    y: i\n  });\n});\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar gridWidth = d3.max(states, function(d) { return d.x; }) + 1,\n    gridHeight = d3.max(states, function(d) { return d.y; }) + 1,\n    cellSize = 40;\n\nvar state = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\")\n  .selectAll(\".state\")\n    .data(states)\n  .enter().append(\"g\")\n    .attr(\"class\", function(d) { return \"state\" + (d.selected ? \" state--selected\" : \"\"); })\n    .attr(\"transform\", function(d) { return \"translate(\" + (d.x - gridWidth / 2) * cellSize + \",\" + (d.y - gridHeight / 2) * cellSize + \")\"; });\n\nstate.append(\"rect\")\n    .attr(\"x\", -cellSize / 2)\n    .attr(\"y\", -cellSize / 2)\n    .attr(\"width\", cellSize - 1)\n    .attr(\"height\", cellSize - 1);\n\nstate.append(\"text\")\n    .attr(\"dy\", \".35em\")\n    .text(function(d) { return d.name; });\n\n</script>", "description": "Ben Carson State Grid", "created_at": "2015-11-19T23:33:21Z", "updated_at": "2015-11-20T00:35:28Z", "api": ["d3.select", "d3.max"], "readme": "A state grid by Ben Carson and forked from <a href='http://bl.ocks.org/mbostock/'>Mike Bostock</a>'s block: <a href='http://bl.ocks.org/mbostock/29cc3cc4078091fd2115'>State Grid</a>.", "uid": "geraldarthur_21f83856cf89482c2796"}, {"code": "<script>\nvar data = [[83,62.5],[12,76.6],[98,79.2],[3.2,38],[94.9,54.9],[4.6,27.7],[77.2,69.7],[28.1,27.4],[12.4,70.8],[20.2,77.6],[35.6,76.5],[23,52.5],[76.5,76.3],[10,14.9],[73.6,67.4],[47.2,87.2],[62.5,68.8],[12.5,55.5],[75.3,55.3],[30.3,62.7],[5,81.1],[7.3,79.2],[12.1,41.3],[10.1,92],[22.8,65.3],[16.4,84.4],[95.7,27.8],[26.2,85.7],[81.8,92.6],[36.3,62.6],[12.2,59.3],[22.4,69.3],[4.5,72.2],[84.5,32.5],[94.1,76.5],[56.9,49.4],[28.7,69.8]];\n   \n    var margin = {top: 20, right: 15, bottom: 60, left: 60}\n      , width = 960 - margin.left - margin.right\n      , height = 500 - margin.top - margin.bottom;\n    \n    var x = d3.scale.linear()\n              .domain([0, d3.max(data, function(d) { return d[0]; })])\n              .range([ 0, width ]);\n    \n    var y = d3.scale.linear()\n    \t      .domain([0, d3.max(data, function(d) { return d[1]; })])\n    \t      .range([ height, 0 ]);\n \n    var chart = d3.select('body')\n\t.append('svg:svg')\n\t.attr('width', width + margin.right + margin.left)\n\t.attr('height', height + margin.top + margin.bottom)\n\t.attr('class', 'chart')\n\n    var main = chart.append('g')\n\t.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\t.attr('width', width)\n\t.attr('height', height)\n\t.attr('class', 'main')   \n        \n    // draw the x axis\n    var xAxis = d3.svg.axis()\n\t.scale(x)\n\t.orient('bottom');\n\n    main.append('g')\n\t.attr('transform', 'translate(0,' + height + ')')\n\t.attr('class', 'main axis date')\n\t.call(xAxis);\n\n    // draw the y axis\n    var yAxis = d3.svg.axis()\n\t.scale(y)\n\t.orient('left');\n\n    main.append('g')\n\t.attr('transform', 'translate(0,0)')\n\t.attr('class', 'main axis date')\n\t.call(yAxis);\n\n    var g = main.append(\"svg:g\"); \n    \n    g.selectAll(\"scatter-dots\")\n      .data(data)\n      .enter().append(\"svg:circle\")\n          .attr(\"cx\", function (d,i) { return x(d[0]); } )\n          .attr(\"cy\", function (d) { return y(d[1]); } )\n          .attr(\"r\", 8);\n  </script>", "description": "A scatter plot", "created_at": "2015-11-16T21:55:24Z", "updated_at": "2015-11-16T21:55:26Z", "api": ["d3.scale.linear", "d3.max", "d3.select", "d3.svg.axis"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/zzolo/'>zzolo</a>'s block: <a href='http://bl.ocks.org/zzolo/80097d54d4ec4ce83222'>A scatter plot</a>", "uid": "zzolo_89de858deaf6f8fc78ba"}, {"code": "<script>\n\nvar width = 750;\nvar height = 350;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"g\").attr(\"class\",\"linkg\");\nsvg.append(\"g\").attr(\"class\",\"nodeg\");\n    \nvar force = d3.layout.force()\n    .size([width - 100, height])\n    .nodes([{}])\n    .gravity(0.2)\n    .charge(-200);\n\nvar x = d3.scale.linear()\n    .domain([500000, 5000000])\n    .range([250, 80])\n    .clamp(true);\n\nvar brush = d3.svg.brush()\n    .y(x)\n    .extent([0, 0]);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(\" + (width - 20)  + \",0)\")\n    .call(d3.svg.axis()\n      .scale(x)\n      .orient(\"left\")\n      .tickFormat(function(d) { return d / 1000000.0 ; })\n      .tickSize(0)\n      .tickPadding(12))\n  .select(\".domain\")\n  .select(function() { return this.parentNode.appendChild(this.cloneNode(true)); })\n    .attr(\"class\", \"halo\");\n\nvar slider = svg.append(\"g\")\n    .attr(\"class\", \"slider\")\n    .call(brush);\n\nslider.selectAll(\".extent,.resize\")\n    .remove();\n\nvar handle = slider.append(\"circle\")\n    .attr(\"class\", \"handle\")\n    .attr(\"transform\", \"translate(\" + (width - 20) + \",0)\")\n    .attr(\"r\", 5);\n\n\nsvg.append(\"text\")\n    .attr(\"x\", width - 15)\n    .attr(\"y\", height - 75)\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"font-size\", \"10px\")\n    .style(\"opacity\", 0.5)\n    .text(\"> x million\")\n\nsvg.append(\"text\")\n    .attr(\"x\", width - 15)\n    .attr(\"y\", height - 60)\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"font-size\", \"10px\")\n    .style(\"opacity\", 0.5)\n    .text(\"bilateral migration\")\n\nvar bigGraph = {\"nodes\":[], \"links\":[]};\n\nfunction compare(a,b) {\n  if (a.i < b.i)\n    return -1;\n  if (a.i > b.i)\n    return 1;\n  return 0;\n}\n\nvar selectyeartext = [\"2000\",\"1990\",\"1980\",\"1970\",\"1960\"];\nvar selectyearids = [2000,1990,1980,1970,1960];\nvar selectyear = 2000;\n\n\nd3.csv(\"migration.csv\", function(error, migrationTable) {\n  \n  d3.json(\"countrynames.json\", function(error, countrynames) {\n  \n    \n    // construct graph object from table\n    \n    var nodes = {};\n    var nCount = 0;\n    var lCount = 0;\n    migrationTable.forEach(function(m){\n      if (!(m.cCode1 in nodes)) { nodes[m.cCode1] = nCount; nCount += 1; };\n      if (!(m.cCode2 in nodes)) { nodes[m.cCode2] = nCount; nCount += 1; };\n      bigGraph.links.push({\"source\": nodes[m.cCode1] , \n                        \"target\": nodes[m.cCode2] ,\n                        \"1960\": m.totalMigration1960 ,\n                        \"1970\": m.totalMigration1970 ,\n                        \"1980\": m.totalMigration1980 ,\n                        \"1990\": m.totalMigration1990 ,\n                        \"2000\": m.totalMigration2000 ,\n                        \"linkname\" : lCount\n                       });\n      lCount += 1;\n    });\n    \n    bigGraph.nodes = $.map(nodes, function(v, k) {\n      return {\"x\": width * Math.random(), \"y\": height * Math.random(), \"i\": v, \"name\": k, \"countryname\": countrynames[k]};\n    });\n    bigGraph.nodes.sort(compare);\n  \n  \n    // text fields used as selectors\n  \n    for (var i=0; i<selectyearids.length; i++) {\n      svg.append(\"text\").attr(\"x\", width - 215 + (selectyearids.length - i - 1) * 50).attr(\"y\", height - 10)\n          .attr(\"class\", \"text-button1\")\n          .attr(\"id\", selectyearids[i]).style(\"opacity\", i == 0 ? 1 : 0.5 )\n          .attr(\"iv\", i)\n          .attr(\"text-anchor\", \"end\")\n          .attr(\"font-size\", \"10px\")\n          .text(selectyeartext[i])\n          .on('mouseover', function(e){\n                  \n                  // determine which text-'button' is selected\n                  var selectedNum = parseInt(d3.select(this)[0][0].attributes.iv.value);\n  \n                  // change opacities of text-'buttons'\n                  d3.selectAll(\".text-button1\").style(\"opacity\",0.5);\n                  d3.select(this).style(\"opacity\",1);\n                  \n                  selectyear = selectyearids[selectedNum];\n                  \n                  redraw(bigGraph, selectcutoff, selectyear);\n  \n            });\n    }\n  \n \n    brush.on(\"brush\", brushed);\n\n    slider\n      .call(brush.extent([2000000, 2000000]))\n      .call(brush.event);\n\n    \n    redraw(bigGraph,selectcutoff,selectyear);\n  \n  });\n  \n});\n\n\nfunction brushed() {\n  var value = brush.extent()[0];\n\n  if (d3.event.sourceEvent) { // not a programmatic event\n    value = x.invert(d3.mouse(this)[1]);\n    brush.extent([value, value]);\n  }\n\n  handle.attr(\"cy\", x(value));\n  \n  selectcutoff = value;\n  \n  redraw(bigGraph,selectcutoff,selectyear);\n\n}\n\n\n\nfunction redraw(bigGraph, cutoff, year) {\n\n  var currentNodes = force.nodes();\n  \n  var graph = {\"nodes\":[], \"links\":[]};\n  var nodeList = {};\n  var nlCount = 0;\n  graph.links = $.map(bigGraph.links, function(v) {\n    if (v[''+year] > cutoff) {\n      if (!(v.source in nodeList)) { nodeList[v.source] = nlCount; nlCount += 1; };\n      if (!(v.target in nodeList)) { nodeList[v.target] = nlCount; nlCount += 1; };\n      return {\"source\": nodeList[v.source], \"target\": nodeList[v.target], \"distance\": v[''+year], \"linkname\": v.linkname};\n    }\n  }); \n  graph.nodes = $.map(bigGraph.nodes, function(v) {\n    if (v.i in nodeList) {\n      var current = -1;\n      currentNodes.forEach(function(n,i){\n        if (n.name == v.name) { current = i; }\n      });\n      if (current > -1) {\n        return {\"x\": currentNodes[current].x, \"y\": currentNodes[current].y, \"i\": nodeList[v.i], \"name\": v.name, \"countryname\": v.countryname};\n      } else {\n        return {\"x\": v.x, \"y\": v.y, \"i\": nodeList[v.i], \"name\": v.name, \"countryname\": v.countryname};\n      }\n    }\n  });\n  graph.nodes.sort(compare);\n\n  force\n      .nodes(graph.nodes)\n      .links(graph.links);\n  \n\n  var link = svg.selectAll(\".linkg\").selectAll(\".link\").data(graph.links,function(v){ return v.linkname; });\n\n  link.enter()\n    .append(\"line\")\n      .attr(\"class\", \"link\")\n      .style(\"opacity\",1e-6)\n      .transition()\n        .duration(1500)\n        .style(\"opacity\",1);\n  \n  link.exit()\n    .transition()\n      .duration(500)\n      .style(\"opacity\",1e-6)\n      .remove();\n\n  var node = svg.selectAll(\".nodeg\").selectAll(\".node\").data(graph.nodes,function(v){ return v.name; });\n  \n  node.exit()\n    .transition()\n      .duration(500)\n      .style(\"opacity\",1e-6)\n      .remove();\n\n  var node2 = node.enter()\n    .append(\"g\")\n      .attr(\"class\", \"node\");\n\n  node2.append(\"ellipse\")\n      .attr(\"cx\", 0)\n      .attr(\"cy\", 0)\n      .attr(\"rx\", 16)\n      .attr(\"ry\", 8)\n      .attr(\"title\", function(d) { return d.countryname })\n      .style(\"opacity\",1e-6)\n      .transition()\n        .duration(1500)\n        .style(\"opacity\",1);\n\n  node2.append(\"text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name })\n      .style(\"opacity\",1e-6)\n      .transition()\n        .duration(1500)\n        .style(\"opacity\",1);\n\n  force\n      .linkDistance(function(l) { return 20 + 5 * Math.log(1.0 + 1000000000 / l.distance); })\n      .start();\n\n  force.on(\"tick\", function() {\n    \n    link\n      .attr(\"x1\", function(d) { return d.source.x; })\n      .attr(\"y1\", function(d) { return d.source.y; })\n      .attr(\"x2\", function(d) { return d.target.x; })\n      .attr(\"y2\", function(d) { return d.target.y; });\n      \n    node\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  });\n\n}\n\n</script>", "description": "Global Bilateral Migration", "created_at": "2015-11-16T04:42:25Z", "updated_at": "2015-11-16T04:42:25Z", "api": ["d3.select", "d3.layout.force", "d3.scale.linear", "d3.svg.brush", "d3.svg.axis", "d3.csv", "d3.json", "d3.selectAll", "d3.mouse"], "readme": "This interactive graph, using data from the [World Bank's Global Migration Database](http://data.worldbank.org/data-catalog/global-bilateral-migration-database) shows links between migrants' locations and their countries of birth. The slider bar allows for different cut-off levels for the graph, and the year is selected by scrolling over it.\n", "uid": "seemantk_7ede42303b973902e202"}, {"code": "<script>\n    function draw(data) {\n    \"use strict\";\n\n    /*\n        D3.js setup code\n    */\n\n    // set margins according to Mike Bostock's margin conventions\n    // http://bl.ocks.org/mbostock/3019563\n    var margin = {top: 25, right: 40, bottom: 150, left: 75};\n    \n    // set height and width of chart\n    var width = 1400 - margin.left - margin.right,\n        height = 800 - margin.top - margin.bottom;\n    \n    // specify the radius of our circles and the\n    // column we want to plot\n    var radius = 3,\n        field = 'San Francisco',\n        x_field = \"number_of_reviews\",\n        y_field = \"availability_365\";\n  \n    // Append the title for the graph\n    d3.select(\"body\")\n        .append(\"h2\")\n        .text(field + \" Listings\")\n        .attr('class', 'title');\n    \n    // append the SVG tag with height and width to accommodate for margins\n    var svg = d3.select(\"body\")\n                .append(\"svg\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                .append('g')\n                    .attr('class','chart')\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    // remove missing values\n    data = data.filter(function(d) {\n      return d[y_field];\n    });\n\n    // bind our data to svg circles for the scatter plot\n    svg.selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n      \n      // maximum price\n      var max_y = d3.max(data, function(d) {\n          return +d[y_field];\n      });\n\n      // get min/max review count\n      var review_extent = d3.extent(data, function(d){\n          return +d[x_field];\n      });\n\n      // Create x-axis scale mapping dates -> pixels\n      var review_scale = d3.scale.linear()\n          .range([0, width])\n          .domain(review_extent);\n\n      // Create y-axis scale mapping price -> pixels\n      var measure_scale = d3.scale.linear()\n          .range([height, 0])\n          .domain([0, max_y]);\n\n      // Create D3 axis object from time_scale for the x-axis\n      var x_axis = d3.svg.axis()\n          .scale(review_scale);\n\n      // Create D3 axis object from measure_scale for the y-axis\n      var measure_axis = d3.svg.axis()\n          .scale(measure_scale)\n          .orient(\"left\");\n\n      // Append SVG to page corresponding to the D3 x-axis\n      svg.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', \"translate(0,\" + height + \")\")\n          .call(x_axis);\n\n      // Append SVG to page corresponding to the D3 y-axis\n      svg.append('g')\n          .attr('class', 'y axis')\n          .call(measure_axis);\n\n      // add label to y-axis\n      d3.select(\".y.axis\")\n          .append(\"text\")\n          .attr('class', 'label')\n          .text(\"Price (dollar/sq-ft)\")\n          .attr(\"transform\", \"rotate(-90, -43, 0) translate(-400)\");\n\n      // based on the data bound to each svg circle,\n      // change its center-x (cx) and center-y (cy)\n      // coordinates\n      d3.selectAll('circle')\n          .attr('cx', function(d) {\n              return review_scale(+d[x_field]);\n          })\n          .attr('cy', function(d) {\n              return measure_scale(+d[y_field]);\n          })\n          .attr('r', function(d) {\n            return 2;\n          })\n          .style('fill', function(d) {\n            switch (d['room_type']) {\n              case 'Entire home/apt':\n                return 'red';\n              case 'Private room':\n                return 'green'\n              case 'Shared room':\n                return 'blue';\n              default:\n                return 'gray';\n            }\n          });\n    }\n  </script>\n</head>\n  <body>\n    <script>\n      /*\n      Use D3 to load the CSV file and pass\n      the contents of it to the draw function.\n      */\n      d3.csv(\"http://jay-oh-en.github.io/interactive-data-viz/data/airbnb/listings.csv\", draw);\n    </script>", "description": "Civic Impact through Data Visualization: Exercise 1", "created_at": "2015-11-15T22:50:12Z", "updated_at": "2015-11-15T22:50:12Z", "api": ["d3.select", "d3.max", "d3.extent", "d3.scale.linear", "d3.svg.axis", "d3.selectAll", "d3.csv"], "readme": "[![Join the chat at https://gitter.im/Jay-Oh-eN/data-scientists-guide-apache-spark](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Jay-Oh-eN/interactive-data-viz?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThese are the materials for my workshop on creating interactive data visualizations with D3! We will be using the following two tools to works through these exercises:\n\n* [bl.ocks.org](http://bl.ocks.org/): D3.js Gist renderer and online community\n* [Building Blocks](http://blockbuilder.org/about): In-browser interactive D3.js bl.ock editor\n\nAnd please do not hesitate to reach out to me directly via email at jondinu@gmail.com or over twitter @clearspandex\n\n> Throughout this workshop, you will learn how to make an interactive map of AirBnB listings in SF to better understand the companies impact on the city.\n\n### Exercises\n\n* [Part 1 (you are here \ud83d\udc47)](15f52d2ec0b035b53c6f): simple bubble chart visualizing 3 dimensions of the data.\n  * [solution](1ca89dc69bcc18f3f4c0) \n* [Part 2](a29e820cb6d8f3a84249): thematic map of AirBnB listings distribution across SF neighborhoods.\n  * [solution](a6e0ca2e13082ec099da) \n* [Final](b8ef4734abad1c644221): interactive linked map and line plot of AirBnB activity per each neighborhood in SF.\n\n### The Data\n\nThe [data](http://insideairbnb.com/get-the-data.html) comes from [Inside AirBnB](http://insideairbnb.com/index.html) and it is available below under a [Creative Commons CC0 1.0 Universal (CC0 1.0) \"Public Domain Dedication\"](http://creativecommons.org/publicdomain/zero/1.0/) license.\n\n> Inside AirBnB is an independent, non-commercial set of tools and data that allows you to explore how Airbnb is really being used in cities around the world.\n\n---\n\nGithub repo: [https://github.com/Jay-Oh-eN/interactive-data-viz](https://github.com/Jay-Oh-eN/interactive-data-viz)\n\nArchival event link: [Open Data Science Conference SF 2015](http://opendatascicon.com/detailed-speaker-page/#jonathan-dinu)\n\n[mongoose]: http://cesanta.com/mongoose.shtml\n[sublime]: http://www.sublimetext.com/2\n[chrome]: https://www.google.com/chrome/browser/desktop/\n[zip]: https://github.com/Jay-Oh-eN/hands-on-d3/archive/master.zip\n[gitit]: http://jlord.us/git-it/\n\n[sf-asthma]: https://data.sfgov.org/Health-and-Social-Services/Climate-and-Health-Data/paqg-zyqx\n[grayarea]: http://grayarea.org/\n[swiss]: http://www.swissnexsanfrancisco.org/\n[lift]: http://liftconference.com/lift15\n[data-canvas-img]: images/data-canvas.png\n[data-canvas]: http://datacanvas.org/\n[data-canvas-map]: http://map.datacanvas.org/\n[dump]: https://s3.amazonaws.com/localdata-export/datacanvas/full.zip\n[data-canvas-data]: http://map.datacanvas.org/#!/data\n[dictionary]: https://github.com/Jay-Oh-eN/hands-on-d3/blob/master/data/dictionary.pdf\n\n[d3]: http://d3js.org/\n[dimple]: http://dimplejs.org/\n[moment]: http://momentjs.com/\n[d3plus]: http://d3plus.org/\n[rickshaw]: http://code.shutterstock.com/rickshaw/\n[dc.js]: http://dc-js.github.io/dc.js/\n[nvd3]: http://nvd3.org/\n[c3]: http://c3js.org/\n[raw]: http://app.raw.densitydesign.org/\n[queue]: https://github.com/mbostock/queue\n[parallel]: https://syntagmatic.github.io/parallel-coordinates/\n\n\nforked from <a href='http://bl.ocks.org/Jay-Oh-eN/'>Jay-Oh-eN</a>'s block: <a href='http://bl.ocks.org/Jay-Oh-eN/15f52d2ec0b035b53c6f'>Civic Impact through Data Visualization: Exercise 1</a>", "uid": "Nathan-O_6e64e78ca6390a3f311e"}, {"code": "<script>\n  var margin = { top: 10, right: 10, bottom: 100, left: 40 },\n      margin2 = { top: 430, right: 10, bottom: 20, left: 40 },\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom,\n      height2 = 500 - margin2.top - margin2.bottom;\n\n  var parseDate = d3.time.format(\"%b %Y\").parse;\n\n  var x = d3.time.scale().range([0, width]),\n      x2 = d3.time.scale().range([0, width]),\n      y = d3.scale.linear().range([height, 0]),\n      y2 = d3.scale.linear().range([height2, 0]);\n\n  var xAxis = d3.svg.axis().scale(x).orient(\"bottom\"),\n      xAxis2 = d3.svg.axis().scale(x2).orient(\"bottom\"),\n      yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\n  var brush = d3.svg.brush()\n      .x(x2)\n      .on(\"brush\", brushed);\n\n  var area = d3.svg.area()\n      .interpolate(\"monotone\")\n      .x(function (d) { return x(d.date); })\n      .y0(height)\n      .y1(function (d) { return y(d.price); });\n\n  var area2 = d3.svg.area()\n      .interpolate(\"monotone\")\n      .x(function (d) { return x2(d.date); })\n      .y0(height2)\n      .y1(function (d) { return y2(d.price); });\n\n\n\n  // make some buttons to drive our zoom\n  d3.select(\"body\").append(\"div\")\n    .attr(\"id\",\"btnDiv\")\n    .style('font-size','75%')\n    .style(\"width\",\"280px\")\n    .style(\"position\",\"absolute\")\n    .style(\"left\", 1.5*margin.left + \"px\")\n    .style(\"top\",\"200px\")\n\n  d3.select(\"#btnDiv\")[0][0].innerHTML = [\n    '<h3>Numbers to Drive Our Zoom</h3>',\n    '<p>specify a range, push zoom, and watch the brush react</p>',\n    '<ul>',\n    '<li>the transition is deliberately slowed down so each step can be seen. This also demonstrates how to inject a transition</li>',\n    '<br>',\n    '<li>play with the brush after it is drawn to see how the chart acts if we draw with our mouse</li>',\n    '</ul>'\n  ].join('\\n')\n  \n  \n  d3.select(\"#btnDiv\")\n    .append(\"input\")\n    .attr({\n      \"id\": \"a\",\n      \"value\": 0 \n    })\n\n  d3.select(\"#btnDiv\")\n    .append(\"input\")\n    .attr({\n      \"id\": \"b\",\n      \"value\": 1 \n    })\n\n  // style both of the inputs at once\n  // more on HTML5 <input> at https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\n  d3.selectAll(\"input\")\n    .attr({\n      \"type\": \"text\",\n      \"size\": 3,\n      \"autofocus\": \"true\",\n      \"inputmode\": \"numeric\"\n    })\n    .style({\n      \"text-align\": \"center\",\n      \"display\": \"inline-block\",\n      \"margin-right\": \"10px\"\n    });\n\n\n  var btns = d3.select(\"#btnDiv\").selectAll(\"button\").data([\"zoom\"])\n  btns = btns.enter().append(\"button\").style(\"display\",\"inline-block\")\n\n  // fill the buttons with the year from the data assigned to them\n  btns.each(function (d) {\n    this.innerText = d;\n  })\n\n  var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom);\n\n  svg.append(\"defs\").append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n  var focus = svg.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  var context = svg.append(\"g\")\n      .attr(\"class\", \"context\")\n      .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\n  d3.csv(\"sp500.csv\", type, function (error, data) {\n    x.domain(d3.extent(data.map(function (d) { return d.date; })));\n    y.domain([0, d3.max(data.map(function (d) { return d.price; }))]);\n    x2.domain(x.domain());\n    y2.domain(y.domain());\n\n    focus.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"area\")\n        .attr(\"d\", area);\n\n    focus.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    focus.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n    context.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"area\")\n        .attr(\"d\", area2);\n\n    context.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n        .call(xAxis2);\n\n    context.append(\"g\")\n        .attr(\"class\", \"x brush\")\n        .call(brush)\n      .selectAll(\"rect\")\n        .attr(\"y\", -6)\n        .attr(\"height\", height2 + 7);\n\n    // call drawBrush once on load with the default value\n    var zoomA = d3.select(\"input#a\")[0][0].value;\n    var zoomB = d3.select(\"input#b\")[0][0].value;\n    drawBrush(zoomA, zoomB);\n\n    // update the extent and call drawBrush again\n    window.setTimeout(function() {\n      d3.select(\"input#a\")[0][0].value = .2;\n      d3.select(\"input#b\")[0][0].value = .7;\n      var zoomA = d3.select(\"input#a\")[0][0].value;\n      var zoomB = d3.select(\"input#b\")[0][0].value; \n      drawBrush(zoomA, zoomB) \n    }, 2500);    \n\n    btns.on(\"click\", function(){\n      zoomA = d3.select(\"input#a\")[0][0].value; // the d3 selection returns a DOM element wrapped in two arrays, hence the [0][0]\n      console.log(\"zoomA\", zoomA)\n      zoomB = d3.select(\"input#b\")[0][0].value;\n      console.log(\"zoomB\", zoomB)\n      drawBrush(zoomA, zoomB);\n    });\n\n    function drawBrush(a, b) {\n      // define our brush extent\n\n      // note that x0 and x1 refer to the lower and upper bound of the brush extent\n      // while x2 refers to the scale for the second x-axis, for the context or brush area.\n      // unfortunate variable naming :-/\n      var x0 = x2.invert(a*width)\n      var x1 = x2.invert(b*width)\n      console.log(\"x0\", x0)\n      console.log(\"x1\", x1)\n      brush.extent([x0, x1])\n\n      // now draw the brush to match our extent\n      // use transition to slow it down so we can see what is happening\n      // set transition duration to 0 to draw right away\n      brush(d3.select(\".brush\").transition().duration(500));\n\n      // now fire the brushstart, brushmove, and brushend events\n      // set transition the delay and duration to 0 to draw right away\n      brush.event(d3.select(\".brush\").transition().delay(1000).duration(500))\n\n    }\n  });\n\n  function brushed() {\n    x.domain(brush.empty() ? x2.domain() : brush.extent());\n    focus.select(\".area\").attr(\"d\", area);\n    focus.select(\".x.axis\").call(xAxis);\n  }\n\n  function type(d) {\n    d.date = parseDate(d.date);\n    d.price = +d.price;\n    return d;\n  }\n\n</script>", "description": "programmatic control of a d3 brush - specify zoom", "created_at": "2015-11-12T22:44:25Z", "updated_at": "2016-06-14T22:36:23Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.brush", "d3.svg.area", "d3.select", "d3.selectAll", "d3.csv", "d3.extent", "d3.max"], "readme": "Forked from [timelyportfolio](http://bl.ocks.org/timelyportfolio)'s [bl.ock](http://bl.ocks.org/timelyportfolio/5c136de85de1c2abb6fc) which in turn forked [Mike Bostock](http://bl.ocks.org/mbostock)'s [focus+context zoom gist](https://gist.github.com/mbostock/1667367) to demonstrate how we can drive a d3 brush with code.\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>anybody know how to brush with code in <a href=\"https://twitter.com/hashtag/d3js?src=hash\">#d3js</a>?</p>&mdash; klr (@timelyportfolio) <a href=\"https://twitter.com/timelyportfolio/status/509701031585148928\">September 10, 2014</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nSo [timelyportfolio](http://bl.ocks.org/timelyportfolio) found [this discussion](https://groups.google.com/forum/#!topic/d3-js/vNaR-vJ9hMg), but he could not find an example demonstrating the steps proposed by Athan Reines.\n\n<pre>\nFor auto-redraw so that the focus of a 1D brush matches the graphed domain, you need to do as follows:\n\n(1) Apply the brush scale to the graphed domain (i.e., the brush extent) --> store in var brushExtent; (units: pixels)\n(2) Within the brush element (class=`'brush'`), select the `<rect>` with class=`'extent'`.\n(3) If the brush is horizontal (i.e., for the x-axis), set the 'x' attribute to the first value in brushExtent. This moves the start position of the focus `<rect>` to match the graphed domain. If the brush is vertical (i.e., for the y-axis), set the `'y'` attribute to the second value in brushExtent.\n(4) Next, set the 'width' attribute of the extent to `brushExtent[1] - brushExtent[0]`. The end of the brush focus is `brushExtent[1]`, but the length of the focus is this minus the offset introduced by `brushExtent[0]`. (If a y-axis brush, switch [0] and [1]).\n\n(*) The extent should now programmatically match the graphed domain.\n\nI use this procedure as part of a resize function. Hope this works. \n\n-KG\n</pre>\n\n[timelyportfolio](http://bl.ocks.org/timelyportfolio) and I do not follow these steps exactly.  Here is the code that drives our brush when a range is specified and the **zoom** button is clicked.\n\n```\nfunction drawBrush(a, b) {\n  // define our brush extent\n\n  // note that x0 and x1 refer to the lower and upper bound of the brush extent\n  // while x2 refers to the scale for the second x-axis, for context or brush area.\n  // unfortunate variable naming :-/\n  var x0 = x2.invert(a*width)\n  var x1 = x2.invert(b*width)\n  console.log(\"x0\", x0)\n  console.log(\"x1\", x1)\n  brush.extent([x0, x1])\n\n  // now draw the brush to match our extent\n  // use transition to slow it down so we can see what is happening\n  // set transition duration to 0 to draw right away\n  brush(d3.select(\".brush\").transition().duration(500));\n\n  // now fire the brushstart, brushmove, and brushend events\n  // set transition the delay and duration to 0 to draw right away\n  brush.event(d3.select(\".brush\").transition().delay(10duration(500))\n\n    }\n```\n\n<hr/>\n\n### Original Readme.md from [mbostock](http://bl.ocks.org/mbostock)\nThis examples demonstrates how to use D3's brush component to implement focus + context zooming. Click and drag in the small chart below to pan or zoom.\n\nMIT License", "uid": "micahstubbs_3cda05ca68cba260cb81"}, {"code": "<script>\n    O.Template({\n      init: function() {\n        var baseurl = this.baseurl = 'http://{s}.api.cartocdn.com/base-light/{z}/{x}/{y}.png';\n        var map = this.map = L.map('map',{\n          center: [0, 0],\n          zoom: 4\n        });\n\n        this.map.scrollWheelZoom.disable();\n\n        var basemap = this.basemap = L.tileLayer(baseurl, {\n          attribution: 'data OSM - map CartoDB'\n        }).addTo(map);\n\n        var story = O.Story()\n\n        this.story = story;\n        this.miniprogressbar = O.MiniProgressBar();\n\n        // trigger when  map_pos go out of the screen\n        this.edge = O.Edge(\n          O.Triggers.Scroll().less('map_pos').offset(0),\n          O.Triggers.Scroll().greater('map_pos').offset(0)\n        )\n      },\n\n      update: function(actions) {\n        var self = this;\n\n        this.story.clear();\n\n        if (this.baseurl && (this.baseurl !== actions.global.baseurl)) {\n          this.baseurl = actions.global.baseurl || 'http://0.api.cartocdn.com/base-light/{z}/{x}/{y}.png';\n\n          this.basemap.setUrl(this.baseurl);\n        }\n\n        if (this.cartoDBLayer && (\"http://\"+self.cartoDBLayer.options.user_name+\".cartodb.com/api/v2/viz/\"+self.cartoDBLayer.options.layer_definition.stat_tag+\"/viz.json\" !== actions.global.vizjson)) {\n          this.map.removeLayer(this.cartoDBLayer);\n\n          this.cartoDBLayer = null;\n          this.created = false;\n        }\n\n        if (actions.global.vizjson && !this.cartoDBLayer) {\n          if (!this.created) { // sendCode debounce < vis loader\n            cdb.vis.Loader.get(actions.global.vizjson, function(vizjson) {\n              self.map.fitBounds(vizjson.bounds);\n\n              cartodb.createLayer(self.map, vizjson)\n                .done(function(layer) {\n                  self.cartoDBLayer = layer;\n\n                  var sublayer = layer.getSubLayer(0),\n                      layer_name = layer.layers[0].options.layer_name,\n                      filter = actions.global.cartodb_filter ? \" WHERE \"+actions.global.cartodb_filter : \"\";\n\n                  sublayer.setSQL(\"SELECT * FROM \"+layer_name+filter)\n\n                  self.map.addLayer(layer);\n\n                  self._resetActions(actions);\n                }).on('error', function(err) {\n                  console.log(\"some error occurred: \" + err);\n                });\n            });\n\n            this.created = true;\n          }\n\n          return;\n        }\n\n        this._resetActions(actions);\n      },\n\n      _resetActions: function(actions) {\n        // update footer title and author\n        var title_ = actions.global.title === undefined ? '' : actions.global.title,\n            author_ = actions.global.author === undefined ? 'Using' : 'By '+actions.global.author+' using';\n\n        document.getElementById('title').innerHTML = title_;\n        document.getElementById('author').innerHTML = author_;\n        document.title = title_ + \" | \" + author_ +' Odyssey.js';\n\n        var TRIGGER_LINE = this.map.getSize().y + 50;\n        this.story.addEvent(\n          this.edge,\n          O.Parallel(\n            O.Actions.CSS($('#map_container')).toggleClass('attachTop'),\n            O.Actions.CSS($('#content')).toggleClass('attachMap'),\n            O.Actions.Debug().log('attach')\n          )\n        )\n\n        // create content\n        var content = '';\n\n        var slide_ = actions[0];\n        $('#header').html(slide_.html());\n\n        this.story\n          .addState(\n            O.Scroll().within($('#header')),\n            slide_(this)\n          );\n\n        for(var i = 1; i < actions.length; ++i) {\n          var slide = actions[i];\n          content += \"<div id='s_\" + i +\"'>\" + slide.html() + \"</div>\";\n        }\n\n        $('#content').html(content);\n\n        // first slide is the header, skip it\n        for(var i = 1; i < actions.length; ++i) {\n          var slide = actions[i];\n          this.story.addState(\n            O.Triggers.Scroll().within('s_' + i).offset(TRIGGER_LINE),\n            O.Parallel(\n              slide(this),\n              this.miniprogressbar.percent(100*i/(actions.length - 1))\n            )\n          )\n        }\n\n        if(window.scrollY === 0) {\n          this.story.go(0);\n        }\n      }\n    });\n  </script>\n\n  <script>\n    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n    ga('create', 'UA-20934186-21', 'cartodb.github.io');\n    ga('send', 'pageview');\n  </script>\n\n\n<script id=\"md_template\" type=\"text/template\">```\n-baseurl: \"https://2.maps.nlp.nokia.com/maptile/2.1/maptile/newest/normal.day/{z}/{x}/{y}/256/png8?lg=eng&token=A7tBPacePg9Mj_zghvKt9Q&app_id=KuYppsdXZznpffJsKT24\"\n-title: \"Key Health Start-up Accelerators in Europe\"\n-author: \"Ben Heubl, Data Journalism for medtechengine.com</a>\"\n```\n#Key health start-up accelerators in Europe\n\n``\n![id](http://datacandy.co.uk/medtechengine/logo.png)\n\n```\n- center: [44.7779, 13.0078]\n- zoom: 4\n```\n\nAccording to Bart Collet, there's a momentum building in EU countries. And each country has different ways to support health tech entrepreneurs. Below is a list of the main health tech accelerator locations and programs (with thanks to [Healthstartup.EU](http://www.healthstartup.eu/the-ultimate-health-startup-resources-guide/))\n\n#London, UK\n```\n- center: [51.4609, -0.1428]\n- zoom: 8\n```\n\n- [Healthbox Europe](http://www.healthbox.com/portfolio)  launched in 2012 and received an overwhelming response of 200 applications from health technology start-ups.  \n\n\n- [Digital Greenwich](http://www.digitalgreenwich.com/accelerator-programme-about/), an accelerator program that aims at giving business support to digital SMEs who are working on innovative products, offers help to health technology companies (among other areas such as digital home).\n\n\n\n- [The Young Foundation](http://youngfoundation.org/projects/the-accelerator/) offers a four-month program with the goal of supporting start-ups in health tech and other areas like education and housing. \n\n\n- [Wayra](http://wayra.co/uk) is an accelerator run by the telecommunication giant Telefonica, and offers funding, mentoring, office space, networking and support in business partnerships to companies such as precision medicine\n[start-up Geneix LTD](http://techcrunch.com/2014/01/17/wayra-uk-3rd-intake/)\n\n\n![New York](http://london43a.wikispaces.com/file/view/london-1.jpg/271006322/630x286/london-1.jpg)\n\n\n\n#Berlin, Germany\n```\n- center: [52.5145, 13.3759]\n- zoom: 9\n```\n\n- [EyeFocus](http://eyefocus.co/) launched in Berlin last year to concentrate on the acceleration of start-ups in eye care. In a Techcrunch article, its claimed that this is the worlds first eye-care accelerator. It has given 20,000 Euros to start-ups and offered founders three-month office slots at the Rainmaking Loft in Berlin.\n\n\n- [XL Health](http://xlhealth.de/) offers help in funding, mentoring and networking. The organisation launched in 2012 and currently has a portfolio of four companies including Harimata  a mobile monitoring application  and MySugr GmbH  a suite of apps to help diabetes patients manage the condition, which both received investment in 2014. \n\n\n![New York](http://www.tooteko.com/web/wp-content/uploads/2015/03/eye-focus-500x350.jpg)\n\n[Graphic: www.eyefocus.co](http://www.tooteko.com/web/wp-content/uploads/2015/03/eye-focus-500x350.jpg)\n\n#The Netherlands\n```\n- center: [52.3722, 4.8917]\n- zoom: 9\n```\n\n- [Reshape Healthcubator](https://www.facebook.com/healthcubator) is a six-month-long programme arranged by Lucien Engelen at the Radboud Reshape Centre in the Netherlands. Supported by the University Medical Center, the programme helps young health start-ups find the right partners to bring their applications to market.\n\n\n- [Rockstart](http://www.rockstart.com/accelerator/digitalhealth/) are running a 180-day intensive start-up accelerator program involving 10 start-ups. \n\n\n- Amsterdam based [Health-Lab](http://amsterdamsmartcity.com/projects/detail/label/Health-Lab) is a living lab initiative, open to health technologists. \n\n\n![New York](https://upload.wikimedia.org/wikipedia/commons/thumb/b/be/KeizersgrachtReguliersgrachtAmsterdam.jpg/1920px-KeizersgrachtReguliersgrachtAmsterdam.jpg)\n[Graphic: Wikipedia](https://upload.wikimedia.org/wikipedia/commons/thumb/b/be/KeizersgrachtReguliersgrachtAmsterdam.jpg/1920px-KeizersgrachtReguliersgrachtAmsterdam.jpg)\n\n\n\n\n#Paris, France\n```\n- center: [48.8466, 2.3703]\n- zoom: 10\n```\n\n- [Paris Incubateurs](http://incubateurs.parisandco.com/) is focusing on design, cities of the future and e-health. Over a period of two to three years, health tech entrepreneurs will receive its support. \n\n\n- Less of an accelerator than a conference, [Doctors 2.0](http://www.doctors20.com/) a patient-inclusive conference invites health tech start-ups to join together in May 2016. It will feature a start-up contest and aims to connect key stakeholders across health and technology sectors. \n\n\n\n\n\n# Ireland\n```\n- center: [53.2652, -5.3394]\n- zoom: 6\n```\n\n- [HealthFounders](http://www.healthfounders.com/whatwedo/) is a residential incubation/acceleration initiative. Its aims include the support of start-ups and initiatives to solve issues such as keeping people out of hospitals and reducing hospital stays.\n\n![New York](https://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Trim_Castle_6.jpg/1920px-Trim_Castle_6.jpg)\n\n[Graphic: Wikipedia](https://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Trim_Castle_6.jpg/1920px-Trim_Castle_6.jpg)\n\n\n# Stockholm\n```\n- center: [59.2827, 18.6108]\n- zoom: 7\n```\n\n- Concerned with the lives of the elderly, the [Modern Aging programme](http://accessh.org/wp-content/uploads/2015/04/Modern-Aging-Summaries-%E2%80%93-Sweden.pdf) was a Stockholm-based initiative run by Access Health International (a non-profit think tank and advisory group). Modern Aging Seed funding included 50,000 SEK or around 5,000 Euro and produced a free book Modern Aging: A Practical Guide for Developers, Entrepreneurs, and Startups in the Silver Market.\n\n![New York](http://www.guideurope.eu/wp-content/blogs.dir/galleries/svezia/svezia3.jpg?ce00d7)\n\n[Graphic: Wikipedia](https://upload.wikimedia.org/wikipedia/commons/8/8c/GamlaStan_from_Katarinahissen_Stockholm_Swe.jpg)\n\n\n\n# Estonia\n```\n- center: [59.0857, 25.8398]\n- zoom: 5\n```\n\n- A program called [Accelerace Life](http://www.acceleracelife.com/people/)\n is organised by four tech/innovation agencies from Denmark, Estonia and Latvia. Its aim is to help new life sciences and health tech businesses make the most of their potential nationally and internationally. It currently runs two programs: one for the Baltic Nordic region and one in Scandinavia. The programme doesnt require the start-ups to give up equity or relocate.\n\n![New York](https://upload.wikimedia.org/wikipedia/commons/5/55/Tallin_collage_33.png)\n\n[Graphic: Wikipedia](https://upload.wikimedia.org/wikipedia/commons/5/55/Tallin_collage_33.png)\n\n[Sources and for more information](http://www.healthstartup.eu/the-ultimate-health-startup-resources-guide/)\n\n[www.medtechengine.com](http://www.medtechengine.com)\n\n\n\n</script>", "description": "", "created_at": "2015-11-12T12:03:01Z", "updated_at": "2015-11-12T12:03:01Z", "api": [], "readme": "", "uid": "BenHeubl_d781122f3c36e4fd823e"}, {"code": "<script>\n\t\tqueue() \n\t\t\t.defer(d3.json, \"occupation.json\")\n\t\t\t.await(drawAll);\n\t\t\t\n\t\tfunction drawAll(error, dataset) {\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t////////////////// Create Set-up variables  ////////////////// \n\t\t\t////////////////////////////////////////////////////////////// \n\n\t\t\tvar width = Math.max($(\"#chart\").width(),350) - 20,\n\t\t\t\theight = (window.innerWidth < 768 ? width : window.innerHeight - 20);\n\n\t\t\tvar mobileSize = (window.innerWidth < 768 ? true : false);\n\n\t\t\tvar centerX = width/2,\n\t\t\t\tcenterY = height/2;\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t/////////////////////// Create SVG  /////////////////////// \n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t\n\t\t\t//Create the visible canvas and context\n\t\t\tvar canvas  = d3.select(\"#chart\").append(\"canvas\")\n\t\t\t\t.attr(\"id\", \"canvas\")\n\t\t\t\t.attr(\"width\", width)\n\t\t\t\t.attr(\"height\", height);\n\t\t\tvar context = canvas.node().getContext(\"2d\");\n\t\t\t\tcontext.clearRect(0, 0, width, height);\n\t\t\t\n\t\t\t//Create a hidden canvas in which each circle will have a different color\n\t\t\t//We can use this to capture the clicked on circle\n\t\t\tvar hiddenCanvas  = d3.select(\"#chart\").append(\"canvas\")\n\t\t\t\t.attr(\"id\", \"hiddenCanvas\")\n\t\t\t\t.attr(\"width\", width)\n\t\t\t\t.attr(\"height\", height)\n\t\t\t\t.style(\"display\",\"none\");\t\n\t\t\tvar hiddenContext = hiddenCanvas.node().getContext(\"2d\");\n\t\t\t\thiddenContext.clearRect(0, 0, width, height);\n\n\t\t\t//Create a custom element, that will not be attached to the DOM, to which we can bind the data\n\t\t\tvar detachedContainer = document.createElement(\"custom\");\n\t\t\tvar dataContainer = d3.select(detachedContainer);\n\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t/////////////////////// Create Scales  /////////////////////// \n\t\t\t////////////////////////////////////////////////////////////// \n\n\t\t\tvar colorCircle = d3.scale.ordinal()\n\t\t\t\t\t.domain([0,1,2,3])\n\t\t\t\t\t.range(['#bfbfbf','#838383','#4c4c4c','#1c1c1c']);\n\n\t\t\tvar diameter = Math.min(width*0.9, height*0.9),\n\t\t\t\tradius = diameter / 2;\n\t\t\t\t\n\t\t\tvar zoomInfo = {\n\t\t\t\tcenterX: width / 2,\n\t\t\t\tcenterY: height / 2,\n\t\t\t\tscale: 1\n\t\t\t};\n\n\t\t\t//Dataset to swtich between color of a circle (in the hidden canvas) and the node data\t\n\t\t\tvar colToCircle = {};\n\t\t\t\n\t\t\tvar pack = d3.layout.pack()\n\t\t\t\t.padding(1)\n\t\t\t\t.size([diameter, diameter])\n\t\t\t\t.value(function(d) { return d.size; })\n\t\t\t\t.sort(function(d) { return d.ID; });\n\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t////////////////// Create Circle Packing /////////////////////\n\t\t\t////////////////////////////////////////////////////////////// \n\n\t\t\tvar nodes = pack.nodes(dataset),\n\t\t\t\troot = dataset,\n\t\t\t\tfocus = root;\t\t\n\t\t\t\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t///////////////// Canvas draw function ///////////////////////\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t\n\t\t\tvar cWidth = canvas.attr(\"width\");\n\t\t\tvar cHeight = canvas.attr(\"height\");\n\t\t\tvar nodeCount = nodes.length;\n\n\t\t\t//The draw function of the canvas that gets called on each frame\n\t\t\tfunction drawCanvas(chosenContext, hidden) {\n\n\t\t\t\t//Clear canvas\n\t\t\t\tchosenContext.fillStyle = \"#fff\";\n\t\t\t\tchosenContext.rect(0,0,cWidth,cHeight);\n\t\t\t\tchosenContext.fill();\n\t\t\t  \n\t\t\t\t//Select our dummy nodes and draw the data to canvas.\n\t\t\t\tvar node = null;\n\t\t\t\t// It's slightly faster than nodes.forEach()\n\t\t\t\tfor (var i = 0; i < nodeCount; i++) {\n\t\t\t\t\tnode = nodes[i];\n\n\t\t\t\t\t//If the hidden canvas was send into this function and it does not yet have a color, generate a unique one\n\t\t\t\t\tif(hidden) {\n\t\t\t\t\t\tif(node.color == null) {\n\t\t\t\t\t\t\t// If we have never drawn the node to the hidden canvas get a new color for it and put it in the dictionary.\n\t\t\t\t\t\t\tnode.color = genColor();\n\t\t\t\t\t\t\tcolToCircle[node.color] = node;\n\t\t\t\t\t\t}//if\n\t\t\t\t\t\t// On the hidden canvas each rectangle gets a unique color.\n\t\t\t\t\t\tchosenContext.fillStyle = node.color;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchosenContext.fillStyle = node.children ? colorCircle(node.depth) : \"white\";\n\t\t\t\t\t}//else\n\t\t\t\t\n\t\t\t\t\t//Draw each circle\n\t\t\t\t\tchosenContext.beginPath();\n\t\t\t\t\tchosenContext.arc(((node.x - zoomInfo.centerX) * zoomInfo.scale) + centerX,\n\t\t\t\t\t\t\t\t\t  ((node.y - zoomInfo.centerY) * zoomInfo.scale) + centerY,\n\t\t\t\t\t\t\t\t\t\tnode.r * zoomInfo.scale, 0,  2 * Math.PI, true);\t\t\t\t\n\t\t\t\t\tchosenContext.fill();\n\t\t\t\t\n\t\t\t\t}//for i\n\t\t\t\t\n\t\t\t}//function drawCanvas\n\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t/////////////////// Click functionality ////////////////////// \n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t\n\t\t\t// Listen for clicks on the main canvas\n\t\t\tdocument.getElementById(\"canvas\").addEventListener(\"click\", function(e){\n\t\t\t\t// We actually only need to draw the hidden canvas when there is an interaction. \n\t\t\t\t// This sketch can draw it on each loop, but that is only for demonstration.\n\t\t\t\tdrawCanvas(hiddenContext, true);\n\n\t\t\t\t//Figure out where the mouse click occurred.\n\t\t\t\tvar mouseX = e.layerX;\n\t\t\t\tvar mouseY = e.layerY;\n\n\t\t\t\t// Get the corresponding pixel color on the hidden canvas and look up the node in our map.\n\t\t\t\t// This will return that pixel's color\n\t\t\t\tvar col = hiddenContext.getImageData(mouseX, mouseY, 1, 1).data;\n\t\t\t\t//Our map uses these rgb strings as keys to nodes.\n\t\t\t\tvar colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n\t\t\t\tvar node = colToCircle[colString];\n\n\t\t\t\tif(node) {\n\t\t\t\t\tif (focus !== node) zoomToCanvas(node); else zoomToCanvas(root);\n\t\t\t\t}//if\n\t\t\t});\n\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t///////////////////// Zoom Function //////////////////////////\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t\n\t\t\t//Based on the generous help by Stephan Smola\n\t\t\t//http://bl.ocks.org/smoli/d7e4f9199c15d71258b5\n\t\t\t\n\t\t\tvar ease = d3.ease(\"cubic-in-out\"),\n\t\t\t\tduration = 2000,\n\t\t\t\ttimeElapsed = 0,\n\t\t\t\tinterpolator = null,\n\t\t\t\tvOld = [focus.x, focus.y, focus.r * 2.05];\n\t\t\t\t\n\t\t\t//Create the interpolation function between current view and the clicked on node\n\t\t\tfunction zoomToCanvas(focusNode) {\n\t\t\t\tfocus = focusNode;\n\t\t\t\tvar v = [focus.x, focus.y, focus.r * 2.05]; //The center and width of the new \"viewport\"\n\t\t\t\t\n\t\t\t\tinterpolator = d3.interpolateZoom(vOld, v); //Create interpolation between current and new \"viewport\"\n\t\t\t\t\n\t\t\t\tduration = \tinterpolator.duration; //Interpolation gives back a suggested duration\t \t\t\n\t\t\t\ttimeElapsed = 0; //Set the time elapsed for the interpolateZoom function to 0\t\n\t\t\t\tvOld = v; //Save the \"viewport\" of the next state as the next \"old\" state\n\t\t\t}//function zoomToCanvas\n\t\t\t\n\t\t\t//Perform the interpolation and continuously change the zoomInfo while the \"transition\" occurs\n\t\t\tfunction interpolateZoom(dt) {\n\t\t\t\tif (interpolator) {\n\t\t\t\t\ttimeElapsed += dt;\n\t\t\t\t\tvar t = ease(timeElapsed / duration);\n\t\t\t\t\t\n\t\t\t\t\tzoomInfo.centerX = interpolator(t)[0];\n\t\t\t\t\tzoomInfo.centerY = interpolator(t)[1];\n\t\t\t\t\tzoomInfo.scale = diameter / interpolator(t)[2];\n\t\t\t\t\n\t\t\t\t\tif (timeElapsed >= duration) interpolator = null;\n\t\t\t\t}//if\n\t\t\t}//function zoomToCanvas\n\t\t\t\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t//////////////////// Other Functions /////////////////////////\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t\n\t\t\t//Generates the next color in the sequence, going from 0,0,0 to 255,255,255.\n\t\t\t//From: https://bocoup.com/weblog/2d-picking-in-canvas\n\t\t\tvar nextCol = 1;\n\t\t\tfunction genColor(){\n\t\t\t\tvar ret = [];\n\t\t\t\t// via http://stackoverflow.com/a/15804183\n\t\t\t\tif(nextCol < 16777215){\n\t\t\t\t  ret.push(nextCol & 0xff); // R\n\t\t\t\t  ret.push((nextCol & 0xff00) >> 8); // G \n\t\t\t\t  ret.push((nextCol & 0xff0000) >> 16); // B\n\n\t\t\t\t  nextCol += 100; // This is exagerated for this example and would ordinarily be 1.\n\t\t\t\t}\n\t\t\t\tvar col = \"rgb(\" + ret.join(',') + \")\";\n\t\t\t\treturn col;\n\t\t\t}//function genColor\n\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t/////////////////////// FPS Stats box //////////////////////// \n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t\n\t\t\tvar stats = new Stats();\n\t\t\tstats.setMode(0); // 0: fps, 1: ms, 2: mb\n\n\t\t\t// align top-left\n\t\t\tstats.domElement.style.position = 'absolute';\n\t\t\tstats.domElement.style.left = '0px';\n\t\t\tstats.domElement.style.top = '0px';\n\n\t\t\tdocument.body.appendChild( stats.domElement );\n\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t/////////////////////// Initiate ///////////////////////////// \n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t\t\t\n\t\t\t//First zoom to get the circles to the right location\n\t\t\tzoomToCanvas(root);\n\t\t\t\n\t\t\tvar dt = 0;\n\t\t\td3.timer(function(elapsed) {\n\t\t\t\tstats.begin();\n\t\t\t\tinterpolateZoom(elapsed - dt);\n\t\t\t\tdt = elapsed;\n\t\t\t\tdrawCanvas(context);\n\t\t\t\tstats.end();\n\t\t\t});\n\n\t\t}//drawAll\n\t</script>", "description": "Zoomable Circle Packing with Canvas & D3.js - II", "created_at": "2015-11-11T09:31:03Z", "updated_at": "2015-11-16T17:26:25Z", "api": ["d3.select", "d3.scale.ordinal", "d3.layout.pack", "d3.ease", "d3.interpolateZoom", "d3.timer"], "readme": "This is the fourth step of my first attempt to learn canvas. I want to improve a piece a made a few weeks ago about the division of [occupations](http://nbremer.github.io/occupations/). The D3.js version has so many DOM elements due to all the small bar charts that it is very slow. Therefore, I hope that a canvas version might improve things\n\nThanks to [a version of the circle packing](http://bl.ocks.org/smoli/d7e4f9199c15d71258b5) that does away with the D3.js data binding made by Stephan Smola I was able to make a few adjustments to make the zooming more linear from point A to B. Next step, add the bar charts...\n\nI wrote a more extensive tutorial around what I learned while doing this project in my blog [Learnings from a D3.js addict on starting with Canvas](http://www.visualcinnamon.com/2015/11/learnings-from-a-d3-js-addict-on-starting-with-canvas.html) in which this can be seen as step 4. See the previous, [more jittery zoomable version here](http://bl.ocks.org/nbremer/667e4df76848e72f250b) in which the code is still more base on d3.js\n\nAnd if you want to see the final result, with everything up and running in canvas look [here](http://www.visualcinnamon.com/occupations)", "uid": "nbremer_db24422abdb20150a9dd"}, {"code": "<script>\n\nd3.csv(\"firm.csv\",function(error,data) {createNetwork(data)});\n\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\nfunction createNetwork(edgelist) {\n  var nodeHash = {};\n  var nodes = [];\n  var edges = [];\n\n  edgelist.forEach(function (edge) {\n    if (!nodeHash[edge.source]) {\n      nodeHash[edge.source] = {id: edge.source, label: edge.source};\n      nodes.push(nodeHash[edge.source]);\n    }\n    if (!nodeHash[edge.target]) {\n      nodeHash[edge.target] = {id: edge.target, label: edge.target};\n      nodes.push(nodeHash[edge.target]);\n    }\n    if (edge.weight >= 5) {\n      edges.push({id: nodeHash[edge.source].id + \"-\" + nodeHash[edge.target].id, source: nodeHash[edge.source], target: nodeHash[edge.target], weight: edge.weight});\n    }\n  });\n  createForceNetwork(nodes, edges);\n}\n\nfunction modularityCensus(nodes, edges) {\n  edges.forEach(function (edge) {\n    if (edge.source.module !== edge.target.module) {\n      edge.border = true;\n    }\n    else {\n      edge.border = false;\n    }\n  });\n  nodes.forEach(function (node) {\n    var theseEdges = edges.filter(function(d) {return d.source === node || d.target === node});\n\n    var theseSourceModules = theseEdges.map(function (d) {return d.source.module}).filter(onlyUnique);\n    var theseTargetModules = theseEdges.map(function (d) {return d.target.module}).filter(onlyUnique);\n\n    if (theseSourceModules.length > 1 || theseTargetModules.length > 1) {\n      node.border = true;\n    }\n    else {\n      node.border = false;\n    }\n  });\n\n}\n\nfunction createForceNetwork(nodes, edges) {\n\n//create a network from an edgelist\n\nvar colors = d3.scale.ordinal().domain([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]).range([\"#996666\", \"#66CCCC\", \"#FFFF99\", \"#CC9999\", \"#666633\", \"#993300\", \"#999966\", \"#660000\", \"#996699\", \"#cc6633\", \"#ff9966\", \"#339999\", \"#6699cc\", \"#ffcc66\", \"#ff6600\", \"#00ccccc\"]);\n\nvar node_data = nodes.map(function (d) {return d.id});\nvar edge_data = edges.map(function (d) {return {source: d.source.id, target: d.target.id, weight: 1}; });\n\nvar community = jLouvain().nodes(node_data).edges(edge_data);\nvar result  = community();\n\nnodes.forEach(function (node) {\n  node.module = result[node.id]\n});\n\nmodularityCensus(nodes, edges);\n\n  var force = d3.layout.force().nodes(nodes).links(edges)\n  .size([500,500])\n  .charge(-300)\n  .gravity(0.2)\n  .on(\"tick\", updateNetwork);\n\n  var edgeEnter = d3.select(\"svg\").selectAll(\"g.edge\")\n  .data(edges, function (d) {return d.id})\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"edge\");\n\n  edgeEnter\n  .append(\"line\")\n  .style(\"stroke-width\", function (d) {return d.border ? \"3px\" : \"1px\"})\n  .style(\"stroke\", \"black\")\n  .style(\"pointer-events\", \"none\");\n\n  var nodeEnter = d3.select(\"svg\").selectAll(\"g.node\")\n  .data(nodes, function (d) {return d.id})\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .call(force.drag());\n\n  nodeEnter.append(\"circle\")\n  .attr(\"r\", 8)\n  .style(\"fill\", function (d) {return colors(d.module)})\n  .style(\"stroke\", \"black\")\n  .style(\"stroke-width\", function (d) {return d.border ? \"3px\" : \"1px\"})\n\n  nodeEnter.append(\"text\")\n  .style(\"text-anchor\", \"middle\")\n  .attr(\"y\", 3)\n  .style(\"stroke-width\", \"1px\")\n  .style(\"stroke-opacity\", 0.75)\n  .style(\"stroke\", \"white\")\n  .style(\"font-size\", \"8px\")\n  .text(function (d) {return d.id})\n  .style(\"pointer-events\", \"none\")\n\n  nodeEnter.append(\"text\")\n  .style(\"text-anchor\", \"middle\")\n  .attr(\"y\", 3)\n  .style(\"font-size\", \"8px\")\n  .text(function (d) {return d.id})\n  .style(\"pointer-events\", \"none\")\n\n  force.start();\n\n  function updateNetwork() {\n    d3.select(\"svg\").selectAll(\"line\")\n    .attr(\"x1\", function (d) {return d.source.x})\n    .attr(\"y1\", function (d) {return d.source.y})\n    .attr(\"x2\", function (d) {return d.target.x})\n    .attr(\"y2\", function (d) {return d.target.y});\n\n    d3.select(\"svg\").selectAll(\"g.node\")\n      .attr(\"transform\", function (d) {return \"translate(\" + d.x + \",\" + d.y + \")\"});\n\n  }\n\n\n\n}\n</script>", "description": "Network with Communities", "created_at": "2015-11-08T23:19:34Z", "updated_at": "2016-06-14T22:38:23Z", "api": ["d3.csv", "d3.scale.ordinal", "d3.layout.force", "d3.select"], "readme": "Graph Example 3 for [How to Create Effective Network Data Visualization](http://elijahmeeks/networkviz/)\n\nThis example relies on the [jLouvain](https://github.com/upphiminn/jLouvain) library to calculate community structure of the network using the Louvain method. Automatic community detection in networks attempts to find structures such that the majority of links are within communities and only few links are between communities.\n\nAfter detecting communities, links between communities are highlighted with thicker lines and individuals connected to consultants in other communities are similarly highlighted.\n\nforked from [emeeks](http://bl.ocks.org/emeeks/)'s block: [Networks - Graphs 3](http://bl.ocks.org/emeeks/09a49d15df06d56c8f70)\n", "uid": "micahstubbs_d8d96e1e554aa72671f4"}, {"code": "<script>\n\nd3.csv(\"firm.csv\",function(error,data) {createNetwork(data)});\n\nfunction createNetwork(edgelist) {\n  var nodeHash = {};\n  var edgeHash = {};  // add edgehash\n  var nodes = [];\n  var edges = [];\n\n  edgelist.forEach(function (edge) {\n    if (!nodeHash[edge.source]) {\n      nodeHash[edge.source] = {id: edge.source, label: edge.source};\n      nodes.push(nodeHash[edge.source]);\n    }\n    if (!nodeHash[edge.target]) {\n      nodeHash[edge.target] = {id: edge.target, label: edge.target};\n      nodes.push(nodeHash[edge.target]);\n    }\n\n    //is it reciprocal?  - check if edge pair already exists in inverse and add to edgehash if does\n\n    if (edge.weight >= 5) {\n      if (edgeHash[edge.target + \"-\" + edge.source]) {\n        edgeHash[edge.target + \"-\" + edge.source].reciprocal = true;\n      }\n      else {\n        var newEdge = {source: nodeHash[edge.source], target: nodeHash[edge.target], weight: edge.weight};\n        edgeHash[edge.source + \"-\" + edge.target] = newEdge;\n        edges.push(newEdge);\n      }\n    }\n  });\n  createForceNetwork(nodes, edges);\n}\n\nfunction createForceNetwork(nodes, edges) {\n\n//create a network from an edgelist\n\n  var force = d3.layout.force().nodes(nodes).links(edges)\n  .size([500,500])\n  .charge(-200)\n  .on(\"tick\", updateNetwork);\n\n  d3.select(\"svg\").selectAll(\"line\")\n  .data(edges)\n  .enter()\n  .append(\"line\")\n  .style(\"stroke-width\", \"2px\")\n  .style(\"stroke\", function (d) {return d.reciprocal ? \"#66CCCC\" : \"#996666\"});\n\n  d3.select(\"svg\").selectAll(\"circle\")\n  .data(nodes)\n  .enter()\n  .append(\"circle\")\n  .style(\"fill\", \"#FFFF99\")\n  .style(\"stroke\", \"#666633\")\n  .style(\"stroke-width\", \"1px\")\n  .attr(\"r\", 5)\n  .call(force.drag());\n\n  force.start();\n\n  function updateNetwork() {\n    d3.select(\"svg\").selectAll(\"line\")\n      .attr(\"x1\", function (d) {return d.source.x})\n      .attr(\"x2\", function (d) {return d.target.x})\n      .attr(\"y1\", function (d) {return d.source.y})\n      .attr(\"y2\", function (d) {return d.target.y});\n\n    d3.select(\"svg\").selectAll(\"circle\")\n      .attr(\"cx\", function (d) {return d.x})\n      .attr(\"cy\", function (d) {return d.y});\n  }\n\n\n\n}\n</script>", "description": "Networks - Edges 6", "created_at": "2015-11-08T22:36:09Z", "updated_at": "2015-11-08T22:36:42Z", "api": ["d3.csv", "d3.layout.force", "d3.select"], "readme": "Edges Example 6 for [How to Create Effective Network Data Visualization](http://elijahmeeks/networkviz/)\n\nRather than representing directionality of each edge, it might make more sense to represent whether a tie is reciprocated, which is a product of directionality. Reciprocity indicates stronger ties and might be more important to an audience than explicit direction of connections.\n\nThe method for calculating reciprocity is simply to create a hash of edge IDs and check when each is evaluated to see if the reverse of that edge has already been added to the array.\n\nObviously, this should also have a legend, because every data visualization should have a legend.", "uid": "jalapic_ad6a1f1333aeff04c04b"}, {"code": "<script>\n    queue()\n    .defer(d3.json, \"world.geojson\")\n    .defer(d3.csv, \"cities.csv\")\n    .await(function(error, file1, file2) { createMap(file1, file2); });\n    \n  function createMap(countries, cities) {\n    expData = countries;\n    width = 500;\n    height = 500;\n    projection = d3.geo.mollweide()\n    .scale(120)\n    .translate([width / 2, height / 2])\n    .center([20,0])\n    geoPath = d3.geo.path().projection(projection);\n    \n    var mapZoom = d3.behavior.zoom().translate(projection.translate()).scale(projection.scale()).on(\"zoom\", zoomed);\n    d3.select(\"svg\").call(mapZoom);\n    \n    function zoomed() {\n      projection.translate(mapZoom.translate()).scale(mapZoom.scale());\n      d3.selectAll(\"path.graticule\").attr(\"d\", geoPath);\n      d3.selectAll(\"path.countries\").attr(\"d\", geoPath);\n      \n      d3.selectAll(\"circle.cities\")\n      .attr(\"cx\", function(d) {return projection([d.y,d.x])[0]})\n      .attr(\"cy\", function(d) {return projection([d.y,d.x])[1]})\n    }\n    \n    function zoomButton(zoomDirection) {\n      if (zoomDirection == \"in\") {\n        var newZoom = mapZoom.scale() * 1.5;\n        var newX = ((mapZoom.translate()[0] - (width / 2)) * 1.5) + width / 2;\n        var newY = ((mapZoom.translate()[1] - (height / 2)) * 1.5) + height / 2;\n  }\n  else if (zoomDirection == \"out\") {\n      var newZoom = mapZoom.scale() * .75;\n      var newX = ((mapZoom.translate()[0] - (width / 2)) * .75) + width / 2;\n      var newY = ((mapZoom.translate()[1] - (height / 2)) * .75) + height / 2;    \n  }\n\n  mapZoom.scale(newZoom).translate([newX,newY])\n  zoomed();\n}\n\nd3.select(\"#controls\").append(\"button\").on(\"click\", function () {zoomButton(\"in\")}).html(\"Zoom In\");\nd3.select(\"#controls\").append(\"button\").on(\"click\", function () {zoomButton(\"out\")}).html(\"Zoom Out\");\n\n    featureSize = d3.extent(countries.features, function(d) {return geoPath.area(d)});\n    countryColor = d3.scale.quantize().domain(featureSize).range(colorbrewer.Reds[7]);\n\n    var graticule = d3.geo.graticule();\n    \n    d3.select(\"svg\").append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule line\")\n    .attr(\"d\", geoPath)\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", \"lightgray\")\n    .style(\"stroke-width\", \"1px\");\n\n    d3.select(\"svg\").append(\"path\")\n    .datum(graticule.outline)\n    .attr(\"class\", \"graticule outline\")\n    .attr(\"d\", geoPath)\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"1px\");\n\n    \n    d3.select(\"svg\").selectAll(\"path.countries\").data(countries.features)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", geoPath)\n    .attr(\"class\", \"countries\")\n    .style(\"fill\", function(d) {return countryColor(geoPath.area(d))})\n    .style(\"stroke-width\", 1)\n    .style(\"stroke\", \"black\")\n    .style(\"opacity\", .5)\n    .on(\"mouseover\", centerBounds)\n    .on(\"mouseout\", clearCenterBounds)\n\n    d3.select(\"svg\").selectAll(\"circle\").data(cities)\n    .enter()\n    .append(\"circle\")\n    .attr(\"class\", \"cities\")\n    .style(\"fill\", \"black\")\n    .style(\"stroke\", \"white\")\n    .style(\"stroke-width\", 1)\n    .attr(\"r\", 3)\n    .attr(\"cx\", function(d) {return projection([d.y,d.x])[0]})\n    .attr(\"cy\", function(d) {return projection([d.y,d.x])[1]})\n    \n    function centerBounds(d,i) {\n      thisBounds = geoPath.bounds(d);\n      thisCenter = geoPath.centroid(d);\n      d3.select(\"svg\")\n      .append(\"rect\")\n      .attr(\"class\", \"bbox\")\n      .attr(\"x\", thisBounds[0][0])\n      .attr(\"y\", thisBounds[0][1])\n      .attr(\"width\", thisBounds[1][0] - thisBounds[0][0])\n      .attr(\"height\", thisBounds[1][1] - thisBounds[0][1])\n      .style(\"fill\", \"none\")\n      .style(\"stroke-dasharray\", \"5 5\")\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", 2)\n      .style(\"pointer-events\", \"none\")\n      \n      d3.select(\"svg\")\n      .append(\"circle\")\n      .attr(\"class\", \"centroid\")\n      .attr(\"r\", 5)\n      .attr(\"cx\", thisCenter[0]).attr(\"cy\", thisCenter[1])\n      .style(\"pointer-events\", \"none\")\n    }\n    function clearCenterBounds() {\n      d3.selectAll(\"circle.centroid\").remove();\n      d3.selectAll(\"rect.bbox\").remove();\n    }\n  }\n  \n</script>", "description": "Ch. 7, Fig. 10 - D3.js in Action", "created_at": "2015-11-08T20:37:11Z", "updated_at": "2015-11-08T20:37:16Z", "api": ["d3.geo.mollweide", "d3.geo.path", "d3.behavior.zoom", "d3.select", "d3.selectAll", "d3.extent", "d3.scale.quantize", "d3.geo.graticule"], "readme": "This is the code for Chapter 7, Figure 10 from [D3.js in Action](http://manning.com/meeks/) showing **d3.behavior.zoom()** paired with d3.geo as well as examples of how to create manual zoom buttons.\n\nNote that this demonstrates **\"projection zoom\"** which adjusts the scale, translate (and sometimes center or rotate) of the map's projection and then redraws the map with the new projection settings. This is in contrast with **\"transform zoom\"** which takes the zoom behavior values and applies them (translate and/or scale) to the transform attribute of SVG elements.", "uid": "newsummit_29debc588cbc1a1320c9"}, {"code": "<script>\n    queue()\n    .defer(d3.json, \"world.topojson\")\n    .defer(d3.csv, \"cities.csv\")\n    .await(function(error, file1, file2) { createMap(file1, file2); });\n    \n  function createMap(countries1, cities) {\n    var countries = topojson.feature(countries1, countries1.objects.countries);\n    var neighbors = topojson.neighbors(countries1.objects.countries.geometries);\n\n    width = 500;\n    height = 500;\n    projection = d3.geo.mollweide()\n    .scale(120)\n    .translate([width / 2, height / 2])\n    .center([20,0])\n    geoPath = d3.geo.path().projection(projection);\n    \n    featureSize = d3.extent(countries.features, function(d) {return geoPath.area(d)});\n    countryColor = d3.scale.quantize().domain(featureSize).range(colorbrewer.Reds[7]);\n\n    var graticule = d3.geo.graticule();\n    \n    d3.select(\"svg\").append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule line\")\n    .attr(\"d\", geoPath)\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", \"lightgray\")\n    .style(\"stroke-width\", \"1px\");\n\n    d3.select(\"svg\").append(\"path\")\n    .datum(graticule.outline)\n    .attr(\"class\", \"graticule outline\")\n    .attr(\"d\", geoPath)\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"1px\");\n\n    \n    d3.select(\"svg\").selectAll(\"path.countries\").data(countries.features)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", geoPath)\n    .attr(\"class\", \"countries\")\n    .style(\"fill\", function(d) {return countryColor(geoPath.area(d))})\n    .style(\"stroke-width\", 1)\n    .style(\"stroke\", \"black\")\n    .style(\"opacity\", .5)\n    .on(\"mouseover\", centerBounds)\n    .on(\"mouseout\", clearCenterBounds)\n    \n    d3.select(\"svg\").selectAll(\"circle\").data(cities)\n    .enter()\n    .append(\"circle\")\n    .style(\"fill\", \"black\")\n    .style(\"stroke\", \"white\")\n    .style(\"stroke-width\", 1)\n    .attr(\"r\", 3)\n    .attr(\"cx\", function(d) {return projection([d.y,d.x])[0]})\n    .attr(\"cy\", function(d) {return projection([d.y,d.x])[1]})\n    \n    function centerBounds(d,i) {\n      d3.select(this).style(\"fill\", \"blue\")\n      d3.selectAll(\"path.countries\").filter(function (p,q) {return neighbors[i].indexOf(q) > -1}).style(\"fill\", \"green\")\n    }\n    function clearCenterBounds() {\n      d3.selectAll(\"path.countries\")\n      .style(\"fill\", function(d) {return countryColor(geoPath.area(d))})\n      }\n  }\n  \n</script>", "description": "Ch. 7, Fig. 19 - D3.js in Action", "created_at": "2015-11-08T18:33:06Z", "updated_at": "2015-11-08T18:33:07Z", "api": ["d3.geo.mollweide", "d3.geo.path", "d3.extent", "d3.scale.quantize", "d3.geo.graticule", "d3.select", "d3.selectAll"], "readme": "This is the code for Chapter 7, Figure 19 from [D3.js in Action](http://manning.com/meeks/) which shows how to use **topojson.neighbors()**.", "uid": "scottkildall_b1196a441042d14a655d"}, {"code": "<script>\n\nvar width = 960,\n    height = 136,\n    cellSize = 17; // cell size\n\nvar percent = d3.format(\".1%\"),\n    format = d3.time.format(\"%Y-%m-%d\");\n\nvar color = d3.scale.quantize()\n    .domain([-.05, .05])\n    .range(d3.range(11).map(function(d) { return \"q\" + d + \"-11\"; }));\n\nvar svg = d3.select(\"body\").selectAll(\"svg\")\n    .data(d3.range(1990, 2011))\n  .enter().append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .attr(\"class\", \"RdYlGn\")\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + ((width - cellSize * 53) / 2) + \",\" + (height - cellSize * 7 - 1) + \")\");\n\nsvg.append(\"text\")\n    .attr(\"transform\", \"translate(-6,\" + cellSize * 3.5 + \")rotate(-90)\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) { return d; });\n\nvar rect = svg.selectAll(\".day\")\n    .data(function(d) { return d3.time.days(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"rect\")\n    .attr(\"class\", \"day\")\n    .attr(\"width\", cellSize)\n    .attr(\"height\", cellSize)\n    .attr(\"x\", function(d) { return d3.time.weekOfYear(d) * cellSize; })\n    .attr(\"y\", function(d) { return d.getDay() * cellSize; })\n    .datum(format);\n\nrect.append(\"title\")\n    .text(function(d) { return d; });\n\nsvg.selectAll(\".month\")\n    .data(function(d) { return d3.time.months(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"path\")\n    .attr(\"class\", \"month\")\n    .attr(\"d\", monthPath);\n\nd3.csv(\"dji.csv\", function(error, csv) {\n  if (error) throw error;\n\n  var data = d3.nest()\n    .key(function(d) { return d.Date; })\n    .rollup(function(d) { return (d[0].Close - d[0].Open) / d[0].Open; })\n    .map(csv);\n\n  rect.filter(function(d) { return d in data; })\n      .attr(\"class\", function(d) { return \"day \" + color(data[d]); })\n    .select(\"title\")\n      .text(function(d) { return d + \": \" + percent(data[d]); });\n});\n\nfunction monthPath(t0) {\n  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),\n      d0 = t0.getDay(), w0 = d3.time.weekOfYear(t0),\n      d1 = t1.getDay(), w1 = d3.time.weekOfYear(t1);\n  return \"M\" + (w0 + 1) * cellSize + \",\" + d0 * cellSize\n      + \"H\" + w0 * cellSize + \"V\" + 7 * cellSize\n      + \"H\" + w1 * cellSize + \"V\" + (d1 + 1) * cellSize\n      + \"H\" + (w1 + 1) * cellSize + \"V\" + 0\n      + \"H\" + (w0 + 1) * cellSize + \"Z\";\n}\n\nd3.select(self.frameElement).style(\"height\", \"2910px\");\n\n</script>", "description": "Calendar View", "created_at": "2015-11-08T16:44:05Z", "updated_at": "2015-11-08T16:44:05Z", "api": ["d3.format", "d3.time.format", "d3.scale.quantize", "d3.range", "d3.select", "d3.time.days", "d3.time.weekOfYear", "d3.time.months", "d3.csv", "d3.nest"], "readme": "This example demonstrates loading of CSV data, which is then quantized into a diverging color scale. The values are visualized as colored cells per day. Days are arranged into columns by week, then grouped by month and years. Colors by [Cynthia Brewer](http://colorbrewer.org/). Layout inspired by [Rick Wicklin and Robert Allison](http://stat-computing.org/dataexpo/2009/posters/). Dow Jones historical data copyright [Yahoo! Finance](http://finance.yahoo.com/) or independent data provider; fair use for educational purposes.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063318'>Calendar View</a>", "uid": "wcjohnson11_e9973aa49e3876a538b4"}, {"code": "<script>\n\n\nfunction makeViz() {\n\n  d3.json(\"solarsystem.json\", function(data) {drawOrbit(data)});\n\n}\n\nfunction drawOrbit(_data) {\n\n  orbitScale = d3.scale.linear().domain([1, 3]).range([3.8, 1.5]).clamp(true);\n  radiusScale = d3.scale.linear().domain([210.64,2500,10000,71492.68]).range([2,4,8,16]);\n\n  planetColors = {Mercury: \"gray\", Venus: \"#d6bb87\", Earth: \"#677188\", Mars: \"#7c5541\", Jupiter: \"#a36a3e\", Saturn: \"#e9ba85\", Uranus: \"#73cbf0\", Neptune: \"#6383d1\"}\n\n\n  orbit = d3.layout.orbit().size([500,500])\n  .children(function(d) {return d.values})\n  .revolution(function(d) {return 1 / d.orbital_period})\n  .orbitSize(function(d) {return orbitScale(d.depth)})\n  .speed(1)\n  .mode(\"atomic\")\n  .nodes(_data);\n\n  d3.select(\"svg\")\n.append(\"g\")\n.attr(\"class\", \"viz\")\n.attr(\"transform\", \"translate(50,50)\")\n  .selectAll(\"g.node\").data(orbit.nodes())\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"})\n  .on(\"mouseover\", nodeOver)\n  .on(\"mouseout\", nodeOut)\n\n  d3.selectAll(\"g.node\")\n  .append(\"circle\")\n  .attr(\"r\", function(d) {return d.radius ? radiusScale(d.radius) : 20})\n  .style(\"fill\", function(d) {return d.depth == 0 ? \"#FFCC00\" : d.depth == 1 ? planetColors[d.key] : \"lightgray\"});\n\n  d3.selectAll(\"g.node\").filter(function(d) {return d.depth == 1})\n  .append(\"text\")\n  .text(function(d) {return d.depth == 0 ? \"Sun\" : d.key})\n  .attr(\"y\", 20)\n  .style(\"text-anchor\", \"middle\")\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n  .enter()\n  .insert(\"circle\", \"g\")\n  .attr(\"class\", \"ring\")\n  .attr(\"r\", function(d) {return d.r})\n  .attr(\"cx\", function(d) {return d.x})\n  .attr(\"cy\", function(d) {return d.y})\n\n  d3.select(\"#buttons\").append(\"button\").html(\"solar\").on(\"click\", function() {newMode(\"solar\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"flat\").on(\"click\", function() {newMode(\"flat\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"atomic\").on(\"click\", function() {newMode(\"atomic\")})\n  d3.select(\"#buttons\").append(\"button\").html(\"custom\").on(\"click\", function() {newMode([4,4])})\n\n  orbit.on(\"tick\", function() {\n    d3.selectAll(\"g.node\")\n      .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"});\n\n    d3.selectAll(\"circle.ring\")\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n  });\n\n  orbit.start();\n\n  function newMode(_mode) {\n    orbit.mode(_mode)\n    .nodes(_data);\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n    .exit()\n    .transition()\n    .duration(500)\n    .style(\"stroke-opacity\", 0)\n    .style(\"stroke-width\", 3)\n    .remove();\n\n    d3.select(\"g.viz\")\n    .selectAll(\"circle.ring\")\n    .data(orbit.orbitalRings())\n    .enter()\n    .insert(\"circle\", \"g\")\n    .attr(\"class\", \"ring\");\n    \n    d3.selectAll(\"circle.ring\")\n    .attr(\"r\", function(d) {return d.r})\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n\n  }\n\n  function nodeOver(d) {\n    orbit.stop();\n\n    if (d.depth == 2) {\n      d3.select(this).append(\"text\").text(d.label || d.key).style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"moon\");\n    }\n    d3.select(this).select(\"circle\").style(\"stroke\", \"black\").style(\"stroke-width\", 3);\n  }\n\n  function nodeOut() {\n    orbit.start();\n      d3.selectAll(\"text.moon\").remove();\n    d3.selectAll(\"g.node > circle\").style(\"stroke\", \"none\").style(\"stroke-width\", 0);    \n  }\n\n\n}\n\n</script>\n<body onload=\"makeViz()\">\n<div id=\"viz\"><svg></svg><div id=\"buttons\"></div></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"d3.layout.orbit.js\" charset=\"utf-8\" type=\"text/javascript\"></script>", "description": "d3.layout.orbit modes", "created_at": "2015-11-08T15:01:21Z", "updated_at": "2015-11-08T15:01:21Z", "api": ["d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll", "d3.dispatch", "d3.rebind", "d3.layout.pie"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) that shows the different modes:\n\n**\"flat\"** is the default, demonstrated in earlier [examples that use flare.json](http://bl.ocks.org/emeeks/298e07ea67a640b5d9f4).\n\n**\"solar\"** arranges each satellite in its own ring, equally divided from the set size of the layout.\n\n**\"atomic\"** places 2 satellites in orbit in the first ring and 8 in every ring after that.\n\n**\"custom\"** is achieved by passing an array of integers. Each integer sets the number of satellites in that ring, with the final value used to set the number of satellites in all remaining rings. Under the hood, \"solar\" could be achieved by passing [1], \"atomic\" could be achieved by passing [2,8] and \"flat\" could be achieved by passing [9999].", "uid": "wcjohnson11_7ebb3f3a28e403745856"}, {"code": "<script>\n\n  // created by http://jfire.io/animations/2015-03-09/, adapted for demo\nvar width = 500,\n    height = 500,\n    n = 20;\n    \nvar margin = {top: 20, right: 10, bottom: 20, left: 10};\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height)\n\nvar g = svg.selectAll(\".groups\")\n    .data(d3.range(n))\n    .enter().append(\"g\").attr(\"class\", \"group\");\n\ng.append(\"path\")\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"#d1d1d1\")\n    .attr(\"stroke-width\", 3)\n    .attr(\"d\", \"M-150,0L150,0\");\n\ng.selectAll(\"ellipse\")\n    .data([-150, 150])\n    .enter().append(\"ellipse\")\n    .attr(\"cx\", function(d) { return d; })\n    .attr(\"cy\", 0)\n    .attr(\"rx\", 10)\n    .attr(\"ry\", 7)\n    .attr(\"fill\", \"#bbb\");\n\nd3.timer(function(t) {\n    g.attr(\"transform\", function(d) {return \"translate(\" + [width / 2, (d + 1) * height / (n + 1)] + \")scale(\" + (Math.sin(d / 2 - t / 1000) + 1) / 2 + \",\"+ 0.1*d+\")\";})\n    });\n\n  </script>", "description": "Stripped adaptation of Jfire.io animation, for teaching purposes", "created_at": "2015-11-07T23:46:33Z", "updated_at": "2015-11-07T23:47:23Z", "api": ["d3.select", "d3.range", "d3.timer"], "readme": "\n\nforked from <a href='http://bl.ocks.org/zanarmstrong/'>zanarmstrong</a>'s block: <a href='http://bl.ocks.org/zanarmstrong/4b6ab7914183dbf7a16f'>Adaption of Jfire.io animation, for teaching purposes</a>\n\nforked from <a href='http://bl.ocks.org/zanarmstrong/'>zanarmstrong</a>'s block: <a href='http://bl.ocks.org/zanarmstrong/3b5f766647e15e23e5b8'>Stripped adaptation of Jfire.io animation, for teaching purposes</a>", "uid": "blehman_f528a8bc2a05ff9dcd9c"}, {"code": "<script>function parseNewick(a){for(var e=[],r={},s=a.split(/\\s*(;|\\(|\\)|,|:)\\s*/),t=0;t<s.length;t++){var n=s[t];switch(n){case\"(\":var c={};r.branchset=[c],e.push(r),r=c;break;case\",\":var c={};e[e.length-1].branchset.push(c),r=c;break;case\")\":r=e.pop();break;case\":\":break;default:var h=s[t-1];\")\"==h||\"(\"==h||\",\"==h?r.name=n:\":\"==h&&(r.length=parseFloat(n))}}return r}</script>\n\n<!-- Copyright 2015 Mike Bostock http://d3js.org -->\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar outerRadius = 960 / 2,\n    innerRadius = outerRadius - 170;\n\nvar color = d3.scale.category10()\n    .domain([\"Bacteria\", \"Eukaryota\", \"Archaea\"]);\n\nvar cluster = d3.layout.cluster()\n    .size([360, innerRadius])\n    .children(function(d) { return d.branchset; })\n    .value(function(d) { return 1; })\n    .sort(function(a, b) { return (a.value - b.value) || d3.ascending(a.length, b.length); })\n    .separation(function(a, b) { return 1; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", outerRadius * 2)\n    .attr(\"height\", outerRadius * 2);\n\nvar legend = svg.append(\"g\")\n    .attr(\"class\", \"legend\")\n  .selectAll(\"g\")\n    .data(color.domain())\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d, i) { return \"translate(\" + (outerRadius * 2 - 10) + \",\" + (i * 20 + 10) + \")\"; });\n\nlegend.append(\"rect\")\n    .attr(\"x\", -18)\n    .attr(\"width\", 18)\n    .attr(\"height\", 18)\n    .style(\"fill\", color);\n\nlegend.append(\"text\")\n    .attr(\"x\", -24)\n    .attr(\"y\", 9)\n    .attr(\"dy\", \".35em\")\n    .style(\"text-anchor\", \"end\")\n    .text(function(d) { return d; });\n\nvar chart = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + outerRadius + \",\" + outerRadius + \")\");\n\nd3.text(\"life.txt\", function(error, life) {\n  if (error) throw error;\n\n  var root = parseNewick(life),\n      nodes = cluster.nodes(root),\n      links = cluster.links(nodes),\n      input = d3.select(\"#show-length input\").on(\"change\", changed),\n      timeout = setTimeout(function() { input.property(\"checked\", true).each(changed); }, 2000);\n\n  setRadius(root, root.length = 0, innerRadius / maxLength(root));\n  setColor(root);\n\n  var linkExtension = chart.append(\"g\")\n      .attr(\"class\", \"link-extensions\")\n    .selectAll(\"path\")\n      .data(links.filter(function(d) { return !d.target.children; }))\n    .enter().append(\"path\")\n      .each(function(d) { d.target.linkExtensionNode = this; })\n      .attr(\"d\", function(d) { return step(d.target.x, d.target.y, d.target.x, innerRadius); });\n\n  var link = chart.append(\"g\")\n      .attr(\"class\", \"links\")\n    .selectAll(\"path\")\n      .data(links)\n    .enter().append(\"path\")\n      .each(function(d) { d.target.linkNode = this; })\n      .attr(\"d\", function(d) { return step(d.source.x, d.source.y, d.target.x, d.target.y) })\n      .style(\"stroke\", function(d) { return d.target.color; });\n\n  chart.append(\"g\")\n      .attr(\"class\", \"labels\")\n    .selectAll(\"text\")\n      .data(nodes.filter(function(d) { return !d.children; }))\n    .enter().append(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + (innerRadius + 4) + \",0)\" + (d.x < 180 ? \"\" : \"rotate(180)\"); })\n      .style(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .text(function(d) { return d.name.replace(/_/g, \" \"); })\n      .on(\"mouseover\", mouseovered(true))\n      .on(\"mouseout\", mouseovered(false));\n\n  function changed() {\n    clearTimeout(timeout);\n    var checked = this.checked;\n    d3.transition().duration(750).each(function() {\n      linkExtension.transition().attr(\"d\", function(d) { return step(d.target.x, checked ? d.target.radius : d.target.y, d.target.x, innerRadius); });\n      link.transition().attr(\"d\", function(d) { return step(d.source.x, checked ? d.source.radius : d.source.y, d.target.x, checked ? d.target.radius : d.target.y) });\n    });\n  }\n\n  function mouseovered(active) {\n    return function(d) {\n      d3.select(this).classed(\"label--active\", active);\n      d3.select(d.linkExtensionNode).classed(\"link-extension--active\", active).each(moveToFront);\n      do d3.select(d.linkNode).classed(\"link--active\", active).each(moveToFront); while (d = d.parent);\n    };\n  }\n\n  function moveToFront() {\n    this.parentNode.appendChild(this);\n  }\n});\n\n// Compute the maximum cumulative length of any node in the tree.\nfunction maxLength(d) {\n  return d.length + (d.children ? d3.max(d.children, maxLength) : 0);\n}\n\n// Set the radius of each node by recursively summing and scaling the distance from the root.\nfunction setRadius(d, y0, k) {\n  d.radius = (y0 += d.length) * k;\n  if (d.children) d.children.forEach(function(d) { setRadius(d, y0, k); });\n}\n\n// Set the color of each node by recursively inheriting.\nfunction setColor(d) {\n  d.color = color.domain().indexOf(d.name) >= 0 ? color(d.name) : d.parent ? d.parent.color : null;\n  if (d.children) d.children.forEach(setColor);\n}\n\n// Like d3.svg.diagonal.radial, but with square corners.\nfunction step(startAngle, startRadius, endAngle, endRadius) {\n  var c0 = Math.cos(startAngle = (startAngle - 90) / 180 * Math.PI),\n      s0 = Math.sin(startAngle),\n      c1 = Math.cos(endAngle = (endAngle - 90) / 180 * Math.PI),\n      s1 = Math.sin(endAngle);\n  return \"M\" + startRadius * c0 + \",\" + startRadius * s0\n      + (endAngle === startAngle ? \"\" : \"A\" + startRadius + \",\" + startRadius + \" 0 0 \" + (endAngle > startAngle ? 1 : 0) + \" \" + startRadius * c1 + \",\" + startRadius * s1)\n      + \"L\" + endRadius * c1 + \",\" + endRadius * s1;\n}\n\nd3.select(self.frameElement).style(\"height\", outerRadius * 2 + \"px\");\n\n</script>", "description": "Tree of Life", "created_at": "2015-11-07T20:14:09Z", "updated_at": "2015-11-07T20:14:10Z", "api": ["d3.scale.category10", "d3.layout.cluster", "d3.ascending", "d3.select", "d3.text", "d3.transition", "d3.max"], "readme": "A re-implementation of Jason Davies\u2019 [Phylogenetic Tree of Life](https://www.jasondavies.com/tree-of-life/), with faded gray lines to connect the leaf nodes of the tree to their corresponding labels inspired by [a figure from *Nature*](http://www.nature.com/nature/journal/v462/n7276/fig_tab/nature08656_F1.html).\n\nThis implementation modifies the depth of interior nodes in a [cluster layout](https://github.com/mbostock/d3/wiki/Cluster-Layout) to show branch lengths. Toggle the checkbox in the top-left corner to show or hide branch lengths, and mouseover a label to highlight its path to the root.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/c034d66572fd6bd6815a'>Tree of Life</a>", "uid": "wcjohnson11_e956b7a2c9fcf1a86aef"}, {"code": "<script>\n\nd3.select(\"svg\").append(\"g\").attr(\"class\", \"partition-legend\")\n  .attr(\"transform\", \"translate(500,0)\");\n\n  var chartG = d3.select(\"svg\")\n    .append(\"g\")\n    .attr(\"class\", \"pack\")\n    .attr(\"transform\", \"translate(0,0)\");\n\nd3.json(\"students.json\", cleanStudents)\n\nfunction cleanStudents(data) {\n  var students = data.students;\n\n  var packableStudents = packStudents(students);\n\n  circlePack(packableStudents, \"values\", \"key\");\n\n  createPartitionLegend(\"ethnicity\", students, 100, \"values\", \"key\");\n  createPartitionLegend(\"gender\", students, 200, \"values\", \"key\");\n\n}\n\nfunction gradeColor(d) {\n    var colors = d3.scale.ordinal().domain([\"A\",\"B\",\"C\",\"D\",\"F\"]).range([\"#a50f15\", \"#de2d26\", \"#fb6a4a\", \"#fcae91\", \"#fee5d9\"]);\n    return colors(d);\n}\n\nfunction genderColor(d) {\n  if (d === \"Male\") {\n    return \"lightblue\";\n  }\n  return \"pink\";\n}\n\nfunction trendColor(d) {\n    if (d === \"growth\") {\n    return \"green\";\n  }\n  return \"red\";\n}\n\nfunction ethnicityColor(d) {\n    var eth = [\"Non-Hispanic White\",\"Non-Hispanic Black or African American\",\"Asian\",\"American Indian or Alaska Native\",\"Non-Hispanic Native Hawaiian or other Pacific Islander\",\"Non-Hispanic some other race\",\"Non-Hispanic two or more races\",\"Hispanic or Latino\"];\n\n    var colors = d3.scale.ordinal().domain(eth).range([\"#d6cf7f\",\"#d6604d\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#b0a7a9\"])\n    return colors(d);\n}\n\nfunction createPartitionLegend(partitionOn, data, offset, childAccessor, label) {\n\n  colorFunctions = {\"grade\": gradeColor, \"ethnicity\": ethnicityColor, \"gender\": genderColor, \"trend\": trendColor};\n  colorFunction = colorFunctions[partitionOn];\n\n  var legendNest = d3.nest()\n    .key(function (d) {\n      return d[partitionOn];\n    })\n    .entries(data);\n\n    legendNest = {id: \"root\", key: \"root\", values: legendNest};\n\n  var partition = d3.layout.partition();\n\n  var partitionWidth = 500;\n  var partitionHeight = 200;\n\n  partition\n  .children(function(d) {return d[childAccessor]})\n  .value(function(d) {return 1})\n\n  var pLegend = d3\n    .select(\"g.partition-legend\")\n    .append(\"g\")\n    .attr(\"transform\", \"translate(20,\" + offset + \")\")\n\n  pLegend\n  .selectAll(\"rect\")\n  .data(partition(legendNest).filter(function(d) {return d.depth === 1}))\n  .enter()\n  .append(\"rect\")\n  .attr(\"x\", function (d) {return d.x * partitionWidth})\n  .attr(\"y\", function (d) {return d.y * partitionHeight})\n  .attr(\"width\", function (d) {return d.dx * partitionWidth})\n  .attr(\"height\", function (d) {return d.dy * partitionHeight})\n  .style(\"fill\", function (d) {return colorFunction(d.key)})\n\n  pLegend.selectAll(\"text\")\n  .data(partition(legendNest).filter(function(d) {return d.depth === 1}))\n  .enter()\n  .append(\"text\")\n  .attr(\"x\", function (d) {return d.x * partitionWidth})\n  .attr(\"y\", function (d) {return (d.y * partitionHeight) + 15})\n  .text(function (d) {return d[label] ? d[label].substr(0, parseInt((d.dx * partitionWidth) / 8)) : \"\"})\n\n}\n\nfunction packStudents(data) {\n\n    nestedData = d3.nest()\n    .key(function (d) {\n      return d.grade;\n    })\n    .key(function (d) {\n      return d.ethnicity;\n    })\n    .key(function (d) {\n      return d.gender\n    })\n    .entries(data);\n\n    nestedData.forEach(function (d) {\n      d.leafColor = gradeColor(d.key);\n      d.values.forEach(function (d) {\n        d.leafColor = ethnicityColor(d.key);\n          d.values.forEach(function (d) {\n            d.leafColor = genderColor(d.key);\n        })\n\n      })\n    })\n\n  return packableData = {id: \"root\", key: \"root\", values: nestedData}\n}\n\nfunction circlePack(data, childAccessor, label) {\n  packChart = d3.layout.pack();\n\n  //padding is only for siblings\n\n  packChart.size([500,500])\n  .children(function(d) {return d[childAccessor]})\n//  .padding(1)\n  .value(function (d) {return 1})\n\n  var depthScale = d3.scale.linear().domain([0,3]).range([4,0])\n\n  var chartG = d3.select(\"g.pack\");\n\n  chartG\n  .selectAll(\"circle\")\n  .data(packChart(data).filter(function (d) {return (d.depth !== 0 && d.depth !== 1) || !d[childAccessor]}))\n  .exit()\n  .remove();\n\n  chartG\n  .selectAll(\"circle\")\n  .data(packChart(data).filter(function (d) {return (d.depth !== 0 && d.depth !== 1) || !d[childAccessor]}))\n  .enter()\n  .append(\"circle\")\n  .on(\"dblclick\", packZoom);\n\n  chartG\n  .selectAll(\"circle\")\n  .transition()\n  .duration(1000)\n  .attr(\"cx\", function (d) {return d.x})\n  .attr(\"cy\", function (d) {return d.y})\n  .attr(\"r\", paddedR)\n  .style(\"fill\", function (d) {return d.leafColor ? d.leafColor : \"white\"})\n  .style(\"fill-opacity\", function (d) {return d.leafColor ? 1 : .25})\n  .style(\"stroke\", function (d) {return d.leafColor || d.depth === 0 ? \"none\" : \"black\"});\n\n  chartG\n  .selectAll(\"text\")\n  .remove();\n\n  chartG\n  .selectAll(\"text\")\n  .data(packChart(data).filter(function (d) {return d.depth === 1}))\n  .enter()\n  .append(\"text\")\n  .attr(\"x\", function (d) {return d.x})\n  .attr(\"y\", function (d) {return d.y})\n  .text(function (d) {return d[label] ? d[label] : d.key})\n  .style(\"font-size\", function (d) {return d.r})\n  .style(\"text-anchor\", \"middle\")\n  .style(\"fill-opacity\", .55)\n\n\n  function paddedR(d) {\n    return Math.max(2, d.r - (Math.max(0, d.depth - 1)))\n  }\n\n  function packZoom(d) {\n    circlePack(d, \"values\", \"key\");\n  }\n\n}\n\n</script>", "description": "Circle Pack", "created_at": "2015-11-07T19:33:41Z", "updated_at": "2015-11-07T19:33:42Z", "api": ["d3.select", "d3.json", "d3.scale.ordinal", "d3.nest", "d3.layout.partition", "d3.layout.pack", "d3.scale.linear"], "readme": "A circle pack with a variety of styles based on depth.\n\nforked from <a href='http://bl.ocks.org/emeeks/'>emeeks</a>'s block: <a href='http://bl.ocks.org/emeeks/05f44e46124cefa0070c'>Circle Pack</a>", "uid": "Beaupe_5c4c88bc4eeee47fc607"}, {"code": "<script>\n\n//These attributes could be derived from the data\nattributes = [\"carat\",\"depth\",\"table\",\"price\",\"x\",\"y\",\"z\"];\nattributeMatrix = [];\n\nattributes.forEach(function (a, x) {\n  attributes.forEach(function (b, y) {\n    \n    //create an n-by-n matrix based on pairs of attributes\n    attributeMatrix.push({a: a, b: b, x: x, y: y})\n  })\n})\n\ncolors = d3.scale.ordinal().range([\"#827abf\", \"#f62150\", \"#6f89b6\", \"#f5e0b7\", \"#5b1e37\", \"#b9e3c5\"]);\n\n  d3.select(\"body\").append(\"svg\").attr(\"height\", 1140).attr(\"width\", 1140)\n\nd3.csv(\"diamonds.csv\", small_scatterplots);\n\nfunction small_scatterplots(data) {\n\n  //d3.csv pulls in data as strings so they need to be formatted as numbers\n  data.forEach(function (d) {\n    attributes.forEach(function (att) {\n      d[att] = parseFloat(d[att])\n    })\n  })\n\n  //create scales dynamically for each attribute's extent\n\n  scale = {};\n  attributes.forEach(function (att) {\n    scale[att] = d3.scale.linear();\n    attExtent = d3.extent(data, function (d) {return d[att]});\n    scale[att].domain(attExtent).range([5,95]);\n  })\n\n  //bind the matrix array to a grid of g elements\n  d3.select(\"svg\")\n  .selectAll(\"g\")\n  .data(attributeMatrix)\n  .enter()\n  .append(\"g\")\n  .attr(\"transform\", function (d) {return \"translate(\" + ((d.x * 120) + 20) + \",\" + ((d.y * 120) + 20) + \")\" });\n\n  d3.selectAll(\"g\")\n  .each(function (matrix, i) {\n    //index i is only used for coloring\n\n    //background/border\n    d3.select(this).append(\"rect\").style(\"fill\", \"white\").style(\"stroke\", \"black\").style(\"stroke-width\", 1)\n    .attr(\"height\", 100)\n    .attr(\"width\", 100);\n\n    //label\n    d3.select(this).append(\"text\")\n    .attr(\"x\", 50)\n    .style(\"text-anchor\", \"middle\")\n    .attr(\"y\", -5)\n    .text(matrix.a + \" - \" + matrix.b);\n\n    //scatterplot points\n    d3.select(this).selectAll(\"circle\")\n    .data(data)\n    .enter()\n    .append(\"circle\")\n    .attr(\"r\", 2)\n    .style(\"fill\", colors(i))\n    .attr(\"cx\", function (d) {return scale[matrix.a](d[matrix.a])})\n    .attr(\"cy\", function (d) {return 95 - scale[matrix.b](d[matrix.b])})\n  })\n\n\n}\n\n</script>", "description": "Simple Correlation Matrix - Labels Above Cells", "created_at": "2015-11-07T18:45:46Z", "updated_at": "2015-11-07T18:46:00Z", "api": ["d3.scale.ordinal", "d3.select", "d3.csv", "d3.scale.linear", "d3.extent", "d3.selectAll"], "readme": "A very simple example of how to create a correlation matrix of scatterplots with dynamic scales.", "uid": "jalapic_e4e2914addd34a2d689d"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart - no axis", "created_at": "2015-11-07T18:41:23Z", "updated_at": "2015-11-07T18:43:03Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "uid": "zanarmstrong_dc73d339a0f921d638ac"}, {"code": "<script>\n\n//These attributes could be derived from the data\nattributes = [\"carat\",\"depth\",\"table\",\"price\",\"x\",\"y\",\"z\"];\nattributeMatrix = [];\n\nattributes.forEach(function (a, x) {\n  attributes.forEach(function (b, y) {\n    //create an n-by-n matrix based on pairs of attributes\n    attributeMatrix.push({a: a, b: b, x: x, y: y})\n  })\n})\n\ncolors = d3.scale.ordinal().range([\"#827abf\", \"#f62150\", \"#6f89b6\", \"#f5e0b7\", \"#5b1e37\", \"#b9e3c5\"]);\n\n  d3.select(\"body\").append(\"svg\").attr(\"height\", 1140).attr(\"width\", 1140)\n\nd3.csv(\"diamonds.csv\", small_scatterplots);\n\nfunction small_scatterplots(data) {\n\n  console.log(\"data\", data);\n\n  //d3.csv pulls in data as strings so they need to be formatted as numbers\n  data.forEach(function (d) {\n    attributes.forEach(function (att) {\n      d[att] = parseFloat(d[att])\n    })\n  })\n\n  //create scales dynamically for each attribute's extent\n\n  scale = {};\n  attributes.forEach(function (att) {\n    scale[att] = d3.scale.linear();\n    attExtent = d3.extent(data, function (d) {return d[att]});\n    scale[att].domain(attExtent).range([5,95]);\n  })\n\n  //bind the matrix array to a grid of g elements\n  d3.select(\"svg\")\n  .selectAll(\"g\")\n  .data(attributeMatrix)\n  .enter()\n  .append(\"g\")\n  .attr(\"transform\", function (d) {return \"translate(\" + ((d.x * 120) + 20) + \",\" + ((d.y * 120) + 20) + \")\" });\n\n  d3.selectAll(\"g\")\n  .each(function (matrix, i) {\n    //index i is only used for coloring\n\n    //background/border\n    d3.select(this).append(\"rect\").style(\"fill\", \"white\").style(\"stroke\", \"black\").style(\"stroke-width\", 1)\n    .attr(\"height\", 100)\n    .attr(\"width\", 100);\n\n    //label\n    d3.select(this).append(\"text\")\n    .attr(\"x\", 50)\n    .style(\"text-anchor\", \"middle\")\n    .attr(\"y\", -5)\n    .text(matrix.a + \" - \" + matrix.b);\n\n    //scatterplot points\n    d3.select(this).selectAll(\"circle\")\n    .data(data)\n    .enter()\n    .append(\"circle\")\n    .attr(\"r\", 2)\n    .style(\"fill\", colors(i))\n    .attr(\"cx\", function (d) {return scale[matrix.a](d[matrix.a])})\n    .attr(\"cy\", function (d) {return 100 - scale[matrix.b](d[matrix.b])})\n  })\n\n\n}\n\n</script>", "description": "Correlation Matrix I", "created_at": "2015-11-07T18:36:34Z", "updated_at": "2016-06-14T22:43:32Z", "api": ["d3.scale.ordinal", "d3.select", "d3.csv", "d3.scale.linear", "d3.extent", "d3.selectAll"], "readme": "A very simple example of how to create a correlation matrix of scatterplots with dynamic scales.  This iteration adds 20px spacing between matrix cells and places the cell titles above the cells.\n\nForked from the [Simple Correlation Matrix](http://bl.ocks.org/emeeks/671c0e7adfb1ce7060b8) bl.ock by [emeeks](http://bl.ocks.org/emeeks)", "uid": "micahstubbs_3ef5a223bdb760a228b4"}, {"code": "<script>\n\n  // created by http://jfire.io/animations/2015-03-09/, adapted for demo\nvar width = 500,\n    height = 500,\n    n = 20;\n    \nvar margin = {top: 20, right: 10, bottom: 20, left: 10};\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height)\n\nvar g = svg.selectAll(\".groups\")\n    .data(d3.range(n))\n    .enter().append(\"g\").attr(\"class\", \"group\");\n\ng.append(\"path\")\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"#d1d1d1\")\n    .attr(\"stroke-width\", 3)\n    .attr(\"d\", \"M-150,0L150,0\");\n\ng.selectAll(\"ellipse\")\n    .data([-150, 150])\n    .enter().append(\"ellipse\")\n    .attr(\"cx\", function(d) { return d; })\n    .attr(\"cy\", 0)\n    .attr(\"rx\", 10)\n    .attr(\"ry\", 7)\n    .attr(\"fill\", \"#bbb\");\n\nd3.timer(function(t) {\n    g.attr(\"transform\", function(d) {return \"translate(\" + [width / 2, (d + 1) * height / (n + 1)] + \")scale(\" + (Math.sin(d / 2 - t / 1000) + 1) / 2 + \",1)\";})\n    });\n\n  </script>", "description": "Adaption of Jfire.io animation, for teaching purposes", "created_at": "2015-11-07T18:19:50Z", "updated_at": "2015-11-07T18:19:51Z", "api": ["d3.select", "d3.range", "d3.timer"], "readme": "", "uid": "zanarmstrong_4b6ab7914183dbf7a16f"}, {"code": "<script>\n\nd3.select(\"svg\").append(\"g\").attr(\"class\", \"partition-legend\")\n  .attr(\"transform\", \"translate(500,0)\");\n\n  var chartG = d3.select(\"svg\")\n    .append(\"g\")\n    .attr(\"class\", \"pack\")\n    .attr(\"transform\", \"translate(0,0)\");\n\nd3.json(\"students.json\", cleanStudents)\n\nfunction cleanStudents(data) {\n  var students = data.students;\n\n  var packableStudents = packStudents(students);\n\n  circlePack(packableStudents, \"values\", \"key\");\n\n  createPartitionLegend(\"ethnicity\", students, 100, \"values\", \"key\");\n  createPartitionLegend(\"gender\", students, 200, \"values\", \"key\");\n\n}\n\nfunction gradeColor(d) {\n    var colors = d3.scale.ordinal().domain([\"A\",\"B\",\"C\",\"D\",\"F\"]).range([\"#a50f15\", \"#de2d26\", \"#fb6a4a\", \"#fcae91\", \"#fee5d9\"]);\n    return colors(d);\n}\n\nfunction genderColor(d) {\n  if (d === \"Male\") {\n    return \"lightblue\";\n  }\n  return \"pink\";\n}\n\nfunction trendColor(d) {\n    if (d === \"growth\") {\n    return \"green\";\n  }\n  return \"red\";\n}\n\nfunction ethnicityColor(d) {\n    var eth = [\"Non-Hispanic White\",\"Non-Hispanic Black or African American\",\"Asian\",\"American Indian or Alaska Native\",\"Non-Hispanic Native Hawaiian or other Pacific Islander\",\"Non-Hispanic some other race\",\"Non-Hispanic two or more races\",\"Hispanic or Latino\"];\n\n    var colors = d3.scale.ordinal().domain(eth).range([\"#d6cf7f\",\"#d6604d\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#b0a7a9\"])\n    return colors(d);\n}\n\nfunction createPartitionLegend(partitionOn, data, offset, childAccessor, label) {\n\n  colorFunctions = {\"grade\": gradeColor, \"ethnicity\": ethnicityColor, \"gender\": genderColor, \"trend\": trendColor};\n  colorFunction = colorFunctions[partitionOn];\n\n  var legendNest = d3.nest()\n    .key(function (d) {\n      return d[partitionOn];\n    })\n    .entries(data);\n\n    legendNest = {id: \"root\", key: \"root\", values: legendNest};\n\n  var partition = d3.layout.partition();\n\n  var partitionWidth = 500;\n  var partitionHeight = 200;\n\n  partition\n  .children(function(d) {return d[childAccessor]})\n  .value(function(d) {return 1})\n\n  var pLegend = d3\n    .select(\"g.partition-legend\")\n    .append(\"g\")\n    .attr(\"transform\", \"translate(20,\" + offset + \")\")\n\n  pLegend\n  .selectAll(\"rect\")\n  .data(partition(legendNest).filter(function(d) {return d.depth === 1}))\n  .enter()\n  .append(\"rect\")\n  .attr(\"x\", function (d) {return d.x * partitionWidth})\n  .attr(\"y\", function (d) {return d.y * partitionHeight})\n  .attr(\"width\", function (d) {return d.dx * partitionWidth})\n  .attr(\"height\", function (d) {return d.dy * partitionHeight})\n  .style(\"fill\", function (d) {return colorFunction(d.key)})\n\n  pLegend.selectAll(\"text\")\n  .data(partition(legendNest).filter(function(d) {return d.depth === 1}))\n  .enter()\n  .append(\"text\")\n  .attr(\"x\", function (d) {return d.x * partitionWidth})\n  .attr(\"y\", function (d) {return (d.y * partitionHeight) + 15})\n  .text(function (d) {return d[label] ? d[label].substr(0, parseInt((d.dx * partitionWidth) / 8)) : \"\"})\n\n}\n\nfunction packStudents(data) {\n\n    nestedData = d3.nest()\n    .key(function (d) {\n      return d.grade;\n    })\n    .key(function (d) {\n      return d.ethnicity;\n    })\n    .key(function (d) {\n      return d.gender\n    })\n    .entries(data);\n\n    nestedData.forEach(function (d) {\n      d.leafColor = gradeColor(d.key);\n      d.values.forEach(function (d) {\n        d.leafColor = ethnicityColor(d.key);\n          d.values.forEach(function (d) {\n            d.leafColor = genderColor(d.key);\n        })\n\n      })\n    })\n\n  return packableData = {id: \"root\", key: \"root\", values: nestedData}\n}\n\nfunction circlePack(data, childAccessor, label) {\n  packChart = d3.layout.pack();\n\n  //padding is only for siblings\n\n  packChart.size([500,500])\n  .children(function(d) {return d[childAccessor]})\n//  .padding(1)\n  .value(function (d) {return 1})\n\n  var depthScale = d3.scale.linear().domain([0,3]).range([4,0])\n\n  var chartG = d3.select(\"g.pack\");\n\n  chartG\n  .selectAll(\"circle\")\n  .data(packChart(data).filter(function (d) {return (d.depth !== 0 && d.depth !== 1) || !d[childAccessor]}))\n  .exit()\n  .remove();\n\n  chartG\n  .selectAll(\"circle\")\n  .data(packChart(data).filter(function (d) {return (d.depth !== 0 && d.depth !== 1) || !d[childAccessor]}))\n  .enter()\n  .append(\"circle\")\n  .on(\"dblclick\", packZoom);\n\n  chartG\n  .selectAll(\"circle\")\n  .transition()\n  .duration(1000)\n  .attr(\"cx\", function (d) {return d.x})\n  .attr(\"cy\", function (d) {return d.y})\n  .attr(\"r\", paddedR)\n  .style(\"fill\", function (d) {return d.leafColor ? d.leafColor : \"white\"})\n  .style(\"fill-opacity\", function (d) {return d.leafColor ? 1 : .25})\n  .style(\"stroke\", function (d) {return d.leafColor || d.depth === 0 ? \"none\" : \"black\"});\n\n  chartG\n  .selectAll(\"text\")\n  .remove();\n\n  chartG\n  .selectAll(\"text\")\n  .data(packChart(data).filter(function (d) {return d.depth === 1}))\n  .enter()\n  .append(\"text\")\n  .attr(\"x\", function (d) {return d.x})\n  .attr(\"y\", function (d) {return d.y})\n  .text(function (d) {return d[label] ? d[label] : d.key})\n  .style(\"font-size\", function (d) {return d.r})\n  .style(\"text-anchor\", \"middle\")\n  .style(\"fill-opacity\", .55)\n\n\n  function paddedR(d) {\n    return Math.max(2, d.r - (Math.max(0, d.depth - 1)))\n  }\n\n  function packZoom(d) {\n    circlePack(d, \"values\", \"key\");\n  }\n\n}\n\n</script>", "description": "Circle Pack", "created_at": "2015-11-07T04:54:10Z", "updated_at": "2016-03-16T15:42:07Z", "api": ["d3.select", "d3.json", "d3.scale.ordinal", "d3.nest", "d3.layout.partition", "d3.layout.pack", "d3.scale.linear"], "readme": "A circle pack with a variety of styles based on depth.", "uid": "emeeks_05f44e46124cefa0070c"}, {"code": "<script>\n\nvar margin = {top: 80, right: 180, bottom: 80, left: 180},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1, .3);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(8, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  x.domain(data.map(function(d) { return d.name; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"text\")\n      .attr(\"class\", \"title\")\n      .attr(\"x\", x(data[0].name))\n      .attr(\"y\", -26)\n      .text(\"Why Are We Leaving Facebook?\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\".tick text\")\n      .call(wrap, x.rangeBand());\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.name); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); });\n});\n\nfunction wrap (text, width) {\n\n  text.each(function() {\n\n    var breakChars = ['/', '&', '-'],\n      text = d3.select(this),\n      textContent = text.text(),\n      spanContent;\n\n    breakChars.forEach(char => {\n      // Add a space after each break char for the function to use to determine line breaks\n      textContent = textContent.replace(char, char + ' ');\n    });\n\n    var words = textContent.split(/\\s+/).reverse(),\n      word,\n      line = [],\n      lineNumber = 0,\n      lineHeight = 1.1, // ems\n      x = text.attr('x'),\n      y = text.attr('y'),\n      dy = parseFloat(text.attr('dy') || 0),\n      tspan = text.text(null).append('tspan').attr('x', x).attr('y', y).attr('dy', dy + 'em');\n\n    while (word = words.pop()) {\n      line.push(word);\n      tspan.text(line.join(' '));\n      if (tspan.node().getComputedTextLength() > width) {\n        line.pop();\n        spanContent = line.join(' ');\n        breakChars.forEach(char => {\n          // Remove spaces trailing breakChars that were added above\n          spanContent = spanContent.replace(char + ' ', char);\n        });\n        tspan.text(spanContent);\n        line = [word];\n        tspan = text.append('tspan').attr('x', x).attr('y', y).attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n      }\n    }\n  });\n\n}\n\nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n\n</script>", "description": "Wrapping Long Labels 2.0", "created_at": "2015-11-06T21:14:42Z", "updated_at": "2015-11-06T21:14:42Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This example, using satirical data from [The Onion](http://www.theonion.com/articles/why-are-we-leaving-facebook,34167/), demonstrates how to wrap long axis labels to fit on multiple lines.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/7555321'>Wrapping Long Labels 2.0</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/b237b631ac184c9f9fa4'>Wrapping Long Labels 2.0</a>", "uid": "ericsoco_647db6ebadd4f4756cae"}, {"code": "<script>\n\nvar width = 960,\n    height = 780,\n    delay = 1000,\n    duration = 150;\n\nvar sample = poissonDiscSampler(width, height, 10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar s;\n\nwhile (s = sample()) {\n  if (!s[1]) continue;\n  svg.append(\"line\")\n      .attr(\"x1\", s[1][0])\n      .attr(\"y1\", s[1][1])\n      .attr(\"x2\", s[1][0])\n      .attr(\"y2\", s[1][1])\n      .style(\"stroke-opacity\", 0)\n    .transition()\n      .delay(s[0].depth * duration + delay)\n      .duration(duration)\n      .ease(\"linear\")\n      .style(\"stroke-opacity\", 1)\n      .attr(\"x2\", s[0][0])\n      .attr(\"y2\", s[0][1]);\n}\n\n// Based on https://www.jasondavies.com/poisson-disc/\nfunction poissonDiscSampler(width, height, radius) {\n  var k = 30, // maximum number of samples before rejection\n      radius2 = radius * radius,\n      R = 3 * radius2,\n      cellSize = radius * Math.SQRT1_2,\n      gridWidth = Math.ceil(width / cellSize),\n      gridHeight = Math.ceil(height / cellSize),\n      grid = new Array(gridWidth * gridHeight),\n      queue = [],\n      queueSize = 0,\n      sampleSize = 0;\n\n  return function() {\n    if (!sampleSize) {\n      var s1 = [Math.random() * width, Math.random() * height];\n      s1.depth = 0;\n      return sample(s1, null);\n    }\n\n    // Pick a random existing sample and remove it from the queue.\n    while (queueSize) {\n      var i = Math.random() * queueSize | 0,\n          s = queue[i];\n\n      // Make a new candidate between [radius, 2 * radius] from the existing sample.\n      for (var j = 0; j < k; ++j) {\n        var a = 2 * Math.PI * Math.random(),\n            r = Math.sqrt(Math.random() * R + radius2),\n            x = s[0] + r * Math.cos(a),\n            y = s[1] + r * Math.sin(a);\n\n        // Reject candidates that are outside the allowed extent,\n        // or closer than 2 * radius to any existing sample.\n        if (0 <= x && x < width && 0 <= y && y < height && far(x, y)) return sample([x, y], s);\n      }\n\n      queue[i] = queue[--queueSize];\n      queue.length = queueSize;\n    }\n  };\n\n  function far(x, y) {\n    var i = x / cellSize | 0,\n        j = y / cellSize | 0,\n        i0 = Math.max(i - 2, 0),\n        j0 = Math.max(j - 2, 0),\n        i1 = Math.min(i + 3, gridWidth),\n        j1 = Math.min(j + 3, gridHeight);\n\n    for (j = j0; j < j1; ++j) {\n      var o = j * gridWidth;\n      for (i = i0; i < i1; ++i) {\n        if (s = grid[o + i]) {\n          var s,\n              dx = s[0] - x,\n              dy = s[1] - y;\n          if (dx * dx + dy * dy < radius2) return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function sample(s1, s0) {\n    if (s0) s1.depth = s0.depth + 1;\n    queue.push(s1);\n    grid[gridWidth * (s1[1] / cellSize | 0) + (s1[0] / cellSize | 0)] = s1;\n    ++sampleSize;\n    ++queueSize;\n    return [s1, s0];\n  }\n}\n\n</script>", "description": "Poisson-Disc V", "created_at": "2015-11-04T05:35:46Z", "updated_at": "2015-11-04T05:35:46Z", "api": ["d3.select"], "readme": "This animation shows the branching process of Bridson\u2019s [Poisson-disc sampling](/mbostock/dbb02448b0f93e4c82c3) algorithm. Each time a new sample is added, a line is drawn between the new sample and the neighboring sample that spawned it.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/b3831331f475fdcb13df'>Poisson-Disc V</a>\n\nforked from <a href='http://bl.ocks.org/enoex/'>enoex</a>'s block: <a href='http://bl.ocks.org/enoex/9c87aed9a53a3ff20e29'>Poisson-Disc V</a>", "uid": "erikhazzard_e7a13ff417ff5257a067"}, {"code": "<script>\n        // set margins according to Mike Bostock's convention\n        var margin = {\n                top: 50,\n                right: 20,\n                bottom: 30,\n                left: 50\n            },\n            width = 960 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        // create x scale\n        var x = d3.scale.ordinal()\n            .rangePoints([0, width], 1);\n\n        // append SVG element to page\n        var svg = d3.select(\"body\").append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        // load data asynchronously \n        d3.csv(\"data.csv\", function(d) {\n            // strip out relevant fields\n            var point = {};\n            point.AsthmaRates = +d.AsthmaRates;\n            point.AirQuality = +d.AirQuality;\n            point.SurfaceTemperature0908 = +d.SurfaceTemperature0908;\n            point.NonWhite = +d.NonWhite;\n            point.Income = +d.Income;\n            point.NoHighSchoolDegree = +d.NoHighSchoolDegree;\n            point.PopulationDensity = +d.PopulationDensity;\n            point.TreeDensity = +d.TreeDensity;\n            return point;\n        }, function(error, data) {\n\n            // object to hold the scale for each dimension\n            var scales = {};\n            var features = d3.keys(data[0]);\n\n            // create a separate sclae for each y axis \n            features.forEach(function(key) {\n                scales[key] = d3.scale.linear()\n                    .range([height, 0])\n                    .domain([0, d3.max(data, function(d) {\n                        return d[key];\n                    })]);\n            });\n\n            // setup general line and axis functions\n            var line = d3.svg.line();\n            var axis = d3.svg.axis().orient('left');\n\n            // set domain of x scale\n            x.domain(features);\n\n            // create a path function\n            var path = function(d) {\n                return line(features.map(function(k) {\n                    return [x(k), scales[k](d[k])];\n                }));\n            }\n\n            // append the line to go through the axes\n            var line_plot = svg.append(\"g\")\n                .attr(\"class\", \"foreground\")\n                .selectAll(\"path\")\n                .data([data[0]])\n                .enter().append(\"path\")\n                .attr(\"d\", path);\n\n            // Add a group element for each dimension.\n            var g = svg.selectAll(\".dimension\")\n                .data(features)\n                .enter().append(\"g\")\n                .attr(\"class\", \"dimension\")\n                .attr(\"transform\", function(d) {\n                    return \"translate(\" + x(d) + \")\";\n                });\n\n            // append each y axis to the corresponding group\n            g.append(\"g\")\n                .attr(\"class\", \"axis\")\n                .each(function(d) {\n                    d3.select(this).call(axis.scale(scales[d]));\n                })\n                .append(\"text\")\n                .style(\"text-anchor\", \"middle\")\n                .attr(\"y\", -9)\n                .text(function(d) {\n                    return d;\n                });\n        });\n    </script>", "description": "Hands-on Data Visualization with D3.js: Parallel Coordinates (Part 1)", "created_at": "2015-11-04T00:51:45Z", "updated_at": "2015-12-20T01:34:31Z", "api": ["d3.scale.ordinal", "d3.select", "d3.csv", "d3.keys", "d3.scale.linear", "d3.max", "d3.svg.line", "d3.svg.axis"], "readme": "## Part 1\n\nThese are the materials for my workshop on creating interactive data visualizations with D3!\n\nAnd please do not hesitate to reach out to me directly via email at jondinu@gmail.com or over twitter @clearspandex\n\n> Throughout this workshop, you will learn how to make this interactive parallel coordinate plot of environmental conditions related to incidences of Asthma in SF.\n\n### Exercises\n\n* [Part 1 (you are here \ud83d\udc47)](9b6e74c60e753f5b280f): simple static chart with mutiple y-axes and a single line plotted.\n* [Part 2](41541cb3e0a273960132): complete parallel cordinates chart with brushing and background/foreground lines.\n* [Extra](7154a3a2c6e67eadaec9): full featured example with this data using the [parallel-coordinates](https://syntagmatic.github.io/parallel-coordinates/) library.\n\n### Getting Setup\n\nYou will need:\n\n* HTTP web server\n    * On OSX and Linux `python -m SimpleHTTPServer`\n    * On Windows, I recommend downloading [Mongoose][mongoose]\n* Text Editor: I recommend [Sublime Text][sublime]\n* A (modern) Web Browser: I recommend [Google Chrome][chrome]\n\nOnce you have downloaded the software above, you are ready to start making some data visualizations!\n\n![](http://media2.giphy.com/media/rOTGSPxvJJY7m/giphy.gif)\n\n__If you need some help with Javascript or D3, refer to the tutorials below__\n\n#### Libraries Used\n* [D3.js][d3]\n* [Parallel Coordinates][parallel]\n\n### The Data\n\nThe [data][sf-asthma] is from the city of SF about certain environmental and health conditions of given Census tracts in the City.  You can read more about the individual fields from the [data dictionary][dictionary].\n\n> This comprehensive dataset was used to inform and calculate the Heat Vulnerability Index for our Climate and Health Program. The dataset includes satellite imagery from NASA, temperature data from NOAA and other data sets such as individual physiology, culture, local infrastructure, behavior, and social and demographic characteristics which influence the risk of heat-related health impacts.\n\nThere 21 fields in the file (comma separated with headers) but we will be focusing on the following 8 fields:\n\n<div class=\"output_subarea output_html rendered_html output_result\"><div style=\"overflow:auto;\">\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>AsthmaRates</th>\n      <th>AirQuality</th>\n      <th>SurfaceTemperature0908</th>\n      <th>NonWhite</th>\n      <th>Income</th>\n      <th>NoHighSchoolDegree</th>\n      <th>PopulationDensity</th>\n      <th>TreeDensity</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td> 6.299994</td>\n      <td> 2.2</td>\n      <td> 322</td>\n      <td> 0.230650</td>\n      <td>  93777</td>\n      <td> 0.013605</td>\n      <td>  1985.746482</td>\n      <td> 1185</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td> 6.276086</td>\n      <td> 2.2</td>\n      <td> 316</td>\n      <td> 0.398085</td>\n      <td>  73540</td>\n      <td> 0.130243</td>\n      <td> 27208.307880</td>\n      <td> 6133</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td> 5.700004</td>\n      <td> 2.1</td>\n      <td> 313</td>\n      <td> 0.124894</td>\n      <td> 171257</td>\n      <td> 0.024085</td>\n      <td>  7245.100198</td>\n      <td> 2989</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td> 5.699994</td>\n      <td> 2.2</td>\n      <td> 314</td>\n      <td> 0.104333</td>\n      <td> 187377</td>\n      <td> 0.014402</td>\n      <td> 41077.512777</td>\n      <td> 5047</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td> 5.699984</td>\n      <td> 2.2</td>\n      <td> 312</td>\n      <td> 0.175050</td>\n      <td> 117254</td>\n      <td> 0.040223</td>\n      <td> 21792.728792</td>\n      <td> 3155</td>\n    </tr>\n    <tr>\n      <th> ...</th>\n      <td> ...</td>\n      <td> ...</td>\n      <td> ...</td>\n      <td> ...</td>\n      <td> ...</td>\n      <td> ...</td>\n      <td> ...</td>\n      <td> ...</td>\n    </tr>\n  </tbody>\n</table>\n</div></div>\n\n### Learning before you Learn (optional but recommended)\n\nAlso, you'll be better prepared if you have a basic understanding of the technologies (see Dashing d3 Tutorial #4) and be comfortable with the basics of HTML, CSS, and Javascript (Exercises 2-3 in the d3 Tutorials by Scott Murray).\n\n1. Basics of Javascript: [http://jsforcats.com/](http://jsforcats.com/)\n2. D3 Tutorials by Scott Murray: [http://alignedleft.com/tutorials/d3](http://alignedleft.com/tutorials/d3)\n    * Best for: Not super comfortable with Javascript\n    * Exercises 2-3: Getting Set up with HTML/CSS\n\n3. Dashing d3 Tutorials: [https://www.dashingd3js.com/](https://www.dashingd3js.com/)\n    * Best for: Comfortable with Javascript and want to dive into D3.js\n    * Tutorial 4: Landscape of Technologies and Environments\n\n4. Getting into D3: Let's Make a Bar Chart: [http://bost.ocks.org/mike/bar/](http://bost.ocks.org/mike/bar/)\n\n--\n\nGithub repo: [https://github.com/Jay-Oh-eN/hands-on-d3](https://github.com/Jay-Oh-eN/hands-on-d3)\n\nArchival event link: [http://www.eventbrite.com/e/hands-on-data-visualization-with-d3js-tickets-14705972961](http://www.eventbrite.com/e/hands-on-data-visualization-with-d3js-tickets-14705972961)\n\n[mongoose]: http://cesanta.com/mongoose.shtml\n[sublime]: http://www.sublimetext.com/2\n[chrome]: https://www.google.com/chrome/browser/desktop/\n[zip]: https://github.com/Jay-Oh-eN/hands-on-d3/archive/master.zip\n[gitit]: http://jlord.us/git-it/\n\n[sf-asthma]: https://data.sfgov.org/Health-and-Social-Services/Climate-and-Health-Data/paqg-zyqx\n[grayarea]: http://grayarea.org/\n[swiss]: http://www.swissnexsanfrancisco.org/\n[lift]: http://liftconference.com/lift15\n[data-canvas-img]: images/data-canvas.png\n[data-canvas]: http://datacanvas.org/\n[data-canvas-map]: http://map.datacanvas.org/\n[dump]: https://s3.amazonaws.com/localdata-export/datacanvas/full.zip\n[data-canvas-data]: http://map.datacanvas.org/#!/data\n[dictionary]: https://github.com/Jay-Oh-eN/hands-on-d3/blob/master/data/dictionary.pdf\n\n[d3]: http://d3js.org/\n[dimple]: http://dimplejs.org/\n[moment]: http://momentjs.com/\n[d3plus]: http://d3plus.org/\n[rickshaw]: http://code.shutterstock.com/rickshaw/\n[dc.js]: http://dc-js.github.io/dc.js/\n[nvd3]: http://nvd3.org/\n[c3]: http://c3js.org/\n[raw]: http://app.raw.densitydesign.org/\n[queue]: https://github.com/mbostock/queue\n[parallel]: https://syntagmatic.github.io/parallel-coordinates/\n", "uid": "Jay-Oh-eN_9b6e74c60e753f5b280f"}, {"code": "<script>\n\n// 1: data is array of numbers from 0 to 199, randomly ordered\nvar n = 200,\n    array = d3.shuffle(d3.range(n)),\n    actions = mergesort(array.slice()).reverse();\n\nvar margin = {top: 180, right: 40, bottom: 180, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// y translates ...\nvar y = d3.scale.ordinal()\n    .domain([1, 0])\n    .rangeRoundBands([height, 0], .3);\n\nvar x = d3.scale.ordinal()\n    .domain(d3.range(n))\n    .rangePoints([0, width]);\n\nvar a = d3.scale.linear()\n    .domain([0, n - 1])\n    .range([-45, 45]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar line = svg.append(\"g\")\n    .attr(\"class\", \"line\")\n  .selectAll(\"line\")\n    .data(array.map(function(v, i) {\n      return {\n        // 2. v is the value\n        value: v,\n        // index is the position\n        index: i,\n        // set array to 0, will alternate between 0 and 1\n        array: 0\n      };\n    }))\n\t// 3: each datapoint is represented with a line\n  .enter().append(\"line\")\n\t\t// 4: each line has a transformation applied and is given a \"y2\" value\n\t\t// y1, x1, and x2 are set implicitely to 0\n\t\t// what is the transformation? \n    .attr(\"transform\", transform)\n    .attr(\"y2\", -y.rangeBand());\n\nvar line0 = line[0],\n    line1 = new Array(n);\n\nvar transition = d3.transition()\n    .duration(75)\n    .each(\"start\", function start() {\n      var action = actions.pop();\n      switch (action.type) {\n        case \"merge\": {\n          d3.selectAll(line0).attr(\"class\", function(d, i) { return action.left <= i && i < action.end ? null : \"line--inactive\"; });\n          break;\n        }\n        case \"copy\": {\n          var i = action[0],\n              j = action[1],\n              e = line1[j] = line0[i],\n              d = e.__data__;\n          d.index = j;\n          d.array = (d.array + 1) & 1;\n          transition.each(function() { d3.select(e).transition().attr(\"transform\", transform); });\n          break;\n        }\n        case \"swap\": {\n          var t = line0;\n          line0 = line1;\n          line1 = t;\n          break;\n        }\n      }\n      if (actions.length) transition = transition.transition().each(\"start\", start);\n    });\n\n// 5: transformation is a translation horiztonally, vertically, and a rotation\nfunction transform(d) {\n  // what is the x, y, and a functions?\n  return \"translate(\" + x(d.index) + \",\" + y(d.array) + \")rotate(\" + a(d.value) + \")\";\n}\n\nfunction mergesort(array) {\n  var actions = [],\n      n = array.length,\n      array0 = array,\n      array1 = new Array(n);\n\n  for (var m = 1; m < n; m <<= 1) {\n    for (var i = 0; i < n; i += (m << 1)) {\n      merge(i, Math.min(i + m, n), Math.min(i + (m << 1), n));\n    }\n    actions.push({type: \"swap\"});\n    array = array0, array0 = array1, array1 = array;\n  }\n\n  function merge(left, right, end) {\n    actions.push({type: \"merge\", left: left, end: end});\n    for (var i0 = left, i1 = right, j = left; j < end; ++j) {\n      if (i0 < right && (i1 >= end || array0[i0] <= array0[i1])) {\n        array1[j] = array0[i0];\n        actions.push({type: \"copy\", \"0\": i0++, \"1\": j});\n      } else {\n        array1[j] = array0[i1];\n        actions.push({type: \"copy\", \"0\": i1++, \"1\": j});\n      }\n    }\n  }\n\n  return actions;\n}\n\n</script>", "description": "Mergesort II: commented", "created_at": "2015-11-02T07:04:14Z", "updated_at": "2015-11-02T07:04:14Z", "api": ["d3.shuffle", "d3.range", "d3.scale.ordinal", "d3.scale.linear", "d3.select", "d3.transition", "d3.selectAll"], "readme": "An improved [animation of mergesort](/mbostock/39566aca95eb03ddd526). As the name suggests, the algorithm merges sorted arrays, starting with arrays of length 1 and doubling at each step. The two subarrays currently being merged are shown in black.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6928381c7b61714da59e'>Mergesort II</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/2c89baa04be1bd982d98'>Mergesort II: commented</a>", "uid": "zanarmstrong_e15f045b2ac54c532b1a"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 20, left: 40};\nvar width = 960 - margin.left - margin.right,\n\t\theight = 500 - margin.top - margin.bottom;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.left + margin.right)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n.append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// write a custom parser to address the format your dates are in\nvar parseDate = d3.time.format(\"%Y-%m\").parse;\n\nvar xScale = d3.time.scale()\n\t.range([0,width]);\nvar yScale = d3.scale.linear()\n\t.range([height,0]);\n\nvar xAxis = d3.svg.axis()\n\t.scale(xScale)\n\t.orient(\"bottom\");\nvar yAxis = d3.svg.axis()\n\t.scale(yScale)\n\t.tickSize(-width)\n\t.tickPadding(8)\n\t.orient(\"left\");\n\nvar line = d3.svg.line()\n\t.x(function(d) { return xScale(d.date); })\n\t.y(function(d) { return yScale(d.private_job_change); });\n\nd3.tsv(\"jobs.tsv\", ready);\n\nfunction ready(error, data) {\n\tif (error) return console.warn(error);\n\n\tdata.forEach(function(d) {\n\t\td.jobs_change = +d.jobs_change;\n\t\td.private_job_change = +d.private_job_change;\n\t\td.unemployment_rate = +d.unemployment_rate;\n\t\td.date = parseDate(d.month_year);\n\t});\n\t\n\txScale.domain(d3.extent(data, function (d) { return d.date; }));\n\tyScale.domain(d3.extent(data, function (d) { return d.private_job_change; }));\n\n\tsvg.append(\"g\")\n\t\t.attr(\"class\", \"x axis\")\n\t\t.attr(\"transform\", \"translate(0,\" + (height) + \")\")\n\t\t.call(xAxis);\n\n\tsvg.append(\"g\")\n\t\t.attr(\"class\", \"y axis\")\n\t\t.call(yAxis);\n\n\tsvg.append(\"path\")\n\t\t.attr(\"class\", \"line1\")\n\t\t.attr(\"d\", line(data) );\n\t\t// \"d\" is the attribute that sets the path\n\t\t// this doesn't preserve data join\n\n\tsvg.append(\"path\")\n\t\t.datum(data)\n\t\t.attr(\"class\", \"line2\")\n\t\t.attr(\"d\", line);\n\t\t// just like data, but you're only doing one thing (datum)\n\t\t// this one does preserve the data join\n\t\t// NEITHER use enter. D3 is weird.\n\n};\n\n</script>", "description": "Line Graph, Two Ways", "created_at": "2015-11-01T23:52:12Z", "updated_at": "2015-11-01T23:52:13Z", "api": ["d3.select", "d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.tsv", "d3.extent"], "readme": "", "uid": "kcsluis_248493f0bb9fce3e8588"}, {"code": "<script>\n\nvar m = [30, 10, 10, 10],\n    w = 960 - m[1] - m[3],\n    h = 500 - m[0] - m[2];\n\nvar x = d3.scale.ordinal().rangePoints([0, w], 1),\n    y = {},\n    dragging = {};\n\nvar line = d3.svg.line(),\n    axis = d3.svg.axis().orient(\"left\"),\n    background,\n    foreground;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", w + m[1] + m[3])\n    .attr(\"height\", h + m[0] + m[2])\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\nd3.csv(\"cars.csv\", function(error, cars) {\n\n  // Extract the list of dimensions and create a scale for each.\n  x.domain(dimensions = d3.keys(cars[0]).filter(function(d) {\n    return d != \"name\" && (y[d] = d3.scale.linear()\n        .domain(d3.extent(cars, function(p) { return +p[d]; }))\n        .range([h, 0]));\n  }));\n\n  // Add grey background lines for context.\n  background = svg.append(\"g\")\n      .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n      .data(cars)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add blue foreground lines for focus.\n  foreground = svg.append(\"g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(cars)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add a group element for each dimension.\n  var g = svg.selectAll(\".dimension\")\n      .data(dimensions)\n    .enter().append(\"g\")\n      .attr(\"class\", \"dimension\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \")\"; })\n      .call(d3.behavior.drag()\n        .on(\"dragstart\", function(d) {\n          dragging[d] = this.__origin__ = x(d);\n          background.attr(\"visibility\", \"hidden\");\n        })\n        .on(\"drag\", function(d) {\n          dragging[d] = Math.min(w, Math.max(0, this.__origin__ += d3.event.dx));\n          foreground.attr(\"d\", path);\n          dimensions.sort(function(a, b) { return position(a) - position(b); });\n          x.domain(dimensions);\n          g.attr(\"transform\", function(d) { return \"translate(\" + position(d) + \")\"; })\n        })\n        .on(\"dragend\", function(d) {\n          delete this.__origin__;\n          delete dragging[d];\n          transition(d3.select(this)).attr(\"transform\", \"translate(\" + x(d) + \")\");\n          transition(foreground)\n              .attr(\"d\", path);\n          background\n              .attr(\"d\", path)\n              .transition()\n              .delay(500)\n              .duration(0)\n              .attr(\"visibility\", null);\n        }));\n\n  // Add an axis and title.\n  g.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(axis.scale(y[d])); })\n    .append(\"text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(String);\n\n  // Add and store a brush for each axis.\n  g.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) { d3.select(this).call(y[d].brush = d3.svg.brush().y(y[d]).on(\"brushstart\", brushstart).on(\"brush\", brush)); })\n    .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n});\n\nfunction position(d) {\n  var v = dragging[d];\n  return v == null ? x(d) : v;\n}\n\nfunction transition(g) {\n  return g.transition().duration(500);\n}\n\n// Returns the path for a given data point.\nfunction path(d) {\n  return line(dimensions.map(function(p) { return [position(p), y[p](d[p])]; }));\n}\n\n// When brushing, dont trigger axis dragging.\nfunction brushstart() {\n  d3.event.sourceEvent.stopPropagation();\n}\n\n// Handles a brush event, toggling the display of foreground lines.\nfunction brush() {\n  var actives = dimensions.filter(function(p) { return !y[p].brush.empty(); }),\n      extents = actives.map(function(p) { return y[p].brush.extent(); });\n  foreground.style(\"display\", function(d) {\n    return actives.every(function(p, i) {\n      return extents[i][0] <= d[p] && d[p] <= extents[i][1];\n    }) ? null : \"none\";\n  });\n}\n\n</script>", "description": "Parallel Coordinates", "created_at": "2015-10-26T13:02:52Z", "updated_at": "2015-10-26T13:02:58Z", "api": ["d3.scale.ordinal", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.keys", "d3.scale.linear", "d3.extent", "d3.behavior.drag", "d3.svg.brush", "d3.event.sourceEvent.stopPropagation"], "readme": "This [parallel coordinates](http://en.wikipedia.org/wiki/Parallel_coordinates) visualization of cars from the \u201870s and \u201880s demonstrates one of [D3 2.5.0](http://mbostock.github.com/d3/)\u2019s new interactive features: the *brush* component. By clicking and dragging along any axis, you can specify a filter for that dimension. The brush component is also used in the updated [scatterplot matrix](http://mbostock.github.com/d3/ex/splom.html) example.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/7586334'>Parallel Coordinates</a>", "uid": "jamescwaters_d5cf205e80c5607b6031"}, {"code": "<script>\n      var outerWidth = 960;\n      var outerHeight = 500;\n      var margin = { left: 90, top: 8, right: 30, bottom: 66 };\n      var barPadding = 0.2;\n\n      var xColumn = \"country\";\n      var yColumn = \"population\";\n      var colorColumn = \"religion\";\n      var layerColumn = colorColumn;\n\n      var innerWidth  = outerWidth  - margin.left - margin.right;\n      var innerHeight = outerHeight - margin.top  - margin.bottom;\n\n      var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\",  outerWidth)\n        .attr(\"height\", outerHeight);\n      var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      var xAxisG = g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + innerHeight + \")\");\n      var yAxisG = g.append(\"g\")\n        .attr(\"class\", \"y axis\");\n      var colorLegendG = g.append(\"g\")\n        .attr(\"class\", \"color-legend\")\n        .attr(\"transform\", \"translate(596, 0)\");\n\n      var xScale = d3.scale.ordinal().rangeBands([0, innerWidth], barPadding);\n      var yScale = d3.scale.linear().range([innerHeight, 0]);\n      var colorScale = d3.scale.category10();\n\n      var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\")\n        .outerTickSize(0);\n      var yAxis = d3.svg.axis().scale(yScale).orient(\"left\")\n        .ticks(5)\n        .tickFormat(d3.format(\"s\"))\n        .outerTickSize(0);\n\n      var colorLegend = d3.legend.color()\n        .scale(colorScale)\n        .shapePadding(6.24)\n        .shapeWidth(25)\n        .shapeHeight(25)\n        .labelOffset(5);\n\n      function render(data){\n\n        var nested = d3.nest()\n          .key(function (d){ return d[layerColumn]; })\n          .entries(data)\n\n        var stack = d3.layout.stack()\n          .y(function (d){ return d[yColumn]; })\n          .values(function (d){ return d.values; });\n\n        var layers = stack(nested);\n\n        xScale.domain(layers[0].values.map(function (d){\n          return d[xColumn];\n        }));\n\n        yScale.domain([\n          0,\n          d3.max(layers, function (layer){\n            return d3.max(layer.values, function (d){\n              return d.y;\n            });\n          })\n        ]);\n\n        colorScale.domain(layers.map(function (layer){\n          return layer.key;\n        }));\n\n        xAxisG.call(xAxis);\n        yAxisG.call(yAxis);\n\n        var layers = g.selectAll(\".layer\").data(layers);\n        layers.enter().append(\"g\").attr(\"class\", \"layer\");\n        layers.exit().remove();\n        layers.style(\"fill\", function (d){\n          return colorScale(d.key);\n        });\n\n        var bars = layers.selectAll(\"rect\").data(function (d){\n          return d.values;\n        });\n        var barWidth = xScale.rangeBand() / colorScale.domain().length;\n        bars.enter().append(\"rect\")\n        bars.exit().remove();\n        bars\n          .attr(\"x\", function (d, i, j){\n            return xScale(d[xColumn]) + barWidth * j;\n          })\n          .attr(\"y\", function (d){ return yScale(d.y); })\n          .attr(\"width\", barWidth)\n          .attr(\"height\", function (d){ return innerHeight - yScale(d.y); })\n\n        colorLegendG.call(colorLegend)\n          .selectAll(\"text\")\n          .attr(\"y\", 4);\n      }\n\n      function type(d){\n        d.population = +d.population;\n        return d;\n      }\n\n      d3.csv(\"religionByCountryTop5.csv\", type, render);\n\n    </script>", "description": "Grouped Bars", "created_at": "2015-10-23T18:29:11Z", "updated_at": "2015-10-23T21:28:24Z", "api": ["d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.format", "d3.legend.color", "d3.nest", "d3.layout.stack", "d3.max", "d3.csv"], "readme": "Grouped bars showing religion by top 5 countries. This is an example from the tutorial [Splitting Charts](https://github.com/curran/screencasts/tree/gh-pages/splittingCharts).\n\n\n * Draws from [Stacked-to-Grouped Bars](http://bl.ocks.org/mbostock/3943967)\n\n<!-- Start of SimpleHitCounter Code -->\n<div align=\"center\"><a href=\"http://www.simplehitcounter.com\" target=\"_blank\"><img src=\"http://simplehitcounter.com/hit.php?uid=1967779&f=16777215&b=0\" border=\"0\" height=\"18\" width=\"83\" alt=\"web counter\"></a></div>\n<!-- End of SimpleHitCounter Code -->\n", "uid": "curran_d4e2b2854f25429a06aa"}, {"code": "<script>\n\nvar width = 1050,\n    height = 1500;\n\nvar points = [];\n\nvar bounds = d3.geom.polygon([\n  [-width / 2, -height / 2],\n  [-width / 2, +height / 2],\n  [+width / 2, +height / 2],\n  [+width / 2, -height / 2]\n]);\n\ncircle(0, 100, 260, 16, -.01);\ncircle(0, 100, 180, 12, 0.005);\ncircle(0, 100, 0, 1, .02);\n\nvar line = d3.svg.line()\n    .interpolate(\"cardinal-closed\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + (width / 2) + \",\" + (height / 2) + \")\");\n\nvar path = svg.selectAll(\"path\")\n    .data(points)\n  .enter().append(\"path\")\n  .attr(\"class\",function(d, i) { return i < 16 ? \"outer\" : (i === 28 ? \"inner\" : \"middle\");});\n\nd3.timer(function() {\n  var voronoi = d3.geom.voronoi(points).map(function(cell) { return bounds.clip(cell); });\n  path.attr(\"d\", function(point, i) { return line(resample(voronoi[i])); });\n});\n\nfunction circle(cx, cy, r, n, ) {\n  d3.range(1e-6, 2 * Math.PI, 2 * Math.PI / n).map(function() {\n    var point = [cx + Math.cos() * r, cy + Math.sin() * r];\n    d3.timer(function() {\n       += ;\n\n      point[0] = cx + Math.sin() * r;\n      point[1] = cy + Math.cos() * r;\n    });\n    points.push(point);\n    return point;\n  });\n}\n\nfunction resample(points) {\n  var i = -1,\n      n = points.length,\n      p0 = points[n - 1], x0 = p0[0], y0 = p0[1], p1, x1, y1,\n      points2 = [];\n  while (++i < n) {\n    p1 = points[i], x1 = p1[0], y1 = p1[1];\n    points2.push(\n      [(x0 * 2 + x1) / 3, (y0 * 2 + y1) / 3],\n      [(x0 + x1 * 2) / 3, (y0 + y1 * 2) / 3],\n      p1\n    );\n    p0 = p1, x0 = x1, y0 = y1;\n  }\n  return points2;\n}\n\n</script>", "description": "fresh block", "created_at": "2015-10-23T06:26:18Z", "updated_at": "2015-11-05T10:07:20Z", "api": ["d3.geom.polygon", "d3.svg.line", "d3.select", "d3.timer", "d3.geom.voronoi", "d3.range"], "readme": "A fork of Mike Bostock's [Rotating Voronoi](http://bl.ocks.org/mbostock/4636377), with fewer polygon shapes, different line interpolation (\"cardinal-closed\"), and some color. \n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "saraquigley_1315a91b54ff11cb8b81"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\nvar projection = d3.geo.mollweide()\n    .scale(165)\n    .translate([width / 2, height / 2])\n    .rotate([25, 180])\n    .precision(.1);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar graticule = d3.geo.graticule();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"defs\").append(\"path\")\n    .datum({type: \"Sphere\"})\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\nsvg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"use\")\n    .attr(\"class\", \"fill\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg.append(\"path\")\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", path);\n\nd3.json(\"/mbostock/raw/4090846/world-50m.json\", function(error, world) {\n  if (error) throw error;\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n\n  svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"d\", path);\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n</script>", "description": "Nightly Show", "created_at": "2015-10-21T15:43:11Z", "updated_at": "2016-02-09T01:48:58Z", "api": ["d3.geo.mollweide", "d3.geo.path", "d3.geo.graticule", "d3.select", "d3.json"], "readme": "A guess at the map projection used by [The Nightly Show with Larry Wilmore](http://www.cc.com/shows/the-nightly-show).\n", "uid": "mbostock_62d550b83fada6dc3005"}, {"code": "<script>\nvar tree = {\n  \"jspm_packages/github/components/jquery@2.1.4/jquery.js\": 84336,\n  \"jspm_packages/github/components/jquery@2.1.4.js\": 113,\n  \"jspm_packages/github/mbostock/d3@3.5.5/d3.js\": 151335,\n  \"jspm_packages/github/mbostock/d3@3.5.5.js\": 224,\n  \"jspm_packages/github/angular/bower-angular@1.4.5/angular.js\": 155247,\n  \"jspm_packages/github/angular/bower-angular@1.4.5.js\": 264,\n  \"jspm_packages/github/angular/bower-angular-route@1.4.0/angular-route.js\": 4604,\n  \"jspm_packages/github/angular/bower-angular-route@1.4.0.js\": 294,\n  \"jspm_packages/github/angular/bower-angular-animate@1.4.1/angular-animate.js\": 23959,\n  \"jspm_packages/github/angular/bower-angular-animate@1.4.1.js\": 304,\n  \"jspm_packages/github/angular/bower-angular-cookies@1.4.1/angular-cookies.js\": 1616,\n  \"jspm_packages/github/angular/bower-angular-cookies@1.4.1.js\": 304,\n  \"jspm_packages/github/angular-ui/bootstrap-bower@0.13.0/ui-bootstrap-tpls.js\": 75371,\n  \"jspm_packages/github/angular-ui/bootstrap-bower@0.13.0.js\": 363,\n  \"jspm_packages/github/chjj/marked@0.3.3/lib/marked.js\": 15874,\n  \"jspm_packages/github/chjj/marked@0.3.3.js\": 105,\n  \"jspm_packages/github/Hypercubed/angular-marked@0.0.16/angular-marked.js\": 1175,\n  \"jspm_packages/github/Hypercubed/angular-marked@0.0.16.js\": 293,\n  \"jspm_packages/github/angular-ui/ui-codemirror@0.3.0/ui-codemirror.js\": 1807,\n  \"jspm_packages/github/angular-ui/ui-codemirror@0.3.0.js\": 285,\n  \"jspm_packages/npm/svgsaver@0.2.2/lib/svgsaver.js\": 4959,\n  \"jspm_packages/npm/svgsaver@0.2.2.js\": 226,\n  \"jspm_packages/npm/angular-downloadsvg-directive@0.1.0/lib/angular-downloadsvg-directive.js\": 1024,\n  \"jspm_packages/npm/angular-downloadsvg-directive@0.1.0.js\": 331,\n  \"jspm_packages/npm/process@0.10.1/browser.js\": 718,\n  \"jspm_packages/npm/process@0.10.1.js\": 216,\n  \"jspm_packages/github/jspm/nodelibs-process@0.1.1/index.js\": 250,\n  \"jspm_packages/github/jspm/nodelibs-process@0.1.1.js\": 260,\n  \"jspm_packages/npm/babyparse@0.4.3/babyparse.js\": 7992,\n  \"jspm_packages/npm/babyparse@0.4.3.js\": 223,\n  \"jspm_packages/npm/URIjs@1.15.1/src/punycode.js\": 2799,\n  \"jspm_packages/npm/URIjs@1.15.1/src/IPv6.js\": 1108,\n  \"jspm_packages/npm/URIjs@1.15.1/src/SecondLevelDomains.js\": 8360,\n  \"jspm_packages/npm/URIjs@1.15.1/src/URI.js\": 27805,\n  \"jspm_packages/npm/URIjs@1.15.1.js\": 210,\n  \"jspm_packages/npm/mime-lookup@0.0.2/mime-lookup.js\": 1348,\n  \"jspm_packages/npm/mime-lookup@0.0.2.js\": 233,\n  \"jspm_packages/github/codemirror/codemirror@5.3.0/lib/codemirror.js\": 151904,\n  \"jspm_packages/github/eligrey/FileSaver.js@master/FileSaver.js\": 3011,\n  \"jspm_packages/github/eligrey/FileSaver.js@master.js\": 124,\n  \"components/editor/editor.html\": 4426,\n  \"jspm_packages/npm/babel-runtime@5.8.20/helpers/class-call-check.js\": 354,\n  \"jspm_packages/npm/model-js@0.2.4/dist/model.js\": 1124,\n  \"jspm_packages/npm/model-js@0.2.4.js\": 93,\n  \"jspm_packages/npm/lodash@3.10.1/index.js\": 51374,\n  \"jspm_packages/npm/lodash@3.10.1.js\": 209,\n  \"jspm_packages/npm/chiasm@0.2.0/index.js\": 3709,\n  \"jspm_packages/npm/chiasm@0.2.0.js\": 206,\n  \"jspm_packages/npm/chiasm-component@0.2.1/index.js\": 655,\n  \"jspm_packages/npm/chiasm-component@0.2.1.js\": 236,\n  \"jspm_packages/npm/chiasm-layout@0.2.2/src/computeLayout.js\": 1194,\n  \"jspm_packages/npm/chiasm-layout@0.2.2/src/layout.js\": 1974,\n  \"jspm_packages/npm/chiasm-layout@0.2.2/index.js\": 368,\n  \"jspm_packages/npm/chiasm-layout@0.2.2.js\": 227,\n  \"jspm_packages/npm/chiasm-links@0.2.1/index.js\": 938,\n  \"jspm_packages/npm/chiasm-links@0.2.1.js\": 285,\n  \"jspm_packages/github/curran/model@0.2.4/dist/model.js\": 1062,\n  \"jspm_packages/github/curran/model@0.2.4.js\": 107,\n  \"jspm_packages/npm/jquery@2.1.4/dist/jquery.js\": 84471,\n  \"jspm_packages/npm/jquery@2.1.4.js\": 218,\n  \"jspm_packages/npm/d3@3.5.5/d3.js\": 151324,\n  \"jspm_packages/npm/d3@3.5.5.js\": 188,\n  \"jspm_packages/npm/backbone-events-standalone@0.2.7/backbone-events-standalone.js\": 3339,\n  \"jspm_packages/npm/backbone-events-standalone@0.2.7/index.js\": 314,\n  \"jspm_packages/npm/backbone-events-standalone@0.2.7.js\": 266,\n  \"jspm_packages/npm/biojs-events@0.0.4/index.js\": 435,\n  \"jspm_packages/npm/biojs-events@0.0.4.js\": 224,\n  \"jspm_packages/npm/expression-bar@0.1.4/lib/expressionbar.js\": 3619,\n  \"jspm_packages/npm/expression-bar@0.1.4/index.js\": 260,\n  \"jspm_packages/npm/expression-bar@0.1.4.js\": 230,\n  \"components/examples/bars/bars-chart.js\": 1500,\n  \"components/examples/trains/trains-chart.js\": 2669,\n  \"components/about/about.html\": 2197,\n  \"components/error/error.html\": 272,\n  \"components/index/index.html\": 866,\n  \"common/partials/footer.html\": 529,\n  \"common/partials/intro.html\": 1426,\n  \"jspm_packages/github/chieffancypants/angular-loading-bar@0.8.0/build/loading-bar.js\": 3667,\n  \"jspm_packages/github/chieffancypants/angular-loading-bar@0.8.0.js\": 437,\n  \"common/services/datapackage/mime.js\": 661,\n  \"common/services/datapackage/dataservice.js\": 2219,\n  \"common/services/datapackage/index.js\": 915,\n  \"components/editor/svg-download-dropdown.js\": 1080,\n  \"components/editor/editor.js\": 3324,\n  \"components/examples/index.js\": 546,\n  \"components/examples/chiasm/barChart.js\": 1894,\n  \"components/examples/chiasm/chiasm.js\": 870,\n  \"components/examples/biojs/biojs.js\": 530,\n  \"components/examples/bars/bars.js\": 621,\n  \"components/examples/trains/trains.js\": 493,\n  \"components/examples/polymer/d3-bar-chart.js\": 1574,\n  \"components/examples/polymer/bar-chart-tag.js\": 713,\n  \"components/examples/polymer/barChart-controller.js\": 502,\n  \"components/examples/routes.js\": 1741,\n  \"components/index/index.js\": 717,\n  \"components/routes.js\": 1217,\n  \"components/app.js\": 1645,\n  \"components/boot.js\": 130102\n};\n</script>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.7.0/underscore-min.js\"></script>\n<script src=\"https://cdn.rawgit.com/martine/webtreemap/a2fa353833eca1a4821ba4c93fb6a7d546aed02a/webtreemap.js\"></script>\n\n<script>\n\nfunction newNode(name) {\n  return {\n    name: name,\n    data: {\n      '$area': 0\n    },\n    children: []\n  };\n}\n\nvar treeData = newNode('/');\n\nfunction addNode(path, size) {\n  var parts = path.split('/');\n  var node = treeData;\n  node.data['$area'] += size;\n\n  parts.forEach(function(part) {\n    var child = _.find(node.children, function(child) { return child.name == part; });\n    if (!child) {\n      var child = newNode(part);\n      node.children.push(child);\n    }\n\n    node = child;\n    node.data['$area'] += size;\n  });\n}\n\nfunction addSizeToTitle(node, total) {\n  var size = node.data['$area'],\n      pct = 100.0 * size / total;\n  node.name += '  ' + size.toLocaleString() + '  ' + pct.toFixed(2) + '%';\n  node.children.forEach(function(x) { addSizeToTitle(x, total) });\n}\n\nfor (var source in tree) {\n  addNode(source, tree[source]);\n}\naddSizeToTitle(treeData, treeData.data['$area']);\n\nvar map = document.getElementById('map');\nappendTreemap(map, treeData);\n\nwindow.addEventListener('resize', function() {\n  appendTreemap(map, treeData);\n});\n\n</script>", "description": "Hypercubed/Project-Chi - Before", "created_at": "2015-10-21T02:06:26Z", "updated_at": "2015-10-21T02:06:26Z", "api": [], "readme": "", "uid": "Hypercubed_a9e3ff233070ff0af19a"}, {"code": "<script>\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t//////////////////////// Set-Up ////////////////////////////// \n\t\t\t////////////////////////////////////////////////////////////// \n\n\t\t\tvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n\t\t\t\twidth = Math.min(700, window.innerWidth - 10) - margin.left - margin.right,\n\t\t\t\theight = Math.min(width, window.innerHeight - margin.top - margin.bottom - 20);\n\t\t\t\t\t\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t//////////////////// Draw the Chart ////////////////////////// \n\t\t\t////////////////////////////////////////////////////////////// \n\n\t\t\tvar color = d3.scale.ordinal()\n\t\t\t\t.range([\"#EDC951\",\"#CC333F\",\"#00A0B0\"]);\n\t\t\t\t\n\t\t\tvar radarChartOptions = {\n\t\t\t  w: width,\n\t\t\t  h: height,\n\t\t\t  margin: margin,\n\t\t\t  maxValue: 0.5,\n\t\t\t  levels: 5,\n\t\t\t  roundStrokes: true,\n\t\t\t  color: color\n\t\t\t};\n\n\t\t\t//Load the data and Call function to draw the Radar chart\n\t\t\td3.json(\"data.json\", function(error, data){\n\t\t\t\tRadarChart(\".radarChart\", data, radarChartOptions);\n\t\t\t});\n\t\t\t\n\t\t</script>", "description": "radar chart for nested data", "created_at": "2015-10-19T19:05:55Z", "updated_at": "2016-06-14T22:49:06Z", "api": ["d3.scale.ordinal", "d3.json", "d3.scale.category10", "d3.max", "d3.format", "d3.scale.linear", "d3.select", "d3.range", "d3.svg.line.radial", "d3.selectAll"], "readme": "this version loads nested data from `data.json`:\n\n`index.html`\n\n    //Load the data and Call function to draw the Radar chart\n    d3.json(\"data.json\", function(error, data){\n    \tRadarChart(\".radarChart\", data, radarChartOptions);\n    });\n\nthen, it converts the nested data into an array of `values` arrays:\n\n`radarChart.js`\n\n    // convert the nested data passed in\n    // into an array of values arrays\n    data = data.map(function(d) { return d.values })\n\nan iteration on the bl.ock [Radar Chart Redesign](http://bl.ocks.org/nbremer/21746a9668ffdf6d8242) created by [@nbremer](http://bl.ocks.org/nbremer)", "uid": "micahstubbs_44bb05aab218a40a4c12"}, {"code": "<script>function parseNewick(a){for(var e=[],r={},s=a.split(/\\s*(;|\\(|\\)|,|:)\\s*/),t=0;t<s.length;t++){var n=s[t];switch(n){case\"(\":var c={};r.branchset=[c],e.push(r),r=c;break;case\",\":var c={};e[e.length-1].branchset.push(c),r=c;break;case\")\":r=e.pop();break;case\":\":break;default:var h=s[t-1];\")\"==h||\"(\"==h||\",\"==h?r.name=n:\":\"==h&&(r.length=parseFloat(n))}}return r}</script>\n\n<!-- Copyright 2015 Mike Bostock http://d3js.org -->\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar outerRadius = 960 / 2,\n    innerRadius = outerRadius - 170;\n\nvar color = d3.scale.category10()\n    .domain([\"Bacteria\", \"Eukaryota\", \"Archaea\"]);\n\nvar cluster = d3.layout.cluster()\n    .size([360, innerRadius])\n    .children(function(d) { return d.branchset; })\n    .value(function(d) { return 1; })\n    .sort(function(a, b) { return (a.value - b.value) || d3.ascending(a.length, b.length); })\n    .separation(function(a, b) { return 1; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", outerRadius * 2)\n    .attr(\"height\", outerRadius * 2);\n\nvar legend = svg.append(\"g\")\n    .attr(\"class\", \"legend\")\n  .selectAll(\"g\")\n    .data(color.domain())\n  .enter().append(\"g\")\n    .attr(\"transform\", function(d, i) { return \"translate(\" + (outerRadius * 2 - 10) + \",\" + (i * 20 + 10) + \")\"; });\n\nlegend.append(\"rect\")\n    .attr(\"x\", -18)\n    .attr(\"width\", 18)\n    .attr(\"height\", 18)\n    .style(\"fill\", color);\n\nlegend.append(\"text\")\n    .attr(\"x\", -24)\n    .attr(\"y\", 9)\n    .attr(\"dy\", \".35em\")\n    .style(\"text-anchor\", \"end\")\n    .text(function(d) { return d; });\n\nvar chart = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + outerRadius + \",\" + outerRadius + \")\");\n\nd3.text(\"life.txt\", function(error, life) {\n  if (error) throw error;\n\n  var root = parseNewick(life),\n      nodes = cluster.nodes(root),\n      links = cluster.links(nodes),\n      input = d3.select(\"#show-length input\").on(\"change\", changed),\n      timeout = setTimeout(function() { input.property(\"checked\", true).each(changed); }, 2000);\n\n  setRadius(root, root.length = 0, innerRadius / maxLength(root));\n  setColor(root);\n\n  var linkExtension = chart.append(\"g\")\n      .attr(\"class\", \"link-extensions\")\n    .selectAll(\"path\")\n      .data(links.filter(function(d) { return !d.target.children; }))\n    .enter().append(\"path\")\n      .each(function(d) { d.target.linkExtensionNode = this; })\n      .attr(\"d\", function(d) { return step(d.target.x, d.target.y, d.target.x, innerRadius); });\n\n  var link = chart.append(\"g\")\n      .attr(\"class\", \"links\")\n    .selectAll(\"path\")\n      .data(links)\n    .enter().append(\"path\")\n      .each(function(d) { d.target.linkNode = this; })\n      .attr(\"d\", function(d) { return step(d.source.x, d.source.y, d.target.x, d.target.y) })\n      .style(\"stroke\", function(d) { return d.target.color; });\n\n  chart.append(\"g\")\n      .attr(\"class\", \"labels\")\n    .selectAll(\"text\")\n      .data(nodes.filter(function(d) { return !d.children; }))\n    .enter().append(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + (innerRadius + 4) + \",0)\" + (d.x < 180 ? \"\" : \"rotate(180)\"); })\n      .style(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .text(function(d) { return d.name.replace(/_/g, \" \"); })\n      .on(\"mouseover\", mouseovered(true))\n      .on(\"mouseout\", mouseovered(false));\n\n  function changed() {\n    clearTimeout(timeout);\n    var checked = this.checked;\n    d3.transition().duration(750).each(function() {\n      linkExtension.transition().attr(\"d\", function(d) { return step(d.target.x, checked ? d.target.radius : d.target.y, d.target.x, innerRadius); });\n      link.transition().attr(\"d\", function(d) { return step(d.source.x, checked ? d.source.radius : d.source.y, d.target.x, checked ? d.target.radius : d.target.y) });\n    });\n  }\n\n  function mouseovered(active) {\n    return function(d) {\n      d3.select(this).classed(\"label--active\", active);\n      d3.select(d.linkExtensionNode).classed(\"link-extension--active\", active).each(moveToFront);\n      do d3.select(d.linkNode).classed(\"link--active\", active).each(moveToFront); while (d = d.parent);\n    };\n  }\n\n  function moveToFront() {\n    this.parentNode.appendChild(this);\n  }\n});\n\n// Compute the maximum cumulative length of any node in the tree.\nfunction maxLength(d) {\n  return d.length + (d.children ? d3.max(d.children, maxLength) : 0);\n}\n\n// Set the radius of each node by recursively summing and scaling the distance from the root.\nfunction setRadius(d, y0, k) {\n  d.radius = (y0 += d.length) * k;\n  if (d.children) d.children.forEach(function(d) { setRadius(d, y0, k); });\n}\n\n// Set the color of each node by recursively inheriting.\nfunction setColor(d) {\n  d.color = color.domain().indexOf(d.name) >= 0 ? color(d.name) : d.parent ? d.parent.color : null;\n  if (d.children) d.children.forEach(setColor);\n}\n\n// Like d3.svg.diagonal.radial, but with square corners.\nfunction step(startAngle, startRadius, endAngle, endRadius) {\n  var c0 = Math.cos(startAngle = (startAngle - 90) / 180 * Math.PI),\n      s0 = Math.sin(startAngle),\n      c1 = Math.cos(endAngle = (endAngle - 90) / 180 * Math.PI),\n      s1 = Math.sin(endAngle);\n  return \"M\" + startRadius * c0 + \",\" + startRadius * s0\n      + (endAngle === startAngle ? \"\" : \"A\" + startRadius + \",\" + startRadius + \" 0 0 \" + (endAngle > startAngle ? 1 : 0) + \" \" + startRadius * c1 + \",\" + startRadius * s1)\n      + \"L\" + endRadius * c1 + \",\" + endRadius * s1;\n}\n\nd3.select(self.frameElement).style(\"height\", outerRadius * 2 + \"px\");\n\n</script>", "description": "Tree of Life", "created_at": "2015-10-19T18:29:51Z", "updated_at": "2016-08-17T11:13:17Z", "api": ["d3.scale.category10", "d3.layout.cluster", "d3.ascending", "d3.select", "d3.text", "d3.transition", "d3.max"], "readme": "A re-implementation of Jason Davies\u2019 [Phylogenetic Tree of Life](https://www.jasondavies.com/tree-of-life/), with faded gray lines to connect the leaf nodes of the tree to their corresponding labels inspired by [a figure from *Nature*](http://www.nature.com/nature/journal/v462/n7276/fig_tab/nature08656_F1.html).\n\nThis implementation modifies the depth of interior nodes in a [cluster layout](https://github.com/mbostock/d3/wiki/Cluster-Layout) to show branch lengths. Toggle the checkbox in the top-left corner to show or hide branch lengths, and mouseover a label to highlight its path to the root.\n", "uid": "mbostock_c034d66572fd6bd6815a"}, {"code": "<script>\n        var margin = { top: 20, right: 10, bottom: 20, left: 10 };\n        var width = 900 - margin.left - margin.right;\n        var height = 900 - margin.top - margin.bottom;\n        var diameter = 900;\n                var tree = d3.layout.tree()\n                    .size([360, diameter / 2 - 150])\n                    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n                var diagonal = d3.svg.diagonal.radial()\n                    .projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });\n                var svg = d3.select(\"body\").append(\"svg\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                    .attr(\"id\", \"mainsvg\")\n                  .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + diameter / 2 + \",\" + diameter / 2 + \")\");\n                svg.append(\"svg:rect\")\n                    .attr(\"x\", -445)\n                    .attr(\"y\", 285)\n                    .attr(\"width\", 75)\n                    .attr(\"height\", 100)\n                    .attr(\"stroke\", \"gray\")\n                    .attr(\"fill\", \"#ddd\");\n                svg.append(\"text\")\n                    .attr(\"dx\", -430)\n                    .attr(\"dy\", 300)\n                    .text(\"Div I-FBS\")\n                    .attr(\"class\", \"DivIFBS\");\n                svg.append(\"text\")\n                    .attr(\"dx\", -430)\n                    .attr(\"dy\", 315)\n                    .text(\"Div I-FCS\")\n                    .attr(\"class\", \"DivIFCS\");\n                svg.append(\"text\")\n                    .attr(\"dx\", -430)\n                    .attr(\"dy\", 330)\n                    .text(\"Div II\")\n                    .attr(\"class\", \"DivII\");\n                svg.append(\"text\")\n                    .attr(\"dx\", -430)\n                    .attr(\"dy\", 345)\n                    .text(\"Div III\")\n                    .attr(\"class\", \"DivIII\");\n                svg.append(\"text\")\n                    .attr(\"dx\", -430)\n                    .attr(\"dy\", 360)\n                    .text(\"NAIA\")\n                    .attr(\"class\", \"NAIA\");\n                svg.append(\"text\")\n                    .attr(\"dx\", -430)\n                    .attr(\"dy\", 375)\n                    .text(\"Other\")\n                    .attr(\"class\", \"NCCAA\");\n                d3.json(\"5deg-neb2014.txt\", function (error, root) {\n                  if (error) throw error;\n                  var nodes = tree.nodes(root),\n                      links = tree.links(nodes);\n                  var link = svg.selectAll(\".link\")\n                      .data(links)\n                    .enter().append(\"path\")\n                       .attr(\"class\", function(d){ return d.source.route ; } )\n                       .attr(\"d\", diagonal);\n                  var node = svg.selectAll(\".node\")\n                      .data(nodes)\n                    .enter().append(\"g\")\n                      .attr(\"class\", \"node\")\n                      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; });\n                  node.append(\"circle\")\n                      .attr(\"r\", 4.5);\n                  node.append(\"svg:a\")\n                      .attr(\"xlink:href\", function(d){return d.url;})\n                    .append(\"text\")\n                      .attr(\"dy\", \".31em\")\n                      .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n                      .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n                      .text(function(d) { return d.name; })\n                      .attr(\"class\", function(d) { return d.div; });\n                });\n                d3.select(self.frameElement).style(\"height\", diameter - 150 + \"px\");\n    </script>", "description": "Five degrees of college football", "created_at": "2015-10-16T16:15:15Z", "updated_at": "2015-10-16T19:03:05Z", "api": ["d3.layout.tree", "d3.svg.diagonal.radial", "d3.select", "d3.json"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nMitch Parker<br />\nmitch dot parker at outlook.com<br />\n<a href=\"twitter.com/mitchparker\">@mitchparker</a><br />\n<a href=\"www.myteamisbetterthanyourteam.com\" target=\"_blank\">www.myteamisbetterthanyourteam.com</a><br />\n\nMy first attempt at using D3.js.\n\nUsing data that was dynamically generated for www.myteamisbetterthanyourteam.com, I built a Cluster Dendogram that shows the five degrees of \"transitive property\" of college football for Nebraska in 2014.  \n\nI added to original code 3 things:\n* classes to add color to teams depending on NCAA division, driven by JSON text file\n* static key in bottom left\n* links for each of the teams, setting the new team as the center of the dendogram using a new JSON file that was dynamically generated\n\nThe class and href for each team are dynamically generated in the JSON file, but are exposed by the modified D3.\n\nThe dendogram is easier to view with blockbuilder in side-by-side mode or by opening in a new window.", "uid": "mitchparker_57aaa9eb663b18d90184"}, {"code": "<script>\n\n// get the data\nd3.csv(\"force.csv\", function(error, links) {\n\nvar nodes = {};\n\n// Compute the distinct nodes from the links.\nlinks.forEach(function(link) {\n    link.source = nodes[link.source] || \n        (nodes[link.source] = {name: link.source});\n    link.target = nodes[link.target] || \n        (nodes[link.target] = {name: link.target});\n    link.value = +link.value;\n});\n\nvar width = 960,\n    height = 500;\n\nvar force = d3.layout.force()\n    .nodes(d3.values(nodes))\n    .links(links)\n    .size([width, height])\n    .linkDistance(100)\n    .charge(-400)\n    .on(\"tick\", tick)\n    .start();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n// build the arrow.\nsvg.append(\"svg:defs\").selectAll(\"marker\")\n    .data([\"end\"])      // Different link/path types can be defined here\n  .enter().append(\"svg:marker\")    // This section adds in the arrows\n    .attr(\"id\", String)\n    .attr(\"viewBox\", \"0 -5 10 10\")\n    .attr(\"refX\", 15)\n    .attr(\"refY\", -1.5)\n    .attr(\"markerWidth\", 6)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\")\n  .append(\"svg:path\")\n    .attr(\"d\", \"M0,-5L10,0L0,5\");\n\n// add the links and the arrows\nvar path = svg.append(\"svg:g\").selectAll(\"path\")\n    .data(force.links())\n  .enter().append(\"svg:path\")\n//    .attr(\"class\", function(d) { return \"link \" + d.type; })\n    .attr(\"class\", \"link\")\n    .attr(\"marker-end\", \"url(#end)\");\n\n// define the nodes\nvar node = svg.selectAll(\".node\")\n    .data(force.nodes())\n  .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .call(force.drag);\n\n// add the nodes\nnode.append(\"circle\")\n    .attr(\"r\", 25);\n  \n// add rectangles\nnode.append(\"rect\")\n    .attr(\"width\", 50)\n    .attr(\"height\", 50)\n    .attr(\"x\", -25)\n    .attr(\"y\", -25);\n\n// add the text \nnode.append(\"text\")\n    .attr(\"x\", -12)\n    .attr(\"dy\", \".35em\")\n    .text(function(d) { return d.name; });\n\n// add the curvy lines\nfunction tick() {\n    path.attr(\"d\", function(d) {\n        var dx = d.target.x - d.source.x,\n            dy = d.target.y - d.source.y,\n            dr = Math.sqrt(dx * dx + dy * dy);\n        return \"M\" + \n            d.source.x + \",\" + \n            d.source.y + \"A\" + \n            dr + \",\" + dr + \" 0 0,1 \" + \n            d.target.x + \",\" + \n            d.target.y;\n    });\n\n    node\n        .attr(\"transform\", function(d) { \n  \t    return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n}\n\n});\n\n</script>", "description": "Basic Directional Force Layout Diagram", "created_at": "2015-10-14T11:37:05Z", "updated_at": "2015-10-14T11:37:05Z", "api": ["d3.csv", "d3.layout.force", "d3.values", "d3.select"], "readme": "This is an adaption of two of Mike Bostock's force layout examples ([Mobile Patent Suits](http://bl.ocks.org/mbostock/1153292) and [Force-Directed Graph with Mouseover](http://bl.ocks.org/mbostock/2706022)).\n\nThis particular graph is intended as a 'basic' example of a directional force layout graph (hence the arrows) and I intend to add additional examples with variations.", "uid": "pberden_06fb68c99092ecddb9a7"}, {"code": "<script>\n    var width = 960,\n    margin = 20,\n    height = 500,\n    svg = d3.select('svg'),\n    origin = svg.append('g')\n        .attr('transform', 'translate(' + width*3/5 + ',' + height/2 + ')'),\n    rScale = d3.scale.linear()\n        .domain([-10, 110])\n        .range([0, height/2 - margin]),\n    yScale = function(day, temp) { return -Math.cos(angleScale(day)*Math.PI/180)*rScale(parseInt(temp))},\n    xScale = function(day, temp) { return Math.sin(angleScale(day)*Math.PI/180)*rScale(parseInt(temp))},\n    angleScale = d3.scale.linear()\n        .range([0, 360]);\n\n    var drawRadial = function(chart, cl, data, low, high){\n      chart.selectAll('line.' + cl)\n        .data(data)\n        .enter().append('line')\n        .attr('x1', function(d) { return xScale(d.index, d[low])})\n        .attr('x2', function(d) { return xScale(d.index, d[high])})\n        .attr('y1', function(d) { return yScale(d.index, d[low])})\n        .attr('y2', function(d) { return yScale(d.index, d[high])})\n        .attr('class', cl);\n    };\n\n    d3.json('ny.json', function(err, json){\n\n        angleScale.domain([0, json.values.length - 1]);\n\n        var min = d3.min(json.values, d => parseInt(d.recLow)),\n        max = d3.max(json.values, d => parseInt(d.recHigh));\n\n        var months = [];\n        //find index for months based on data\n        json.values.forEach((d, i) => {\n            var month = d.date.split('-')[1],\n            prevDaysMonth = ( i === 0 ) ? undefined : json.values[i - 1].date.split('-')[1];\n            if (i === 0 || month != prevDaysMonth){\n                months.push({\n                    month: month,\n                    index: i\n                });\n            }\n        })\n\n        //circle axis\n        origin.selectAll('circle.axis-green')\n            .data([40, 60, 80, 100])\n            .enter().append('circle')\n            .attr('r', function(d) { return rScale(d)})\n            .attr('class', 'axis record')\n\n        //record low and high\n        drawRadial(origin, 'record', json.values, 'recLow', 'recHigh')\n\n        //avg low and high\n        drawRadial(origin, 'avg', json.values, 'avgLow', 'avgHigh')\n\n        //this year's temperature\n        var thisYear = json.values.filter(function(d){ return d.min });\n\n        drawRadial(origin, 'year', thisYear, 'min', 'max')\n\n        var lowLower = json.values.filter(function(d){ return d.min && parseInt(d.min) < parseInt(d.avgLow)});\n        drawRadial(origin, 'yearLow', lowLower, 'min', 'avgLow')\n\n        var highHigher = json.values.filter(function(d){ return d.min && parseInt(d.max) > parseInt(d.avgHigh)});\n        drawRadial(origin, 'yearHigh', highHigher, 'max', 'avgHigh')\n\n        var circleAxis = [0, 32, 60, 80, 100]\n        circleAxis = circleAxis.map( function(d){ return {temp: d, index: 320}})\n\n        //temperature axis\n        origin.selectAll('circle.axis-white')\n            .data(circleAxis)\n            .enter().append('circle')\n            .attr('r', function(d){ return rScale(d.temp)})\n            .attr('class', 'axis')\n\n        //temperature axis labels\n        origin.selectAll('text.temp')\n            .data(circleAxis)\n            .enter().append('text')\n            .attr('x', function(d){ return xScale(d.index, d.temp)})\n            .attr('y', function(d){ return yScale(d.index, d.temp)})\n            .text(function(d){ return d.temp + ''})\n            .attr('class', 'temp');\n\n        //axis lines\n        var axis = origin.append('g');\n\n        axis.selectAll('line.axis')\n          .data(months)\n          .enter().append('line')\n          .attr('x2', function(d){ return xScale(d.index, 120)})\n          .attr('y2', function(d){ return  -yScale(d.index, 120)})\n          .attr('class', 'axis');\n\n        var monthLabels = months.filter( (d,i) => i%3 === 0)\n        //month labels\n        axis.selectAll('text.months')\n          .data(monthLabels)\n          .enter().append('text')\n          .attr('x', function(d){ return xScale(d.index, 110)})\n          .attr('y', function(d){ return yScale(d.index, 110)})\n          .text(function(d){ return d.month})\n          .attr('class', 'months');\n\n        //center for reference\n        axis.append('circle')\n            .attr('r', 3)\n            .attr('class', 'avg')\n\n        //title\n        svg.append('text')\n            .attr('x', 30)\n            .attr('y', 60)\n            .text(json.name)\n            .attr('class', 'title')\n\n        //subtitle\n        svg.append('text')\n            .attr('x', 30)\n            .attr('y', 100)\n            .text('Historical Weather Data')\n\n        //create legend\n        var legendScale = d3.scale.ordinal()\n            .domain(['Record', 'Average', 'This Year - within avg', 'This Year - beyond avg', ])\n            .range(['record', 'avg', 'beyond', 'year'])\n\n        //d3-legend\n        var legend = d3.legend.color()\n            .shapePadding(5)\n            .useClass(true)\n            .scale(legendScale);\n\n        svg.append('g')\n            .attr('transform', 'translate(30,120)')\n            .call(legend);\n\n\n    });\n\n\n    </script>", "description": "Annual Temp - New York 2015", "created_at": "2015-10-14T03:50:27Z", "updated_at": "2015-11-06T06:23:12Z", "api": ["d3.select", "d3.scale.linear", "d3.json", "d3.min", "d3.max", "d3.scale.ordinal", "d3.legend.color"], "readme": "## Weather Plot - New York 2015\n\nIn the example we're looking at historical weather data for New York provided by [intellicast.com](http://www.intellicast.com/) and [wunderground.com](http://www.wunderground.com/). Inspired by [weather-radicals.com](http://www.weather-radials.com/).\n\nThis example uses scales to roll your own radial projection by mapping out the x, y, and r positions. If you are creating a line or an area you can use d3's convenience functions d3.svg.line.radial and d3.svg.area.radial but this is a method you can use if you want to use different graphical elements in a circular layout.", "uid": "susielu_b6bdb82045c2aa8225f5"}, {"code": "<script>\n    var width = 960,\n    margin = 20,\n    height = 500,\n    svg = d3.select('svg'),\n    origin = svg.append('g')\n        .attr('transform', 'translate(' + width/2 + ',' + height/2 + ')'),\n    rScale = d3.scale.linear()\n        .domain([10, 110])\n        .range([0, height/2 - margin]),\n    yScale = (day, temp) => -Math.cos(angleScale(day)*Math.PI/180)*rScale(parseInt(temp)),\n    xScale = (day, temp) => Math.sin(angleScale(day)*Math.PI/180)*rScale(parseInt(temp)),\n    angleScale = d3.scale.linear()\n        .range([0, 360]);\n\n    d3.json('temp.json', function(err, json){\n\n        angleScale.domain([0, json.length - 1]);\n\n        var min = d3.min(json, d => parseInt(d.recLow)),\n        max = d3.max(json, d => parseInt(d.recHigh));\n\n        var months = [];\n        //find index for months based on data\n        json.forEach((d, i) => {\n            var month = d.date.split('-')[1],\n            prevDaysMonth = ( i === 0 ) ? undefined : json[i - 1].date.split('-')[1];\n            if (i === 0 || month != prevDaysMonth){\n                months.push({\n                    month: month,\n                    index: i\n                });\n            }\n        })\n\n        //circle axis\n        origin.selectAll('circle.axis-green')\n            .data([40, 60, 80, 100])\n            .enter().append('circle')\n            .attr('r', (d) => rScale(d))\n            .attr('class', 'axis record')\n\n        //record low and high\n        origin.selectAll('line.record')\n          .data(json)\n          .enter().append('line')\n          .attr('x1', (d, i) => xScale(i, d.recLow))\n          .attr('x2', (d, i) => xScale(i, d.recHigh))\n          .attr('y1', (d, i) => yScale(i, d.recLow))\n          .attr('y2', (d, i) => yScale(i, d.recHigh))\n          .attr('class', 'record');\n\n        //avg low and high\n        origin.selectAll('line.avg')\n          .data(json)\n          .enter().append('line')\n          .attr('x1', (d, i) => xScale(i, d.avgLow))\n          .attr('x2', (d, i) => xScale(i, d.avgHigh))\n          .attr('y1', (d, i) => yScale(i, d.avgLow))\n          .attr('y2', (d, i) => yScale(i, d.avgHigh))\n          .attr('class', 'avg');\n\n        origin.selectAll('circle.axis-white')\n            .data([40, 60, 80, 100])\n            .enter().append('circle')\n            .attr('r', (d) => rScale(d))\n            .attr('class', 'axis')\n\n        //axis lines\n        origin.selectAll('line.axis')\n          .data(months)\n          .enter().append('line')\n          .attr('x2', d => {\n            return xScale(d.index, 120)})\n          .attr('y2', d => -yScale(d.index, 120))\n          .attr('class', 'axis');\n\n        //center for reference\n        origin.append('circle')\n            .attr('r', 3)\n            .attr('class', 'avg')\n\n        //title\n        svg.append('text')\n            .attr('x', 30)\n            .attr('y', 60)\n            .text('San Francisco')\n            .attr('class', 'title')\n\n        //subtitle\n        svg.append('text')\n            .attr('x', 30)\n            .attr('y', 100)\n            .text('Historical Weather Data')\n\n        //create legend\n        var legendScale = d3.scale.ordinal()\n            .domain(['Record', 'Average'])\n            .range(['record', 'avg'])\n\n        //d3-legend\n        var legend = d3.legend.color()\n            .shapePadding(5)\n            .useClass(true)\n            .scale(legendScale);\n\n        svg.append('g')\n            .attr('transform', 'translate(30,120)')\n            .call(legend);\n\n    });\n\n\n    </script>", "description": "Radar Plot Annual Temperature", "created_at": "2015-10-13T06:29:48Z", "updated_at": "2016-04-15T04:21:49Z", "api": ["d3.select", "d3.scale.linear", "d3.json", "d3.min", "d3.max", "d3.scale.ordinal", "d3.legend.color"], "readme": "## Radar Plot Example\n\nIn the example we're looking at historical weather data for San Francisco provided by [intellicast.com](http://www.intellicast.com/).", "uid": "susielu_4c7a8a89a25bd86a61a8"}, {"code": "<script>\n        var current_key = 'rWar';\n\n        var minyr = 1899;\n        var maxyr = 9999;\n        var minwar = 48;\n        var maxwar = 10000;\n        var plid_font_size = 10;\n\n        var margin = {\n                top: 20,\n                right: 150,\n                bottom: 80,\n                left: 80\n            },\n            width = 960 - margin.left - margin.right,\n            height = 4500 - margin.top - margin.bottom;\n\n        var sliders;\n        var metric_keys = ['rWar', 'fWar', 'rwa2', 'rwa3', 'rwa4',\n            'rwa5', 'rwa7', 'rwb3', 'rwb5', 'rwb7'\n        ];\n\n        var metric_d = ['career rWar (baseball reference)', 'career fWar (fangraphs)', 'career wins-above-2 rWar', 'career wins-above-3 rWar', 'career wins-above-4 rWar', 'career wins-above-5 rWar', 'career wins-above-7 rWar', 'best 3-year-rWar total', 'best 5-year-rWar total', 'best 7-year-rWar total'];\n\n        var metric_descriptions = {}\n        _.forEach(metric_keys, function(k, i) {\n            metric_descriptions[k] = metric_d[i];\n        });\n\n        var x = d3.scale.linear()\n            .rangeRound([0, width]);\n\n        var y = d3.scale.ordinal()\n            .rangeRoundBands([0, height], .1);\n\n        var opScale = d3.scale.linear()\n            .range([0.85, 0.85])\n            .domain([1901, 2000]);\n\n        var color;\n        if (metric_keys.length <= 11) {\n            color = d3.scale.ordinal()\n                .range(['#67001f', '#b2182b ', '#d6604d ', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061']);\n        } else {\n            color = d3.scale.category20b()\n                .domain(d3.range(metric_keys.length));\n        }\n\n        var yAxis = d3.svg.axis()\n            .scale(y)\n            .orient(\"left\");\n\n        var xAxis = d3.svg.axis()\n            .scale(x)\n            .orient(\"top\")\n            .tickFormat(d3.format(\".2s\"));\n\n        var get_top = function(i) {\n            return 20 * i;\n        }\n\n        var svg = d3.select(\"body\").append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n        var metric_weights = {};\n        var player_idx = {};\n\n        var stackedData = function(data) {\n            data.forEach(function(d) {\n                var x0 = 0;\n                d.metrics = color.domain().map(function(name) {\n                    return {\n                        name: name,\n                        x0: x0,\n                        x1: x0 += +d[name]\n                    };\n                });\n                d.total = d.metrics[d.metrics.length - 1].x1;\n            });\n        };\n\n        /***************************************************************/\n        /***************************************************************/\n\n        d3.csv(\"HOF_metrics.csv\", function(error, idata) {\n\n\n            var data;\n\n            var sort_by_total = function(data) {\n\n                data.sort(function(a, b) {\n                    return b.wtotal - a.wtotal;\n                });\n\n                var oset;\n\n                _.forEach(data, function(d, i) {\n                    if (typeof(d.idx) === typeof(undefined)) {\n                        d.idx = i;\n                    }\n                    d.oldidx = d.idx;\n                    d.idx = i;\n                    player_idx[d.plid] = d.idx;\n                    d.oset = 0;\n                });\n\n            };\n\n\n            var weighted_total = function(data, weights) {\n                _.forEach(data, function(d) {\n                    var ss = 0.0;\n                    var ww = 0.0;\n                    _.mapObject(weights, function(val, key) {\n                        ss += 1.0 * val * d[key];\n                        ww += 1.0 * val;\n                    })\n                    if (ww > 0) {\n                        d.wtotal = ss / ww;\n                    } else {\n                        d.wtotal = 0.0;\n                    }\n                })\n            };\n\n\n            data = _.filter(idata, function(d) {\n                return (\n                    (parseFloat(d.rWar) >= minwar && parseFloat(d.rWar) <= maxwar) && (parseFloat(d.minyr) >= minyr && parseFloat(d.minyr) <= maxyr)\n                );\n            });\n\n            metric_weights = {};\n            _.forEach(metric_keys, function(k) {\n                metric_weights[k] = 50.0;\n            });\n\n            color.domain(d3.keys(data[0]).filter(function(key) {\n                return _.contains(metric_keys, key);\n            }));\n\n            stackedData(data);\n            weighted_total(data, metric_weights);\n            sort_by_total(data);\n\n            x.domain([0, d3.max(data, function(d) {\n                return d.total;\n            })]);\n\n\n            y.domain(data.map(function(d, i) {\n                return i;\n            }));\n\n            sliders = d3.select(\"div.sliders\")\n                .append('g')\n                .style('position', 'absolute')\n                .style('width', '240px')\n                .style('top', '20px')\n                .style('right', '20px');\n\n            sliders.selectAll('input')\n                .data(metric_keys)\n                .enter()\n                .append('input')\n                .attr('class', 'metric_slider')\n                .attr('id', function(d, i) {\n                    return 'metric_slider_' + d;\n                })\n                .attr('type', 'range')\n                .attr('min', 0)\n                .attr('max', 100)\n                .attr('value', function(d) {\n                    return d.value;\n                })\n                .style('top', function(d, i) {\n                    return get_top(i) + \"px\";\n                })\n                .style('right', \"10px\")\n                .on('change', function(d, i) {\n                    d.value = parseInt(this.value);\n                    metric_weights[d] = this.value;\n                    weighted_total(data, metric_weights);\n                    sort_by_total(data);\n                    do_sort(data);\n                });\n\n            svg.append('text')\n                .text('player-label')\n                .attr('id', 'player-label')\n                .attr('x', 800)\n                .attr('y', 20)\n                .attr('text-anchor', 'end')\n                .style('position', 'fixed')\n                .style('top', 100)\n                .style('right', 20)\n                .style('font-size', 18);\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xAxis)\n                .selectAll(\"text\")\n                .attr(\"dx\", \"-.8em\")\n                .attr(\"dy\", \".15em\")\n                .style('text-anchor', 'end')\n                .attr(\"transform\", \"rotate(-65)\")\n                .attr('font-size', '6px')\n                .attr('fint-family', 'sans-serif')\n                .attr('class', 'xaxis_label');\n\n            var ya = svg.append(\"g\")\n                .attr(\"class\", \"y axis\")\n                .call(yAxis)\n                .selectAll(\"text\")\n                .text(function(d, i) {\n                    //                    return data[i].pname;\n                    return i;\n                })\n                .attr(\"class\", \"ytext\")\n                .attr(\"transform\", \"rotate(0)\")\n                .attr(\"y\", 6)\n                .attr(\"dy\", \".71em\")\n                .attr(\"font-size\", \"8px\")\n                .style(\"text-anchor\", \"end\");\n\n            var bar_containers = svg.selectAll(\".bar_containers\")\n                .data(data)\n                .enter().append(\"g\")\n                .attr(\"class\", \"bar_containers\")\n                .attr(\"transform\", function(d, i) {\n                    return \"translate(0,\" + y(i) + \")\";\n                });\n\n            var plid = svg.selectAll(\".plid\")\n                .data(data)\n                .enter().append(\"g\")\n                .attr(\"class\", \"plid\")\n                .attr(\"transform\", function(d, i) {\n                    return \"translate(0,\" + y(i) + \")\";\n                });\n\n            d3.selectAll(\".bar_containers\")\n                .selectAll(\"rect\")\n                .data(function(d) {\n                    return _.map(d.metrics, function(x) {\n                        return {\n                            'name': x.name,\n                            'x0': x.x0,\n                            'x1': x.x1,\n                            'pname': d.pname,\n                            'plid': d.plid,\n                            'birthYear': d.birthYear,\n                            'minyr': d.minyr,\n                            'idx': d.idx,\n                            'wtotal': d.wtotal\n                        };\n                    })\n                })\n                .enter()\n                .append(\"rect\")\n                .attr(\"height\", y.rangeBand())\n                .attr(\"x\", function(d, i) {\n                    return x(d.x0);\n                })\n                .attr(\"width\", function(d, i) {\n                    return x(d.x1) - x(d.x0);\n                })\n                .style(\"text-anchor\", \"end\")\n                .style(\"fill\", function(d) {\n                    return color(d.name);\n                })\n                .style('opacity', function(d) {\n                    return opScale(d.minyr);\n                })\n                .on('click', function(d, i) {\n                    //                    current_key = metric_keys[i];\n                    //                    sort_by_weight(data, metric_weights);\n                    //                    do_sort(data);\n                    ;\n                })\n                .on('mouseover', function(d, i) {\n                    d3.selectAll('#player-label')\n                        .text(d.pname + \" \" + d.wtotal.toFixed(1))\n                        .attr(\"y\", function() {\n                            return y(player_idx[d.plid]);\n                        })\n                        .style('opacity', 1)\n                })\n                .on('mouseout', function(d, i) {\n                    d3.selectAll('#player-label')\n                        .style('opacity', 0);\n                });\n\n\n            d3.selectAll(\".bar_containers\")\n                .append(\"text\")\n                .text(function(d, i) {\n                    return d.pname;\n                })\n                .style(\"font-size\", plid_font_size)\n                .style(\"fill\", \"white\")\n                .attr(\"transform\", function(d, i) {\n                    var x = parseFloat(y.rangeBand() / 2) + 0 * parseFloat(plid_font_size) + 3;\n                    return \"translate(20,\" + x.toString() + \")\";\n                });\n\n\n            var do_sort = function(data) {\n\n                d3.selectAll(\".bar_containers\")\n                    .transition()\n                    .duration(1200)\n                    .attr(\"transform\", function(d, i) {\n                        var dx = Math.random() * width * 0.1;\n                        return \"translate(\" + dx + \",\" + y(d.oldidx) + \")\";\n                    })\n                    .transition()\n                    .duration(1800)\n                    .attr(\"transform\", function(d, i) {\n                        return \"translate(\" + x(d.oset) + \",\" + y(d.idx) + \")\";\n                    })\n            };\n\n\n            var legend = svg.selectAll(\".legend\")\n                .data(color.domain().slice().reverse())\n                .enter().append(\"g\")\n                .attr(\"class\", \"legend\")\n                .attr(\"transform\", function(d, i) {\n                    return \"translate(0,\" + i * 20 + \")\";\n                });\n\n\n            legend.append(\"rect\")\n                .attr(\"x\", width + margin.right - 18)\n                .attr(\"width\", 18)\n                .attr(\"height\", 18)\n                .style(\"fill\", color)\n                .on('click', function(d, i) {\n                    current_key = d;\n                    //sort_by_weight(data, metric_weights);\n                    do_sort(data);\n                })\n                .on(\"mouseover\", function(d, i) {;\n                    d3.select('#legend-hover-text')\n                        .text(function() {\n                            return metric_descriptions[d];\n                        })\n                        .style(\"opacity\", 1);\n                })\n                .on(\"mouseout\", function(d, i) {;\n                    d3.select('#legend-hover-text')\n                        .style(\"opacity\", 0);\n                });;\n\n            legend.append(\"text\")\n                .attr(\"x\", width + margin.right - 144)\n                .attr(\"y\", 5)\n                .attr(\"dy\", \".35em\")\n                .attr('id', 'legend-hover-text')\n                .style(\"text-anchor\", \"end\")\n                .text(function(d) {\n                    return d;\n                })\n                .style('opacity', 0);\n\n\n            legend.append(\"text\")\n                .attr(\"x\", width + margin.right - 24)\n                .attr(\"y\", 9)\n                .attr(\"dy\", \".35em\")\n                .style(\"text-anchor\", \"end\")\n                .text(function(d) {\n                    return d;\n                });\n\n        });\n\n    </script>", "description": "HOF selector - bar chart - test iv", "created_at": "2015-10-10T04:57:11Z", "updated_at": "2015-10-11T23:41:20Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.scale.category20b", "d3.range", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max", "d3.selectAll"], "readme": "", "uid": "bdilday_7d0d64c41fc5b9ddcf71"}, {"code": "<script>\n\nvar n = 4, // number of layers\n    m = 58, // number of samples per layer\n    stack = d3.layout.stack(),\n    layers = stack(d3.range(n).map(function() { return bumpLayer(m, .1); })),\n    yGroupMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y; }); }),\n    yStackMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); });\n\nvar margin = {top: 40, right: 10, bottom: 20, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .domain(d3.range(m))\n    .rangeRoundBands([0, width], .08);\n\nvar y = d3.scale.linear()\n    .domain([0, yStackMax])\n    .range([height, 0]);\n\nvar color = d3.scale.linear()\n    .domain([0, n - 1])\n    .range([\"#aad\", \"#556\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickSize(0)\n    .tickPadding(6)\n    .orient(\"bottom\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar layer = svg.selectAll(\".layer\")\n    .data(layers)\n  .enter().append(\"g\")\n    .attr(\"class\", \"layer\")\n    .style(\"fill\", function(d, i) { return color(i); });\n\nvar rect = layer.selectAll(\"rect\")\n    .data(function(d) { return d; })\n  .enter().append(\"rect\")\n    .attr(\"x\", function(d) { return x(d.x); })\n    .attr(\"y\", height)\n    .attr(\"width\", x.rangeBand())\n    .attr(\"height\", 0);\n\nrect.transition()\n    .delay(function(d, i) { return i * 10; })\n    .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n    .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); });\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nd3.selectAll(\"input\").on(\"change\", change);\n\nvar timeout = setTimeout(function() {\n  d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n}, 2000);\n\nfunction change() {\n  clearTimeout(timeout);\n  if (this.value === \"grouped\") transitionGrouped();\n  else transitionStacked();\n}\n\nfunction transitionGrouped() {\n  y.domain([0, yGroupMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"x\", function(d, i, j) { return x(d.x) + x.rangeBand() / n * j; })\n      .attr(\"width\", x.rangeBand() / n)\n    .transition()\n      .attr(\"y\", function(d) { return y(d.y); })\n      .attr(\"height\", function(d) { return height - y(d.y); });\n}\n\nfunction transitionStacked() {\n  y.domain([0, yStackMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n      .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); })\n    .transition()\n      .attr(\"x\", function(d) { return x(d.x); })\n      .attr(\"width\", x.rangeBand());\n}\n\n// Inspired by Lee Byron's test data generator.\nfunction bumpLayer(n, o) {\n\n  function bump(a) {\n    var x = 1 / (.1 + Math.random()),\n        y = 2 * Math.random() - .5,\n        z = 10 / (.1 + Math.random());\n    for (var i = 0; i < n; i++) {\n      var w = (i / n - y) * z;\n      a[i] += x * Math.exp(-w * w);\n    }\n  }\n\n  var a = [], i;\n  for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n  for (i = 0; i < 5; ++i) bump(a);\n  return a.map(function(d, i) { return {x: i, y: Math.max(0, d)}; });\n}\n\n</script>", "description": "Stacked-to-Grouped Bars", "created_at": "2015-10-10T01:11:19Z", "updated_at": "2015-10-10T01:11:19Z", "api": ["d3.layout.stack", "d3.range", "d3.max", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.selectAll"], "readme": "Switch between stacked and grouped layouts using sequenced transitions! Animations preserve object constancy and allow the user to follow the data across views. Animation design by [Heer and Robertson](http://vis.berkeley.edu/papers/animated_transitions/). Colors and data generation inspired by [Byron and Wattenberg](http://www.leebyron.com/else/streamgraph/).\n", "uid": "voltdatalab_227af1477ad2a7e2a55e"}, {"code": "<script>\n  //SVG   \nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", function(error, data) {\n\t data.forEach(function(d) {\n        d.value = +d.value;\n    });\n\n   //x, y  \n  var x = d3.scale.ordinal()\n      .domain(data.map(function(d) { return d.area; }))\n      .rangeRoundBands([0, width], .3)\n\n  var y = d3.scale.linear()\n      .domain([0, d3.max(data, function(d) { return d.value; })])\n      .range([height, 0]);\n\n  var xAxis = d3.svg.axis()\n      .scale(x)\n      .orient(\"bottom\");\n\n  var yAxis = d3.svg.axis()\n      .scale(y)\n      .orient(\"left\")\n      .ticks(5);\n\n \n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n    svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.area); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); })\n      .attr(\"fill\",\"#049DBF\");\n      \n   svg.selectAll(\".text\")\n      .data(data)\n      .enter().append(\"text\")\n      .attr(\"class\", \"text\")\n      .attr(\"x\", function(d) { return x(d.area); })\n      .attr(\"y\", function(d) { return y(d.value); })\n      .text(function(d) { return d.value;})\n      .attr(\"font-size\",\"12px\")\n      .attr(\"fill\",\"#049DBF\")\n      .attr(\"text-anchor\",\"start\");\n\n\n});\n\t</script>", "description": "", "created_at": "2015-10-04T03:47:49Z", "updated_at": "2015-10-04T03:47:50Z", "api": ["d3.select", "d3.csv", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis"], "readme": "", "uid": "ssongalice_2b57db11b3584e7fa826"}, {"code": "<script>\n\nvar states = [],\n    selectedStates = [\"MA\", \"MD\", \"ME\", \"MI\", \"MN\", \"MO\", \"MS\", \"MT\"];\n\nd3.select(\"#grid\").text().split(\"\\n\").forEach(function(line, i) {\n  var re = /\\w+/g, m;\n  while (m = re.exec(line)) states.push({\n    name: m[0],\n    selected: selectedStates.indexOf(m[0]) >= 0,\n    x: m.index / 3,\n    y: i\n  });\n});\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar gridWidth = d3.max(states, function(d) { return d.x; }) + 1,\n    gridHeight = d3.max(states, function(d) { return d.y; }) + 1,\n    cellSize = 40;\n\nvar state = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\")\n  .selectAll(\".state\")\n    .data(states)\n  .enter().append(\"g\")\n    .attr(\"class\", function(d) { return \"state\" + (d.selected ? \" state--selected\" : \"\"); })\n    .attr(\"transform\", function(d) { return \"translate(\" + (d.x - gridWidth / 2) * cellSize + \",\" + (d.y - gridHeight / 2) * cellSize + \")\"; });\n\nstate.append(\"rect\")\n    .attr(\"x\", -cellSize / 2)\n    .attr(\"y\", -cellSize / 2)\n    .attr(\"width\", cellSize - 1)\n    .attr(\"height\", cellSize - 1);\n\nstate.append(\"text\")\n    .attr(\"dy\", \".35em\")\n    .text(function(d) { return d.name; });\n\n</script>", "description": "State Grid", "created_at": "2015-09-24T23:54:33Z", "updated_at": "2015-09-24T23:54:35Z", "api": ["d3.select", "d3.max"], "readme": "A state grid inspired by an [Allison McCann graphic](http://fivethirtyeight.com/features/where-your-state-gets-its-money/) on state taxes. (See also [David Mimno\u2019s implementation](/mimno/4a904031a566a361f2b1).)\n\nMainly, this was an excuse to embed data as ASCII art.\n", "uid": "SpaceActuary_8da9fcf564d2f741898c"}, {"code": "<script>\n\n//These attributes could be derived from the data\nattributes = [\"carat\",\"depth\",\"table\",\"price\",\"x\",\"y\",\"z\"];\nattributeMatrix = [];\n\nattributes.forEach(function (a, x) {\n  attributes.forEach(function (b, y) {\n    //create an n-by-n matrix based on pairs of attributes\n    attributeMatrix.push({a: a, b: b, x: x, y: y})\n  })\n})\n\ncolors = d3.scale.ordinal().range([\"#827abf\", \"#f62150\", \"#6f89b6\", \"#f5e0b7\", \"#5b1e37\", \"#b9e3c5\"]);\n\nd3.csv(\"https://gist.githubusercontent.com/emeeks/6decab485fd2e02c9f1e/raw/9e4d0d1c427d565aa7e3099120f0eca342d035a2/diamonds.csv\", small_scatterplots);\n\nd3.select(\"body\").append(\"svg\").attr(\"height\", 1000).attr(\"width\", 1000)\n\nfunction small_scatterplots(data) {\n\n  //d3.csv pulls in data as strings so they need to be formatted as numbers\n  data.forEach(function (d) {\n    attributes.forEach(function (att) {\n      d[att] = parseFloat(d[att])\n    })\n  })\n\n  //create scales dynamically for each attribute's extent\n\n  scale = {};\n  attributes.forEach(function (att) {\n    scale[att] = d3.scale.linear();\n    attExtent = d3.extent(data, function (d) {return d[att]});\n    scale[att].domain(attExtent).range([5,95]);\n  })\n\n  //bind the matrix array to a grid of g elements\n  d3.select(\"svg\")\n  .selectAll(\"g\")\n  .data(attributeMatrix)\n  .enter()\n  .append(\"g\")\n  .attr(\"transform\", function (d) {return \"translate(\" + (d.x * 100) + \",\" + (d.y * 100) + \")\" });\n\n  d3.selectAll(\"g\")\n  .each(function (matrix, i) {\n    //index i is only used for coloring\n\n    //background/border\n    d3.select(this).append(\"rect\").style(\"fill\", \"white\").style(\"stroke\", \"black\").style(\"stroke-width\", 1)\n    .attr(\"height\", 100)\n    .attr(\"width\", 100);\n\n    //label\n    d3.select(this).append(\"text\")\n    .attr(\"x\", 50)\n    .style(\"text-anchor\", \"middle\")\n    .attr(\"y\", 15)\n    .text(matrix.a + \" - \" + matrix.b);\n\n    //scatterplot points\n    d3.select(this).selectAll(\"circle\")\n    .data(data)\n    .enter()\n    .append(\"circle\")\n    .attr(\"r\", 2)\n    .style(\"fill\", colors(i))\n    .attr(\"cx\", function (d) {return scale[matrix.a](d[matrix.a])})\n    .attr(\"cy\", function (d) {return 95 - scale[matrix.b](d[matrix.b])})\n  })\n\n\n}\n\n</script>", "description": "Simple Correlation Matrix", "created_at": "2015-09-22T22:09:12Z", "updated_at": "2016-03-16T15:46:02Z", "api": ["d3.scale.ordinal", "d3.csv", "d3.select", "d3.scale.linear", "d3.extent", "d3.selectAll"], "readme": "A very simple example of how to create a correlation matrix of scatterplots with dynamic scales.", "uid": "emeeks_671c0e7adfb1ce7060b8"}, {"code": "<script>\n\nd3.csv(\"police_killings.csv\", function(err, data) {\n  var allRaces = [\"Black\",\"Hispanic/Latino\",  \"White\", \"Unknown\", \"Asian/Pacific Islander\", \"Native American\"];\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"]\n  console.log(\"original data\", data)\n  // we want to \"pivot\" our data into deaths by month by race\n  // this is a rather ugly way to do it in javascript. would probably be easier\n  // to group the data in another tool (excel, google sheets, etc) and load that\n  var groups = {}\n  var races = {};\n  var gkey = \"raceethnicity\" // what we group by\n  var xkey = \"month\" // the x axis\n  // first we group all the events by race\n  data.forEach(function(d) {\n    if(!groups[d[gkey]]) {\n      groups[d[gkey]] = [d];\n    } else {\n      groups[d[gkey]].push(d)\n    }\n  })\n  var processed = [];\n  // we are making a \"layer\" for each race\n  allRaces.forEach(function(race,i) {\n    var xdata = {};\n    groups[race].forEach(function(event) {\n      if(!xdata[event[xkey]]) {\n        xdata[event[xkey]] = 1\n      } else {\n        xdata[event[xkey]]++;\n      }\n    })\n    // our \"result\" is an orered array with a count for each month\n    // (for the race we are currently working on)\n    var result = [];\n    months.forEach(function(g, j) {\n      result.push({ x: g, y: xdata[g] || 0 })\n    })\n    processed.push(result)\n  })\n  console.log(\"layer data\", processed)\n\n  var n = allRaces.length, // number of layers\n      m = processed.length, // number of samples per layer\n      stack = d3.layout.stack();\n\n  var layers = stack(processed); // calculate the stack layout\n\n  var yGroupMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y; }); })\n  var yStackMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); });\n\n  var margin = {top: 40, right: 10, bottom: 20, left: 10},\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n  var x = d3.scale.ordinal()\n      .domain(months)\n      .rangeRoundBands([0, width], .08);\n\n  var y = d3.scale.linear()\n      .domain([0, yStackMax])\n      .range([height, 0]);\n\n  var color = d3.scale.category20c()\n      .domain([0, n-1])\n\n  var xAxis = d3.svg.axis()\n      .scale(x)\n      .tickSize(0)\n      .tickPadding(6)\n      .orient(\"bottom\");\n\n  var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  var layer = svg.selectAll(\".layer\")\n      .data(layers)\n    .enter().append(\"g\")\n      .attr(\"class\", \"layer\")\n      .style(\"fill\", function(d, i) { return color(i); });\n\n  var rect = layer.selectAll(\"rect\")\n      .data(function(d) { return d; })\n    .enter().append(\"rect\")\n      .attr(\"x\", function(d) { return x(d.x); })\n      .attr(\"y\", height)\n      .attr(\"width\", x.rangeBand())\n      .attr(\"height\", 0);\n\n  rect.transition()\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n      .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  var legend = svg.selectAll(\".legend\")\n      .data(allRaces)\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", function(d,i) { return color(i) });\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n  d3.selectAll(\"input\").on(\"change\", change);\n\n  var timeout = setTimeout(function() {\n    d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(timeout);\n    if (this.value === \"grouped\") transitionGrouped();\n    else transitionStacked();\n  }\n\n  function transitionGrouped() {\n    y.domain([0, yGroupMax]);\n\n    rect.transition()\n        .duration(500)\n        .delay(function(d, i) { return i * 10; })\n        .attr(\"x\", function(d, i, j) { return x(d.x) + x.rangeBand() / n * j; })\n        .attr(\"width\", x.rangeBand() / n)\n      .transition()\n        .attr(\"y\", function(d) { return y(d.y); })\n        .attr(\"height\", function(d) { return height - y(d.y); });\n  }\n\n  function transitionStacked() {\n    y.domain([0, yStackMax]);\n\n    rect.transition()\n        .duration(500)\n        .delay(function(d, i) { return i * 10; })\n        .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n        .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); })\n      .transition()\n        .attr(\"x\", function(d) { return x(d.x); })\n        .attr(\"width\", x.rangeBand());\n  }\n});\n</script>", "description": "Stacked-to-Grouped Police Killings", "created_at": "2015-09-18T02:50:37Z", "updated_at": "2015-09-18T02:50:37Z", "api": ["d3.csv", "d3.layout.stack", "d3.max", "d3.scale.ordinal", "d3.scale.linear", "d3.scale.category20c", "d3.svg.axis", "d3.select", "d3.selectAll"], "readme": "Switch between stacked and grouped layouts using sequenced transitions! Animations preserve object constancy and allow the user to follow the data across views. Animation design by [Heer and Robertson](http://vis.berkeley.edu/papers/animated_transitions/). Colors and data generation inspired by [Byron and Wattenberg](http://www.leebyron.com/else/streamgraph/).\n\nPolice killings data for 2015 (up to June) downloaded from [FiveThirtyEight](https://github.com/fivethirtyeight/data/tree/master/police-killings)\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3943967'>Stacked-to-Grouped Bars</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/2b1446f496c3968f6ecd'>Stacked-to-Grouped Police Killings</a>", "uid": "Nastasi7_8e4b032ce21ee9291ee8"}, {"code": "<script>\n    var m = [20, 120, 20, 120],\n    w = 1280 - m[1] - m[3],\n    h = 800 - m[0] - m[2],\n    i = 0,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([h, w]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar vis = d3.select(\"body\").append(\"svg:svg\")\n    .attr(\"width\", w + m[1] + m[3])\n    .attr(\"height\", h + m[0] + m[2])\n  .append(\"svg:g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\nd3.json(\"http://mbostock.github.io/d3/talk/20111018/flare.json\", function(json) {\n  root = json;\n  root.x0 = h / 2;\n  root.y0 = 0;\n\n  function toggleAll(d) {\n    if (d.children) {\n      d.children.forEach(toggleAll);\n      toggle(d);\n    }\n  }\n\n  // Initialize the display to show a few nodes.\n  root.children.forEach(toggleAll);\n  toggle(root.children[1]);\n  toggle(root.children[1].children[2]);\n  toggle(root.children[9]);\n  toggle(root.children[9].children[0]);\n\n  update(root);\n});\n\nfunction update(source) {\n  var duration = d3.event && d3.event.altKey ? 5000 : 500;\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse();\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = vis.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"svg:g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", function(d) { toggle(d); update(d); });\n\n  nodeEnter.append(\"svg:circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"svg:text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = vis.selectAll(\"path.link\")\n      .data(tree.links(nodes), function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"svg:path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      })\n    .transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children.\nfunction toggle(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n}\n  </script>\n\n  <script>\n    o = {x:10,y:function(){},z:{},a:true,b:\"\"}\n   \tObject.getOwnPropertyNames(o).forEach(function(e) {\n      console.log(typeof o[e])\n    })\n  </script>", "description": "object graph", "created_at": "2015-09-17T19:45:45Z", "updated_at": "2015-09-17T19:45:45Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "## hello markdown\n\n\n\n\n\n\n\n\n\n\n\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/02e4e7f61c87bf83b3d0'>object graph</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/9f3099afe25f65a0e52b'>object graph</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/d74a7e06a1b54577820b'>object graph</a>", "uid": "georules_3a19a7e5bdd27ca57a08"}, {"code": "<script>\n\nd3.csv(\"police_killings.csv\", function(err, data) {\n  var allRaces = [\"Black\",\"Hispanic/Latino\",  \"White\", \"Unknown\", \"Asian/Pacific Islander\", \"Native American\"];\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"]\n  console.log(\"original data\", data)\n  // we want to \"pivot\" our data into deaths by month by race\n  // this is a rather ugly way to do it in javascript. would probably be easier\n  // to group the data in another tool (excel, google sheets, etc) and load that\n  var groups = {}\n  var races = {};\n  var gkey = \"raceethnicity\" // what we group by\n  var xkey = \"month\" // the x axis\n  // first we group all the events by race\n  data.forEach(function(d) {\n    if(!groups[d[gkey]]) {\n      groups[d[gkey]] = [d];\n    } else {\n      groups[d[gkey]].push(d)\n    }\n  })\n  var processed = [];\n  // we are making a \"layer\" for each race\n  allRaces.forEach(function(race,i) {\n    var xdata = {};\n    groups[race].forEach(function(event) {\n      if(!xdata[event[xkey]]) {\n        xdata[event[xkey]] = 1\n      } else {\n        xdata[event[xkey]]++;\n      }\n    })\n    // our \"result\" is an orered array with a count for each month\n    // (for the race we are currently working on)\n    var result = [];\n    months.forEach(function(g, j) {\n      result.push({ x: g, y: xdata[g] || 0 })\n    })\n    processed.push(result)\n  })\n  console.log(\"layer data\", processed)\n\n  var n = allRaces.length, // number of layers\n      m = processed.length, // number of samples per layer\n      stack = d3.layout.stack();\n\n  var layers = stack(processed); // calculate the stack layout\n\n  var yGroupMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y; }); })\n  var yStackMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); });\n\n  var margin = {top: 40, right: 10, bottom: 20, left: 10},\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n  var x = d3.scale.ordinal()\n      .domain(months)\n      .rangeRoundBands([0, width], .08);\n\n  var y = d3.scale.linear()\n      .domain([0, yStackMax])\n      .range([height, 0]);\n\n  var color = d3.scale.category20c()\n      .domain([0, n-1])\n\n  var xAxis = d3.svg.axis()\n      .scale(x)\n      .tickSize(0)\n      .tickPadding(6)\n      .orient(\"bottom\");\n\n  var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  var layer = svg.selectAll(\".layer\")\n      .data(layers)\n    .enter().append(\"g\")\n      .attr(\"class\", \"layer\")\n      .style(\"fill\", function(d, i) { return color(i); });\n\n  var rect = layer.selectAll(\"rect\")\n      .data(function(d) { return d; })\n    .enter().append(\"rect\")\n      .attr(\"x\", function(d) { return x(d.x); })\n      .attr(\"y\", height)\n      .attr(\"width\", x.rangeBand())\n      .attr(\"height\", 0);\n\n  rect.transition()\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n      .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  var legend = svg.selectAll(\".legend\")\n      .data(allRaces)\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", function(d,i) { return color(i) });\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n  d3.selectAll(\"input\").on(\"change\", change);\n\n  var timeout = setTimeout(function() {\n    d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(timeout);\n    if (this.value === \"grouped\") transitionGrouped();\n    else transitionStacked();\n  }\n\n  function transitionGrouped() {\n    y.domain([0, yGroupMax]);\n\n    rect.transition()\n        .duration(500)\n        .delay(function(d, i) { return i * 10; })\n        .attr(\"x\", function(d, i, j) { return x(d.x) + x.rangeBand() / n * j; })\n        .attr(\"width\", x.rangeBand() / n)\n      .transition()\n        .attr(\"y\", function(d) { return y(d.y); })\n        .attr(\"height\", function(d) { return height - y(d.y); });\n  }\n\n  function transitionStacked() {\n    y.domain([0, yStackMax]);\n\n    rect.transition()\n        .duration(500)\n        .delay(function(d, i) { return i * 10; })\n        .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n        .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); })\n      .transition()\n        .attr(\"x\", function(d) { return x(d.x); })\n        .attr(\"width\", x.rangeBand());\n  }\n});\n</script>", "description": "Stacked-to-Grouped Police Killings", "created_at": "2015-09-17T00:21:47Z", "updated_at": "2015-09-17T00:35:50Z", "api": ["d3.csv", "d3.layout.stack", "d3.max", "d3.scale.ordinal", "d3.scale.linear", "d3.scale.category20c", "d3.svg.axis", "d3.select", "d3.selectAll"], "readme": "Switch between stacked and grouped layouts using sequenced transitions! Animations preserve object constancy and allow the user to follow the data across views. Animation design by [Heer and Robertson](http://vis.berkeley.edu/papers/animated_transitions/). Colors and data generation inspired by [Byron and Wattenberg](http://www.leebyron.com/else/streamgraph/).\n\nPolice killings data for 2015 (up to June) downloaded from [FiveThirtyEight](https://github.com/fivethirtyeight/data/tree/master/police-killings)\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3943967'>Stacked-to-Grouped Bars</a>", "uid": "enjalot_2b1446f496c3968f6ecd"}, {"code": "<script>\n\n// ************** Generate the tree diagram\t *****************\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n\twidth = 960 - margin.right - margin.left,\n\theight = 500 - margin.top - margin.bottom;\n\t\nvar i = 0;\n\nvar tree = d3.layout.tree()\n\t.size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n\t.projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.right + margin.left)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\ntreeData = {\n  \"name\": \"Top Level\",\n  \"children\": [\n    {\n      \"name\": \"Level 2: A\",\n      \"children\": [\n        {\n          \"name\": \"Son of A\"\n        },\n        {\n          \"name\": \"Daughter of A\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Level 2: B\",\n    }\n  ]\n}\nroot = treeData\nupdate(root)\n\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n\t  links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 120; });\n\n  // Declare the nodes\n  var node = svg.selectAll(\"g.node\")\n\t  .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter the nodes.\n  var nodeEnter = node.enter().append(\"g\")\n\t  .attr(\"class\", \"node\")\n\t  .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeEnter.append(\"circle\")\n\t  .attr(\"r\", 10)\n\t  .style(\"fill\", \"#fff\");\n\n  nodeEnter.append(\"text\")\n\t  .attr(\"x\", function(d) { \n\t\t  return d.children || d._children ? -14 : 14; })\n\t  .attr(\"dy\", \".35em\")\n\t  .attr(\"text-anchor\", function(d) { \n\t\t  return d.children || d._children ? \"end\" : \"start\"; })\n\t  .text(function(d) { return d.name; })\n\t  .style(\"fill-opacity\", 1);\n\n  // Declare the links\n  var link = svg.selectAll(\"path.link\")\n\t  .data(links, function(d) { return d.target.id; });\n\n  // Enter the links.\n  link.enter().insert(\"path\", \"g\")\n\t  .attr(\"class\", \"link\")\n\t  .attr(\"d\", diagonal);\n\n}\n\n</script>", "description": "fresh block", "created_at": "2015-09-15T18:13:51Z", "updated_at": "2015-09-15T18:21:08Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select"], "readme": "## hello markdown\n\n\n\n\n\n\n\n\n\n\n\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/0bf05e6afe2db3864cea'>fresh block</a>", "uid": "georules_a1c7527eb158b57af662"}, {"code": "<script>\n\n\nfunction makeViz() {\n\n  d3.json(\"d3.json\", function(data) {drawOrbit(data)});\n\n}\n\nfunction drawOrbit(_data) {\n\n  var center = {};\n  var recenter = false;\n\n\n  for (var x=0;x<_data.children.length;x++) {\n    _data.children[x].size = _data.children[x].children ? _data.children[x].children.length : 0;\n  }\n\n  _data.children.sort(function(a,b) {\n        if (a.size > b.size) {\n          return 1;\n        }\n        if (a.size < b.size) {\n          return -1;\n        }\n        return 0;\n  })\n\n\n  sizeScale = d3.scale.linear().domain([0,1,5,10,20]).range([4,6,8,10,12]).clamp(true);\n  colorScale = d3.scale.linear().domain([0,1,2,3,4]).range([\"rgb(161,208,120)\",\"rgb(247,148,72)\",\"rgb(225,203,208)\",\"rgb(174,223,228)\",\"rgb(245,132,102)\"]);\n\n  planetColors = {Mercury: \"gray\", Venus: \"#d6bb87\", Earth: \"#677188\", Mars: \"#7c5541\", Jupiter: \"#a36a3e\", Saturn: \"#e9ba85\", Uranus: \"#73cbf0\", Neptune: \"#6383d1\"}\n\n\n  orbit = d3.layout.orbit().size([800,800])\n  .revolution(customRevolution)\n  .orbitSize(function(d) {return d.depth >= 2 ? 6 : 4})\n  .speed(.25)\n  .mode([35,36,8,3,1])\n  .nodes(_data);\n\n  center = orbit.nodes()[0];\n\n  d3.select(\"svg\")\n.append(\"g\")\n.attr(\"class\", \"viz\")\n.attr(\"transform\", \"translate(150,150)\")\n  .selectAll(\"g.node\").data(orbit.nodes())\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"})\n  .on(\"mouseover\", nodeOver)\n  .on(\"click\", recenter)\n\n  d3.selectAll(\"g.node\")\n  .append(\"circle\")\n  .attr(\"class\", \"satellite\")\n  .attr(\"r\", function(d) {return sizeScale(d.children ? d.children.length : 0)})\n  .style(\"fill\", function(d) {return colorScale(d.depth)})\n  .style(\"stroke\", \"brown\")\n  .style(\"stroke-width\", \"1px\")\n\n  d3.selectAll(\"g.node\").filter(function(d) {return d.depth == 1})\n  .append(\"text\")\n  .text(function(d) {return d.depth == 0 ? \"Sun\" : d.key})\n  .attr(\"y\", 20)\n  .style(\"text-anchor\", \"middle\")\n\n  d3.select(\"g.viz\")\n  .selectAll(\"circle.ring\")\n  .data(orbit.orbitalRings())\n  .enter()\n  .insert(\"circle\", \"g\")\n  .attr(\"class\", \"ring\")\n  .attr(\"r\", function(d) {return d.r})\n  .attr(\"cx\", function(d) {return d.x})\n  .attr(\"cy\", function(d) {return d.y})\n\n  orbit.on(\"tick\", orbitTick);\n\n  orbit.start();\n\n  function orbitTick() {\n\n    var newX = 200- center.x;\n    var newY = 200 - center.y;\n\n    d3.select(\"g.viz\")\n    .attr(\"transform\", \"scale(\"+(1 + (center.depth *.1)) +\") translate(\" + newX + \",\" + newY + \")\")\n\n\n    d3.selectAll(\"g.node\")\n      .attr(\"transform\", function(d) {return \"translate(\" +d.x +\",\" + d.y+\")\"});\n\n    d3.selectAll(\"circle.ring\")\n    .attr(\"cx\", function(d) {return d.x})\n    .attr(\"cy\", function(d) {return d.y});\n\n        d3.selectAll(\"line.visible\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n\n  }\n\n  function changeCenter() {\n        recenter = false;\n        orbit.stop();\n    var newX = 200 - center.x;\n    var newY = 200 - center.y;\n\n    d3.select(\"g.viz\")\n    .transition()\n    .duration(1000)\n    .attr(\"transform\", \"scale(\"+(1 + (center.depth *.1)) +\") translate(\" + newX + \",\" + newY + \")\")\n    .each(\"end\", function() {orbit.start()})\n\n  }\n\n  function customRevolution(d) \n  {\n    if (d.name == \"time\") {\n      return d.depth * .25;\n    }\n    if (d.name == \"geo\") {\n      return -d.depth * .25;      \n    }\n    return d.depth\n  }\n\n  function nodeOver(d) {\n    orbit.stop();\n\n      center = d;\n      changeCenter();\n\n      d3.selectAll(\"text.sat\").remove();\n\n      d3.selectAll(\"line.visible\").remove();\n\n      if (d.children) {\n        var lines = d.children.map(function(p) {return {source: d, target: p}})\n        d3.select(\"g.viz\").selectAll(\"line.visible\")\n        .data(lines)\n        .enter()\n        .insert(\"line\", \"g\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n        .attr(\"class\", \"visible\")\n        .style(\"stroke\", \"rgb(73,106,154)\")\n        .style(\"stroke-width\", 2)\n      }\n\n      if (d.parent) {\n\n        d3.select(\"g.viz\").selectAll(\"line.fake\")\n        .data([{source:d, target: d.parent}])\n        .enter()\n        .insert(\"line\", \"g\")\n        .attr(\"x1\", function(p) {return p.source.x})\n        .attr(\"x2\", function(p) {return p.target.x})\n        .attr(\"y1\", function(p) {return p.source.y})\n        .attr(\"y2\", function(p) {return p.target.y})\n        .attr(\"class\", \"visible\")\n        .style(\"stroke\", \"rgb(165,127,124)\")\n        .style(\"stroke-width\", 3)\n      }\n\n\n      d3.selectAll(\"g.node\")\n      .filter(function(p) {return p == d || p == d.parent || (d.children ? d.children.indexOf(p) > -1 : false)})\n      .append(\"text\")\n      .text(function(p) {return p.name})\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"sat\")\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", \"white\")\n      .style(\"stroke-width\", 3)\n      .style(\"stroke-opacity\", .7);\n\n      d3.selectAll(\"g.node\")\n      .filter(function(p) {return p == d || p == d.parent || (d.children ? d.children.indexOf(p) > -1 : false)})\n      .append(\"text\")\n      .text(function(p) {return p.name})\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", 15)\n      .attr(\"class\", \"sat\");\n\n    d3.selectAll(\"g.node > circle\").style(\"stroke\", \"brown\").style(\"stroke-width\", 1);    \n\n    d3.select(this).select(\"circle\").style(\"stroke\", \"black\").style(\"stroke-width\", 3);\n\n  }\n\n\n}\n\n</script>\n<body onload=\"makeViz()\">\n<div id=\"viz\"><svg></svg><div id=\"buttons\"></div></div>\n<footer>\n<script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\" type=\"text/javascript\"></script>\n<script src=\"d3.layout.orbit.js\" charset=\"utf-8\" type=\"text/javascript\"></script>", "description": "Quantified self :)", "created_at": "2015-09-14T16:27:56Z", "updated_at": "2015-09-14T17:47:26Z", "api": ["d3.dispatch", "d3.rebind", "d3.layout.pie", "d3.json", "d3.scale.linear", "d3.layout.orbit", "d3.select", "d3.selectAll"], "readme": "An example of [d3.layout.orbit](https://github.com/emeeks/d3.layout.orbit) forked from emeeks. \n\nA small viz to present myself. \n\nHello !", "uid": "ufenegga_eb449216394512121db5"}, {"code": "<script>\n  \nvar units = \"Widgets\";\n \nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 800,\n    height = 500;\n \nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scale.category20();\n \n// append the svg canvas to the page\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(10)\n    .size([width, height]);\n \nvar path = sankey.link();\n \n// load the data\nd3.json(\"sankeygreenhouse.json\", function(error, graph) {\n \n    var nodeMap = {};\n    graph.nodes.forEach(function(x) { nodeMap[x.name] = x; });\n    graph.links = graph.links.map(function(x) {\n      return {\n        source: nodeMap[x.source],\n        target: nodeMap[x.target],\n        value: x.value\n      };\n    });\n \n  sankey\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .layout(32);\n \n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n \n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n      \treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n \n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n      .origin(function(d) { return d; })\n      .on(\"dragstart\", function() { \n\t\t  this.parentNode.appendChild(this); })\n      .on(\"drag\", dragmove));\n \n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n \n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n \n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \n        \"translate(\" + (\n        \t   d.x = Math.max(0, Math.min(width - d.dx, d3.event.x))\n        \t) + \",\" + (\n                   d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n            ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n \n</script>", "description": "Sankey diagram with horizontal and vertical node movement", "created_at": "2015-09-10T06:40:24Z", "updated_at": "2015-09-10T07:12:18Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.json", "d3.behavior.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest"], "readme": "This is an example of a Sankey diagram made using d3.js and the sankey plugin. \n\nIt has a point of differenc from other Sankey diagrams I have seen in that the nodes can be moved horizontally *and* vertically. \n\nA description of how it was put together and techniques for implimenting Sankey diagrams in general with d3.js can be found at [d3noob.org](http://www.d3noob.org/) or you can download the full text in the D3 Tips and Tricks book (for free) from [Leanpub](https://leanpub.com/D3-Tips-and-Tricks).\n\nThe data is sourced from the World Resources Institute (http://www.wri.org/chart/world-greenhouse-gas-emissions-2005).\nOpen in full window for full effect.", "uid": "roundrobin_5e8287bd3fecf0cf7b8c"}, {"code": "<script>\n\n/* https://github.com/d3/d3-timer Copyright 2015 Mike Bostock */\n\"undefined\"==typeof requestAnimationFrame&&(requestAnimationFrame=\"undefined\"!=typeof window&&(window.msRequestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.oRequestAnimationFrame)||function(e){return setTimeout(e,17)}),function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?n(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],n):n(e.timer={})}(this,function(e){\"use strict\";function n(){r=m=0,c=1/0,t(u())}function t(e){if(!r){var t=e-Date.now();t>24?c>e&&(m&&clearTimeout(m),m=setTimeout(n,t),c=e):(m&&(m=clearTimeout(m),c=1/0),r=requestAnimationFrame(n))}}function i(e,n,i){i=null==i?Date.now():+i,null!=n&&(i+=+n);var o={callback:e,time:i,flush:!1,next:null};a?a.next=o:f=o,a=o,t(i)}function o(e,n,t){t=null==t?Date.now():+t,null!=n&&(t+=+n),l.callback=e,l.time=t}function u(e){e=null==e?Date.now():+e;var n=l;for(l=f;l;)e>=l.time&&(l.flush=l.callback(e-l.time,e)),l=l.next;l=n,e=1/0;for(var t,i=f;i;)i.flush?i=t?t.next=i.next:f=i.next:(i.time<e&&(e=i.time),i=(t=i).next);return a=t,e}var a,m,r,f,l,c=1/0;e.timer=i,e.timerReplace=o,e.timerFlush=u});\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\");\n\n  var width = canvas.width,\n      height = canvas.height,\n      tau = 2 * Math.PI,\n      minDistance = 40,\n      maxDistance = 60;\n \n\n  var fills = [\"#d7d7d7\", \"#e2e2e2\", \"#eee\"],\n      currentFill = 0;\n\n  var n = Math.min(width, height) >> 1,\n      particles = new Array(n),\n      mouse = { x:0, y:0 };\n\n  document.addEventListener(\"mousemove\", function(e){\n    mouse.x = Math.min(width, Math.max(0, e.x));\n    mouse.y = Math.min(height, Math.max(0, e.y));\n  })\n\n  for (var i = 0; i < n; ++i) {\n    particles[i] = {\n      x: Math.random() * width,\n      y: Math.random() * height,\n      r: Math.random() * 15,\n      fill: fills[currentFill = ++currentFill % fills.length],\n      vx: 0,\n      vy: 0\n    };\n  }\n\n  function distance (a, b) {\n    return Math.sqrt(Math.pow(Math.abs(a.x - b.x),2) + Math.pow(Math.abs(a.y - b.y),2));\n  }\n  \n  function render (elapsed) {\n    context.save();\n    context.clearRect(0, 0, width, height);\n\n    for (var i = 0; i < n; ++i) {\n      var p = particles[i];\n\n      p.x += p.vx; if (p.x < -maxDistance) p.x += width + maxDistance * 2; else if (p.x > width + maxDistance) p.x -= width + maxDistance * 2;\n      p.y -= p.vy; if (p.y < -maxDistance) p.y += height + maxDistance * 2; else if (p.y > height + maxDistance) p.y -= height + maxDistance * 2;\n\n      p.vx += 0.2 * (Math.random() - .5) - 0.01 * p.vx;\n      p.vy += 0.05 * (Math.random()) - 0.01 * p.vy;\n\n      var distanceFromMouse = distance(p, mouse),\n          proximityFactor = 0.5 + (1 - (Math.min(distanceFromMouse, maxDistance) / maxDistance));\n\n      context.beginPath();\n      context.fillStyle = p.fill;\n      context.arc(p.x, p.y, p.r * proximityFactor, 0, tau);\n      context.fill();\n    }\n\n    context.restore();\n  }  \n  \n  timer.timer(render);\n  \n</script>", "description": "Connected Particles III - bubble remix", "created_at": "2015-09-09T03:22:12Z", "updated_at": "2015-09-09T03:30:29Z", "api": [], "readme": "Fork of [mbostock](http://bl.ocks.org/mbostock)'s block [http://bl.ocks.org/mbostock/280d83080497c8c13152](http://bl.ocks.org/mbostock/280d83080497c8c13152).\n\nforked from <a href='http://bl.ocks.org/dowstreet/'>dowstreet</a>'s block: <a href='http://bl.ocks.org/dowstreet/bfab4be2185584fba431'>Connected Particles III</a>", "uid": "rflow_bb7ad38820bfa0076c73"}, {"code": "<script>\nvar margin = {top: 1, right: 30, bottom: 1, left: 1},\n    width = 940 - margin.left - margin.right,\n    height = 480 - margin.top - margin.bottom;\n    \nvar category20b_sq = [\n  '#393b79', '#5254a3', '#6b6ecf', '#9c9ede',\n  '#8c6d31', '#bd9e39', '#e7ba52', '#e7cb94',\n  '#843c39', '#ad494a', '#d6616b', '#e7969c',\n  '#637939', '#8ca252', '#b5cf6b', '#cedb9c', \n  '#ce6dbd', '#a55194', '#de9ed6', '#7b4173'\n];\n\nvar color = d3.scale.ordinal()\n  .range(category20b_sq);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar sankey = d3.sankey()\n  .nodeWidth(16)\n  .nodePadding(10)\n  .size([width, height]);\n\nvar path = sankey.link()\n  .curvature(0.3);\n\nd3.json(\"sankey.json\", function(energy) {\n  sankey\n    .nodes(energy.nodes)\n    .links(energy.links)\n    .layout(20);\n\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(energy.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; })\n      .on(\"mouseover\", function(d) {\n        d3.selectAll(\".node\")\n          .style(\"opacity\", 0.3)\n          .filter(function(p) {\n            return d.source.name == p.name ||\n                   d.target.name == p.name;\n          })\n          .style(\"opacity\", 1)\n          .selectAll(\"text\")\n          .style(\"opacity\", 1);\n      })\n      .on(\"mouseout\", function(d) {\n        d3.selectAll(\".node\")\n          .style(\"opacity\", null)\n          .selectAll(\"text\")\n          .style(\"opacity\", 0);\n      });\n\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(energy.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { return color(d.category); })\n    .append(\"title\")\t\n      .text(function(d) { return d.name; });\n\n  node.append(\"text\")\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x > width * .9; })\n      .attr(\"class\", function(d) { return d.category ; })\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", function(d) { return \"translate (\" + ((d.dy / 2) + 30) + \",\" + (d.dy / 2) + \") rotate(90)\"; });\n});\n</script>", "description": "Issue Breakdown", "created_at": "2015-09-08T13:43:21Z", "updated_at": "2015-09-08T13:43:21Z", "api": ["d3.scale.ordinal", "d3.select", "d3.sankey", "d3.json", "d3.selectAll"], "readme": "A refactored version of Sara Quigley's [Issue Breakdown](http://bl.ocks.org/saraquigley/raw/5194141/) as a simple example of a [Sankey diagram](http://bost.ocks.org/mike/sankey/)\n\n\nforked from <a href='http://bl.ocks.org/syntagmatic/'>syntagmatic</a>'s block: <a href='http://bl.ocks.org/syntagmatic/28f1fbeb41df9753e120'>Issue Breakdown</a>", "uid": "renecnielsen_8af83e3999c84b4eb61e"}, {"code": "<script>\nvar margin = {top: 1, right: 30, bottom: 1, left: 1},\n    width = 940 - margin.left - margin.right,\n    height = 480 - margin.top - margin.bottom;\n    \nvar category20b_sq = [\n  '#393b79', '#5254a3', '#6b6ecf', '#9c9ede',\n  '#8c6d31', '#bd9e39', '#e7ba52', '#e7cb94',\n  '#843c39', '#ad494a', '#d6616b', '#e7969c',\n  '#637939', '#8ca252', '#b5cf6b', '#cedb9c', \n  '#ce6dbd', '#a55194', '#de9ed6', '#7b4173'\n];\n\nvar color = d3.scale.ordinal()\n  .range(category20b_sq);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar sankey = d3.sankey()\n  .nodeWidth(16)\n  .nodePadding(10)\n  .size([width, height]);\n\nvar path = sankey.link()\n  .curvature(0.3);\n\nd3.json(\"sankey.json\", function(energy) {\n  sankey\n    .nodes(energy.nodes)\n    .links(energy.links)\n    .layout(20);\n\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(energy.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; })\n      .on(\"mouseover\", function(d) {\n        d3.selectAll(\".node\")\n          .style(\"opacity\", 0.3)\n          .filter(function(p) {\n            return d.source.name == p.name ||\n                   d.target.name == p.name;\n          })\n          .style(\"opacity\", 1)\n          .selectAll(\"text\")\n          .style(\"opacity\", 1);\n      })\n      .on(\"mouseout\", function(d) {\n        d3.selectAll(\".node\")\n          .style(\"opacity\", null)\n          .selectAll(\"text\")\n          .style(\"opacity\", 0);\n      });\n\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(energy.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { return color(d.category); })\n    .append(\"title\")\t\n      .text(function(d) { return d.name; });\n\n  node.append(\"text\")\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x > width * .9; })\n      .attr(\"class\", function(d) { return d.category ; })\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", function(d) { return \"translate (\" + ((d.dy / 2) + 30) + \",\" + (d.dy / 2) + \") rotate(90)\"; });\n});\n</script>", "description": "Issue Breakdown", "created_at": "2015-09-08T07:42:10Z", "updated_at": "2015-09-08T07:42:10Z", "api": ["d3.scale.ordinal", "d3.select", "d3.sankey", "d3.json", "d3.selectAll"], "readme": "A refactored version of Sara Quigley's [Issue Breakdown](http://bl.ocks.org/saraquigley/raw/5194141/) as a simple example of a [Sankey diagram](http://bost.ocks.org/mike/sankey/)\n\n\nforked from <a href='http://bl.ocks.org/syntagmatic/'>syntagmatic</a>'s block: <a href='http://bl.ocks.org/syntagmatic/28f1fbeb41df9753e120'>Issue Breakdown</a>", "uid": "renecnielsen_ab4a38e90ccef20574df"}, {"code": "<script>\n\nvar margin = {top: 50, right: 80, bottom: 20, left: 80},\n    width = 960 - margin.left - margin.right,\n    height = 220 - margin.top - margin.bottom;\n\nvar types = {\n  \"Number\": {\n    key: \"Number\",\n    coerce: function(d) { return +d; },\n    extent: d3.extent,\n    within: function(d, extent) { return extent[0] <= d && d <= extent[1]; },\n    defaultScale: d3.scale.linear().range([height, 0])\n  },\n  \"String\": {\n    key: \"String\",\n    coerce: String,\n    extent: function (data) { return data.sort(); },\n    within: function(d, extent, dim) { return extent[0] <= dim.scale(d) && dim.scale(d) <= extent[1]; },\n    defaultScale: d3.scale.ordinal().rangePoints([0, height])\n  }\n};\n\nvar dimensions = [\n  {\n    key: \"mager14\",\n    description: \"Mother's Age\",\n    scale: d3.scale.ordinal().rangePoints([0, height]),\n    type: types[\"String\"],\n    axis: d3.svg.axis().orient(\"left\")\n      .tickFormat(function(d) {\n        return {\n          1: \"Under 15\",\n          3: \"15\",\n          4: \"16\",\n          5: \"17\",\n          6: \"18\",\n          7: \"19\",\n          8: \"20-24\",\n          9: \"25-29\",\n          10: \"30-34\",\n          11: \"35-39\",\n          12: \"40-44\",\n          13: \"45-49\",\n          14: \"50-54\"\n        }[d]\n      }),\n    domain: [1,3,4,5,6,7,8,9,10,11,12,13,14]\n  },\n  {\n    key: \"fagerec11\",\n    description: \"Father's Age\",\n    type: types[\"String\"],\n    domain: [1,2,3,4,5,6,7,8,9,10,11],\n    axis: d3.svg.axis().orient(\"left\")\n      .tickFormat(function(d) {\n        return {\n          1: \"Under 15\",\n          2: \"15-19\",\n          3: \"20-24\",\n          4: \"25-29\",\n          5: \"30-34\",\n          6: \"35-39\",\n          7: \"40-44\",\n          8: \"45-49\",\n          9: \"50-54\",\n          10: \"55-98\",\n          11: \"Not stated\"\n        }[d]\n      })\n  },\n  {\n    key: \"sex\",\n    description: \"Sex\",\n    type: types[\"String\"]\n  },\n  {\n    key: \"dob_yy\",\n    description: \"Birth Year\",\n    type: types[\"String\"]\n  },\n  {\n    key: \"dob_mm\",\n    description: \"Birth Month\",\n    type: types[\"String\"],\n    domain: d3.range(1,13),\n    axis: d3.svg.axis().orient(\"left\")\n      .tickFormat(function(d) {\n        return {\n          1: \"Jan\",\n          2: \"Feb\",\n          3: \"Mar\",\n          4: \"Apr\",\n          5: \"May\",\n          6: \"Jun\",\n          7: \"Jul\",\n          8: \"Aug\",\n          9: \"Sep\",\n          10: \"Oct\",\n          11: \"Nov\",\n          12: \"Dec\"\n        }[d]\n      })\n  },\n  {\n    key: \"mar\",\n    description: \"Mother's Marital Status\",\n    type: types[\"String\"],\n    axis: d3.svg.axis().orient(\"left\")\n      .tickFormat(function(d) {\n        return {\n          1: \"Yes\",\n          2: \"No\",\n          9: \"Unknown\"\n        }[d]\n      })\n  },\n  {\n    key: \"meduc_rec\",\n    description: \"Mother's Education\",\n    type: types[\"String\"],\n    axis: d3.svg.axis().orient(\"left\")\n      .tickFormat(function(d) {\n        return {\n          1: \"0-8 years\",\n          2: \"9-11 years\",\n          3: \"12 years\",\n          4: \"13-15 years\",\n          5: \"16+ years\",\n          6: \"Not stated\"\n        }[d]\n      })\n  },\n  {\n    key: \"mpcb\",\n    description: \"Month Prenatal Care Began\",\n    type: types[\"String\"],\n    axis: d3.svg.axis().orient(\"left\")\n      .tickFormat(function(d) {\n        if (d == 0) return \"No care\";\n        if (d <= 10) return d + \" months\";\n        if (d == 99) return \"Unknown\";\n      })\n  },\n  {\n    key: \"wtgain_rec\",\n    description: \"Weight Gain\",\n    type: types[\"String\"],\n    axis: d3.svg.axis().orient(\"left\")\n      .tickFormat(function(d) {\n        if (d < 98) return d + \" lbs\";\n        if (d = 98) return \"98+ lbs\";\n        if (d = 99) return \"Unknown\";\n        return \"null\"\n      })\n\n  },\n  {\n    key: \"cig_rec6\",\n    description: \"Cigarettes Per Day\",\n    type: types[\"String\"],\n    axis: d3.svg.axis().orient(\"left\")\n      .tickFormat(function(d) {\n        return {\n          0: \"Non-smoker\",\n          1: \"1-5\",\n          2: \"6-10\",\n          3: \"11-20\",\n          4: \"21-40\",\n          5: \"41+\",\n          6: \"Unknown\"\n        }[d]\n      })\n  },\n  {\n    key: \"uop_induc\",\n    description: \"Induction of Labor\",\n    type: types[\"String\"],\n    axis: d3.svg.axis().orient(\"left\")\n      .tickFormat(function(d) {\n        return {\n          1: \"Yes\",\n          2: \"No\",\n          9: \"Unknown\"\n        }[d]\n      })\n  },\n  {\n    key: \"ume_vag\",\n    description: \"Vaginal Delivery\",\n    type: types[\"String\"],\n    axis: d3.svg.axis().orient(\"left\")\n      .tickFormat(function(d) {\n        return {\n          1: \"Yes\",\n          2: \"No\",\n          9: \"Unknown\"\n        }[d]\n      })\n  },\n  {\n    key: \"gestrec10\",\n    description: \"Gestation (weeks)\",\n    type: types[\"String\"],\n    axis: d3.svg.axis().orient(\"left\")\n      .tickFormat(function(d) {\n        return {\n          1: \"Under 20\",\n          2: \"20-27\",\n          3: \"28-31\",\n          4: \"32-33\",\n          5: \"34-36\",\n          6: \"37-38\",\n          7: \"39\",\n          8: \"40\",\n          9: \"41\",\n          10: \"42+\",\n          99: \"Unknown\"\n        }[d]\n\n      })\n  },\n];\n\nvar colordimension = dimensions.filter(function(d) { return d.key == \"sex\"; })[0];\n\nvar color = d3.scale.ordinal()\n  .range([\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"]);\n\nvar x = d3.scale.ordinal()\n    .domain(dimensions.map(function(dim) { return dim.key; }))\n    .rangePoints([0, width]);\n\nvar line = d3.svg.line()\n    .defined(function(d) { return !isNaN(d[1]); });\n\nvar yAxis = d3.svg.axis()\n    .orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar output = d3.select(\"body\").append(\"pre\");\n\nvar foreground = svg.append(\"g\")\n  .attr(\"class\", \"foreground\");\n\nvar axes = svg.selectAll(\".axis\")\n    .data(dimensions)\n  .enter().append(\"g\")\n    .attr(\"class\", \"axis\")\n    .attr(\"transform\", function(d) { return \"translate(\" + x(d.key) + \")\"; });\n\nd3.csv(\"linkco2009us_num.csv\", function(error, rawdata) {\n  if (error) throw error;\n\n  // take subset of data\n  data = d3.shuffle(rawdata).slice(0,100);\n\n  data.forEach(function(d) {\n    dimensions.forEach(function(p) {\n      d[p.key] = p.type.coerce(d[p.key]);\n    });\n  });\n\n  // type/dimension default setting happens here\n  dimensions.forEach(function(dim) {\n    if (!(\"domain\" in dim)) {\n      // detect domain using dimension type's extent function\n      dim.domain = d3.functor(dim.type.extent)(data.map(function(d) { return d[dim.key]; }));\n\n      // TODO - this line only works because the data encodes data with integers\n      // Sorting/comparing should be defined at the type/dimension level\n      dim.domain.sort(function(a,b) {\n        return a - b;\n      });\n    }\n    if (!(\"scale\" in dim)) {\n      // use type's default scale for dimension\n      dim.scale = dim.type.defaultScale.copy();\n    }\n    dim.scale.domain(dim.domain);\n  });\n\n  color.domain(colordimension.scale.domain());\n\n  foreground.selectAll(\"path\")\n      .data(data)\n    .enter().append(\"path\")\n      .attr(\"d\", draw)\n      .style(\"stroke\", function(d) { return color(d[colordimension.key]); });\n\n  axes.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) {\n        var renderAxis = \"axis\" in d\n          ? d.axis.scale(d.scale)  // custom axis\n          : yAxis.scale(d.scale);  // default axis\n        d3.select(this).call(renderAxis);\n      })\n    .append(\"text\")\n      .attr(\"class\", \"title\")\n      .attr(\"text-anchor\", \"start\")\n      .text(function(d) { return \"description\" in d ? d.description : d.key; });\n\n  // Add and store a brush for each axis.\n  axes.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) {\n        d3.select(this).call(d.brush = d3.svg.brush()\n          .y(d.scale)\n          .on(\"brushstart\", brushstart)\n          .on(\"brush\", brush));\n      })\n    .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n\n  output.text(d3.tsv.format(data));\n\n  function draw(d) {\n    return line(dimensions.map(function(dim) {\n      return [x(dim.key), dim.scale(d[dim.key])];\n    }));\n  }\n\n  function brushstart() {\n    d3.event.sourceEvent.stopPropagation();\n  }\n\n  // Handles a brush event, toggling the display of foreground lines.\n  function brush() {\n    var actives = dimensions.filter(function(p) { return !p.brush.empty(); }),\n        extents = actives.map(function(p) { return p.brush.extent(); });\n\n    var selected = [];\n\n    d3.selectAll(\".foreground path\").style(\"display\", function(d) {\n      if (actives.every(function(dim, i) {\n          // test if point is within extents for each active brush\n          return dim.type.within(d[dim.key], extents[i], dim);\n        })) {\n        selected.push(d);\n        return null;\n      }\n      return \"none\";\n    });\n\n    output.text(d3.tsv.format(selected));\n  }\n});\n\n</script>", "description": "Infant Deaths", "created_at": "2015-09-08T07:42:06Z", "updated_at": "2015-09-08T07:42:06Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.range", "d3.svg.line", "d3.select", "d3.csv", "d3.shuffle", "d3.functor", "d3.svg.brush", "d3.tsv.format", "d3.event.sourceEvent.stopPropagation", "d3.selectAll"], "readme": "A random sample of 100 infant deaths from 2009 colored by infant's sex.\n\nThis is a work in progress.\n\nSee [2009 Cohort Linked Birth/Infant Death Data Set Guide (pdf)](http://www.nber.org/lbid/docs/LinkCO09Guide.pdf). \n\nSource: [National Bureau of Economic Research](http://www.nber.org/data/linked-birth-infant-death-data-vital-statistics-data.html)\n\n\nforked from <a href='http://bl.ocks.org/syntagmatic/'>syntagmatic</a>'s block: <a href='http://bl.ocks.org/syntagmatic/8ff691209324f1814257'>Infant Deaths</a>", "uid": "renecnielsen_254addab2deb0e096ccf"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Create the area where the lasso event can be triggered\nsvg.append(\"rect\")\n  .attr('class','lassoable')\n  .attr(\"width\",width)\n  .attr(\"height\",height)\n  .style(\"opacity\",0);\n\n// Lasso functions to execute while lassoing\nvar lasso_start = function() {\n  lasso.items()\n    .attr(\"r\",3.5) // reset size\n    .style(\"fill\",null) // clear all of the fills\n    .classed({\"not_possible\":true,\"selected\":false}); // style as not possible\n};\n\nvar lasso_draw = function() {\n  // Style the possible dots\n  lasso.items().filter(function(d) {return d.possible===true})\n    .classed({\"not_possible\":false,\"possible\":true});\n\n  // Style the not possible dot\n  lasso.items().filter(function(d) {return d.possible===false})\n    .classed({\"not_possible\":true,\"possible\":false});\n};\n\nvar lasso_end = function() {\n  // Reset the color of all dots\n  lasso.items()\n     .style(\"fill\", function(d) { return color(d.species); });\n\n  // Style the selected dots\n  lasso.items().filter(function(d) {return d.selected===true})\n    .classed({\"not_possible\":false,\"possible\":false})\n    .attr(\"r\",7);\n\n  // Reset the style of the not selected dots\n  lasso.items().filter(function(d) {return d.selected===false})\n    .classed({\"not_possible\":false,\"possible\":false})\n    .attr(\"r\",3.5);\n\n};\n\n\n// Define the lasso\nvar lasso = d3.lasso()\n      .closePathDistance(75) // max distance for the lasso loop to be closed\n      .closePathSelect(true) // can items be selected by closing the path?\n      .hoverSelect(true) // can items by selected by hovering over them?\n      .on(\"start\",lasso_start) // lasso start function\n      .on(\"draw\",lasso_draw) // lasso draw function\n      .on(\"end\",lasso_end); // lasso end function\n\n\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  data.forEach(function(d) {\n    d.sepalLength = +d.sepalLength;\n    d.sepalWidth = +d.sepalWidth;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.sepalWidth; })).nice();\n  y.domain(d3.extent(data, function(d) { return d.sepalLength; })).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sepal Width (cm)\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sepal Length (cm)\")\n\n  var dot_g = svg.append('g')\n    .attr('class','lassoable');\n\n  dot_g.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"id\",function(d,i) {return \"dot_\" + i;}) // added\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", function(d) { return x(d.sepalWidth); })\n      .attr(\"cy\", function(d) { return y(d.sepalLength); })\n      .style(\"fill\", function(d) { return color(d.species); });\n\n  lasso.items(d3.selectAll(\".dot\"));\n  //lasso.items(d3.selectAll(\"#dot_118\"));\n\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n  lasso.area(svg.selectAll('.lassoable'));\n  // Init the lasso on the svg:g that contains the dots\n  svg.call(lasso);\n\n});\n\n</script>", "description": "Scatterplot with Lasso on points", "created_at": "2015-08-31T14:24:15Z", "updated_at": "2015-08-31T14:24:15Z", "api": ["d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.select", "d3.lasso", "d3.tsv", "d3.extent", "d3.selectAll", "d3.behavior.drag", "d3.mouse"], "readme": "", "uid": "skokenes_fd6b142c0f38e71424ab"}, {"code": "<script>\n    var list = [\n      5, 19, -10, 6, 29\n    ]\n    \n    var chartX = 121;\n    var chartWidth = 675;\n    var chartHeight = 485;\n    var xMargin = 15;\n    \n    d3.select(\"#box\").attr({\n      width: chartWidth,\n      height: chartHeight,\n      x: chartX\n    })\n    d3.select(\"#base\").attr({\n      width: chartWidth,\n      x: chartX,\n      y: chartHeight\n    })\n    \n    var xscale = d3.scale.linear()\n      .domain([0, list.length-1])\n      .range([chartX + xMargin, chartX + chartWidth - xMargin])\n    \n    var yscale = d3.scale.linear()\n      .domain([0, d3.max(list, function(d) { return d })])\n      .range([chartHeight, 0])\n    \n    var svg = d3.select(\"svg\");\n    \n    var circles = svg.selectAll(\"circle\")\n      .data(list)\n      .enter()\n      .append(\"circle\")\n      .attr({\n        r: 10,\n        cx: function(d,i) { \n          return xscale(i);\n        },\n        cy: function(d,i) {\n          return yscale(d);\n        }\n      })\n    \n    var bars = svg.selectAll(\"rect.bar\")\n      .data(list)\n      .enter()\n      .append(\"rect\").classed(\"bar\", true)\n      .attr({\n        x: function(d,i) {\n          return xscale(i);\n        },\n        y: function(d,i) {\n          return yscale(d);\n        },\n        width: 10,\n        height: function(d,i) {\n          return chartHeight - yscale(d)\n        },\n        fill: \"orange\"\n      })\n    \n    var barLines = svg.selectAll(\"line\")\n    .data(list)\n    .enter()\n    .append(\"line\")\n    .attr({\n      x1: function(d,i) {\n        return xscale(i)\n      },\n      y1: function(d,i) {\n        return yscale(d);\n      },\n      x2: function(d,i) {\n        return xscale(i)\n      },\n      y2: function(d,i) {\n        return yscale.range()[0] //chartHeight\n      },\n      stroke: \"#7a7a7a\",\n      \"stroke-width\": 10\n    })\n    \n    var line = svg.selectAll(\"path\")\n      .data([list])\n      .enter()\n      .append(\"path\")\n      .attr({\n        d: function(entries,index) {\n          var x = xscale(0);\n          var y = yscale(entries[0]);\n          var string = \"M\" + [x,y];\n          console.log(\"STRING\", string);\n          for(var i = 1; i < entries.length; i++) {\n            x = xscale(i);\n          \ty = yscale(entries[i]);\n            string += \"L\" + [x,y];\n          }\n          console.log(\"STRING AFTER\", string)\n          return string\n        },\n        fill: \"none\",\n        stroke: \"#000\"\n      })\n        \n    \n    \n  </script>", "description": "datasana #2", "created_at": "2015-08-29T21:26:43Z", "updated_at": "2015-09-03T00:40:24Z", "api": ["d3.select", "d3.scale.linear", "d3.max"], "readme": "## hello markdown\n\n\n\n\n\n\n\n\n\n\n", "uid": "enjalot_d524bd18fbff11046c75"}, {"code": "<script>\n    console.log(\"you are now rocking with d3\", d3);\n    var data = [5, 19, 20, 6, 29];\n    var chartHeight = 300,\n        chartWidth = 600,\n        chartX = 100,\n        xMargin = 15,\n        yMargin = 15;\n    \n    var xScale = d3.scale.linear()\n    \t\t\t\t\t\t\t.domain([0, data.length-1])\n    \t\t\t\t\t\t\t.range([chartX + xMargin, chartWidth - xMargin]);\n    \n    var yScale = d3.scale.linear()\n    \t\t\t\t\t\t\t.domain([0, d3.max(data)])\n    \t\t\t\t\t\t\t.range([chartHeight, yMargin]);\n    \n    \n    d3.select(\"#box\").attr({\n      width: chartWidth,\n      height: chartHeight,\n      x: chartX\n    });\n    d3.select(\"#base\").attr({\n      y: chartHeight,\n      width: chartWidth,\n      x: chartX\n    });\n    var svg = d3.select(\"svg\");\n    var circles = svg.selectAll(\"circle\")\n    \t\t.data(data)\n    \t\t.enter()\n    \t.append(\"circle\")\n    \t.attr({\n        r: 10,\n        cx: function(d, i) { return xScale(i);},\n        cy: yScale\n      });\n    var bars = svg.selectAll(\"rect.bar\")\n    \t\t.data(data)\n    \t\t\t.enter()\n    \t\t\t.append(\"rect\")\n    \t\t\t.classed(\"bar\", true)\n    \t\t\t.attr({\n            x: function(d, i) {\n              return xScale(i);;\n            },\n            y: function(d, i) {\n              return yScale(d);\n            },\n            width: 10,\n            height: function(d, i) {\n              return chartHeight - yScale(d);\n            },\n            fill: \"orange\"\n          });\n    \n\n  \tvar barLines = svg.selectAll(\"line\")\n    \t\t.data(data)\n    \t\t.enter()\n    \t\t.append(\"line\")\n    \t\t.attr({\n        \tx1: function(d, i) {\n          return xScale(i);\n        },\n          y1: yScale,\n          x2: function(d, i) {\n          return xScale(i);\n        },\n          y2: yScale.range()[0],\n          stroke: \"#000\",\n          \"stroke-width\": 10\n    });\t\n \n   \n    var line = svg.selectAll(\"path\")\n    \t.data([data])\n    \t.enter()\n    \t.append(\"path\")\n    \t.attr({\n        d: function(d, i) {\n          var x = xScale(0);\n          var y = yScale(d[0]);\n          var string = \"M\" + [x, y];\n          console.log(\"HERE\");\n          console.log(d);\n          for(var j=1;j < d.length; j++) {\n            x= xScale(j);\n            y= yScale(d[j]);\n            string += \"L\" + [x, y];\n        \t}\n        \tconsole.log(string);\n          return string;\n          \n        },\n        stroke: \"#000\",\n        fill: \"none\"\n\n      });\n  </script>", "description": "datasana #rects", "created_at": "2015-08-29T21:07:11Z", "updated_at": "2015-08-30T05:33:21Z", "api": ["d3.scale.linear", "d3.max", "d3.select"], "readme": "## hello markdown\n\n\n\n\n\n\n\n\n\n\n\n\nforked from <a href='http://bl.ocks.org/sampathweb/'>sampathweb</a>'s block: <a href='http://bl.ocks.org/sampathweb/4ad06b0d9ee2a390eb20'>datasana #1</a>\n\nforked from <a href='http://bl.ocks.org/sampathweb/'>sampathweb</a>'s block: <a href='http://bl.ocks.org/sampathweb/2efd8084d345dd23ef96'>datasana #circles</a>", "uid": "sampathweb_2f2e047172a34d146e4f"}, {"code": "<script>\n    var resizePID;\n\n    function clearResize() {\n      clearTimeout(resizePID);\n      resizePID = setTimeout(function() { adjustSlides(); }, 100);\n    }\n\n    if (!window.addEventListener) {\n      window.attachEvent(\"resize\", function load(event) {\n        clearResize();\n      });\n    } else {\n      window.addEventListener(\"resize\", function load(event) {\n        clearResize();\n      });\n    }\n\n    function adjustSlides() {\n      var container = document.getElementById(\"slides_container\"),\n          slide = document.querySelectorAll('.selected_slide')[0];\n\n      if (slide) {\n        if (slide.offsetHeight+169+40+80 >= window.innerHeight) {\n          container.style.bottom = \"80px\";\n\n          var h = container.offsetHeight;\n\n          slide.style.height = h-169+\"px\";\n          slide.classList.add(\"scrolled\");\n        } else {\n          container.style.bottom = \"auto\";\n          container.style.minHeight = \"0\";\n\n          slide.style.height = \"auto\";\n          slide.classList.remove(\"scrolled\");\n        }\n      }\n    }\n\n    var resizeAction = O.Action(function() {\n      function imageLoaded() {\n        counter--;\n\n        if (counter === 0) {\n          adjustSlides();\n        }\n      }\n      var images = $('img');\n      var counter = images.length;\n\n      images.each(function() {\n        if (this.complete) {\n          imageLoaded.call( this );\n        } else {\n          $(this).one('load', imageLoaded);\n        }\n      });\n    });\n\n    function click(el) {\n      var element = O.Core.getElement(el);\n      var t = O.Trigger();\n\n      // TODO: clean properly\n      function click() {\n        t.trigger();\n      }\n\n      if (element) element.onclick = click;\n\n      return t;\n    }\n\n    O.Template({\n      init: function() {\n        var seq = O.Triggers.Sequential();\n\n        var baseurl = this.baseurl = 'http://{s}.api.cartocdn.com/base-light/{z}/{x}/{y}.png';\n        var map = this.map = L.map('map').setView([0, 0.0], 4);\n        var basemap = this.basemap = L.tileLayer(baseurl, {\n          attribution: 'data OSM - map CartoDB'\n        }).addTo(map);\n\n        // enanle keys to move\n        O.Keys().on('map').left().then(seq.prev, seq)\n        O.Keys().on('map').right().then(seq.next, seq)\n\n        click(document.querySelectorAll('.next')).then(seq.next, seq)\n        click(document.querySelectorAll('.prev')).then(seq.prev, seq)\n\n        var slides = O.Actions.Slides('slides');\n        var story = O.Story()\n\n        this.story = story;\n        this.seq = seq;\n        this.slides = slides;\n        this.progress = O.UI.DotProgress('dots').count(0);\n      },\n\n      update: function(actions) {\n        var self = this;\n\n        if (!actions.length) return;\n\n        this.story.clear();\n\n        if (this.baseurl && (this.baseurl !== actions.global.baseurl)) {\n          this.baseurl = actions.global.baseurl || 'http://0.api.cartocdn.com/base-light/{z}/{x}/{y}.png';\n\n          this.basemap.setUrl(this.baseurl);\n        }\n\n        if (this.cartoDBLayer && (\"http://\"+self.cartoDBLayer.options.user_name+\".cartodb.com/api/v2/viz/\"+self.cartoDBLayer.options.layer_definition.stat_tag+\"/viz.json\" !== actions.global.vizjson)) {\n          this.map.removeLayer(this.cartoDBLayer);\n\n          this.cartoDBLayer = null;\n          this.created = false;\n        }\n\n        if (actions.global.vizjson && !this.cartoDBLayer) {\n          if (!this.created) { // sendCode debounce < vis loader\n            cdb.vis.Loader.get(actions.global.vizjson, function(vizjson) {\n              self.map.fitBounds(vizjson.bounds);\n\n              cartodb.createLayer(self.map, vizjson)\n                .done(function(layer) {\n                  self.cartoDBLayer = layer;\n\n                  var sublayer = layer.getSubLayer(0),\n                      layer_name = layer.layers[0].options.layer_name,\n                      filter = actions.global.cartodb_filter ? \" WHERE \"+actions.global.cartodb_filter : \"\";\n\n                  sublayer.setSQL(\"SELECT * FROM \"+layer_name+filter)\n\n                  self.map.addLayer(layer);\n\n                  self._resetActions(actions);\n                }).on('error', function(err) {\n                  console.log(\"some error occurred: \" + err);\n                });\n            });\n\n            this.created = true;\n          }\n\n          return;\n        }\n\n        this._resetActions(actions);\n      },\n\n      _resetActions: function(actions) {\n        // update footer title and author\n        var title_ = actions.global.title === undefined ? '' : actions.global.title,\n            author_ = actions.global.author === undefined ? 'Using' : 'By '+actions.global.author+' using';\n\n        document.getElementById('title').innerHTML = title_;\n        document.getElementById('author').innerHTML = author_;\n        document.title = title_ + \" | \" + author_ +' Odyssey.js';\n\n        var sl = actions;\n\n        document.getElementById('slides').innerHTML = ''\n        this.progress.count(sl.length);\n\n        // create new story\n        for(var i = 0; i < sl.length; ++i) {\n          var slide = sl[i];\n          var tmpl = \"<div class='slide' style='diplay:none'>\";\n\n          tmpl += slide.html();\n          tmpl += \"</div>\";\n          document.getElementById('slides').innerHTML += tmpl;\n\n          this.progress.step(i).then(this.seq.step(i), this.seq)\n\n          var actions = O.Parallel(\n            this.slides.activate(i),\n            slide(this),\n            this.progress.activate(i),\n            resizeAction\n          );\n\n          actions.on(\"finish.app\", function() {\n            adjustSlides();\n          });\n\n          this.story.addState(\n            this.seq.step(i),\n            actions\n          )\n        }\n\n        this.story.go(this.seq.current());\n      },\n\n      changeSlide: function(n) {\n        this.seq.current(n);\n      }\n    });\n  </script>\n\n  <script>\n    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n    ga('create', 'UA-20934186-21', 'cartodb.github.io');\n    ga('send', 'pageview');\n  </script>\n\n  <script type=\"text/javascript\" src=\"http://fast.fonts.net/jsapi/3af16084-ba56-49ca-b37d-0b49b59e1927.js\"></script>\n\n<script id=\"md_template\" type=\"text/template\">```\n-baseurl: \"https://2.maps.nlp.nokia.com/maptile/2.1/maptile/newest/normal.day/{z}/{x}/{y}/256/png8?lg=eng&token=A7tBPacePg9Mj_zghvKt9Q&app_id=KuYppsdXZznpffJsKT24\"\n-title: \"Major WWII battles in China\"\n-author: \"CCTV America\"\n```\n#Major WWII battles in China\n```\n- center: [39.849167, 116.213056]\n- zoom: 4\nL.marker([39.8492, 116.2131]).actions.addRemove(S.map)\n```\n![Plane](https://upload.wikimedia.org/wikipedia/commons/f/f0/Soviet_volunteer.jpg)\n\n\nFor the United States, World War two lasted a few months shy of four years. For China, the fighting lasted more than twice as long. From the first shots fired at Lgu Qio (Marco Polo Bridge) that began Chinas War Against Japanese Aggression  to Japans formal surrender on the decks of the U.S.S. Missouri eight years later  the Chinese people suffered an estimated 20 million casualties. Thats almost the entire population of Australia.\n \nThese are the major clashes that would define a generation of Chinese. Their sacrifices earned China one of the five permanent seats on the UN Security Councila place of honor as one of the five victorious Allied powers of World War Two.\n \nWestern historians also call this eight-year conflict the Second Sino-Japanese War. While China joined the Allies in declaring war on Germany on December 9, 1941, Chinas principal foe throughout World War Two was Japan.\n\n#The Lgu Qio (Marco Polo Bridge) Incident\n```\n- center: [39.849167, 116.213056]\n- zoom: 16\nL.marker([39.8492, 116.2131]).actions.addRemove(S.map)\n```\n![Bridge](https://upload.wikimedia.org/wikipedia/commons/4/49/Japanese_Bombarded_Wanping.gif)\n\n\nJuly 7, 1937\n \nJapanese troops near Lgu Qio  a bridge near Wanping on the outskirts of Beijing  were carrying out nighttime maneuvers without informing the Chinese. When they ran into Chinese troops, the two sides opened fire.\n \nLater that night, a Japanese soldier was reported missing. The Japanese wanted to look for him inside Wanpinga walled fortress dating back to the 17th century. The Chinese said they would do the search accompanied by a Japanese officer. Japanese infantry launched an attack instead.  By 6 a.m., the Japanese occupied the area. Two garrison platoons of Chinese soldiers were killed in the battle.\n \nWesterners call Lgu Qio the Marco Polo Bridge, because 13th century Italian explorer, Marco Polo, wrote a description of the original bridge that became well known in Europe.\n \nAlthough Japanese forces occupied a region in Northeast China called Manchuria in 1931, the Lgu Qio, or Marco Polo, Incident gave Japan a pretext to launch a larger, full-scale invasion of the Chinese mainland that began with the shelling of Wanping. \n \nThis incident is generally considered the beginning of the War Against Japanese Aggression. \n\n\n\n#Battle of Shanghai\n```\n- center: [31.2323, 121.469]\n- zoom: 12\nL.marker([31.2323, 121.469]).actions.addRemove(S.map)\n```\n![A](http://www.museumsyndicate.com/images/7/66454.jpg)\n\nAug. 13  Nov. 11, 1937\n\nIt was the first major engagement between Chinas National Revolutionary Army and Japanese forces. The Battle of Shanghai  or the Battle of Songhu as its known in China  was the also one of the bloodiest clashes of the war. Historian Peter Harmsen dubbed it Stalingrad on the Yangtze. China suffered more than 280,000 casualties, Japan more than 90,000. Some researchers say Japan expected victory in as little as three days, but Chinese troops held their ground. \n\nAfter Shanghai fell on Nov. 11, American journalist Edgar Snow wrote: [the Chinese soldier] has made his adversary pay dearly for the few miles he has advanced in the last three months. According to historian Poshek Fu: the Battle of Shanghai helped destroy the Japanese hope of a quick victory in China. Instead of taking the whole of North China in a matter of months with a force of 300,000 as it had boasted it would do so, Japan was forced to commit almost a quarter of a million men and hundreds of planes and warships to the Shanghai front alone.\n \nOutcome: Japanese victory\n\nCasualties: 283,500 Chinese; 92,640 Japanese (estimated)  \n\n\n\n#Stay tuned\n```\n- center: [21.9838, -260.2441]\n- zoom: 5\n```\n![Salween](http://ww2db.com/images/imagemagick/tmb_battle_salween4.jpg)\n\n\nMore battles will be added around their anniversaries.\n\n\n</script>", "description": "Mapping China's WWII battles - Shanghai ", "created_at": "2015-08-14T20:09:05Z", "updated_at": "2015-08-29T14:27:26Z", "api": [], "readme": "", "uid": "elizabethshell_f14ce97283c1f11f9ebb"}, {"code": "<script>\n\nvar margin = {top: 50, right: 80, bottom: 20, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 340 - margin.top - margin.bottom;\n\nvar types = {\n  \"Number\": {\n    key: \"Number\",\n    coerce: function(d) { return +d; },\n    extent: d3.extent,\n    within: function(d, extent) { return extent[0] <= d && d <= extent[1]; },\n    defaultScale: d3.scale.linear().range([height, 0])\n  },\n  \"String\": {\n    key: \"String\",\n    coerce: String,\n    extent: function (data) { return data.sort(); },\n    within: function(d, extent, dim) { return extent[0] <= dim.scale(d) && dim.scale(d) <= extent[1]; },\n    defaultScale: d3.scale.ordinal().rangePoints([0, height])\n  },\n  \"Date\": {\n    key: \"Date\",\n    coerce: function(d) { return new Date(d); },\n    extent: d3.extent,\n    within: function(d, extent) { return extent[0] <= d && d <= extent[1]; },\n    defaultScale: d3.time.scale().range([0, height])\n  }\n};\n\nvar dimensions = [\n  {\n    key: \"name\",\n    description: \"Name\",\n    type: types[\"String\"]\n  },\n  {\n    key: \"satelliteNumber\",\n    description: \"SatelliteNumber\",\n    type: types[\"String\"]\n  },\n  {\n    key: \"classification\",\n    description: \"Classification\",\n    type: types[\"String\"]\n  },\n  {\n    key: \"launchNumber\",\n    description: \"Launch Number\",\n    type: types[\"Number\"]\n  },\n  {\n    key: \"launchPiece\",\n    description: \"Launch Piece\",\n    type: types[\"String\"]\n  },\n  {\n    key: \"epochYear\",\n    description: \"Epoch Year\",\n    type: types[\"String\"]\n  },\n  {\n    key: \"epochDay\",\n    description: \"Epoch Day\",\n    type: types[\"Number\"],\n    domain: [0,360]\n  },\n  {\n    key: \"inclination\",\n    description: \"inclination\",\n    type: types[\"Number\"],\n    domain: [0,90]\n  },\n  {\n    key: \"rightAscension\",\n    description: \"Right Ascension\",\n    type: types[\"Number\"],\n    domain: [0,360]\n  },\n  {\n    key: \"eccentricity\",\n    description: \"Eccentricity\",\n    type: types[\"Number\"],\n    domain: [0,0.002]\n  },\n  {\n    key: \"perigee\",\n    description: \"Perigee\",\n    type: types[\"Number\"],\n    domain: [0,360]\n  },\n  {\n    key: \"meanAnomaly\",\n    description: \"Mean Anomaly\",\n    type: types[\"Number\"],\n    domain: [0,360]\n  },\n  {\n    key: \"meanMotion\",\n    description: \"Mean Motion\",\n    type: types[\"Number\"]\n  },\n  {\n    key: \"firstDerivMeanMotion\",\n    description: \"First Deriv Mean Motion\",\n    type: types[\"Number\"]\n  }\n];\n\nvar x = d3.scale.ordinal()\n    .domain(dimensions.map(function(dim) { return dim.key; }))\n    .rangePoints([0, width]);\n\nvar line = d3.svg.line()\n    .defined(function(d) { return !isNaN(d[1]); });\n\nvar yAxis = d3.svg.axis()\n    .orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar output = d3.select(\"body\").append(\"pre\");\n\nvar foreground = svg.append(\"g\")\n  .attr(\"class\", \"foreground\");\n\nvar axes = svg.selectAll(\".axis\")\n    .data(dimensions)\n  .enter().append(\"g\")\n    .attr(\"class\", \"axis\")\n    .attr(\"transform\", function(d) { return \"translate(\" + x(d.key) + \")\"; });\n\nd3.csv(\"stations.csv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    dimensions.forEach(function(p) {\n      d[p.key] = p.type.coerce(d[p.key]);\n    });\n  });\n\n  // type/dimension default setting happens here\n  dimensions.forEach(function(dim) {\n    if (!(\"domain\" in dim)) {\n      // detect domain using dimension type's extent function\n      dim.domain = d3.functor(dim.type.extent)(data.map(function(d) { return d[dim.key]; }));\n\n      // TODO - this line only works because the data encodes data with integers\n      // Sorting/comparing should be defined at the type/dimension level\n      dim.domain.sort(function(a,b) {\n        return a - b;\n      });\n    }\n    if (!(\"scale\" in dim)) {\n      // use type's default scale for dimension\n      dim.scale = dim.type.defaultScale.copy();\n    }\n    dim.scale.domain(dim.domain);\n  });\n\n  foreground.selectAll(\"path\")\n      .data(data)\n    .enter().append(\"path\")\n      .attr(\"d\", draw)\n      .style(\"stroke\", function(d) { return \"#6ac\"; });\n\n  axes.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) {\n        var renderAxis = \"axis\" in d\n          ? d.axis.scale(d.scale)  // custom axis\n          : yAxis.scale(d.scale);  // default axis\n        d3.select(this).call(renderAxis);\n      })\n    .append(\"text\")\n      .attr(\"class\", \"title\")\n      .attr(\"text-anchor\", \"start\")\n      .text(function(d) { return \"description\" in d ? d.description : d.key; });\n\n  // Add and store a brush for each axis.\n  axes.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) {\n        d3.select(this).call(d.brush = d3.svg.brush()\n          .y(d.scale)\n          .on(\"brushstart\", brushstart)\n          .on(\"brush\", brush));\n      })\n    .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n\n  output.text(d3.tsv.format(data));\n\n  function draw(d) {\n    return line(dimensions.map(function(dim) {\n      return [x(dim.key), dim.scale(d[dim.key])];\n    }));\n  }\n\n  function brushstart() {\n    d3.event.sourceEvent.stopPropagation();\n  }\n\n  // Handles a brush event, toggling the display of foreground lines.\n  function brush() {\n    var actives = dimensions.filter(function(p) { return !p.brush.empty(); }),\n        extents = actives.map(function(p) { return p.brush.extent(); });\n\n    var selected = [];\n\n    d3.selectAll(\".foreground path\").style(\"display\", function(d) {\n      if (actives.every(function(dim, i) {\n          // test if point is within extents for each active brush\n          return dim.type.within(d[dim.key], extents[i], dim);\n        })) {\n        selected.push(d);\n        return null;\n      }\n      return \"none\";\n    });\n\n    output.text(d3.tsv.format(selected));\n  }\n});\n\n</script>", "description": "Space Stations", "created_at": "2015-08-08T08:13:01Z", "updated_at": "2016-04-29T14:43:20Z", "api": ["d3.text", "d3.select", "d3.csv.format", "d3.scale.linear", "d3.scale.ordinal", "d3.time.scale", "d3.svg.line", "d3.svg.axis", "d3.csv", "d3.functor", "d3.svg.brush", "d3.tsv.format", "d3.event.sourceEvent.stopPropagation", "d3.selectAll"], "readme": "[Space station orbit data](http://www.celestrak.com/NORAD/elements/stations.txt) in [Two-Element Format](http://www.celestrak.com/NORAD/documentation/tle-fmt.asp). Data collected at 1:40am PDT August 8, 2015.\n", "uid": "syntagmatic_4446b31c6cd746eedaeb"}, {"code": "<script>\n\nvar months,\n    monthFormat = d3.time.format(\"%Y-%m\");\n\nvar margin = {top: 20, right: 30, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar voronoi = d3.geom.voronoi()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); })\n    .clipExtent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]]);\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"unemployment.tsv\", type, function(error, cities) {\n  x.domain(d3.extent(months));\n  y.domain([0, d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\"));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .ticks(10, \"%\"))\n    .append(\"text\")\n      .attr(\"x\", 4)\n      .attr(\"dy\", \".32em\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Unemployment Rate\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"cities\")\n    .selectAll(\"path\")\n      .data(cities)\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { d.line = this; return line(d.values); });\n\n  var focus = svg.append(\"g\")\n      .attr(\"transform\", \"translate(-100,-100)\")\n      .attr(\"class\", \"focus\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 3.5);\n\n  focus.append(\"text\")\n      .attr(\"y\", -10);\n\n  var voronoiGroup = svg.append(\"g\")\n      .attr(\"class\", \"voronoi\");\n\n  voronoiGroup.selectAll(\"path\")\n      .data(voronoi(d3.nest()\n          .key(function(d) { return x(d.date) + \",\" + y(d.value); })\n          .rollup(function(v) { return v[0]; })\n          .entries(d3.merge(cities.map(function(d) { return d.values; })))\n          .map(function(d) { return d.values; })))\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; })\n      .datum(function(d) { return d.point; })\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout);\n\n  d3.select(\"#show-voronoi\")\n      .property(\"disabled\", false)\n      .on(\"change\", function() { voronoiGroup.classed(\"voronoi--show\", this.checked); });\n\n  function mouseover(d) {\n    d3.select(d.city.line).classed(\"city--hover\", true);\n    d.city.line.parentNode.appendChild(d.city.line);\n    focus.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.value) + \")\");\n    focus.select(\"text\").text(d.city.name);\n  }\n\n  function mouseout(d) {\n    d3.select(d.city.line).classed(\"city--hover\", false);\n    focus.attr(\"transform\", \"translate(-100,-100)\");\n  }\n});\n\nfunction type(d, i) {\n  if (!i) months = Object.keys(d).map(monthFormat.parse).filter(Number);\n  var city = {\n    name: d.name.replace(/ (msa|necta div|met necta|met div)$/i, \"\"),\n    values: null\n  };\n  city.values = months.map(function(m) {\n    return {\n      city: city,\n      date: m,\n      value: d[monthFormat(m)] / 100\n    };\n  });\n  return city;\n}\n\n</script>", "description": "Multi-Line Voronoi 2015", "created_at": "2015-08-07T22:28:13Z", "updated_at": "2015-08-29T14:26:54Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.geom.voronoi", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.max", "d3.svg.axis", "d3.nest", "d3.merge"], "readme": "This is an exact copy of the original [Multi-Line Voronoi Example](http://bl.ocks.org/mbostock/8033015), using up-to-date data from 2015. The new data was fetched and processed using the original Makefile.", "uid": "curran_6c0ce7a12c7d5497350d"}, {"code": "<script>\n\nvar circles = [\n  {x: 380, y: 250, r: 80},\n  {x: 600, y: 100, r: 20},\n  {x: 600, y: 300, r: 120},\n  {x: 500, y: 150, r: 40},\n  {x: 450, y: 400, r: 20}\n];\n\nvar svg = d3.select(\"svg\");\n\nvar circle = svg.selectAll(\".circle\")\n    .data(circles)\n  .enter().append(\"g\")\n    .attr(\"class\", \"circle\")\n    .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n        .origin(function(d) { return d; })\n        .on(\"dragstart\", dragstarted)\n        .on(\"drag\", dragged));\n\ncircle.append(\"circle\")\n    .attr(\"r\", function(d) { return d.r; });\n\nvar ring = svg.append(\"g\")\n    .attr(\"class\", \"ring\");\n\nring.append(\"circle\")\n    .attr(\"class\", \"ring-outer\");\n\nring.append(\"circle\")\n    .attr(\"class\", \"ring-inner\");\n\nupdate();\n\nfunction dragstarted(d) {\n  this.parentNode.appendChild(this);\n}\n\nfunction dragged(d) {\n  d3.select(this).attr(\"transform\", \"translate(\" + (d.x = d3.event.x) + \",\" + (d.y = d3.event.y) + \")\");\n  update();\n}\n\nfunction update() {\n  var c = enclosingCircle(circles);\n  ring.attr(\"transform\", \"translate(\" + c.x + \",\" + c.y + \")\");\n  ring.select(\".ring-inner\").attr(\"r\", c.r - 3);\n  ring.select(\".ring-outer\").attr(\"r\", c.r);\n}\n\n// Returns a linked list from the specified array in random order.\nfunction randomizedList(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = {id: array.length - n, value: array[n - 1], next: null};\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {head: head, tail: node};\n}\n\n// Returns the smallest circle that contains the specified circles.\nfunction enclosingCircle(circles) {\n  return enclosingCircleIntersectingCircles(randomizedList(circles), []);\n}\n\n// Returns the smallest circle that contains the circles L\n// and intersects the circles B.\nfunction enclosingCircleIntersectingCircles(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = B[0]; break;\n    case 2: circle = circleIntersectingTwoCircles(B[0], B[1]); break;\n    case 3: circle = circleIntersectingThreeCircles(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1.value, l2 = l1.next;\n    if (!circle || !circleContainsCircle(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = enclosingCircleIntersectingCircles(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\n// Returns true if the specified circle1 contains the specified circle2.\nfunction circleContainsCircle(circle1, circle2) {\n  var xc0 = circle1.x - circle2.x,\n      yc0 = circle1.y - circle2.y;\n  return Math.sqrt(xc0 * xc0 + yc0 * yc0) < circle1.r - circle2.r + 1e-6;\n}\n\n// Returns the smallest circle that intersects the two specified circles.\nfunction circleIntersectingTwoCircles(circle1, circle2) {\n  var x1 = circle1.x, y1 = circle1.y, r1 = circle1.r,\n      x2 = circle2.x, y2 = circle2.y, r2 = circle2.r,\n      x12 = x2 - x1, y12 = y2 - y1, r12 = r2 - r1,\n      l = Math.sqrt(x12 * x12 + y12 * y12);\n  return {\n    x: (x1 + x2 + x12 / l * r12) / 2,\n    y: (y1 + y2 + y12 / l * r12) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\n// Returns the smallest circle that intersects the three specified circles.\nfunction circleIntersectingThreeCircles(circle1, circle2, circle3) {\n  var x1 = circle1.x, y1 = circle1.y, r1 = circle1.r,\n      x2 = circle2.x, y2 = circle2.y, r2 = circle2.r,\n      x3 = circle3.x, y3 = circle3.y, r3 = circle3.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\n</script>", "description": "Smallest Enclosing Circle", "created_at": "2015-08-05T18:04:35Z", "updated_at": "2016-02-09T01:49:19Z", "api": ["d3.select", "d3.behavior.drag"], "readme": "The smallest circle that encloses a set of given circles can be computed using a variant of [Welzl\u2019s algorithm](https://en.wikipedia.org/wiki/Smallest-circle_problem). Instead of testing whether a circle contains a point, test whether a circle contains another circle; likewise instead of computing the circle that intersects two or three points, compute the circle that has internal tangents to two or three circles. (The latter is [Apollonius\u2019 problem](http://bl.ocks.org/mbostock/751fdd637f4bc2e3f08b).)\n\nDrag the circles to see the enclosing circle change.\n", "uid": "mbostock_29c534ff0b270054a01c"}, {"code": "<script>\n\nfunction apolloniusCircle(x1, y1, r1, x2, y2, r2, x3, y3, r3) {\n\n  // The quadratic equation (1):\n  //\n  //          0 = (x - x1) + (y - y1) - (r  r1)\n  //          0 = (x - x2) + (y - y2) - (r  r2)\n  //          0 = (x - x3) + (y - y3) - (r  r3)\n  //\n  // Use a negative radius to choose a different circle.\n  // We must rewrite this in standard form Ar + Br + C = 0 to solve for r.\n  // Per http://mathworld.wolfram.com/ApolloniusProblem.html\n\n  var a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3;\n\n  // Giving:\n  //\n  //          x = (b2 * d3 - b3 * d2 + (b3 * c2 - b2 * c3) * r) / (a3 * b2 - a2 * b3)\n  //          y = (a3 * d2 - a2 * d3 + (a2 * c3 - a3 * c2) * r) / (a3 * b2 - a2 * b3)\n  //\n  // Expand x - x1, substituting definition of x in terms of r.\n  //\n  //     x - x1 = (b2 * d3 - b3 * d2 + (b3 * c2 - b2 * c3) * r) / (a3 * b2 - a2 * b3) - x1\n  //            = (b2 * d3 - b3 * d2) / (a3 * b2 - a2 * b3) + (b3 * c2 - b2 * c3) / (a3 * b2 - a2 * b3) * r - x1\n  //            = bd / ab + bc / ab * r - x1\n  //            = xa + xb * r\n  //\n  // Where:\n\n  var ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab;\n\n  // Likewise expand y - y1, substituting definition of y in terms of r.\n  //\n  //     y - y1 = (a3 * d2 - a2 * d3 + (a2 * c3 - a3 * c2) * r) / (a3 * b2 - a2 * b3) - y1\n  //            = (a3 * d2 - a2 * d3) / (a3 * b2 - a2 * b3) + (a2 * c3 - a3 * c2) / (a3 * b2 - a2 * b3) * r - y1\n  //            = ad / ab + ac / ab * r - y1\n  //            = ya + yb * r\n  //\n  // Where:\n\n  var ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab;\n\n  // Expand (x - x1), (y - y1) and (r - r1):\n  //\n  //  (x - x1) = xb * xb * r + 2 * xa * xb * r + xa * xa\n  //  (y - y1) = yb * yb * r + 2 * ya * yb * r + ya * ya\n  //  (r - r1) = r - 2 * r1 * r + r1 * r1.\n  //\n  // Substitute back into quadratic equation (1):\n  //\n  //          0 = xb * xb * r + yb * yb * r - r\n  //              + 2 * xa * xb * r + 2 * ya * yb * r + 2 * r1 * r\n  //              + xa * xa + ya * ya - r1 * r1\n  //\n  // Rewrite in standard form Ar + Br + C = 0,\n  // then plug into the quadratic formula to solve for r, x and y.\n\n  var A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return isNaN(r) ? null : {x: xa + xb * r + x1, y: ya + yb * r + y1, r: r < 0 ? -r : r};\n}\n\nvar c1 = {x: 380, y: 250, r: 80},\n    c2 = {x: 600, y: 100, r: 20},\n    c3 = {x: 600, y: 300, r: 120};\n\nvar color = d3.scale.category10();\n\nvar svg = d3.select(\"svg\");\n\nvar circle = svg.selectAll(\".circle\")\n    .data([c1, c2, c3])\n  .enter().append(\"g\")\n    .attr(\"class\", \"circle\")\n    .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n        .origin(function(d) { return d; })\n        .on(\"dragstart\", dragstarted)\n        .on(\"drag\", dragged));\n\ncircle.append(\"circle\")\n    .attr(\"r\", function(d) { return d.r; });\n\nvar ring = svg.selectAll(\".ring\")\n    .data([\n      function() { return apolloniusCircle(c1.x, c1.y, +c1.r, c2.x, c2.y, +c2.r, c3.x, c3.y, +c3.r); },\n      function() { return apolloniusCircle(c1.x, c1.y, +c1.r, c2.x, c2.y, +c2.r, c3.x, c3.y, -c3.r); },\n      function() { return apolloniusCircle(c1.x, c1.y, +c1.r, c2.x, c2.y, -c2.r, c3.x, c3.y, +c3.r); },\n      function() { return apolloniusCircle(c1.x, c1.y, +c1.r, c2.x, c2.y, -c2.r, c3.x, c3.y, -c3.r); },\n      function() { return apolloniusCircle(c1.x, c1.y, -c1.r, c2.x, c2.y, +c2.r, c3.x, c3.y, +c3.r); },\n      function() { return apolloniusCircle(c1.x, c1.y, -c1.r, c2.x, c2.y, +c2.r, c3.x, c3.y, -c3.r); },\n      function() { return apolloniusCircle(c1.x, c1.y, -c1.r, c2.x, c2.y, -c2.r, c3.x, c3.y, +c3.r); },\n      function() { return apolloniusCircle(c1.x, c1.y, -c1.r, c2.x, c2.y, -c2.r, c3.x, c3.y, -c3.r); }\n    ])\n  .enter().insert(\"g\", \".circle\")\n    .attr(\"class\", \"ring\")\n    .style(\"stroke\", function(d, i) { return color(i); });\n\nring.append(\"circle\")\n    .attr(\"class\", \"ring-outer\");\n\nring.append(\"circle\")\n    .attr(\"class\", \"ring-inner\");\n\nupdate();\n\nfunction dragstarted(d) {\n  this.parentNode.appendChild(this);\n}\n\nfunction dragged(d) {\n  d3.select(this).attr(\"transform\", \"translate(\" + (d.x = d3.event.x) + \",\" + (d.y = d3.event.y) + \")\");\n  update();\n}\n\nfunction update() {\n  ring.each(function(f) {\n    var c = f();\n    if (c) {\n      var ring = d3.select(this).style(\"display\", null).attr(\"transform\", \"translate(\" + c.x + \",\" + c.y + \")\");\n      ring.select(\".ring-inner\").attr(\"r\", c.r - 3);\n      ring.select(\".ring-outer\").attr(\"r\", c.r);\n    } else {\n      d3.select(this).style(\"display\", \"none\");\n    }\n  });\n}\n\n</script>", "description": "Apollonius\u2019 Problem II", "created_at": "2015-08-03T20:50:48Z", "updated_at": "2016-05-18T19:34:16Z", "api": ["d3.scale.category10", "d3.select", "d3.behavior.drag"], "readme": "[Apollonius\u2019 problem](http://mathworld.wolfram.com/ApolloniusProblem.html) is to compute the circle that is tangent to three given circles. There are up to eight such circles.\n\nDrag the circles to see the tangent circles change.\n", "uid": "mbostock_7115f7a0393de96f2fdc"}, {"code": "<script>\n\nfunction apolloniusCircle(x1, y1, r1, x2, y2, r2, x3, y3, r3) {\n\n  // The quadratic equation (1):\n  //\n  //          0 = (x - x1) + (y - y1) - (r  r1)\n  //          0 = (x - x2) + (y - y2) - (r  r2)\n  //          0 = (x - x3) + (y - y3) - (r  r3)\n  //\n  // Use a negative radius to choose a different circle.\n  // We must rewrite this in standard form Ar + Br + C = 0 to solve for r.\n  // Per http://mathworld.wolfram.com/ApolloniusProblem.html\n\n  var a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3;\n\n  // Giving:\n  //\n  //          x = (b2 * d3 - b3 * d2 + (b3 * c2 - b2 * c3) * r) / (a3 * b2 - a2 * b3)\n  //          y = (a3 * d2 - a2 * d3 + (a2 * c3 - a3 * c2) * r) / (a3 * b2 - a2 * b3)\n  //\n  // Expand x - x1, substituting definition of x in terms of r.\n  //\n  //     x - x1 = (b2 * d3 - b3 * d2 + (b3 * c2 - b2 * c3) * r) / (a3 * b2 - a2 * b3) - x1\n  //            = (b2 * d3 - b3 * d2) / (a3 * b2 - a2 * b3) + (b3 * c2 - b2 * c3) / (a3 * b2 - a2 * b3) * r - x1\n  //            = bd / ab + bc / ab * r - x1\n  //            = xa + xb * r\n  //\n  // Where:\n\n  var ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab;\n\n  // Likewise expand y - y1, substituting definition of y in terms of r.\n  //\n  //     y - y1 = (a3 * d2 - a2 * d3 + (a2 * c3 - a3 * c2) * r) / (a3 * b2 - a2 * b3) - y1\n  //            = (a3 * d2 - a2 * d3) / (a3 * b2 - a2 * b3) + (a2 * c3 - a3 * c2) / (a3 * b2 - a2 * b3) * r - y1\n  //            = ad / ab + ac / ab * r - y1\n  //            = ya + yb * r\n  //\n  // Where:\n\n  var ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab;\n\n  // Expand (x - x1), (y - y1) and (r - r1):\n  //\n  //  (x - x1) = xb * xb * r + 2 * xa * xb * r + xa * xa\n  //  (y - y1) = yb * yb * r + 2 * ya * yb * r + ya * ya\n  //  (r - r1) = r - 2 * r1 * r + r1 * r1.\n  //\n  // Substitute back into quadratic equation (1):\n  //\n  //          0 = xb * xb * r + yb * yb * r - r\n  //              + 2 * xa * xb * r + 2 * ya * yb * r + 2 * r1 * r\n  //              + xa * xa + ya * ya - r1 * r1\n  //\n  // Rewrite in standard form Ar + Br + C = 0,\n  // then plug into the quadratic formula to solve for r, x and y.\n\n  var A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return r > 0 ? {x: xa + xb * r + x1, y: ya + yb * r + y1, r: r} : null;\n}\n\nvar c1 = {x: 380, y: 250, r: 80},\n    c2 = {x: 600, y: 100, r: 20},\n    c3 = {x: 600, y: 300, r: 120};\n\nvar svg = d3.select(\"svg\");\n\nvar circle = svg.selectAll(\".circle\")\n    .data([c1, c2, c3])\n  .enter().append(\"g\")\n    .attr(\"class\", \"circle\")\n    .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n        .origin(function(d) { return d; })\n        .on(\"dragstart\", dragstarted)\n        .on(\"drag\", dragged));\n\ncircle.append(\"circle\")\n    .attr(\"r\", function(d) { return d.r; });\n\nvar ring = svg.append(\"g\")\n    .attr(\"class\", \"ring\");\n\nring.append(\"circle\")\n    .attr(\"class\", \"ring-outer\");\n\nring.append(\"circle\")\n    .attr(\"class\", \"ring-inner\");\n\nupdate();\n\nfunction dragstarted(d) {\n  this.parentNode.appendChild(this);\n}\n\nfunction dragged(d) {\n  d3.select(this).attr(\"transform\", \"translate(\" + (d.x = d3.event.x) + \",\" + (d.y = d3.event.y) + \")\");\n  update();\n}\n\nfunction update() {\n  var c = apolloniusCircle(c1.x, c1.y, c1.r, c2.x, c2.y, c2.r, c3.x, c3.y, c3.r);\n  if (c) {\n    ring.style(\"display\", null).attr(\"transform\", \"translate(\" + c.x + \",\" + c.y + \")\");\n    ring.select(\".ring-inner\").attr(\"r\", c.r - 3);\n    ring.select(\".ring-outer\").attr(\"r\", c.r);\n  } else {\n    ring.style(\"display\", \"none\");\n  }\n}\n\n</script>", "description": "Apollonius\u2019 Problem", "created_at": "2015-08-03T19:05:52Z", "updated_at": "2016-02-09T01:49:25Z", "api": ["d3.select", "d3.behavior.drag"], "readme": "[Apollonius\u2019 problem](http://mathworld.wolfram.com/ApolloniusProblem.html) is to compute the circle that is tangent to three given circles. There are up to [eight such circles](/mbostock/7115f7a0393de96f2fdc). Above, only one is shown: the circle that is internally tangent to the three given circles, if it exists.\n\nDrag the circles to see the tangent circle change.\n", "uid": "mbostock_751fdd637f4bc2e3f08b"}, {"code": "<script>\n\nd3.csv(\"firm.csv\",function(error,data) {createNetwork(data)});\n\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\nfunction createNetwork(edgelist) {\n  var nodeHash = {};\n  var nodes = [];\n  var edges = [];\n\n  edgelist.forEach(function (edge) {\n    if (!nodeHash[edge.source]) {\n      nodeHash[edge.source] = {id: edge.source, label: edge.source};\n      nodes.push(nodeHash[edge.source]);\n    }\n    if (!nodeHash[edge.target]) {\n      nodeHash[edge.target] = {id: edge.target, label: edge.target};\n      nodes.push(nodeHash[edge.target]);\n    }\n    if (edge.weight == 5) {\n      edges.push({id: nodeHash[edge.source].id + \"-\" + nodeHash[edge.target].id, source: nodeHash[edge.source], target: nodeHash[edge.target], weight: edge.weight});\n    }\n  });\n  createForceNetwork(nodes, edges);\n}\n\nfunction modularityCensus(nodes, edges, moduleHash) {\n  edges.forEach(function (edge) {\n    if (edge.source.module !== edge.target.module) {\n      edge.border = true;\n    }\n    else {\n      edge.border = false;\n    }\n  });\n  nodes.forEach(function (node) {\n    var theseEdges = edges.filter(function(d) {return d.source === node || d.target === node});\n\n    var theseSourceModules = theseEdges.map(function (d) {return d.source.module}).filter(onlyUnique);\n    var theseTargetModules = theseEdges.map(function (d) {return d.target.module}).filter(onlyUnique);\n\n    if (theseSourceModules.length > 1 || theseTargetModules.length > 1) {\n      node.border = true;\n    }\n    else {\n      node.border = false;\n    }\n  });\n\n}\n\nfunction createForceNetwork(nodes, edges) {\n\n//create a network from an edgelist\n\nvar colors = d3.scale.ordinal().domain([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]).range([\"#996666\", \"#66CCCC\", \"#FFFF99\", \"#CC9999\", \"#666633\", \"#993300\", \"#999966\", \"#660000\", \"#996699\", \"#cc6633\", \"#ff9966\", \"#339999\", \"#6699cc\", \"#ffcc66\", \"#ff6600\", \"#00ccccc\"]);\n\nvar node_data = nodes.map(function (d) {return d.id});\nvar edge_data = edges.map(function (d) {return {source: d.source.id, target: d.target.id, weight: 1}; });\n\nvar community = jLouvain().nodes(node_data).edges(edge_data);\nvar result  = community();\n\nnodes.forEach(function (node) {\n  node.module = result[node.id]\n});\n\n modularityCensus(nodes, edges, result);\n\n  var force = d3.layout.force().nodes(nodes).links(edges)\n  .size([500,500])\n  .charge(-300)\n  .chargeDistance(100)\n  .gravity(0.05)\n  .on(\"tick\", updateNetwork);\n\nvar drag = force.drag()\n  .on(\"drag\", drag)\n  .on(\"dragend\", dragend)\n  .on(\"dragstart\", dragstart);\n\n  var edgeEnter = d3.select(\"svg.main\").selectAll(\"g.edge\")\n  .data(edges, function (d) {return d.id})\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"edge\");\n\n  edgeEnter\n  .append(\"line\")\n  .style(\"stroke-width\", function (d) {return d.border ? \"3px\" : \"1px\"})\n  .style(\"stroke\", \"black\")\n  .style(\"pointer-events\", \"none\");\n\n  var nodeEnter = d3.select(\"svg.main\").selectAll(\"g.node\")\n  .data(nodes, function (d) {return d.id})\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .call(drag);\n\n nodeEnter.append(\"circle\")\n  .attr(\"r\", 16)\n  .attr(\"class\", \"background\")\n  .style(\"fill\", \"lightgreen\")\n  .style(\"opacity\", 0)\n  .style(\"pointer-events\", \"none\");\n\n  nodeEnter.append(\"circle\")\n  .attr(\"r\", 8)\n  .attr(\"class\", \"foreground\")\n  .style(\"fill\", function (d) {return colors(d.module)})\n  .style(\"stroke\", \"black\")\n  .style(\"stroke-width\", function (d) {return d.border ? \"3px\" : \"1px\"})\n\n  nodeEnter.append(\"text\")\n  .style(\"text-anchor\", \"middle\")\n  .attr(\"y\", 3)\n  .style(\"stroke-width\", \"1px\")\n  .style(\"stroke-opacity\", 0.75)\n  .style(\"stroke\", \"white\")\n  .style(\"font-size\", \"8px\")\n  .text(function (d) {return d.id})\n  .style(\"pointer-events\", \"none\")\n\n  nodeEnter.append(\"text\")\n  .style(\"text-anchor\", \"middle\")\n  .attr(\"y\", 3)\n  .style(\"font-size\", \"8px\")\n  .text(function (d) {return d.id})\n  .style(\"pointer-events\", \"none\")\n\n  force.start();\n\n  function dragstart() {\n    nodes.forEach(function (node) {\n      node.fixed = true;\n    })\n  }\n\n  function drag(d) {\n    var nodeDom = this;\n    var foundOverlap = false\n    nodes.forEach(function (otherNode) {\n      var distance = Math.sqrt(Math.pow(otherNode.x - d.x, 2) + Math.pow(otherNode.y - d.y, 2));\n      if (otherNode != d && distance < 16) {\n        foundOverlap = true;\n      }\n    })\n    if (foundOverlap == true) {\n      d3.select(nodeDom).select(\"circle.background\")\n        .style(\"opacity\", 0.5)\n    }\n    else {\n      d3.select(nodeDom).select(\"circle.background\")\n        .style(\"opacity\", 0)\n    }\n  }\n\n\n  function dragend(d) {\n    force.stop();\n\n    d3.selectAll(\"circle.background\")\n      .style(\"opacity\", 0);\n\n    nodes.forEach(function (otherNode) {\n      otherNode.fixed = false;\n      var distance = Math.sqrt(Math.pow(otherNode.x - d.x, 2) + Math.pow(otherNode.y - d.y, 2));\n      if (otherNode != d && distance < 16) {\n        var newEdge = {id: d.id + \"-\" + otherNode.id, source: d, target: otherNode};\n        if (edges.map(function (d) {return d.id}).indexOf(newEdge.id) == -1) {\n          edges.push(newEdge);\n        }\n      }\n    });\n    force.links(edges);\n\n    var edgeEnter = d3.select(\"svg.main\").selectAll(\"g.edge\")\n      .data(edges, function (d) {return d.id})\n      .enter()\n      .insert(\"g\", \"g.node\")\n      .attr(\"class\", \"edge\");\n\n    edgeEnter\n      .append(\"line\")\n      .style(\"stroke-width\", function (d) {return d.border ? \"3px\" : \"1px\"})\n      .style(\"stroke\", \"black\")\n      .style(\"pointer-events\", \"none\");\n\n    var community = jLouvain().nodes(node_data).edges(edge_data);\n    var result  = community();\n\n    nodes.forEach(function (node) {\n      node.module = result[node.id]\n    });\n\n    node_data = nodes.map(function (d) {return d.id});\n    edge_data = edges.map(function (d) {return {source: d.source.id, target: d.target.id, weight: 1}; });\n\n    modularityCensus(nodes, edges, result);\n\n    d3.selectAll(\"circle.foreground\")\n    .style(\"fill\", function (d) {return colors(d.module)})\n    .style(\"stroke-width\", function (d) {return d.border ? \"3px\" : \"1px\"});\n\n    force.start();\n\n  }\n\n  function updateNetwork(e) {\n\n    d3.select(\"svg.main\").selectAll(\"line\")\n    .attr(\"x1\", function (d) {return d.source.x})\n    .attr(\"y1\", function (d) {return d.source.y})\n    .attr(\"x2\", function (d) {return d.target.x})\n    .attr(\"y2\", function (d) {return d.target.y});\n\n    d3.select(\"svg.main\").selectAll(\"g.node\")\n      .attr(\"transform\", function (d) {return \"translate(\" + d.x + \",\" + d.y + \")\"});\n\n  }\n\n}\n</script>", "description": "Networks - Graphs 7", "created_at": "2015-07-26T01:57:34Z", "updated_at": "2016-03-17T02:04:06Z", "api": ["d3.csv", "d3.scale.ordinal", "d3.layout.force", "d3.select", "d3.selectAll"], "readme": "Graph Example 7 for [How to Create Effective Network Data Visualization](http://elijahmeeks/networkviz/)\n\nOne method that seems intuitive for creating links between existing nodes is to allow the user to drag that node onto the node to which you want to make the connection.\n\nThis is particularly easy to do when the nodes are circular, since you just have to measure the distance from the center of each node to the center of other nodes. With squares or more irregular shapes, you'll need to settle for less accurate detection or using a bounding-box method.\n\nAfter making new connections, the modularity is recalculated based on the new links.\n\nThe method used here, which creates a background circle that lights up when in the proximity of another node, was first developed by Scott Murray and I for [Kindred Britain](http://kindred.stanford.edu).\n\nThis example relies on the [jLouvain](https://github.com/upphiminn/jLouvain) library to calculate community structure.\n", "uid": "emeeks_f2f6883ac7c965d09b90"}, {"code": "<script>\n\nd3.csv(\"firm.csv\",function(error,data) {createNetwork(data)});\n\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\nfunction createNetwork(edgelist) {\n  var nodeHash = {};\n  var nodes = [];\n  var edges = [];\n\n  edgelist.forEach(function (edge) {\n    if (!nodeHash[edge.source]) {\n      nodeHash[edge.source] = {id: edge.source, label: edge.source};\n      nodes.push(nodeHash[edge.source]);\n    }\n    if (!nodeHash[edge.target]) {\n      nodeHash[edge.target] = {id: edge.target, label: edge.target};\n      nodes.push(nodeHash[edge.target]);\n    }\n    if (edge.weight >= 5) {\n      edges.push({id: nodeHash[edge.source].id + \"-\" + nodeHash[edge.target].id, source: nodeHash[edge.source], target: nodeHash[edge.target], weight: edge.weight});\n    }\n  });\n  createForceNetwork(nodes, edges);\n}\n\nfunction modularityCensus(nodes, edges) {\n  edges.forEach(function (edge) {\n    if (edge.source.module !== edge.target.module) {\n      edge.border = true;\n    }\n    else {\n      edge.border = false;\n    }\n  });\n  nodes.forEach(function (node) {\n    var theseEdges = edges.filter(function(d) {return d.source === node || d.target === node});\n\n    var theseSourceModules = theseEdges.map(function (d) {return d.source.module}).filter(onlyUnique);\n    var theseTargetModules = theseEdges.map(function (d) {return d.target.module}).filter(onlyUnique);\n\n    if (theseSourceModules.length > 1 || theseTargetModules.length > 1) {\n      node.border = true;\n    }\n    else {\n      node.border = false;\n    }\n  });\n\n}\n\nfunction createForceNetwork(nodes, edges) {\n\n//create a network from an edgelist\n\nvar colors = d3.scale.ordinal().domain([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]).range([\"#996666\", \"#66CCCC\", \"#FFFF99\", \"#CC9999\", \"#666633\", \"#993300\", \"#999966\", \"#660000\", \"#996699\", \"#cc6633\", \"#ff9966\", \"#339999\", \"#6699cc\", \"#ffcc66\", \"#ff6600\", \"#00ccccc\"]);\n\nvar node_data = nodes.map(function (d) {return d.id});\nvar edge_data = edges.map(function (d) {return {source: d.source.id, target: d.target.id, weight: 1}; });\n\nvar community = jLouvain().nodes(node_data).edges(edge_data);\nvar result  = community();\n\nnodes.forEach(function (node) {\n  node.module = result[node.id]\n});\n\nmodularityCensus(nodes, edges);\n\n  var force = d3.layout.force().nodes(nodes).links(edges)\n  .size([500,500])\n  .charge(-300)\n  .gravity(0.2)\n  .on(\"tick\", updateNetwork);\n\n  var edgeEnter = d3.select(\"svg\").selectAll(\"g.edge\")\n  .data(edges, function (d) {return d.id})\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"edge\");\n\n  edgeEnter\n  .append(\"line\")\n  .style(\"stroke-width\", function (d) {return d.border ? \"3px\" : \"1px\"})\n  .style(\"stroke\", \"black\")\n  .style(\"pointer-events\", \"none\");\n\n  var nodeEnter = d3.select(\"svg\").selectAll(\"g.node\")\n  .data(nodes, function (d) {return d.id})\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .call(force.drag());\n\n  nodeEnter.append(\"circle\")\n  .attr(\"r\", 8)\n  .style(\"fill\", function (d) {return colors(d.module)})\n  .style(\"stroke\", \"black\")\n  .style(\"stroke-width\", function (d) {return d.border ? \"3px\" : \"1px\"})\n\n  nodeEnter.append(\"text\")\n  .style(\"text-anchor\", \"middle\")\n  .attr(\"y\", 3)\n  .style(\"stroke-width\", \"1px\")\n  .style(\"stroke-opacity\", 0.75)\n  .style(\"stroke\", \"white\")\n  .style(\"font-size\", \"8px\")\n  .text(function (d) {return d.id})\n  .style(\"pointer-events\", \"none\")\n\n  nodeEnter.append(\"text\")\n  .style(\"text-anchor\", \"middle\")\n  .attr(\"y\", 3)\n  .style(\"font-size\", \"8px\")\n  .text(function (d) {return d.id})\n  .style(\"pointer-events\", \"none\")\n\n  force.start();\n\n  function updateNetwork() {\n    d3.select(\"svg\").selectAll(\"line\")\n    .attr(\"x1\", function (d) {return d.source.x})\n    .attr(\"y1\", function (d) {return d.source.y})\n    .attr(\"x2\", function (d) {return d.target.x})\n    .attr(\"y2\", function (d) {return d.target.y});\n\n    d3.select(\"svg\").selectAll(\"g.node\")\n      .attr(\"transform\", function (d) {return \"translate(\" + d.x + \",\" + d.y + \")\"});\n\n  }\n\n\n\n}\n</script>", "description": "Networks - Graphs 3", "created_at": "2015-07-26T01:29:10Z", "updated_at": "2016-03-17T02:05:01Z", "api": ["d3.csv", "d3.scale.ordinal", "d3.layout.force", "d3.select"], "readme": "Graph Example 3 for [How to Create Effective Network Data Visualization](http://elijahmeeks/networkviz/)\n\nThis example relies on the [jLouvain](https://github.com/upphiminn/jLouvain) library to calculate community structure of the network using the Louvain method. Automatic community detection in networks attempts to find structures such that the majority of links are within communities and only few links are between communities.\n\nAfter detecting communities, links between communities are highlighted with thicker lines and individuals connected to consultants in other communities are similarly highlighted.", "uid": "emeeks_09a49d15df06d56c8f70"}, {"code": "<script>\n\nd3.csv(\"firm.csv\",function(error,data) {createNetwork(data)});\n\nfunction createNetwork(edgelist) {\n  var nodeHash = {};\n  var nodes = [];\n  var edges = [];\n\n  edgelist.forEach(function (edge) {\n    if (!nodeHash[edge.source]) {\n      nodeHash[edge.source] = {id: edge.source, label: edge.source};\n      nodes.push(nodeHash[edge.source]);\n    }\n    if (!nodeHash[edge.target]) {\n      nodeHash[edge.target] = {id: edge.target, label: edge.target};\n      nodes.push(nodeHash[edge.target]);\n    }\n    if (edge.weight >= 5) {\n      edges.push({source: nodeHash[edge.source], target: nodeHash[edge.target], weight: edge.weight});\n    }\n  });\n  createForceNetwork(nodes, edges);\n}\n\nfunction createForceNetwork(nodes, edges) {\n\n//create a network from an edgelist\n\n  var force = d3.layout.force().nodes(nodes).links(edges)\n  .size([500,500])\n  .charge(-200)\n  .on(\"tick\", updateNetwork);\n\n  d3.select(\"svg\").selectAll(\"line\")\n  .data(edges)\n  .enter()\n  .append(\"line\")\n  .style(\"stroke-width\", \"1px\")\n  .style(\"stroke\", \"#996666\");\n\n  var nodeEnter = d3.select(\"svg\").selectAll(\"g.node\")\n  .data(nodes)\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .call(force.drag());\n\n  nodeEnter.append(\"circle\")\n  .attr(\"r\", 5)\n  .style(\"fill\", \"#CC9999\");\n\n  nodeEnter.append(\"text\")\n  .style(\"text-anchor\", \"middle\")\n  .attr(\"y\", 15)\n  .text(function (d) {return d.id})\n\n  force.start();\n\n  function updateNetwork() {\n    d3.select(\"svg\").selectAll(\"line\")\n    .attr(\"x1\", function (d) {return d.source.x})\n    .attr(\"y1\", function (d) {return d.source.y})\n    .attr(\"x2\", function (d) {return d.target.x})\n    .attr(\"y2\", function (d) {return d.target.y});\n\n    d3.select(\"svg\").selectAll(\"g.node\")\n      .attr(\"transform\", function (d) {return \"translate(\" + d.x + \",\" + d.y + \")\"});\n\n  }\n\n\n\n}\n</script>", "description": "Networks - Nodes 1", "created_at": "2015-07-26T00:50:46Z", "updated_at": "2016-03-17T02:06:38Z", "api": ["d3.csv", "d3.layout.force", "d3.select"], "readme": "Nodes Example 1 for [How to Create Effective Network Data Visualization](http://elijahmeeks/networkviz/)\n\nIn comparison to the interesting things you could do with edges, there's not too much you can do with nodes. Here the circles from past examples are replaced by SVG:g elements that contain a circle and a text element to show the id of the node as a label.\n\nThe major shift in code is that for SVG:g you no longer adjust the x/y or cx/cy attributes, rather you adjust the translate() of the transform attribute.", "uid": "emeeks_79c45d07f8777e71b3f3"}, {"code": "<script>\n\nd3.csv(\"firm.csv\",function(error,data) {dataViz(data)});\n\nfunction dataViz(incData) {\n\n  var nodeHash = {};\n  var nodes = [];\n  var edges = [];\n\n  incData.forEach(function (edge) {\n    if (!nodeHash[edge.source]) {\n      nodeHash[edge.source] = {id: edge.source, label: edge.source};\n      nodes.push(nodeHash[edge.source]);\n    }\n    if (!nodeHash[edge.target]) {\n      nodeHash[edge.target] = {id: edge.target, label: edge.target};\n      nodes.push(nodeHash[edge.target]);\n    }\n    edges.push({source: nodeHash[edge.source], target: nodeHash[edge.target], weight: edge.weight});\n  });\n\n  var force = d3.layout.force().nodes(nodes).links(edges)\n  .size([500,500])\n  .charge(-200)\n  .linkDistance(100)\n  .on(\"tick\", updateNetwork);\n\n  d3.select(\"svg\").selectAll(\"line\")\n  .data(edges)\n  .enter()\n  .append(\"line\")\n  .style(\"stroke-width\", \"1px\")\n  .style(\"stroke\", \"#CC9999\");\n\n  d3.select(\"svg\").selectAll(\"circle\")\n  .data(nodes)\n  .enter()\n  .append(\"circle\")\n  .style(\"fill\", \"#996666\")\n  .attr(\"r\", 5);\n\n  force.start();\n\n  function updateNetwork() {\n    d3.select(\"svg\").selectAll(\"line\")\n      .attr(\"x1\", function (d) {return d.source.x})\n      .attr(\"x2\", function (d) {return d.target.x})\n      .attr(\"y1\", function (d) {return d.source.y})\n      .attr(\"y2\", function (d) {return d.target.y});\n\n    d3.select(\"svg\").selectAll(\"circle\")\n      .attr(\"cx\", function (d) {return d.x})\n      .attr(\"cy\", function (d) {return d.y});\n  }\n\n\n\n}\n</script>", "description": "Networks - Intro 2", "created_at": "2015-07-25T23:50:11Z", "updated_at": "2016-03-17T02:07:45Z", "api": ["d3.csv", "d3.layout.force", "d3.select"], "readme": "Intro Example 2 for [How to Create Effective Network Data Visualization](http://elijahmeeks/networkviz/)\n\nHere's the same network dataset from the last example laid out as a network. The force-directed layout that D3 uses (d3.layout.force) expects arrays of nodes and arrays of edges. In order to create those necessary arrays, we walk through the edgelist in firm.csv and create the referenced nodes from the source and target id values in the edge list.\n\nThe resulting ball of spaghetti is all too common in finished network data visualization. Compared to the earlier bar charts, this is a horrible data visualization product and says nothing, other than perhaps \"this is complex\" but mostly, \"the person who created this is more interested in technology than they are in communication.\"", "uid": "emeeks_d25690581801fc0c1cfd"}, {"code": "<script>\n\t\n\t////////////////////////////////////////////////////////////// \n\t//////////////////////// Initiate //////////////////////////// \n\t////////////////////////////////////////////////////////////// \n\t\n\n\t\t\n\tvar margin = {top: 30, right: 30, bottom: 30, left: 30};\n\t\twidth = Math.min(300, $(\".chart\").width() - margin.left - margin.right);\n\n\tvar w = window,\n\t\td = document,\n\t\te = d.documentElement,\n\t\tg = d.getElementsByTagName('body')[0],\n\t\theight = (w.innerHeight || e.clientHeight || g.clientHeight) - margin.top - margin.bottom - 20;\n\t\t\n\t//Create scale\n\tvar xScale = d3.scale.linear()\n\t\t.domain([0, 1])\n\t\t.range([0, width]);\n\t\n\t//Create SVG\n\tvar svg = d3.select(\".chart\").append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t  .append(\"g\")\n\t\t.style(\"filter\", \"url(#gooey)\") //Set the filter on the container svg\n\t\t.attr(\"transform\", \"translate(\" + (margin.left) + \",\" +(height/2 + margin.top) + \")\");\n\n\t//SVG filter for the gooey effect\n\t//Code taken from http://tympanus.net/codrops/2015/03/10/creative-gooey-effects/\n\tvar defs = svg.append('defs');\n\tvar filter = defs.append('filter').attr('id','gooey');\n\tfilter.append('feGaussianBlur')\n\t\t.attr('in','SourceGraphic')\n\t\t.attr('stdDeviation','10')\n\t\t.attr('result','blur');\n\tfilter.append('feColorMatrix')\n\t\t.attr('in','blur')\n\t\t.attr('mode','matrix')\n\t\t.attr('values','1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7')\n\t\t.attr('result','gooey');\n\tfilter.append('feBlend')\n\t\t.attr('in','SourceGraphic')\n\t\t.attr('in2','gooey');\t\n\t\n\t//Append circle at center\n\tsvg.append(\"circle\")\n\t\t\t.attr(\"class\", \"centerCircle\")\n\t\t\t.attr(\"cx\", 0)\n\t\t\t.attr(\"cy\", 0)\n\t\t\t.attr(\"r\", 20)\n\t\t\t.style(\"fill\", \"#81BC00\");\n\t\n\t//Create a circle that will move out of the center circle\n\tsvg.append(\"circle\")\n\t\t\t.attr(\"class\", \"flyCircle\")\n\t\t\t.attr(\"cx\", 0)\n\t\t\t.attr(\"cy\", 0)\n\t\t\t.attr(\"r\", 15)\n\t\t\t.style(\"fill\", \"#81BC00\")\n\t\t\t.each(update);\t\n\n\t//Continuously keep the circle flying out\n\tfunction update() {\n\t\t\tvar circle = d3.selectAll(\".flyCircle\");\n\t\t\t\t\n\t\t\t(function repeat() {\n\t\t\t\tcircle\n\t\t\t\t\t.attr(\"cx\", 0)\n\t\t\t\t\t.attr(\"r\", 15)\n\t\t\t\t\t.transition().duration(1500)\n\t\t\t\t\t\t.attr(\"cx\", xScale(Math.random()))\n\t\t\t\t\t.transition().duration(1000)\n\t\t\t\t\t\t.attr(\"r\", 0)\n\t\t\t\t\t.each(\"end\", repeat);\t\t\t\n\t\t\t})();\n\t}//update\n\t\n\t</script>", "description": "Gooey Effect - Line", "created_at": "2015-07-22T19:09:32Z", "updated_at": "2015-08-29T14:25:36Z", "api": ["d3.scale.linear", "d3.select", "d3.selectAll"], "readme": "", "uid": "davo_a561a3a86f2b90a9fb79"}, {"code": "<script>\n\nvar margin = {top: 20, right: 40, bottom: 20, left: 10};\n\nvar width = 720 - margin.left - margin.right,\n   height = 400 - margin.top - margin.bottom;\n\nvar yScale = d3.scale.linear()\n    .range([height, 0]);\n\nvar xScale = d3.scale.linear()\n    .range([0, width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .tickSize(-height)\n    .tickPadding(8)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .tickSize(-width)\n    .tickPadding(8)\n    .orient(\"right\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n   .attr(\"width\", width + margin.left + margin.right)\n   .attr(\"height\", height + margin.top + margin.bottom)\n .append(\"g\")\n   .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"quartet.tsv\",  ready);\n\nfunction ready(error, data) {\n\n  if (error) throw error;\n\n\tvar uniqueGroups = d3.set(data.map(function(d) { return d.group; })).values();\n\n  var buttons = d3.select(\"body\").selectAll(\".controller-button\")\n    .data(uniqueGroups)\n    .enter()\n    .append(\"button\")\n    .attr(\"class\", \"controller-button\")\n    .text(function(d) { return \"Group \" + d; })\n    .on(\"click\", function(d) {\n     drawGroup(d);\n    });\n\n  // format your data\n  data.forEach( function (d) {\n      d.x = +d.x;\n      d.y = +d.y;\n  });\n\n\n  var initialGroup = data.filter(function(d) { return d.group == \"II\";});\n\n  xScale.domain(d3.extent(initialGroup, function(d) { return d.x; }));\n  yScale.domain(d3.extent(initialGroup, function(d) { return d.y; }));\n\n\n  //I only want one xAxis and One yAxis\n\n  var xAxisGroup = svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + (height) + \")\")\n      .call(xAxis);\n\n  var yAxisGroup = svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + (width) + \",0)\")\n      .call(yAxis);\n\n  var circleGroupData = svg.selectAll(\".circle-group\")\n      .data(initialGroup);\n\n  var circleGroupEnter = circleGroupData.enter()\n    .append(\"g\")\n      .attr(\"class\", \"circle-group\")\n      .attr(\"transform\", function(d) {\n        return \"translate(\" + xScale(d.x) + \",\" + yScale(d.y) + \")\";\n      });\n\n  var circle = circleGroupEnter.append(\"circle\")\n      .attr(\"r\", 5);\n\n  var label = circleGroupEnter.append(\"text\")\n      .text(function(d) {\n        return d.x + \",\" + d.y;\n      })\n      .attr(\"dx\", 5)\n      .attr(\"dy\", -5);\n\n  //AND I only want one data set at a time.\n\n  // Make new data join\n  // Get rid of old elements\n  // Enter new elements\n  // append elements as needed\n  // update new selection\n\n  function drawGroup(groupId) {\n    var thisGroup = data.filter(function(d) { return d.group === groupId; });\n\n    xScale.domain(d3.extent(thisGroup, function(d) { return d.x; }));\n    yScale.domain(d3.extent(thisGroup, function(d) { return d.y; }));\n\n    // UPDATE my X axis\n    xAxisGroup\n        .call(xAxis);\n\n    // UPDATE my Y axis\n    yAxisGroup\n        .call(yAxis);\n\n    //REDO MY DATA JOIn\n    circleGroupData = svg.selectAll(\".circle-group\")\n        .data(thisGroup);\n\n    // enter NEW elements from data join\n    circleGroupEnter = circleGroupData.enter()   \n        .append(\"g\")\n        .attr(\"class\", \"circle-group\");\n\n    // append new circles to this selection\n    circleGroupEnter.append(\"circle\")\n        .attr(\"r\", 10);\n\n    // append new text elements to this selection\n    circleGroupEnter.append(\"text\");\n\n    // now, update my new selection\n    circleGroupData = svg.selectAll(\".circle-group\")\n        .transition()\n        .duration(400)\n        .attr(\"transform\", function(d) {\n          return \"translate(\" + xScale(d.x) + \",\" + yScale(d.y) + \")\";\n        });\n\n    circleGroupData.select(\"text\")\n      .text(function(d) {\n        return d.x + \",\" + d.y;\n      });\n\n}\n  // drawGroup(\"I\");\n\n}\n\n</script>", "description": "Update1", "created_at": "2015-07-22T00:43:17Z", "updated_at": "2015-08-29T14:25:30Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.set", "d3.extent"], "readme": "", "uid": "chantalgo_924760c94b256584fd9d"}, {"code": "<script>\n  \t\t\t\td3.csv(\"data.csv\", function(error, data) {\n\t\t\t\t\t\tdata.forEach(function(d) {\n\t\t\t\t\t\t    d.Year = +d.Year;\n\t\t\t\t\t\t    d.number = +d.number;\n\t\t\t\t\t\t  });\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar graph = d3.select(\"#graph\")\n\t\t\t\t\t\t\n\t\t\t\t\t\txScale = d3.scale.linear().range([100, 980]).domain([1990,2000]),\t\n\t\t\t\t\t\tyScale = d3.scale.linear().range([180, 20]).domain([0,225]),\n\t\t\t\t\t\t\n\t\t\t\t\t\txAxis = d3.svg.axis().scale(xScale).tickFormat(d3.format('0f')),\n\t\t\t\t\t\tyAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\t\t\t\t\t\t\n\t\t\t\t\t\tgraph.append(\"svg:g\")\n\t\t\t\t\t\t\t.attr(\"transform\", \"translate(0,180)\")\n\t\t\t\t\t\t\t.attr(\"class\", \"axis\")\n\t\t\t\t\t\t\t.call(xAxis);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tgraph.append(\"svg:g\")\n\t\t\t\t\t\t\t.attr(\"transform\", \"translate(100,0)\")\n\t\t\t\t\t\t\t.attr(\"class\", \"axis\")\n\t\t\t\t\t\t\t.call(yAxis);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar kind = d3.nest()\n\t\t\t\t\t\t\t      .key(function(d) { return d.type; })\n\t\t\t\t\t\t\t      .entries(data);\n\n\t\t\t\t\t\t\tvar vor = d3.nest()\n\t\t          \t\t\t.key(function(d) { return xScale(d.Year) + \",\" + yScale(d.number); })\n\t\t\t\t\t\t\t      .rollup(function(v) { return v[0]; })\n\t\t\t\t\t\t\t      .entries(d3.merge(kind.map(function(d) { return d.values; })))\n\t\t\t\t\t\t\t      .map(function(d) { return d.values; });\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconsole.log(vor);\n\t\t\t\t\t\t\t\n \t\t\t\t\t\t\tvar voronoi = d3.geom.voronoi()\n\t\t\t\t\t\t\t\t\t\t.x(function(d) { return xScale(d.Year); })\n\t\t\t\t\t\t\t\t\t\t.y(function(d) { return yScale(d.number); })\n\t\t\t\t\t\t\t\t\t\t.clipExtent([[100,0], [1000,200]]);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar line = d3.svg.line()\n\t\t\t \t\t\t\t.x(function(d){return xScale(d.Year);})\n\t\t\t\t\t\t\t.y(function(d){return yScale(d.number);});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tgraph.append(\"g\")\n\t\t\t\t\t\t\t.attr(\"class\", \"crops\")\n\t\t\t\t\t\t\t.selectAll(\"path\")\n\t\t\t\t\t\t\t.data(kind)\n\t\t\t\t\t\t\t.enter().append(\"path\")\n\t\t\t\t\t\t\t      .attr(\"class\", function(d){return \"crop \" + d.key; })\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t.attr(\"fill\", \"none\")\n\t\t\t\t\t\t\t\t\t\t.attr(\"d\", function(d){ d.line = this; return line(d.values); });\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar focus = graph.append(\"g\")\n\t\t\t\t\t\t      .attr(\"transform\", \"translate(-100,-100)\")\n\t\t\t\t\t\t      .attr(\"class\", \"focus\");\n\n\t\t\t\t\t\t  focus.append(\"circle\")\n\t\t\t\t\t\t      .attr(\"r\", 3.5);\n\n\t\t\t\t\t\t  focus.append(\"text\")\n\t\t\t\t\t\t      .attr(\"y\", -10);\n\n\t\t\t\t\t\t  var voronoiGroup = graph.append(\"g\")\n\t\t\t\t\t\t      .attr(\"class\", \"voronoi\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvoronoiGroup.selectAll(\"path\")\n\t\t\t\t      .data(voronoi(vor))\n\t\t\t\t      .enter().append(\"path\")\n\t\t\t\t      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; })\n\t\t\t\t      .datum(function(d) { return d.value; })\n\t\t\t\t      .on(\"mouseover\", mouseover)\n\t\t\t\t      .on(\"mouseout\", mouseout);\n\n\t\t\t\t\t\t\td3.select(\"#show-voronoi\")\n\t\t\t\t\t\t\t\t\t\t  .property(\"disabled\", false)\n\t\t\t\t\t\t\t\t\t\t  .on(\"change\", function() { voronoiGroup.classed(\"voronoi--show\", this.checked); });\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfunction mouseover(d) {\n\t\t\t\t\t      d3.select('.crop').classed(\"line-hover\", true);\n\t\t\t\t\t      focus.attr(\"transform\", \"translate(\" + xScale(d.Year) + \",\" + yScale(d.number) + \")\");\n\t\t\t\t\t      focus.select(\"text\").text(d.number);\n\t\t\t\t\t\t\t\t  }\n\n\t\t\t\t\t\t\tfunction mouseout(d) {\n\t\t\t\t\t      d3.select('.crop').classed(\"line-hover\", false);\n\t\t\t\t\t      focus.attr(\"transform\", \"translate(-100,-100)\");\n\t\t\t\t\t\t\t\t  }\n\t\t\t\n\t\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t\t\t\t\t</script>", "description": "", "created_at": "2015-07-20T00:59:39Z", "updated_at": "2015-08-29T14:25:22Z", "api": ["d3.csv", "d3.select", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.nest", "d3.merge", "d3.geom.voronoi", "d3.svg.line"], "readme": "Based on this [block by Mike Bostock](/mbostock/8033015) which uses an invisible Voronoi tessellation to handle mouseover.", "uid": "jhubley_c673e664379f964b357c"}, {"code": "<script>\n\nvar margin = {top: 20, right: 50, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%d-%b-%y\").parse,\n    bisectDate = d3.bisector(function(d) { return d.date; }).left,\n    formatValue = d3.format(\",.2f\"),\n    formatCurrency = function(d) { return \"$\" + formatValue(d); };\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.time.scale()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"top\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .y(function(d) { return y(d.date); })\n    .x(function(d) { return x(d.close); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.close = +d.close;\n  });\n\n  data.sort(function(a, b) {\n    return a.date - b.date;\n  });\n\n  y.domain([data[0].date, data[data.length - 1].date]);\n  x.domain(d3.extent(data, function(d) { return d.close; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Price ($)\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  var focus = svg.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .style(\"display\", \"none\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  focus.append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dy\", \".35em\");\n\n  svg.append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"mouseover\", function() { focus.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        i = bisectDate(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n    focus.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.close) + \")\");\n    focus.select(\"text\").text(formatCurrency(d.close));\n  }\n});\n\n</script>", "description": null, "created_at": "2015-07-19T18:40:26Z", "updated_at": "2015-08-29T14:25:18Z", "api": ["d3.time.format", "d3.bisector", "d3.format", "d3.scale.linear", "d3.time.scale", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.mouse"], "readme": "A [line chart](../3883245) with mouseover so that you can read the *y*-value based on the closest *x*-value. The *x*-value is found using d3.mouse and scale.invert. The *y*-value is then found by bisecting the data.", "uid": "trinary_b1a5f453c51231cd7bb5"}, {"code": "<script>\nvar someColors = d3.scale.category20b();\n\n\nd3.json(\"miserables.json\", createArcDiagram);\n\nfunction createArcDiagram(data) {\n  //create some random back links just to demo the functionality\n  data.links.forEach(function (link) {\n    if (Math.random() < .1) {\n      data.links.push({source: link.target, target: link.source, value: 1})\n    }\n  });\n\n  var arcDiagram = d3.layout.arcDiagram()\n  .size([450,250])\n  .nodes(data.nodes)\n  .links(data.links)\n  .nodeID(function (d) {return d.name});\n\n  //initialize the arc diagram\n  arcDiagram();\n\n      var arcG = d3.select(\"svg#arc-diagram\")\n      .append(\"g\").attr(\"id\", \"arcG\")\n      .attr(\"transform\", \"translate(25,0)\");\n\n      arcG.selectAll(\"path\")\n         .data(data.links)\n         .enter()\n         .append(\"path\")\n         .attr(\"class\", \"arc\")\n         .style(\"stroke\", function (d) {return someColors(d.source.group)})\n         .style(\"stroke-width\", 2)\n         .style(\"opacity\", .25)\n         .style(\"fill\", \"none\")\n         .attr(\"d\", arcDiagram.arc);\n\n    arcG.selectAll(\"circle\")\n        .data(data.nodes)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"node\")\n        .attr(\"r\", 2)\n        .style(\"fill\", function (d) {return someColors(d.group)})\n        .attr(\"cx\", function (d) {return d.x;})\n        .attr(\"cy\", function (d) {return d.y});\n\n}\n\n</script>", "description": "Simple Arc Diagram Layout", "created_at": "2015-07-15T04:22:33Z", "updated_at": "2016-03-17T02:08:51Z", "api": ["d3.svg.line", "d3.scale.category20b", "d3.json", "d3.layout.arcDiagram", "d3.select"], "readme": "An example of a [simple arc diagram](https://github.com/emeeks/d3.layout.arcDiagram) layout I wrote for an upcoming workshop on network data visualization.", "uid": "emeeks_8d75da95d1e78cd08899"}, {"code": "<script>\n\n\n\n// ************** Generate the tree diagram\t *****************\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n\twidth = 2000 - margin.right - margin.left,\n\theight = 1000 - margin.top - margin.bottom;\n\t\nvar i = 0,\n\tduration = 750,\n\troot;\n\nvar tree = d3.layout.tree()\n\t.size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n\t.projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.right + margin.left)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar tooltip = d3.select(\"body\").append(\"div\")\n\t\t\t\t.attr(\"class\", \"tooltip\")\n\t\t\t\t.style(\"opacity\", 0);\n\t\t\t\t\n\n\nd3.csv(\"parentChild.csv\", function(error, data) {\n// create a name: node map\nvar dataMap = data.reduce(function(map, node) {\n\tmap[node.name] = node;\n\treturn map;\n}, {});\n\n// create the tree array\nvar treeData = [];\ndata.forEach(function(node) {\n\t// add to parent\n\tvar parent = dataMap[node.parent];\n\tvar start = dataMap[node.start];\n\tif (parent) {\n\t\t// create child array if it doesn't exist\n\t\t(parent.children || (parent.children = []))\n\t\t\t// add node to child array\n\t\t\t.push(node);\n\t} else {\n\t\t// parent is null or missing\n\t\ttreeData.push(node);\n\t}\n});\n\n  root = treeData[0];\n  update(root);\n});\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n\t  links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n\t  .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n\t  .attr(\"class\", \"node\")\n\t  .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n\t  .on(\"click\", click);\n\n\n  nodeEnter.append(\"circle\")\n\t  .attr(\"r\", 1e-6)\n\t  .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n\t  .attr(\"x\", function(d) { return d.children || d._children ? -13 : 13; })\n\t  .attr(\"dy\", \".35em\")\n\t  .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n\t  .text(function(d) { return d.name; })\n\t  .style(\"fill-opacity\", 1e-6)\n\t  .on(\"mouseover\", function(d){\n\t  \ttooltip.transition()\n\t  \t\t.duration(200)\n\t  \t\t.style(\"opacity\", .9);\n\t  \ttooltip.html(d.type + \"<br/>\" + \"(\" + d.start + \",\" + d.end + \")\" )\n\t  \t\t.style(\"left\", (d3.event.pageX) + 5 + \"px\")\n\t  \t\t.style(\"top\", (d3.event.pageY) - 50 + \"px\" );\n\t  })\n\t  .on(\"mouseout\", function(d){\n\t  \ttooltip.transition()\n\t  \t\t.duration(500)\n\t  \t\t.style(\"opacity\", 0);\n\t  });\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n\t  .duration(duration)\n\t  .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n\t  .attr(\"r\", 10)\n\t  .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n\t  .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n\t  .duration(duration)\n\t  .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n\t  .remove();\n\n  nodeExit.select(\"circle\")\n\t  .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n\t  .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n\t  .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n\t  .attr(\"class\", \"link\")\n\t  .attr(\"d\", function(d) {\n\t\tvar o = {x: source.x0, y: source.y0};\n\t\treturn diagonal({source: o, target: o});\n\t  });\n\n  // Transition links to their new position.\n  link.transition()\n\t  .duration(duration)\n\t  .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n\t  .duration(duration)\n\t  .attr(\"d\", function(d) {\n\t\tvar o = {x: source.x, y: source.y};\n\t\treturn diagonal({source: o, target: o});\n\t  })\n\t  .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n\td.x0 = d.x;\n\td.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n\td._children = d.children;\n\td.children = null;\n  } else {\n\td.children = d._children;\n\td._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Visualizing a genome annotation file (gff)", "created_at": "2015-07-03T23:02:32Z", "updated_at": "2015-08-29T14:24:13Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.csv"], "readme": "D3 JavaScript interactive visualization of a [genome feature file](http://www.ensembl.org/info/website/upload/gff.html)(GFF). \nMore information on how to parse the gff file and create the parent-child CSV file is on the [GitHub Repository](https://github.com/Jverma/Visualizing-genome-annotations).", "uid": "Jverma_4d8d73ad5f2bb39bab53"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n    radius = 30;\n\nvar sampler = poissonDiscSampler(width + radius * 2, height + radius * 2, radius),\n    samples = [],\n    sample;\n\nwhile (sample = sampler()) samples.push([sample[0] - radius, sample[1] - radius]);\n\nvar voronoi = d3.geom.voronoi()\n    .clipExtent([[-1, -1], [width + 1, height + 1]]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"path\")\n    .data(voronoi.triangles(samples).map(d3.geom.polygon))\n  .enter().append(\"path\")\n    .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; })\n    .style(\"fill\", function(d) { return color(d.centroid()); })\n    .style(\"stroke\", function(d) { return color(d.centroid()); });\n\nfunction color(d) {\n  var dx = d[0] - width / 2,\n      dy = d[1] - height / 2;\n  return d3.lab(100 - (dx * dx + dy * dy) / 5000, dx / 10, dy / 10);\n}\n\n// Based on https://www.jasondavies.com/poisson-disc/\nfunction poissonDiscSampler(width, height, radius) {\n  var k = 30, // maximum number of samples before rejection\n      radius2 = radius * radius,\n      R = 3 * radius2,\n      cellSize = radius * Math.SQRT1_2,\n      gridWidth = Math.ceil(width / cellSize),\n      gridHeight = Math.ceil(height / cellSize),\n      grid = new Array(gridWidth * gridHeight),\n      queue = [],\n      queueSize = 0,\n      sampleSize = 0;\n\n  return function() {\n    if (!sampleSize) return sample(Math.random() * width, Math.random() * height);\n\n    // Pick a random existing sample and remove it from the queue.\n    while (queueSize) {\n      var i = Math.random() * queueSize | 0,\n          s = queue[i];\n\n      // Make a new candidate between [radius, 2 * radius] from the existing sample.\n      for (var j = 0; j < k; ++j) {\n        var a = 2 * Math.PI * Math.random(),\n            r = Math.sqrt(Math.random() * R + radius2),\n            x = s[0] + r * Math.cos(a),\n            y = s[1] + r * Math.sin(a);\n\n        // Reject candidates that are outside the allowed extent,\n        // or closer than 2 * radius to any existing sample.\n        if (0 <= x && x < width && 0 <= y && y < height && far(x, y)) return sample(x, y);\n      }\n\n      queue[i] = queue[--queueSize];\n      queue.length = queueSize;\n    }\n  };\n\n  function far(x, y) {\n    var i = x / cellSize | 0,\n        j = y / cellSize | 0,\n        i0 = Math.max(i - 2, 0),\n        j0 = Math.max(j - 2, 0),\n        i1 = Math.min(i + 3, gridWidth),\n        j1 = Math.min(j + 3, gridHeight);\n\n    for (j = j0; j < j1; ++j) {\n      var o = j * gridWidth;\n      for (i = i0; i < i1; ++i) {\n        if (s = grid[o + i]) {\n          var s,\n              dx = s[0] - x,\n              dy = s[1] - y;\n          if (dx * dx + dy * dy < radius2) return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function sample(x, y) {\n    var s = [x, y];\n    queue.push(s);\n    grid[gridWidth * (y / cellSize | 0) + (x / cellSize | 0)] = s;\n    ++sampleSize;\n    ++queueSize;\n    return s;\n  }\n}\n\n</script>", "description": "Color Mesh II", "created_at": "2015-07-03T15:10:49Z", "updated_at": "2015-10-31T02:02:57Z", "api": ["d3.geom.voronoi", "d3.select", "d3.lab"], "readme": "This version uses a Delaunay triangluation; compare to a [Voronoi diagram](/mbostock/99049112373e12709381).\n", "uid": "mbostock_76342abc327062128604"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\nvar sampler = poissonDiscSampler(width, height, 30),\n    samples = [],\n    sample;\n\nwhile (sample = sampler()) samples.push(sample);\n\nvar voronoi = d3.geom.voronoi()\n    .clipExtent([[-1, -1], [width + 1, height + 1]]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"path\")\n    .data(voronoi(samples))\n  .enter().append(\"path\")\n    .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; })\n    .style(\"fill\", function(d) { return color(d.point); })\n    .style(\"stroke\", function(d) { return color(d.point); });\n\nfunction color(d) {\n  var dx = d[0] - width / 2,\n      dy = d[1] - height / 2;\n  return d3.lab(100 - (dx * dx + dy * dy) / 5000, dx / 10, dy / 10);\n}\n\n// Based on https://www.jasondavies.com/poisson-disc/\nfunction poissonDiscSampler(width, height, radius) {\n  var k = 30, // maximum number of samples before rejection\n      radius2 = radius * radius,\n      R = 3 * radius2,\n      cellSize = radius * Math.SQRT1_2,\n      gridWidth = Math.ceil(width / cellSize),\n      gridHeight = Math.ceil(height / cellSize),\n      grid = new Array(gridWidth * gridHeight),\n      queue = [],\n      queueSize = 0,\n      sampleSize = 0;\n\n  return function() {\n    if (!sampleSize) return sample(Math.random() * width, Math.random() * height);\n\n    // Pick a random existing sample and remove it from the queue.\n    while (queueSize) {\n      var i = Math.random() * queueSize | 0,\n          s = queue[i];\n\n      // Make a new candidate between [radius, 2 * radius] from the existing sample.\n      for (var j = 0; j < k; ++j) {\n        var a = 2 * Math.PI * Math.random(),\n            r = Math.sqrt(Math.random() * R + radius2),\n            x = s[0] + r * Math.cos(a),\n            y = s[1] + r * Math.sin(a);\n\n        // Reject candidates that are outside the allowed extent,\n        // or closer than 2 * radius to any existing sample.\n        if (0 <= x && x < width && 0 <= y && y < height && far(x, y)) return sample(x, y);\n      }\n\n      queue[i] = queue[--queueSize];\n      queue.length = queueSize;\n    }\n  };\n\n  function far(x, y) {\n    var i = x / cellSize | 0,\n        j = y / cellSize | 0,\n        i0 = Math.max(i - 2, 0),\n        j0 = Math.max(j - 2, 0),\n        i1 = Math.min(i + 3, gridWidth),\n        j1 = Math.min(j + 3, gridHeight);\n\n    for (j = j0; j < j1; ++j) {\n      var o = j * gridWidth;\n      for (i = i0; i < i1; ++i) {\n        if (s = grid[o + i]) {\n          var s,\n              dx = s[0] - x,\n              dy = s[1] - y;\n          if (dx * dx + dy * dy < radius2) return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function sample(x, y) {\n    var s = [x, y];\n    queue.push(s);\n    grid[gridWidth * (y / cellSize | 0) + (x / cellSize | 0)] = s;\n    ++sampleSize;\n    ++queueSize;\n    return s;\n  }\n}\n\n</script>", "description": "Color Mesh", "created_at": "2015-07-03T15:07:36Z", "updated_at": "2016-07-18T16:48:44Z", "api": ["d3.geom.voronoi", "d3.select", "d3.lab"], "readme": "This version uses a Voronoi diagram; compare to a [Delaunay triangluation](/mbostock/76342abc327062128604).\n", "uid": "mbostock_99049112373e12709381"}, {"code": "<script>\n\nvar width = 960,\n    height = 600;\n\nvar radius = height / 2 - 5,\n    scale = radius,\n    velocity = .02;\n\nvar projection = d3.geo.orthographic()\n    .translate([width / 2, height / 2])\n    .scale(scale)\n    .clipAngle(90);\n\nvar canvas = d3.select(\"body\").append(\"canvas\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar context = canvas.node().getContext(\"2d\");\n\nvar path = d3.geo.path()\n    .projection(projection)\n    .context(context);\n\nd3.json(\"/mbostock/raw/4090846/world-110m.json\", function(error, world) {\n  if (error) throw error;\n\n  var land = topojson.feature(world, world.objects.land);\n\n  d3.timer(function(elapsed) {\n    context.clearRect(0, 0, width, height);\n\n    projection.rotate([velocity * elapsed, 0]);\n    context.beginPath();\n    path(land);\n    context.fill();\n\n    context.beginPath();\n    context.arc(width / 2, height / 2, radius, 0, 2 * Math.PI, true);\n    context.lineWidth = 2.5;\n    context.stroke();\n  });\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n</script>", "description": "This Is a Globe", "created_at": "2015-07-03T05:23:22Z", "updated_at": "2016-08-13T04:02:28Z", "api": ["d3.geo.orthographic", "d3.select", "d3.geo.path", "d3.json", "d3.timer"], "readme": "[This is not a globe.](/mbostock/2fb85b77236c24be5a6f) This is a globe.\n", "uid": "mbostock_ba63c55dd2dbc3ab0127"}, {"code": "<script>\n\nvar width = 480,\n    height = 500;\n\nvar rateById = d3.map();\n\nvar quantile = d3.scale.quantile()\n    .range(d3.range(9).map(function(i) { return \"q\" + i + \"-9\"; }));\n\nvar projection = d3.geo.albersUsa()\n    .scale(680)\n    .translate([width / 2, height / 2]);\n\nvar projectionzoom = d3.geo.albersUsa()\n    .scale(4000)\n    .translate([width / 2, height / 2]);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar pathzoom = d3.geo.path()\n    .projection(projectionzoom);\n\nvar svg = d3.select(\"#main\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .on(\"mouseover\", function() {\n      var point = projectionzoom(projection.invert(d3.mouse(this))); \n      svgzoom.attr(\"transform\", \"translate(\" + (width/2-point[0]) + \",\" + (height/2-point[1]) + \")\")\n    });\n\nvar svgzoom = d3.select(\"#zoom\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .append(\"g\");\n\nqueue()\n    .defer(d3.json, \"/mbostock/raw/4090846/us.json\")\n    .defer(d3.tsv, \"unemployment.tsv\", function(d) { rateById.set(d.id, +d.rate); })\n    .await(ready);\n\nfunction ready(error, us) {\n  if (error) throw error;\n\n  quantile.domain(rateById.values());\n\n  svg.append(\"rect\")\n    .style(\"fill\", \"#fff\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n\n  svg.append(\"g\")\n      .attr(\"class\", \"counties\")\n    .selectAll(\"path\")\n      .data(topojson.feature(us, us.objects.counties).features)\n    .enter().append(\"path\")\n      .attr(\"class\", function(d) { return quantile(rateById.get(d.id)); })\n      .attr(\"d\", path);\n\n  svg.append(\"path\")\n      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"states\")\n      .attr(\"d\", path);\n\n  svgzoom.append(\"rect\")\n    .style(\"fill\", \"#fff\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n\n  svgzoom.append(\"g\")\n      .attr(\"class\", \"counties\")\n    .selectAll(\"path\")\n      .data(topojson.feature(us, us.objects.counties).features)\n    .enter().append(\"path\")\n      .attr(\"class\", function(d) { return quantile(rateById.get(d.id)); })\n      .attr(\"d\", pathzoom);\n\n  svgzoom.append(\"path\")\n      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"states\")\n      .attr(\"d\", pathzoom);\n\n}\n\n</script>", "description": "Map Loupe", "created_at": "2015-07-02T17:13:37Z", "updated_at": "2016-05-21T02:43:56Z", "api": ["d3.map", "d3.scale.quantile", "d3.range", "d3.geo.albersUsa", "d3.geo.path", "d3.select", "d3.mouse"], "readme": "Hover over map on left to see zoomed in area on right.\n", "uid": "syntagmatic_0613ee9324e989a6fb6b"}, {"code": "<script>\n        d3.csv(\"EdgeList.csv\", function (error, links) {\n            var nodes = {};\n\n            // Compute the distinct nodes from the Edge List\n            links.forEach(function (link) {\n                link.source = nodes[link.source] ||\n                    (nodes[link.source] = {\n                        name: link.source\n                    });\n                link.target = nodes[link.target] ||\n                    (nodes[link.target] = {\n                        name: link.target\n                    });\n                link.value = +link.value;\n            });\n\n            var width = 960,\n                height = 570,\n                transitionDuration = 750;\n\n            var force = d3.layout.force()\n                .nodes(d3.values(nodes))\n                .links(links)\n                .size([width, height])\n                .linkDistance(45)\n                .charge(-300)\n                .gravity(0.9)\n                .on(\"tick\", tick)\n                .start();\n\n            var svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width)\n                .attr(\"height\", height);\n\n            // build the arrow.\n            svg.append(\"svg:defs\").selectAll(\"marker\")\n                .data([\"end\"]) // Different link/path types can be defined here\n                .enter().append(\"svg:marker\") // This section adds in the arrows\n                .attr(\"id\", String)\n                .attr(\"viewBox\", \"0 -5 10 10\")\n                .attr(\"refX\", 15)\n                .attr(\"refY\", -1.5)\n                .attr(\"markerWidth\", 6)\n                .attr(\"markerHeight\", 6)\n                .attr(\"orient\", \"auto\")\n                .append(\"svg:path\")\n                .attr(\"d\", \"M0,-5L10,0L0,5\");\n\n            // add the links and the arrows\n            var path = svg.append(\"svg:g\").selectAll(\"path\")\n                .data(force.links())\n                .enter().append(\"svg:path\")\n                .attr(\"class\", \"link\")\n                .attr(\"marker-end\", \"url(#end)\");\n\n            // define the nodes\n            var node = svg.selectAll(\".node\")\n                .data(force.nodes())\n                .enter().append(\"g\")\n                .attr(\"class\", \"node\")\n                .call(force.drag)\n                .on(\"click\", click)\n                .on(\"dblclick\", dblclick);\n\n\n            // add the nodes\n            node.append(\"circle\")\n                .attr(\"r\", 5);\n\n            // add the text \n            node.append(\"text\")\n                .attr(\"x\", 12)\n                .attr(\"dy\", \".35em\")\n                .text(function (d) {\n                    return d.name;\n                });\n\n            // add the curvy lines\n            function tick() {\n                path.attr(\"d\", function (d) {\n                    var dx = d.target.x - d.source.x,\n                        dy = d.target.y - d.source.y,\n                        dr = Math.sqrt(dx * dx + dy * dy);\n                    return \"M\" +\n                        d.source.x + \",\" +\n                        d.source.y + \"A\" +\n                        dr + \",\" + dr + \" 0 0,1 \" +\n                        d.target.x + \",\" +\n                        d.target.y;\n                });\n\n                node.attr(\"transform\", function (d) {\n                    return \"translate(\" + d.x + \",\" + d.y + \")\";\n                });\n            }\n\n            function click() {\n                d3.select(this).select(\"text\").transition()\n                    .duration(transitionDuration)\n                    .attr(\"x\", 22)\n                    .style(\"fill\", \"steelblue\")\n                    .style(\"stroke\", \"lightsteelblue\")\n                    .style(\"visibility\", \"visible\")\n                    .style(\"stroke-width\", \".5px\")\n                    .style(\"font\", \"20px sans-serif\");\n                d3.select(this).select(\"circle\").transition()\n                    .duration(transitionDuration)\n                    .attr(\"r\", 16)\n                    .style(\"fill\", \"lightsteelblue\");\n            }\n\n            function dblclick() {\n                d3.select(this).select(\"circle\").transition()\n                    .duration(transitionDuration)\n                    .attr(\"r\", 6)\n                    .style(\"fill\", \"#ccc\");\n                d3.select(this).select(\"text\").transition()\n                    .duration(transitionDuration)\n                    .attr(\"x\", 12)\n                    .style(\"stroke\", \"none\")\n                    .style(\"fill\", \"black\")\n                    .style(\"stroke\", \"none\")\n                    .style(\"visibility\", \"hidden\")\n                    .style(\"font\", \"10px sans-serif\");\n            }\n\n        });\n    </script>", "description": "Clinical Trial Site Network", "created_at": "2015-07-02T15:03:02Z", "updated_at": "2016-07-06T17:06:33Z", "api": ["d3.csv", "d3.layout.force", "d3.values", "d3.select"], "readme": "<p>This is a visualization of the network formed by the sites selected for a portfolio of clinical trials. The graph serves to highlight the interconnectedness of the sites involved in clinical research.</p>\n\n<p>A single click on any node will highlight it and its label.  A double-click will return it to its original format. Names of the trials and the sites are anonymized.</p>", "uid": "cjburgoyne_521c3d6216eb4be18304"}, {"code": "<script>\n\n/* https://github.com/d3/d3-timer Copyright 2015 Mike Bostock */\n\"undefined\"==typeof requestAnimationFrame&&(requestAnimationFrame=\"undefined\"!=typeof window&&(window.msRequestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.oRequestAnimationFrame)||function(e){return setTimeout(e,17)}),function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?n(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],n):n(e.timer={})}(this,function(e){\"use strict\";function n(){r=m=0,c=1/0,t(u())}function t(e){if(!r){var t=e-Date.now();t>24?c>e&&(m&&clearTimeout(m),m=setTimeout(n,t),c=e):(m&&(m=clearTimeout(m),c=1/0),r=requestAnimationFrame(n))}}function i(e,n,i){i=null==i?Date.now():+i,null!=n&&(i+=+n);var o={callback:e,time:i,flush:!1,next:null};a?a.next=o:f=o,a=o,t(i)}function o(e,n,t){t=null==t?Date.now():+t,null!=n&&(t+=+n),l.callback=e,l.time=t}function u(e){e=null==e?Date.now():+e;var n=l;for(l=f;l;)e>=l.time&&(l.flush=l.callback(e-l.time,e)),l=l.next;l=n,e=1/0;for(var t,i=f;i;)i.flush?i=t?t.next=i.next:f=i.next:(i.time<e&&(e=i.time),i=(t=i).next);return a=t,e}var a,m,r,f,l,c=1/0;e.timer=i,e.timerReplace=o,e.timerFlush=u});\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height,\n    radius = 2.5,\n    minDistance = 40,\n    maxDistance = 60,\n    minDistance2 = minDistance * minDistance,\n    maxDistance2 = maxDistance * maxDistance;\n\nvar tau = 2 * Math.PI,\n    n = 200,\n    particles = new Array(n);\n\nfor (var i = 0; i < n; ++i) {\n  particles[i] = {\n    x: Math.random() * width,\n    y: Math.random() * height,\n    vx: 0,\n    vy: 0\n  };\n}\n\ntimer.timer(function(elapsed) {\n  context.save();\n  context.clearRect(0, 0, width, height);\n\n  for (var i = 0; i < n; ++i) {\n    var p = particles[i];\n    p.x += p.vx; if (p.x < -maxDistance) p.x += width + maxDistance * 2; else if (p.x > width + maxDistance) p.x -= width + maxDistance * 2;\n    p.y += p.vy; if (p.y < -maxDistance) p.y += height + maxDistance * 2; else if (p.y > height + maxDistance) p.y -= height + maxDistance * 2;\n    p.vx += 0.2 * (Math.random() - .5) - 0.01 * p.vx;\n    p.vy += 0.2 * (Math.random() - .5) - 0.01 * p.vy;\n    context.beginPath();\n    context.arc(p.x, p.y, radius, 0, tau);\n    context.fill();\n  }\n\n  for (var i = 0; i < n; ++i) {\n    for (var j = i + 1; j < n; ++j) {\n      var pi = particles[i],\n          pj = particles[j],\n          dx = pi.x - pj.x,\n          dy = pi.y - pj.y,\n          d2 = dx * dx + dy * dy;\n      if (d2 < maxDistance2) {\n        context.globalAlpha = d2 > minDistance2 ? (maxDistance2 - d2) / (maxDistance2 - minDistance2) : 1;\n        context.beginPath();\n        context.moveTo(pi.x, pi.y);\n        context.lineTo(pj.x, pj.y);\n        context.stroke();\n      }\n    }\n  }\n\n  context.restore();\n});\n\n</script>", "description": "Connected Particles III", "created_at": "2015-06-26T05:20:17Z", "updated_at": "2016-09-21T16:15:08Z", "api": [], "readme": "", "uid": "mbostock_280d83080497c8c13152"}, {"code": "<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\");\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = canvas.width - margin.left - margin.right,\n    height = canvas.height - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .rangeRound([0, width])\n    .padding(0.1);\n\nvar y = d3.scaleLinear()\n    .rangeRound([height, 0]);\n\ncontext.translate(margin.left, margin.top);\n\nd3.requestTsv(\"data.tsv\", function(d) {\n  d.frequency = +d.frequency;\n  return d;\n}, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  var yTickCount = 10,\n      yTicks = y.ticks(yTickCount),\n      yTickFormat = y.tickFormat(yTickCount, \"%\");\n\n  context.beginPath();\n  x.domain().forEach(function(d) {\n    context.moveTo(x(d) + x.bandwidth() / 2, height);\n    context.lineTo(x(d) + x.bandwidth() / 2, height + 6);\n  });\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  context.textAlign = \"center\";\n  context.textBaseline = \"top\";\n  x.domain().forEach(function(d) {\n    context.fillText(d, x(d) + x.bandwidth() / 2, height + 6);\n  });\n\n  context.beginPath();\n  yTicks.forEach(function(d) {\n    context.moveTo(0, y(d) + 0.5);\n    context.lineTo(-6, y(d) + 0.5);\n  });\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  context.textAlign = \"right\";\n  context.textBaseline = \"middle\";\n  yTicks.forEach(function(d) {\n    context.fillText(yTickFormat(d), -9, y(d));\n  });\n\n  context.beginPath();\n  context.moveTo(-6.5, 0 + 0.5);\n  context.lineTo(0.5, 0 + 0.5);\n  context.lineTo(0.5, height + 0.5);\n  context.lineTo(-6.5, height + 0.5);\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  context.save();\n  context.rotate(-Math.PI / 2);\n  context.textAlign = \"right\";\n  context.textBaseline = \"top\";\n  context.font = \"bold 10px sans-serif\";\n  context.fillText(\"Frequency\", -10, 10);\n  context.restore();\n\n  context.fillStyle = \"steelblue\";\n  data.forEach(function(d) {\n    context.fillRect(x(d.letter), y(d.frequency), x.bandwidth(), height - y(d.frequency));\n  });\n});\n\n</script>", "description": "Canvas Bar Chart", "created_at": "2015-06-23T22:42:45Z", "updated_at": "2016-08-27T02:50:16Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.requestTsv", "d3.max"], "readme": "A variant of the [simple bar chart](/mbostock/3885304) using [d3-scale](https://github.com/d3/d3-scale) and [d3-request](https://github.com/d3/d3-request) to render to Canvas.\n", "uid": "mbostock_946ddf8a32b3b660ffd8"}, {"code": "<script>\n\nvar width = 960,\n    height = 600;\n\nvar rateById = d3.map();\n\nvar quantile = d3.scale.quantile()\n    .range(d3.range(9).map(function(i) { return \"q\" + i + \"-9\"; }));\n\nvar projection = d3.geo.albersUsa()\n    .scale(1280)\n    .translate([width / 2, height / 2]);\n\nvar path = d3.geo.path()\n    .projection(projection);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nqueue()\n    .defer(d3.json, \"/mbostock/raw/4090846/us.json\")\n    .defer(d3.tsv, \"unemployment.tsv\", function(d) { rateById.set(d.id, +d.rate); })\n    .await(ready);\n\nfunction ready(error, us) {\n  if (error) throw error;\n\n  quantile.domain(rateById.values());\n\n  svg.append(\"g\")\n      .attr(\"class\", \"counties\")\n    .selectAll(\"path\")\n      .data(topojson.feature(us, us.objects.counties).features)\n    .enter().append(\"path\")\n      .attr(\"class\", function(d) { return quantile(rateById.get(d.id)); })\n      .attr(\"d\", path);\n\n  svg.append(\"path\")\n      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"states\")\n      .attr(\"d\", path);\n}\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n</script>", "description": "Quantile Choropleth", "created_at": "2015-06-22T23:49:35Z", "updated_at": "2016-03-08T21:47:03Z", "api": ["d3.map", "d3.scale.quantile", "d3.range", "d3.geo.albersUsa", "d3.geo.path", "d3.select"], "readme": "A variation of the [unemployment choropleth](/mbostock/4060606) using a quantile scale.\n", "uid": "mbostock_8ca036b3505121279daf"}, {"code": "<script>\n\nvar margin = {top: 30, right: 40, bottom: 20, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 280 - margin.top - margin.bottom;\n\nvar types = {\n  \"Number\": {\n    name: \"Number\",\n    coerce: function(d) { return +d; },\n    extent: d3.extent,\n    within: function(d, extent) { return extent[0] <= d && d <= extent[1]; }\n  },\n  \"String\": {\n    name: \"String\",\n    coerce: String,\n    extent: function (data) { return data.sort(); },\n    within: function(d, extent, dim) { return extent[0] <= dim.scale(d) && dim.scale(d) <= extent[1]; }\n  }\n};\n\nvar dimensions = [\n  {\n    name: \"Sex\",\n    scale: d3.scale.ordinal().rangePoints([0, height]),\n    type: types[\"String\"],\n    domain: [\"M\", \"F\", \"I\"]\n  },\n  {\n    name: \"Length\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  },\n  {\n    name: \"Diameter\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  },\n  {\n    name: \"Height\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  },\n  {\n    name: \"Whole weight\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  },\n  {\n    name: \"Shucked weight\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  },\n  {\n    name: \"Viscera weight\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  },\n  {\n    name: \"Shell weight\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  },\n  {\n    name: \"Rings\",\n    scale: d3.scale.linear().range([height, 0]),\n    type: types[\"Number\"]\n  }\n];\n\nvar color = d3.scale.ordinal()\n  .range([\"#1b9e77\",\"#d95f02\",\"#7570b3\"]);\n\nvar x = d3.scale.ordinal()\n    .domain(dimensions.map(function(dim) { return dim.name; }))\n    .rangePoints([0, width]);\n\nvar line = d3.svg.line()\n    .defined(function(d) { return !isNaN(d[1]); });\n\nvar yAxis = d3.svg.axis()\n    .orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar output = d3.select(\"body\").append(\"pre\");\n\nvar dimension = svg.selectAll(\".dimension\")\n    .data(dimensions)\n  .enter().append(\"g\")\n    .attr(\"class\", \"dimension\")\n    .attr(\"transform\", function(d) { return \"translate(\" + x(d.name) + \")\"; });\n\nvar colordimension = dimensions[0];\n\nd3.csv(\"abalone.csv\", function(error, rawdata) {\n  if (error) throw error;\n\n  // take subset of data\n  data = d3.shuffle(rawdata).slice(0,750);\n\n  data.forEach(function(d) {\n    dimensions.forEach(function(p) {\n      d[p.name] = p.type.coerce(d[p.name]);\n    });\n  });\n\n  dimensions.forEach(function(dim) {\n    if (!(\"domain\" in dim)) {\n      // detect domain using dimension type's extent function\n      dim.domain  = d3.functor(dim.type.extent)(data.map(function(d) { return d[dim.name]; }));\n    }\n    dim.scale.domain(dim.domain);\n  });\n\n  color.domain(colordimension.scale.domain());\n\n  svg.append(\"g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(data)\n    .enter().append(\"path\")\n      .attr(\"d\", draw)\n      .style(\"stroke\", function(d) { return color(d[colordimension.name]); });\n\n  dimension.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(yAxis.scale(d.scale)); })\n    .append(\"text\")\n      .attr(\"class\", \"title\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { return d.name; });\n\n  // Add and store a brush for each axis.\n  dimension.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) {\n        d3.select(this).call(d.brush = d3.svg.brush()\n          .y(d.scale)\n          .on(\"brushstart\", brushstart)\n          .on(\"brush\", brush));\n      })\n    .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n\n  output.text(d3.tsv.format(data));\n\n  function draw(d) {\n    return line(dimensions.map(function(dim) {\n      return [x(dim.name), dim.scale(d[dim.name])];\n    }));\n  }\n\n  function brushstart() {\n    d3.event.sourceEvent.stopPropagation();\n  }\n\n  // Handles a brush event, toggling the display of foreground lines.\n  function brush() {\n    var actives = dimensions.filter(function(p) { return !p.brush.empty(); }),\n        extents = actives.map(function(p) { return p.brush.extent(); });\n\n    var selected = [];\n\n    d3.selectAll(\".foreground path\").style(\"display\", function(d) {\n      if (actives.every(function(dim, i) {\n          // test if point is within extents for each active brush\n          return dim.type.within(d[dim.name], extents[i], dim);\n        })) {\n        selected.push(d);\n        return null;\n      }\n      return \"none\";\n    });\n\n    output.text(d3.tsv.format(selected));\n  }\n});\n\n</script>", "description": "Abalone", "created_at": "2015-06-21T01:52:58Z", "updated_at": "2016-04-29T14:44:33Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.shuffle", "d3.functor", "d3.svg.brush", "d3.tsv.format", "d3.event.sourceEvent.stopPropagation", "d3.selectAll"], "readme": "A random sample of 750 [Abalone measurements](http://archive.ics.uci.edu/ml/datasets/Abalone) from [UCI Machine Learning Repository](http://archive.ics.uci.edu/ml/datasets.html).\n\n### Dimensions\n\n```\nName    Data Type Meas. Description\n----    --------- ----- -----------\nSex   nominal     M, F, and I (infant)\nLength    continuous  mm  Longest shell measurement\nDiameter  continuous  mm  perpendicular to length\nHeight    continuous  mm  with meat in shell\nWhole weight  continuous  grams whole abalone\nShucked weight  continuous  grams weight of meat\nViscera weight  continuous  grams gut weight (after bleeding)\nShell weight  continuous  grams after being dried\nRings   integer     +1.5 gives the age in years\n\n```\n", "uid": "syntagmatic_0d4f736796ab7b465020"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar priceFormat = d3.format(\"$.2\");\n\nvar placeFormat = function(d) {\n  if(d == 0) {\n    return \"\";\n  } else if(d == 1) {\n    return \"1st\";\n  } else if(d == 2) {\n    return \"2nd\";\n  } else if(d == 3) {\n    return \"3rd\";\n  } else {\n    return d+\"th\";\n  }\n}\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tickFormat(placeFormat)\n    .ticks(20);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(priceFormat);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.price = +d.price;\n    d.place = +d.place;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.place; })).nice();\n  y.domain(d3.extent(data, function(d) { return d.price; })).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n  svg.selectAll(\".point\")\n      .data(data)\n    .enter().append(\"text\")\n      .attr(\"class\", \"point\")\n      .attr(\"x\", function(d) { return x(d.place); })\n      .attr(\"y\", function(d) { return y(d.price); })\n      .attr(\"dy\", \".5em\")\n      .text(function(d) { return d.name; });\n\n});\n\n</script>", "description": "Survivor with Seth performance", "created_at": "2015-06-18T02:57:54Z", "updated_at": "2016-05-12T04:03:34Z", "api": ["d3.format", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.extent"], "readme": "Survivor with Seth III auction performance", "uid": "tophtucker_93ff5a3f6f82d6fd7719"}, {"code": "<script>\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 400 - margin.left - margin.right,\n    height = 600 - margin.top - margin.bottom;\n\n\n// setup x \nvar xValue = function(d) { return d.years;}, // data -> value\n    xScale = d3.scale.linear().range([0, width]), // value -> display\n    xMap = function(d) { return xScale(xValue(d));}, // data -> display\n    xAxis = d3.svg.axis()\n    .scale(xScale)\n    .ticks(7)\n    .orient(\"bottom\")\n    .tickFormat(d3.format(\"\"));\n\n// setup y\nvar yValue = function(d) { return d.value;}, // data -> value\n    yScale = d3.scale.linear().range([height, 50]), // value -> display\n    yMap = function(d) { return yScale(yValue(d));}, // data -> display\n    yAxis = d3.svg.axis()\n    .scale(yScale)\n    .ticks(4)\n    .orient(\"left\");\n\n// setup fill color\nvar cValue = function(d) { return d.names;},\n    color = d3.scale.category10();\n\n\n// setup r \n// var dValue = function(d) { return d.GDP;},\n  \n\n// add the graph canvas to the body of the webpage\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// add the tooltip area to the webpage\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n// load data\nd3.csv(\"data2.csv\", function(error, data) {\n\n  // change string (from CSV) into number format\n  data.forEach(function(d) {\n    d.value = +d.value;\n    d.years = +d.years;\n//    console.log(d);\n  });\n\n  // don't want dots overlapping axis, so add in buffer to data domain\n  xScale.domain([d3.min(data, xValue), d3.max(data, xValue)]);\n  yScale.domain([d3.min(data, yValue)-1, d3.max(data, yValue)+1]);\n\n  // x-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width -10)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n       .style(\"fill\", \"white\")\n      .text(\"Year of Publication\");\n\n\n  // y-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate()\")\n      .attr(\"y\", 100)\n      .attr(\"x\", 220)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .style(\"fill\", \"white\")\n      .text(\"Y-Axis: Little Evidence (0) to Solid Evidence (4)\");\n\n  // draw dots\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 12)\n      .attr(\"cx\", xMap)\n      .attr(\"cy\", yMap)\n      .style(\"fill\", function(d) {\nif (d.value <= 1) {return \"red\"}\nelse if (d.value >= 4) {return \"lawngreen\"} \n  else {return \"yellow\" }\n;})\n      // .style(\"fill\", \"magenta\")\n      .style(\"opacity\", .7) \n      .on(\"mouseover\", function(d) {\n        d3.select(this).transition().duration(50)\n            .attr(\"r\", 12)\n            .style(\"opacity\", .7);\n          tooltip.transition()\n               .duration(200)\n               .style(\"opacity\", .9);\n\n\n          tooltip.html( '<a href= \"'+d.link+'\" target=\"_blank\">' + d.subbenefit + '</a>' + \" (category: \" + d.category + \") : \" + d.plainlanguage + \". Source: \" + d.source)\n               .style(\"left\", (d3.event.pageX + 5) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        d3.select(this).transition().duration(200).attr(\"r\", 12).style(\"opacity\", valOpacity); \n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 1);\n      });\n\n  // draw legend\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .style(\"full\", \"white\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 10 + \")\"; });\n\n  // draw legend colored rectangles\n  // legend.append(\"rect\")\n  //     .attr(\"x\", width )\n  //     .attr(\"width\", 10)\n  //     .attr(\"height\", 10)\n  //     .style(\"fill\", color);\n\n  // draw legend text\n\n});\n\n</script>", "description": "", "created_at": "2015-06-15T13:41:25Z", "updated_at": "2015-08-29T14:23:07Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.format", "d3.scale.category10", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "", "uid": "BenHeubl_8df912bfa0d147b74de2"}, {"code": "<script>\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 400 - margin.left - margin.right,\n    height = 600 - margin.top - margin.bottom;\n\n\n// setup x \nvar xValue = function(d) { return d.years;}, // data -> value\n    xScale = d3.scale.linear().range([0, width]), // value -> display\n    xMap = function(d) { return xScale(xValue(d));}, // data -> display\n    xAxis = d3.svg.axis()\n    .scale(xScale)\n    .ticks(7)\n    .orient(\"bottom\")\n    .tickFormat(d3.format(\"\"));\n\n// setup y\nvar yValue = function(d) { return d.value;}, // data -> value\n    yScale = d3.scale.linear().range([height, 50]), // value -> display\n    yMap = function(d) { return yScale(yValue(d));}, // data -> display\n    yAxis = d3.svg.axis()\n    .scale(yScale)\n    .ticks(4)\n    .orient(\"left\");\n\n// setup fill color\nvar cValue = function(d) { return d.names;},\n    color = d3.scale.category10();\n\n\n// setup r \n// var dValue = function(d) { return d.GDP;},\n  \n\n// add the graph canvas to the body of the webpage\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// add the tooltip area to the webpage\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n// load data\nd3.csv(\"data2.csv\", function(error, data) {\n\n  // change string (from CSV) into number format\n  data.forEach(function(d) {\n    d.value = +d.value;\n    d.years = +d.years;\n//    console.log(d);\n  });\n\n  // don't want dots overlapping axis, so add in buffer to data domain\n  xScale.domain([d3.min(data, xValue), d3.max(data, xValue)]);\n  yScale.domain([d3.min(data, yValue)-1, d3.max(data, yValue)+1]);\n\n  // x-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width -10)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n       .style(\"fill\", \"white\")\n      .text(\"Year of Publication\");\n\n\n  // y-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate()\")\n      .attr(\"y\", 100)\n      .attr(\"x\", 220)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .style(\"fill\", \"white\")\n      .text(\"Y-Axis: Little Evidence (0) to Solid Evidence (4)\");\n\n  // draw dots\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 12)\n      .attr(\"cx\", xMap)\n      .attr(\"cy\", yMap)\n      .style(\"fill\", function(d) {\nif (d.value <= 1) {return \"red\"}\nelse if (d.value >= 4) {return \"lawngreen\"} \n  else {return \"yellow\" }\n;})\n      // .style(\"fill\", \"magenta\")\n      .style(\"opacity\", .7) \n      .on(\"mouseover\", function(d) {\n        d3.select(this).transition().duration(50)\n            .attr(\"r\", 12)\n            .style(\"opacity\", .7);\n          tooltip.transition()\n               .duration(200)\n               .style(\"opacity\", .9);\n\n\n          tooltip.html( '<a href= \"'+d.link+'\" target=\"_blank\">' + d.subbenefit + '</a>' + \" : \" + d.plainlanguage + \". Source: \" + d.source)\n               .style(\"left\", (d3.event.pageX + 5) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        d3.select(this).transition().duration(200).attr(\"r\", 12).style(\"opacity\", valOpacity); \n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 1);\n      });\n\n  // draw legend\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .style(\"full\", \"white\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 10 + \")\"; });\n\n  // draw legend colored rectangles\n  // legend.append(\"rect\")\n  //     .attr(\"x\", width )\n  //     .attr(\"width\", 10)\n  //     .attr(\"height\", 10)\n  //     .style(\"fill\", color);\n\n  // draw legend text\n\n});\n\n</script>", "description": "", "created_at": "2015-06-15T13:24:05Z", "updated_at": "2015-08-29T14:23:07Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.format", "d3.scale.category10", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "", "uid": "BenHeubl_38e6e47ed84765951ca2"}, {"code": "<script>\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 400 - margin.left - margin.right,\n    height = 600 - margin.top - margin.bottom;\n\n\n// setup x \nvar xValue = function(d) { return d.years;}, // data -> value\n    xScale = d3.scale.linear().range([0, width]), // value -> display\n    xMap = function(d) { return xScale(xValue(d));}, // data -> display\n    xAxis = d3.svg.axis()\n    .scale(xScale)\n    .ticks(7)\n    .orient(\"bottom\")\n    .tickFormat(d3.format(\"\"));\n\n// setup y\nvar yValue = function(d) { return d.value;}, // data -> value\n    yScale = d3.scale.linear().range([height, 50]), // value -> display\n    yMap = function(d) { return yScale(yValue(d));}, // data -> display\n    yAxis = d3.svg.axis()\n    .scale(yScale)\n    .ticks(4)\n    .orient(\"left\");\n\n// setup fill color\nvar cValue = function(d) { return d.names;},\n    color = d3.scale.category10();\n\n\n// setup r \n// var dValue = function(d) { return d.GDP;},\n  \n\n// add the graph canvas to the body of the webpage\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// add the tooltip area to the webpage\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n// load data\nd3.csv(\"data2.csv\", function(error, data) {\n\n  // change string (from CSV) into number format\n  data.forEach(function(d) {\n    d.value = +d.value;\n    d.years = +d.years;\n//    console.log(d);\n  });\n\n  // don't want dots overlapping axis, so add in buffer to data domain\n  xScale.domain([d3.min(data, xValue), d3.max(data, xValue)]);\n  yScale.domain([d3.min(data, yValue)-1, d3.max(data, yValue)+1]);\n\n  // x-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width -10)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n       .style(\"fill\", \"white\")\n      .text(\"Less Evidence .......<->......Much Evidence\");\n\n  // y-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"x\", -600)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .style(\"fill\", \"white\")\n      .text(\"Year of Publication\");\n\n  // draw dots\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 12)\n      .attr(\"cx\", xMap)\n      .attr(\"cy\", yMap)\n      .style(\"fill\", \"magenta\")\n      .style(\"opacity\", .7) \n      .on(\"mouseover\", function(d) {\n        d3.select(this).transition().duration(50)\n            .attr(\"r\", 12)\n            .style(\"opacity\", .7);\n          tooltip.transition()\n               .duration(200)\n               .style(\"opacity\", .9);\n\n\n          tooltip.html( '<a href= \"'+d.link+'\" target=\"_blank\">' + d.subbenefit + '</a>' + \" : \" + d.plainlanguage + \". Source: \" + d.source)\n               .style(\"left\", (d3.event.pageX + 5) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n        d3.select(this).transition().duration(200).attr(\"r\", 12).style(\"opacity\", valOpacity); \n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 1);\n      });\n\n  // draw legend\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .style(\"full\", \"white\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 10 + \")\"; });\n\n  // draw legend colored rectangles\n  // legend.append(\"rect\")\n  //     .attr(\"x\", width )\n  //     .attr(\"width\", 10)\n  //     .attr(\"height\", 10)\n  //     .style(\"fill\", color);\n\n  // draw legend text\n\n});\n\n</script>", "description": "", "created_at": "2015-06-15T12:43:53Z", "updated_at": "2015-08-29T14:23:07Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.format", "d3.scale.category10", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "", "uid": "BenHeubl_cf01c80643e72e5a9fc0"}, {"code": "<script>\n\nvar margin = {top: 40, right: 100, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%d/%m/%Y\").parse;    \n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(6);\n\nvar linetotalEmployment = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.totalEmployment); });\n\nvar lineEmployees = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.Employees); });\n\nvar lineselfEmployed = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.selfEmployed); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nfunction make_x_axis() {    \n    return d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\")\n        .ticks(0)\n}\n\nfunction make_y_axis() {    \n    return d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .ticks(6)\n}\n\nd3.csv(\"data.csv\", function(error, data) { \n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.totalEmployment = +d.totalEmployment;\n    d.selfEmployed = +d.selfEmployed;\n    d.Employees = +d.Employees;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain(d3.extent(data, function(d) { return d.totalEmployment+d.Employees/5;}));\n\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n\n      svg.append(\"text\")\n  .attr(\"transform\", \"translate(\"+(width+3)+\",\"+y(data[data.length-1].Employees)+\")\")  //labels\n  .attr(\"dy\", \".35em\")\n  .attr(\"text-anchor\", \"start\")\n  .style(\"fill\", \"#858abe\")\n  .text(\"Employees\");\n\n  svg.append(\"text\")\n  .attr(\"transform\", \"translate(\"+(width+3)+\",\"+y(data[data.length-1].selfEmployed)+\")\")\n  .attr(\"dy\", \".35em\")\n  .attr(\"text-anchor\", \"start\")\n  .style(\"fill\", \"#699999\")\n  .text(\"Self-employed\");\n\n  svg.append(\"text\")\n  .attr(\"transform\", \"translate(\"+(width+3)+\",\"+y(data[data.length-1].totalEmployment)+\")\")\n  .attr(\"dy\", \".35em\")\n  .attr(\"text-anchor\", \"start\")\n  .style(\"fill\", \"#D8565F\")\n  .text(\"Total employment\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"linetotalEmployment\")\n      .style(\"stroke-dasharray\", (\"3, 3\"))                            // dashed line\n      .attr(\"d\", linetotalEmployment);\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"lineEmployees\")\n      .attr(\"d\", lineEmployees);\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"lineselfEmployed\")\n      .attr(\"d\", lineselfEmployed);\n});\n\n  svg.append(\"text\")\n      .attr(\"x\", (width / 2))       \n      .attr(\"y\", 0 - (margin.top / 2))\n      .attr(\"text-anchor\", \"middle\")  \n      .style(\"font-size\", \"16px\") \n      .style(\"text-decoration\", \"underline\")  \n      .text(\"Change in employees and self-employment\");\n\n  svg.append(\"text\")         // append text\n    .style(\"fill\", \"black\")   // fill the text with the colour black\n    .attr(\"x\", 15)           // set x position of left side of text\n    .attr(\"y\", -15)           // set y position of bottom of text\n    .attr(\"dy\", \".71em\")           // set offset y position\n    .attr(\"text-anchor\", \"start\")  // set anchor y justification \n    .text(\"Change since May 2008, thousands of workers\");          // define the text to display\n\n    svg.append(\"g\")      \n        .attr(\"class\", \"grid\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(make_x_axis()\n            .tickSize(-height, 0, 0)\n            .tickFormat(\"\")\n        )\n\n    svg.append(\"g\")     \n        .attr(\"class\", \"grid\")\n        .call(make_y_axis()\n            .tickSize(-width, 0, 0) \n            .tickFormat(\"\")\n        )\n\n</script>", "description": "Latest v self-employment/employees", "created_at": "2015-06-11T15:02:22Z", "updated_at": "2015-08-29T14:22:54Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent"], "readme": "", "uid": "resolutionfoundation_3e88d3100ecbaed6b9a2"}, {"code": "<script>\n\nvar dotSide = 7,\n    dotSep   = 1,\n    logoXPadding = 2 * dotSide,\n    logoYPadding = 2 * dotSide,\n    width = 11 * dotSide + 2 * logoXPadding,\n    height = 5 * dotSide + 2 * logoYPadding,\n    h = Math.floor(logoXPadding / 2) - 0.5 * dotSide;\n    v = Math.floor(height - logoYPadding / 2) - 0.5 * dotSide;\n\nconsole.log(\"width=\" + width);\nconsole.log(\"height=\" + height);\n\nvar nodes = [\n    [ 3,  3, 0], // dots for 'P' (ordered like in handwriting ;-)\n    [ 3,  5, 0],\n    [ 3,  7, 0],\n    [ 3,  9, 0],\n    [ 3, 11, 0],\n    [ 5, 11, 0],\n    [ 7, 10, 0],\n    [ 7,  8, 0],\n    [ 5,  7, 0],\n    [11,  3, 1], // dots for 'R' (first 9 like for 'P')\n    [11,  5, 1],\n    [11,  7, 1],\n    [11,  9, 1],\n    [11, 11, 1],\n    [13, 11, 1],\n    [15, 10, 1],\n    [15,  8, 1],\n    [13,  7, 1],\n    [14,  5, 1], // 'R' leg\n    [15,  3, 1],\n    [19, 11, 2], // dots for 'U' (ordered like in handwriting ;-)\n    [19,  9, 2],\n    [19,  7, 2],\n    [20,  5, 2],\n    [21,  3, 2],\n    [23,  3, 2],\n    [23,  5, 2],\n    [23,  7, 2],\n    [23,  9, 2],\n    [23, 11, 2]\n  ],\n  n = nodes.length;\n  letters = [\"p\", \"r\", \"u\"];\n\n\n\nvar svg = d3.select(\"#logo\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + h + \",\" + v + \")\")\n\ng.selectAll(\"rect\")\n    .data(nodes)\n  .enter().append(\"rect\")\n    .attr(\"class\", function(d){ return \"logo-\" + letters[d[2]]})\n    .attr(\"x\", function(d) {\n      return d.x = Math.round(d[0]/2 * dotSide);\n    })\n    .attr(\"y\", function(d) {\n      return d.y = Math.round(-d[1]/2 * dotSide);\n    })\n    .attr(\"width\", dotSide - dotSep)\n    .attr(\"height\", dotSide - dotSep);\n\n\nvar particles = nodes.slice();\nparticles.push.apply(particles, particles.map(function(e){\n  return {\n    x: e.x,\n    y: e.y,\n    fixed: !0,\n    radius: 0    \n  };\n}));\n\nparticles.unshift({x: 1e4, y: 1e4}); // insert root node\nvar root = particles[0];\nroot.radius = 0;\nroot.fixed = true;\n\nvar links = d3.range(n).map(function(d){\n  return {\n    source: d + 1,\n    target: d + n + 1\n  }\n})\n\nvar force = d3.layout.force()\n    .gravity(0)\n    .charge(function(d, i) { return i ? 0 : -200; })\n    .linkDistance(0.1)\n    .links(links)\n    .nodes(particles)\n    .size([width, height]);\n\nforce.start();\n\nforce.on(\"tick\", function(e){\n  var q = d3.geom.quadtree(particles),\n      i = 0,\n      n = particles.length;\n\n  while (++i < n) q.visit(collide(particles[i]));\n\n  svg.selectAll(\"rect\")\n      .attr(\"x\", function(d) { return Math.round(d.x); })\n      .attr(\"y\", function(d) { return Math.round(d.y); });\n});\n\n\nsvg\n  .on(\"mousemove\", mausIn)\n  .on(\"touchmove\", mausIn)\n  .on(\"mouseout\", mausOut)\n  .on(\"touchend\", mausOut);\n\nfunction mausOut() {\n  var p1 = d3.mouse(this);\n  root.px = root.py = 1e4;\n  force.resume();\n}\n\nfunction mausIn() {\n  var p1 = d3.mouse(this);\n  root.px = p1[0] - h;\n  root.py = p1[1] - v;\n  force.resume();\n}\n\nfunction collide(node) {\n  var r = node.radius + 16,\n      nx1 = node.x - r,\n      nx2 = node.x + r,\n      ny1 = node.y - r,\n      ny2 = node.y + r;\n  return function(quad, x1, y1, x2, y2) {\n    if (quad.point && (quad.point !== node)) {\n      var x = node.x - quad.point.x,\n          y = node.y - quad.point.y,\n          l = Math.sqrt(x * x + y * y),\n          r = node.radius + quad.point.radius;\n      if (l < r) {\n        l = (l - r) / l * .5;\n        node.x -= x *= l;\n        node.y -= y *= l;\n        quad.point.x += x;\n        quad.point.y += y;\n      }\n    }\n    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n  };\n}\n\n</script>", "description": "PRU (interactive) logo", "created_at": "2015-05-28T07:32:10Z", "updated_at": "2015-08-29T14:22:01Z", "api": ["d3.select", "d3.range", "d3.layout.force", "d3.geom.quadtree", "d3.mouse"], "readme": "This is an implementation of an interactive logo for [PRU](http://euctrl-pru.github.io/), inspired by [IDL's one](http://idl.cs.washington.edu/) and by [Mike's block](http://bl.ocks.org/mbostock/3231298).\n\nHover on it...", "uid": "espinielli_874de501ebf175d84fef"}, {"code": "<script>\n\n            var width = 900,\n                height = 600;\n\n            var svg = d3.select(\"#map-container\").append(\"svg\")\n                .attr(\"width\", width)\n                .attr(\"height\", height);\n\n            var projection = d3.geo.mercator() // mercator makes it easy to center on specific lat/long\n                .scale(50000)\n                .center([-73.94, 40.70]); // long, lat of NYC\n\n            var pathGenerator = d3.geo.path()\n                .projection(projection);\n\n            d3.json(\"./boroughs.geo.json\", function(error, boroughs) {\n                if (error) return console.error(error);\n                //console.log(boroughs);\n\n                svg.selectAll(\"path\")\n                    .data(boroughs.features)\n                  .enter().append(\"path\")\n                    .attr(\"class\", \"boroughs\")\n                    .attr(\"d\", pathGenerator);\n\n                // With map made, load data and add it to the map\n                d3.csv('./nyc-crime-subset.csv', function(error2, crimeData) {\n                    if (error2) return console.error(error2);\n\n                    addPointsToMap(crimeData);\n                });\n\n            });\n\n            var addPointsToMap = function(crimeData) {\n                var colorScale  = d3.scale.category10();\n\n                var radiusScale = d3.scale.sqrt()\n                    .domain(d3.extent(crimeData, function(crime) { return +crime.TOT; }))\n                    .range([2, 15]);\n\n                // Add the tooltip container to the vis container\n                // it's invisible and its position/contents are defined during mouseover\n                var tooltip = d3.select(\"#map-container\").append(\"div\")\n                    .attr(\"class\", \"tooltip\")\n                    .style(\"opacity\", 0);\n\n                // tooltip mouseover event handler\n                var tipMouseover = function(d) {\n                    this.setAttribute(\"class\", \"circle-hover\"); // add hover class to emphasize\n\n                    var color = colorScale(d.CR);\n                    var html  = \"<span style='color:\" + color + \";'>\" + d.CR + \"</span><br/>\" +\n                                \"Count: \" + d.TOT + \"<br/>Date: \" + d.MO + \"/\" + d.YR;\n\n                    tooltip.html(html)\n                        .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\")\n                      .transition()\n                        .duration(200) // ms\n                        .style(\"opacity\", .9) // started as 0!\n                };\n\n                // tooltip mouseout event handler\n                var tipMouseout = function(d) {\n                    this.classList.remove(\"circle-hover\"); // remove hover class\n\n                    tooltip.transition()\n                        .duration(300) // ms\n                        .style(\"opacity\", 0); // don't care about position!\n                };\n\n                svg.selectAll(\"circle\")\n                    .data(crimeData)\n                  .enter().append(\"circle\")\n                    .attr(\"fill\", function(d) { return colorScale(d.CR); })\n                    .attr(\"cx\", function(d) { return projection([+d.longitude, +d.latitude])[0]; })\n                    .attr(\"cy\", function(d) { return projection([+d.longitude, +d.latitude])[1]; })\n                    .attr(\"r\",  function(d) { return radiusScale(+d.TOT); })\n                    .on(\"mouseover\", tipMouseover)\n                    .on(\"mouseout\", tipMouseout);\n\n                addLegend(colorScale);\n            };\n\n            var addLegend = function(colorScale) {\n                var legendMarginTop  = 50,\n                    legendMarginLeft = 30,\n                    legendWidth  = 250,\n                    legendHeight = 150;\n\n                var legend = svg.append('g')\n                    .attr('width', legendWidth)\n                    .attr('height', legendHeight)\n                    .attr(\"transform\", \"translate(\" + legendMarginLeft + \",\" + legendMarginTop + \")\");\n\n                var legends = legend.selectAll(\".legend\")\n                    .data(colorScale.domain())\n                  .enter().append(\"g\")\n                    .attr(\"class\", \"legend\")\n                    .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n                // draw legend colored rectangles\n                legends.append(\"rect\")\n                    .attr(\"x\", legendWidth - 18)\n                    .attr(\"width\", 18)\n                    .attr(\"height\", 18)\n                    .style(\"fill\", colorScale);\n\n                // draw legend text\n                legends.append(\"text\")\n                    .attr(\"x\", legendWidth - 24)\n                    .attr(\"y\", 9)\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"end\")\n                    .text(function(d) { return d.toLowerCase(); });\n            };\n\n        </script>", "description": "Plotting map data with d3.js and topojson.js", "created_at": "2015-05-25T21:40:39Z", "updated_at": "2015-08-29T14:21:54Z", "api": ["d3.select", "d3.geo.mercator", "d3.geo.path", "d3.json", "d3.csv", "d3.scale.category10", "d3.scale.sqrt", "d3.extent"], "readme": "", "uid": "williaster_79aa4dbb3ab17f13732f"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n    centered;\n\n// Define color scale\nvar color = d3.scale.linear()\n  .domain([1, 20])\n  .clamp(true)\n  .range(['#fff', '#409A99']);\n\nvar projection = d3.geo.mercator()\n  .scale(1700)\n  // Customize the projection to make the center of Thailand become the center of the map\n  .rotate([-100.6331, -13.2])\n  .translate([width / 2, height / 2]);\n\nvar path = d3.geo.path()\n  .projection(projection);\n\n// Set svg width & height\nvar svg = d3.select('svg')\n  .attr('width', width)\n  .attr('height', height);\n\n// Add background\nsvg.append('rect')\n  .attr('class', 'background')\n  .attr('width', width)\n  .attr('height', height)\n  .on('click', clicked);\n\nvar g = svg.append('g');\n\nvar effectLayer = g.append('g')\n  .classed('effect-layer', true);\n\nvar mapLayer = g.append('g')\n  .classed('map-layer', true);\n\nvar dummyText = g.append('text')\n  .classed('dummy-text', true)\n  .attr('x', 10)\n  .attr('y', 30)\n  .style('opacity', 0);\n\nvar bigText = g.append('text')\n  .classed('big-text', true)\n  .attr('x', 20)\n  .attr('y', 45);\n\n// Load map data\nd3.json('thailand.json', function(error, mapData) {\n  var features = mapData.features;\n\n  // Update color scale domain based on data\n  color.domain([0, d3.max(features, nameLength)]);\n\n  // Draw each province as a path\n  mapLayer.selectAll('path')\n      .data(features)\n    .enter().append('path')\n      .attr('d', path)\n      .attr('vector-effect', 'non-scaling-stroke')\n      .style('fill', fillFn)\n      .on('mouseover', mouseover)\n      .on('mouseout', mouseout)\n      .on('click', clicked);\n});\n\n// Get province name\nfunction nameFn(d){\n  return d && d.properties ? d.properties.CHA_NE : null;\n}\n\n// Get province name length\nfunction nameLength(d){\n  var n = nameFn(d);\n  return n ? n.length : 0;\n}\n\n// Get province color\nfunction fillFn(d){\n  return color(nameLength(d));\n}\n\n// When clicked, zoom in\nfunction clicked(d) {\n  var x, y, k;\n\n  // Compute centroid of the selected path\n  if (d && centered !== d) {\n    var centroid = path.centroid(d);\n    x = centroid[0];\n    y = centroid[1];\n    k = 4;\n    centered = d;\n  } else {\n    x = width / 2;\n    y = height / 2;\n    k = 1;\n    centered = null;\n  }\n\n  // Highlight the clicked province\n  mapLayer.selectAll('path')\n    .style('fill', function(d){return centered && d===centered ? '#D5708B' : fillFn(d);});\n\n  // Zoom\n  g.transition()\n    .duration(750)\n    .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')scale(' + k + ')translate(' + -x + ',' + -y + ')');\n}\n\nfunction mouseover(d){\n  // Highlight hovered province\n  d3.select(this).style('fill', 'orange');\n\n  // Draw effects\n  textArt(nameFn(d));\n}\n\nfunction mouseout(d){\n  // Reset province color\n  mapLayer.selectAll('path')\n    .style('fill', function(d){return centered && d===centered ? '#D5708B' : fillFn(d);});\n\n  // Remove effect text\n  effectLayer.selectAll('text').transition()\n    .style('opacity', 0)\n    .remove();\n\n  // Clear province name\n  bigText.text('');\n}\n\n// Gimmick\n// Just me playing around.\n// You won't need this for a regular map.\n\nvar BASE_FONT = \"'Helvetica Neue', Helvetica, Arial, sans-serif\";\n\nvar FONTS = [\n  \"Open Sans\",\n  \"Josefin Slab\",\n  \"Arvo\",\n  \"Lato\",\n  \"Vollkorn\",\n  \"Abril Fatface\",\n  \"Old StandardTT\",\n  \"Droid+Sans\",\n  \"Lobster\",\n  \"Inconsolata\",\n  \"Montserrat\",\n  \"Playfair Display\",\n  \"Karla\",\n  \"Alegreya\",\n  \"Libre Baskerville\",\n  \"Merriweather\",\n  \"Lora\",\n  \"Archivo Narrow\",\n  \"Neuton\",\n  \"Signika\",\n  \"Questrial\",\n  \"Fjalla One\",\n  \"Bitter\",\n  \"Varela Round\"\n];\n\nfunction textArt(text){\n  // Use random font\n  var fontIndex = Math.round(Math.random() * FONTS.length);\n  var fontFamily = FONTS[fontIndex] + ', ' + BASE_FONT;\n\n  bigText\n    .style('font-family', fontFamily)\n    .text(text);\n\n  // Use dummy text to compute actual width of the text\n  // getBBox() will return bounding box\n  dummyText\n    .style('font-family', fontFamily)\n    .text(text);\n  var bbox = dummyText.node().getBBox();\n\n  var textWidth = bbox.width;\n  var textHeight = bbox.height;\n  var xGap = 3;\n  var yGap = 1;\n\n  // Generate the positions of the text in the background\n  var xPtr = 0;\n  var yPtr = 0;\n  var positions = [];\n  var rowCount = 0;\n  while(yPtr < height){\n    while(xPtr < width){\n      var point = {\n        text: text,\n        index: positions.length,\n        x: xPtr,\n        y: yPtr\n      };\n      var dx = point.x - width/2 + textWidth/2;\n      var dy = point.y - height/2;\n      point.distance = dx*dx + dy*dy;\n\n      positions.push(point);\n      xPtr += textWidth + xGap;\n    }\n    rowCount++;\n    xPtr = rowCount%2===0 ? 0 : -textWidth/2;\n    xPtr += Math.random() * 10;\n    yPtr += textHeight + yGap;\n  }\n\n  var selection = effectLayer.selectAll('text')\n    .data(positions, function(d){return d.text+'/'+d.index;});\n\n  // Clear old ones\n  selection.exit().transition()\n    .style('opacity', 0)\n    .remove();\n\n  // Create text but set opacity to 0\n  selection.enter().append('text')\n    .text(function(d){return d.text;})\n    .attr('x', function(d){return d.x;})\n    .attr('y', function(d){return d.y;})\n    .style('font-family', fontFamily)\n    .style('fill', '#777')\n    .style('opacity', 0);\n\n  selection\n    .style('font-family', fontFamily)\n    .attr('x', function(d){return d.x;})\n    .attr('y', function(d){return d.y;});\n\n  // Create transtion to increase opacity from 0 to 0.1-0.5\n  // Add delay based on distance from the center of the <svg> and a bit more randomness.\n  selection.transition()\n    .delay(function(d){\n      return d.distance * 0.01 + Math.random()*1000;\n    })\n    .style('opacity', function(d){\n      return 0.1 + Math.random()*0.4;\n    });\n}\n\n</script>", "description": "Thailand map", "created_at": "2015-05-22T06:04:16Z", "updated_at": "2015-08-29T14:21:42Z", "api": ["d3.scale.linear", "d3.geo.mercator", "d3.geo.path", "d3.select", "d3.json", "d3.max"], "readme": "My original intention was to create a simple example of Thailand map using d3.js. Then I got a bit too excited and added some effects. \n\n* Each province is color-coded by the length of its name in English. \n* Hover each province to see text effects.\n* New font is chosen randomly every time you change the province. \n* Click on a province to zoom in. Click somewhere else to zoom out. \n\nCredit [Apisit Toompakdee](https://github.com/apisit) for his GeoJSON file [thailand.json](https://github.com/apisit/thailand.json)", "uid": "kristw_7fbf031e3205a8a453a8"}, {"code": "<script>\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 900 - margin.left - margin.right,\n    height = 250 - margin.top - margin.bottom;\n\n// La fecha, en el archivo, tiene este formato: 22/04/2013\n//\nvar parseDate = d3.time.format(\"%d/%m/%Y\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.close); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"http://aaizemberg.github.io/infovis-itba/matdomin/hoursSlept.csv\", function(error, data) {\n  data.forEach(function(d) {\n    d.date = parseDate(d.StartDate);\n    d.close = +d.Duration / 60;\n  });\n  \n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain(d3.extent(data, function(d) { return d.close; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"horas\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n});\n</script>", "description": "Hours of Sleep", "created_at": "2015-05-18T15:40:11Z", "updated_at": "2015-08-29T14:21:29Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent"], "readme": "# Horas de sue\u00f1o sobre un gr\u00e1fico de lineas\n\ngracias Mike Bostock (http://bl.ocks.org/mbostock/3883245)", "uid": "aaizemberg_fb57115b0980ac1455f6"}, {"code": "<script>\n\n// get the data\nd3.csv(\"data.csv\", function(error, links) {\n\n/*\nvar d.source = links.employeeID;\nvar d.target = links.managerID;\nvar d.value = links.payGrade;\n*/\n\nvar nodes = {};\n\n// Compute the distinct nodes from the links.\nlinks.forEach(function(link) {\n    link.source = nodes[link.source] || \n        (nodes[link.source] = {name: link.employee});\n    link.target = nodes[link.target] || \n        (nodes[link.target] = {name: link.manager});\n    link.value = +link.value;\n});\n\nvar width = 4000,\n    height = 2000;\n\nvar force = d3.layout.force()\n    .nodes(d3.values(nodes))\n    .links(links)\n    .size([width, height])\n    .linkDistance(20)\n    .charge(-200)\n    .on(\"tick\", tick)\n    .start();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n// build the arrow.\nsvg.append(\"svg:defs\").selectAll(\"marker\")\n    .data([\"end\"])      // Different link/path types can be defined here\n  .enter().append(\"svg:marker\")    // This section adds in the arrows\n    .attr(\"id\", String)\n    .attr(\"viewBox\", \"0 -5 10 10\")\n    .attr(\"refX\", 15)\n    .attr(\"refY\", -1.5)\n    .attr(\"markerWidth\", 6)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\")\n    .attr(\"class\", \"marker\")\n  .append(\"svg:path\")\n    .attr(\"d\", \"M0,-5L10,0L0,5\");\n\n// add the links and the arrows\nvar path = svg.append(\"svg:g\").selectAll(\"path\")\n    .data(force.links())\n  .enter().append(\"svg:path\")\n//    .attr(\"class\", function(d) { return \"link \" + d.type; })\n    .attr(\"class\", \"link\")\n    .attr(\"marker-end\", \"url(#end)\");\n\n// define the nodes\nvar node = svg.selectAll(\".node\")\n    .data(force.nodes())\n  .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .on(\"click\", click)\n    .on(\"dblclick\", dblclick)\n    .call(force.drag);\n\n// add the nodes\nnode.append(\"circle\")\n    .attr(\"r\", 5);\n\n// add the text \nnode.append(\"text\")\n    .attr(\"x\", 12)\n    .attr(\"dy\", \".35em\")\n    .text(function(d) { return d.name; });\n\n// add the curvy lines\nfunction tick() {\n    path.attr(\"d\", function(d) {\n        var dx = d.target.x - d.source.x,\n            dy = d.target.y - d.source.y,\n            dr = Math.sqrt(dx * dx + dy * dy);\n        return \"M\" + \n            d.source.x + \",\" + \n            d.source.y + \"A\" + \n            dr + \",\" + dr + \" 0 0,1 \" + \n            d.target.x + \",\" + \n            d.target.y;\n    });\n\n    node\n        .attr(\"transform\", function(d) { \n  \t    return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n}\n\n// action to take on mouse click\nfunction click() {\n    d3.select(this).select(\"text\").transition()\n        .duration(750)\n        .attr(\"x\", 22)\n        .style(\"fill\", \"steelblue\")\n        .style(\"stroke\", \"lightsteelblue\")\n        .style(\"stroke-width\", \".5px\")\n        .style(\"font\", \"20px sans-serif\");\n    d3.select(this).select(\"circle\").transition()\n        .duration(750)\n        .attr(\"r\", 16)\n        .style(\"fill\", \"lightsteelblue\");\n}\n\n// action to take on mouse double click\nfunction dblclick() {\n    d3.select(this).select(\"circle\").transition()\n        .duration(750)\n        .attr(\"r\", 6)\n        .style(\"fill\", \"#ccc\");\n    d3.select(this).select(\"text\").transition()\n        .duration(750)\n        .attr(\"x\", 12)\n        .style(\"stroke\", \"none\")\n        .style(\"fill\", \"black\")\n        .style(\"stroke\", \"none\")\n        .style(\"font\", \"10px sans-serif\");\n}\n\n});\n\n</script>", "description": "houston parks and recreation org vis", "created_at": "2015-05-17T18:06:41Z", "updated_at": "2016-06-14T23:07:04Z", "api": ["d3.csv", "d3.layout.force", "d3.values", "d3.select"], "readme": "#houston parks and recreation org vis\n\nbuilt with [d3.js](http://mbostock.github.com/d3/).", "uid": "micahstubbs_b7182dddb4a1b79d1ac7"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.xml(\"data.xml\", function(error, data) {\n  if (error) throw error;\n\n  // Convert the XML document to an array of objects.\n  // Note that querySelectorAll returns a NodeList, not a proper Array,\n  // so we must use map.call to invoke array methods.\n  data = [].map.call(data.querySelectorAll(\"letter\"), function(letter) {\n    return {\n      letter: letter.getAttribute(\"id\"),\n      frequency: +letter.querySelector(\"frequency\").textContent\n    };\n  });\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\n</script>", "description": "XML Parsing", "created_at": "2015-05-16T04:06:14Z", "updated_at": "2016-02-09T01:51:15Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.xml", "d3.max"], "readme": "A variant of the [bar chart example](/mbostock/3885304) demonstrating how to parse a simple XML file and traverse it using the [selectors API](http://www.w3.org/TR/selectors-api/). (I recommend converting your data to TSV or CSV instead of parsing XML, if you can, of course.)\n", "uid": "mbostock_ec585e034819c06f5c99"}, {"code": "<script>\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n/* \n * value accessor - returns the value to encode for a given data object.\n * scale - maps value to a visual display encoding, such as a pixel position.\n * map function - maps from data value to display value\n * axis - sets up axis\n */ \n\n// setup x \nvar xValue = function(d) { return d.diabetesPrevalence;}, // data -> value\n    xScale = d3.scale.linear().range([0, width]), // value -> display\n    xMap = function(d) { return xScale(xValue(d));}, // data -> display\n    xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\")\n    .tickFormat(d3.format(\"%\"));\n\n// setup y\nvar yValue = function(d) { return d[\"coffeeConsumption\"];}, // data -> value\n    yScale = d3.scale.linear().range([height, 0]), // value -> display\n    yMap = function(d) { return yScale(yValue(d));}, // data -> display\n    yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\n// setup fill color\nvar cValue = function(d) { return d.Country;},\n    color = d3.scale.category10();\n\n\n// setup r \n// var dValue = function(d) { return d.GDP;},\n  \n\n// add the graph canvas to the body of the webpage\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// add the tooltip area to the webpage\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n// load data\nd3.csv(\"data2.csv\", function(error, data) {\n\n  // change string (from CSV) into number format\n  data.forEach(function(d) {\n    d.diabetesPrevalence = +d.diabetesPrevalence;\n    d[\"coffeeConsumption\"] = +d[\"coffeeConsumption\"];\n//    console.log(d);\n  });\n\n  // don't want dots overlapping axis, so add in buffer to data domain\n  xScale.domain([d3.min(data, xValue), d3.max(data, xValue)]);\n  yScale.domain([d3.min(data, yValue)-1, d3.max(data, yValue)+1]);\n\n  // x-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Diabetes Prevalence (% of Population)\");\n\n  // y-axis\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Coffee Consumption (Kg per capita, per year\");\n\n  // draw dots\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", function(d) { return d.GDP * 10})\n      .attr(\"cx\", xMap)\n      .attr(\"cy\", yMap)\n      .style(\"fill\", function(d) { return color(cValue(d));}) \n      .on(\"mouseover\", function(d) {\n          tooltip.transition()\n               .duration(20)\n               .style(\"opacity\", .9);\n          tooltip.html(d[\"typeGDP\"] + \" ,\" + d[\"Country\"])\n               .style(\"left\", (d3.event.pageX + 5) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n\n  // draw legend\n  // var legend = svg.selectAll(\".legend\")\n  //     .data(color.domain())\n  //   .enter().append(\"g\")\n  //     .attr(\"class\", \"legend\")\n  //     .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 10 + \")\"; });\n\n  // draw legend colored rectangles\n  // legend.append(\"rect\")\n  //     .attr(\"x\", width )\n  //     .attr(\"width\", 10)\n  //     .attr(\"height\", 10)\n  //     .style(\"fill\", color);\n\n  // draw legend text\n  legend.append(\"text\")\n      .attr(\"x\", width - 20)\n      .attr(\"y\", 4)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"rigth\")\n      .text(function(d) { return d;})\n});\n\n</script>", "description": "Coffee consumption vs. Diabetes", "created_at": "2015-05-14T10:11:11Z", "updated_at": "2015-08-29T14:21:12Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.format", "d3.scale.category10", "d3.select", "d3.csv", "d3.min", "d3.max"], "readme": "", "uid": "BenHeubl_ec162962b893ecc70e7b"}, {"code": "<script>\n\nvar links = [\n\n\n\n {source: \"AI\", target: \"Healthcare\", type: \"licensing\"},\n  {source: \"AI\", target: \"Financial\", type: \"licensing\"},\n  {source: \"AI\", target: \"Marketing\", type: \"licensing\"},\n  {source: \"AI\", target: \"Recruitment\", type: \"licensing\"},\n  {source: \"AI\", target: \"Dating\", type: \"licensing\"},\n\n  {source: \"AI\", target: \"Manufacturing\", type: \"licensing\"},\n\n    {source: \"Manufacturing\", target: \"Rethink robots\", type: \"suit\"},\n    {source: \"Manufacturing\", target: \"Predictive product development\", type: \"suit\"},\n    {source: \"Manufacturing\", target: \"Chemical data\", type: \"suit\"},\n\n  {source: \"AI\", target: \"Writing\", type: \"licensing\"},\n      {source: \"Writing\", target: \"Narrative science\", type: \"suit\"},\n      {source: \"Writing\", target: \"Yseop\", type: \"suit\"},\n\n\n\n\n\n\n\n\n  {source: \"Healthcare\", target: \"IBM Watson\", type: \"suit\"},\n  {source: \"Healthcare\", target: \"Barnes & Noble\", type: \"suit\"},\n  {source: \"Healthcare\", target: \"Foxconn\", type: \"suit\"},\n  {source: \"Healthcare\", target: \"Google\", type: \"suit\"},\n  {source: \"Healthcare\", target: \"HTC\", type: \"suit\"},\n  {source: \"Financial\", target: \"Cortex \", type: \"suit\"},\n  {source: \"Marketing\", target: \"Flights\", type: \"licensing\"},\n    {source: \"Flights\", target: \"Skyscanner\", type: \"suit\"},\n    {source: \"Flights\", target: \"Rumbo\", type: \"suit\"},\n    {source: \"Flights\", target: \"Opodo\", type: \"suit\"},\n  {source: \"Marketing\", target: \"Shopping\", type: \"licensing\"},\n    {source: \"Shopping\", target: \"Amazon\", type: \"suit\"},\n    {source: \"Shopping\", target: \"Alibaba\", type: \"suit\"},\n {source: \"Marketing\", target: \"Music\", type: \"licensing\"},\n  {source: \"Music\", target: \"Spotify\", type: \"suit\"},\n   {source: \"Music\", target: \"iTunes\", type: \"suit\"},\n {source: \"Marketing\", target: \"FlipChart\", type: \"suit\"},\n {source: \"Marketing\", target: \"Versus\", type: \"suit\"},\n {source: \"Marketing\", target: \"RadiumOne\", type: \"suit\"},\n {source: \"Marketing\", target: \"Quid\", type: \"suit\"},\n  {source: \"Recruitment\", target: \"Humanoid\", type: \"suit\"},\n  {source: \"Dating\", target: \"OkCupid\", type: \"suit\"},\n\n    {source: \"Marketing\", target: \"Every-labs: Food delivery\", type: \"suit\"},\n    {source: \"Marketing\", target: \"Yummly: Take aways \", type: \"suit\"},\n    {source: \"Marketing\", target: \"Heyzap mobile advertising \", type: \"suit\"},\n    {source: \"Marketing\", target: \"Livestar\", type: \"suit\"},\n    {source: \"Marketing\", target: \"Retargeter\", type: \"suit\"},\n      {source: \"Marketing\", target: \"Zemanta for bloggers\", type: \"suit\"},\n        {source: \"Marketing\", target: \"Campanja adverts \", type: \"suit\"},\n          {source: \"Marketing\", target: \"Preact\", type: \"suit\"},\n            {source: \"Marketing\", target: \"Mattermark \", type: \"suit\"},\n              {source: \"Marketing\", target: \"Moz marketing \", type: \"suit\"},\n                {source: \"Marketing\", target: \"Wise-io-2 \", type: \"suit\"},\n                  {source: \"Marketing\", target: \"Launchhub \", type: \"suit\"},\n                  {source: \"Marketing\", target: \"Targetingmantra  \", type: \"suit\"},\n                  {source: \"Marketing\", target: \"Catnip\", type: \"suit\"},\n                  {source: \"Marketing\", target: \"Mavin\", type: \"suit\"},\n                  {source: \"Marketing\", target: \"Permutive  \", type: \"suit\"},\n                  {source: \"Marketing\", target: \"Fashion-metric  \", type: \"suit\"},\n                  {source: \"Marketing\", target: \"Wordwatch  \", type: \"suit\"},\n        {source: \"Recruitment\", target: \"Gradberry\", type: \"suit\"},\n        {source: \"Recruitment\", target: \"Springrole\", type: \"suit\"},\n\n {source: \"AI\", target: \"Teaching\", type: \"licensing\"},\n  {source: \"Teaching\", target: \"Knewton.com\", type: \"suit\"},\n\n   {source: \"AI\", target: \"Human_Assistant\", type: \"licensing\"},\n\n {source: \"Human_Assistant\", target: \"Incredible-labs\", type: \"suit\"},\n  {source: \"Human_Assistant\", target: \"Kwikdesk\", type: \"suit\"},\n\n  {source: \"Human_Assistant\", target: \"Gridspace\", type: \"suit\"},\n  {source: \"Human_Assistant\", target: \"Petnet\", type: \"suit\"},\n  {source: \"Human_Assistant\", target: \"Topicmarks\", type: \"suit\"},\n  {source: \"Human_Assistant\", target: \"Neura\", type: \"suit\"},\n  {source: \"Human_Assistant\", target: \"Vurb\", type: \"suit\"},\n  {source: \"Human_Assistant\", target: \"Rockmelt\", type: \"suit\"},\n  {source: \"Human_Assistant\", target: \"Rainforest\", type: \"suit\"},\n  {source: \"Human_Assistant\", target: \"Stanza-1\", type: \"suit\"},\n  {source: \"Human_Assistant\", target: \"Cinchcast\", type: \"suit\"},\n  {source: \"AI\", target: \"Transport\", type: \"licensing\"},\n\n   {source: \"Transport\", target: \"Googles self driving cars\", type: \"suit\"},\n   {source: \"Transport\", target: \"Trains\", type: \"suit\"},\n   {source: \"Transport\", target: \"Traffic lights\", type: \"suit\"},\n\n  {source: \"AI\", target: \"Data Security\", type: \"licensing\"},\n   {source: \"Data Security\", target: \"Harvest-ai\", type: \"suit\"},\n   {source: \"Data Security\", target: \"Sift-science\", type: \"suit\"},\n   {source: \"Data Security\", target: \"Rescue-forensics\", type: \"suit\"},\n\n     {source: \"AI\", target: \"Voice Recognition\", type: \"licensing\"},\n        {source: \"Voice Recognition\", target: \"Rexpect-labs\", type: \"suit\"},\n         {source: \"Voice Recognition\", target: \"Cleverbot\", type: \"suit\"},\n              {source: \"Voice Recognition\", target: \"Siri\", type: \"suit\"},\n         {source: \"Voice Recognition\", target: \"Wit-ai\", type: \"suit\"},\n                  {source: \"Voice Recognition\", target: \"Desti for planning travels \", type: \"suit\"},\n\n\n\n\n\n];\n\n\n// Transport\n// Googles self driving cars\n// trains \n// traffic lights\n// Data Security \n// https://angel.co/harvest-ai safe login \n// https://angel.co/sift-science prevent online fraud\n// https://angel.co/rescue-forensics digital law enforcement\n// Voice Recognition \n// https://angel.co/expect-labs  \n// http://www.cleverbot.com/ \n// Siri  \n// https://angel.co/wit-ai turns speech into the IoT\n// https://angel.co/desti planning travels \n\n\nvar nodes = {};\n\nlinks.forEach(function(link) {\n  link.source = nodes[link.source] || (nodes[link.source] = {name: link.source});\n  link.target = nodes[link.target] || (nodes[link.target] = {name: link.target});\n});\n\nvar width = 600,\n    height = 600;\n\nvar force = d3.layout.force()\n    .nodes(d3.values(nodes))\n    .links(links)\n    .size([width, height])\n    .linkDistance(10)\n    .charge(-500)\n    .on(\"tick\", tick)\n    .start();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"defs\").selectAll(\"marker\")\n    .data([\"suit\", \"licensing\", \"resolved\"])\n  .enter().append(\"marker\")\n    .attr(\"id\", function(d) { return d; })\n    .attr(\"viewBox\", \"0 -5 10 10\")\n    .attr(\"refX\", 5)\n    .attr(\"refY\", -1.5)\n    .attr(\"markerWidth\", 2)\n    .attr(\"markerHeight\", 1)\n    .attr(\"orient\", \"left\")\n  .append(\"path\")\n    .attr(\"d\", \"M0,-5L10,0L0,5\");\n\nvar path = svg.append(\"g\").selectAll(\"path\")\n    .data(force.links())\n  .enter().append(\"path\")\n    .attr(\"class\", function(d) { return \"link \" + d.type; })\n    .attr(\"marker-end\", function(d) { return \"url(#\" + d.type + \")\"; });\n\nvar rect = svg.append(\"g\").selectAll(\"rect\")\n    .data(force.nodes())\n  .enter().append(\"rect\")\n    .attr(\"height\", 10)\n    .attr(\"width\", 10)\n    .call(force.drag);\n\nvar text = svg.append(\"g\").selectAll(\"text\")\n    .data(force.nodes())\n  .enter().append(\"text\")\n    .attr(\"x\", 10)\n    .attr(\"y\", \".90em\")\n    .style(\"font-family\", \"futura\")\n    .text(function(d) { return d.name; });\n\nfunction tick() {\n  path.attr(\"d\", linkArc);\n  rect.attr(\"transform\", transform);\n  text.attr(\"transform\", transform);\n}\n\nfunction linkArc(d) {\n  var dx = d.target.x - d.source.x,\n      dy = d.target.y - d.source.y,\n      dr = Math.sqrt(dx * dx + dy * dy);\n  return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\n}\n\nfunction transform(d) {\n  return \"translate(\" + d.x + \",\" + d.y + \")\";\n}\n\n</script>", "description": "", "created_at": "2015-05-12T11:31:13Z", "updated_at": "2015-08-29T14:21:00Z", "api": ["d3.layout.force", "d3.values", "d3.select"], "readme": "", "uid": "BenHeubl_7faa7393b88bcdb19822"}, {"code": "<script>\n\nvar links = [\n\n\n\n {source: \"AI\", target: \"Healthcare\", type: \"licensing\"},\n  {source: \"AI\", target: \"Financial\", type: \"licensing\"},\n  {source: \"AI\", target: \"Marketing\", type: \"licensing\"},\n  {source: \"AI\", target: \"Recruitment\", type: \"licensing\"},\n  {source: \"AI\", target: \"Dating\", type: \"licensing\"},\n  {source: \"AI\", target: \"Human_assistant\", type: \"licensing\"},\n\n  {source: \"Healthcare\", target: \"IBM Watson\", type: \"suit\"},\n  {source: \"Healthcare\", target: \"Barnes & Noble\", type: \"suit\"},\n  {source: \"Healthcare\", target: \"Foxconn\", type: \"suit\"},\n  {source: \"Healthcare\", target: \"Google\", type: \"suit\"},\n  {source: \"Healthcare\", target: \"HTC\", type: \"suit\"},\n  {source: \"Financial\", target: \"Cortex \", type: \"suit\"},\n  {source: \"Financial\", target: \"Kodak\", type: \"resolved\"},\n  {source: \"Financial\", target: \"Kodak\", type: \"resolved\"},\n  {source: \"Marketing\", target: \"Flights\", type: \"suit\"},\n    {source: \"Flights\", target: \"Skyscanner\", type: \"suit\"},\n    {source: \"Flights\", target: \"Rumbo\", type: \"suit\"},\n    {source: \"Flights\", target: \"Opodo\", type: \"suit\"},\n  {source: \"Marketing\", target: \"Shopping\", type: \"licensing\"},\n    {source: \"Shopping\", target: \"Amazon\", type: \"suit\"},\n    {source: \"Shopping\", target: \"Alibaba\", type: \"suit\"},\n {source: \"Marketing\", target: \"Music\", type: \"suit\"},\n  {source: \"Music\", target: \"Spotify\", type: \"suit\"},\n   {source: \"Music\", target: \"iTunes\", type: \"suit\"},\n {source: \"Marketing\", target: \"FlipChart\", type: \"suit\"},\n {source: \"Marketing\", target: \"Versus\", type: \"suit\"},\n {source: \"Marketing\", target: \"RadiumOne\", type: \"suit\"},\n {source: \"Marketing\", target: \"Quid\", type: \"suit\"},\n  {source: \"Recruitment\", target: \"Humanoid\", type: \"suit\"},\n  {source: \"Dating\", target: \"OkCupid\", type: \"suit\"},\n\n    {source: \"Marketing\", target: \"Every-labs: Food delivery\", type: \"suit\"},\n    {source: \"Marketing\", target: \"Yummly: Take aways \", type: \"suit\"},\n    {source: \"Marketing\", target: \"Heyzap mobile advertising \", type: \"suit\"},\n    {source: \"Marketing\", target: \"Livestar\", type: \"suit\"},\n    {source: \"Marketing\", target: \"Retargeter\", type: \"suit\"},\n      {source: \"Marketing\", target: \"Zemanta for bloggers\", type: \"suit\"},\n        {source: \"Marketing\", target: \"Campanja adverts \", type: \"suit\"},\n          {source: \"Marketing\", target: \"Preact\", type: \"suit\"},\n            {source: \"Marketing\", target: \"Mattermark \", type: \"suit\"},\n              {source: \"Marketing\", target: \"Moz marketing \", type: \"suit\"},\n                {source: \"Marketing\", target: \"Wise-io-2 \", type: \"suit\"},\n                  {source: \"Marketing\", target: \"Launchhub \", type: \"suit\"},\n                  {source: \"Marketing\", target: \"Targetingmantra  \", type: \"suit\"},\n                  {source: \"Marketing\", target: \"Catnip\", type: \"suit\"},\n                  {source: \"Marketing\", target: \"Mavin\", type: \"suit\"},\n                  {source: \"Marketing\", target: \"Permutive  \", type: \"suit\"},\n                  {source: \"Marketing\", target: \"Fashion-metric  \", type: \"suit\"},\n                  {source: \"Marketing\", target: \"Wordwatch  \", type: \"suit\"},\n        {source: \"Recruitment\", target: \"Gradberry\", type: \"suit\"},\n        {source: \"Recruitment\", target: \"Springrole\", type: \"suit\"},\n\n {source: \"AI\", target: \"Teaching\", type: \"licensing\"},\n  {source: \"Teaching\", target: \"Knewton.com\", type: \"suit\"},\n\n   {source: \"AI\", target: \"Human assistant\", type: \"licensing\"},\n\n {source: \"Human assistant\", target: \"Incredible-labs\", type: \"suit\"},\n  {source: \"Human assistant\", target: \"Kwikdesk\", type: \"suit\"},\n\n  {source: \"Human assistant\", target: \"Gridspace\", type: \"suit\"},\n  {source: \"Human assistant\", target: \"Petnet\", type: \"suit\"},\n  {source: \"Human assistant\", target: \"Topicmarks\", type: \"suit\"},\n  {source: \"Human assistant\", target: \"Neura\", type: \"suit\"},\n  {source: \"Human assistant\", target: \"Vurb\", type: \"suit\"},\n  {source: \"Human assistant\", target: \"Rockmelt\", type: \"suit\"},\n  {source: \"Human assistant\", target: \"Rainforest\", type: \"suit\"},\n  {source: \"Human assistant\", target: \"Stanza-1\", type: \"suit\"},\n  {source: \"Human assistant\", target: \"Cinchcast\", type: \"suit\"},\n  {source: \"AI\", target: \"Transport\", type: \"licensing\"},\n\n   {source: \"Transport\", target: \"Googles self driving cars\", type: \"suit\"},\n   {source: \"Transport\", target: \"Trains\", type: \"suit\"},\n   {source: \"Transport\", target: \"Traffic lights\", type: \"suit\"},\n\n  {source: \"AI\", target: \"Data Security\", type: \"licensing\"},\n   {source: \"Data Security\", target: \"Harvest-ai\", type: \"suit\"},\n   {source: \"Data Security\", target: \"Sift-science\", type: \"suit\"},\n   {source: \"Data Security\", target: \"Rescue-forensics\", type: \"suit\"},\n\n     {source: \"AI\", target: \"Voice Recognition\", type: \"licensing\"},\n        {source: \"Voice Recognition\", target: \"Rexpect-labs\", type: \"suit\"},\n         {source: \"Voice Recognition\", target: \"Cleverbot\", type: \"suit\"},\n              {source: \"Voice Recognition\", target: \"Siri\", type: \"suit\"},\n         {source: \"Voice Recognition\", target: \"Wit-ai\", type: \"suit\"},\n                  {source: \"Voice Recognition\", target: \"Desti for planning travels \", type: \"suit\"},\n\n\n\n\n\n];\n\n\n// Transport\n// Googles self driving cars\n// trains \n// traffic lights\n// Data Security \n// https://angel.co/harvest-ai safe login \n// https://angel.co/sift-science prevent online fraud\n// https://angel.co/rescue-forensics digital law enforcement\n// Voice Recognition \n// https://angel.co/expect-labs  \n// http://www.cleverbot.com/ \n// Siri  \n// https://angel.co/wit-ai turns speech into the IoT\n// https://angel.co/desti planning travels \n\n\nvar nodes = {};\n\nlinks.forEach(function(link) {\n  link.source = nodes[link.source] || (nodes[link.source] = {name: link.source});\n  link.target = nodes[link.target] || (nodes[link.target] = {name: link.target});\n});\n\nvar width = 760,\n    height = 800;\n\nvar force = d3.layout.force()\n    .nodes(d3.values(nodes))\n    .links(links)\n    .size([width, height])\n    .linkDistance(80)\n    .charge(-500)\n    .on(\"tick\", tick)\n    .start();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"defs\").selectAll(\"marker\")\n    .data([\"suit\", \"licensing\", \"resolved\"])\n  .enter().append(\"marker\")\n    .attr(\"id\", function(d) { return d; })\n    .attr(\"viewBox\", \"0 -5 10 10\")\n    .attr(\"refX\", 15)\n    .attr(\"refY\", -1.5)\n    .attr(\"markerWidth\", 2)\n    .attr(\"markerHeight\", 1)\n    .attr(\"orient\", \"auto\")\n  .append(\"path\")\n    .attr(\"d\", \"M0,-5L10,0L0,5\");\n\nvar path = svg.append(\"g\").selectAll(\"path\")\n    .data(force.links())\n  .enter().append(\"path\")\n    .attr(\"class\", function(d) { return \"link \" + d.type; })\n    .attr(\"marker-end\", function(d) { return \"url(#\" + d.type + \")\"; });\n\nvar rect = svg.append(\"g\").selectAll(\"rect\")\n    .data(force.nodes())\n  .enter().append(\"rect\")\n    .attr(\"height\", 10)\n    .attr(\"width\", 10)\n    .call(force.drag);\n\nvar text = svg.append(\"g\").selectAll(\"text\")\n    .data(force.nodes())\n  .enter().append(\"text\")\n    .attr(\"x\", 10)\n    .attr(\"y\", \".90em\")\n    .style(\"font-family\", \"futura\")\n    .text(function(d) { return d.name; });\n\nfunction tick() {\n  path.attr(\"d\", linkArc);\n  rect.attr(\"transform\", transform);\n  text.attr(\"transform\", transform);\n}\n\nfunction linkArc(d) {\n  var dx = d.target.x - d.source.x,\n      dy = d.target.y - d.source.y,\n      dr = Math.sqrt(dx * dx + dy * dy);\n  return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\n}\n\nfunction transform(d) {\n  return \"translate(\" + d.x + \",\" + d.y + \")\";\n}\n\n</script>", "description": "AI - Infographic", "created_at": "2015-05-11T15:08:27Z", "updated_at": "2015-08-29T14:20:58Z", "api": ["d3.layout.force", "d3.values", "d3.select"], "readme": "", "uid": "BenHeubl_5bb9a8661b5c8eae1c11"}, {"code": "<script>\n\n      // Set up the Font by appending a link tag.\n      d3.select(\"head\").append(\"link\")\n        .attr(\"href\", \"http://fonts.googleapis.com/css?family=Poiret+One\")\n        .attr(\"rel\", \"stylesheet\")\n        .attr(\"type\", \"text/css\");\n\n      // Here's how to apply dynamic CSS to axes through JavaScript.\n      function applyAxisStyles(){\n\n        // Style tick mark labels.\n        d3.selectAll(\".axis text\")\n          .style(\"font-family\", \"'Poiret One', cursive\")\n          .style(\"font-size\", \"16pt\");\n\n        // Style the axis labels.\n        d3.selectAll(\".axis .label\")\n          .style(\"font-size\", \"32pt\");\n\n        // Style the lines of the axis.\n        d3.selectAll(\".axis path, .axis line\")\n          .style(\"fill\", \"none\")\n          .style(\"stroke\", \"black\")\n          .style(\"shape-rendering\", \"crispEdges\");\n      }\n\n      var outerWidth = 960;\n      var outerHeight = 500;\n      var margin = { left: 80, top: 10, right: 15, bottom: 80 };\n      var rMin = 2; // \"r\" stands for radius\n      var rMax = 15;\n      var xColumn = \"sepal_length\";\n      var yColumn = \"petal_length\";\n      var rColumn = \"sepal_width\";\n      var colorColumn = \"species\";\n\n      var xAxisLabelText = \"Sepal Length (cm)\";\n      var xAxisLabelOffset = 65;\n\n      var yAxisLabelText = \"Petal Length (cm)\";\n      var yAxisLabelOffset = 35;\n\n      var innerWidth  = outerWidth  - margin.left - margin.right;\n      var innerHeight = outerHeight - margin.top  - margin.bottom;\n\n      var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", outerWidth)\n        .attr(\"height\", outerHeight);\n      var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      var xAxisG = g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + innerHeight + \")\")\n      var xAxisLabel = xAxisG.append(\"text\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"x\", innerWidth / 2)\n        .attr(\"y\", xAxisLabelOffset)\n        .attr(\"class\", \"label\")\n        .text(xAxisLabelText);\n      var yAxisG = g.append(\"g\")\n        .attr(\"class\", \"y axis\");\n      var yAxisLabel = yAxisG.append(\"text\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"transform\", \"translate(-\" + yAxisLabelOffset + \",\" + (innerHeight / 2) + \") rotate(-90)\")\n        .attr(\"class\", \"label\")\n        .text(yAxisLabelText);\n\n      var xScale = d3.scale.linear().range([0, innerWidth]);\n      var yScale = d3.scale.linear().range([innerHeight, 0]);\n      var rScale = d3.scale.linear().range([rMin, rMax]);\n      var colorScale = d3.scale.category10();\n\n      var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\")\n        .ticks(10)\n        .tickFormat(d3.format(\"s\"))\n        .outerTickSize(0);\n      var yAxis = d3.svg.axis().scale(yScale).orient(\"left\")\n        .ticks(5)\n        .tickFormat(d3.format(\"s\"))\n        .outerTickSize(0);\n\n      function render(data){\n        xScale.domain(d3.extent(data, function (d){ return d[xColumn]; }));\n        yScale.domain(d3.extent(data, function (d){ return d[yColumn]; }));\n        rScale.domain(d3.extent(data, function (d){ return d[rColumn]; }));\n\n        xAxisG.call(xAxis);\n        yAxisG.call(yAxis);\n        applyAxisStyles();\n\n        var circles = g.selectAll(\"circle\").data(data);\n        circles.enter().append(\"circle\");\n        circles\n          .attr(\"cx\",   function (d){ return     xScale(d[xColumn]);     })\n          .attr(\"cy\",   function (d){ return     yScale(d[yColumn]);     })\n          .attr(\"r\",    function (d){ return     rScale(d[rColumn]);     })\n          .attr(\"fill\", function (d){ return colorScale(d[colorColumn]); });\n\n        circles.exit().remove();\n      }\n\n      function type(d){\n        d.sepal_length = +d.sepal_length;\n        d.sepal_width  = +d.sepal_width;\n        d.petal_length = +d.petal_length;\n        d.petal_width  = +d.petal_width;\n        return d;\n      }\n\n      d3.csv(\"iris.csv\", type, render);\n\n    </script>", "description": "Axis Styles via JavaScript", "created_at": "2015-05-07T19:13:14Z", "updated_at": "2015-08-29T14:20:46Z", "api": ["d3.select", "d3.selectAll", "d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.format", "d3.extent", "d3.csv"], "readme": "This is a scatter plot of the [Iris data set](https://archive.ics.uci.edu/ml/datasets/Iris).\n\nThe purpose of this example is to show how to dynamically style D3 axes through JavaScript. This is a first step toward interactively configurable axis styles, and paves the way for creating fully stylized visualization modules that are purely JavaScript and require no addition of CSS tags on the page that will contain the visualization.\n\nThe code for this is derived from [example 106](http://curran.github.io/screencasts/introToD3/examples/viewer/#/106) of the screencast [Introduction to D3.js](https://www.youtube.com/watch?v=8jvoTV54nXw).\n", "uid": "curran_b23acf239cc4e4db7f36"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x0 = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar x1 = d3.scale.ordinal();\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x0)\n    .tickSize(0)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar color = d3.scale.ordinal()\n    .range([\"#ca0020\",\"#f4a582\",\"#d5d5d5\",\"#92c5de\",\"#0571b0\"]);\n\nvar svg = d3.select('body').append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"data.json\", function(error, data) {\n\n  var categoriesNames = data.map(function(d) { return d.categorie; });\n  var rateNames = data[0].values.map(function(d) { return d.rate; });\n\n  x0.domain(categoriesNames);\n  x1.domain(rateNames).rangeRoundBands([0, x0.rangeBand()]);\n  y.domain([0, d3.max(data, function(categorie) { return d3.max(categorie.values, function(d) { return d.value; }); })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .style('opacity','0')\n      .call(yAxis)\n  .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .style('font-weight','bold')\n      .text(\"Value\");\n\n  svg.select('.y').transition().duration(500).delay(1300).style('opacity','1');\n\n  var slice = svg.selectAll(\".slice\")\n      .data(data)\n      .enter().append(\"g\")\n      .attr(\"class\", \"g\")\n      .attr(\"transform\",function(d) { return \"translate(\" + x0(d.categorie) + \",0)\"; });\n\n  slice.selectAll(\"rect\")\n      .data(function(d) { return d.values; })\n  .enter().append(\"rect\")\n      .attr(\"width\", x1.rangeBand())\n      .attr(\"x\", function(d) { return x1(d.rate); })\n      .style(\"fill\", function(d) { return color(d.rate) })\n      .attr(\"y\", function(d) { return y(0); })\n      .attr(\"height\", function(d) { return height - y(0); })\n      .on(\"mouseover\", function(d) {\n          d3.select(this).style(\"fill\", d3.rgb(color(d.rate)).darker(2));\n      })\n      .on(\"mouseout\", function(d) {\n          d3.select(this).style(\"fill\", color(d.rate));\n      });\n\n  slice.selectAll(\"rect\")\n      .transition()\n      .delay(function (d) {return Math.random()*1000;})\n      .duration(1000)\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); });\n\n  //Legend\n  var legend = svg.selectAll(\".legend\")\n      .data(data[0].values.map(function(d) { return d.rate; }).reverse())\n  .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d,i) { return \"translate(0,\" + i * 20 + \")\"; })\n      .style(\"opacity\",\"0\");\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", function(d) { return color(d); });\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) {return d; });\n\n  legend.transition().duration(500).delay(function(d,i){ return 1300 + 100 * i; }).style(\"opacity\",\"1\");\n\n});\n\n</script>", "description": "Grouped bar chart", "created_at": "2015-05-07T13:07:39Z", "updated_at": "2016-03-24T15:48:25Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.json", "d3.max", "d3.rgb"], "readme": "Inspired by an [example](http://bl.ocks.org/mbostock/3887051) from [Mike Bostock](http://bost.ocks.org). Colors from [Every ColorBrewer Scale](http://bl.ocks.org/mbostock/5577023).", "uid": "bricedev_0d95074b6d83a77dc3ad"}, {"code": "<script>\n\nvar width = 960,\n    height = 136,\n    cellSize = 17; // cell size\n\nvar day = d3.time.format(\"%w\"),\n    week = d3.time.format(\"%U\"),\n    percent = d3.format(\".1%\"),\n    format = d3.time.format(\"%Y-%m-%d\");\n\n/*\n   var color = d3.scale.quantize()\n    .domain([-.05, .05])\n    .range(d3.range(11).map(function(d) { return \"q\" + d + \"-11\"; }));\n    */\n\nvar color = d3.scale.category10();\nvar dateParse = d3.time.format(\"%m/%d/%Y\");\n\nvar svg = d3.select(\"body\").selectAll(\"svg\")\n    .data(d3.range(2010, 2013))\n  .enter().append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .attr(\"class\", \"RdYlGn\")\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + ((width - cellSize * 53) / 2) + \",\" + (height - cellSize * 7 - 1) + \")\");\n\nsvg.append(\"text\")\n    .attr(\"transform\", \"translate(-6,\" + cellSize * 3.5 + \")rotate(-90)\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) { return d; });\n\nvar rect = svg.selectAll(\".day\")\n    .data(function(d) { return d3.time.days(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"rect\")\n    .attr(\"class\", \"day\")\n    .attr(\"width\", cellSize)\n    .attr(\"height\", cellSize)\n    .attr(\"x\", function(d) { return week(d) * cellSize; })\n    .attr(\"y\", function(d) { return day(d) * cellSize; })\n    .datum(format);\n\nrect.append(\"title\")\n    .text(function(d) { return d; });\n\nsvg.selectAll(\".month\")\n    .data(function(d) { return d3.time.months(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"path\")\n    .attr(\"class\", \"month\")\n    .attr(\"d\", monthPath);\n\n//d3.csv(\"dji.csv\", function(error, csv) {\nd3.json(\"data3.json\", function(error, data) {\n  /*var data = d3.nest()\n    .key(function(d) { return d.Date; })\n    .rollup(function(d) { return (d[0].Close - d[0].Open) / d[0].Open; })\n    .map(csv);\n    */\n\n  data.forEach(function(d) {\n    d.dd = format(dateParse.parse(d.date));\n  });\n\n  var nest = d3.nest()\n    .key(function(d) { return d.dd; })\n    .map(data);\n\n  color.domain(d3.set(data.map(function(d) { return d.category; })).values());\n\n  rect.filter(function(d) { return d in nest; })\n      //.attr(\"class\", function(d) { return \"day \" + color(data[d]); })\n      .attr(\"class\", function(d) { return \"day\"; })\n      .style(\"fill\", function(d) { return color(nest[d][0].category); })\n    .select(\"title\")\n      //.text(function(d) { return d + \": \" + percent(data[d]); });\n      .text(function(d) { return d + \": \" + nest[d][0].city; });\n});\n\nfunction monthPath(t0) {\n  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),\n      d0 = +day(t0), w0 = +week(t0),\n      d1 = +day(t1), w1 = +week(t1);\n  return \"M\" + (w0 + 1) * cellSize + \",\" + d0 * cellSize\n      + \"H\" + w0 * cellSize + \"V\" + 7 * cellSize\n      + \"H\" + w1 * cellSize + \"V\" + (d1 + 1) * cellSize\n      + \"H\" + (w1 + 1) * cellSize + \"V\" + 0\n      + \"H\" + (w0 + 1) * cellSize + \"Z\";\n}\n\n//d3.select(self.frameElement).style(\"height\", \"2910px\");\n\n</script>", "description": null, "created_at": "2015-04-27T05:47:12Z", "updated_at": "2015-08-29T14:20:00Z", "api": ["d3.time.format", "d3.format", "d3.scale.quantize", "d3.range", "d3.scale.category10", "d3.select", "d3.time.days", "d3.time.months", "d3.csv", "d3.json", "d3.nest", "d3.set"], "readme": "Example for\nhttp://stackoverflow.com/questions/29880870/d3-calendar-view-using-json/29888069#29888069\n", "uid": "benlyall_b237f16dda3125423130"}, {"code": "<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 70, left: 50},\n    width = 920 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%m/%d/%Y\").parse;\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.log().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\").ticks(7);\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\")\n    .ticks(5, \",.1s\")\n    .tickSize(6, 0);\n\n\n// Define the line\nvar valueline = d3.svg.line()   \n    .x(function(d) { return x(d.date); })\n    // adding one to values to fit use with the log scale\n    .y(function(d) { return y(d.value + 1); }); \n    \n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"single-well.csv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.value = +d.value;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y.domain([1, d3.max(data, function(d) { return d.value; })]);\n\n    // Nest the entries by key\n    var dataNest = d3.nest()\n        .key(function(d) {return d.key;})\n        .entries(data);\n\n    // var color = d3.scale.category10();   // set the color scale\n\n    var blueBlueGreen = [\"#b2df8a\", \"#1f78b4\", \"#a6cee3\"];\n    var greenOrangeViolet = [\"#1b9e77\", \"#d95f02\", \"#7570b3\"]\n\n    var color = d3.scale.ordinal()\n        .range(greenOrangeViolet) \n\n    legendSpace = width/dataNest.length; // spacing for the legend\n\n    // Loop through each key\n    dataNest.forEach(function(d,i) { \n\n        svg.append(\"path\")\n            .attr(\"class\", \"line\")\n            .style(\"stroke\", function() { // Add the colors dynamically\n                return d.color = color(d.key); })\n            .attr(\"id\", 'tag'+d.key.replace(/\\s+/g, '')) // assign ID\n            .attr(\"d\", valueline(d.values))\n            .on(\"mousemove\", mMove)\n            .append(\"title\");\n\n        // Add the Legend\n        svg.append(\"text\")\n            .attr(\"x\", (legendSpace/2)+i*legendSpace)  // space legend\n            .attr(\"y\", height + (margin.bottom/2)+ 5)\n            .attr(\"class\", \"legend\")    // style the legend\n            .style(\"fill\", function() { // Add the colors dynamically\n                return d.color = color(d.key); })\n            .on(\"click\", function(){\n                // Determine if current line is visible \n                var active   = d.active ? false : true,\n                newOpacity = active ? 0 : 1; \n                // Hide or show the elements based on the ID\n                d3.select(\"#tag\"+d.key.replace(/\\s+/g, ''))\n                    .transition().duration(1000) \n                    .style(\"opacity\", newOpacity); \n                // Update whether or not the elements are active\n                d.active = active;\n                })  \n            .text(d.key); \n\n    });\n\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n    // Add the text label for the Y axis\n    svg.append(\"text\")\n        .attr(\"transform\", \"rotate(0)\")\n        //.attr(\"y\", 0 - margin.left)\n        .attr(\"y\", 0)\n        //.attr(\"x\",0 - (height / 2))\n        .attr(\"x\", 15)\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"bbls\");\n\n    function mMove(){\n            var m = d3.mouse(this);\n            var mouseoverValue = Math.round(y.invert(m[1]));\n            var dateFormat = d3.time.format(\"%A, %B %e %Y\")\n            var mouseoverDate = dateFormat(x.invert(m[0]));\n            d3.selectAll(\".line\").select(\"title\").html(mouseoverValue + \" bbls\" + \"\\n\" + mouseoverDate);\n        }\n\n});\n\n</script>", "description": "Oil & Gas Production Interactive Linegraph - Log Scale", "created_at": "2015-04-25T21:15:11Z", "updated_at": "2016-06-14T23:12:59Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.log", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max", "d3.nest", "d3.scale.category10", "d3.scale.ordinal", "d3.mouse", "d3.selectAll"], "readme": "##Oil & Gas Production Interactive Linegraph in d3js\n\nfind the R script and the source data for this chart at the [project repository](https://github.com/micahstubbs/production-line)", "uid": "micahstubbs_aa933f60bd432f7f3eed"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n     = 2 * Math.PI,\n    gravity = .05;\n\nvar sample = poissonDiscSampler(width, height, 30),\n    nodes = [{x: 0, y: 0}],\n    s;\n\nwhile (s = sample()) nodes.push(s);\n\nvar force = d3.layout.force()\n    .size([width, height])\n    .nodes(nodes.slice())\n    .gravity(0)\n    .charge(function(d, i) { return i ? -30 : -3000; })\n    .on(\"tick\", ticked)\n    .start();\n\nvar voronoi = d3.geom.voronoi()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\nvar root = nodes.shift();\n\nroot.fixed = true;\n\nvar links = voronoi.links(nodes);\n\nvar canvas = d3.select(\"body\").append(\"canvas\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .on(\"ontouchstart\" in document ? \"touchmove\" : \"mousemove\", moved);\n\nvar context = canvas.node().getContext(\"2d\");\n\nfunction moved() {\n  var p1 = d3.mouse(this);\n  root.px = p1[0];\n  root.py = p1[1];\n  force.resume();\n}\n\nfunction ticked() {\n  force.resume();\n\n  for (var i = 0, n = nodes.length; i < n; ++i) {\n    var node = nodes[i];\n    node.y += (node.cy - node.y) * gravity;\n    node.x += (node.cx - node.x) * gravity;\n  }\n\n  context.clearRect(0, 0, width, height);\n\n  context.beginPath();\n  for (var i = 0, n = links.length; i < n; ++i) {\n    var link = links[i];\n    context.moveTo(link.source.x, link.source.y);\n    context.lineTo(link.target.x, link.target.y);\n  }\n  context.lineWidth = 1;\n  context.strokeStyle = \"#bbb\";\n  context.stroke();\n\n  context.beginPath();\n  for (var i = 0, n = nodes.length; i < n; ++i) {\n    var node = nodes[i];\n    context.moveTo(node.x, node.y);\n    context.arc(node.x, node.y, 2, 0, );\n  }\n  context.lineWidth = 3;\n  context.strokeStyle = \"#fff\";\n  context.stroke();\n  context.fillStyle = \"#000\";\n  context.fill();\n}\n\n// Based on https://www.jasondavies.com/poisson-disc/\nfunction poissonDiscSampler(width, height, radius) {\n  var k = 30, // maximum number of samples before rejection\n      radius2 = radius * radius,\n      R = 3 * radius2,\n      cellSize = radius * Math.SQRT1_2,\n      gridWidth = Math.ceil(width / cellSize),\n      gridHeight = Math.ceil(height / cellSize),\n      grid = new Array(gridWidth * gridHeight),\n      queue = [],\n      queueSize = 0,\n      sampleSize = 0;\n\n  return function() {\n    if (!sampleSize) return sample(Math.random() * width, Math.random() * height);\n\n    // Pick a random existing sample and remove it from the queue.\n    while (queueSize) {\n      var i = Math.random() * queueSize | 0,\n          s = queue[i];\n\n      // Make a new candidate between [radius, 2 * radius] from the existing sample.\n      for (var j = 0; j < k; ++j) {\n        var a = 2 * Math.PI * Math.random(),\n            r = Math.sqrt(Math.random() * R + radius2),\n            x = s.x + r * Math.cos(a),\n            y = s.y + r * Math.sin(a);\n\n        // Reject candidates that are outside the allowed extent,\n        // or closer than 2 * radius to any existing sample.\n        if (0 <= x && x < width && 0 <= y && y < height && far(x, y)) return sample(x, y);\n      }\n\n      queue[i] = queue[--queueSize];\n      queue.length = queueSize;\n    }\n  };\n\n  function far(x, y) {\n    var i = x / cellSize | 0,\n        j = y / cellSize | 0,\n        i0 = Math.max(i - 2, 0),\n        j0 = Math.max(j - 2, 0),\n        i1 = Math.min(i + 3, gridWidth),\n        j1 = Math.min(j + 3, gridHeight);\n\n    for (j = j0; j < j1; ++j) {\n      var o = j * gridWidth;\n      for (i = i0; i < i1; ++i) {\n        if (s = grid[o + i]) {\n          var s,\n              dx = s.x - x,\n              dy = s.y - y;\n          if (dx * dx + dy * dy < radius2) return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function sample(x, y) {\n    var s = {x: x, y: y, cx: x, cy: y};\n    queue.push(s);\n    grid[gridWidth * (y / cellSize | 0) + (x / cellSize | 0)] = s;\n    ++sampleSize;\n    ++queueSize;\n    return s;\n  }\n}\n\n</script>", "description": "Delaunay Force Mesh III", "created_at": "2015-04-24T21:51:29Z", "updated_at": "2016-02-09T01:51:21Z", "api": ["d3.layout.force", "d3.geom.voronoi", "d3.select", "d3.mouse"], "readme": "Some force-directed points that gravitate towards a [Poisson-disc distribution](/mbostock/19168c663618b7f07158), with a Delaunay mesh overlaid.\n", "uid": "mbostock_517fdb49f959cb1461e2"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n     = 2 * Math.PI,\n    maxLength = 100,\n    maxLength2 = maxLength * maxLength;\n\nvar nodes = d3.range(200).map(function() {\n  return {\n    x: Math.random() * width,\n    y: Math.random() * height\n  };\n});\n\nvar force = d3.layout.force()\n    .size([width, height])\n    .nodes(nodes.slice())\n    .charge(function(d, i) { return i ? -30 : -1500; })\n    .on(\"tick\", ticked)\n    .start();\n\nvar voronoi = d3.geom.voronoi()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\nvar root = nodes.shift();\n\nroot.fixed = true;\n\nvar canvas = d3.select(\"body\").append(\"canvas\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .on(\"ontouchstart\" in document ? \"touchmove\" : \"mousemove\", moved);\n\nvar context = canvas.node().getContext(\"2d\");\n\nfunction moved() {\n  var p1 = d3.mouse(this);\n  root.px = p1[0];\n  root.py = p1[1];\n  force.resume();\n}\n\nfunction ticked() {\n  var links = voronoi.links(nodes);\n\n  context.clearRect(0, 0, width, height);\n\n  context.beginPath();\n  for (var i = 0, n = links.length; i < n; ++i) {\n    var link = links[i],\n        dx = link.source.x - link.target.x,\n        dy = link.source.y - link.target.y;\n    if (dx * dx + dy * dy < maxLength2) {\n      context.moveTo(link.source.x, link.source.y);\n      context.lineTo(link.target.x, link.target.y);\n    }\n  }\n  context.lineWidth = 1;\n  context.strokeStyle = \"#bbb\";\n  context.stroke();\n\n  context.beginPath();\n  for (var i = 0, n = nodes.length; i < n; ++i) {\n    var node = nodes[i];\n    context.moveTo(node.x, node.y);\n    context.arc(node.x, node.y, 2, 0, );\n  }\n  context.lineWidth = 3;\n  context.strokeStyle = \"#fff\";\n  context.stroke();\n  context.fillStyle = \"#000\";\n  context.fill();\n}\n\n</script>", "description": "Delaunay Force Mesh II", "created_at": "2015-04-22T19:17:39Z", "updated_at": "2016-10-17T23:10:51Z", "api": ["d3.range", "d3.layout.force", "d3.geom.voronoi", "d3.select", "d3.mouse"], "readme": "Some force-directed points, with a Delaunay mesh overlaid, filtered so that only links less than 100px long are drawn.\n", "uid": "mbostock_c6966db1fcb0ed2988da"}], "links": [{"source": "ohdebby_082cd95ccdce412091f60405f3842e0c", "value": 20, "target": "oliviac12_6f632412e58731ad3764fa95e3214c8f", "links": [{"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 27, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 49, "source_start_line": 76, "source_end_line": 78, "source_confidence": 27, "target_start_line": 47, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 67, "source_end_line": 71, "source_confidence": 27, "target_start_line": 20, "target_confidence": 33}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 27, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 49, "source_start_line": 76, "source_end_line": 78, "source_confidence": 27, "target_start_line": 47, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 67, "source_end_line": 71, "source_confidence": 27, "target_start_line": 20, "target_confidence": 33}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 27, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 49, "source_start_line": 76, "source_end_line": 78, "source_confidence": 27, "target_start_line": 47, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 67, "source_end_line": 71, "source_confidence": 27, "target_start_line": 20, "target_confidence": 33}]}, {"source": "aldrejota_aced8f7034616f7c4800a62e1db14cd4", "value": 143, "target": "Adlopez2016_3c01e7c656d3231cf59266714852cadc", "links": [{"target_end_line": 143, "source_start_line": 1, "source_end_line": 143, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "aldrejota_aced8f7034616f7c4800a62e1db14cd4", "value": 143, "target": "Adlopez2016_d7e46ecf8505a81ee776c1c8d63c734e", "links": [{"target_end_line": 143, "source_start_line": 1, "source_end_line": 143, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "oliviac12_b6008dfc1b10a85bc7bfacd6b4522208", "value": 20, "target": "ohdebby_082cd95ccdce412091f60405f3842e0c", "links": [{"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 36, "target_start_line": 1, "target_confidence": 26}, {"target_end_line": 78, "source_start_line": 48, "source_end_line": 50, "source_confidence": 36, "target_start_line": 76, "target_confidence": 26}, {"target_end_line": 71, "source_start_line": 20, "source_end_line": 25, "source_confidence": 36, "target_start_line": 67, "target_confidence": 26}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 36, "target_start_line": 1, "target_confidence": 26}, {"target_end_line": 78, "source_start_line": 48, "source_end_line": 50, "source_confidence": 36, "target_start_line": 76, "target_confidence": 26}, {"target_end_line": 71, "source_start_line": 20, "source_end_line": 25, "source_confidence": 36, "target_start_line": 67, "target_confidence": 26}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 36, "target_start_line": 1, "target_confidence": 26}, {"target_end_line": 78, "source_start_line": 48, "source_end_line": 50, "source_confidence": 36, "target_start_line": 76, "target_confidence": 26}, {"target_end_line": 71, "source_start_line": 20, "source_end_line": 25, "source_confidence": 36, "target_start_line": 67, "target_confidence": 26}]}, {"source": "aldrejota_aced8f7034616f7c4800a62e1db14cd4", "value": 143, "target": "Adlopez2016_74436cb309936fdc2a35b1bb52b0333f", "links": [{"target_end_line": 143, "source_start_line": 1, "source_end_line": 143, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "john-guerra_95c69d114b7d59f934c282fc643d2234", "value": 100, "target": "jcnesci_913eaeb5c8807cbef4884319440e43c7", "links": [{"target_end_line": 70, "source_start_line": 62, "source_end_line": 80, "source_confidence": 57, "target_start_line": 52, "target_confidence": 21}, {"target_end_line": 32, "source_start_line": 9, "source_end_line": 23, "source_confidence": 57, "target_start_line": 18, "target_confidence": 21}, {"target_end_line": 39, "source_start_line": 25, "source_end_line": 29, "source_confidence": 57, "target_start_line": 35, "target_confidence": 21}, {"target_end_line": 295, "source_start_line": 80, "source_end_line": 86, "source_confidence": 57, "target_start_line": 245, "target_confidence": 21}, {"target_end_line": 211, "source_start_line": 51, "source_end_line": 60, "source_confidence": 57, "target_start_line": 202, "target_confidence": 21}, {"target_end_line": 70, "source_start_line": 62, "source_end_line": 80, "source_confidence": 57, "target_start_line": 52, "target_confidence": 21}, {"target_end_line": 32, "source_start_line": 9, "source_end_line": 23, "source_confidence": 57, "target_start_line": 18, "target_confidence": 21}, {"target_end_line": 39, "source_start_line": 25, "source_end_line": 29, "source_confidence": 57, "target_start_line": 35, "target_confidence": 21}, {"target_end_line": 295, "source_start_line": 80, "source_end_line": 86, "source_confidence": 57, "target_start_line": 245, "target_confidence": 21}, {"target_end_line": 211, "source_start_line": 51, "source_end_line": 60, "source_confidence": 57, "target_start_line": 202, "target_confidence": 21}, {"target_end_line": 70, "source_start_line": 62, "source_end_line": 80, "source_confidence": 57, "target_start_line": 52, "target_confidence": 21}, {"target_end_line": 32, "source_start_line": 9, "source_end_line": 23, "source_confidence": 57, "target_start_line": 18, "target_confidence": 21}, {"target_end_line": 39, "source_start_line": 25, "source_end_line": 29, "source_confidence": 57, "target_start_line": 35, "target_confidence": 21}, {"target_end_line": 295, "source_start_line": 80, "source_end_line": 86, "source_confidence": 57, "target_start_line": 245, "target_confidence": 21}, {"target_end_line": 211, "source_start_line": 51, "source_end_line": 60, "source_confidence": 57, "target_start_line": 202, "target_confidence": 21}, {"target_end_line": 70, "source_start_line": 62, "source_end_line": 80, "source_confidence": 57, "target_start_line": 52, "target_confidence": 21}, {"target_end_line": 32, "source_start_line": 9, "source_end_line": 23, "source_confidence": 57, "target_start_line": 18, "target_confidence": 21}, {"target_end_line": 39, "source_start_line": 25, "source_end_line": 29, "source_confidence": 57, "target_start_line": 35, "target_confidence": 21}, {"target_end_line": 295, "source_start_line": 80, "source_end_line": 86, "source_confidence": 57, "target_start_line": 245, "target_confidence": 21}, {"target_end_line": 211, "source_start_line": 51, "source_end_line": 60, "source_confidence": 57, "target_start_line": 202, "target_confidence": 21}, {"target_end_line": 70, "source_start_line": 62, "source_end_line": 80, "source_confidence": 57, "target_start_line": 52, "target_confidence": 21}, {"target_end_line": 32, "source_start_line": 9, "source_end_line": 23, "source_confidence": 57, "target_start_line": 18, "target_confidence": 21}, {"target_end_line": 39, "source_start_line": 25, "source_end_line": 29, "source_confidence": 57, "target_start_line": 35, "target_confidence": 21}, {"target_end_line": 295, "source_start_line": 80, "source_end_line": 86, "source_confidence": 57, "target_start_line": 245, "target_confidence": 21}, {"target_end_line": 211, "source_start_line": 51, "source_end_line": 60, "source_confidence": 57, "target_start_line": 202, "target_confidence": 21}]}, {"source": "mbostock_a8a5baa4c4a470cda598", "value": 56, "target": "oliviac12_e1c862b986851427bb3107a1ca1b4683", "links": [{"target_end_line": 46, "source_start_line": 1, "source_end_line": 56, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "mashehu_de923d763a53d523596ba81c6d1f3233", "value": 37, "target": "emilioalvarado_5aa6a0fcc6815635b801f1f80289c677", "links": [{"target_end_line": 32, "source_start_line": 79, "source_end_line": 83, "source_confidence": 19, "target_start_line": 28, "target_confidence": 25}, {"target_end_line": 108, "source_start_line": 115, "source_end_line": 124, "source_confidence": 19, "target_start_line": 99, "target_confidence": 25}, {"target_end_line": 7, "source_start_line": 63, "source_end_line": 68, "source_confidence": 19, "target_start_line": 3, "target_confidence": 25}, {"target_end_line": 127, "source_start_line": 131, "source_end_line": 140, "source_confidence": 19, "target_start_line": 119, "target_confidence": 25}, {"target_end_line": 115, "source_start_line": 126, "source_end_line": 131, "source_confidence": 19, "target_start_line": 110, "target_confidence": 25}, {"target_end_line": 32, "source_start_line": 79, "source_end_line": 83, "source_confidence": 19, "target_start_line": 28, "target_confidence": 25}, {"target_end_line": 108, "source_start_line": 115, "source_end_line": 124, "source_confidence": 19, "target_start_line": 99, "target_confidence": 25}, {"target_end_line": 7, "source_start_line": 63, "source_end_line": 68, "source_confidence": 19, "target_start_line": 3, "target_confidence": 25}, {"target_end_line": 127, "source_start_line": 131, "source_end_line": 140, "source_confidence": 19, "target_start_line": 119, "target_confidence": 25}, {"target_end_line": 115, "source_start_line": 126, "source_end_line": 131, "source_confidence": 19, "target_start_line": 110, "target_confidence": 25}, {"target_end_line": 32, "source_start_line": 79, "source_end_line": 83, "source_confidence": 19, "target_start_line": 28, "target_confidence": 25}, {"target_end_line": 108, "source_start_line": 115, "source_end_line": 124, "source_confidence": 19, "target_start_line": 99, "target_confidence": 25}, {"target_end_line": 7, "source_start_line": 63, "source_end_line": 68, "source_confidence": 19, "target_start_line": 3, "target_confidence": 25}, {"target_end_line": 127, "source_start_line": 131, "source_end_line": 140, "source_confidence": 19, "target_start_line": 119, "target_confidence": 25}, {"target_end_line": 115, "source_start_line": 126, "source_end_line": 131, "source_confidence": 19, "target_start_line": 110, "target_confidence": 25}, {"target_end_line": 32, "source_start_line": 79, "source_end_line": 83, "source_confidence": 19, "target_start_line": 28, "target_confidence": 25}, {"target_end_line": 108, "source_start_line": 115, "source_end_line": 124, "source_confidence": 19, "target_start_line": 99, "target_confidence": 25}, {"target_end_line": 7, "source_start_line": 63, "source_end_line": 68, "source_confidence": 19, "target_start_line": 3, "target_confidence": 25}, {"target_end_line": 127, "source_start_line": 131, "source_end_line": 140, "source_confidence": 19, "target_start_line": 119, "target_confidence": 25}, {"target_end_line": 115, "source_start_line": 126, "source_end_line": 131, "source_confidence": 19, "target_start_line": 110, "target_confidence": 25}, {"target_end_line": 32, "source_start_line": 79, "source_end_line": 83, "source_confidence": 19, "target_start_line": 28, "target_confidence": 25}, {"target_end_line": 108, "source_start_line": 115, "source_end_line": 124, "source_confidence": 19, "target_start_line": 99, "target_confidence": 25}, {"target_end_line": 7, "source_start_line": 63, "source_end_line": 68, "source_confidence": 19, "target_start_line": 3, "target_confidence": 25}, {"target_end_line": 127, "source_start_line": 131, "source_end_line": 140, "source_confidence": 19, "target_start_line": 119, "target_confidence": 25}, {"target_end_line": 115, "source_start_line": 126, "source_end_line": 131, "source_confidence": 19, "target_start_line": 110, "target_confidence": 25}]}, {"source": "d3noob_3e5138a14cfc1822eedee2963c493399", "value": 28, "target": "adry34160_19d4c066df6f6b1e992296458d8e9d1f", "links": [{"target_end_line": 37, "source_start_line": 22, "source_end_line": 31, "source_confidence": 34, "target_start_line": 27, "target_confidence": 44}, {"target_end_line": 48, "source_start_line": 35, "source_end_line": 45, "source_confidence": 34, "target_start_line": 38, "target_confidence": 44}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 34, "target_start_line": 4, "target_confidence": 44}, {"target_end_line": 37, "source_start_line": 22, "source_end_line": 31, "source_confidence": 34, "target_start_line": 27, "target_confidence": 44}, {"target_end_line": 48, "source_start_line": 35, "source_end_line": 45, "source_confidence": 34, "target_start_line": 38, "target_confidence": 44}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 34, "target_start_line": 4, "target_confidence": 44}, {"target_end_line": 37, "source_start_line": 22, "source_end_line": 31, "source_confidence": 34, "target_start_line": 27, "target_confidence": 44}, {"target_end_line": 48, "source_start_line": 35, "source_end_line": 45, "source_confidence": 34, "target_start_line": 38, "target_confidence": 44}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 34, "target_start_line": 4, "target_confidence": 44}]}, {"source": "domhorvath_42641003ee6c65cbb79d4127cadbbe21", "value": 39, "target": "aznmonkey_58c6aa6166f188105e7f912ef99f203f", "links": [{"target_end_line": 121, "source_start_line": 80, "source_end_line": 107, "source_confidence": 26, "target_start_line": 94, "target_confidence": 20}, {"target_end_line": 31, "source_start_line": 20, "source_end_line": 26, "source_confidence": 26, "target_start_line": 24, "target_confidence": 20}, {"target_end_line": 64, "source_start_line": 46, "source_end_line": 48, "source_confidence": 26, "target_start_line": 62, "target_confidence": 20}, {"target_end_line": 121, "source_start_line": 80, "source_end_line": 107, "source_confidence": 26, "target_start_line": 94, "target_confidence": 20}, {"target_end_line": 31, "source_start_line": 20, "source_end_line": 26, "source_confidence": 26, "target_start_line": 24, "target_confidence": 20}, {"target_end_line": 64, "source_start_line": 46, "source_end_line": 48, "source_confidence": 26, "target_start_line": 62, "target_confidence": 20}, {"target_end_line": 121, "source_start_line": 80, "source_end_line": 107, "source_confidence": 26, "target_start_line": 94, "target_confidence": 20}, {"target_end_line": 31, "source_start_line": 20, "source_end_line": 26, "source_confidence": 26, "target_start_line": 24, "target_confidence": 20}, {"target_end_line": 64, "source_start_line": 46, "source_end_line": 48, "source_confidence": 26, "target_start_line": 62, "target_confidence": 20}]}, {"source": "john-guerra_95c69d114b7d59f934c282fc643d2234", "value": 64, "target": "jcnesci_7b7f534f7b5a8ef039f39f6a5907c5d2", "links": [{"target_end_line": 70, "source_start_line": 62, "source_end_line": 80, "source_confidence": 67, "target_start_line": 52, "target_confidence": 17}, {"target_end_line": 32, "source_start_line": 9, "source_end_line": 23, "source_confidence": 67, "target_start_line": 18, "target_confidence": 17}, {"target_end_line": 100, "source_start_line": 40, "source_end_line": 46, "source_confidence": 67, "target_start_line": 94, "target_confidence": 17}, {"target_end_line": 39, "source_start_line": 25, "source_end_line": 29, "source_confidence": 67, "target_start_line": 35, "target_confidence": 17}, {"target_end_line": 313, "source_start_line": 80, "source_end_line": 86, "source_confidence": 67, "target_start_line": 306, "target_confidence": 17}, {"target_end_line": 118, "source_start_line": 51, "source_end_line": 60, "source_confidence": 67, "target_start_line": 109, "target_confidence": 17}, {"target_end_line": 70, "source_start_line": 62, "source_end_line": 80, "source_confidence": 67, "target_start_line": 52, "target_confidence": 17}, {"target_end_line": 32, "source_start_line": 9, "source_end_line": 23, "source_confidence": 67, "target_start_line": 18, "target_confidence": 17}, {"target_end_line": 100, "source_start_line": 40, "source_end_line": 46, "source_confidence": 67, "target_start_line": 94, "target_confidence": 17}, {"target_end_line": 39, "source_start_line": 25, "source_end_line": 29, "source_confidence": 67, "target_start_line": 35, "target_confidence": 17}, {"target_end_line": 313, "source_start_line": 80, "source_end_line": 86, "source_confidence": 67, "target_start_line": 306, "target_confidence": 17}, {"target_end_line": 118, "source_start_line": 51, "source_end_line": 60, "source_confidence": 67, "target_start_line": 109, "target_confidence": 17}, {"target_end_line": 70, "source_start_line": 62, "source_end_line": 80, "source_confidence": 67, "target_start_line": 52, "target_confidence": 17}, {"target_end_line": 32, "source_start_line": 9, "source_end_line": 23, "source_confidence": 67, "target_start_line": 18, "target_confidence": 17}, {"target_end_line": 100, "source_start_line": 40, "source_end_line": 46, "source_confidence": 67, "target_start_line": 94, "target_confidence": 17}, {"target_end_line": 39, "source_start_line": 25, "source_end_line": 29, "source_confidence": 67, "target_start_line": 35, "target_confidence": 17}, {"target_end_line": 313, "source_start_line": 80, "source_end_line": 86, "source_confidence": 67, "target_start_line": 306, "target_confidence": 17}, {"target_end_line": 118, "source_start_line": 51, "source_end_line": 60, "source_confidence": 67, "target_start_line": 109, "target_confidence": 17}, {"target_end_line": 70, "source_start_line": 62, "source_end_line": 80, "source_confidence": 67, "target_start_line": 52, "target_confidence": 17}, {"target_end_line": 32, "source_start_line": 9, "source_end_line": 23, "source_confidence": 67, "target_start_line": 18, "target_confidence": 17}, {"target_end_line": 100, "source_start_line": 40, "source_end_line": 46, "source_confidence": 67, "target_start_line": 94, "target_confidence": 17}, {"target_end_line": 39, "source_start_line": 25, "source_end_line": 29, "source_confidence": 67, "target_start_line": 35, "target_confidence": 17}, {"target_end_line": 313, "source_start_line": 80, "source_end_line": 86, "source_confidence": 67, "target_start_line": 306, "target_confidence": 17}, {"target_end_line": 118, "source_start_line": 51, "source_end_line": 60, "source_confidence": 67, "target_start_line": 109, "target_confidence": 17}, {"target_end_line": 70, "source_start_line": 62, "source_end_line": 80, "source_confidence": 67, "target_start_line": 52, "target_confidence": 17}, {"target_end_line": 32, "source_start_line": 9, "source_end_line": 23, "source_confidence": 67, "target_start_line": 18, "target_confidence": 17}, {"target_end_line": 100, "source_start_line": 40, "source_end_line": 46, "source_confidence": 67, "target_start_line": 94, "target_confidence": 17}, {"target_end_line": 39, "source_start_line": 25, "source_end_line": 29, "source_confidence": 67, "target_start_line": 35, "target_confidence": 17}, {"target_end_line": 313, "source_start_line": 80, "source_end_line": 86, "source_confidence": 67, "target_start_line": 306, "target_confidence": 17}, {"target_end_line": 118, "source_start_line": 51, "source_end_line": 60, "source_confidence": 67, "target_start_line": 109, "target_confidence": 17}, {"target_end_line": 70, "source_start_line": 62, "source_end_line": 80, "source_confidence": 67, "target_start_line": 52, "target_confidence": 17}, {"target_end_line": 32, "source_start_line": 9, "source_end_line": 23, "source_confidence": 67, "target_start_line": 18, "target_confidence": 17}, {"target_end_line": 100, "source_start_line": 40, "source_end_line": 46, "source_confidence": 67, "target_start_line": 94, "target_confidence": 17}, {"target_end_line": 39, "source_start_line": 25, "source_end_line": 29, "source_confidence": 67, "target_start_line": 35, "target_confidence": 17}, {"target_end_line": 313, "source_start_line": 80, "source_end_line": 86, "source_confidence": 67, "target_start_line": 306, "target_confidence": 17}, {"target_end_line": 118, "source_start_line": 51, "source_end_line": 60, "source_confidence": 67, "target_start_line": 109, "target_confidence": 17}]}, {"source": "sampathweb_4537242756735c02c8a4168dfd4477a1", "value": 42, "target": "domhorvath_dd850c5e97d4022fbf0f11611a0cf528", "links": [{"target_end_line": 162, "source_start_line": 60, "source_end_line": 75, "source_confidence": 30, "target_start_line": 147, "target_confidence": 11}, {"target_end_line": 12, "source_start_line": 41, "source_end_line": 48, "source_confidence": 30, "target_start_line": 6, "target_confidence": 11}, {"target_end_line": 118, "source_start_line": 34, "source_end_line": 38, "source_confidence": 30, "target_start_line": 114, "target_confidence": 11}, {"target_end_line": 145, "source_start_line": 24, "source_end_line": 28, "source_confidence": 30, "target_start_line": 141, "target_confidence": 11}, {"target_end_line": 178, "source_start_line": 82, "source_end_line": 89, "source_confidence": 30, "target_start_line": 171, "target_confidence": 11}, {"target_end_line": 162, "source_start_line": 60, "source_end_line": 75, "source_confidence": 30, "target_start_line": 147, "target_confidence": 11}, {"target_end_line": 12, "source_start_line": 41, "source_end_line": 48, "source_confidence": 30, "target_start_line": 6, "target_confidence": 11}, {"target_end_line": 118, "source_start_line": 34, "source_end_line": 38, "source_confidence": 30, "target_start_line": 114, "target_confidence": 11}, {"target_end_line": 145, "source_start_line": 24, "source_end_line": 28, "source_confidence": 30, "target_start_line": 141, "target_confidence": 11}, {"target_end_line": 178, "source_start_line": 82, "source_end_line": 89, "source_confidence": 30, "target_start_line": 171, "target_confidence": 11}, {"target_end_line": 162, "source_start_line": 60, "source_end_line": 75, "source_confidence": 30, "target_start_line": 147, "target_confidence": 11}, {"target_end_line": 12, "source_start_line": 41, "source_end_line": 48, "source_confidence": 30, "target_start_line": 6, "target_confidence": 11}, {"target_end_line": 118, "source_start_line": 34, "source_end_line": 38, "source_confidence": 30, "target_start_line": 114, "target_confidence": 11}, {"target_end_line": 145, "source_start_line": 24, "source_end_line": 28, "source_confidence": 30, "target_start_line": 141, "target_confidence": 11}, {"target_end_line": 178, "source_start_line": 82, "source_end_line": 89, "source_confidence": 30, "target_start_line": 171, "target_confidence": 11}, {"target_end_line": 162, "source_start_line": 60, "source_end_line": 75, "source_confidence": 30, "target_start_line": 147, "target_confidence": 11}, {"target_end_line": 12, "source_start_line": 41, "source_end_line": 48, "source_confidence": 30, "target_start_line": 6, "target_confidence": 11}, {"target_end_line": 118, "source_start_line": 34, "source_end_line": 38, "source_confidence": 30, "target_start_line": 114, "target_confidence": 11}, {"target_end_line": 145, "source_start_line": 24, "source_end_line": 28, "source_confidence": 30, "target_start_line": 141, "target_confidence": 11}, {"target_end_line": 178, "source_start_line": 82, "source_end_line": 89, "source_confidence": 30, "target_start_line": 171, "target_confidence": 11}, {"target_end_line": 162, "source_start_line": 60, "source_end_line": 75, "source_confidence": 30, "target_start_line": 147, "target_confidence": 11}, {"target_end_line": 12, "source_start_line": 41, "source_end_line": 48, "source_confidence": 30, "target_start_line": 6, "target_confidence": 11}, {"target_end_line": 118, "source_start_line": 34, "source_end_line": 38, "source_confidence": 30, "target_start_line": 114, "target_confidence": 11}, {"target_end_line": 145, "source_start_line": 24, "source_end_line": 28, "source_confidence": 30, "target_start_line": 141, "target_confidence": 11}, {"target_end_line": 178, "source_start_line": 82, "source_end_line": 89, "source_confidence": 30, "target_start_line": 171, "target_confidence": 11}]}, {"source": "Fil_41f4c6ea19859768a1b3d56cb2c23218", "value": 70, "target": "enjalot_c143873af5e73f0e3fcca52ab78081e8", "links": [{"target_end_line": 98, "source_start_line": 49, "source_end_line": 89, "source_confidence": 49, "target_start_line": 56, "target_confidence": 38}, {"target_end_line": 128, "source_start_line": 96, "source_end_line": 100, "source_confidence": 49, "target_start_line": 122, "target_confidence": 38}, {"target_end_line": 52, "source_start_line": 42, "source_end_line": 47, "source_confidence": 49, "target_start_line": 47, "target_confidence": 38}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 16, "source_confidence": 49, "target_start_line": 15, "target_confidence": 38}, {"target_end_line": 138, "source_start_line": 102, "source_end_line": 107, "source_confidence": 49, "target_start_line": 135, "target_confidence": 38}, {"target_end_line": 98, "source_start_line": 49, "source_end_line": 89, "source_confidence": 49, "target_start_line": 56, "target_confidence": 38}, {"target_end_line": 128, "source_start_line": 96, "source_end_line": 100, "source_confidence": 49, "target_start_line": 122, "target_confidence": 38}, {"target_end_line": 52, "source_start_line": 42, "source_end_line": 47, "source_confidence": 49, "target_start_line": 47, "target_confidence": 38}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 16, "source_confidence": 49, "target_start_line": 15, "target_confidence": 38}, {"target_end_line": 138, "source_start_line": 102, "source_end_line": 107, "source_confidence": 49, "target_start_line": 135, "target_confidence": 38}, {"target_end_line": 98, "source_start_line": 49, "source_end_line": 89, "source_confidence": 49, "target_start_line": 56, "target_confidence": 38}, {"target_end_line": 128, "source_start_line": 96, "source_end_line": 100, "source_confidence": 49, "target_start_line": 122, "target_confidence": 38}, {"target_end_line": 52, "source_start_line": 42, "source_end_line": 47, "source_confidence": 49, "target_start_line": 47, "target_confidence": 38}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 16, "source_confidence": 49, "target_start_line": 15, "target_confidence": 38}, {"target_end_line": 138, "source_start_line": 102, "source_end_line": 107, "source_confidence": 49, "target_start_line": 135, "target_confidence": 38}, {"target_end_line": 98, "source_start_line": 49, "source_end_line": 89, "source_confidence": 49, "target_start_line": 56, "target_confidence": 38}, {"target_end_line": 128, "source_start_line": 96, "source_end_line": 100, "source_confidence": 49, "target_start_line": 122, "target_confidence": 38}, {"target_end_line": 52, "source_start_line": 42, "source_end_line": 47, "source_confidence": 49, "target_start_line": 47, "target_confidence": 38}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 16, "source_confidence": 49, "target_start_line": 15, "target_confidence": 38}, {"target_end_line": 138, "source_start_line": 102, "source_end_line": 107, "source_confidence": 49, "target_start_line": 135, "target_confidence": 38}, {"target_end_line": 98, "source_start_line": 49, "source_end_line": 89, "source_confidence": 49, "target_start_line": 56, "target_confidence": 38}, {"target_end_line": 128, "source_start_line": 96, "source_end_line": 100, "source_confidence": 49, "target_start_line": 122, "target_confidence": 38}, {"target_end_line": 52, "source_start_line": 42, "source_end_line": 47, "source_confidence": 49, "target_start_line": 47, "target_confidence": 38}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 16, "source_confidence": 49, "target_start_line": 15, "target_confidence": 38}, {"target_end_line": 138, "source_start_line": 102, "source_end_line": 107, "source_confidence": 49, "target_start_line": 135, "target_confidence": 38}]}, {"source": "TomStanczyk_8cd26aabc37de17d837a85eeb3b420d5", "value": 47, "target": "trebor_058d8959701e5a79a0674adc23be23c5", "links": [{"target_end_line": 117, "source_start_line": 113, "source_end_line": 130, "source_confidence": 31, "target_start_line": 99, "target_confidence": 28}, {"target_end_line": 98, "source_start_line": 80, "source_end_line": 97, "source_confidence": 31, "target_start_line": 80, "target_confidence": 28}, {"target_end_line": 59, "source_start_line": 28, "source_end_line": 36, "source_confidence": 31, "target_start_line": 51, "target_confidence": 28}, {"target_end_line": 117, "source_start_line": 113, "source_end_line": 130, "source_confidence": 31, "target_start_line": 99, "target_confidence": 28}, {"target_end_line": 98, "source_start_line": 80, "source_end_line": 97, "source_confidence": 31, "target_start_line": 80, "target_confidence": 28}, {"target_end_line": 59, "source_start_line": 28, "source_end_line": 36, "source_confidence": 31, "target_start_line": 51, "target_confidence": 28}, {"target_end_line": 117, "source_start_line": 113, "source_end_line": 130, "source_confidence": 31, "target_start_line": 99, "target_confidence": 28}, {"target_end_line": 98, "source_start_line": 80, "source_end_line": 97, "source_confidence": 31, "target_start_line": 80, "target_confidence": 28}, {"target_end_line": 59, "source_start_line": 28, "source_end_line": 36, "source_confidence": 31, "target_start_line": 51, "target_confidence": 28}]}, {"source": "erlenstar_0ba5ee8bd3773d70462523679d4ef5a4", "value": 59, "target": "Fil_41f4c6ea19859768a1b3d56cb2c23218", "links": [{"target_end_line": 124, "source_start_line": 46, "source_end_line": 77, "source_confidence": 73, "target_start_line": 92, "target_confidence": 36}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 73, "target_start_line": 1, "target_confidence": 36}, {"target_end_line": 51, "source_start_line": 31, "source_end_line": 40, "source_confidence": 73, "target_start_line": 42, "target_confidence": 36}, {"target_end_line": 124, "source_start_line": 46, "source_end_line": 77, "source_confidence": 73, "target_start_line": 92, "target_confidence": 36}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 73, "target_start_line": 1, "target_confidence": 36}, {"target_end_line": 51, "source_start_line": 31, "source_end_line": 40, "source_confidence": 73, "target_start_line": 42, "target_confidence": 36}, {"target_end_line": 124, "source_start_line": 46, "source_end_line": 77, "source_confidence": 73, "target_start_line": 92, "target_confidence": 36}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 73, "target_start_line": 1, "target_confidence": 36}, {"target_end_line": 51, "source_start_line": 31, "source_end_line": 40, "source_confidence": 73, "target_start_line": 42, "target_confidence": 36}]}, {"source": "erlenstar_0ba5ee8bd3773d70462523679d4ef5a4", "value": 67, "target": "Fil_56c02237d9951c4bb12ed41cf64d6e4c", "links": [{"target_end_line": 114, "source_start_line": 46, "source_end_line": 77, "source_confidence": 85, "target_start_line": 83, "target_confidence": 52}, {"target_end_line": 45, "source_start_line": 23, "source_end_line": 41, "source_confidence": 85, "target_start_line": 27, "target_confidence": 52}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 85, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 114, "source_start_line": 46, "source_end_line": 77, "source_confidence": 85, "target_start_line": 83, "target_confidence": 52}, {"target_end_line": 45, "source_start_line": 23, "source_end_line": 41, "source_confidence": 85, "target_start_line": 27, "target_confidence": 52}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 85, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 114, "source_start_line": 46, "source_end_line": 77, "source_confidence": 85, "target_start_line": 83, "target_confidence": 52}, {"target_end_line": 45, "source_start_line": 23, "source_end_line": 41, "source_confidence": 85, "target_start_line": 27, "target_confidence": 52}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 85, "target_start_line": 1, "target_confidence": 52}]}, {"source": "kristw_7fbf031e3205a8a453a8", "value": 252, "target": "john-guerra_c06cae4f52cabc82f8e6195c1ef6bb7d", "links": [{"target_end_line": 251, "source_start_line": 54, "source_end_line": 251, "source_confidence": 97, "target_start_line": 54, "target_confidence": 98}, {"target_end_line": 54, "source_start_line": 16, "source_end_line": 54, "source_confidence": 97, "target_start_line": 16, "target_confidence": 98}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 97, "target_start_line": 1, "target_confidence": 98}, {"target_end_line": 251, "source_start_line": 54, "source_end_line": 251, "source_confidence": 97, "target_start_line": 54, "target_confidence": 98}, {"target_end_line": 54, "source_start_line": 16, "source_end_line": 54, "source_confidence": 97, "target_start_line": 16, "target_confidence": 98}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 97, "target_start_line": 1, "target_confidence": 98}, {"target_end_line": 251, "source_start_line": 54, "source_end_line": 251, "source_confidence": 97, "target_start_line": 54, "target_confidence": 98}, {"target_end_line": 54, "source_start_line": 16, "source_end_line": 54, "source_confidence": 97, "target_start_line": 16, "target_confidence": 98}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 97, "target_start_line": 1, "target_confidence": 98}]}, {"source": "kristw_7fbf031e3205a8a453a8", "value": 252, "target": "john-guerra_727e8992e9599b9d9f1dbfdc4c8e479e", "links": [{"target_end_line": 251, "source_start_line": 54, "source_end_line": 251, "source_confidence": 97, "target_start_line": 54, "target_confidence": 98}, {"target_end_line": 54, "source_start_line": 16, "source_end_line": 54, "source_confidence": 97, "target_start_line": 16, "target_confidence": 98}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 97, "target_start_line": 1, "target_confidence": 98}, {"target_end_line": 251, "source_start_line": 54, "source_end_line": 251, "source_confidence": 97, "target_start_line": 54, "target_confidence": 98}, {"target_end_line": 54, "source_start_line": 16, "source_end_line": 54, "source_confidence": 97, "target_start_line": 16, "target_confidence": 98}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 97, "target_start_line": 1, "target_confidence": 98}, {"target_end_line": 251, "source_start_line": 54, "source_end_line": 251, "source_confidence": 97, "target_start_line": 54, "target_confidence": 98}, {"target_end_line": 54, "source_start_line": 16, "source_end_line": 54, "source_confidence": 97, "target_start_line": 16, "target_confidence": 98}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 97, "target_start_line": 1, "target_confidence": 98}]}, {"source": "nbremer_4258eb64322c55156097c21f384715a7", "value": 13, "target": "AndresAnayaIsaza_759b4d1821fa8c2d305c6a86c833e11e", "links": [{"target_end_line": 12, "source_start_line": 35, "source_end_line": 35, "source_confidence": 4, "target_start_line": 11, "target_confidence": 35}, {"target_end_line": 2, "source_start_line": 1, "source_end_line": 3, "source_confidence": 4, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 6, "source_confidence": 4, "target_start_line": 4, "target_confidence": 35}, {"target_end_line": 15, "source_start_line": 36, "source_end_line": 38, "source_confidence": 4, "target_start_line": 13, "target_confidence": 35}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 2, "target_confidence": 35}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 3, "target_confidence": 35}, {"target_end_line": 12, "source_start_line": 35, "source_end_line": 35, "source_confidence": 4, "target_start_line": 11, "target_confidence": 35}, {"target_end_line": 2, "source_start_line": 1, "source_end_line": 3, "source_confidence": 4, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 6, "source_confidence": 4, "target_start_line": 4, "target_confidence": 35}, {"target_end_line": 15, "source_start_line": 36, "source_end_line": 38, "source_confidence": 4, "target_start_line": 13, "target_confidence": 35}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 2, "target_confidence": 35}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 3, "target_confidence": 35}, {"target_end_line": 12, "source_start_line": 35, "source_end_line": 35, "source_confidence": 4, "target_start_line": 11, "target_confidence": 35}, {"target_end_line": 2, "source_start_line": 1, "source_end_line": 3, "source_confidence": 4, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 6, "source_confidence": 4, "target_start_line": 4, "target_confidence": 35}, {"target_end_line": 15, "source_start_line": 36, "source_end_line": 38, "source_confidence": 4, "target_start_line": 13, "target_confidence": 35}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 2, "target_confidence": 35}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 3, "target_confidence": 35}, {"target_end_line": 12, "source_start_line": 35, "source_end_line": 35, "source_confidence": 4, "target_start_line": 11, "target_confidence": 35}, {"target_end_line": 2, "source_start_line": 1, "source_end_line": 3, "source_confidence": 4, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 6, "source_confidence": 4, "target_start_line": 4, "target_confidence": 35}, {"target_end_line": 15, "source_start_line": 36, "source_end_line": 38, "source_confidence": 4, "target_start_line": 13, "target_confidence": 35}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 2, "target_confidence": 35}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 3, "target_confidence": 35}, {"target_end_line": 12, "source_start_line": 35, "source_end_line": 35, "source_confidence": 4, "target_start_line": 11, "target_confidence": 35}, {"target_end_line": 2, "source_start_line": 1, "source_end_line": 3, "source_confidence": 4, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 6, "source_confidence": 4, "target_start_line": 4, "target_confidence": 35}, {"target_end_line": 15, "source_start_line": 36, "source_end_line": 38, "source_confidence": 4, "target_start_line": 13, "target_confidence": 35}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 2, "target_confidence": 35}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 3, "target_confidence": 35}, {"target_end_line": 12, "source_start_line": 35, "source_end_line": 35, "source_confidence": 4, "target_start_line": 11, "target_confidence": 35}, {"target_end_line": 2, "source_start_line": 1, "source_end_line": 3, "source_confidence": 4, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 6, "source_confidence": 4, "target_start_line": 4, "target_confidence": 35}, {"target_end_line": 15, "source_start_line": 36, "source_end_line": 38, "source_confidence": 4, "target_start_line": 13, "target_confidence": 35}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 2, "target_confidence": 35}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 3, "target_confidence": 35}]}, {"source": "mbostock_517fdb49f959cb1461e2", "value": 53, "target": "erlenstar_0ba5ee8bd3773d70462523679d4ef5a4", "links": [{"target_end_line": 74, "source_start_line": 60, "source_end_line": 77, "source_confidence": 29, "target_start_line": 56, "target_confidence": 66}, {"target_end_line": 45, "source_start_line": 32, "source_end_line": 46, "source_confidence": 29, "target_start_line": 31, "target_confidence": 66}, {"target_end_line": 30, "source_start_line": 18, "source_end_line": 29, "source_confidence": 29, "target_start_line": 19, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 52, "source_end_line": 59, "source_confidence": 29, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 74, "source_start_line": 60, "source_end_line": 77, "source_confidence": 29, "target_start_line": 56, "target_confidence": 66}, {"target_end_line": 45, "source_start_line": 32, "source_end_line": 46, "source_confidence": 29, "target_start_line": 31, "target_confidence": 66}, {"target_end_line": 30, "source_start_line": 18, "source_end_line": 29, "source_confidence": 29, "target_start_line": 19, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 52, "source_end_line": 59, "source_confidence": 29, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 74, "source_start_line": 60, "source_end_line": 77, "source_confidence": 29, "target_start_line": 56, "target_confidence": 66}, {"target_end_line": 45, "source_start_line": 32, "source_end_line": 46, "source_confidence": 29, "target_start_line": 31, "target_confidence": 66}, {"target_end_line": 30, "source_start_line": 18, "source_end_line": 29, "source_confidence": 29, "target_start_line": 19, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 52, "source_end_line": 59, "source_confidence": 29, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 74, "source_start_line": 60, "source_end_line": 77, "source_confidence": 29, "target_start_line": 56, "target_confidence": 66}, {"target_end_line": 45, "source_start_line": 32, "source_end_line": 46, "source_confidence": 29, "target_start_line": 31, "target_confidence": 66}, {"target_end_line": 30, "source_start_line": 18, "source_end_line": 29, "source_confidence": 29, "target_start_line": 19, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 52, "source_end_line": 59, "source_confidence": 29, "target_start_line": 46, "target_confidence": 66}]}, {"source": "emilyinamillion_649f6f6cf5cbc93776687cd6656be7ca", "value": 562, "target": "lorenzopub_f8cb1a3c4ee0917201197151397c3692", "links": [{"target_end_line": 562, "source_start_line": 1, "source_end_line": 562, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "newsummit_880d663dba66affaf18226113d34073d", "value": 42, "target": "ericsoco_c3fdb4c844a88101f606e9db08e66845", "links": [{"target_end_line": 103, "source_start_line": 91, "source_end_line": 100, "source_confidence": 26, "target_start_line": 93, "target_confidence": 27}, {"target_end_line": 13, "source_start_line": 5, "source_end_line": 12, "source_confidence": 26, "target_start_line": 5, "target_confidence": 27}, {"target_end_line": 60, "source_start_line": 58, "source_end_line": 67, "source_confidence": 26, "target_start_line": 51, "target_confidence": 27}, {"target_end_line": 19, "source_start_line": 12, "source_end_line": 18, "source_confidence": 26, "target_start_line": 13, "target_confidence": 27}, {"target_end_line": 77, "source_start_line": 82, "source_end_line": 86, "source_confidence": 26, "target_start_line": 73, "target_confidence": 27}, {"target_end_line": 103, "source_start_line": 91, "source_end_line": 100, "source_confidence": 26, "target_start_line": 93, "target_confidence": 27}, {"target_end_line": 13, "source_start_line": 5, "source_end_line": 12, "source_confidence": 26, "target_start_line": 5, "target_confidence": 27}, {"target_end_line": 60, "source_start_line": 58, "source_end_line": 67, "source_confidence": 26, "target_start_line": 51, "target_confidence": 27}, {"target_end_line": 19, "source_start_line": 12, "source_end_line": 18, "source_confidence": 26, "target_start_line": 13, "target_confidence": 27}, {"target_end_line": 77, "source_start_line": 82, "source_end_line": 86, "source_confidence": 26, "target_start_line": 73, "target_confidence": 27}, {"target_end_line": 103, "source_start_line": 91, "source_end_line": 100, "source_confidence": 26, "target_start_line": 93, "target_confidence": 27}, {"target_end_line": 13, "source_start_line": 5, "source_end_line": 12, "source_confidence": 26, "target_start_line": 5, "target_confidence": 27}, {"target_end_line": 60, "source_start_line": 58, "source_end_line": 67, "source_confidence": 26, "target_start_line": 51, "target_confidence": 27}, {"target_end_line": 19, "source_start_line": 12, "source_end_line": 18, "source_confidence": 26, "target_start_line": 13, "target_confidence": 27}, {"target_end_line": 77, "source_start_line": 82, "source_end_line": 86, "source_confidence": 26, "target_start_line": 73, "target_confidence": 27}, {"target_end_line": 103, "source_start_line": 91, "source_end_line": 100, "source_confidence": 26, "target_start_line": 93, "target_confidence": 27}, {"target_end_line": 13, "source_start_line": 5, "source_end_line": 12, "source_confidence": 26, "target_start_line": 5, "target_confidence": 27}, {"target_end_line": 60, "source_start_line": 58, "source_end_line": 67, "source_confidence": 26, "target_start_line": 51, "target_confidence": 27}, {"target_end_line": 19, "source_start_line": 12, "source_end_line": 18, "source_confidence": 26, "target_start_line": 13, "target_confidence": 27}, {"target_end_line": 77, "source_start_line": 82, "source_end_line": 86, "source_confidence": 26, "target_start_line": 73, "target_confidence": 27}, {"target_end_line": 103, "source_start_line": 91, "source_end_line": 100, "source_confidence": 26, "target_start_line": 93, "target_confidence": 27}, {"target_end_line": 13, "source_start_line": 5, "source_end_line": 12, "source_confidence": 26, "target_start_line": 5, "target_confidence": 27}, {"target_end_line": 60, "source_start_line": 58, "source_end_line": 67, "source_confidence": 26, "target_start_line": 51, "target_confidence": 27}, {"target_end_line": 19, "source_start_line": 12, "source_end_line": 18, "source_confidence": 26, "target_start_line": 13, "target_confidence": 27}, {"target_end_line": 77, "source_start_line": 82, "source_end_line": 86, "source_confidence": 26, "target_start_line": 73, "target_confidence": 27}]}, {"source": "newsummit_880d663dba66affaf18226113d34073d", "value": 42, "target": "ericsoco_38b4f8b51ecf116e6fb0727d25687e8e", "links": [{"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 26, "target_start_line": 89, "target_confidence": 36}, {"target_end_line": 14, "source_start_line": 5, "source_end_line": 12, "source_confidence": 26, "target_start_line": 6, "target_confidence": 36}, {"target_end_line": 56, "source_start_line": 58, "source_end_line": 67, "source_confidence": 26, "target_start_line": 47, "target_confidence": 36}, {"target_end_line": 20, "source_start_line": 12, "source_end_line": 18, "source_confidence": 26, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 73, "source_start_line": 82, "source_end_line": 86, "source_confidence": 26, "target_start_line": 69, "target_confidence": 36}, {"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 26, "target_start_line": 89, "target_confidence": 36}, {"target_end_line": 14, "source_start_line": 5, "source_end_line": 12, "source_confidence": 26, "target_start_line": 6, "target_confidence": 36}, {"target_end_line": 56, "source_start_line": 58, "source_end_line": 67, "source_confidence": 26, "target_start_line": 47, "target_confidence": 36}, {"target_end_line": 20, "source_start_line": 12, "source_end_line": 18, "source_confidence": 26, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 73, "source_start_line": 82, "source_end_line": 86, "source_confidence": 26, "target_start_line": 69, "target_confidence": 36}, {"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 26, "target_start_line": 89, "target_confidence": 36}, {"target_end_line": 14, "source_start_line": 5, "source_end_line": 12, "source_confidence": 26, "target_start_line": 6, "target_confidence": 36}, {"target_end_line": 56, "source_start_line": 58, "source_end_line": 67, "source_confidence": 26, "target_start_line": 47, "target_confidence": 36}, {"target_end_line": 20, "source_start_line": 12, "source_end_line": 18, "source_confidence": 26, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 73, "source_start_line": 82, "source_end_line": 86, "source_confidence": 26, "target_start_line": 69, "target_confidence": 36}, {"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 26, "target_start_line": 89, "target_confidence": 36}, {"target_end_line": 14, "source_start_line": 5, "source_end_line": 12, "source_confidence": 26, "target_start_line": 6, "target_confidence": 36}, {"target_end_line": 56, "source_start_line": 58, "source_end_line": 67, "source_confidence": 26, "target_start_line": 47, "target_confidence": 36}, {"target_end_line": 20, "source_start_line": 12, "source_end_line": 18, "source_confidence": 26, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 73, "source_start_line": 82, "source_end_line": 86, "source_confidence": 26, "target_start_line": 69, "target_confidence": 36}, {"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 26, "target_start_line": 89, "target_confidence": 36}, {"target_end_line": 14, "source_start_line": 5, "source_end_line": 12, "source_confidence": 26, "target_start_line": 6, "target_confidence": 36}, {"target_end_line": 56, "source_start_line": 58, "source_end_line": 67, "source_confidence": 26, "target_start_line": 47, "target_confidence": 36}, {"target_end_line": 20, "source_start_line": 12, "source_end_line": 18, "source_confidence": 26, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 73, "source_start_line": 82, "source_end_line": 86, "source_confidence": 26, "target_start_line": 69, "target_confidence": 36}]}, {"source": "geraldarthur_54636978ffb349dd4e0b", "value": 30, "target": "LuisSevillano_c7690adccf39bafe583f72b044e407e8", "links": [{"target_end_line": 85, "source_start_line": 66, "source_end_line": 83, "source_confidence": 24, "target_start_line": 68, "target_confidence": 33}, {"target_end_line": 22, "source_start_line": 54, "source_end_line": 57, "source_confidence": 24, "target_start_line": 18, "target_confidence": 33}, {"target_end_line": 29, "source_start_line": 58, "source_end_line": 64, "source_confidence": 24, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 85, "source_start_line": 66, "source_end_line": 83, "source_confidence": 24, "target_start_line": 68, "target_confidence": 33}, {"target_end_line": 22, "source_start_line": 54, "source_end_line": 57, "source_confidence": 24, "target_start_line": 18, "target_confidence": 33}, {"target_end_line": 29, "source_start_line": 58, "source_end_line": 64, "source_confidence": 24, "target_start_line": 23, "target_confidence": 33}, {"target_end_line": 85, "source_start_line": 66, "source_end_line": 83, "source_confidence": 24, "target_start_line": 68, "target_confidence": 33}, {"target_end_line": 22, "source_start_line": 54, "source_end_line": 57, "source_confidence": 24, "target_start_line": 18, "target_confidence": 33}, {"target_end_line": 29, "source_start_line": 58, "source_end_line": 64, "source_confidence": 24, "target_start_line": 23, "target_confidence": 33}]}, {"source": "sadbumblebee_cf960bdddd53ae832d980f5c70c48e5c", "value": 28, "target": "juanprq_42d34c2ebefd1be5d173b802f38bb98a", "links": [{"target_end_line": 9, "source_start_line": 1, "source_end_line": 11, "source_confidence": 10, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 93, "source_start_line": 283, "source_end_line": 290, "source_confidence": 10, "target_start_line": 87, "target_confidence": 35}, {"target_end_line": 43, "source_start_line": 46, "source_end_line": 48, "source_confidence": 10, "target_start_line": 41, "target_confidence": 35}, {"target_end_line": 80, "source_start_line": 95, "source_end_line": 96, "source_confidence": 10, "target_start_line": 79, "target_confidence": 35}, {"target_end_line": 18, "source_start_line": 27, "source_end_line": 30, "source_confidence": 10, "target_start_line": 15, "target_confidence": 35}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 11, "source_confidence": 10, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 93, "source_start_line": 283, "source_end_line": 290, "source_confidence": 10, "target_start_line": 87, "target_confidence": 35}, {"target_end_line": 43, "source_start_line": 46, "source_end_line": 48, "source_confidence": 10, "target_start_line": 41, "target_confidence": 35}, {"target_end_line": 80, "source_start_line": 95, "source_end_line": 96, "source_confidence": 10, "target_start_line": 79, "target_confidence": 35}, {"target_end_line": 18, "source_start_line": 27, "source_end_line": 30, "source_confidence": 10, "target_start_line": 15, "target_confidence": 35}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 11, "source_confidence": 10, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 93, "source_start_line": 283, "source_end_line": 290, "source_confidence": 10, "target_start_line": 87, "target_confidence": 35}, {"target_end_line": 43, "source_start_line": 46, "source_end_line": 48, "source_confidence": 10, "target_start_line": 41, "target_confidence": 35}, {"target_end_line": 80, "source_start_line": 95, "source_end_line": 96, "source_confidence": 10, "target_start_line": 79, "target_confidence": 35}, {"target_end_line": 18, "source_start_line": 27, "source_end_line": 30, "source_confidence": 10, "target_start_line": 15, "target_confidence": 35}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 11, "source_confidence": 10, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 93, "source_start_line": 283, "source_end_line": 290, "source_confidence": 10, "target_start_line": 87, "target_confidence": 35}, {"target_end_line": 43, "source_start_line": 46, "source_end_line": 48, "source_confidence": 10, "target_start_line": 41, "target_confidence": 35}, {"target_end_line": 80, "source_start_line": 95, "source_end_line": 96, "source_confidence": 10, "target_start_line": 79, "target_confidence": 35}, {"target_end_line": 18, "source_start_line": 27, "source_end_line": 30, "source_confidence": 10, "target_start_line": 15, "target_confidence": 35}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 11, "source_confidence": 10, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 93, "source_start_line": 283, "source_end_line": 290, "source_confidence": 10, "target_start_line": 87, "target_confidence": 35}, {"target_end_line": 43, "source_start_line": 46, "source_end_line": 48, "source_confidence": 10, "target_start_line": 41, "target_confidence": 35}, {"target_end_line": 80, "source_start_line": 95, "source_end_line": 96, "source_confidence": 10, "target_start_line": 79, "target_confidence": 35}, {"target_end_line": 18, "source_start_line": 27, "source_end_line": 30, "source_confidence": 10, "target_start_line": 15, "target_confidence": 35}]}, {"source": "susielu_b6bdb82045c2aa8225f5", "value": 147, "target": "lorenzopub_724338d57f5e06b346413074d2ed8627", "links": [{"target_end_line": 147, "source_start_line": 1, "source_end_line": 147, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "SioKCronin_3920aabb6f5a7528d7b00d7fcb872369", "value": 124, "target": "lorenzopub_8501a1752dbdda8db80b1a3cb0afb7d7", "links": [{"target_end_line": 124, "source_start_line": 1, "source_end_line": 124, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "jamescwaters_9f096e2c9d9f2bcfbf56c21d26519500", "value": 25, "target": "lorenzopub_35c309fc1c476f756ccc569584432b60", "links": [{"target_end_line": 24, "source_start_line": 2, "source_end_line": 7, "source_confidence": 26, "target_start_line": 19, "target_confidence": 42}, {"target_end_line": 39, "source_start_line": 41, "source_end_line": 45, "source_confidence": 26, "target_start_line": 35, "target_confidence": 42}, {"target_end_line": 34, "source_start_line": 28, "source_end_line": 32, "source_confidence": 26, "target_start_line": 30, "target_confidence": 42}, {"target_end_line": 64, "source_start_line": 58, "source_end_line": 66, "source_confidence": 26, "target_start_line": 56, "target_confidence": 42}, {"target_end_line": 24, "source_start_line": 2, "source_end_line": 7, "source_confidence": 26, "target_start_line": 19, "target_confidence": 42}, {"target_end_line": 39, "source_start_line": 41, "source_end_line": 45, "source_confidence": 26, "target_start_line": 35, "target_confidence": 42}, {"target_end_line": 34, "source_start_line": 28, "source_end_line": 32, "source_confidence": 26, "target_start_line": 30, "target_confidence": 42}, {"target_end_line": 64, "source_start_line": 58, "source_end_line": 66, "source_confidence": 26, "target_start_line": 56, "target_confidence": 42}, {"target_end_line": 24, "source_start_line": 2, "source_end_line": 7, "source_confidence": 26, "target_start_line": 19, "target_confidence": 42}, {"target_end_line": 39, "source_start_line": 41, "source_end_line": 45, "source_confidence": 26, "target_start_line": 35, "target_confidence": 42}, {"target_end_line": 34, "source_start_line": 28, "source_end_line": 32, "source_confidence": 26, "target_start_line": 30, "target_confidence": 42}, {"target_end_line": 64, "source_start_line": 58, "source_end_line": 66, "source_confidence": 26, "target_start_line": 56, "target_confidence": 42}, {"target_end_line": 24, "source_start_line": 2, "source_end_line": 7, "source_confidence": 26, "target_start_line": 19, "target_confidence": 42}, {"target_end_line": 39, "source_start_line": 41, "source_end_line": 45, "source_confidence": 26, "target_start_line": 35, "target_confidence": 42}, {"target_end_line": 34, "source_start_line": 28, "source_end_line": 32, "source_confidence": 26, "target_start_line": 30, "target_confidence": 42}, {"target_end_line": 64, "source_start_line": 58, "source_end_line": 66, "source_confidence": 26, "target_start_line": 56, "target_confidence": 42}]}, {"source": "syntagmatic_77c7f7e8802e8824eed473dd065c450b", "value": 181, "target": "lorenzopub_cefd53c7fc67018efba0fe0460cdfd2a", "links": [{"target_end_line": 181, "source_start_line": 1, "source_end_line": 181, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "altocumulus_5adf28e7b13447b8a1e309ed98fcb07a", "value": 146, "target": "domhorvath_ba3aa4bdb0652fcd8b98c59a33fcea1d", "links": [{"target_end_line": 146, "source_start_line": 1, "source_end_line": 146, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "mbostock_2675ff61ea5e063ede2b5d63c08020c7", "value": 46, "target": "TomStanczyk_8cd26aabc37de17d837a85eeb3b420d5", "links": [{"target_end_line": 130, "source_start_line": 51, "source_end_line": 69, "source_confidence": 56, "target_start_line": 113, "target_confidence": 32}, {"target_end_line": 97, "source_start_line": 33, "source_end_line": 50, "source_confidence": 56, "target_start_line": 80, "target_confidence": 32}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 19, "source_confidence": 56, "target_start_line": 26, "target_confidence": 32}, {"target_end_line": 130, "source_start_line": 51, "source_end_line": 69, "source_confidence": 56, "target_start_line": 113, "target_confidence": 32}, {"target_end_line": 97, "source_start_line": 33, "source_end_line": 50, "source_confidence": 56, "target_start_line": 80, "target_confidence": 32}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 19, "source_confidence": 56, "target_start_line": 26, "target_confidence": 32}, {"target_end_line": 130, "source_start_line": 51, "source_end_line": 69, "source_confidence": 56, "target_start_line": 113, "target_confidence": 32}, {"target_end_line": 97, "source_start_line": 33, "source_end_line": 50, "source_confidence": 56, "target_start_line": 80, "target_confidence": 32}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 19, "source_confidence": 56, "target_start_line": 26, "target_confidence": 32}]}, {"source": "mbostock_2675ff61ea5e063ede2b5d63c08020c7", "value": 37, "target": "domhorvath_58de10fe06d7f26e47a6e0c900cf1693", "links": [{"target_end_line": 110, "source_start_line": 51, "source_end_line": 69, "source_confidence": 58, "target_start_line": 92, "target_confidence": 36}, {"target_end_line": 84, "source_start_line": 44, "source_end_line": 51, "source_confidence": 58, "target_start_line": 77, "target_confidence": 36}, {"target_end_line": 49, "source_start_line": 7, "source_end_line": 9, "source_confidence": 58, "target_start_line": 47, "target_confidence": 36}, {"target_end_line": 61, "source_start_line": 21, "source_end_line": 26, "source_confidence": 58, "target_start_line": 55, "target_confidence": 36}, {"target_end_line": 110, "source_start_line": 51, "source_end_line": 69, "source_confidence": 58, "target_start_line": 92, "target_confidence": 36}, {"target_end_line": 84, "source_start_line": 44, "source_end_line": 51, "source_confidence": 58, "target_start_line": 77, "target_confidence": 36}, {"target_end_line": 49, "source_start_line": 7, "source_end_line": 9, "source_confidence": 58, "target_start_line": 47, "target_confidence": 36}, {"target_end_line": 61, "source_start_line": 21, "source_end_line": 26, "source_confidence": 58, "target_start_line": 55, "target_confidence": 36}, {"target_end_line": 110, "source_start_line": 51, "source_end_line": 69, "source_confidence": 58, "target_start_line": 92, "target_confidence": 36}, {"target_end_line": 84, "source_start_line": 44, "source_end_line": 51, "source_confidence": 58, "target_start_line": 77, "target_confidence": 36}, {"target_end_line": 49, "source_start_line": 7, "source_end_line": 9, "source_confidence": 58, "target_start_line": 47, "target_confidence": 36}, {"target_end_line": 61, "source_start_line": 21, "source_end_line": 26, "source_confidence": 58, "target_start_line": 55, "target_confidence": 36}, {"target_end_line": 110, "source_start_line": 51, "source_end_line": 69, "source_confidence": 58, "target_start_line": 92, "target_confidence": 36}, {"target_end_line": 84, "source_start_line": 44, "source_end_line": 51, "source_confidence": 58, "target_start_line": 77, "target_confidence": 36}, {"target_end_line": 49, "source_start_line": 7, "source_end_line": 9, "source_confidence": 58, "target_start_line": 47, "target_confidence": 36}, {"target_end_line": 61, "source_start_line": 21, "source_end_line": 26, "source_confidence": 58, "target_start_line": 55, "target_confidence": 36}]}, {"source": "monkeycycle_d60ee1118fc7f307bd5b1cc64193e67e", "value": 83, "target": "john-guerra_95c69d114b7d59f934c282fc643d2234", "links": [{"target_end_line": 86, "source_start_line": 33, "source_end_line": 84, "source_confidence": 95, "target_start_line": 35, "target_confidence": 95}, {"target_end_line": 31, "source_start_line": 1, "source_end_line": 31, "source_confidence": 95, "target_start_line": 1, "target_confidence": 95}, {"target_end_line": 86, "source_start_line": 33, "source_end_line": 84, "source_confidence": 95, "target_start_line": 35, "target_confidence": 95}, {"target_end_line": 31, "source_start_line": 1, "source_end_line": 31, "source_confidence": 95, "target_start_line": 1, "target_confidence": 95}]}, {"source": "larsenmtl_e3b8b7c2ca4787f77d78f58d41c3da91", "value": 48, "target": "sadbumblebee_cf960bdddd53ae832d980f5c70c48e5c", "links": [{"target_end_line": 48, "source_start_line": 84, "source_end_line": 102, "source_confidence": 12, "target_start_line": 39, "target_confidence": 7}, {"target_end_line": 96, "source_start_line": 163, "source_end_line": 170, "source_confidence": 12, "target_start_line": 95, "target_confidence": 7}, {"target_end_line": 90, "source_start_line": 148, "source_end_line": 155, "source_confidence": 12, "target_start_line": 83, "target_confidence": 7}, {"target_end_line": 11, "source_start_line": 64, "source_end_line": 68, "source_confidence": 12, "target_start_line": 9, "target_confidence": 7}, {"target_end_line": 56, "source_start_line": 129, "source_end_line": 136, "source_confidence": 12, "target_start_line": 51, "target_confidence": 7}, {"target_end_line": 48, "source_start_line": 84, "source_end_line": 102, "source_confidence": 12, "target_start_line": 39, "target_confidence": 7}, {"target_end_line": 96, "source_start_line": 163, "source_end_line": 170, "source_confidence": 12, "target_start_line": 95, "target_confidence": 7}, {"target_end_line": 90, "source_start_line": 148, "source_end_line": 155, "source_confidence": 12, "target_start_line": 83, "target_confidence": 7}, {"target_end_line": 11, "source_start_line": 64, "source_end_line": 68, "source_confidence": 12, "target_start_line": 9, "target_confidence": 7}, {"target_end_line": 56, "source_start_line": 129, "source_end_line": 136, "source_confidence": 12, "target_start_line": 51, "target_confidence": 7}, {"target_end_line": 48, "source_start_line": 84, "source_end_line": 102, "source_confidence": 12, "target_start_line": 39, "target_confidence": 7}, {"target_end_line": 96, "source_start_line": 163, "source_end_line": 170, "source_confidence": 12, "target_start_line": 95, "target_confidence": 7}, {"target_end_line": 90, "source_start_line": 148, "source_end_line": 155, "source_confidence": 12, "target_start_line": 83, "target_confidence": 7}, {"target_end_line": 11, "source_start_line": 64, "source_end_line": 68, "source_confidence": 12, "target_start_line": 9, "target_confidence": 7}, {"target_end_line": 56, "source_start_line": 129, "source_end_line": 136, "source_confidence": 12, "target_start_line": 51, "target_confidence": 7}, {"target_end_line": 48, "source_start_line": 84, "source_end_line": 102, "source_confidence": 12, "target_start_line": 39, "target_confidence": 7}, {"target_end_line": 96, "source_start_line": 163, "source_end_line": 170, "source_confidence": 12, "target_start_line": 95, "target_confidence": 7}, {"target_end_line": 90, "source_start_line": 148, "source_end_line": 155, "source_confidence": 12, "target_start_line": 83, "target_confidence": 7}, {"target_end_line": 11, "source_start_line": 64, "source_end_line": 68, "source_confidence": 12, "target_start_line": 9, "target_confidence": 7}, {"target_end_line": 56, "source_start_line": 129, "source_end_line": 136, "source_confidence": 12, "target_start_line": 51, "target_confidence": 7}, {"target_end_line": 48, "source_start_line": 84, "source_end_line": 102, "source_confidence": 12, "target_start_line": 39, "target_confidence": 7}, {"target_end_line": 96, "source_start_line": 163, "source_end_line": 170, "source_confidence": 12, "target_start_line": 95, "target_confidence": 7}, {"target_end_line": 90, "source_start_line": 148, "source_end_line": 155, "source_confidence": 12, "target_start_line": 83, "target_confidence": 7}, {"target_end_line": 11, "source_start_line": 64, "source_end_line": 68, "source_confidence": 12, "target_start_line": 9, "target_confidence": 7}, {"target_end_line": 56, "source_start_line": 129, "source_end_line": 136, "source_confidence": 12, "target_start_line": 51, "target_confidence": 7}]}, {"source": "alandunning_cfb7dcd7951826b9eacd54f0647f48d3", "value": 38, "target": "BBischof_75ed4879d155c31412f58840480ae1d6", "links": [{"target_end_line": 96, "source_start_line": 76, "source_end_line": 90, "source_confidence": 34, "target_start_line": 82, "target_confidence": 36}, {"target_end_line": 74, "source_start_line": 44, "source_end_line": 57, "source_confidence": 34, "target_start_line": 61, "target_confidence": 36}, {"target_end_line": 39, "source_start_line": 17, "source_end_line": 24, "source_confidence": 34, "target_start_line": 31, "target_confidence": 36}, {"target_end_line": 96, "source_start_line": 76, "source_end_line": 90, "source_confidence": 34, "target_start_line": 82, "target_confidence": 36}, {"target_end_line": 74, "source_start_line": 44, "source_end_line": 57, "source_confidence": 34, "target_start_line": 61, "target_confidence": 36}, {"target_end_line": 39, "source_start_line": 17, "source_end_line": 24, "source_confidence": 34, "target_start_line": 31, "target_confidence": 36}, {"target_end_line": 96, "source_start_line": 76, "source_end_line": 90, "source_confidence": 34, "target_start_line": 82, "target_confidence": 36}, {"target_end_line": 74, "source_start_line": 44, "source_end_line": 57, "source_confidence": 34, "target_start_line": 61, "target_confidence": 36}, {"target_end_line": 39, "source_start_line": 17, "source_end_line": 24, "source_confidence": 34, "target_start_line": 31, "target_confidence": 36}]}, {"source": "sjhavanur_d335d1ea06102c47d653", "value": 46, "target": "DarienLiang_cbcdffc45ac4e6edf5cac6f193dff5c6", "links": [{"target_end_line": 47, "source_start_line": 158, "source_end_line": 203, "source_confidence": 23, "target_start_line": 2, "target_confidence": 96}]}, {"source": "nbremer_4b81aff1ff5907ac3db1780a1c6a5e01", "value": 22, "target": "nstrayer_4e613a109707f0487da87300097ca502", "links": [{"target_end_line": 33, "source_start_line": 26, "source_end_line": 31, "source_confidence": 12, "target_start_line": 29, "target_confidence": 9}, {"target_end_line": 244, "source_start_line": 4, "source_end_line": 4, "source_confidence": 12, "target_start_line": 244, "target_confidence": 9}, {"target_end_line": 89, "source_start_line": 35, "source_end_line": 37, "source_confidence": 12, "target_start_line": 88, "target_confidence": 9}, {"target_end_line": 303, "source_start_line": 5, "source_end_line": 7, "source_confidence": 12, "target_start_line": 303, "target_confidence": 9}, {"target_end_line": 88, "source_start_line": 31, "source_end_line": 33, "source_confidence": 12, "target_start_line": 86, "target_confidence": 9}, {"target_end_line": 278, "source_start_line": 109, "source_end_line": 114, "source_confidence": 12, "target_start_line": 271, "target_confidence": 9}, {"target_end_line": 33, "source_start_line": 26, "source_end_line": 31, "source_confidence": 12, "target_start_line": 29, "target_confidence": 9}, {"target_end_line": 244, "source_start_line": 4, "source_end_line": 4, "source_confidence": 12, "target_start_line": 244, "target_confidence": 9}, {"target_end_line": 89, "source_start_line": 35, "source_end_line": 37, "source_confidence": 12, "target_start_line": 88, "target_confidence": 9}, {"target_end_line": 303, "source_start_line": 5, "source_end_line": 7, "source_confidence": 12, "target_start_line": 303, "target_confidence": 9}, {"target_end_line": 88, "source_start_line": 31, "source_end_line": 33, "source_confidence": 12, "target_start_line": 86, "target_confidence": 9}, {"target_end_line": 278, "source_start_line": 109, "source_end_line": 114, "source_confidence": 12, "target_start_line": 271, "target_confidence": 9}, {"target_end_line": 33, "source_start_line": 26, "source_end_line": 31, "source_confidence": 12, "target_start_line": 29, "target_confidence": 9}, {"target_end_line": 244, "source_start_line": 4, "source_end_line": 4, "source_confidence": 12, "target_start_line": 244, "target_confidence": 9}, {"target_end_line": 89, "source_start_line": 35, "source_end_line": 37, "source_confidence": 12, "target_start_line": 88, "target_confidence": 9}, {"target_end_line": 303, "source_start_line": 5, "source_end_line": 7, "source_confidence": 12, "target_start_line": 303, "target_confidence": 9}, {"target_end_line": 88, "source_start_line": 31, "source_end_line": 33, "source_confidence": 12, "target_start_line": 86, "target_confidence": 9}, {"target_end_line": 278, "source_start_line": 109, "source_end_line": 114, "source_confidence": 12, "target_start_line": 271, "target_confidence": 9}, {"target_end_line": 33, "source_start_line": 26, "source_end_line": 31, "source_confidence": 12, "target_start_line": 29, "target_confidence": 9}, {"target_end_line": 244, "source_start_line": 4, "source_end_line": 4, "source_confidence": 12, "target_start_line": 244, "target_confidence": 9}, {"target_end_line": 89, "source_start_line": 35, "source_end_line": 37, "source_confidence": 12, "target_start_line": 88, "target_confidence": 9}, {"target_end_line": 303, "source_start_line": 5, "source_end_line": 7, "source_confidence": 12, "target_start_line": 303, "target_confidence": 9}, {"target_end_line": 88, "source_start_line": 31, "source_end_line": 33, "source_confidence": 12, "target_start_line": 86, "target_confidence": 9}, {"target_end_line": 278, "source_start_line": 109, "source_end_line": 114, "source_confidence": 12, "target_start_line": 271, "target_confidence": 9}, {"target_end_line": 33, "source_start_line": 26, "source_end_line": 31, "source_confidence": 12, "target_start_line": 29, "target_confidence": 9}, {"target_end_line": 244, "source_start_line": 4, "source_end_line": 4, "source_confidence": 12, "target_start_line": 244, "target_confidence": 9}, {"target_end_line": 89, "source_start_line": 35, "source_end_line": 37, "source_confidence": 12, "target_start_line": 88, "target_confidence": 9}, {"target_end_line": 303, "source_start_line": 5, "source_end_line": 7, "source_confidence": 12, "target_start_line": 303, "target_confidence": 9}, {"target_end_line": 88, "source_start_line": 31, "source_end_line": 33, "source_confidence": 12, "target_start_line": 86, "target_confidence": 9}, {"target_end_line": 278, "source_start_line": 109, "source_end_line": 114, "source_confidence": 12, "target_start_line": 271, "target_confidence": 9}, {"target_end_line": 33, "source_start_line": 26, "source_end_line": 31, "source_confidence": 12, "target_start_line": 29, "target_confidence": 9}, {"target_end_line": 244, "source_start_line": 4, "source_end_line": 4, "source_confidence": 12, "target_start_line": 244, "target_confidence": 9}, {"target_end_line": 89, "source_start_line": 35, "source_end_line": 37, "source_confidence": 12, "target_start_line": 88, "target_confidence": 9}, {"target_end_line": 303, "source_start_line": 5, "source_end_line": 7, "source_confidence": 12, "target_start_line": 303, "target_confidence": 9}, {"target_end_line": 88, "source_start_line": 31, "source_end_line": 33, "source_confidence": 12, "target_start_line": 86, "target_confidence": 9}, {"target_end_line": 278, "source_start_line": 109, "source_end_line": 114, "source_confidence": 12, "target_start_line": 271, "target_confidence": 9}]}, {"source": "MatteoTomassetti_a19238e5b706a43b68bf", "value": 196, "target": "apolan_dd366a46fdf36a20c13d1b9feb4bf360", "links": [{"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}]}, {"source": "MatteoTomassetti_a19238e5b706a43b68bf", "value": 196, "target": "apolan_16c60f32c2cbc187689546b0228cc9cf", "links": [{"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}]}, {"source": "MatteoTomassetti_a19238e5b706a43b68bf", "value": 196, "target": "apolan_9ccd1766410275a223944f7782308669", "links": [{"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}]}, {"source": "MatteoTomassetti_a19238e5b706a43b68bf", "value": 196, "target": "apolan_9dd1ec5c7529a419db0336bb906fd192", "links": [{"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 212, "source_start_line": 81, "source_end_line": 173, "source_confidence": 87, "target_start_line": 110, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 7, "source_end_line": 45, "source_confidence": 87, "target_start_line": 7, "target_confidence": 45}, {"target_end_line": 100, "source_start_line": 45, "source_end_line": 81, "source_confidence": 87, "target_start_line": 62, "target_confidence": 45}, {"target_end_line": 217, "source_start_line": 174, "source_end_line": 178, "source_confidence": 87, "target_start_line": 213, "target_confidence": 45}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 87, "target_start_line": 1, "target_confidence": 45}]}, {"source": "siakan_acdd8937258d5aca3001995316e0b6ca", "value": 27, "target": "mashehu_de923d763a53d523596ba81c6d1f3233", "links": [{"target_end_line": 83, "source_start_line": 23, "source_end_line": 27, "source_confidence": 36, "target_start_line": 79, "target_confidence": 16}, {"target_end_line": 124, "source_start_line": 72, "source_end_line": 81, "source_confidence": 36, "target_start_line": 115, "target_confidence": 16}, {"target_end_line": 68, "source_start_line": 3, "source_end_line": 7, "source_confidence": 36, "target_start_line": 63, "target_confidence": 16}, {"target_end_line": 131, "source_start_line": 83, "source_end_line": 88, "source_confidence": 36, "target_start_line": 126, "target_confidence": 16}, {"target_end_line": 83, "source_start_line": 23, "source_end_line": 27, "source_confidence": 36, "target_start_line": 79, "target_confidence": 16}, {"target_end_line": 124, "source_start_line": 72, "source_end_line": 81, "source_confidence": 36, "target_start_line": 115, "target_confidence": 16}, {"target_end_line": 68, "source_start_line": 3, "source_end_line": 7, "source_confidence": 36, "target_start_line": 63, "target_confidence": 16}, {"target_end_line": 131, "source_start_line": 83, "source_end_line": 88, "source_confidence": 36, "target_start_line": 126, "target_confidence": 16}, {"target_end_line": 83, "source_start_line": 23, "source_end_line": 27, "source_confidence": 36, "target_start_line": 79, "target_confidence": 16}, {"target_end_line": 124, "source_start_line": 72, "source_end_line": 81, "source_confidence": 36, "target_start_line": 115, "target_confidence": 16}, {"target_end_line": 68, "source_start_line": 3, "source_end_line": 7, "source_confidence": 36, "target_start_line": 63, "target_confidence": 16}, {"target_end_line": 131, "source_start_line": 83, "source_end_line": 88, "source_confidence": 36, "target_start_line": 126, "target_confidence": 16}, {"target_end_line": 83, "source_start_line": 23, "source_end_line": 27, "source_confidence": 36, "target_start_line": 79, "target_confidence": 16}, {"target_end_line": 124, "source_start_line": 72, "source_end_line": 81, "source_confidence": 36, "target_start_line": 115, "target_confidence": 16}, {"target_end_line": 68, "source_start_line": 3, "source_end_line": 7, "source_confidence": 36, "target_start_line": 63, "target_confidence": 16}, {"target_end_line": 131, "source_start_line": 83, "source_end_line": 88, "source_confidence": 36, "target_start_line": 126, "target_confidence": 16}]}, {"source": "trinary_b1a5f453c51231cd7bb5", "value": 42, "target": "alandunning_cfb7dcd7951826b9eacd54f0647f48d3", "links": [{"target_end_line": 90, "source_start_line": 82, "source_end_line": 96, "source_confidence": 39, "target_start_line": 76, "target_confidence": 37}, {"target_end_line": 28, "source_start_line": 32, "source_end_line": 44, "source_confidence": 39, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 57, "source_start_line": 61, "source_end_line": 74, "source_confidence": 39, "target_start_line": 44, "target_confidence": 37}, {"target_end_line": 90, "source_start_line": 82, "source_end_line": 96, "source_confidence": 39, "target_start_line": 76, "target_confidence": 37}, {"target_end_line": 28, "source_start_line": 32, "source_end_line": 44, "source_confidence": 39, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 57, "source_start_line": 61, "source_end_line": 74, "source_confidence": 39, "target_start_line": 44, "target_confidence": 37}, {"target_end_line": 90, "source_start_line": 82, "source_end_line": 96, "source_confidence": 39, "target_start_line": 76, "target_confidence": 37}, {"target_end_line": 28, "source_start_line": 32, "source_end_line": 44, "source_confidence": 39, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 57, "source_start_line": 61, "source_end_line": 74, "source_confidence": 39, "target_start_line": 44, "target_confidence": 37}]}, {"source": "john-guerra_32be58cf91f613d45c687095bad39432", "value": 143, "target": "aldrejota_aced8f7034616f7c4800a62e1db14cd4", "links": [{"target_end_line": 143, "source_start_line": 1, "source_end_line": 143, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "Lincoln-Jiang_3a92f6973f730a2f4bb4", "value": 129, "target": "john-guerra_32be58cf91f613d45c687095bad39432", "links": [{"target_end_line": 143, "source_start_line": 127, "source_end_line": 191, "source_confidence": 65, "target_start_line": 81, "target_confidence": 88}, {"target_end_line": 61, "source_start_line": 54, "source_end_line": 77, "source_confidence": 65, "target_start_line": 39, "target_confidence": 88}, {"target_end_line": 21, "source_start_line": 11, "source_end_line": 22, "source_confidence": 65, "target_start_line": 11, "target_confidence": 88}, {"target_end_line": 74, "source_start_line": 99, "source_end_line": 113, "source_confidence": 65, "target_start_line": 63, "target_confidence": 88}, {"target_end_line": 80, "source_start_line": 119, "source_end_line": 126, "source_confidence": 65, "target_start_line": 75, "target_confidence": 88}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 8, "source_confidence": 65, "target_start_line": 3, "target_confidence": 88}, {"target_end_line": 143, "source_start_line": 127, "source_end_line": 191, "source_confidence": 65, "target_start_line": 81, "target_confidence": 88}, {"target_end_line": 61, "source_start_line": 54, "source_end_line": 77, "source_confidence": 65, "target_start_line": 39, "target_confidence": 88}, {"target_end_line": 21, "source_start_line": 11, "source_end_line": 22, "source_confidence": 65, "target_start_line": 11, "target_confidence": 88}, {"target_end_line": 74, "source_start_line": 99, "source_end_line": 113, "source_confidence": 65, "target_start_line": 63, "target_confidence": 88}, {"target_end_line": 80, "source_start_line": 119, "source_end_line": 126, "source_confidence": 65, "target_start_line": 75, "target_confidence": 88}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 8, "source_confidence": 65, "target_start_line": 3, "target_confidence": 88}, {"target_end_line": 143, "source_start_line": 127, "source_end_line": 191, "source_confidence": 65, "target_start_line": 81, "target_confidence": 88}, {"target_end_line": 61, "source_start_line": 54, "source_end_line": 77, "source_confidence": 65, "target_start_line": 39, "target_confidence": 88}, {"target_end_line": 21, "source_start_line": 11, "source_end_line": 22, "source_confidence": 65, "target_start_line": 11, "target_confidence": 88}, {"target_end_line": 74, "source_start_line": 99, "source_end_line": 113, "source_confidence": 65, "target_start_line": 63, "target_confidence": 88}, {"target_end_line": 80, "source_start_line": 119, "source_end_line": 126, "source_confidence": 65, "target_start_line": 75, "target_confidence": 88}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 8, "source_confidence": 65, "target_start_line": 3, "target_confidence": 88}, {"target_end_line": 143, "source_start_line": 127, "source_end_line": 191, "source_confidence": 65, "target_start_line": 81, "target_confidence": 88}, {"target_end_line": 61, "source_start_line": 54, "source_end_line": 77, "source_confidence": 65, "target_start_line": 39, "target_confidence": 88}, {"target_end_line": 21, "source_start_line": 11, "source_end_line": 22, "source_confidence": 65, "target_start_line": 11, "target_confidence": 88}, {"target_end_line": 74, "source_start_line": 99, "source_end_line": 113, "source_confidence": 65, "target_start_line": 63, "target_confidence": 88}, {"target_end_line": 80, "source_start_line": 119, "source_end_line": 126, "source_confidence": 65, "target_start_line": 75, "target_confidence": 88}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 8, "source_confidence": 65, "target_start_line": 3, "target_confidence": 88}, {"target_end_line": 143, "source_start_line": 127, "source_end_line": 191, "source_confidence": 65, "target_start_line": 81, "target_confidence": 88}, {"target_end_line": 61, "source_start_line": 54, "source_end_line": 77, "source_confidence": 65, "target_start_line": 39, "target_confidence": 88}, {"target_end_line": 21, "source_start_line": 11, "source_end_line": 22, "source_confidence": 65, "target_start_line": 11, "target_confidence": 88}, {"target_end_line": 74, "source_start_line": 99, "source_end_line": 113, "source_confidence": 65, "target_start_line": 63, "target_confidence": 88}, {"target_end_line": 80, "source_start_line": 119, "source_end_line": 126, "source_confidence": 65, "target_start_line": 75, "target_confidence": 88}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 8, "source_confidence": 65, "target_start_line": 3, "target_confidence": 88}, {"target_end_line": 143, "source_start_line": 127, "source_end_line": 191, "source_confidence": 65, "target_start_line": 81, "target_confidence": 88}, {"target_end_line": 61, "source_start_line": 54, "source_end_line": 77, "source_confidence": 65, "target_start_line": 39, "target_confidence": 88}, {"target_end_line": 21, "source_start_line": 11, "source_end_line": 22, "source_confidence": 65, "target_start_line": 11, "target_confidence": 88}, {"target_end_line": 74, "source_start_line": 99, "source_end_line": 113, "source_confidence": 65, "target_start_line": 63, "target_confidence": 88}, {"target_end_line": 80, "source_start_line": 119, "source_end_line": 126, "source_confidence": 65, "target_start_line": 75, "target_confidence": 88}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 8, "source_confidence": 65, "target_start_line": 3, "target_confidence": 88}]}, {"source": "EmbraceLife_46ea6d4b4a967301d47cae4e98f9283d", "value": 40, "target": "sampathweb_842d0945d9002ade5fd62457357318e3", "links": [{"target_end_line": 12, "source_start_line": 5, "source_end_line": 13, "source_confidence": 55, "target_start_line": 4, "target_confidence": 31}, {"target_end_line": 69, "source_start_line": 35, "source_end_line": 46, "source_confidence": 55, "target_start_line": 59, "target_confidence": 31}, {"target_end_line": 92, "source_start_line": 54, "source_end_line": 63, "source_confidence": 55, "target_start_line": 84, "target_confidence": 31}, {"target_end_line": 58, "source_start_line": 26, "source_end_line": 34, "source_confidence": 55, "target_start_line": 51, "target_confidence": 31}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 13, "source_confidence": 55, "target_start_line": 4, "target_confidence": 31}, {"target_end_line": 69, "source_start_line": 35, "source_end_line": 46, "source_confidence": 55, "target_start_line": 59, "target_confidence": 31}, {"target_end_line": 92, "source_start_line": 54, "source_end_line": 63, "source_confidence": 55, "target_start_line": 84, "target_confidence": 31}, {"target_end_line": 58, "source_start_line": 26, "source_end_line": 34, "source_confidence": 55, "target_start_line": 51, "target_confidence": 31}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 13, "source_confidence": 55, "target_start_line": 4, "target_confidence": 31}, {"target_end_line": 69, "source_start_line": 35, "source_end_line": 46, "source_confidence": 55, "target_start_line": 59, "target_confidence": 31}, {"target_end_line": 92, "source_start_line": 54, "source_end_line": 63, "source_confidence": 55, "target_start_line": 84, "target_confidence": 31}, {"target_end_line": 58, "source_start_line": 26, "source_end_line": 34, "source_confidence": 55, "target_start_line": 51, "target_confidence": 31}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 13, "source_confidence": 55, "target_start_line": 4, "target_confidence": 31}, {"target_end_line": 69, "source_start_line": 35, "source_end_line": 46, "source_confidence": 55, "target_start_line": 59, "target_confidence": 31}, {"target_end_line": 92, "source_start_line": 54, "source_end_line": 63, "source_confidence": 55, "target_start_line": 84, "target_confidence": 31}, {"target_end_line": 58, "source_start_line": 26, "source_end_line": 34, "source_confidence": 55, "target_start_line": 51, "target_confidence": 31}]}, {"source": "mbostock_431a331294d2b5ddd33f947cf4c81319", "value": 40, "target": "eric-bunch_8551a58b746bb5673d5fdf7d723b765b", "links": [{"target_end_line": 38, "source_start_line": 18, "source_end_line": 26, "source_confidence": 43, "target_start_line": 30, "target_confidence": 10}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 6, "source_confidence": 43, "target_start_line": 5, "target_confidence": 10}, {"target_end_line": 78, "source_start_line": 27, "source_end_line": 35, "source_confidence": 43, "target_start_line": 69, "target_confidence": 10}, {"target_end_line": 130, "source_start_line": 48, "source_end_line": 55, "source_confidence": 43, "target_start_line": 123, "target_confidence": 10}, {"target_end_line": 298, "source_start_line": 71, "source_end_line": 80, "source_confidence": 43, "target_start_line": 289, "target_confidence": 10}, {"target_end_line": 38, "source_start_line": 18, "source_end_line": 26, "source_confidence": 43, "target_start_line": 30, "target_confidence": 10}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 6, "source_confidence": 43, "target_start_line": 5, "target_confidence": 10}, {"target_end_line": 78, "source_start_line": 27, "source_end_line": 35, "source_confidence": 43, "target_start_line": 69, "target_confidence": 10}, {"target_end_line": 130, "source_start_line": 48, "source_end_line": 55, "source_confidence": 43, "target_start_line": 123, "target_confidence": 10}, {"target_end_line": 298, "source_start_line": 71, "source_end_line": 80, "source_confidence": 43, "target_start_line": 289, "target_confidence": 10}, {"target_end_line": 38, "source_start_line": 18, "source_end_line": 26, "source_confidence": 43, "target_start_line": 30, "target_confidence": 10}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 6, "source_confidence": 43, "target_start_line": 5, "target_confidence": 10}, {"target_end_line": 78, "source_start_line": 27, "source_end_line": 35, "source_confidence": 43, "target_start_line": 69, "target_confidence": 10}, {"target_end_line": 130, "source_start_line": 48, "source_end_line": 55, "source_confidence": 43, "target_start_line": 123, "target_confidence": 10}, {"target_end_line": 298, "source_start_line": 71, "source_end_line": 80, "source_confidence": 43, "target_start_line": 289, "target_confidence": 10}, {"target_end_line": 38, "source_start_line": 18, "source_end_line": 26, "source_confidence": 43, "target_start_line": 30, "target_confidence": 10}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 6, "source_confidence": 43, "target_start_line": 5, "target_confidence": 10}, {"target_end_line": 78, "source_start_line": 27, "source_end_line": 35, "source_confidence": 43, "target_start_line": 69, "target_confidence": 10}, {"target_end_line": 130, "source_start_line": 48, "source_end_line": 55, "source_confidence": 43, "target_start_line": 123, "target_confidence": 10}, {"target_end_line": 298, "source_start_line": 71, "source_end_line": 80, "source_confidence": 43, "target_start_line": 289, "target_confidence": 10}, {"target_end_line": 38, "source_start_line": 18, "source_end_line": 26, "source_confidence": 43, "target_start_line": 30, "target_confidence": 10}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 6, "source_confidence": 43, "target_start_line": 5, "target_confidence": 10}, {"target_end_line": 78, "source_start_line": 27, "source_end_line": 35, "source_confidence": 43, "target_start_line": 69, "target_confidence": 10}, {"target_end_line": 130, "source_start_line": 48, "source_end_line": 55, "source_confidence": 43, "target_start_line": 123, "target_confidence": 10}, {"target_end_line": 298, "source_start_line": 71, "source_end_line": 80, "source_confidence": 43, "target_start_line": 289, "target_confidence": 10}]}, {"source": "tonyhschu_067d977d6d4ae7224dcebdf3775d9e7e", "value": 42, "target": "lookoutjames_c7b8d5053c25ad1b3744509dd957caee", "links": [{"target_end_line": 50, "source_start_line": 158, "source_end_line": 172, "source_confidence": 12, "target_start_line": 36, "target_confidence": 23}, {"target_end_line": 19, "source_start_line": 26, "source_end_line": 39, "source_confidence": 12, "target_start_line": 6, "target_confidence": 23}, {"target_end_line": 145, "source_start_line": 324, "source_end_line": 333, "source_confidence": 12, "target_start_line": 137, "target_confidence": 23}, {"target_end_line": 22, "source_start_line": 42, "source_end_line": 44, "source_confidence": 12, "target_start_line": 20, "target_confidence": 23}, {"target_end_line": 50, "source_start_line": 158, "source_end_line": 172, "source_confidence": 12, "target_start_line": 36, "target_confidence": 23}, {"target_end_line": 19, "source_start_line": 26, "source_end_line": 39, "source_confidence": 12, "target_start_line": 6, "target_confidence": 23}, {"target_end_line": 145, "source_start_line": 324, "source_end_line": 333, "source_confidence": 12, "target_start_line": 137, "target_confidence": 23}, {"target_end_line": 22, "source_start_line": 42, "source_end_line": 44, "source_confidence": 12, "target_start_line": 20, "target_confidence": 23}, {"target_end_line": 50, "source_start_line": 158, "source_end_line": 172, "source_confidence": 12, "target_start_line": 36, "target_confidence": 23}, {"target_end_line": 19, "source_start_line": 26, "source_end_line": 39, "source_confidence": 12, "target_start_line": 6, "target_confidence": 23}, {"target_end_line": 145, "source_start_line": 324, "source_end_line": 333, "source_confidence": 12, "target_start_line": 137, "target_confidence": 23}, {"target_end_line": 22, "source_start_line": 42, "source_end_line": 44, "source_confidence": 12, "target_start_line": 20, "target_confidence": 23}, {"target_end_line": 50, "source_start_line": 158, "source_end_line": 172, "source_confidence": 12, "target_start_line": 36, "target_confidence": 23}, {"target_end_line": 19, "source_start_line": 26, "source_end_line": 39, "source_confidence": 12, "target_start_line": 6, "target_confidence": 23}, {"target_end_line": 145, "source_start_line": 324, "source_end_line": 333, "source_confidence": 12, "target_start_line": 137, "target_confidence": 23}, {"target_end_line": 22, "source_start_line": 42, "source_end_line": 44, "source_confidence": 12, "target_start_line": 20, "target_confidence": 23}]}, {"source": "sivartravis_9a5ba3d2f25d1eebc912", "value": 124, "target": "SioKCronin_3920aabb6f5a7528d7b00d7fcb872369", "links": [{"target_end_line": 124, "source_start_line": 1, "source_end_line": 124, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "nbremer_4258eb64322c55156097c21f384715a7", "value": 52, "target": "RicCheng_b052a92ccd0d07379b57b1d6f838c62a", "links": [{"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}]}, {"source": "syntagmatic_0613ee9324e989a6fb6b", "value": 40, "target": "seemantk_59d7ef82df88de9f2a3a33e484291363", "links": [{"target_end_line": 46, "source_start_line": 53, "source_end_line": 66, "source_confidence": 44, "target_start_line": 32, "target_confidence": 82}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 44, "target_start_line": 1, "target_confidence": 82}, {"target_end_line": 31, "source_start_line": 39, "source_end_line": 47, "source_confidence": 44, "target_start_line": 23, "target_confidence": 82}, {"target_end_line": 46, "source_start_line": 53, "source_end_line": 66, "source_confidence": 44, "target_start_line": 32, "target_confidence": 82}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 44, "target_start_line": 1, "target_confidence": 82}, {"target_end_line": 31, "source_start_line": 39, "source_end_line": 47, "source_confidence": 44, "target_start_line": 23, "target_confidence": 82}, {"target_end_line": 46, "source_start_line": 53, "source_end_line": 66, "source_confidence": 44, "target_start_line": 32, "target_confidence": 82}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 44, "target_start_line": 1, "target_confidence": 82}, {"target_end_line": 31, "source_start_line": 39, "source_end_line": 47, "source_confidence": 44, "target_start_line": 23, "target_confidence": 82}]}, {"source": "Hypercubed_a9e3ff233070ff0af19a", "value": 98, "target": "timelyportfolio_48be457b8cdcea8fecb8d5d8fb53aee1", "links": [{"target_end_line": 2, "source_start_line": 3, "source_end_line": 100, "source_confidence": 54, "target_start_line": 2, "target_confidence": 32}]}, {"source": "gpenam92_8b0a8b7d625a4ba00bbad94b30535097", "value": 50, "target": "jcnesci_abdda0bcf5206b3be3e6853e677eb0a8", "links": [{"target_end_line": 146, "source_start_line": 9, "source_end_line": 22, "source_confidence": 64, "target_start_line": 133, "target_confidence": 17}, {"target_end_line": 165, "source_start_line": 43, "source_end_line": 61, "source_confidence": 64, "target_start_line": 149, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 64, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 173, "source_start_line": 62, "source_end_line": 67, "source_confidence": 64, "target_start_line": 168, "target_confidence": 17}, {"target_end_line": 10, "source_start_line": 33, "source_end_line": 35, "source_confidence": 64, "target_start_line": 8, "target_confidence": 17}, {"target_end_line": 149, "source_start_line": 41, "source_end_line": 43, "source_confidence": 64, "target_start_line": 146, "target_confidence": 17}, {"target_end_line": 146, "source_start_line": 9, "source_end_line": 22, "source_confidence": 64, "target_start_line": 133, "target_confidence": 17}, {"target_end_line": 165, "source_start_line": 43, "source_end_line": 61, "source_confidence": 64, "target_start_line": 149, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 64, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 173, "source_start_line": 62, "source_end_line": 67, "source_confidence": 64, "target_start_line": 168, "target_confidence": 17}, {"target_end_line": 10, "source_start_line": 33, "source_end_line": 35, "source_confidence": 64, "target_start_line": 8, "target_confidence": 17}, {"target_end_line": 149, "source_start_line": 41, "source_end_line": 43, "source_confidence": 64, "target_start_line": 146, "target_confidence": 17}, {"target_end_line": 146, "source_start_line": 9, "source_end_line": 22, "source_confidence": 64, "target_start_line": 133, "target_confidence": 17}, {"target_end_line": 165, "source_start_line": 43, "source_end_line": 61, "source_confidence": 64, "target_start_line": 149, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 64, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 173, "source_start_line": 62, "source_end_line": 67, "source_confidence": 64, "target_start_line": 168, "target_confidence": 17}, {"target_end_line": 10, "source_start_line": 33, "source_end_line": 35, "source_confidence": 64, "target_start_line": 8, "target_confidence": 17}, {"target_end_line": 149, "source_start_line": 41, "source_end_line": 43, "source_confidence": 64, "target_start_line": 146, "target_confidence": 17}, {"target_end_line": 146, "source_start_line": 9, "source_end_line": 22, "source_confidence": 64, "target_start_line": 133, "target_confidence": 17}, {"target_end_line": 165, "source_start_line": 43, "source_end_line": 61, "source_confidence": 64, "target_start_line": 149, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 64, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 173, "source_start_line": 62, "source_end_line": 67, "source_confidence": 64, "target_start_line": 168, "target_confidence": 17}, {"target_end_line": 10, "source_start_line": 33, "source_end_line": 35, "source_confidence": 64, "target_start_line": 8, "target_confidence": 17}, {"target_end_line": 149, "source_start_line": 41, "source_end_line": 43, "source_confidence": 64, "target_start_line": 146, "target_confidence": 17}, {"target_end_line": 146, "source_start_line": 9, "source_end_line": 22, "source_confidence": 64, "target_start_line": 133, "target_confidence": 17}, {"target_end_line": 165, "source_start_line": 43, "source_end_line": 61, "source_confidence": 64, "target_start_line": 149, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 64, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 173, "source_start_line": 62, "source_end_line": 67, "source_confidence": 64, "target_start_line": 168, "target_confidence": 17}, {"target_end_line": 10, "source_start_line": 33, "source_end_line": 35, "source_confidence": 64, "target_start_line": 8, "target_confidence": 17}, {"target_end_line": 149, "source_start_line": 41, "source_end_line": 43, "source_confidence": 64, "target_start_line": 146, "target_confidence": 17}, {"target_end_line": 146, "source_start_line": 9, "source_end_line": 22, "source_confidence": 64, "target_start_line": 133, "target_confidence": 17}, {"target_end_line": 165, "source_start_line": 43, "source_end_line": 61, "source_confidence": 64, "target_start_line": 149, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 64, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 173, "source_start_line": 62, "source_end_line": 67, "source_confidence": 64, "target_start_line": 168, "target_confidence": 17}, {"target_end_line": 10, "source_start_line": 33, "source_end_line": 35, "source_confidence": 64, "target_start_line": 8, "target_confidence": 17}, {"target_end_line": 149, "source_start_line": 41, "source_end_line": 43, "source_confidence": 64, "target_start_line": 146, "target_confidence": 17}]}, {"source": "cjhin_8872a492d44694ecf5a883642926f19c", "value": 36, "target": "nbremer_4258eb64322c55156097c21f384715a7", "links": [{"target_end_line": 75, "source_start_line": 166, "source_end_line": 168, "source_confidence": 13, "target_start_line": 75, "target_confidence": 5}, {"target_end_line": 4, "source_start_line": 8, "source_end_line": 12, "source_confidence": 13, "target_start_line": 4, "target_confidence": 5}, {"target_end_line": 34, "source_start_line": 16, "source_end_line": 20, "source_confidence": 13, "target_start_line": 32, "target_confidence": 5}, {"target_end_line": 35, "source_start_line": 73, "source_end_line": 79, "source_confidence": 13, "target_start_line": 35, "target_confidence": 5}, {"target_end_line": 74, "source_start_line": 93, "source_end_line": 97, "source_confidence": 13, "target_start_line": 72, "target_confidence": 5}, {"target_end_line": 93, "source_start_line": 141, "source_end_line": 144, "source_confidence": 13, "target_start_line": 91, "target_confidence": 5}, {"target_end_line": 94, "source_start_line": 169, "source_end_line": 171, "source_confidence": 13, "target_start_line": 94, "target_confidence": 5}, {"target_end_line": 117, "source_start_line": 186, "source_end_line": 189, "source_confidence": 13, "target_start_line": 115, "target_confidence": 5}, {"target_end_line": 75, "source_start_line": 166, "source_end_line": 168, "source_confidence": 13, "target_start_line": 75, "target_confidence": 5}, {"target_end_line": 4, "source_start_line": 8, "source_end_line": 12, "source_confidence": 13, "target_start_line": 4, "target_confidence": 5}, {"target_end_line": 34, "source_start_line": 16, "source_end_line": 20, "source_confidence": 13, "target_start_line": 32, "target_confidence": 5}, {"target_end_line": 35, "source_start_line": 73, "source_end_line": 79, "source_confidence": 13, "target_start_line": 35, "target_confidence": 5}, {"target_end_line": 74, "source_start_line": 93, "source_end_line": 97, "source_confidence": 13, "target_start_line": 72, "target_confidence": 5}, {"target_end_line": 93, "source_start_line": 141, "source_end_line": 144, "source_confidence": 13, "target_start_line": 91, "target_confidence": 5}, {"target_end_line": 94, "source_start_line": 169, "source_end_line": 171, "source_confidence": 13, "target_start_line": 94, "target_confidence": 5}, {"target_end_line": 117, "source_start_line": 186, "source_end_line": 189, "source_confidence": 13, "target_start_line": 115, "target_confidence": 5}, {"target_end_line": 75, "source_start_line": 166, "source_end_line": 168, "source_confidence": 13, "target_start_line": 75, "target_confidence": 5}, {"target_end_line": 4, "source_start_line": 8, "source_end_line": 12, "source_confidence": 13, "target_start_line": 4, "target_confidence": 5}, {"target_end_line": 34, "source_start_line": 16, "source_end_line": 20, "source_confidence": 13, "target_start_line": 32, "target_confidence": 5}, {"target_end_line": 35, "source_start_line": 73, "source_end_line": 79, "source_confidence": 13, "target_start_line": 35, "target_confidence": 5}, {"target_end_line": 74, "source_start_line": 93, "source_end_line": 97, "source_confidence": 13, "target_start_line": 72, "target_confidence": 5}, {"target_end_line": 93, "source_start_line": 141, "source_end_line": 144, "source_confidence": 13, "target_start_line": 91, "target_confidence": 5}, {"target_end_line": 94, "source_start_line": 169, "source_end_line": 171, "source_confidence": 13, "target_start_line": 94, "target_confidence": 5}, {"target_end_line": 117, "source_start_line": 186, "source_end_line": 189, "source_confidence": 13, "target_start_line": 115, "target_confidence": 5}, {"target_end_line": 75, "source_start_line": 166, "source_end_line": 168, "source_confidence": 13, "target_start_line": 75, "target_confidence": 5}, {"target_end_line": 4, "source_start_line": 8, "source_end_line": 12, "source_confidence": 13, "target_start_line": 4, "target_confidence": 5}, {"target_end_line": 34, "source_start_line": 16, "source_end_line": 20, "source_confidence": 13, "target_start_line": 32, "target_confidence": 5}, {"target_end_line": 35, "source_start_line": 73, "source_end_line": 79, "source_confidence": 13, "target_start_line": 35, "target_confidence": 5}, {"target_end_line": 74, "source_start_line": 93, "source_end_line": 97, "source_confidence": 13, "target_start_line": 72, "target_confidence": 5}, {"target_end_line": 93, "source_start_line": 141, "source_end_line": 144, "source_confidence": 13, "target_start_line": 91, "target_confidence": 5}, {"target_end_line": 94, "source_start_line": 169, "source_end_line": 171, "source_confidence": 13, "target_start_line": 94, "target_confidence": 5}, {"target_end_line": 117, "source_start_line": 186, "source_end_line": 189, "source_confidence": 13, "target_start_line": 115, "target_confidence": 5}, {"target_end_line": 75, "source_start_line": 166, "source_end_line": 168, "source_confidence": 13, "target_start_line": 75, "target_confidence": 5}, {"target_end_line": 4, "source_start_line": 8, "source_end_line": 12, "source_confidence": 13, "target_start_line": 4, "target_confidence": 5}, {"target_end_line": 34, "source_start_line": 16, "source_end_line": 20, "source_confidence": 13, "target_start_line": 32, "target_confidence": 5}, {"target_end_line": 35, "source_start_line": 73, "source_end_line": 79, "source_confidence": 13, "target_start_line": 35, "target_confidence": 5}, {"target_end_line": 74, "source_start_line": 93, "source_end_line": 97, "source_confidence": 13, "target_start_line": 72, "target_confidence": 5}, {"target_end_line": 93, "source_start_line": 141, "source_end_line": 144, "source_confidence": 13, "target_start_line": 91, "target_confidence": 5}, {"target_end_line": 94, "source_start_line": 169, "source_end_line": 171, "source_confidence": 13, "target_start_line": 94, "target_confidence": 5}, {"target_end_line": 117, "source_start_line": 186, "source_end_line": 189, "source_confidence": 13, "target_start_line": 115, "target_confidence": 5}, {"target_end_line": 75, "source_start_line": 166, "source_end_line": 168, "source_confidence": 13, "target_start_line": 75, "target_confidence": 5}, {"target_end_line": 4, "source_start_line": 8, "source_end_line": 12, "source_confidence": 13, "target_start_line": 4, "target_confidence": 5}, {"target_end_line": 34, "source_start_line": 16, "source_end_line": 20, "source_confidence": 13, "target_start_line": 32, "target_confidence": 5}, {"target_end_line": 35, "source_start_line": 73, "source_end_line": 79, "source_confidence": 13, "target_start_line": 35, "target_confidence": 5}, {"target_end_line": 74, "source_start_line": 93, "source_end_line": 97, "source_confidence": 13, "target_start_line": 72, "target_confidence": 5}, {"target_end_line": 93, "source_start_line": 141, "source_end_line": 144, "source_confidence": 13, "target_start_line": 91, "target_confidence": 5}, {"target_end_line": 94, "source_start_line": 169, "source_end_line": 171, "source_confidence": 13, "target_start_line": 94, "target_confidence": 5}, {"target_end_line": 117, "source_start_line": 186, "source_end_line": 189, "source_confidence": 13, "target_start_line": 115, "target_confidence": 5}, {"target_end_line": 75, "source_start_line": 166, "source_end_line": 168, "source_confidence": 13, "target_start_line": 75, "target_confidence": 5}, {"target_end_line": 4, "source_start_line": 8, "source_end_line": 12, "source_confidence": 13, "target_start_line": 4, "target_confidence": 5}, {"target_end_line": 34, "source_start_line": 16, "source_end_line": 20, "source_confidence": 13, "target_start_line": 32, "target_confidence": 5}, {"target_end_line": 35, "source_start_line": 73, "source_end_line": 79, "source_confidence": 13, "target_start_line": 35, "target_confidence": 5}, {"target_end_line": 74, "source_start_line": 93, "source_end_line": 97, "source_confidence": 13, "target_start_line": 72, "target_confidence": 5}, {"target_end_line": 93, "source_start_line": 141, "source_end_line": 144, "source_confidence": 13, "target_start_line": 91, "target_confidence": 5}, {"target_end_line": 94, "source_start_line": 169, "source_end_line": 171, "source_confidence": 13, "target_start_line": 94, "target_confidence": 5}, {"target_end_line": 117, "source_start_line": 186, "source_end_line": 189, "source_confidence": 13, "target_start_line": 115, "target_confidence": 5}, {"target_end_line": 75, "source_start_line": 166, "source_end_line": 168, "source_confidence": 13, "target_start_line": 75, "target_confidence": 5}, {"target_end_line": 4, "source_start_line": 8, "source_end_line": 12, "source_confidence": 13, "target_start_line": 4, "target_confidence": 5}, {"target_end_line": 34, "source_start_line": 16, "source_end_line": 20, "source_confidence": 13, "target_start_line": 32, "target_confidence": 5}, {"target_end_line": 35, "source_start_line": 73, "source_end_line": 79, "source_confidence": 13, "target_start_line": 35, "target_confidence": 5}, {"target_end_line": 74, "source_start_line": 93, "source_end_line": 97, "source_confidence": 13, "target_start_line": 72, "target_confidence": 5}, {"target_end_line": 93, "source_start_line": 141, "source_end_line": 144, "source_confidence": 13, "target_start_line": 91, "target_confidence": 5}, {"target_end_line": 94, "source_start_line": 169, "source_end_line": 171, "source_confidence": 13, "target_start_line": 94, "target_confidence": 5}, {"target_end_line": 117, "source_start_line": 186, "source_end_line": 189, "source_confidence": 13, "target_start_line": 115, "target_confidence": 5}]}, {"source": "EmbraceLife_7efd1f9031beecb5252e57e944e1a440", "value": 56, "target": "mbostock_431a331294d2b5ddd33f947cf4c81319", "links": [{"target_end_line": 26, "source_start_line": 56, "source_end_line": 66, "source_confidence": 24, "target_start_line": 18, "target_confidence": 62}, {"target_end_line": 55, "source_start_line": 89, "source_end_line": 101, "source_confidence": 24, "target_start_line": 43, "target_confidence": 62}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 7, "source_confidence": 24, "target_start_line": 4, "target_confidence": 62}, {"target_end_line": 42, "source_start_line": 79, "source_end_line": 83, "source_confidence": 24, "target_start_line": 37, "target_confidence": 62}, {"target_end_line": 35, "source_start_line": 11, "source_end_line": 19, "source_confidence": 24, "target_start_line": 28, "target_confidence": 62}, {"target_end_line": 11, "source_start_line": 33, "source_end_line": 37, "source_confidence": 24, "target_start_line": 8, "target_confidence": 62}, {"target_end_line": 80, "source_start_line": 187, "source_end_line": 196, "source_confidence": 24, "target_start_line": 71, "target_confidence": 62}, {"target_end_line": 26, "source_start_line": 56, "source_end_line": 66, "source_confidence": 24, "target_start_line": 18, "target_confidence": 62}, {"target_end_line": 55, "source_start_line": 89, "source_end_line": 101, "source_confidence": 24, "target_start_line": 43, "target_confidence": 62}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 7, "source_confidence": 24, "target_start_line": 4, "target_confidence": 62}, {"target_end_line": 42, "source_start_line": 79, "source_end_line": 83, "source_confidence": 24, "target_start_line": 37, "target_confidence": 62}, {"target_end_line": 35, "source_start_line": 11, "source_end_line": 19, "source_confidence": 24, "target_start_line": 28, "target_confidence": 62}, {"target_end_line": 11, "source_start_line": 33, "source_end_line": 37, "source_confidence": 24, "target_start_line": 8, "target_confidence": 62}, {"target_end_line": 80, "source_start_line": 187, "source_end_line": 196, "source_confidence": 24, "target_start_line": 71, "target_confidence": 62}, {"target_end_line": 26, "source_start_line": 56, "source_end_line": 66, "source_confidence": 24, "target_start_line": 18, "target_confidence": 62}, {"target_end_line": 55, "source_start_line": 89, "source_end_line": 101, "source_confidence": 24, "target_start_line": 43, "target_confidence": 62}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 7, "source_confidence": 24, "target_start_line": 4, "target_confidence": 62}, {"target_end_line": 42, "source_start_line": 79, "source_end_line": 83, "source_confidence": 24, "target_start_line": 37, "target_confidence": 62}, {"target_end_line": 35, "source_start_line": 11, "source_end_line": 19, "source_confidence": 24, "target_start_line": 28, "target_confidence": 62}, {"target_end_line": 11, "source_start_line": 33, "source_end_line": 37, "source_confidence": 24, "target_start_line": 8, "target_confidence": 62}, {"target_end_line": 80, "source_start_line": 187, "source_end_line": 196, "source_confidence": 24, "target_start_line": 71, "target_confidence": 62}, {"target_end_line": 26, "source_start_line": 56, "source_end_line": 66, "source_confidence": 24, "target_start_line": 18, "target_confidence": 62}, {"target_end_line": 55, "source_start_line": 89, "source_end_line": 101, "source_confidence": 24, "target_start_line": 43, "target_confidence": 62}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 7, "source_confidence": 24, "target_start_line": 4, "target_confidence": 62}, {"target_end_line": 42, "source_start_line": 79, "source_end_line": 83, "source_confidence": 24, "target_start_line": 37, "target_confidence": 62}, {"target_end_line": 35, "source_start_line": 11, "source_end_line": 19, "source_confidence": 24, "target_start_line": 28, "target_confidence": 62}, {"target_end_line": 11, "source_start_line": 33, "source_end_line": 37, "source_confidence": 24, "target_start_line": 8, "target_confidence": 62}, {"target_end_line": 80, "source_start_line": 187, "source_end_line": 196, "source_confidence": 24, "target_start_line": 71, "target_confidence": 62}, {"target_end_line": 26, "source_start_line": 56, "source_end_line": 66, "source_confidence": 24, "target_start_line": 18, "target_confidence": 62}, {"target_end_line": 55, "source_start_line": 89, "source_end_line": 101, "source_confidence": 24, "target_start_line": 43, "target_confidence": 62}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 7, "source_confidence": 24, "target_start_line": 4, "target_confidence": 62}, {"target_end_line": 42, "source_start_line": 79, "source_end_line": 83, "source_confidence": 24, "target_start_line": 37, "target_confidence": 62}, {"target_end_line": 35, "source_start_line": 11, "source_end_line": 19, "source_confidence": 24, "target_start_line": 28, "target_confidence": 62}, {"target_end_line": 11, "source_start_line": 33, "source_end_line": 37, "source_confidence": 24, "target_start_line": 8, "target_confidence": 62}, {"target_end_line": 80, "source_start_line": 187, "source_end_line": 196, "source_confidence": 24, "target_start_line": 71, "target_confidence": 62}, {"target_end_line": 26, "source_start_line": 56, "source_end_line": 66, "source_confidence": 24, "target_start_line": 18, "target_confidence": 62}, {"target_end_line": 55, "source_start_line": 89, "source_end_line": 101, "source_confidence": 24, "target_start_line": 43, "target_confidence": 62}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 7, "source_confidence": 24, "target_start_line": 4, "target_confidence": 62}, {"target_end_line": 42, "source_start_line": 79, "source_end_line": 83, "source_confidence": 24, "target_start_line": 37, "target_confidence": 62}, {"target_end_line": 35, "source_start_line": 11, "source_end_line": 19, "source_confidence": 24, "target_start_line": 28, "target_confidence": 62}, {"target_end_line": 11, "source_start_line": 33, "source_end_line": 37, "source_confidence": 24, "target_start_line": 8, "target_confidence": 62}, {"target_end_line": 80, "source_start_line": 187, "source_end_line": 196, "source_confidence": 24, "target_start_line": 71, "target_confidence": 62}, {"target_end_line": 26, "source_start_line": 56, "source_end_line": 66, "source_confidence": 24, "target_start_line": 18, "target_confidence": 62}, {"target_end_line": 55, "source_start_line": 89, "source_end_line": 101, "source_confidence": 24, "target_start_line": 43, "target_confidence": 62}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 7, "source_confidence": 24, "target_start_line": 4, "target_confidence": 62}, {"target_end_line": 42, "source_start_line": 79, "source_end_line": 83, "source_confidence": 24, "target_start_line": 37, "target_confidence": 62}, {"target_end_line": 35, "source_start_line": 11, "source_end_line": 19, "source_confidence": 24, "target_start_line": 28, "target_confidence": 62}, {"target_end_line": 11, "source_start_line": 33, "source_end_line": 37, "source_confidence": 24, "target_start_line": 8, "target_confidence": 62}, {"target_end_line": 80, "source_start_line": 187, "source_end_line": 196, "source_confidence": 24, "target_start_line": 71, "target_confidence": 62}]}, {"source": "carlosfelipetorres_9eea8d99357e9f7e02208dd63a68358c", "value": 35, "target": "f94f_78faa9b93b7d92e3bc39cd258f4ec90b", "links": [{"target_end_line": 180, "source_start_line": 23, "source_end_line": 27, "source_confidence": 28, "target_start_line": 176, "target_confidence": 15}, {"target_end_line": 196, "source_start_line": 40, "source_end_line": 49, "source_confidence": 28, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 140, "source_start_line": 3, "source_end_line": 7, "source_confidence": 28, "target_start_line": 136, "target_confidence": 15}, {"target_end_line": 300, "source_start_line": 106, "source_end_line": 111, "source_confidence": 28, "target_start_line": 295, "target_confidence": 15}, {"target_end_line": 214, "source_start_line": 63, "source_end_line": 71, "source_confidence": 28, "target_start_line": 205, "target_confidence": 15}, {"target_end_line": 180, "source_start_line": 23, "source_end_line": 27, "source_confidence": 28, "target_start_line": 176, "target_confidence": 15}, {"target_end_line": 196, "source_start_line": 40, "source_end_line": 49, "source_confidence": 28, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 140, "source_start_line": 3, "source_end_line": 7, "source_confidence": 28, "target_start_line": 136, "target_confidence": 15}, {"target_end_line": 300, "source_start_line": 106, "source_end_line": 111, "source_confidence": 28, "target_start_line": 295, "target_confidence": 15}, {"target_end_line": 214, "source_start_line": 63, "source_end_line": 71, "source_confidence": 28, "target_start_line": 205, "target_confidence": 15}, {"target_end_line": 180, "source_start_line": 23, "source_end_line": 27, "source_confidence": 28, "target_start_line": 176, "target_confidence": 15}, {"target_end_line": 196, "source_start_line": 40, "source_end_line": 49, "source_confidence": 28, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 140, "source_start_line": 3, "source_end_line": 7, "source_confidence": 28, "target_start_line": 136, "target_confidence": 15}, {"target_end_line": 300, "source_start_line": 106, "source_end_line": 111, "source_confidence": 28, "target_start_line": 295, "target_confidence": 15}, {"target_end_line": 214, "source_start_line": 63, "source_end_line": 71, "source_confidence": 28, "target_start_line": 205, "target_confidence": 15}, {"target_end_line": 180, "source_start_line": 23, "source_end_line": 27, "source_confidence": 28, "target_start_line": 176, "target_confidence": 15}, {"target_end_line": 196, "source_start_line": 40, "source_end_line": 49, "source_confidence": 28, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 140, "source_start_line": 3, "source_end_line": 7, "source_confidence": 28, "target_start_line": 136, "target_confidence": 15}, {"target_end_line": 300, "source_start_line": 106, "source_end_line": 111, "source_confidence": 28, "target_start_line": 295, "target_confidence": 15}, {"target_end_line": 214, "source_start_line": 63, "source_end_line": 71, "source_confidence": 28, "target_start_line": 205, "target_confidence": 15}, {"target_end_line": 180, "source_start_line": 23, "source_end_line": 27, "source_confidence": 28, "target_start_line": 176, "target_confidence": 15}, {"target_end_line": 196, "source_start_line": 40, "source_end_line": 49, "source_confidence": 28, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 140, "source_start_line": 3, "source_end_line": 7, "source_confidence": 28, "target_start_line": 136, "target_confidence": 15}, {"target_end_line": 300, "source_start_line": 106, "source_end_line": 111, "source_confidence": 28, "target_start_line": 295, "target_confidence": 15}, {"target_end_line": 214, "source_start_line": 63, "source_end_line": 71, "source_confidence": 28, "target_start_line": 205, "target_confidence": 15}]}, {"source": "elt12njo_dd2391dc0796b79d7291aff529e50fb0", "value": 20, "target": "gpenam92_8b0a8b7d625a4ba00bbad94b30535097", "links": [{"target_end_line": 37, "source_start_line": 18, "source_end_line": 23, "source_confidence": 45, "target_start_line": 33, "target_confidence": 43}, {"target_end_line": 68, "source_start_line": 40, "source_end_line": 47, "source_confidence": 45, "target_start_line": 61, "target_confidence": 43}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 45, "target_start_line": 3, "target_confidence": 43}, {"target_end_line": 43, "source_start_line": 35, "source_end_line": 37, "source_confidence": 45, "target_start_line": 41, "target_confidence": 43}, {"target_end_line": 37, "source_start_line": 18, "source_end_line": 23, "source_confidence": 45, "target_start_line": 33, "target_confidence": 43}, {"target_end_line": 68, "source_start_line": 40, "source_end_line": 47, "source_confidence": 45, "target_start_line": 61, "target_confidence": 43}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 45, "target_start_line": 3, "target_confidence": 43}, {"target_end_line": 43, "source_start_line": 35, "source_end_line": 37, "source_confidence": 45, "target_start_line": 41, "target_confidence": 43}, {"target_end_line": 37, "source_start_line": 18, "source_end_line": 23, "source_confidence": 45, "target_start_line": 33, "target_confidence": 43}, {"target_end_line": 68, "source_start_line": 40, "source_end_line": 47, "source_confidence": 45, "target_start_line": 61, "target_confidence": 43}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 45, "target_start_line": 3, "target_confidence": 43}, {"target_end_line": 43, "source_start_line": 35, "source_end_line": 37, "source_confidence": 45, "target_start_line": 41, "target_confidence": 43}, {"target_end_line": 37, "source_start_line": 18, "source_end_line": 23, "source_confidence": 45, "target_start_line": 33, "target_confidence": 43}, {"target_end_line": 68, "source_start_line": 40, "source_end_line": 47, "source_confidence": 45, "target_start_line": 61, "target_confidence": 43}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 45, "target_start_line": 3, "target_confidence": 43}, {"target_end_line": 43, "source_start_line": 35, "source_end_line": 37, "source_confidence": 45, "target_start_line": 41, "target_confidence": 43}]}, {"source": "mbostock_afecf1ce04644ad9036ca146d2084895", "value": 33, "target": "syntagmatic_954b31aa8b8beb91b30ccb0c9e57f6ce", "links": [{"target_end_line": 104, "source_start_line": 76, "source_end_line": 99, "source_confidence": 30, "target_start_line": 81, "target_confidence": 34}, {"target_end_line": 63, "source_start_line": 39, "source_end_line": 46, "source_confidence": 30, "target_start_line": 55, "target_confidence": 34}, {"target_end_line": 104, "source_start_line": 76, "source_end_line": 99, "source_confidence": 30, "target_start_line": 81, "target_confidence": 34}, {"target_end_line": 63, "source_start_line": 39, "source_end_line": 46, "source_confidence": 30, "target_start_line": 55, "target_confidence": 34}]}, {"source": "f94f_b350177133aac8f945017b91d43b321c", "value": 33, "target": "elt12njo_dd2391dc0796b79d7291aff529e50fb0", "links": [{"target_end_line": 26, "source_start_line": 29, "source_end_line": 39, "source_confidence": 34, "target_start_line": 17, "target_confidence": 53}, {"target_end_line": 9, "source_start_line": 2, "source_end_line": 9, "source_confidence": 34, "target_start_line": 3, "target_confidence": 53}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 34, "target_start_line": 42, "target_confidence": 53}, {"target_end_line": 39, "source_start_line": 46, "source_end_line": 51, "source_confidence": 34, "target_start_line": 35, "target_confidence": 53}, {"target_end_line": 26, "source_start_line": 29, "source_end_line": 39, "source_confidence": 34, "target_start_line": 17, "target_confidence": 53}, {"target_end_line": 9, "source_start_line": 2, "source_end_line": 9, "source_confidence": 34, "target_start_line": 3, "target_confidence": 53}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 34, "target_start_line": 42, "target_confidence": 53}, {"target_end_line": 39, "source_start_line": 46, "source_end_line": 51, "source_confidence": 34, "target_start_line": 35, "target_confidence": 53}, {"target_end_line": 26, "source_start_line": 29, "source_end_line": 39, "source_confidence": 34, "target_start_line": 17, "target_confidence": 53}, {"target_end_line": 9, "source_start_line": 2, "source_end_line": 9, "source_confidence": 34, "target_start_line": 3, "target_confidence": 53}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 34, "target_start_line": 42, "target_confidence": 53}, {"target_end_line": 39, "source_start_line": 46, "source_end_line": 51, "source_confidence": 34, "target_start_line": 35, "target_confidence": 53}, {"target_end_line": 26, "source_start_line": 29, "source_end_line": 39, "source_confidence": 34, "target_start_line": 17, "target_confidence": 53}, {"target_end_line": 9, "source_start_line": 2, "source_end_line": 9, "source_confidence": 34, "target_start_line": 3, "target_confidence": 53}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 34, "target_start_line": 42, "target_confidence": 53}, {"target_end_line": 39, "source_start_line": 46, "source_end_line": 51, "source_confidence": 34, "target_start_line": 35, "target_confidence": 53}]}, {"source": "f94f_b350177133aac8f945017b91d43b321c", "value": 26, "target": "carlosfelipetorres_9eea8d99357e9f7e02208dd63a68358c", "links": [{"target_end_line": 27, "source_start_line": 29, "source_end_line": 35, "source_confidence": 29, "target_start_line": 21, "target_confidence": 25}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 29, "target_start_line": 3, "target_confidence": 25}, {"target_end_line": 45, "source_start_line": 46, "source_end_line": 48, "source_confidence": 29, "target_start_line": 40, "target_confidence": 25}, {"target_end_line": 75, "source_start_line": 99, "source_end_line": 103, "source_confidence": 29, "target_start_line": 72, "target_confidence": 25}, {"target_end_line": 72, "source_start_line": 93, "source_end_line": 99, "source_confidence": 29, "target_start_line": 67, "target_confidence": 25}, {"target_end_line": 27, "source_start_line": 29, "source_end_line": 35, "source_confidence": 29, "target_start_line": 21, "target_confidence": 25}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 29, "target_start_line": 3, "target_confidence": 25}, {"target_end_line": 45, "source_start_line": 46, "source_end_line": 48, "source_confidence": 29, "target_start_line": 40, "target_confidence": 25}, {"target_end_line": 75, "source_start_line": 99, "source_end_line": 103, "source_confidence": 29, "target_start_line": 72, "target_confidence": 25}, {"target_end_line": 72, "source_start_line": 93, "source_end_line": 99, "source_confidence": 29, "target_start_line": 67, "target_confidence": 25}, {"target_end_line": 27, "source_start_line": 29, "source_end_line": 35, "source_confidence": 29, "target_start_line": 21, "target_confidence": 25}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 29, "target_start_line": 3, "target_confidence": 25}, {"target_end_line": 45, "source_start_line": 46, "source_end_line": 48, "source_confidence": 29, "target_start_line": 40, "target_confidence": 25}, {"target_end_line": 75, "source_start_line": 99, "source_end_line": 103, "source_confidence": 29, "target_start_line": 72, "target_confidence": 25}, {"target_end_line": 72, "source_start_line": 93, "source_end_line": 99, "source_confidence": 29, "target_start_line": 67, "target_confidence": 25}, {"target_end_line": 27, "source_start_line": 29, "source_end_line": 35, "source_confidence": 29, "target_start_line": 21, "target_confidence": 25}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 29, "target_start_line": 3, "target_confidence": 25}, {"target_end_line": 45, "source_start_line": 46, "source_end_line": 48, "source_confidence": 29, "target_start_line": 40, "target_confidence": 25}, {"target_end_line": 75, "source_start_line": 99, "source_end_line": 103, "source_confidence": 29, "target_start_line": 72, "target_confidence": 25}, {"target_end_line": 72, "source_start_line": 93, "source_end_line": 99, "source_confidence": 29, "target_start_line": 67, "target_confidence": 25}, {"target_end_line": 27, "source_start_line": 29, "source_end_line": 35, "source_confidence": 29, "target_start_line": 21, "target_confidence": 25}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 29, "target_start_line": 3, "target_confidence": 25}, {"target_end_line": 45, "source_start_line": 46, "source_end_line": 48, "source_confidence": 29, "target_start_line": 40, "target_confidence": 25}, {"target_end_line": 75, "source_start_line": 99, "source_end_line": 103, "source_confidence": 29, "target_start_line": 72, "target_confidence": 25}, {"target_end_line": 72, "source_start_line": 93, "source_end_line": 99, "source_confidence": 29, "target_start_line": 67, "target_confidence": 25}]}, {"source": "apolan_6e76364f5e232260e82bb0a2e3745f1e", "value": 28, "target": "f94f_b350177133aac8f945017b91d43b321c", "links": [{"target_end_line": 35, "source_start_line": 49, "source_end_line": 53, "source_confidence": 25, "target_start_line": 30, "target_confidence": 33}, {"target_end_line": 5, "source_start_line": 33, "source_end_line": 35, "source_confidence": 25, "target_start_line": 3, "target_confidence": 33}, {"target_end_line": 99, "source_start_line": 82, "source_end_line": 87, "source_confidence": 25, "target_start_line": 93, "target_confidence": 33}, {"target_end_line": 11, "source_start_line": 37, "source_end_line": 38, "source_confidence": 25, "target_start_line": 9, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 39, "source_end_line": 40, "source_confidence": 25, "target_start_line": 19, "target_confidence": 33}, {"target_end_line": 48, "source_start_line": 57, "source_end_line": 58, "source_confidence": 25, "target_start_line": 47, "target_confidence": 33}, {"target_end_line": 35, "source_start_line": 49, "source_end_line": 53, "source_confidence": 25, "target_start_line": 30, "target_confidence": 33}, {"target_end_line": 5, "source_start_line": 33, "source_end_line": 35, "source_confidence": 25, "target_start_line": 3, "target_confidence": 33}, {"target_end_line": 99, "source_start_line": 82, "source_end_line": 87, "source_confidence": 25, "target_start_line": 93, "target_confidence": 33}, {"target_end_line": 11, "source_start_line": 37, "source_end_line": 38, "source_confidence": 25, "target_start_line": 9, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 39, "source_end_line": 40, "source_confidence": 25, "target_start_line": 19, "target_confidence": 33}, {"target_end_line": 48, "source_start_line": 57, "source_end_line": 58, "source_confidence": 25, "target_start_line": 47, "target_confidence": 33}, {"target_end_line": 35, "source_start_line": 49, "source_end_line": 53, "source_confidence": 25, "target_start_line": 30, "target_confidence": 33}, {"target_end_line": 5, "source_start_line": 33, "source_end_line": 35, "source_confidence": 25, "target_start_line": 3, "target_confidence": 33}, {"target_end_line": 99, "source_start_line": 82, "source_end_line": 87, "source_confidence": 25, "target_start_line": 93, "target_confidence": 33}, {"target_end_line": 11, "source_start_line": 37, "source_end_line": 38, "source_confidence": 25, "target_start_line": 9, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 39, "source_end_line": 40, "source_confidence": 25, "target_start_line": 19, "target_confidence": 33}, {"target_end_line": 48, "source_start_line": 57, "source_end_line": 58, "source_confidence": 25, "target_start_line": 47, "target_confidence": 33}, {"target_end_line": 35, "source_start_line": 49, "source_end_line": 53, "source_confidence": 25, "target_start_line": 30, "target_confidence": 33}, {"target_end_line": 5, "source_start_line": 33, "source_end_line": 35, "source_confidence": 25, "target_start_line": 3, "target_confidence": 33}, {"target_end_line": 99, "source_start_line": 82, "source_end_line": 87, "source_confidence": 25, "target_start_line": 93, "target_confidence": 33}, {"target_end_line": 11, "source_start_line": 37, "source_end_line": 38, "source_confidence": 25, "target_start_line": 9, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 39, "source_end_line": 40, "source_confidence": 25, "target_start_line": 19, "target_confidence": 33}, {"target_end_line": 48, "source_start_line": 57, "source_end_line": 58, "source_confidence": 25, "target_start_line": 47, "target_confidence": 33}, {"target_end_line": 35, "source_start_line": 49, "source_end_line": 53, "source_confidence": 25, "target_start_line": 30, "target_confidence": 33}, {"target_end_line": 5, "source_start_line": 33, "source_end_line": 35, "source_confidence": 25, "target_start_line": 3, "target_confidence": 33}, {"target_end_line": 99, "source_start_line": 82, "source_end_line": 87, "source_confidence": 25, "target_start_line": 93, "target_confidence": 33}, {"target_end_line": 11, "source_start_line": 37, "source_end_line": 38, "source_confidence": 25, "target_start_line": 9, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 39, "source_end_line": 40, "source_confidence": 25, "target_start_line": 19, "target_confidence": 33}, {"target_end_line": 48, "source_start_line": 57, "source_end_line": 58, "source_confidence": 25, "target_start_line": 47, "target_confidence": 33}, {"target_end_line": 35, "source_start_line": 49, "source_end_line": 53, "source_confidence": 25, "target_start_line": 30, "target_confidence": 33}, {"target_end_line": 5, "source_start_line": 33, "source_end_line": 35, "source_confidence": 25, "target_start_line": 3, "target_confidence": 33}, {"target_end_line": 99, "source_start_line": 82, "source_end_line": 87, "source_confidence": 25, "target_start_line": 93, "target_confidence": 33}, {"target_end_line": 11, "source_start_line": 37, "source_end_line": 38, "source_confidence": 25, "target_start_line": 9, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 39, "source_end_line": 40, "source_confidence": 25, "target_start_line": 19, "target_confidence": 33}, {"target_end_line": 48, "source_start_line": 57, "source_end_line": 58, "source_confidence": 25, "target_start_line": 47, "target_confidence": 33}]}, {"source": "mbostock_e6962a152275373f8504", "value": 42, "target": "atomiccc_8853e6d2ce880671782b432921fbf103", "links": [{"target_end_line": 74, "source_start_line": 51, "source_end_line": 58, "source_confidence": 77, "target_start_line": 67, "target_confidence": 52}, {"target_end_line": 45, "source_start_line": 37, "source_end_line": 41, "source_confidence": 77, "target_start_line": 41, "target_confidence": 52}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 77, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 77, "target_start_line": 12, "target_confidence": 52}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 28, "source_confidence": 77, "target_start_line": 25, "target_confidence": 52}, {"target_end_line": 35, "source_start_line": 32, "source_end_line": 35, "source_confidence": 77, "target_start_line": 31, "target_confidence": 52}, {"target_end_line": 50, "source_start_line": 43, "source_end_line": 46, "source_confidence": 77, "target_start_line": 47, "target_confidence": 52}, {"target_end_line": 74, "source_start_line": 51, "source_end_line": 58, "source_confidence": 77, "target_start_line": 67, "target_confidence": 52}, {"target_end_line": 45, "source_start_line": 37, "source_end_line": 41, "source_confidence": 77, "target_start_line": 41, "target_confidence": 52}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 77, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 77, "target_start_line": 12, "target_confidence": 52}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 28, "source_confidence": 77, "target_start_line": 25, "target_confidence": 52}, {"target_end_line": 35, "source_start_line": 32, "source_end_line": 35, "source_confidence": 77, "target_start_line": 31, "target_confidence": 52}, {"target_end_line": 50, "source_start_line": 43, "source_end_line": 46, "source_confidence": 77, "target_start_line": 47, "target_confidence": 52}, {"target_end_line": 74, "source_start_line": 51, "source_end_line": 58, "source_confidence": 77, "target_start_line": 67, "target_confidence": 52}, {"target_end_line": 45, "source_start_line": 37, "source_end_line": 41, "source_confidence": 77, "target_start_line": 41, "target_confidence": 52}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 77, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 77, "target_start_line": 12, "target_confidence": 52}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 28, "source_confidence": 77, "target_start_line": 25, "target_confidence": 52}, {"target_end_line": 35, "source_start_line": 32, "source_end_line": 35, "source_confidence": 77, "target_start_line": 31, "target_confidence": 52}, {"target_end_line": 50, "source_start_line": 43, "source_end_line": 46, "source_confidence": 77, "target_start_line": 47, "target_confidence": 52}, {"target_end_line": 74, "source_start_line": 51, "source_end_line": 58, "source_confidence": 77, "target_start_line": 67, "target_confidence": 52}, {"target_end_line": 45, "source_start_line": 37, "source_end_line": 41, "source_confidence": 77, "target_start_line": 41, "target_confidence": 52}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 77, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 77, "target_start_line": 12, "target_confidence": 52}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 28, "source_confidence": 77, "target_start_line": 25, "target_confidence": 52}, {"target_end_line": 35, "source_start_line": 32, "source_end_line": 35, "source_confidence": 77, "target_start_line": 31, "target_confidence": 52}, {"target_end_line": 50, "source_start_line": 43, "source_end_line": 46, "source_confidence": 77, "target_start_line": 47, "target_confidence": 52}, {"target_end_line": 74, "source_start_line": 51, "source_end_line": 58, "source_confidence": 77, "target_start_line": 67, "target_confidence": 52}, {"target_end_line": 45, "source_start_line": 37, "source_end_line": 41, "source_confidence": 77, "target_start_line": 41, "target_confidence": 52}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 77, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 77, "target_start_line": 12, "target_confidence": 52}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 28, "source_confidence": 77, "target_start_line": 25, "target_confidence": 52}, {"target_end_line": 35, "source_start_line": 32, "source_end_line": 35, "source_confidence": 77, "target_start_line": 31, "target_confidence": 52}, {"target_end_line": 50, "source_start_line": 43, "source_end_line": 46, "source_confidence": 77, "target_start_line": 47, "target_confidence": 52}, {"target_end_line": 74, "source_start_line": 51, "source_end_line": 58, "source_confidence": 77, "target_start_line": 67, "target_confidence": 52}, {"target_end_line": 45, "source_start_line": 37, "source_end_line": 41, "source_confidence": 77, "target_start_line": 41, "target_confidence": 52}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 77, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 77, "target_start_line": 12, "target_confidence": 52}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 28, "source_confidence": 77, "target_start_line": 25, "target_confidence": 52}, {"target_end_line": 35, "source_start_line": 32, "source_end_line": 35, "source_confidence": 77, "target_start_line": 31, "target_confidence": 52}, {"target_end_line": 50, "source_start_line": 43, "source_end_line": 46, "source_confidence": 77, "target_start_line": 47, "target_confidence": 52}, {"target_end_line": 74, "source_start_line": 51, "source_end_line": 58, "source_confidence": 77, "target_start_line": 67, "target_confidence": 52}, {"target_end_line": 45, "source_start_line": 37, "source_end_line": 41, "source_confidence": 77, "target_start_line": 41, "target_confidence": 52}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 77, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 77, "target_start_line": 12, "target_confidence": 52}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 28, "source_confidence": 77, "target_start_line": 25, "target_confidence": 52}, {"target_end_line": 35, "source_start_line": 32, "source_end_line": 35, "source_confidence": 77, "target_start_line": 31, "target_confidence": 52}, {"target_end_line": 50, "source_start_line": 43, "source_end_line": 46, "source_confidence": 77, "target_start_line": 47, "target_confidence": 52}]}, {"source": "apolan_6e76364f5e232260e82bb0a2e3745f1e", "value": 36, "target": "damayor_7ca91d178f923a4b5683bc28476c104f", "links": [{"target_end_line": 55, "source_start_line": 73, "source_end_line": 87, "source_confidence": 25, "target_start_line": 41, "target_confidence": 57}, {"target_end_line": 26, "source_start_line": 49, "source_end_line": 53, "source_confidence": 25, "target_start_line": 22, "target_confidence": 57}, {"target_end_line": 8, "source_start_line": 33, "source_end_line": 37, "source_confidence": 25, "target_start_line": 3, "target_confidence": 57}, {"target_end_line": 19, "source_start_line": 38, "source_end_line": 40, "source_confidence": 25, "target_start_line": 10, "target_confidence": 57}, {"target_end_line": 55, "source_start_line": 73, "source_end_line": 87, "source_confidence": 25, "target_start_line": 41, "target_confidence": 57}, {"target_end_line": 26, "source_start_line": 49, "source_end_line": 53, "source_confidence": 25, "target_start_line": 22, "target_confidence": 57}, {"target_end_line": 8, "source_start_line": 33, "source_end_line": 37, "source_confidence": 25, "target_start_line": 3, "target_confidence": 57}, {"target_end_line": 19, "source_start_line": 38, "source_end_line": 40, "source_confidence": 25, "target_start_line": 10, "target_confidence": 57}, {"target_end_line": 55, "source_start_line": 73, "source_end_line": 87, "source_confidence": 25, "target_start_line": 41, "target_confidence": 57}, {"target_end_line": 26, "source_start_line": 49, "source_end_line": 53, "source_confidence": 25, "target_start_line": 22, "target_confidence": 57}, {"target_end_line": 8, "source_start_line": 33, "source_end_line": 37, "source_confidence": 25, "target_start_line": 3, "target_confidence": 57}, {"target_end_line": 19, "source_start_line": 38, "source_end_line": 40, "source_confidence": 25, "target_start_line": 10, "target_confidence": 57}, {"target_end_line": 55, "source_start_line": 73, "source_end_line": 87, "source_confidence": 25, "target_start_line": 41, "target_confidence": 57}, {"target_end_line": 26, "source_start_line": 49, "source_end_line": 53, "source_confidence": 25, "target_start_line": 22, "target_confidence": 57}, {"target_end_line": 8, "source_start_line": 33, "source_end_line": 37, "source_confidence": 25, "target_start_line": 3, "target_confidence": 57}, {"target_end_line": 19, "source_start_line": 38, "source_end_line": 40, "source_confidence": 25, "target_start_line": 10, "target_confidence": 57}]}, {"source": "jcamilort_eb99b8c1d5c55ddbce0519293501ba3f", "value": 61, "target": "apolan_6e76364f5e232260e82bb0a2e3745f1e", "links": [{"target_end_line": 26, "source_start_line": 3, "source_end_line": 25, "source_confidence": 75, "target_start_line": 4, "target_confidence": 53}, {"target_end_line": 87, "source_start_line": 68, "source_end_line": 85, "source_confidence": 75, "target_start_line": 70, "target_confidence": 53}, {"target_end_line": 54, "source_start_line": 48, "source_end_line": 55, "source_confidence": 75, "target_start_line": 49, "target_confidence": 53}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 40, "source_confidence": 75, "target_start_line": 37, "target_confidence": 53}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 29, "source_confidence": 75, "target_start_line": 33, "target_confidence": 53}, {"target_end_line": 58, "source_start_line": 57, "source_end_line": 58, "source_confidence": 75, "target_start_line": 57, "target_confidence": 53}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 25, "source_confidence": 75, "target_start_line": 4, "target_confidence": 53}, {"target_end_line": 87, "source_start_line": 68, "source_end_line": 85, "source_confidence": 75, "target_start_line": 70, "target_confidence": 53}, {"target_end_line": 54, "source_start_line": 48, "source_end_line": 55, "source_confidence": 75, "target_start_line": 49, "target_confidence": 53}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 40, "source_confidence": 75, "target_start_line": 37, "target_confidence": 53}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 29, "source_confidence": 75, "target_start_line": 33, "target_confidence": 53}, {"target_end_line": 58, "source_start_line": 57, "source_end_line": 58, "source_confidence": 75, "target_start_line": 57, "target_confidence": 53}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 25, "source_confidence": 75, "target_start_line": 4, "target_confidence": 53}, {"target_end_line": 87, "source_start_line": 68, "source_end_line": 85, "source_confidence": 75, "target_start_line": 70, "target_confidence": 53}, {"target_end_line": 54, "source_start_line": 48, "source_end_line": 55, "source_confidence": 75, "target_start_line": 49, "target_confidence": 53}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 40, "source_confidence": 75, "target_start_line": 37, "target_confidence": 53}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 29, "source_confidence": 75, "target_start_line": 33, "target_confidence": 53}, {"target_end_line": 58, "source_start_line": 57, "source_end_line": 58, "source_confidence": 75, "target_start_line": 57, "target_confidence": 53}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 25, "source_confidence": 75, "target_start_line": 4, "target_confidence": 53}, {"target_end_line": 87, "source_start_line": 68, "source_end_line": 85, "source_confidence": 75, "target_start_line": 70, "target_confidence": 53}, {"target_end_line": 54, "source_start_line": 48, "source_end_line": 55, "source_confidence": 75, "target_start_line": 49, "target_confidence": 53}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 40, "source_confidence": 75, "target_start_line": 37, "target_confidence": 53}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 29, "source_confidence": 75, "target_start_line": 33, "target_confidence": 53}, {"target_end_line": 58, "source_start_line": 57, "source_end_line": 58, "source_confidence": 75, "target_start_line": 57, "target_confidence": 53}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 25, "source_confidence": 75, "target_start_line": 4, "target_confidence": 53}, {"target_end_line": 87, "source_start_line": 68, "source_end_line": 85, "source_confidence": 75, "target_start_line": 70, "target_confidence": 53}, {"target_end_line": 54, "source_start_line": 48, "source_end_line": 55, "source_confidence": 75, "target_start_line": 49, "target_confidence": 53}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 40, "source_confidence": 75, "target_start_line": 37, "target_confidence": 53}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 29, "source_confidence": 75, "target_start_line": 33, "target_confidence": 53}, {"target_end_line": 58, "source_start_line": 57, "source_end_line": 58, "source_confidence": 75, "target_start_line": 57, "target_confidence": 53}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 25, "source_confidence": 75, "target_start_line": 4, "target_confidence": 53}, {"target_end_line": 87, "source_start_line": 68, "source_end_line": 85, "source_confidence": 75, "target_start_line": 70, "target_confidence": 53}, {"target_end_line": 54, "source_start_line": 48, "source_end_line": 55, "source_confidence": 75, "target_start_line": 49, "target_confidence": 53}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 40, "source_confidence": 75, "target_start_line": 37, "target_confidence": 53}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 29, "source_confidence": 75, "target_start_line": 33, "target_confidence": 53}, {"target_end_line": 58, "source_start_line": 57, "source_end_line": 58, "source_confidence": 75, "target_start_line": 57, "target_confidence": 53}]}, {"source": "deisydiazp_09447d7f697ab80b1c026fd296c83c9d", "value": 21, "target": "jcamilort_eb99b8c1d5c55ddbce0519293501ba3f", "links": [{"target_end_line": 23, "source_start_line": 4, "source_end_line": 24, "source_confidence": 28, "target_start_line": 3, "target_confidence": 30}]}, {"source": "nychi713_ebf98b4448c4565c8bc82d3691713ebc", "value": 21, "target": "deisydiazp_09447d7f697ab80b1c026fd296c83c9d", "links": [{"target_end_line": 24, "source_start_line": 3, "source_end_line": 23, "source_confidence": 24, "target_start_line": 4, "target_confidence": 28}]}, {"source": "john-guerra_d514a47f1d5dbf237ec1ad8a6e3d7996", "value": 79, "target": "zubcarz_4384a27bb88b7393474703b64d19d9fe", "links": [{"target_end_line": 54, "source_start_line": 15, "source_end_line": 44, "source_confidence": 91, "target_start_line": 23, "target_confidence": 53}, {"target_end_line": 102, "source_start_line": 53, "source_end_line": 65, "source_confidence": 91, "target_start_line": 89, "target_confidence": 53}, {"target_end_line": 162, "source_start_line": 76, "source_end_line": 87, "source_confidence": 91, "target_start_line": 151, "target_confidence": 53}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 91, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 63, "source_start_line": 44, "source_end_line": 51, "source_confidence": 91, "target_start_line": 56, "target_confidence": 53}, {"target_end_line": 144, "source_start_line": 68, "source_end_line": 73, "source_confidence": 91, "target_start_line": 139, "target_confidence": 53}, {"target_end_line": 54, "source_start_line": 15, "source_end_line": 44, "source_confidence": 91, "target_start_line": 23, "target_confidence": 53}, {"target_end_line": 102, "source_start_line": 53, "source_end_line": 65, "source_confidence": 91, "target_start_line": 89, "target_confidence": 53}, {"target_end_line": 162, "source_start_line": 76, "source_end_line": 87, "source_confidence": 91, "target_start_line": 151, "target_confidence": 53}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 91, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 63, "source_start_line": 44, "source_end_line": 51, "source_confidence": 91, "target_start_line": 56, "target_confidence": 53}, {"target_end_line": 144, "source_start_line": 68, "source_end_line": 73, "source_confidence": 91, "target_start_line": 139, "target_confidence": 53}, {"target_end_line": 54, "source_start_line": 15, "source_end_line": 44, "source_confidence": 91, "target_start_line": 23, "target_confidence": 53}, {"target_end_line": 102, "source_start_line": 53, "source_end_line": 65, "source_confidence": 91, "target_start_line": 89, "target_confidence": 53}, {"target_end_line": 162, "source_start_line": 76, "source_end_line": 87, "source_confidence": 91, "target_start_line": 151, "target_confidence": 53}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 91, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 63, "source_start_line": 44, "source_end_line": 51, "source_confidence": 91, "target_start_line": 56, "target_confidence": 53}, {"target_end_line": 144, "source_start_line": 68, "source_end_line": 73, "source_confidence": 91, "target_start_line": 139, "target_confidence": 53}, {"target_end_line": 54, "source_start_line": 15, "source_end_line": 44, "source_confidence": 91, "target_start_line": 23, "target_confidence": 53}, {"target_end_line": 102, "source_start_line": 53, "source_end_line": 65, "source_confidence": 91, "target_start_line": 89, "target_confidence": 53}, {"target_end_line": 162, "source_start_line": 76, "source_end_line": 87, "source_confidence": 91, "target_start_line": 151, "target_confidence": 53}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 91, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 63, "source_start_line": 44, "source_end_line": 51, "source_confidence": 91, "target_start_line": 56, "target_confidence": 53}, {"target_end_line": 144, "source_start_line": 68, "source_end_line": 73, "source_confidence": 91, "target_start_line": 139, "target_confidence": 53}, {"target_end_line": 54, "source_start_line": 15, "source_end_line": 44, "source_confidence": 91, "target_start_line": 23, "target_confidence": 53}, {"target_end_line": 102, "source_start_line": 53, "source_end_line": 65, "source_confidence": 91, "target_start_line": 89, "target_confidence": 53}, {"target_end_line": 162, "source_start_line": 76, "source_end_line": 87, "source_confidence": 91, "target_start_line": 151, "target_confidence": 53}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 91, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 63, "source_start_line": 44, "source_end_line": 51, "source_confidence": 91, "target_start_line": 56, "target_confidence": 53}, {"target_end_line": 144, "source_start_line": 68, "source_end_line": 73, "source_confidence": 91, "target_start_line": 139, "target_confidence": 53}, {"target_end_line": 54, "source_start_line": 15, "source_end_line": 44, "source_confidence": 91, "target_start_line": 23, "target_confidence": 53}, {"target_end_line": 102, "source_start_line": 53, "source_end_line": 65, "source_confidence": 91, "target_start_line": 89, "target_confidence": 53}, {"target_end_line": 162, "source_start_line": 76, "source_end_line": 87, "source_confidence": 91, "target_start_line": 151, "target_confidence": 53}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 91, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 63, "source_start_line": 44, "source_end_line": 51, "source_confidence": 91, "target_start_line": 56, "target_confidence": 53}, {"target_end_line": 144, "source_start_line": 68, "source_end_line": 73, "source_confidence": 91, "target_start_line": 139, "target_confidence": 53}]}, {"source": "zzolo_89de858deaf6f8fc78ba", "value": 24, "target": "nychi713_ebf98b4448c4565c8bc82d3691713ebc", "links": [{"target_end_line": 50, "source_start_line": 16, "source_end_line": 29, "source_confidence": 30, "target_start_line": 37, "target_confidence": 28}, {"target_end_line": 33, "source_start_line": 4, "source_end_line": 9, "source_confidence": 30, "target_start_line": 28, "target_confidence": 28}, {"target_end_line": 56, "source_start_line": 43, "source_end_line": 46, "source_confidence": 30, "target_start_line": 53, "target_confidence": 28}, {"target_end_line": 50, "source_start_line": 16, "source_end_line": 29, "source_confidence": 30, "target_start_line": 37, "target_confidence": 28}, {"target_end_line": 33, "source_start_line": 4, "source_end_line": 9, "source_confidence": 30, "target_start_line": 28, "target_confidence": 28}, {"target_end_line": 56, "source_start_line": 43, "source_end_line": 46, "source_confidence": 30, "target_start_line": 53, "target_confidence": 28}, {"target_end_line": 50, "source_start_line": 16, "source_end_line": 29, "source_confidence": 30, "target_start_line": 37, "target_confidence": 28}, {"target_end_line": 33, "source_start_line": 4, "source_end_line": 9, "source_confidence": 30, "target_start_line": 28, "target_confidence": 28}, {"target_end_line": 56, "source_start_line": 43, "source_end_line": 46, "source_confidence": 30, "target_start_line": 53, "target_confidence": 28}]}, {"source": "fabi-goetz_9dd45e90e6ce5ab6abe98da8729aee8b", "value": 43, "target": "willroj_70008b54362298d88e1f039b1b186d99", "links": [{"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 58}, {"target_end_line": 32, "source_start_line": 22, "source_end_line": 26, "source_confidence": 70, "target_start_line": 28, "target_confidence": 58}, {"target_end_line": 43, "source_start_line": 29, "source_end_line": 37, "source_confidence": 70, "target_start_line": 36, "target_confidence": 58}, {"target_end_line": 63, "source_start_line": 44, "source_end_line": 53, "source_confidence": 70, "target_start_line": 54, "target_confidence": 58}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 58}, {"target_end_line": 32, "source_start_line": 22, "source_end_line": 26, "source_confidence": 70, "target_start_line": 28, "target_confidence": 58}, {"target_end_line": 43, "source_start_line": 29, "source_end_line": 37, "source_confidence": 70, "target_start_line": 36, "target_confidence": 58}, {"target_end_line": 63, "source_start_line": 44, "source_end_line": 53, "source_confidence": 70, "target_start_line": 54, "target_confidence": 58}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 58}, {"target_end_line": 32, "source_start_line": 22, "source_end_line": 26, "source_confidence": 70, "target_start_line": 28, "target_confidence": 58}, {"target_end_line": 43, "source_start_line": 29, "source_end_line": 37, "source_confidence": 70, "target_start_line": 36, "target_confidence": 58}, {"target_end_line": 63, "source_start_line": 44, "source_end_line": 53, "source_confidence": 70, "target_start_line": 54, "target_confidence": 58}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 58}, {"target_end_line": 32, "source_start_line": 22, "source_end_line": 26, "source_confidence": 70, "target_start_line": 28, "target_confidence": 58}, {"target_end_line": 43, "source_start_line": 29, "source_end_line": 37, "source_confidence": 70, "target_start_line": 36, "target_confidence": 58}, {"target_end_line": 63, "source_start_line": 44, "source_end_line": 53, "source_confidence": 70, "target_start_line": 54, "target_confidence": 58}]}, {"source": "fabi-goetz_9dd45e90e6ce5ab6abe98da8729aee8b", "value": 43, "target": "willroj_34fd56d0b126ead0d48fea27bff20f4f", "links": [{"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 58}, {"target_end_line": 32, "source_start_line": 22, "source_end_line": 26, "source_confidence": 70, "target_start_line": 28, "target_confidence": 58}, {"target_end_line": 43, "source_start_line": 29, "source_end_line": 37, "source_confidence": 70, "target_start_line": 36, "target_confidence": 58}, {"target_end_line": 63, "source_start_line": 44, "source_end_line": 53, "source_confidence": 70, "target_start_line": 54, "target_confidence": 58}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 58}, {"target_end_line": 32, "source_start_line": 22, "source_end_line": 26, "source_confidence": 70, "target_start_line": 28, "target_confidence": 58}, {"target_end_line": 43, "source_start_line": 29, "source_end_line": 37, "source_confidence": 70, "target_start_line": 36, "target_confidence": 58}, {"target_end_line": 63, "source_start_line": 44, "source_end_line": 53, "source_confidence": 70, "target_start_line": 54, "target_confidence": 58}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 58}, {"target_end_line": 32, "source_start_line": 22, "source_end_line": 26, "source_confidence": 70, "target_start_line": 28, "target_confidence": 58}, {"target_end_line": 43, "source_start_line": 29, "source_end_line": 37, "source_confidence": 70, "target_start_line": 36, "target_confidence": 58}, {"target_end_line": 63, "source_start_line": 44, "source_end_line": 53, "source_confidence": 70, "target_start_line": 54, "target_confidence": 58}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 58}, {"target_end_line": 32, "source_start_line": 22, "source_end_line": 26, "source_confidence": 70, "target_start_line": 28, "target_confidence": 58}, {"target_end_line": 43, "source_start_line": 29, "source_end_line": 37, "source_confidence": 70, "target_start_line": 36, "target_confidence": 58}, {"target_end_line": 63, "source_start_line": 44, "source_end_line": 53, "source_confidence": 70, "target_start_line": 54, "target_confidence": 58}]}, {"source": "siakan_cc432f0c5f163c81a4703532188efaab", "value": 39, "target": "aurelient_095d8de12fab4fa26e525a5da38c9d48", "links": [{"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 40, "target_start_line": 1, "target_confidence": 24}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 40, "target_start_line": 22, "target_confidence": 24}, {"target_end_line": 22, "source_start_line": 16, "source_end_line": 24, "source_confidence": 40, "target_start_line": 14, "target_confidence": 24}, {"target_end_line": 70, "source_start_line": 61, "source_end_line": 65, "source_confidence": 40, "target_start_line": 66, "target_confidence": 24}, {"target_end_line": 79, "source_start_line": 69, "source_end_line": 72, "source_confidence": 40, "target_start_line": 76, "target_confidence": 24}, {"target_end_line": 113, "source_start_line": 76, "source_end_line": 80, "source_confidence": 40, "target_start_line": 109, "target_confidence": 24}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 40, "target_start_line": 1, "target_confidence": 24}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 40, "target_start_line": 22, "target_confidence": 24}, {"target_end_line": 22, "source_start_line": 16, "source_end_line": 24, "source_confidence": 40, "target_start_line": 14, "target_confidence": 24}, {"target_end_line": 70, "source_start_line": 61, "source_end_line": 65, "source_confidence": 40, "target_start_line": 66, "target_confidence": 24}, {"target_end_line": 79, "source_start_line": 69, "source_end_line": 72, "source_confidence": 40, "target_start_line": 76, "target_confidence": 24}, {"target_end_line": 113, "source_start_line": 76, "source_end_line": 80, "source_confidence": 40, "target_start_line": 109, "target_confidence": 24}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 40, "target_start_line": 1, "target_confidence": 24}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 40, "target_start_line": 22, "target_confidence": 24}, {"target_end_line": 22, "source_start_line": 16, "source_end_line": 24, "source_confidence": 40, "target_start_line": 14, "target_confidence": 24}, {"target_end_line": 70, "source_start_line": 61, "source_end_line": 65, "source_confidence": 40, "target_start_line": 66, "target_confidence": 24}, {"target_end_line": 79, "source_start_line": 69, "source_end_line": 72, "source_confidence": 40, "target_start_line": 76, "target_confidence": 24}, {"target_end_line": 113, "source_start_line": 76, "source_end_line": 80, "source_confidence": 40, "target_start_line": 109, "target_confidence": 24}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 40, "target_start_line": 1, "target_confidence": 24}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 40, "target_start_line": 22, "target_confidence": 24}, {"target_end_line": 22, "source_start_line": 16, "source_end_line": 24, "source_confidence": 40, "target_start_line": 14, "target_confidence": 24}, {"target_end_line": 70, "source_start_line": 61, "source_end_line": 65, "source_confidence": 40, "target_start_line": 66, "target_confidence": 24}, {"target_end_line": 79, "source_start_line": 69, "source_end_line": 72, "source_confidence": 40, "target_start_line": 76, "target_confidence": 24}, {"target_end_line": 113, "source_start_line": 76, "source_end_line": 80, "source_confidence": 40, "target_start_line": 109, "target_confidence": 24}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 40, "target_start_line": 1, "target_confidence": 24}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 40, "target_start_line": 22, "target_confidence": 24}, {"target_end_line": 22, "source_start_line": 16, "source_end_line": 24, "source_confidence": 40, "target_start_line": 14, "target_confidence": 24}, {"target_end_line": 70, "source_start_line": 61, "source_end_line": 65, "source_confidence": 40, "target_start_line": 66, "target_confidence": 24}, {"target_end_line": 79, "source_start_line": 69, "source_end_line": 72, "source_confidence": 40, "target_start_line": 76, "target_confidence": 24}, {"target_end_line": 113, "source_start_line": 76, "source_end_line": 80, "source_confidence": 40, "target_start_line": 109, "target_confidence": 24}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 40, "target_start_line": 1, "target_confidence": 24}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 40, "target_start_line": 22, "target_confidence": 24}, {"target_end_line": 22, "source_start_line": 16, "source_end_line": 24, "source_confidence": 40, "target_start_line": 14, "target_confidence": 24}, {"target_end_line": 70, "source_start_line": 61, "source_end_line": 65, "source_confidence": 40, "target_start_line": 66, "target_confidence": 24}, {"target_end_line": 79, "source_start_line": 69, "source_end_line": 72, "source_confidence": 40, "target_start_line": 76, "target_confidence": 24}, {"target_end_line": 113, "source_start_line": 76, "source_end_line": 80, "source_confidence": 40, "target_start_line": 109, "target_confidence": 24}]}, {"source": "KatiRG_90a972bad9109ae556c0", "value": 44, "target": "syntagmatic_77c7f7e8802e8824eed473dd065c450b", "links": [{"target_end_line": 25, "source_start_line": 14, "source_end_line": 19, "source_confidence": 18, "target_start_line": 21, "target_confidence": 28}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 9, "source_confidence": 18, "target_start_line": 3, "target_confidence": 28}, {"target_end_line": 107, "source_start_line": 115, "source_end_line": 121, "source_confidence": 18, "target_start_line": 99, "target_confidence": 28}, {"target_end_line": 64, "source_start_line": 49, "source_end_line": 53, "source_confidence": 18, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 92, "source_start_line": 106, "source_end_line": 108, "source_confidence": 18, "target_start_line": 89, "target_confidence": 28}, {"target_end_line": 72, "source_start_line": 56, "source_end_line": 60, "source_confidence": 18, "target_start_line": 67, "target_confidence": 28}, {"target_end_line": 80, "source_start_line": 65, "source_end_line": 68, "source_confidence": 18, "target_start_line": 77, "target_confidence": 28}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 19, "source_confidence": 18, "target_start_line": 21, "target_confidence": 28}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 9, "source_confidence": 18, "target_start_line": 3, "target_confidence": 28}, {"target_end_line": 107, "source_start_line": 115, "source_end_line": 121, "source_confidence": 18, "target_start_line": 99, "target_confidence": 28}, {"target_end_line": 64, "source_start_line": 49, "source_end_line": 53, "source_confidence": 18, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 92, "source_start_line": 106, "source_end_line": 108, "source_confidence": 18, "target_start_line": 89, "target_confidence": 28}, {"target_end_line": 72, "source_start_line": 56, "source_end_line": 60, "source_confidence": 18, "target_start_line": 67, "target_confidence": 28}, {"target_end_line": 80, "source_start_line": 65, "source_end_line": 68, "source_confidence": 18, "target_start_line": 77, "target_confidence": 28}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 19, "source_confidence": 18, "target_start_line": 21, "target_confidence": 28}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 9, "source_confidence": 18, "target_start_line": 3, "target_confidence": 28}, {"target_end_line": 107, "source_start_line": 115, "source_end_line": 121, "source_confidence": 18, "target_start_line": 99, "target_confidence": 28}, {"target_end_line": 64, "source_start_line": 49, "source_end_line": 53, "source_confidence": 18, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 92, "source_start_line": 106, "source_end_line": 108, "source_confidence": 18, "target_start_line": 89, "target_confidence": 28}, {"target_end_line": 72, "source_start_line": 56, "source_end_line": 60, "source_confidence": 18, "target_start_line": 67, "target_confidence": 28}, {"target_end_line": 80, "source_start_line": 65, "source_end_line": 68, "source_confidence": 18, "target_start_line": 77, "target_confidence": 28}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 19, "source_confidence": 18, "target_start_line": 21, "target_confidence": 28}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 9, "source_confidence": 18, "target_start_line": 3, "target_confidence": 28}, {"target_end_line": 107, "source_start_line": 115, "source_end_line": 121, "source_confidence": 18, "target_start_line": 99, "target_confidence": 28}, {"target_end_line": 64, "source_start_line": 49, "source_end_line": 53, "source_confidence": 18, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 92, "source_start_line": 106, "source_end_line": 108, "source_confidence": 18, "target_start_line": 89, "target_confidence": 28}, {"target_end_line": 72, "source_start_line": 56, "source_end_line": 60, "source_confidence": 18, "target_start_line": 67, "target_confidence": 28}, {"target_end_line": 80, "source_start_line": 65, "source_end_line": 68, "source_confidence": 18, "target_start_line": 77, "target_confidence": 28}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 19, "source_confidence": 18, "target_start_line": 21, "target_confidence": 28}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 9, "source_confidence": 18, "target_start_line": 3, "target_confidence": 28}, {"target_end_line": 107, "source_start_line": 115, "source_end_line": 121, "source_confidence": 18, "target_start_line": 99, "target_confidence": 28}, {"target_end_line": 64, "source_start_line": 49, "source_end_line": 53, "source_confidence": 18, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 92, "source_start_line": 106, "source_end_line": 108, "source_confidence": 18, "target_start_line": 89, "target_confidence": 28}, {"target_end_line": 72, "source_start_line": 56, "source_end_line": 60, "source_confidence": 18, "target_start_line": 67, "target_confidence": 28}, {"target_end_line": 80, "source_start_line": 65, "source_end_line": 68, "source_confidence": 18, "target_start_line": 77, "target_confidence": 28}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 19, "source_confidence": 18, "target_start_line": 21, "target_confidence": 28}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 9, "source_confidence": 18, "target_start_line": 3, "target_confidence": 28}, {"target_end_line": 107, "source_start_line": 115, "source_end_line": 121, "source_confidence": 18, "target_start_line": 99, "target_confidence": 28}, {"target_end_line": 64, "source_start_line": 49, "source_end_line": 53, "source_confidence": 18, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 92, "source_start_line": 106, "source_end_line": 108, "source_confidence": 18, "target_start_line": 89, "target_confidence": 28}, {"target_end_line": 72, "source_start_line": 56, "source_end_line": 60, "source_confidence": 18, "target_start_line": 67, "target_confidence": 28}, {"target_end_line": 80, "source_start_line": 65, "source_end_line": 68, "source_confidence": 18, "target_start_line": 77, "target_confidence": 28}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 19, "source_confidence": 18, "target_start_line": 21, "target_confidence": 28}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 9, "source_confidence": 18, "target_start_line": 3, "target_confidence": 28}, {"target_end_line": 107, "source_start_line": 115, "source_end_line": 121, "source_confidence": 18, "target_start_line": 99, "target_confidence": 28}, {"target_end_line": 64, "source_start_line": 49, "source_end_line": 53, "source_confidence": 18, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 92, "source_start_line": 106, "source_end_line": 108, "source_confidence": 18, "target_start_line": 89, "target_confidence": 28}, {"target_end_line": 72, "source_start_line": 56, "source_end_line": 60, "source_confidence": 18, "target_start_line": 67, "target_confidence": 28}, {"target_end_line": 80, "source_start_line": 65, "source_end_line": 68, "source_confidence": 18, "target_start_line": 77, "target_confidence": 28}]}, {"source": "wcjohnson11_e956b7a2c9fcf1a86aef", "value": 140, "target": "sirparker_17e638ad0e87343db21a45f0dbc30b25", "links": [{"target_end_line": 140, "source_start_line": 1, "source_end_line": 140, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "Pacsangon_9b0785d902a889f1013449f9b8e2b656", "value": 42, "target": "mbostock_b4c0f143db88a9eb01a315a1063c1d77", "links": [{"target_end_line": 42, "source_start_line": 35, "source_end_line": 42, "source_confidence": 84, "target_start_line": 35, "target_confidence": 90}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 84, "target_start_line": 1, "target_confidence": 90}, {"target_end_line": 34, "source_start_line": 25, "source_end_line": 34, "source_confidence": 84, "target_start_line": 25, "target_confidence": 90}, {"target_end_line": 42, "source_start_line": 35, "source_end_line": 42, "source_confidence": 84, "target_start_line": 35, "target_confidence": 90}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 84, "target_start_line": 1, "target_confidence": 90}, {"target_end_line": 34, "source_start_line": 25, "source_end_line": 34, "source_confidence": 84, "target_start_line": 25, "target_confidence": 90}, {"target_end_line": 42, "source_start_line": 35, "source_end_line": 42, "source_confidence": 84, "target_start_line": 35, "target_confidence": 90}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 84, "target_start_line": 1, "target_confidence": 90}, {"target_end_line": 34, "source_start_line": 25, "source_end_line": 34, "source_confidence": 84, "target_start_line": 25, "target_confidence": 90}]}, {"source": "mbostock_76d0c2cf689a02c35986af6e0931079d", "value": 50, "target": "Fil_cf2c19710832bc77804e4ca3ca18ab8b", "links": [{"target_end_line": 41, "source_start_line": 20, "source_end_line": 52, "source_confidence": 52, "target_start_line": 9, "target_confidence": 28}, {"target_end_line": 63, "source_start_line": 63, "source_end_line": 67, "source_confidence": 52, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 52, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 56, "source_start_line": 57, "source_end_line": 61, "source_confidence": 52, "target_start_line": 52, "target_confidence": 28}, {"target_end_line": 41, "source_start_line": 20, "source_end_line": 52, "source_confidence": 52, "target_start_line": 9, "target_confidence": 28}, {"target_end_line": 63, "source_start_line": 63, "source_end_line": 67, "source_confidence": 52, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 52, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 56, "source_start_line": 57, "source_end_line": 61, "source_confidence": 52, "target_start_line": 52, "target_confidence": 28}, {"target_end_line": 41, "source_start_line": 20, "source_end_line": 52, "source_confidence": 52, "target_start_line": 9, "target_confidence": 28}, {"target_end_line": 63, "source_start_line": 63, "source_end_line": 67, "source_confidence": 52, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 52, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 56, "source_start_line": 57, "source_end_line": 61, "source_confidence": 52, "target_start_line": 52, "target_confidence": 28}, {"target_end_line": 41, "source_start_line": 20, "source_end_line": 52, "source_confidence": 52, "target_start_line": 9, "target_confidence": 28}, {"target_end_line": 63, "source_start_line": 63, "source_end_line": 67, "source_confidence": 52, "target_start_line": 59, "target_confidence": 28}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 52, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 56, "source_start_line": 57, "source_end_line": 61, "source_confidence": 52, "target_start_line": 52, "target_confidence": 28}]}, {"source": "YasufumiSaito_35b59c0b074cac700798", "value": 32, "target": "mcgovey_07770bce721ac8fa62785ba35d81b041", "links": [{"target_end_line": 40, "source_start_line": 32, "source_end_line": 53, "source_confidence": 52, "target_start_line": 19, "target_confidence": 57}, {"target_end_line": 19, "source_start_line": 23, "source_end_line": 32, "source_confidence": 52, "target_start_line": 16, "target_confidence": 57}, {"target_end_line": 40, "source_start_line": 32, "source_end_line": 53, "source_confidence": 52, "target_start_line": 19, "target_confidence": 57}, {"target_end_line": 19, "source_start_line": 23, "source_end_line": 32, "source_confidence": 52, "target_start_line": 16, "target_confidence": 57}]}, {"source": "yesoreyeram_c1b07998add14ffc9d03", "value": 28, "target": "d3noob_3e5138a14cfc1822eedee2963c493399", "links": [{"target_end_line": 31, "source_start_line": 27, "source_end_line": 37, "source_confidence": 49, "target_start_line": 22, "target_confidence": 34}, {"target_end_line": 45, "source_start_line": 38, "source_end_line": 48, "source_confidence": 49, "target_start_line": 35, "target_confidence": 34}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 49, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 31, "source_start_line": 27, "source_end_line": 37, "source_confidence": 49, "target_start_line": 22, "target_confidence": 34}, {"target_end_line": 45, "source_start_line": 38, "source_end_line": 48, "source_confidence": 49, "target_start_line": 35, "target_confidence": 34}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 49, "target_start_line": 4, "target_confidence": 34}, {"target_end_line": 31, "source_start_line": 27, "source_end_line": 37, "source_confidence": 49, "target_start_line": 22, "target_confidence": 34}, {"target_end_line": 45, "source_start_line": 38, "source_end_line": 48, "source_confidence": 49, "target_start_line": 35, "target_confidence": 34}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 49, "target_start_line": 4, "target_confidence": 34}]}, {"source": "siakan_acdd8937258d5aca3001995316e0b6ca", "value": 42, "target": "zukethenuke_dcb55d4b16a01a3d1bc45be99ddca2d0", "links": [{"target_end_line": 77, "source_start_line": 40, "source_end_line": 64, "source_confidence": 39, "target_start_line": 52, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 13, "source_end_line": 28, "source_confidence": 39, "target_start_line": 36, "target_confidence": 33}, {"target_end_line": 77, "source_start_line": 40, "source_end_line": 64, "source_confidence": 39, "target_start_line": 52, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 13, "source_end_line": 28, "source_confidence": 39, "target_start_line": 36, "target_confidence": 33}]}, {"source": "manojchandrak_965566485cb33ee9ae80", "value": 61, "target": "wenzelmk_65571021a4805fae8dab7163267aff2f", "links": [{"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 34, "target_start_line": 193, "target_confidence": 25}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 34, "target_start_line": 56, "target_confidence": 25}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 34, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 34, "target_start_line": 38, "target_confidence": 25}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 34, "target_start_line": 50, "target_confidence": 25}, {"target_end_line": 79, "source_start_line": 61, "source_end_line": 65, "source_confidence": 34, "target_start_line": 74, "target_confidence": 25}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 34, "target_start_line": 136, "target_confidence": 25}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 34, "target_start_line": 193, "target_confidence": 25}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 34, "target_start_line": 56, "target_confidence": 25}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 34, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 34, "target_start_line": 38, "target_confidence": 25}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 34, "target_start_line": 50, "target_confidence": 25}, {"target_end_line": 79, "source_start_line": 61, "source_end_line": 65, "source_confidence": 34, "target_start_line": 74, "target_confidence": 25}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 34, "target_start_line": 136, "target_confidence": 25}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 34, "target_start_line": 193, "target_confidence": 25}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 34, "target_start_line": 56, "target_confidence": 25}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 34, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 34, "target_start_line": 38, "target_confidence": 25}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 34, "target_start_line": 50, "target_confidence": 25}, {"target_end_line": 79, "source_start_line": 61, "source_end_line": 65, "source_confidence": 34, "target_start_line": 74, "target_confidence": 25}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 34, "target_start_line": 136, "target_confidence": 25}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 34, "target_start_line": 193, "target_confidence": 25}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 34, "target_start_line": 56, "target_confidence": 25}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 34, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 34, "target_start_line": 38, "target_confidence": 25}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 34, "target_start_line": 50, "target_confidence": 25}, {"target_end_line": 79, "source_start_line": 61, "source_end_line": 65, "source_confidence": 34, "target_start_line": 74, "target_confidence": 25}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 34, "target_start_line": 136, "target_confidence": 25}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 34, "target_start_line": 193, "target_confidence": 25}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 34, "target_start_line": 56, "target_confidence": 25}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 34, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 34, "target_start_line": 38, "target_confidence": 25}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 34, "target_start_line": 50, "target_confidence": 25}, {"target_end_line": 79, "source_start_line": 61, "source_end_line": 65, "source_confidence": 34, "target_start_line": 74, "target_confidence": 25}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 34, "target_start_line": 136, "target_confidence": 25}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 34, "target_start_line": 193, "target_confidence": 25}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 34, "target_start_line": 56, "target_confidence": 25}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 34, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 34, "target_start_line": 38, "target_confidence": 25}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 34, "target_start_line": 50, "target_confidence": 25}, {"target_end_line": 79, "source_start_line": 61, "source_end_line": 65, "source_confidence": 34, "target_start_line": 74, "target_confidence": 25}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 34, "target_start_line": 136, "target_confidence": 25}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 34, "target_start_line": 193, "target_confidence": 25}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 34, "target_start_line": 56, "target_confidence": 25}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 34, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 34, "target_start_line": 38, "target_confidence": 25}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 34, "target_start_line": 50, "target_confidence": 25}, {"target_end_line": 79, "source_start_line": 61, "source_end_line": 65, "source_confidence": 34, "target_start_line": 74, "target_confidence": 25}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 34, "target_start_line": 136, "target_confidence": 25}]}, {"source": "manojchandrak_965566485cb33ee9ae80", "value": 61, "target": "wenzelmk_7ea800501bb099a83f370ab55f09f61e", "links": [{"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 34, "target_start_line": 193, "target_confidence": 25}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 34, "target_start_line": 56, "target_confidence": 25}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 34, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 34, "target_start_line": 38, "target_confidence": 25}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 34, "target_start_line": 50, "target_confidence": 25}, {"target_end_line": 79, "source_start_line": 61, "source_end_line": 65, "source_confidence": 34, "target_start_line": 74, "target_confidence": 25}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 34, "target_start_line": 136, "target_confidence": 25}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 34, "target_start_line": 193, "target_confidence": 25}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 34, "target_start_line": 56, "target_confidence": 25}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 34, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 34, "target_start_line": 38, "target_confidence": 25}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 34, "target_start_line": 50, "target_confidence": 25}, {"target_end_line": 79, "source_start_line": 61, "source_end_line": 65, "source_confidence": 34, "target_start_line": 74, "target_confidence": 25}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 34, "target_start_line": 136, "target_confidence": 25}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 34, "target_start_line": 193, "target_confidence": 25}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 34, "target_start_line": 56, "target_confidence": 25}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 34, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 34, "target_start_line": 38, "target_confidence": 25}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 34, "target_start_line": 50, "target_confidence": 25}, {"target_end_line": 79, "source_start_line": 61, "source_end_line": 65, "source_confidence": 34, "target_start_line": 74, "target_confidence": 25}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 34, "target_start_line": 136, "target_confidence": 25}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 34, "target_start_line": 193, "target_confidence": 25}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 34, "target_start_line": 56, "target_confidence": 25}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 34, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 34, "target_start_line": 38, "target_confidence": 25}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 34, "target_start_line": 50, "target_confidence": 25}, {"target_end_line": 79, "source_start_line": 61, "source_end_line": 65, "source_confidence": 34, "target_start_line": 74, "target_confidence": 25}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 34, "target_start_line": 136, "target_confidence": 25}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 34, "target_start_line": 193, "target_confidence": 25}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 34, "target_start_line": 56, "target_confidence": 25}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 34, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 34, "target_start_line": 38, "target_confidence": 25}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 34, "target_start_line": 50, "target_confidence": 25}, {"target_end_line": 79, "source_start_line": 61, "source_end_line": 65, "source_confidence": 34, "target_start_line": 74, "target_confidence": 25}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 34, "target_start_line": 136, "target_confidence": 25}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 34, "target_start_line": 193, "target_confidence": 25}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 34, "target_start_line": 56, "target_confidence": 25}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 34, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 34, "target_start_line": 38, "target_confidence": 25}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 34, "target_start_line": 50, "target_confidence": 25}, {"target_end_line": 79, "source_start_line": 61, "source_end_line": 65, "source_confidence": 34, "target_start_line": 74, "target_confidence": 25}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 34, "target_start_line": 136, "target_confidence": 25}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 34, "target_start_line": 193, "target_confidence": 25}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 34, "target_start_line": 56, "target_confidence": 25}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 34, "target_start_line": 18, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 34, "target_start_line": 38, "target_confidence": 25}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 34, "target_start_line": 50, "target_confidence": 25}, {"target_end_line": 79, "source_start_line": 61, "source_end_line": 65, "source_confidence": 34, "target_start_line": 74, "target_confidence": 25}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 34, "target_start_line": 136, "target_confidence": 25}]}, {"source": "manojchandrak_965566485cb33ee9ae80", "value": 55, "target": "wenzelmk_91a1bd21a2dabb75903d1b40b7a89117", "links": [{"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 31, "target_start_line": 193, "target_confidence": 23}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 31, "target_start_line": 56, "target_confidence": 23}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 31, "target_start_line": 18, "target_confidence": 23}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 31, "target_start_line": 38, "target_confidence": 23}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 31, "target_start_line": 50, "target_confidence": 23}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 31, "target_start_line": 136, "target_confidence": 23}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 31, "target_start_line": 193, "target_confidence": 23}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 31, "target_start_line": 56, "target_confidence": 23}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 31, "target_start_line": 18, "target_confidence": 23}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 31, "target_start_line": 38, "target_confidence": 23}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 31, "target_start_line": 50, "target_confidence": 23}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 31, "target_start_line": 136, "target_confidence": 23}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 31, "target_start_line": 193, "target_confidence": 23}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 31, "target_start_line": 56, "target_confidence": 23}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 31, "target_start_line": 18, "target_confidence": 23}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 31, "target_start_line": 38, "target_confidence": 23}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 31, "target_start_line": 50, "target_confidence": 23}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 31, "target_start_line": 136, "target_confidence": 23}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 31, "target_start_line": 193, "target_confidence": 23}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 31, "target_start_line": 56, "target_confidence": 23}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 31, "target_start_line": 18, "target_confidence": 23}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 31, "target_start_line": 38, "target_confidence": 23}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 31, "target_start_line": 50, "target_confidence": 23}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 31, "target_start_line": 136, "target_confidence": 23}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 31, "target_start_line": 193, "target_confidence": 23}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 31, "target_start_line": 56, "target_confidence": 23}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 31, "target_start_line": 18, "target_confidence": 23}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 31, "target_start_line": 38, "target_confidence": 23}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 31, "target_start_line": 50, "target_confidence": 23}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 31, "target_start_line": 136, "target_confidence": 23}, {"target_end_line": 213, "source_start_line": 70, "source_end_line": 82, "source_confidence": 31, "target_start_line": 193, "target_confidence": 23}, {"target_end_line": 71, "source_start_line": 42, "source_end_line": 52, "source_confidence": 31, "target_start_line": 56, "target_confidence": 23}, {"target_end_line": 24, "source_start_line": 8, "source_end_line": 13, "source_confidence": 31, "target_start_line": 18, "target_confidence": 23}, {"target_end_line": 42, "source_start_line": 21, "source_end_line": 24, "source_confidence": 31, "target_start_line": 38, "target_confidence": 23}, {"target_end_line": 51, "source_start_line": 36, "source_end_line": 37, "source_confidence": 31, "target_start_line": 50, "target_confidence": 23}, {"target_end_line": 139, "source_start_line": 57, "source_end_line": 60, "source_confidence": 31, "target_start_line": 136, "target_confidence": 23}]}, {"source": "armollica_853c9344a7808619d863c8d7410062e6", "value": 25, "target": "jamescwaters_9f096e2c9d9f2bcfbf56c21d26519500", "links": [{"target_end_line": 7, "source_start_line": 19, "source_end_line": 24, "source_confidence": 42, "target_start_line": 2, "target_confidence": 26}, {"target_end_line": 45, "source_start_line": 35, "source_end_line": 39, "source_confidence": 42, "target_start_line": 41, "target_confidence": 26}, {"target_end_line": 32, "source_start_line": 30, "source_end_line": 34, "source_confidence": 42, "target_start_line": 28, "target_confidence": 26}, {"target_end_line": 66, "source_start_line": 56, "source_end_line": 64, "source_confidence": 42, "target_start_line": 58, "target_confidence": 26}, {"target_end_line": 7, "source_start_line": 19, "source_end_line": 24, "source_confidence": 42, "target_start_line": 2, "target_confidence": 26}, {"target_end_line": 45, "source_start_line": 35, "source_end_line": 39, "source_confidence": 42, "target_start_line": 41, "target_confidence": 26}, {"target_end_line": 32, "source_start_line": 30, "source_end_line": 34, "source_confidence": 42, "target_start_line": 28, "target_confidence": 26}, {"target_end_line": 66, "source_start_line": 56, "source_end_line": 64, "source_confidence": 42, "target_start_line": 58, "target_confidence": 26}, {"target_end_line": 7, "source_start_line": 19, "source_end_line": 24, "source_confidence": 42, "target_start_line": 2, "target_confidence": 26}, {"target_end_line": 45, "source_start_line": 35, "source_end_line": 39, "source_confidence": 42, "target_start_line": 41, "target_confidence": 26}, {"target_end_line": 32, "source_start_line": 30, "source_end_line": 34, "source_confidence": 42, "target_start_line": 28, "target_confidence": 26}, {"target_end_line": 66, "source_start_line": 56, "source_end_line": 64, "source_confidence": 42, "target_start_line": 58, "target_confidence": 26}, {"target_end_line": 7, "source_start_line": 19, "source_end_line": 24, "source_confidence": 42, "target_start_line": 2, "target_confidence": 26}, {"target_end_line": 45, "source_start_line": 35, "source_end_line": 39, "source_confidence": 42, "target_start_line": 41, "target_confidence": 26}, {"target_end_line": 32, "source_start_line": 30, "source_end_line": 34, "source_confidence": 42, "target_start_line": 28, "target_confidence": 26}, {"target_end_line": 66, "source_start_line": 56, "source_end_line": 64, "source_confidence": 42, "target_start_line": 58, "target_confidence": 26}]}, {"source": "micahstubbs_aa933f60bd432f7f3eed", "value": 29, "target": "d3noob_4abb9dc578abf070fe62302282a29c41", "links": [{"target_end_line": 37, "source_start_line": 31, "source_end_line": 41, "source_confidence": 23, "target_start_line": 28, "target_confidence": 27}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 23, "target_start_line": 4, "target_confidence": 27}, {"target_end_line": 49, "source_start_line": 43, "source_end_line": 49, "source_confidence": 23, "target_start_line": 43, "target_confidence": 27}, {"target_end_line": 93, "source_start_line": 85, "source_end_line": 89, "source_confidence": 23, "target_start_line": 89, "target_confidence": 27}, {"target_end_line": 37, "source_start_line": 31, "source_end_line": 41, "source_confidence": 23, "target_start_line": 28, "target_confidence": 27}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 23, "target_start_line": 4, "target_confidence": 27}, {"target_end_line": 49, "source_start_line": 43, "source_end_line": 49, "source_confidence": 23, "target_start_line": 43, "target_confidence": 27}, {"target_end_line": 93, "source_start_line": 85, "source_end_line": 89, "source_confidence": 23, "target_start_line": 89, "target_confidence": 27}, {"target_end_line": 37, "source_start_line": 31, "source_end_line": 41, "source_confidence": 23, "target_start_line": 28, "target_confidence": 27}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 23, "target_start_line": 4, "target_confidence": 27}, {"target_end_line": 49, "source_start_line": 43, "source_end_line": 49, "source_confidence": 23, "target_start_line": 43, "target_confidence": 27}, {"target_end_line": 93, "source_start_line": 85, "source_end_line": 89, "source_confidence": 23, "target_start_line": 89, "target_confidence": 27}, {"target_end_line": 37, "source_start_line": 31, "source_end_line": 41, "source_confidence": 23, "target_start_line": 28, "target_confidence": 27}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 23, "target_start_line": 4, "target_confidence": 27}, {"target_end_line": 49, "source_start_line": 43, "source_end_line": 49, "source_confidence": 23, "target_start_line": 43, "target_confidence": 27}, {"target_end_line": 93, "source_start_line": 85, "source_end_line": 89, "source_confidence": 23, "target_start_line": 89, "target_confidence": 27}]}, {"source": "emeeks_8d75da95d1e78cd08899", "value": 51, "target": "Thanaporn-sk_79519f63d82d58c16dfa4ce762e58afd", "links": [{"target_end_line": 51, "source_start_line": 1, "source_end_line": 51, "source_confidence": 98, "target_start_line": 1, "target_confidence": 98}]}, {"source": "paulsuda_b4701eba5b009f1a575e9f1a3dd382c2", "value": 29, "target": "cjhin_8872a492d44694ecf5a883642926f19c", "links": [{"target_end_line": 110, "source_start_line": 7, "source_end_line": 21, "source_confidence": 34, "target_start_line": 96, "target_confidence": 14}, {"target_end_line": 125, "source_start_line": 55, "source_end_line": 59, "source_confidence": 34, "target_start_line": 121, "target_confidence": 14}, {"target_end_line": 135, "source_start_line": 30, "source_end_line": 33, "source_confidence": 34, "target_start_line": 132, "target_confidence": 14}, {"target_end_line": 20, "source_start_line": 47, "source_end_line": 50, "source_confidence": 34, "target_start_line": 16, "target_confidence": 14}, {"target_end_line": 110, "source_start_line": 7, "source_end_line": 21, "source_confidence": 34, "target_start_line": 96, "target_confidence": 14}, {"target_end_line": 125, "source_start_line": 55, "source_end_line": 59, "source_confidence": 34, "target_start_line": 121, "target_confidence": 14}, {"target_end_line": 135, "source_start_line": 30, "source_end_line": 33, "source_confidence": 34, "target_start_line": 132, "target_confidence": 14}, {"target_end_line": 20, "source_start_line": 47, "source_end_line": 50, "source_confidence": 34, "target_start_line": 16, "target_confidence": 14}, {"target_end_line": 110, "source_start_line": 7, "source_end_line": 21, "source_confidence": 34, "target_start_line": 96, "target_confidence": 14}, {"target_end_line": 125, "source_start_line": 55, "source_end_line": 59, "source_confidence": 34, "target_start_line": 121, "target_confidence": 14}, {"target_end_line": 135, "source_start_line": 30, "source_end_line": 33, "source_confidence": 34, "target_start_line": 132, "target_confidence": 14}, {"target_end_line": 20, "source_start_line": 47, "source_end_line": 50, "source_confidence": 34, "target_start_line": 16, "target_confidence": 14}, {"target_end_line": 110, "source_start_line": 7, "source_end_line": 21, "source_confidence": 34, "target_start_line": 96, "target_confidence": 14}, {"target_end_line": 125, "source_start_line": 55, "source_end_line": 59, "source_confidence": 34, "target_start_line": 121, "target_confidence": 14}, {"target_end_line": 135, "source_start_line": 30, "source_end_line": 33, "source_confidence": 34, "target_start_line": 132, "target_confidence": 14}, {"target_end_line": 20, "source_start_line": 47, "source_end_line": 50, "source_confidence": 34, "target_start_line": 16, "target_confidence": 14}]}, {"source": "mbostock_ba63c55dd2dbc3ab0127", "value": 47, "target": "bradoyler_9f70bb9c656a9cd9ada3aba36c26f351", "links": [{"target_end_line": 47, "source_start_line": 1, "source_end_line": 47, "source_confidence": 97, "target_start_line": 1, "target_confidence": 97}]}, {"source": "jcobian_d62ef690823b2f95965fc380d4683e23", "value": 93, "target": "paulsuda_b4701eba5b009f1a575e9f1a3dd382c2", "links": [{"target_end_line": 93, "source_start_line": 1, "source_end_line": 92, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "mattgiguere_2616d918d23b0fffd8d3256439b87268", "value": 45, "target": "xdavio_390dc4293104f3a6c4e1849249c0b861", "links": [{"target_end_line": 46, "source_start_line": 27, "source_end_line": 47, "source_confidence": 86, "target_start_line": 29, "target_confidence": 77}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 86, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 28, "source_start_line": 18, "source_end_line": 26, "source_confidence": 86, "target_start_line": 20, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 27, "source_end_line": 47, "source_confidence": 86, "target_start_line": 29, "target_confidence": 77}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 86, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 28, "source_start_line": 18, "source_end_line": 26, "source_confidence": 86, "target_start_line": 20, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 27, "source_end_line": 47, "source_confidence": 86, "target_start_line": 29, "target_confidence": 77}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 86, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 28, "source_start_line": 18, "source_end_line": 26, "source_confidence": 86, "target_start_line": 20, "target_confidence": 77}]}, {"source": "kelkreft_4cb9b7e2913c81f603f9b92ccf02afd7", "value": 94, "target": "jcobian_d62ef690823b2f95965fc380d4683e23", "links": [{"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 92, "target_start_line": 1, "target_confidence": 93}, {"target_end_line": 63, "source_start_line": 27, "source_end_line": 63, "source_confidence": 92, "target_start_line": 27, "target_confidence": 93}, {"target_end_line": 92, "source_start_line": 82, "source_end_line": 93, "source_confidence": 92, "target_start_line": 81, "target_confidence": 93}, {"target_end_line": 81, "source_start_line": 74, "source_end_line": 82, "source_confidence": 92, "target_start_line": 73, "target_confidence": 93}, {"target_end_line": 72, "source_start_line": 65, "source_end_line": 73, "source_confidence": 92, "target_start_line": 64, "target_confidence": 93}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 92, "target_start_line": 1, "target_confidence": 93}, {"target_end_line": 63, "source_start_line": 27, "source_end_line": 63, "source_confidence": 92, "target_start_line": 27, "target_confidence": 93}, {"target_end_line": 92, "source_start_line": 82, "source_end_line": 93, "source_confidence": 92, "target_start_line": 81, "target_confidence": 93}, {"target_end_line": 81, "source_start_line": 74, "source_end_line": 82, "source_confidence": 92, "target_start_line": 73, "target_confidence": 93}, {"target_end_line": 72, "source_start_line": 65, "source_end_line": 73, "source_confidence": 92, "target_start_line": 64, "target_confidence": 93}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 92, "target_start_line": 1, "target_confidence": 93}, {"target_end_line": 63, "source_start_line": 27, "source_end_line": 63, "source_confidence": 92, "target_start_line": 27, "target_confidence": 93}, {"target_end_line": 92, "source_start_line": 82, "source_end_line": 93, "source_confidence": 92, "target_start_line": 81, "target_confidence": 93}, {"target_end_line": 81, "source_start_line": 74, "source_end_line": 82, "source_confidence": 92, "target_start_line": 73, "target_confidence": 93}, {"target_end_line": 72, "source_start_line": 65, "source_end_line": 73, "source_confidence": 92, "target_start_line": 64, "target_confidence": 93}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 92, "target_start_line": 1, "target_confidence": 93}, {"target_end_line": 63, "source_start_line": 27, "source_end_line": 63, "source_confidence": 92, "target_start_line": 27, "target_confidence": 93}, {"target_end_line": 92, "source_start_line": 82, "source_end_line": 93, "source_confidence": 92, "target_start_line": 81, "target_confidence": 93}, {"target_end_line": 81, "source_start_line": 74, "source_end_line": 82, "source_confidence": 92, "target_start_line": 73, "target_confidence": 93}, {"target_end_line": 72, "source_start_line": 65, "source_end_line": 73, "source_confidence": 92, "target_start_line": 64, "target_confidence": 93}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 92, "target_start_line": 1, "target_confidence": 93}, {"target_end_line": 63, "source_start_line": 27, "source_end_line": 63, "source_confidence": 92, "target_start_line": 27, "target_confidence": 93}, {"target_end_line": 92, "source_start_line": 82, "source_end_line": 93, "source_confidence": 92, "target_start_line": 81, "target_confidence": 93}, {"target_end_line": 81, "source_start_line": 74, "source_end_line": 82, "source_confidence": 92, "target_start_line": 73, "target_confidence": 93}, {"target_end_line": 72, "source_start_line": 65, "source_end_line": 73, "source_confidence": 92, "target_start_line": 64, "target_confidence": 93}]}, {"source": "monkeycycle_a492b5e0da787d2e3bbe86af450b4bf7", "value": 34, "target": "sampathweb_1c1ecc991d2e1039277db417b7c6ba1a", "links": [{"target_end_line": 47, "source_start_line": 28, "source_end_line": 34, "source_confidence": 41, "target_start_line": 41, "target_confidence": 39}, {"target_end_line": 26, "source_start_line": 4, "source_end_line": 12, "source_confidence": 41, "target_start_line": 18, "target_confidence": 39}, {"target_end_line": 68, "source_start_line": 70, "source_end_line": 78, "source_confidence": 41, "target_start_line": 59, "target_confidence": 39}, {"target_end_line": 54, "source_start_line": 47, "source_end_line": 54, "source_confidence": 41, "target_start_line": 47, "target_confidence": 39}, {"target_end_line": 47, "source_start_line": 28, "source_end_line": 34, "source_confidence": 41, "target_start_line": 41, "target_confidence": 39}, {"target_end_line": 26, "source_start_line": 4, "source_end_line": 12, "source_confidence": 41, "target_start_line": 18, "target_confidence": 39}, {"target_end_line": 68, "source_start_line": 70, "source_end_line": 78, "source_confidence": 41, "target_start_line": 59, "target_confidence": 39}, {"target_end_line": 54, "source_start_line": 47, "source_end_line": 54, "source_confidence": 41, "target_start_line": 47, "target_confidence": 39}, {"target_end_line": 47, "source_start_line": 28, "source_end_line": 34, "source_confidence": 41, "target_start_line": 41, "target_confidence": 39}, {"target_end_line": 26, "source_start_line": 4, "source_end_line": 12, "source_confidence": 41, "target_start_line": 18, "target_confidence": 39}, {"target_end_line": 68, "source_start_line": 70, "source_end_line": 78, "source_confidence": 41, "target_start_line": 59, "target_confidence": 39}, {"target_end_line": 54, "source_start_line": 47, "source_end_line": 54, "source_confidence": 41, "target_start_line": 47, "target_confidence": 39}, {"target_end_line": 47, "source_start_line": 28, "source_end_line": 34, "source_confidence": 41, "target_start_line": 41, "target_confidence": 39}, {"target_end_line": 26, "source_start_line": 4, "source_end_line": 12, "source_confidence": 41, "target_start_line": 18, "target_confidence": 39}, {"target_end_line": 68, "source_start_line": 70, "source_end_line": 78, "source_confidence": 41, "target_start_line": 59, "target_confidence": 39}, {"target_end_line": 54, "source_start_line": 47, "source_end_line": 54, "source_confidence": 41, "target_start_line": 47, "target_confidence": 39}]}, {"source": "Fil_3172f279d3ba83303d61ae5964d48068", "value": 21, "target": "Kcnarf_79062af0fed9ab05ff56e3e194509ec0", "links": [{"target_end_line": 24, "source_start_line": 18, "source_end_line": 31, "source_confidence": 32, "target_start_line": 11, "target_confidence": 46}, {"target_end_line": 56, "source_start_line": 52, "source_end_line": 58, "source_confidence": 32, "target_start_line": 50, "target_confidence": 46}, {"target_end_line": 24, "source_start_line": 18, "source_end_line": 31, "source_confidence": 32, "target_start_line": 11, "target_confidence": 46}, {"target_end_line": 56, "source_start_line": 52, "source_end_line": 58, "source_confidence": 32, "target_start_line": 50, "target_confidence": 46}]}, {"source": "cjhin_11ffe8165207693d513ad67f85d43251", "value": 71, "target": "kelkreft_4cb9b7e2913c81f603f9b92ccf02afd7", "links": [{"target_end_line": 24, "source_start_line": 13, "source_end_line": 30, "source_confidence": 45, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 52, "source_start_line": 38, "source_end_line": 62, "source_confidence": 45, "target_start_line": 28, "target_confidence": 71}, {"target_end_line": 89, "source_start_line": 110, "source_end_line": 116, "source_confidence": 45, "target_start_line": 83, "target_confidence": 71}, {"target_end_line": 82, "source_start_line": 90, "source_end_line": 96, "source_confidence": 45, "target_start_line": 76, "target_confidence": 71}, {"target_end_line": 63, "source_start_line": 76, "source_end_line": 81, "source_confidence": 45, "target_start_line": 58, "target_confidence": 71}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 45, "target_start_line": 1, "target_confidence": 71}, {"target_end_line": 24, "source_start_line": 13, "source_end_line": 30, "source_confidence": 45, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 52, "source_start_line": 38, "source_end_line": 62, "source_confidence": 45, "target_start_line": 28, "target_confidence": 71}, {"target_end_line": 89, "source_start_line": 110, "source_end_line": 116, "source_confidence": 45, "target_start_line": 83, "target_confidence": 71}, {"target_end_line": 82, "source_start_line": 90, "source_end_line": 96, "source_confidence": 45, "target_start_line": 76, "target_confidence": 71}, {"target_end_line": 63, "source_start_line": 76, "source_end_line": 81, "source_confidence": 45, "target_start_line": 58, "target_confidence": 71}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 45, "target_start_line": 1, "target_confidence": 71}, {"target_end_line": 24, "source_start_line": 13, "source_end_line": 30, "source_confidence": 45, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 52, "source_start_line": 38, "source_end_line": 62, "source_confidence": 45, "target_start_line": 28, "target_confidence": 71}, {"target_end_line": 89, "source_start_line": 110, "source_end_line": 116, "source_confidence": 45, "target_start_line": 83, "target_confidence": 71}, {"target_end_line": 82, "source_start_line": 90, "source_end_line": 96, "source_confidence": 45, "target_start_line": 76, "target_confidence": 71}, {"target_end_line": 63, "source_start_line": 76, "source_end_line": 81, "source_confidence": 45, "target_start_line": 58, "target_confidence": 71}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 45, "target_start_line": 1, "target_confidence": 71}, {"target_end_line": 24, "source_start_line": 13, "source_end_line": 30, "source_confidence": 45, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 52, "source_start_line": 38, "source_end_line": 62, "source_confidence": 45, "target_start_line": 28, "target_confidence": 71}, {"target_end_line": 89, "source_start_line": 110, "source_end_line": 116, "source_confidence": 45, "target_start_line": 83, "target_confidence": 71}, {"target_end_line": 82, "source_start_line": 90, "source_end_line": 96, "source_confidence": 45, "target_start_line": 76, "target_confidence": 71}, {"target_end_line": 63, "source_start_line": 76, "source_end_line": 81, "source_confidence": 45, "target_start_line": 58, "target_confidence": 71}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 45, "target_start_line": 1, "target_confidence": 71}, {"target_end_line": 24, "source_start_line": 13, "source_end_line": 30, "source_confidence": 45, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 52, "source_start_line": 38, "source_end_line": 62, "source_confidence": 45, "target_start_line": 28, "target_confidence": 71}, {"target_end_line": 89, "source_start_line": 110, "source_end_line": 116, "source_confidence": 45, "target_start_line": 83, "target_confidence": 71}, {"target_end_line": 82, "source_start_line": 90, "source_end_line": 96, "source_confidence": 45, "target_start_line": 76, "target_confidence": 71}, {"target_end_line": 63, "source_start_line": 76, "source_end_line": 81, "source_confidence": 45, "target_start_line": 58, "target_confidence": 71}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 45, "target_start_line": 1, "target_confidence": 71}, {"target_end_line": 24, "source_start_line": 13, "source_end_line": 30, "source_confidence": 45, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 52, "source_start_line": 38, "source_end_line": 62, "source_confidence": 45, "target_start_line": 28, "target_confidence": 71}, {"target_end_line": 89, "source_start_line": 110, "source_end_line": 116, "source_confidence": 45, "target_start_line": 83, "target_confidence": 71}, {"target_end_line": 82, "source_start_line": 90, "source_end_line": 96, "source_confidence": 45, "target_start_line": 76, "target_confidence": 71}, {"target_end_line": 63, "source_start_line": 76, "source_end_line": 81, "source_confidence": 45, "target_start_line": 58, "target_confidence": 71}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 45, "target_start_line": 1, "target_confidence": 71}]}, {"source": "fabi-goetz_9dd45e90e6ce5ab6abe98da8729aee8b", "value": 37, "target": "EmbraceLife_f3147fa976a30a481254d1c50e8bd324", "links": [{"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 57, "target_start_line": 28, "target_confidence": 57}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 57, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 62, "source_start_line": 34, "source_end_line": 46, "source_confidence": 57, "target_start_line": 50, "target_confidence": 57}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 19, "source_confidence": 57, "target_start_line": 12, "target_confidence": 57}, {"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 57, "target_start_line": 28, "target_confidence": 57}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 57, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 62, "source_start_line": 34, "source_end_line": 46, "source_confidence": 57, "target_start_line": 50, "target_confidence": 57}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 19, "source_confidence": 57, "target_start_line": 12, "target_confidence": 57}, {"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 57, "target_start_line": 28, "target_confidence": 57}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 57, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 62, "source_start_line": 34, "source_end_line": 46, "source_confidence": 57, "target_start_line": 50, "target_confidence": 57}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 19, "source_confidence": 57, "target_start_line": 12, "target_confidence": 57}, {"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 57, "target_start_line": 28, "target_confidence": 57}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 57, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 62, "source_start_line": 34, "source_end_line": 46, "source_confidence": 57, "target_start_line": 50, "target_confidence": 57}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 19, "source_confidence": 57, "target_start_line": 12, "target_confidence": 57}]}, {"source": "fabi-goetz_9dd45e90e6ce5ab6abe98da8729aee8b", "value": 37, "target": "EmbraceLife_7cd0c225c76888ec50ed4f0833f6e35f", "links": [{"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 57, "target_start_line": 28, "target_confidence": 53}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 57, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 63, "source_start_line": 34, "source_end_line": 46, "source_confidence": 57, "target_start_line": 51, "target_confidence": 53}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 19, "source_confidence": 57, "target_start_line": 12, "target_confidence": 53}, {"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 57, "target_start_line": 28, "target_confidence": 53}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 57, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 63, "source_start_line": 34, "source_end_line": 46, "source_confidence": 57, "target_start_line": 51, "target_confidence": 53}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 19, "source_confidence": 57, "target_start_line": 12, "target_confidence": 53}, {"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 57, "target_start_line": 28, "target_confidence": 53}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 57, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 63, "source_start_line": 34, "source_end_line": 46, "source_confidence": 57, "target_start_line": 51, "target_confidence": 53}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 19, "source_confidence": 57, "target_start_line": 12, "target_confidence": 53}, {"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 57, "target_start_line": 28, "target_confidence": 53}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 57, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 63, "source_start_line": 34, "source_end_line": 46, "source_confidence": 57, "target_start_line": 51, "target_confidence": 53}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 19, "source_confidence": 57, "target_start_line": 12, "target_confidence": 53}]}, {"source": "mbostock_34f08d5e11952a80609169b7917d4172", "value": 121, "target": "EmbraceLife_7efd1f9031beecb5252e57e944e1a440", "links": [{"target_end_line": 72, "source_start_line": 10, "source_end_line": 41, "source_confidence": 82, "target_start_line": 33, "target_confidence": 57}, {"target_end_line": 126, "source_start_line": 65, "source_end_line": 99, "source_confidence": 82, "target_start_line": 89, "target_confidence": 57}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 24, "source_start_line": 43, "source_end_line": 55, "source_confidence": 82, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 85, "source_start_line": 57, "source_end_line": 63, "source_confidence": 82, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 196, "source_start_line": 119, "source_end_line": 128, "source_confidence": 82, "target_start_line": 187, "target_confidence": 57}, {"target_end_line": 162, "source_start_line": 108, "source_end_line": 110, "source_confidence": 82, "target_start_line": 160, "target_confidence": 57}, {"target_end_line": 169, "source_start_line": 114, "source_end_line": 114, "source_confidence": 82, "target_start_line": 169, "target_confidence": 57}, {"target_end_line": 72, "source_start_line": 10, "source_end_line": 41, "source_confidence": 82, "target_start_line": 33, "target_confidence": 57}, {"target_end_line": 126, "source_start_line": 65, "source_end_line": 99, "source_confidence": 82, "target_start_line": 89, "target_confidence": 57}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 24, "source_start_line": 43, "source_end_line": 55, "source_confidence": 82, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 85, "source_start_line": 57, "source_end_line": 63, "source_confidence": 82, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 196, "source_start_line": 119, "source_end_line": 128, "source_confidence": 82, "target_start_line": 187, "target_confidence": 57}, {"target_end_line": 162, "source_start_line": 108, "source_end_line": 110, "source_confidence": 82, "target_start_line": 160, "target_confidence": 57}, {"target_end_line": 169, "source_start_line": 114, "source_end_line": 114, "source_confidence": 82, "target_start_line": 169, "target_confidence": 57}, {"target_end_line": 72, "source_start_line": 10, "source_end_line": 41, "source_confidence": 82, "target_start_line": 33, "target_confidence": 57}, {"target_end_line": 126, "source_start_line": 65, "source_end_line": 99, "source_confidence": 82, "target_start_line": 89, "target_confidence": 57}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 24, "source_start_line": 43, "source_end_line": 55, "source_confidence": 82, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 85, "source_start_line": 57, "source_end_line": 63, "source_confidence": 82, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 196, "source_start_line": 119, "source_end_line": 128, "source_confidence": 82, "target_start_line": 187, "target_confidence": 57}, {"target_end_line": 162, "source_start_line": 108, "source_end_line": 110, "source_confidence": 82, "target_start_line": 160, "target_confidence": 57}, {"target_end_line": 169, "source_start_line": 114, "source_end_line": 114, "source_confidence": 82, "target_start_line": 169, "target_confidence": 57}, {"target_end_line": 72, "source_start_line": 10, "source_end_line": 41, "source_confidence": 82, "target_start_line": 33, "target_confidence": 57}, {"target_end_line": 126, "source_start_line": 65, "source_end_line": 99, "source_confidence": 82, "target_start_line": 89, "target_confidence": 57}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 24, "source_start_line": 43, "source_end_line": 55, "source_confidence": 82, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 85, "source_start_line": 57, "source_end_line": 63, "source_confidence": 82, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 196, "source_start_line": 119, "source_end_line": 128, "source_confidence": 82, "target_start_line": 187, "target_confidence": 57}, {"target_end_line": 162, "source_start_line": 108, "source_end_line": 110, "source_confidence": 82, "target_start_line": 160, "target_confidence": 57}, {"target_end_line": 169, "source_start_line": 114, "source_end_line": 114, "source_confidence": 82, "target_start_line": 169, "target_confidence": 57}, {"target_end_line": 72, "source_start_line": 10, "source_end_line": 41, "source_confidence": 82, "target_start_line": 33, "target_confidence": 57}, {"target_end_line": 126, "source_start_line": 65, "source_end_line": 99, "source_confidence": 82, "target_start_line": 89, "target_confidence": 57}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 24, "source_start_line": 43, "source_end_line": 55, "source_confidence": 82, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 85, "source_start_line": 57, "source_end_line": 63, "source_confidence": 82, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 196, "source_start_line": 119, "source_end_line": 128, "source_confidence": 82, "target_start_line": 187, "target_confidence": 57}, {"target_end_line": 162, "source_start_line": 108, "source_end_line": 110, "source_confidence": 82, "target_start_line": 160, "target_confidence": 57}, {"target_end_line": 169, "source_start_line": 114, "source_end_line": 114, "source_confidence": 82, "target_start_line": 169, "target_confidence": 57}, {"target_end_line": 72, "source_start_line": 10, "source_end_line": 41, "source_confidence": 82, "target_start_line": 33, "target_confidence": 57}, {"target_end_line": 126, "source_start_line": 65, "source_end_line": 99, "source_confidence": 82, "target_start_line": 89, "target_confidence": 57}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 24, "source_start_line": 43, "source_end_line": 55, "source_confidence": 82, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 85, "source_start_line": 57, "source_end_line": 63, "source_confidence": 82, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 196, "source_start_line": 119, "source_end_line": 128, "source_confidence": 82, "target_start_line": 187, "target_confidence": 57}, {"target_end_line": 162, "source_start_line": 108, "source_end_line": 110, "source_confidence": 82, "target_start_line": 160, "target_confidence": 57}, {"target_end_line": 169, "source_start_line": 114, "source_end_line": 114, "source_confidence": 82, "target_start_line": 169, "target_confidence": 57}, {"target_end_line": 72, "source_start_line": 10, "source_end_line": 41, "source_confidence": 82, "target_start_line": 33, "target_confidence": 57}, {"target_end_line": 126, "source_start_line": 65, "source_end_line": 99, "source_confidence": 82, "target_start_line": 89, "target_confidence": 57}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 24, "source_start_line": 43, "source_end_line": 55, "source_confidence": 82, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 85, "source_start_line": 57, "source_end_line": 63, "source_confidence": 82, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 196, "source_start_line": 119, "source_end_line": 128, "source_confidence": 82, "target_start_line": 187, "target_confidence": 57}, {"target_end_line": 162, "source_start_line": 108, "source_end_line": 110, "source_confidence": 82, "target_start_line": 160, "target_confidence": 57}, {"target_end_line": 169, "source_start_line": 114, "source_end_line": 114, "source_confidence": 82, "target_start_line": 169, "target_confidence": 57}, {"target_end_line": 72, "source_start_line": 10, "source_end_line": 41, "source_confidence": 82, "target_start_line": 33, "target_confidence": 57}, {"target_end_line": 126, "source_start_line": 65, "source_end_line": 99, "source_confidence": 82, "target_start_line": 89, "target_confidence": 57}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 24, "source_start_line": 43, "source_end_line": 55, "source_confidence": 82, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 85, "source_start_line": 57, "source_end_line": 63, "source_confidence": 82, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 196, "source_start_line": 119, "source_end_line": 128, "source_confidence": 82, "target_start_line": 187, "target_confidence": 57}, {"target_end_line": 162, "source_start_line": 108, "source_end_line": 110, "source_confidence": 82, "target_start_line": 160, "target_confidence": 57}, {"target_end_line": 169, "source_start_line": 114, "source_end_line": 114, "source_confidence": 82, "target_start_line": 169, "target_confidence": 57}]}, {"source": "mbostock_0533f44f2cfabecc5e3a", "value": 46, "target": "EmbraceLife_740f2e802419f38f887640b7fb8b53eb", "links": [{"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 87, "target_start_line": 1, "target_confidence": 78}, {"target_end_line": 37, "source_start_line": 23, "source_end_line": 31, "source_confidence": 87, "target_start_line": 29, "target_confidence": 78}, {"target_end_line": 60, "source_start_line": 36, "source_end_line": 50, "source_confidence": 87, "target_start_line": 46, "target_confidence": 78}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 87, "target_start_line": 1, "target_confidence": 78}, {"target_end_line": 37, "source_start_line": 23, "source_end_line": 31, "source_confidence": 87, "target_start_line": 29, "target_confidence": 78}, {"target_end_line": 60, "source_start_line": 36, "source_end_line": 50, "source_confidence": 87, "target_start_line": 46, "target_confidence": 78}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 87, "target_start_line": 1, "target_confidence": 78}, {"target_end_line": 37, "source_start_line": 23, "source_end_line": 31, "source_confidence": 87, "target_start_line": 29, "target_confidence": 78}, {"target_end_line": 60, "source_start_line": 36, "source_end_line": 50, "source_confidence": 87, "target_start_line": 46, "target_confidence": 78}]}, {"source": "mbostock_e9ba78a2c1070980d1b530800ce7fa2b", "value": 42, "target": "mattgiguere_2616d918d23b0fffd8d3256439b87268", "links": [{"target_end_line": 47, "source_start_line": 31, "source_end_line": 44, "source_confidence": 62, "target_start_line": 31, "target_confidence": 90}, {"target_end_line": 28, "source_start_line": 65, "source_end_line": 68, "source_confidence": 62, "target_start_line": 25, "target_confidence": 90}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 18, "source_confidence": 62, "target_start_line": 8, "target_confidence": 90}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 62, "target_start_line": 1, "target_confidence": 90}, {"target_end_line": 23, "source_start_line": 23, "source_end_line": 28, "source_confidence": 62, "target_start_line": 18, "target_confidence": 90}, {"target_end_line": 47, "source_start_line": 31, "source_end_line": 44, "source_confidence": 62, "target_start_line": 31, "target_confidence": 90}, {"target_end_line": 28, "source_start_line": 65, "source_end_line": 68, "source_confidence": 62, "target_start_line": 25, "target_confidence": 90}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 18, "source_confidence": 62, "target_start_line": 8, "target_confidence": 90}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 62, "target_start_line": 1, "target_confidence": 90}, {"target_end_line": 23, "source_start_line": 23, "source_end_line": 28, "source_confidence": 62, "target_start_line": 18, "target_confidence": 90}, {"target_end_line": 47, "source_start_line": 31, "source_end_line": 44, "source_confidence": 62, "target_start_line": 31, "target_confidence": 90}, {"target_end_line": 28, "source_start_line": 65, "source_end_line": 68, "source_confidence": 62, "target_start_line": 25, "target_confidence": 90}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 18, "source_confidence": 62, "target_start_line": 8, "target_confidence": 90}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 62, "target_start_line": 1, "target_confidence": 90}, {"target_end_line": 23, "source_start_line": 23, "source_end_line": 28, "source_confidence": 62, "target_start_line": 18, "target_confidence": 90}, {"target_end_line": 47, "source_start_line": 31, "source_end_line": 44, "source_confidence": 62, "target_start_line": 31, "target_confidence": 90}, {"target_end_line": 28, "source_start_line": 65, "source_end_line": 68, "source_confidence": 62, "target_start_line": 25, "target_confidence": 90}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 18, "source_confidence": 62, "target_start_line": 8, "target_confidence": 90}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 62, "target_start_line": 1, "target_confidence": 90}, {"target_end_line": 23, "source_start_line": 23, "source_end_line": 28, "source_confidence": 62, "target_start_line": 18, "target_confidence": 90}, {"target_end_line": 47, "source_start_line": 31, "source_end_line": 44, "source_confidence": 62, "target_start_line": 31, "target_confidence": 90}, {"target_end_line": 28, "source_start_line": 65, "source_end_line": 68, "source_confidence": 62, "target_start_line": 25, "target_confidence": 90}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 18, "source_confidence": 62, "target_start_line": 8, "target_confidence": 90}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 62, "target_start_line": 1, "target_confidence": 90}, {"target_end_line": 23, "source_start_line": 23, "source_end_line": 28, "source_confidence": 62, "target_start_line": 18, "target_confidence": 90}]}, {"source": "stjacqrm_344e9c52fa580966d47b1e13ca7fee11", "value": 171, "target": "wenzelmk_89a024e3c7e19424ad676000ba374923", "links": [{"target_end_line": 45, "source_start_line": 73, "source_end_line": 116, "source_confidence": 49, "target_start_line": 5, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 122, "source_end_line": 151, "source_confidence": 49, "target_start_line": 53, "target_confidence": 73}, {"target_end_line": 190, "source_start_line": 279, "source_end_line": 300, "source_confidence": 49, "target_start_line": 170, "target_confidence": 73}, {"target_end_line": 105, "source_start_line": 153, "source_end_line": 174, "source_confidence": 49, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 158, "source_start_line": 181, "source_end_line": 190, "source_confidence": 49, "target_start_line": 151, "target_confidence": 73}, {"target_end_line": 120, "source_start_line": 197, "source_end_line": 207, "source_confidence": 49, "target_start_line": 110, "target_confidence": 73}, {"target_end_line": 211, "source_start_line": 313, "source_end_line": 322, "source_confidence": 49, "target_start_line": 203, "target_confidence": 73}, {"target_end_line": 146, "source_start_line": 215, "source_end_line": 227, "source_confidence": 49, "target_start_line": 134, "target_confidence": 73}, {"target_end_line": 50, "source_start_line": 117, "source_end_line": 120, "source_confidence": 49, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 168, "source_start_line": 273, "source_end_line": 277, "source_confidence": 49, "target_start_line": 164, "target_confidence": 73}, {"target_end_line": 45, "source_start_line": 73, "source_end_line": 116, "source_confidence": 49, "target_start_line": 5, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 122, "source_end_line": 151, "source_confidence": 49, "target_start_line": 53, "target_confidence": 73}, {"target_end_line": 190, "source_start_line": 279, "source_end_line": 300, "source_confidence": 49, "target_start_line": 170, "target_confidence": 73}, {"target_end_line": 105, "source_start_line": 153, "source_end_line": 174, "source_confidence": 49, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 158, "source_start_line": 181, "source_end_line": 190, "source_confidence": 49, "target_start_line": 151, "target_confidence": 73}, {"target_end_line": 120, "source_start_line": 197, "source_end_line": 207, "source_confidence": 49, "target_start_line": 110, "target_confidence": 73}, {"target_end_line": 211, "source_start_line": 313, "source_end_line": 322, "source_confidence": 49, "target_start_line": 203, "target_confidence": 73}, {"target_end_line": 146, "source_start_line": 215, "source_end_line": 227, "source_confidence": 49, "target_start_line": 134, "target_confidence": 73}, {"target_end_line": 50, "source_start_line": 117, "source_end_line": 120, "source_confidence": 49, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 168, "source_start_line": 273, "source_end_line": 277, "source_confidence": 49, "target_start_line": 164, "target_confidence": 73}, {"target_end_line": 45, "source_start_line": 73, "source_end_line": 116, "source_confidence": 49, "target_start_line": 5, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 122, "source_end_line": 151, "source_confidence": 49, "target_start_line": 53, "target_confidence": 73}, {"target_end_line": 190, "source_start_line": 279, "source_end_line": 300, "source_confidence": 49, "target_start_line": 170, "target_confidence": 73}, {"target_end_line": 105, "source_start_line": 153, "source_end_line": 174, "source_confidence": 49, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 158, "source_start_line": 181, "source_end_line": 190, "source_confidence": 49, "target_start_line": 151, "target_confidence": 73}, {"target_end_line": 120, "source_start_line": 197, "source_end_line": 207, "source_confidence": 49, "target_start_line": 110, "target_confidence": 73}, {"target_end_line": 211, "source_start_line": 313, "source_end_line": 322, "source_confidence": 49, "target_start_line": 203, "target_confidence": 73}, {"target_end_line": 146, "source_start_line": 215, "source_end_line": 227, "source_confidence": 49, "target_start_line": 134, "target_confidence": 73}, {"target_end_line": 50, "source_start_line": 117, "source_end_line": 120, "source_confidence": 49, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 168, "source_start_line": 273, "source_end_line": 277, "source_confidence": 49, "target_start_line": 164, "target_confidence": 73}, {"target_end_line": 45, "source_start_line": 73, "source_end_line": 116, "source_confidence": 49, "target_start_line": 5, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 122, "source_end_line": 151, "source_confidence": 49, "target_start_line": 53, "target_confidence": 73}, {"target_end_line": 190, "source_start_line": 279, "source_end_line": 300, "source_confidence": 49, "target_start_line": 170, "target_confidence": 73}, {"target_end_line": 105, "source_start_line": 153, "source_end_line": 174, "source_confidence": 49, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 158, "source_start_line": 181, "source_end_line": 190, "source_confidence": 49, "target_start_line": 151, "target_confidence": 73}, {"target_end_line": 120, "source_start_line": 197, "source_end_line": 207, "source_confidence": 49, "target_start_line": 110, "target_confidence": 73}, {"target_end_line": 211, "source_start_line": 313, "source_end_line": 322, "source_confidence": 49, "target_start_line": 203, "target_confidence": 73}, {"target_end_line": 146, "source_start_line": 215, "source_end_line": 227, "source_confidence": 49, "target_start_line": 134, "target_confidence": 73}, {"target_end_line": 50, "source_start_line": 117, "source_end_line": 120, "source_confidence": 49, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 168, "source_start_line": 273, "source_end_line": 277, "source_confidence": 49, "target_start_line": 164, "target_confidence": 73}, {"target_end_line": 45, "source_start_line": 73, "source_end_line": 116, "source_confidence": 49, "target_start_line": 5, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 122, "source_end_line": 151, "source_confidence": 49, "target_start_line": 53, "target_confidence": 73}, {"target_end_line": 190, "source_start_line": 279, "source_end_line": 300, "source_confidence": 49, "target_start_line": 170, "target_confidence": 73}, {"target_end_line": 105, "source_start_line": 153, "source_end_line": 174, "source_confidence": 49, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 158, "source_start_line": 181, "source_end_line": 190, "source_confidence": 49, "target_start_line": 151, "target_confidence": 73}, {"target_end_line": 120, "source_start_line": 197, "source_end_line": 207, "source_confidence": 49, "target_start_line": 110, "target_confidence": 73}, {"target_end_line": 211, "source_start_line": 313, "source_end_line": 322, "source_confidence": 49, "target_start_line": 203, "target_confidence": 73}, {"target_end_line": 146, "source_start_line": 215, "source_end_line": 227, "source_confidence": 49, "target_start_line": 134, "target_confidence": 73}, {"target_end_line": 50, "source_start_line": 117, "source_end_line": 120, "source_confidence": 49, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 168, "source_start_line": 273, "source_end_line": 277, "source_confidence": 49, "target_start_line": 164, "target_confidence": 73}, {"target_end_line": 45, "source_start_line": 73, "source_end_line": 116, "source_confidence": 49, "target_start_line": 5, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 122, "source_end_line": 151, "source_confidence": 49, "target_start_line": 53, "target_confidence": 73}, {"target_end_line": 190, "source_start_line": 279, "source_end_line": 300, "source_confidence": 49, "target_start_line": 170, "target_confidence": 73}, {"target_end_line": 105, "source_start_line": 153, "source_end_line": 174, "source_confidence": 49, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 158, "source_start_line": 181, "source_end_line": 190, "source_confidence": 49, "target_start_line": 151, "target_confidence": 73}, {"target_end_line": 120, "source_start_line": 197, "source_end_line": 207, "source_confidence": 49, "target_start_line": 110, "target_confidence": 73}, {"target_end_line": 211, "source_start_line": 313, "source_end_line": 322, "source_confidence": 49, "target_start_line": 203, "target_confidence": 73}, {"target_end_line": 146, "source_start_line": 215, "source_end_line": 227, "source_confidence": 49, "target_start_line": 134, "target_confidence": 73}, {"target_end_line": 50, "source_start_line": 117, "source_end_line": 120, "source_confidence": 49, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 168, "source_start_line": 273, "source_end_line": 277, "source_confidence": 49, "target_start_line": 164, "target_confidence": 73}, {"target_end_line": 45, "source_start_line": 73, "source_end_line": 116, "source_confidence": 49, "target_start_line": 5, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 122, "source_end_line": 151, "source_confidence": 49, "target_start_line": 53, "target_confidence": 73}, {"target_end_line": 190, "source_start_line": 279, "source_end_line": 300, "source_confidence": 49, "target_start_line": 170, "target_confidence": 73}, {"target_end_line": 105, "source_start_line": 153, "source_end_line": 174, "source_confidence": 49, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 158, "source_start_line": 181, "source_end_line": 190, "source_confidence": 49, "target_start_line": 151, "target_confidence": 73}, {"target_end_line": 120, "source_start_line": 197, "source_end_line": 207, "source_confidence": 49, "target_start_line": 110, "target_confidence": 73}, {"target_end_line": 211, "source_start_line": 313, "source_end_line": 322, "source_confidence": 49, "target_start_line": 203, "target_confidence": 73}, {"target_end_line": 146, "source_start_line": 215, "source_end_line": 227, "source_confidence": 49, "target_start_line": 134, "target_confidence": 73}, {"target_end_line": 50, "source_start_line": 117, "source_end_line": 120, "source_confidence": 49, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 168, "source_start_line": 273, "source_end_line": 277, "source_confidence": 49, "target_start_line": 164, "target_confidence": 73}, {"target_end_line": 45, "source_start_line": 73, "source_end_line": 116, "source_confidence": 49, "target_start_line": 5, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 122, "source_end_line": 151, "source_confidence": 49, "target_start_line": 53, "target_confidence": 73}, {"target_end_line": 190, "source_start_line": 279, "source_end_line": 300, "source_confidence": 49, "target_start_line": 170, "target_confidence": 73}, {"target_end_line": 105, "source_start_line": 153, "source_end_line": 174, "source_confidence": 49, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 158, "source_start_line": 181, "source_end_line": 190, "source_confidence": 49, "target_start_line": 151, "target_confidence": 73}, {"target_end_line": 120, "source_start_line": 197, "source_end_line": 207, "source_confidence": 49, "target_start_line": 110, "target_confidence": 73}, {"target_end_line": 211, "source_start_line": 313, "source_end_line": 322, "source_confidence": 49, "target_start_line": 203, "target_confidence": 73}, {"target_end_line": 146, "source_start_line": 215, "source_end_line": 227, "source_confidence": 49, "target_start_line": 134, "target_confidence": 73}, {"target_end_line": 50, "source_start_line": 117, "source_end_line": 120, "source_confidence": 49, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 168, "source_start_line": 273, "source_end_line": 277, "source_confidence": 49, "target_start_line": 164, "target_confidence": 73}, {"target_end_line": 45, "source_start_line": 73, "source_end_line": 116, "source_confidence": 49, "target_start_line": 5, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 122, "source_end_line": 151, "source_confidence": 49, "target_start_line": 53, "target_confidence": 73}, {"target_end_line": 190, "source_start_line": 279, "source_end_line": 300, "source_confidence": 49, "target_start_line": 170, "target_confidence": 73}, {"target_end_line": 105, "source_start_line": 153, "source_end_line": 174, "source_confidence": 49, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 158, "source_start_line": 181, "source_end_line": 190, "source_confidence": 49, "target_start_line": 151, "target_confidence": 73}, {"target_end_line": 120, "source_start_line": 197, "source_end_line": 207, "source_confidence": 49, "target_start_line": 110, "target_confidence": 73}, {"target_end_line": 211, "source_start_line": 313, "source_end_line": 322, "source_confidence": 49, "target_start_line": 203, "target_confidence": 73}, {"target_end_line": 146, "source_start_line": 215, "source_end_line": 227, "source_confidence": 49, "target_start_line": 134, "target_confidence": 73}, {"target_end_line": 50, "source_start_line": 117, "source_end_line": 120, "source_confidence": 49, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 168, "source_start_line": 273, "source_end_line": 277, "source_confidence": 49, "target_start_line": 164, "target_confidence": 73}, {"target_end_line": 45, "source_start_line": 73, "source_end_line": 116, "source_confidence": 49, "target_start_line": 5, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 122, "source_end_line": 151, "source_confidence": 49, "target_start_line": 53, "target_confidence": 73}, {"target_end_line": 190, "source_start_line": 279, "source_end_line": 300, "source_confidence": 49, "target_start_line": 170, "target_confidence": 73}, {"target_end_line": 105, "source_start_line": 153, "source_end_line": 174, "source_confidence": 49, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 158, "source_start_line": 181, "source_end_line": 190, "source_confidence": 49, "target_start_line": 151, "target_confidence": 73}, {"target_end_line": 120, "source_start_line": 197, "source_end_line": 207, "source_confidence": 49, "target_start_line": 110, "target_confidence": 73}, {"target_end_line": 211, "source_start_line": 313, "source_end_line": 322, "source_confidence": 49, "target_start_line": 203, "target_confidence": 73}, {"target_end_line": 146, "source_start_line": 215, "source_end_line": 227, "source_confidence": 49, "target_start_line": 134, "target_confidence": 73}, {"target_end_line": 50, "source_start_line": 117, "source_end_line": 120, "source_confidence": 49, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 168, "source_start_line": 273, "source_end_line": 277, "source_confidence": 49, "target_start_line": 164, "target_confidence": 73}]}, {"source": "monkeycycle_a492b5e0da787d2e3bbe86af450b4bf7", "value": 40, "target": "fabi-goetz_9dd45e90e6ce5ab6abe98da8729aee8b", "links": [{"target_end_line": 28, "source_start_line": 28, "source_end_line": 34, "source_confidence": 48, "target_start_line": 22, "target_confidence": 61}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 9, "source_confidence": 48, "target_start_line": 1, "target_confidence": 61}, {"target_end_line": 41, "source_start_line": 45, "source_end_line": 54, "source_confidence": 48, "target_start_line": 32, "target_confidence": 61}, {"target_end_line": 53, "source_start_line": 56, "source_end_line": 63, "source_confidence": 48, "target_start_line": 47, "target_confidence": 61}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 16, "source_confidence": 48, "target_start_line": 10, "target_confidence": 61}, {"target_end_line": 28, "source_start_line": 28, "source_end_line": 34, "source_confidence": 48, "target_start_line": 22, "target_confidence": 61}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 9, "source_confidence": 48, "target_start_line": 1, "target_confidence": 61}, {"target_end_line": 41, "source_start_line": 45, "source_end_line": 54, "source_confidence": 48, "target_start_line": 32, "target_confidence": 61}, {"target_end_line": 53, "source_start_line": 56, "source_end_line": 63, "source_confidence": 48, "target_start_line": 47, "target_confidence": 61}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 16, "source_confidence": 48, "target_start_line": 10, "target_confidence": 61}, {"target_end_line": 28, "source_start_line": 28, "source_end_line": 34, "source_confidence": 48, "target_start_line": 22, "target_confidence": 61}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 9, "source_confidence": 48, "target_start_line": 1, "target_confidence": 61}, {"target_end_line": 41, "source_start_line": 45, "source_end_line": 54, "source_confidence": 48, "target_start_line": 32, "target_confidence": 61}, {"target_end_line": 53, "source_start_line": 56, "source_end_line": 63, "source_confidence": 48, "target_start_line": 47, "target_confidence": 61}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 16, "source_confidence": 48, "target_start_line": 10, "target_confidence": 61}, {"target_end_line": 28, "source_start_line": 28, "source_end_line": 34, "source_confidence": 48, "target_start_line": 22, "target_confidence": 61}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 9, "source_confidence": 48, "target_start_line": 1, "target_confidence": 61}, {"target_end_line": 41, "source_start_line": 45, "source_end_line": 54, "source_confidence": 48, "target_start_line": 32, "target_confidence": 61}, {"target_end_line": 53, "source_start_line": 56, "source_end_line": 63, "source_confidence": 48, "target_start_line": 47, "target_confidence": 61}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 16, "source_confidence": 48, "target_start_line": 10, "target_confidence": 61}, {"target_end_line": 28, "source_start_line": 28, "source_end_line": 34, "source_confidence": 48, "target_start_line": 22, "target_confidence": 61}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 9, "source_confidence": 48, "target_start_line": 1, "target_confidence": 61}, {"target_end_line": 41, "source_start_line": 45, "source_end_line": 54, "source_confidence": 48, "target_start_line": 32, "target_confidence": 61}, {"target_end_line": 53, "source_start_line": 56, "source_end_line": 63, "source_confidence": 48, "target_start_line": 47, "target_confidence": 61}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 16, "source_confidence": 48, "target_start_line": 10, "target_confidence": 61}]}, {"source": "dogobox_d1e6411426e394efb82a49871e3f8cf7", "value": 30, "target": "aarrigo_bcef4b52c0dd11c30ce3f6adc2837376", "links": [{"target_end_line": 71, "source_start_line": 72, "source_end_line": 88, "source_confidence": 19, "target_start_line": 55, "target_confidence": 28}, {"target_end_line": 95, "source_start_line": 130, "source_end_line": 137, "source_confidence": 19, "target_start_line": 88, "target_confidence": 28}, {"target_end_line": 77, "source_start_line": 92, "source_end_line": 96, "source_confidence": 19, "target_start_line": 73, "target_confidence": 28}, {"target_end_line": 71, "source_start_line": 72, "source_end_line": 88, "source_confidence": 19, "target_start_line": 55, "target_confidence": 28}, {"target_end_line": 95, "source_start_line": 130, "source_end_line": 137, "source_confidence": 19, "target_start_line": 88, "target_confidence": 28}, {"target_end_line": 77, "source_start_line": 92, "source_end_line": 96, "source_confidence": 19, "target_start_line": 73, "target_confidence": 28}, {"target_end_line": 71, "source_start_line": 72, "source_end_line": 88, "source_confidence": 19, "target_start_line": 55, "target_confidence": 28}, {"target_end_line": 95, "source_start_line": 130, "source_end_line": 137, "source_confidence": 19, "target_start_line": 88, "target_confidence": 28}, {"target_end_line": 77, "source_start_line": 92, "source_end_line": 96, "source_confidence": 19, "target_start_line": 73, "target_confidence": 28}]}, {"source": "mbostock_f85ffb3a5ac518598043", "value": 23, "target": "Pacsangon_9b0785d902a889f1013449f9b8e2b656", "links": [{"target_end_line": 39, "source_start_line": 36, "source_end_line": 41, "source_confidence": 42, "target_start_line": 34, "target_confidence": 58}, {"target_end_line": 29, "source_start_line": 22, "source_end_line": 29, "source_confidence": 42, "target_start_line": 20, "target_confidence": 58}, {"target_end_line": 42, "source_start_line": 45, "source_end_line": 45, "source_confidence": 42, "target_start_line": 42, "target_confidence": 58}, {"target_end_line": 17, "source_start_line": 12, "source_end_line": 17, "source_confidence": 42, "target_start_line": 12, "target_confidence": 58}, {"target_end_line": 39, "source_start_line": 36, "source_end_line": 41, "source_confidence": 42, "target_start_line": 34, "target_confidence": 58}, {"target_end_line": 29, "source_start_line": 22, "source_end_line": 29, "source_confidence": 42, "target_start_line": 20, "target_confidence": 58}, {"target_end_line": 42, "source_start_line": 45, "source_end_line": 45, "source_confidence": 42, "target_start_line": 42, "target_confidence": 58}, {"target_end_line": 17, "source_start_line": 12, "source_end_line": 17, "source_confidence": 42, "target_start_line": 12, "target_confidence": 58}, {"target_end_line": 39, "source_start_line": 36, "source_end_line": 41, "source_confidence": 42, "target_start_line": 34, "target_confidence": 58}, {"target_end_line": 29, "source_start_line": 22, "source_end_line": 29, "source_confidence": 42, "target_start_line": 20, "target_confidence": 58}, {"target_end_line": 42, "source_start_line": 45, "source_end_line": 45, "source_confidence": 42, "target_start_line": 42, "target_confidence": 58}, {"target_end_line": 17, "source_start_line": 12, "source_end_line": 17, "source_confidence": 42, "target_start_line": 12, "target_confidence": 58}, {"target_end_line": 39, "source_start_line": 36, "source_end_line": 41, "source_confidence": 42, "target_start_line": 34, "target_confidence": 58}, {"target_end_line": 29, "source_start_line": 22, "source_end_line": 29, "source_confidence": 42, "target_start_line": 20, "target_confidence": 58}, {"target_end_line": 42, "source_start_line": 45, "source_end_line": 45, "source_confidence": 42, "target_start_line": 42, "target_confidence": 58}, {"target_end_line": 17, "source_start_line": 12, "source_end_line": 17, "source_confidence": 42, "target_start_line": 12, "target_confidence": 58}]}, {"source": "jonpage_c2a95b1f7ee8d65761da60ad8450ec14", "value": 67, "target": "BBischof_ce688f5edeff3339157e054eacc9725c", "links": [{"target_end_line": 29, "source_start_line": 11, "source_end_line": 29, "source_confidence": 84, "target_start_line": 11, "target_confidence": 83}, {"target_end_line": 58, "source_start_line": 42, "source_end_line": 55, "source_confidence": 84, "target_start_line": 43, "target_confidence": 83}, {"target_end_line": 77, "source_start_line": 64, "source_end_line": 69, "source_confidence": 84, "target_start_line": 72, "target_confidence": 83}, {"target_end_line": 34, "source_start_line": 30, "source_end_line": 34, "source_confidence": 84, "target_start_line": 30, "target_confidence": 83}, {"target_end_line": 43, "source_start_line": 34, "source_end_line": 42, "source_confidence": 84, "target_start_line": 34, "target_confidence": 83}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 84, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 71, "source_start_line": 61, "source_end_line": 63, "source_confidence": 84, "target_start_line": 69, "target_confidence": 83}, {"target_end_line": 29, "source_start_line": 11, "source_end_line": 29, "source_confidence": 84, "target_start_line": 11, "target_confidence": 83}, {"target_end_line": 58, "source_start_line": 42, "source_end_line": 55, "source_confidence": 84, "target_start_line": 43, "target_confidence": 83}, {"target_end_line": 77, "source_start_line": 64, "source_end_line": 69, "source_confidence": 84, "target_start_line": 72, "target_confidence": 83}, {"target_end_line": 34, "source_start_line": 30, "source_end_line": 34, "source_confidence": 84, "target_start_line": 30, "target_confidence": 83}, {"target_end_line": 43, "source_start_line": 34, "source_end_line": 42, "source_confidence": 84, "target_start_line": 34, "target_confidence": 83}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 84, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 71, "source_start_line": 61, "source_end_line": 63, "source_confidence": 84, "target_start_line": 69, "target_confidence": 83}, {"target_end_line": 29, "source_start_line": 11, "source_end_line": 29, "source_confidence": 84, "target_start_line": 11, "target_confidence": 83}, {"target_end_line": 58, "source_start_line": 42, "source_end_line": 55, "source_confidence": 84, "target_start_line": 43, "target_confidence": 83}, {"target_end_line": 77, "source_start_line": 64, "source_end_line": 69, "source_confidence": 84, "target_start_line": 72, "target_confidence": 83}, {"target_end_line": 34, "source_start_line": 30, "source_end_line": 34, "source_confidence": 84, "target_start_line": 30, "target_confidence": 83}, {"target_end_line": 43, "source_start_line": 34, "source_end_line": 42, "source_confidence": 84, "target_start_line": 34, "target_confidence": 83}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 84, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 71, "source_start_line": 61, "source_end_line": 63, "source_confidence": 84, "target_start_line": 69, "target_confidence": 83}, {"target_end_line": 29, "source_start_line": 11, "source_end_line": 29, "source_confidence": 84, "target_start_line": 11, "target_confidence": 83}, {"target_end_line": 58, "source_start_line": 42, "source_end_line": 55, "source_confidence": 84, "target_start_line": 43, "target_confidence": 83}, {"target_end_line": 77, "source_start_line": 64, "source_end_line": 69, "source_confidence": 84, "target_start_line": 72, "target_confidence": 83}, {"target_end_line": 34, "source_start_line": 30, "source_end_line": 34, "source_confidence": 84, "target_start_line": 30, "target_confidence": 83}, {"target_end_line": 43, "source_start_line": 34, "source_end_line": 42, "source_confidence": 84, "target_start_line": 34, "target_confidence": 83}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 84, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 71, "source_start_line": 61, "source_end_line": 63, "source_confidence": 84, "target_start_line": 69, "target_confidence": 83}, {"target_end_line": 29, "source_start_line": 11, "source_end_line": 29, "source_confidence": 84, "target_start_line": 11, "target_confidence": 83}, {"target_end_line": 58, "source_start_line": 42, "source_end_line": 55, "source_confidence": 84, "target_start_line": 43, "target_confidence": 83}, {"target_end_line": 77, "source_start_line": 64, "source_end_line": 69, "source_confidence": 84, "target_start_line": 72, "target_confidence": 83}, {"target_end_line": 34, "source_start_line": 30, "source_end_line": 34, "source_confidence": 84, "target_start_line": 30, "target_confidence": 83}, {"target_end_line": 43, "source_start_line": 34, "source_end_line": 42, "source_confidence": 84, "target_start_line": 34, "target_confidence": 83}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 84, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 71, "source_start_line": 61, "source_end_line": 63, "source_confidence": 84, "target_start_line": 69, "target_confidence": 83}, {"target_end_line": 29, "source_start_line": 11, "source_end_line": 29, "source_confidence": 84, "target_start_line": 11, "target_confidence": 83}, {"target_end_line": 58, "source_start_line": 42, "source_end_line": 55, "source_confidence": 84, "target_start_line": 43, "target_confidence": 83}, {"target_end_line": 77, "source_start_line": 64, "source_end_line": 69, "source_confidence": 84, "target_start_line": 72, "target_confidence": 83}, {"target_end_line": 34, "source_start_line": 30, "source_end_line": 34, "source_confidence": 84, "target_start_line": 30, "target_confidence": 83}, {"target_end_line": 43, "source_start_line": 34, "source_end_line": 42, "source_confidence": 84, "target_start_line": 34, "target_confidence": 83}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 84, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 71, "source_start_line": 61, "source_end_line": 63, "source_confidence": 84, "target_start_line": 69, "target_confidence": 83}, {"target_end_line": 29, "source_start_line": 11, "source_end_line": 29, "source_confidence": 84, "target_start_line": 11, "target_confidence": 83}, {"target_end_line": 58, "source_start_line": 42, "source_end_line": 55, "source_confidence": 84, "target_start_line": 43, "target_confidence": 83}, {"target_end_line": 77, "source_start_line": 64, "source_end_line": 69, "source_confidence": 84, "target_start_line": 72, "target_confidence": 83}, {"target_end_line": 34, "source_start_line": 30, "source_end_line": 34, "source_confidence": 84, "target_start_line": 30, "target_confidence": 83}, {"target_end_line": 43, "source_start_line": 34, "source_end_line": 42, "source_confidence": 84, "target_start_line": 34, "target_confidence": 83}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 84, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 71, "source_start_line": 61, "source_end_line": 63, "source_confidence": 84, "target_start_line": 69, "target_confidence": 83}]}, {"source": "grybnicky_da7862addded5c94370d994e98bb364b", "value": 40, "target": "monkeycycle_a492b5e0da787d2e3bbe86af450b4bf7", "links": [{"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 61, "target_start_line": 28, "target_confidence": 48}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 8, "source_confidence": 61, "target_start_line": 1, "target_confidence": 48}, {"target_end_line": 54, "source_start_line": 32, "source_end_line": 41, "source_confidence": 61, "target_start_line": 45, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 47, "source_end_line": 53, "source_confidence": 61, "target_start_line": 56, "target_confidence": 48}, {"target_end_line": 16, "source_start_line": 10, "source_end_line": 15, "source_confidence": 61, "target_start_line": 11, "target_confidence": 48}, {"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 61, "target_start_line": 28, "target_confidence": 48}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 8, "source_confidence": 61, "target_start_line": 1, "target_confidence": 48}, {"target_end_line": 54, "source_start_line": 32, "source_end_line": 41, "source_confidence": 61, "target_start_line": 45, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 47, "source_end_line": 53, "source_confidence": 61, "target_start_line": 56, "target_confidence": 48}, {"target_end_line": 16, "source_start_line": 10, "source_end_line": 15, "source_confidence": 61, "target_start_line": 11, "target_confidence": 48}, {"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 61, "target_start_line": 28, "target_confidence": 48}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 8, "source_confidence": 61, "target_start_line": 1, "target_confidence": 48}, {"target_end_line": 54, "source_start_line": 32, "source_end_line": 41, "source_confidence": 61, "target_start_line": 45, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 47, "source_end_line": 53, "source_confidence": 61, "target_start_line": 56, "target_confidence": 48}, {"target_end_line": 16, "source_start_line": 10, "source_end_line": 15, "source_confidence": 61, "target_start_line": 11, "target_confidence": 48}, {"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 61, "target_start_line": 28, "target_confidence": 48}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 8, "source_confidence": 61, "target_start_line": 1, "target_confidence": 48}, {"target_end_line": 54, "source_start_line": 32, "source_end_line": 41, "source_confidence": 61, "target_start_line": 45, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 47, "source_end_line": 53, "source_confidence": 61, "target_start_line": 56, "target_confidence": 48}, {"target_end_line": 16, "source_start_line": 10, "source_end_line": 15, "source_confidence": 61, "target_start_line": 11, "target_confidence": 48}, {"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 61, "target_start_line": 28, "target_confidence": 48}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 8, "source_confidence": 61, "target_start_line": 1, "target_confidence": 48}, {"target_end_line": 54, "source_start_line": 32, "source_end_line": 41, "source_confidence": 61, "target_start_line": 45, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 47, "source_end_line": 53, "source_confidence": 61, "target_start_line": 56, "target_confidence": 48}, {"target_end_line": 16, "source_start_line": 10, "source_end_line": 15, "source_confidence": 61, "target_start_line": 11, "target_confidence": 48}]}, {"source": "mbostock_a7ae83252305ed4d54d4", "value": 41, "target": "tophtucker_d96bba12dc526ab7cd96fa79a969661b", "links": [{"target_end_line": 192, "source_start_line": 11, "source_end_line": 51, "source_confidence": 76, "target_start_line": 152, "target_confidence": 9}]}, {"source": "Jay-Oh-eN_9b6e74c60e753f5b280f", "value": 43, "target": "john-guerra_d514a47f1d5dbf237ec1ad8a6e3d7996", "links": [{"target_end_line": 53, "source_start_line": 70, "source_end_line": 82, "source_confidence": 41, "target_start_line": 43, "target_confidence": 37}, {"target_end_line": 19, "source_start_line": 16, "source_end_line": 21, "source_confidence": 41, "target_start_line": 12, "target_confidence": 37}, {"target_end_line": 60, "source_start_line": 83, "source_end_line": 92, "source_confidence": 41, "target_start_line": 54, "target_confidence": 37}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 10, "source_confidence": 41, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 76, "source_start_line": 60, "source_end_line": 65, "source_confidence": 41, "target_start_line": 73, "target_confidence": 37}, {"target_end_line": 53, "source_start_line": 70, "source_end_line": 82, "source_confidence": 41, "target_start_line": 43, "target_confidence": 37}, {"target_end_line": 19, "source_start_line": 16, "source_end_line": 21, "source_confidence": 41, "target_start_line": 12, "target_confidence": 37}, {"target_end_line": 60, "source_start_line": 83, "source_end_line": 92, "source_confidence": 41, "target_start_line": 54, "target_confidence": 37}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 10, "source_confidence": 41, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 76, "source_start_line": 60, "source_end_line": 65, "source_confidence": 41, "target_start_line": 73, "target_confidence": 37}, {"target_end_line": 53, "source_start_line": 70, "source_end_line": 82, "source_confidence": 41, "target_start_line": 43, "target_confidence": 37}, {"target_end_line": 19, "source_start_line": 16, "source_end_line": 21, "source_confidence": 41, "target_start_line": 12, "target_confidence": 37}, {"target_end_line": 60, "source_start_line": 83, "source_end_line": 92, "source_confidence": 41, "target_start_line": 54, "target_confidence": 37}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 10, "source_confidence": 41, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 76, "source_start_line": 60, "source_end_line": 65, "source_confidence": 41, "target_start_line": 73, "target_confidence": 37}, {"target_end_line": 53, "source_start_line": 70, "source_end_line": 82, "source_confidence": 41, "target_start_line": 43, "target_confidence": 37}, {"target_end_line": 19, "source_start_line": 16, "source_end_line": 21, "source_confidence": 41, "target_start_line": 12, "target_confidence": 37}, {"target_end_line": 60, "source_start_line": 83, "source_end_line": 92, "source_confidence": 41, "target_start_line": 54, "target_confidence": 37}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 10, "source_confidence": 41, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 76, "source_start_line": 60, "source_end_line": 65, "source_confidence": 41, "target_start_line": 73, "target_confidence": 37}, {"target_end_line": 53, "source_start_line": 70, "source_end_line": 82, "source_confidence": 41, "target_start_line": 43, "target_confidence": 37}, {"target_end_line": 19, "source_start_line": 16, "source_end_line": 21, "source_confidence": 41, "target_start_line": 12, "target_confidence": 37}, {"target_end_line": 60, "source_start_line": 83, "source_end_line": 92, "source_confidence": 41, "target_start_line": 54, "target_confidence": 37}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 10, "source_confidence": 41, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 76, "source_start_line": 60, "source_end_line": 65, "source_confidence": 41, "target_start_line": 73, "target_confidence": 37}]}, {"source": "stjacqrm_cccd094b4347844986a4a3cdaa3b04a5", "value": 52, "target": "wenzelmk_7fc1210d25a90fa195ecc2443a77be6e", "links": [{"target_end_line": 28, "source_start_line": 33, "source_end_line": 37, "source_confidence": 25, "target_start_line": 24, "target_confidence": 26}, {"target_end_line": 58, "source_start_line": 74, "source_end_line": 83, "source_confidence": 25, "target_start_line": 49, "target_confidence": 26}, {"target_end_line": 67, "source_start_line": 85, "source_end_line": 93, "source_confidence": 25, "target_start_line": 59, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 25, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 79, "source_start_line": 95, "source_end_line": 104, "source_confidence": 25, "target_start_line": 70, "target_confidence": 26}, {"target_end_line": 23, "source_start_line": 17, "source_end_line": 24, "source_confidence": 25, "target_start_line": 15, "target_confidence": 26}, {"target_end_line": 45, "source_start_line": 66, "source_end_line": 71, "source_confidence": 25, "target_start_line": 40, "target_confidence": 26}, {"target_end_line": 28, "source_start_line": 33, "source_end_line": 37, "source_confidence": 25, "target_start_line": 24, "target_confidence": 26}, {"target_end_line": 58, "source_start_line": 74, "source_end_line": 83, "source_confidence": 25, "target_start_line": 49, "target_confidence": 26}, {"target_end_line": 67, "source_start_line": 85, "source_end_line": 93, "source_confidence": 25, "target_start_line": 59, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 25, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 79, "source_start_line": 95, "source_end_line": 104, "source_confidence": 25, "target_start_line": 70, "target_confidence": 26}, {"target_end_line": 23, "source_start_line": 17, "source_end_line": 24, "source_confidence": 25, "target_start_line": 15, "target_confidence": 26}, {"target_end_line": 45, "source_start_line": 66, "source_end_line": 71, "source_confidence": 25, "target_start_line": 40, "target_confidence": 26}, {"target_end_line": 28, "source_start_line": 33, "source_end_line": 37, "source_confidence": 25, "target_start_line": 24, "target_confidence": 26}, {"target_end_line": 58, "source_start_line": 74, "source_end_line": 83, "source_confidence": 25, "target_start_line": 49, "target_confidence": 26}, {"target_end_line": 67, "source_start_line": 85, "source_end_line": 93, "source_confidence": 25, "target_start_line": 59, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 25, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 79, "source_start_line": 95, "source_end_line": 104, "source_confidence": 25, "target_start_line": 70, "target_confidence": 26}, {"target_end_line": 23, "source_start_line": 17, "source_end_line": 24, "source_confidence": 25, "target_start_line": 15, "target_confidence": 26}, {"target_end_line": 45, "source_start_line": 66, "source_end_line": 71, "source_confidence": 25, "target_start_line": 40, "target_confidence": 26}, {"target_end_line": 28, "source_start_line": 33, "source_end_line": 37, "source_confidence": 25, "target_start_line": 24, "target_confidence": 26}, {"target_end_line": 58, "source_start_line": 74, "source_end_line": 83, "source_confidence": 25, "target_start_line": 49, "target_confidence": 26}, {"target_end_line": 67, "source_start_line": 85, "source_end_line": 93, "source_confidence": 25, "target_start_line": 59, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 25, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 79, "source_start_line": 95, "source_end_line": 104, "source_confidence": 25, "target_start_line": 70, "target_confidence": 26}, {"target_end_line": 23, "source_start_line": 17, "source_end_line": 24, "source_confidence": 25, "target_start_line": 15, "target_confidence": 26}, {"target_end_line": 45, "source_start_line": 66, "source_end_line": 71, "source_confidence": 25, "target_start_line": 40, "target_confidence": 26}, {"target_end_line": 28, "source_start_line": 33, "source_end_line": 37, "source_confidence": 25, "target_start_line": 24, "target_confidence": 26}, {"target_end_line": 58, "source_start_line": 74, "source_end_line": 83, "source_confidence": 25, "target_start_line": 49, "target_confidence": 26}, {"target_end_line": 67, "source_start_line": 85, "source_end_line": 93, "source_confidence": 25, "target_start_line": 59, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 25, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 79, "source_start_line": 95, "source_end_line": 104, "source_confidence": 25, "target_start_line": 70, "target_confidence": 26}, {"target_end_line": 23, "source_start_line": 17, "source_end_line": 24, "source_confidence": 25, "target_start_line": 15, "target_confidence": 26}, {"target_end_line": 45, "source_start_line": 66, "source_end_line": 71, "source_confidence": 25, "target_start_line": 40, "target_confidence": 26}, {"target_end_line": 28, "source_start_line": 33, "source_end_line": 37, "source_confidence": 25, "target_start_line": 24, "target_confidence": 26}, {"target_end_line": 58, "source_start_line": 74, "source_end_line": 83, "source_confidence": 25, "target_start_line": 49, "target_confidence": 26}, {"target_end_line": 67, "source_start_line": 85, "source_end_line": 93, "source_confidence": 25, "target_start_line": 59, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 25, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 79, "source_start_line": 95, "source_end_line": 104, "source_confidence": 25, "target_start_line": 70, "target_confidence": 26}, {"target_end_line": 23, "source_start_line": 17, "source_end_line": 24, "source_confidence": 25, "target_start_line": 15, "target_confidence": 26}, {"target_end_line": 45, "source_start_line": 66, "source_end_line": 71, "source_confidence": 25, "target_start_line": 40, "target_confidence": 26}, {"target_end_line": 28, "source_start_line": 33, "source_end_line": 37, "source_confidence": 25, "target_start_line": 24, "target_confidence": 26}, {"target_end_line": 58, "source_start_line": 74, "source_end_line": 83, "source_confidence": 25, "target_start_line": 49, "target_confidence": 26}, {"target_end_line": 67, "source_start_line": 85, "source_end_line": 93, "source_confidence": 25, "target_start_line": 59, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 25, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 79, "source_start_line": 95, "source_end_line": 104, "source_confidence": 25, "target_start_line": 70, "target_confidence": 26}, {"target_end_line": 23, "source_start_line": 17, "source_end_line": 24, "source_confidence": 25, "target_start_line": 15, "target_confidence": 26}, {"target_end_line": 45, "source_start_line": 66, "source_end_line": 71, "source_confidence": 25, "target_start_line": 40, "target_confidence": 26}]}, {"source": "scresawn_bb374e92179586d1070f257b429e8991", "value": 201, "target": "stjacqrm_cccd094b4347844986a4a3cdaa3b04a5", "links": [{"target_end_line": 126, "source_start_line": 1, "source_end_line": 110, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}, {"target_end_line": 201, "source_start_line": 111, "source_end_line": 185, "source_confidence": 99, "target_start_line": 127, "target_confidence": 99}, {"target_end_line": 126, "source_start_line": 1, "source_end_line": 110, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}, {"target_end_line": 201, "source_start_line": 111, "source_end_line": 185, "source_confidence": 99, "target_start_line": 127, "target_confidence": 99}]}, {"source": "grybnicky_38812cbfd1a26cea5963293420355108", "value": 74, "target": "scresawn_bb374e92179586d1070f257b429e8991", "links": [{"target_end_line": 109, "source_start_line": 55, "source_end_line": 101, "source_confidence": 50, "target_start_line": 63, "target_confidence": 31}, {"target_end_line": 49, "source_start_line": 46, "source_end_line": 54, "source_confidence": 50, "target_start_line": 33, "target_confidence": 31}, {"target_end_line": 7, "source_start_line": 24, "source_end_line": 28, "source_confidence": 50, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 30, "source_start_line": 5, "source_end_line": 9, "source_confidence": 50, "target_start_line": 26, "target_confidence": 31}, {"target_end_line": 109, "source_start_line": 55, "source_end_line": 101, "source_confidence": 50, "target_start_line": 63, "target_confidence": 31}, {"target_end_line": 49, "source_start_line": 46, "source_end_line": 54, "source_confidence": 50, "target_start_line": 33, "target_confidence": 31}, {"target_end_line": 7, "source_start_line": 24, "source_end_line": 28, "source_confidence": 50, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 30, "source_start_line": 5, "source_end_line": 9, "source_confidence": 50, "target_start_line": 26, "target_confidence": 31}, {"target_end_line": 109, "source_start_line": 55, "source_end_line": 101, "source_confidence": 50, "target_start_line": 63, "target_confidence": 31}, {"target_end_line": 49, "source_start_line": 46, "source_end_line": 54, "source_confidence": 50, "target_start_line": 33, "target_confidence": 31}, {"target_end_line": 7, "source_start_line": 24, "source_end_line": 28, "source_confidence": 50, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 30, "source_start_line": 5, "source_end_line": 9, "source_confidence": 50, "target_start_line": 26, "target_confidence": 31}, {"target_end_line": 109, "source_start_line": 55, "source_end_line": 101, "source_confidence": 50, "target_start_line": 63, "target_confidence": 31}, {"target_end_line": 49, "source_start_line": 46, "source_end_line": 54, "source_confidence": 50, "target_start_line": 33, "target_confidence": 31}, {"target_end_line": 7, "source_start_line": 24, "source_end_line": 28, "source_confidence": 50, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 30, "source_start_line": 5, "source_end_line": 9, "source_confidence": 50, "target_start_line": 26, "target_confidence": 31}]}, {"source": "Fil_068a46259411b86fd0bc4e7e36252d1e", "value": 34, "target": "Kcnarf_5f9491610aa5a5c085d48d66164de36a", "links": [{"target_end_line": 21, "source_start_line": 8, "source_end_line": 19, "source_confidence": 51, "target_start_line": 10, "target_confidence": 20}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 51, "target_start_line": 1, "target_confidence": 20}, {"target_end_line": 75, "source_start_line": 49, "source_end_line": 55, "source_confidence": 51, "target_start_line": 69, "target_confidence": 20}, {"target_end_line": 31, "source_start_line": 21, "source_end_line": 23, "source_confidence": 51, "target_start_line": 29, "target_confidence": 20}, {"target_end_line": 37, "source_start_line": 24, "source_end_line": 29, "source_confidence": 51, "target_start_line": 32, "target_confidence": 20}, {"target_end_line": 21, "source_start_line": 8, "source_end_line": 19, "source_confidence": 51, "target_start_line": 10, "target_confidence": 20}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 51, "target_start_line": 1, "target_confidence": 20}, {"target_end_line": 75, "source_start_line": 49, "source_end_line": 55, "source_confidence": 51, "target_start_line": 69, "target_confidence": 20}, {"target_end_line": 31, "source_start_line": 21, "source_end_line": 23, "source_confidence": 51, "target_start_line": 29, "target_confidence": 20}, {"target_end_line": 37, "source_start_line": 24, "source_end_line": 29, "source_confidence": 51, "target_start_line": 32, "target_confidence": 20}, {"target_end_line": 21, "source_start_line": 8, "source_end_line": 19, "source_confidence": 51, "target_start_line": 10, "target_confidence": 20}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 51, "target_start_line": 1, "target_confidence": 20}, {"target_end_line": 75, "source_start_line": 49, "source_end_line": 55, "source_confidence": 51, "target_start_line": 69, "target_confidence": 20}, {"target_end_line": 31, "source_start_line": 21, "source_end_line": 23, "source_confidence": 51, "target_start_line": 29, "target_confidence": 20}, {"target_end_line": 37, "source_start_line": 24, "source_end_line": 29, "source_confidence": 51, "target_start_line": 32, "target_confidence": 20}, {"target_end_line": 21, "source_start_line": 8, "source_end_line": 19, "source_confidence": 51, "target_start_line": 10, "target_confidence": 20}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 51, "target_start_line": 1, "target_confidence": 20}, {"target_end_line": 75, "source_start_line": 49, "source_end_line": 55, "source_confidence": 51, "target_start_line": 69, "target_confidence": 20}, {"target_end_line": 31, "source_start_line": 21, "source_end_line": 23, "source_confidence": 51, "target_start_line": 29, "target_confidence": 20}, {"target_end_line": 37, "source_start_line": 24, "source_end_line": 29, "source_confidence": 51, "target_start_line": 32, "target_confidence": 20}, {"target_end_line": 21, "source_start_line": 8, "source_end_line": 19, "source_confidence": 51, "target_start_line": 10, "target_confidence": 20}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 51, "target_start_line": 1, "target_confidence": 20}, {"target_end_line": 75, "source_start_line": 49, "source_end_line": 55, "source_confidence": 51, "target_start_line": 69, "target_confidence": 20}, {"target_end_line": 31, "source_start_line": 21, "source_end_line": 23, "source_confidence": 51, "target_start_line": 29, "target_confidence": 20}, {"target_end_line": 37, "source_start_line": 24, "source_end_line": 29, "source_confidence": 51, "target_start_line": 32, "target_confidence": 20}]}, {"source": "seemantk_7ede42303b973902e202", "value": 49, "target": "owendall_6c73ad82ef5eb8cc1b1d641e3d21201b", "links": [{"target_end_line": 56, "source_start_line": 35, "source_end_line": 55, "source_confidence": 15, "target_start_line": 37, "target_confidence": 38}, {"target_end_line": 98, "source_start_line": 258, "source_end_line": 270, "source_confidence": 15, "target_start_line": 90, "target_confidence": 38}, {"target_end_line": 20, "source_start_line": 19, "source_end_line": 26, "source_confidence": 15, "target_start_line": 13, "target_confidence": 38}, {"target_end_line": 36, "source_start_line": 28, "source_end_line": 34, "source_confidence": 15, "target_start_line": 30, "target_confidence": 38}, {"target_end_line": 56, "source_start_line": 35, "source_end_line": 55, "source_confidence": 15, "target_start_line": 37, "target_confidence": 38}, {"target_end_line": 98, "source_start_line": 258, "source_end_line": 270, "source_confidence": 15, "target_start_line": 90, "target_confidence": 38}, {"target_end_line": 20, "source_start_line": 19, "source_end_line": 26, "source_confidence": 15, "target_start_line": 13, "target_confidence": 38}, {"target_end_line": 36, "source_start_line": 28, "source_end_line": 34, "source_confidence": 15, "target_start_line": 30, "target_confidence": 38}, {"target_end_line": 56, "source_start_line": 35, "source_end_line": 55, "source_confidence": 15, "target_start_line": 37, "target_confidence": 38}, {"target_end_line": 98, "source_start_line": 258, "source_end_line": 270, "source_confidence": 15, "target_start_line": 90, "target_confidence": 38}, {"target_end_line": 20, "source_start_line": 19, "source_end_line": 26, "source_confidence": 15, "target_start_line": 13, "target_confidence": 38}, {"target_end_line": 36, "source_start_line": 28, "source_end_line": 34, "source_confidence": 15, "target_start_line": 30, "target_confidence": 38}, {"target_end_line": 56, "source_start_line": 35, "source_end_line": 55, "source_confidence": 15, "target_start_line": 37, "target_confidence": 38}, {"target_end_line": 98, "source_start_line": 258, "source_end_line": 270, "source_confidence": 15, "target_start_line": 90, "target_confidence": 38}, {"target_end_line": 20, "source_start_line": 19, "source_end_line": 26, "source_confidence": 15, "target_start_line": 13, "target_confidence": 38}, {"target_end_line": 36, "source_start_line": 28, "source_end_line": 34, "source_confidence": 15, "target_start_line": 30, "target_confidence": 38}]}, {"source": "scresawn_8be33e1c6fabc4297fe780a1cfb16d89", "value": 66, "target": "grybnicky_38812cbfd1a26cea5963293420355108", "links": [{"target_end_line": 108, "source_start_line": 33, "source_end_line": 87, "source_confidence": 75, "target_start_line": 54, "target_confidence": 56}, {"target_end_line": 50, "source_start_line": 22, "source_end_line": 26, "source_confidence": 75, "target_start_line": 46, "target_confidence": 56}, {"target_end_line": 29, "source_start_line": 3, "source_end_line": 8, "source_confidence": 75, "target_start_line": 24, "target_confidence": 56}, {"target_end_line": 108, "source_start_line": 33, "source_end_line": 87, "source_confidence": 75, "target_start_line": 54, "target_confidence": 56}, {"target_end_line": 50, "source_start_line": 22, "source_end_line": 26, "source_confidence": 75, "target_start_line": 46, "target_confidence": 56}, {"target_end_line": 29, "source_start_line": 3, "source_end_line": 8, "source_confidence": 75, "target_start_line": 24, "target_confidence": 56}, {"target_end_line": 108, "source_start_line": 33, "source_end_line": 87, "source_confidence": 75, "target_start_line": 54, "target_confidence": 56}, {"target_end_line": 50, "source_start_line": 22, "source_end_line": 26, "source_confidence": 75, "target_start_line": 46, "target_confidence": 56}, {"target_end_line": 29, "source_start_line": 3, "source_end_line": 8, "source_confidence": 75, "target_start_line": 24, "target_confidence": 56}]}, {"source": "grybnicky_da7862addded5c94370d994e98bb364b", "value": 57, "target": "scresawn_8be33e1c6fabc4297fe780a1cfb16d89", "links": [{"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 88, "target_start_line": 1, "target_confidence": 61}, {"target_end_line": 30, "source_start_line": 22, "source_end_line": 31, "source_confidence": 88, "target_start_line": 22, "target_confidence": 61}, {"target_end_line": 95, "source_start_line": 52, "source_end_line": 64, "source_confidence": 88, "target_start_line": 82, "target_confidence": 61}, {"target_end_line": 38, "source_start_line": 31, "source_end_line": 36, "source_confidence": 88, "target_start_line": 33, "target_confidence": 61}, {"target_end_line": 78, "source_start_line": 43, "source_end_line": 51, "source_confidence": 88, "target_start_line": 70, "target_confidence": 61}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 88, "target_start_line": 1, "target_confidence": 61}, {"target_end_line": 30, "source_start_line": 22, "source_end_line": 31, "source_confidence": 88, "target_start_line": 22, "target_confidence": 61}, {"target_end_line": 95, "source_start_line": 52, "source_end_line": 64, "source_confidence": 88, "target_start_line": 82, "target_confidence": 61}, {"target_end_line": 38, "source_start_line": 31, "source_end_line": 36, "source_confidence": 88, "target_start_line": 33, "target_confidence": 61}, {"target_end_line": 78, "source_start_line": 43, "source_end_line": 51, "source_confidence": 88, "target_start_line": 70, "target_confidence": 61}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 88, "target_start_line": 1, "target_confidence": 61}, {"target_end_line": 30, "source_start_line": 22, "source_end_line": 31, "source_confidence": 88, "target_start_line": 22, "target_confidence": 61}, {"target_end_line": 95, "source_start_line": 52, "source_end_line": 64, "source_confidence": 88, "target_start_line": 82, "target_confidence": 61}, {"target_end_line": 38, "source_start_line": 31, "source_end_line": 36, "source_confidence": 88, "target_start_line": 33, "target_confidence": 61}, {"target_end_line": 78, "source_start_line": 43, "source_end_line": 51, "source_confidence": 88, "target_start_line": 70, "target_confidence": 61}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 88, "target_start_line": 1, "target_confidence": 61}, {"target_end_line": 30, "source_start_line": 22, "source_end_line": 31, "source_confidence": 88, "target_start_line": 22, "target_confidence": 61}, {"target_end_line": 95, "source_start_line": 52, "source_end_line": 64, "source_confidence": 88, "target_start_line": 82, "target_confidence": 61}, {"target_end_line": 38, "source_start_line": 31, "source_end_line": 36, "source_confidence": 88, "target_start_line": 33, "target_confidence": 61}, {"target_end_line": 78, "source_start_line": 43, "source_end_line": 51, "source_confidence": 88, "target_start_line": 70, "target_confidence": 61}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 88, "target_start_line": 1, "target_confidence": 61}, {"target_end_line": 30, "source_start_line": 22, "source_end_line": 31, "source_confidence": 88, "target_start_line": 22, "target_confidence": 61}, {"target_end_line": 95, "source_start_line": 52, "source_end_line": 64, "source_confidence": 88, "target_start_line": 82, "target_confidence": 61}, {"target_end_line": 38, "source_start_line": 31, "source_end_line": 36, "source_confidence": 88, "target_start_line": 33, "target_confidence": 61}, {"target_end_line": 78, "source_start_line": 43, "source_end_line": 51, "source_confidence": 88, "target_start_line": 70, "target_confidence": 61}]}, {"source": "fpcMotif_4db328750ceb1cc871872e27d11797f6", "value": 140, "target": "BBischof_13e4faca1996fadab526c6986d67058a", "links": [{"target_end_line": 164, "source_start_line": 86, "source_end_line": 149, "source_confidence": 92, "target_start_line": 101, "target_confidence": 81}, {"target_end_line": 43, "source_start_line": 1, "source_end_line": 43, "source_confidence": 92, "target_start_line": 1, "target_confidence": 81}, {"target_end_line": 85, "source_start_line": 45, "source_end_line": 77, "source_confidence": 92, "target_start_line": 53, "target_confidence": 81}, {"target_end_line": 164, "source_start_line": 86, "source_end_line": 149, "source_confidence": 92, "target_start_line": 101, "target_confidence": 81}, {"target_end_line": 43, "source_start_line": 1, "source_end_line": 43, "source_confidence": 92, "target_start_line": 1, "target_confidence": 81}, {"target_end_line": 85, "source_start_line": 45, "source_end_line": 77, "source_confidence": 92, "target_start_line": 53, "target_confidence": 81}, {"target_end_line": 164, "source_start_line": 86, "source_end_line": 149, "source_confidence": 92, "target_start_line": 101, "target_confidence": 81}, {"target_end_line": 43, "source_start_line": 1, "source_end_line": 43, "source_confidence": 92, "target_start_line": 1, "target_confidence": 81}, {"target_end_line": 85, "source_start_line": 45, "source_end_line": 77, "source_confidence": 92, "target_start_line": 53, "target_confidence": 81}]}, {"source": "emilyinamillion_f1d91d74208d21ed403b9054bb3a535c", "value": 40, "target": "grybnicky_da7862addded5c94370d994e98bb364b", "links": [{"target_end_line": 51, "source_start_line": 59, "source_end_line": 76, "source_confidence": 42, "target_start_line": 34, "target_confidence": 60}, {"target_end_line": 26, "source_start_line": 32, "source_end_line": 36, "source_confidence": 42, "target_start_line": 22, "target_confidence": 60}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 42, "target_start_line": 1, "target_confidence": 60}, {"target_end_line": 19, "source_start_line": 12, "source_end_line": 21, "source_confidence": 42, "target_start_line": 10, "target_confidence": 60}, {"target_end_line": 51, "source_start_line": 59, "source_end_line": 76, "source_confidence": 42, "target_start_line": 34, "target_confidence": 60}, {"target_end_line": 26, "source_start_line": 32, "source_end_line": 36, "source_confidence": 42, "target_start_line": 22, "target_confidence": 60}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 42, "target_start_line": 1, "target_confidence": 60}, {"target_end_line": 19, "source_start_line": 12, "source_end_line": 21, "source_confidence": 42, "target_start_line": 10, "target_confidence": 60}, {"target_end_line": 51, "source_start_line": 59, "source_end_line": 76, "source_confidence": 42, "target_start_line": 34, "target_confidence": 60}, {"target_end_line": 26, "source_start_line": 32, "source_end_line": 36, "source_confidence": 42, "target_start_line": 22, "target_confidence": 60}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 42, "target_start_line": 1, "target_confidence": 60}, {"target_end_line": 19, "source_start_line": 12, "source_end_line": 21, "source_confidence": 42, "target_start_line": 10, "target_confidence": 60}, {"target_end_line": 51, "source_start_line": 59, "source_end_line": 76, "source_confidence": 42, "target_start_line": 34, "target_confidence": 60}, {"target_end_line": 26, "source_start_line": 32, "source_end_line": 36, "source_confidence": 42, "target_start_line": 22, "target_confidence": 60}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 42, "target_start_line": 1, "target_confidence": 60}, {"target_end_line": 19, "source_start_line": 12, "source_end_line": 21, "source_confidence": 42, "target_start_line": 10, "target_confidence": 60}]}, {"source": "micahstubbs_d8d96e1e554aa72671f4", "value": 51, "target": "emeeks_b3851789fcc3bf0c65ea9a34c3dca7bb", "links": [{"target_end_line": 117, "source_start_line": 101, "source_end_line": 119, "source_confidence": 33, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 124, "source_end_line": 131, "source_confidence": 33, "target_start_line": 120, "target_confidence": 37}, {"target_end_line": 90, "source_start_line": 82, "source_end_line": 94, "source_confidence": 33, "target_start_line": 78, "target_confidence": 37}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 10, "source_confidence": 33, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 117, "source_start_line": 101, "source_end_line": 119, "source_confidence": 33, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 124, "source_end_line": 131, "source_confidence": 33, "target_start_line": 120, "target_confidence": 37}, {"target_end_line": 90, "source_start_line": 82, "source_end_line": 94, "source_confidence": 33, "target_start_line": 78, "target_confidence": 37}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 10, "source_confidence": 33, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 117, "source_start_line": 101, "source_end_line": 119, "source_confidence": 33, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 124, "source_end_line": 131, "source_confidence": 33, "target_start_line": 120, "target_confidence": 37}, {"target_end_line": 90, "source_start_line": 82, "source_end_line": 94, "source_confidence": 33, "target_start_line": 78, "target_confidence": 37}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 10, "source_confidence": 33, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 117, "source_start_line": 101, "source_end_line": 119, "source_confidence": 33, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 124, "source_end_line": 131, "source_confidence": 33, "target_start_line": 120, "target_confidence": 37}, {"target_end_line": 90, "source_start_line": 82, "source_end_line": 94, "source_confidence": 33, "target_start_line": 78, "target_confidence": 37}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 10, "source_confidence": 33, "target_start_line": 1, "target_confidence": 37}]}, {"source": "micahstubbs_aa933f60bd432f7f3eed", "value": 44, "target": "d3noob_ced1b9b18bd8192d2c898884033b5529", "links": [{"target_end_line": 87, "source_start_line": 82, "source_end_line": 90, "source_confidence": 32, "target_start_line": 79, "target_confidence": 37}, {"target_end_line": 44, "source_start_line": 31, "source_end_line": 41, "source_confidence": 32, "target_start_line": 35, "target_confidence": 37}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 32, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 97, "source_start_line": 91, "source_end_line": 100, "source_confidence": 32, "target_start_line": 88, "target_confidence": 37}, {"target_end_line": 53, "source_start_line": 42, "source_end_line": 47, "source_confidence": 32, "target_start_line": 48, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 71, "source_end_line": 73, "source_confidence": 32, "target_start_line": 66, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 82, "source_end_line": 90, "source_confidence": 32, "target_start_line": 79, "target_confidence": 37}, {"target_end_line": 44, "source_start_line": 31, "source_end_line": 41, "source_confidence": 32, "target_start_line": 35, "target_confidence": 37}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 32, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 97, "source_start_line": 91, "source_end_line": 100, "source_confidence": 32, "target_start_line": 88, "target_confidence": 37}, {"target_end_line": 53, "source_start_line": 42, "source_end_line": 47, "source_confidence": 32, "target_start_line": 48, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 71, "source_end_line": 73, "source_confidence": 32, "target_start_line": 66, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 82, "source_end_line": 90, "source_confidence": 32, "target_start_line": 79, "target_confidence": 37}, {"target_end_line": 44, "source_start_line": 31, "source_end_line": 41, "source_confidence": 32, "target_start_line": 35, "target_confidence": 37}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 32, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 97, "source_start_line": 91, "source_end_line": 100, "source_confidence": 32, "target_start_line": 88, "target_confidence": 37}, {"target_end_line": 53, "source_start_line": 42, "source_end_line": 47, "source_confidence": 32, "target_start_line": 48, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 71, "source_end_line": 73, "source_confidence": 32, "target_start_line": 66, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 82, "source_end_line": 90, "source_confidence": 32, "target_start_line": 79, "target_confidence": 37}, {"target_end_line": 44, "source_start_line": 31, "source_end_line": 41, "source_confidence": 32, "target_start_line": 35, "target_confidence": 37}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 32, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 97, "source_start_line": 91, "source_end_line": 100, "source_confidence": 32, "target_start_line": 88, "target_confidence": 37}, {"target_end_line": 53, "source_start_line": 42, "source_end_line": 47, "source_confidence": 32, "target_start_line": 48, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 71, "source_end_line": 73, "source_confidence": 32, "target_start_line": 66, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 82, "source_end_line": 90, "source_confidence": 32, "target_start_line": 79, "target_confidence": 37}, {"target_end_line": 44, "source_start_line": 31, "source_end_line": 41, "source_confidence": 32, "target_start_line": 35, "target_confidence": 37}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 32, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 97, "source_start_line": 91, "source_end_line": 100, "source_confidence": 32, "target_start_line": 88, "target_confidence": 37}, {"target_end_line": 53, "source_start_line": 42, "source_end_line": 47, "source_confidence": 32, "target_start_line": 48, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 71, "source_end_line": 73, "source_confidence": 32, "target_start_line": 66, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 82, "source_end_line": 90, "source_confidence": 32, "target_start_line": 79, "target_confidence": 37}, {"target_end_line": 44, "source_start_line": 31, "source_end_line": 41, "source_confidence": 32, "target_start_line": 35, "target_confidence": 37}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 32, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 97, "source_start_line": 91, "source_end_line": 100, "source_confidence": 32, "target_start_line": 88, "target_confidence": 37}, {"target_end_line": 53, "source_start_line": 42, "source_end_line": 47, "source_confidence": 32, "target_start_line": 48, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 71, "source_end_line": 73, "source_confidence": 32, "target_start_line": 66, "target_confidence": 37}]}, {"source": "enjalot_0d87f32a1ccb9a720d29ba74142ba365", "value": 47, "target": "sinclarius_46d50bdc7d91dd4671e33b49428e30c6", "links": [{"target_end_line": 18, "source_start_line": 9, "source_end_line": 18, "source_confidence": 42, "target_start_line": 9, "target_confidence": 66}, {"target_end_line": 9, "source_start_line": 5, "source_end_line": 9, "source_confidence": 42, "target_start_line": 5, "target_confidence": 66}, {"target_end_line": 42, "source_start_line": 48, "source_end_line": 57, "source_confidence": 42, "target_start_line": 33, "target_confidence": 66}, {"target_end_line": 71, "source_start_line": 71, "source_end_line": 89, "source_confidence": 42, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 31, "source_start_line": 44, "source_end_line": 46, "source_confidence": 42, "target_start_line": 29, "target_confidence": 66}, {"target_end_line": 18, "source_start_line": 9, "source_end_line": 18, "source_confidence": 42, "target_start_line": 9, "target_confidence": 66}, {"target_end_line": 9, "source_start_line": 5, "source_end_line": 9, "source_confidence": 42, "target_start_line": 5, "target_confidence": 66}, {"target_end_line": 42, "source_start_line": 48, "source_end_line": 57, "source_confidence": 42, "target_start_line": 33, "target_confidence": 66}, {"target_end_line": 71, "source_start_line": 71, "source_end_line": 89, "source_confidence": 42, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 31, "source_start_line": 44, "source_end_line": 46, "source_confidence": 42, "target_start_line": 29, "target_confidence": 66}, {"target_end_line": 18, "source_start_line": 9, "source_end_line": 18, "source_confidence": 42, "target_start_line": 9, "target_confidence": 66}, {"target_end_line": 9, "source_start_line": 5, "source_end_line": 9, "source_confidence": 42, "target_start_line": 5, "target_confidence": 66}, {"target_end_line": 42, "source_start_line": 48, "source_end_line": 57, "source_confidence": 42, "target_start_line": 33, "target_confidence": 66}, {"target_end_line": 71, "source_start_line": 71, "source_end_line": 89, "source_confidence": 42, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 31, "source_start_line": 44, "source_end_line": 46, "source_confidence": 42, "target_start_line": 29, "target_confidence": 66}, {"target_end_line": 18, "source_start_line": 9, "source_end_line": 18, "source_confidence": 42, "target_start_line": 9, "target_confidence": 66}, {"target_end_line": 9, "source_start_line": 5, "source_end_line": 9, "source_confidence": 42, "target_start_line": 5, "target_confidence": 66}, {"target_end_line": 42, "source_start_line": 48, "source_end_line": 57, "source_confidence": 42, "target_start_line": 33, "target_confidence": 66}, {"target_end_line": 71, "source_start_line": 71, "source_end_line": 89, "source_confidence": 42, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 31, "source_start_line": 44, "source_end_line": 46, "source_confidence": 42, "target_start_line": 29, "target_confidence": 66}, {"target_end_line": 18, "source_start_line": 9, "source_end_line": 18, "source_confidence": 42, "target_start_line": 9, "target_confidence": 66}, {"target_end_line": 9, "source_start_line": 5, "source_end_line": 9, "source_confidence": 42, "target_start_line": 5, "target_confidence": 66}, {"target_end_line": 42, "source_start_line": 48, "source_end_line": 57, "source_confidence": 42, "target_start_line": 33, "target_confidence": 66}, {"target_end_line": 71, "source_start_line": 71, "source_end_line": 89, "source_confidence": 42, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 31, "source_start_line": 44, "source_end_line": 46, "source_confidence": 42, "target_start_line": 29, "target_confidence": 66}]}, {"source": "mbostock_1ab623030a9d563271f55c5c55dbaf77", "value": 40, "target": "wboykinm_c7c21293250b08c079d512d81be427f7", "links": [{"target_end_line": 46, "source_start_line": 14, "source_end_line": 45, "source_confidence": 80, "target_start_line": 15, "target_confidence": 84}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 80, "target_start_line": 1, "target_confidence": 84}, {"target_end_line": 46, "source_start_line": 14, "source_end_line": 45, "source_confidence": 80, "target_start_line": 15, "target_confidence": 84}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 80, "target_start_line": 1, "target_confidence": 84}]}, {"source": "sampathweb_4537242756735c02c8a4168dfd4477a1", "value": 59, "target": "mbostock_34f08d5e11952a80609169b7917d4172", "links": [{"target_end_line": 91, "source_start_line": 56, "source_end_line": 86, "source_confidence": 41, "target_start_line": 61, "target_confidence": 31}, {"target_end_line": 57, "source_start_line": 40, "source_end_line": 54, "source_confidence": 41, "target_start_line": 43, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 41, "target_start_line": 4, "target_confidence": 31}, {"target_end_line": 128, "source_start_line": 95, "source_end_line": 104, "source_confidence": 41, "target_start_line": 119, "target_confidence": 31}, {"target_end_line": 91, "source_start_line": 56, "source_end_line": 86, "source_confidence": 41, "target_start_line": 61, "target_confidence": 31}, {"target_end_line": 57, "source_start_line": 40, "source_end_line": 54, "source_confidence": 41, "target_start_line": 43, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 41, "target_start_line": 4, "target_confidence": 31}, {"target_end_line": 128, "source_start_line": 95, "source_end_line": 104, "source_confidence": 41, "target_start_line": 119, "target_confidence": 31}, {"target_end_line": 91, "source_start_line": 56, "source_end_line": 86, "source_confidence": 41, "target_start_line": 61, "target_confidence": 31}, {"target_end_line": 57, "source_start_line": 40, "source_end_line": 54, "source_confidence": 41, "target_start_line": 43, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 41, "target_start_line": 4, "target_confidence": 31}, {"target_end_line": 128, "source_start_line": 95, "source_end_line": 104, "source_confidence": 41, "target_start_line": 119, "target_confidence": 31}, {"target_end_line": 91, "source_start_line": 56, "source_end_line": 86, "source_confidence": 41, "target_start_line": 61, "target_confidence": 31}, {"target_end_line": 57, "source_start_line": 40, "source_end_line": 54, "source_confidence": 41, "target_start_line": 43, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 41, "target_start_line": 4, "target_confidence": 31}, {"target_end_line": 128, "source_start_line": 95, "source_end_line": 104, "source_confidence": 41, "target_start_line": 119, "target_confidence": 31}]}, {"source": "yesoreyeram_c1b07998add14ffc9d03", "value": 28, "target": "d3noob_3c040800ff6457717cca586ae9547dbf", "links": [{"target_end_line": 31, "source_start_line": 27, "source_end_line": 37, "source_confidence": 49, "target_start_line": 22, "target_confidence": 46}, {"target_end_line": 45, "source_start_line": 38, "source_end_line": 48, "source_confidence": 49, "target_start_line": 35, "target_confidence": 46}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 49, "target_start_line": 4, "target_confidence": 46}, {"target_end_line": 31, "source_start_line": 27, "source_end_line": 37, "source_confidence": 49, "target_start_line": 22, "target_confidence": 46}, {"target_end_line": 45, "source_start_line": 38, "source_end_line": 48, "source_confidence": 49, "target_start_line": 35, "target_confidence": 46}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 49, "target_start_line": 4, "target_confidence": 46}, {"target_end_line": 31, "source_start_line": 27, "source_end_line": 37, "source_confidence": 49, "target_start_line": 22, "target_confidence": 46}, {"target_end_line": 45, "source_start_line": 38, "source_end_line": 48, "source_confidence": 49, "target_start_line": 35, "target_confidence": 46}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 49, "target_start_line": 4, "target_confidence": 46}]}, {"source": "mbostock_eb0c48375fcdcdc00c54a92724733d0d", "value": 64, "target": "curran_395b9670077d49480ad4d808c7f93eff", "links": [{"target_end_line": 45, "source_start_line": 1, "source_end_line": 45, "source_confidence": 93, "target_start_line": 1, "target_confidence": 92}, {"target_end_line": 64, "source_start_line": 46, "source_end_line": 64, "source_confidence": 93, "target_start_line": 46, "target_confidence": 92}, {"target_end_line": 45, "source_start_line": 1, "source_end_line": 45, "source_confidence": 93, "target_start_line": 1, "target_confidence": 92}, {"target_end_line": 64, "source_start_line": 46, "source_end_line": 64, "source_confidence": 93, "target_start_line": 46, "target_confidence": 92}]}, {"source": "benduffin_4506b5bf37fab13586f7", "value": 104, "target": "sampathweb_4537242756735c02c8a4168dfd4477a1", "links": [{"target_end_line": 104, "source_start_line": 1, "source_end_line": 104, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "SpaceActuary_05a817243f852a288608fab788fd85ee", "value": 35, "target": "Lincoln-Jiang_0ef080ff190d17a2325a49e818de5311", "links": [{"target_end_line": 23, "source_start_line": 13, "source_end_line": 23, "source_confidence": 80, "target_start_line": 14, "target_confidence": 62}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 80, "target_start_line": 1, "target_confidence": 62}, {"target_end_line": 43, "source_start_line": 33, "source_end_line": 44, "source_confidence": 80, "target_start_line": 34, "target_confidence": 62}, {"target_end_line": 23, "source_start_line": 13, "source_end_line": 23, "source_confidence": 80, "target_start_line": 14, "target_confidence": 62}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 80, "target_start_line": 1, "target_confidence": 62}, {"target_end_line": 43, "source_start_line": 33, "source_end_line": 44, "source_confidence": 80, "target_start_line": 34, "target_confidence": 62}, {"target_end_line": 23, "source_start_line": 13, "source_end_line": 23, "source_confidence": 80, "target_start_line": 14, "target_confidence": 62}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 80, "target_start_line": 1, "target_confidence": 62}, {"target_end_line": 43, "source_start_line": 33, "source_end_line": 44, "source_confidence": 80, "target_start_line": 34, "target_confidence": 62}]}, {"source": "micahstubbs_99df29f258860e53c5e2", "value": 23, "target": "nbremer_305ff3e402c269d33bbe6828f9848cae", "links": [{"target_end_line": 134, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 132, "target_confidence": 4}, {"target_end_line": 83, "source_start_line": 248, "source_end_line": 250, "source_confidence": 9, "target_start_line": 81, "target_confidence": 4}, {"target_end_line": 170, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 168, "target_confidence": 4}, {"target_end_line": 80, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 79, "target_confidence": 4}, {"target_end_line": 36, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 34, "target_confidence": 4}, {"target_end_line": 38, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 37, "target_confidence": 4}, {"target_end_line": 178, "source_start_line": 270, "source_end_line": 270, "source_confidence": 9, "target_start_line": 177, "target_confidence": 4}, {"target_end_line": 116, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 115, "target_confidence": 4}, {"target_end_line": 134, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 132, "target_confidence": 4}, {"target_end_line": 83, "source_start_line": 248, "source_end_line": 250, "source_confidence": 9, "target_start_line": 81, "target_confidence": 4}, {"target_end_line": 170, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 168, "target_confidence": 4}, {"target_end_line": 80, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 79, "target_confidence": 4}, {"target_end_line": 36, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 34, "target_confidence": 4}, {"target_end_line": 38, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 37, "target_confidence": 4}, {"target_end_line": 178, "source_start_line": 270, "source_end_line": 270, "source_confidence": 9, "target_start_line": 177, "target_confidence": 4}, {"target_end_line": 116, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 115, "target_confidence": 4}, {"target_end_line": 134, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 132, "target_confidence": 4}, {"target_end_line": 83, "source_start_line": 248, "source_end_line": 250, "source_confidence": 9, "target_start_line": 81, "target_confidence": 4}, {"target_end_line": 170, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 168, "target_confidence": 4}, {"target_end_line": 80, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 79, "target_confidence": 4}, {"target_end_line": 36, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 34, "target_confidence": 4}, {"target_end_line": 38, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 37, "target_confidence": 4}, {"target_end_line": 178, "source_start_line": 270, "source_end_line": 270, "source_confidence": 9, "target_start_line": 177, "target_confidence": 4}, {"target_end_line": 116, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 115, "target_confidence": 4}, {"target_end_line": 134, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 132, "target_confidence": 4}, {"target_end_line": 83, "source_start_line": 248, "source_end_line": 250, "source_confidence": 9, "target_start_line": 81, "target_confidence": 4}, {"target_end_line": 170, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 168, "target_confidence": 4}, {"target_end_line": 80, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 79, "target_confidence": 4}, {"target_end_line": 36, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 34, "target_confidence": 4}, {"target_end_line": 38, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 37, "target_confidence": 4}, {"target_end_line": 178, "source_start_line": 270, "source_end_line": 270, "source_confidence": 9, "target_start_line": 177, "target_confidence": 4}, {"target_end_line": 116, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 115, "target_confidence": 4}, {"target_end_line": 134, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 132, "target_confidence": 4}, {"target_end_line": 83, "source_start_line": 248, "source_end_line": 250, "source_confidence": 9, "target_start_line": 81, "target_confidence": 4}, {"target_end_line": 170, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 168, "target_confidence": 4}, {"target_end_line": 80, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 79, "target_confidence": 4}, {"target_end_line": 36, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 34, "target_confidence": 4}, {"target_end_line": 38, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 37, "target_confidence": 4}, {"target_end_line": 178, "source_start_line": 270, "source_end_line": 270, "source_confidence": 9, "target_start_line": 177, "target_confidence": 4}, {"target_end_line": 116, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 115, "target_confidence": 4}, {"target_end_line": 134, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 132, "target_confidence": 4}, {"target_end_line": 83, "source_start_line": 248, "source_end_line": 250, "source_confidence": 9, "target_start_line": 81, "target_confidence": 4}, {"target_end_line": 170, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 168, "target_confidence": 4}, {"target_end_line": 80, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 79, "target_confidence": 4}, {"target_end_line": 36, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 34, "target_confidence": 4}, {"target_end_line": 38, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 37, "target_confidence": 4}, {"target_end_line": 178, "source_start_line": 270, "source_end_line": 270, "source_confidence": 9, "target_start_line": 177, "target_confidence": 4}, {"target_end_line": 116, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 115, "target_confidence": 4}, {"target_end_line": 134, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 132, "target_confidence": 4}, {"target_end_line": 83, "source_start_line": 248, "source_end_line": 250, "source_confidence": 9, "target_start_line": 81, "target_confidence": 4}, {"target_end_line": 170, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 168, "target_confidence": 4}, {"target_end_line": 80, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 79, "target_confidence": 4}, {"target_end_line": 36, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 34, "target_confidence": 4}, {"target_end_line": 38, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 37, "target_confidence": 4}, {"target_end_line": 178, "source_start_line": 270, "source_end_line": 270, "source_confidence": 9, "target_start_line": 177, "target_confidence": 4}, {"target_end_line": 116, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 115, "target_confidence": 4}, {"target_end_line": 134, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 132, "target_confidence": 4}, {"target_end_line": 83, "source_start_line": 248, "source_end_line": 250, "source_confidence": 9, "target_start_line": 81, "target_confidence": 4}, {"target_end_line": 170, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 168, "target_confidence": 4}, {"target_end_line": 80, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 79, "target_confidence": 4}, {"target_end_line": 36, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 34, "target_confidence": 4}, {"target_end_line": 38, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 37, "target_confidence": 4}, {"target_end_line": 178, "source_start_line": 270, "source_end_line": 270, "source_confidence": 9, "target_start_line": 177, "target_confidence": 4}, {"target_end_line": 116, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 115, "target_confidence": 4}]}, {"source": "larsenmtl_e3b8b7c2ca4787f77d78f58d41c3da91", "value": 48, "target": "emilyinamillion_f1d91d74208d21ed403b9054bb3a535c", "links": [{"target_end_line": 36, "source_start_line": 55, "source_end_line": 66, "source_confidence": 14, "target_start_line": 29, "target_confidence": 44}, {"target_end_line": 71, "source_start_line": 129, "source_end_line": 145, "source_confidence": 14, "target_start_line": 57, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 26, "source_end_line": 35, "source_confidence": 14, "target_start_line": 3, "target_confidence": 44}, {"target_end_line": 23, "source_start_line": 45, "source_end_line": 53, "source_confidence": 14, "target_start_line": 15, "target_confidence": 44}, {"target_end_line": 36, "source_start_line": 55, "source_end_line": 66, "source_confidence": 14, "target_start_line": 29, "target_confidence": 44}, {"target_end_line": 71, "source_start_line": 129, "source_end_line": 145, "source_confidence": 14, "target_start_line": 57, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 26, "source_end_line": 35, "source_confidence": 14, "target_start_line": 3, "target_confidence": 44}, {"target_end_line": 23, "source_start_line": 45, "source_end_line": 53, "source_confidence": 14, "target_start_line": 15, "target_confidence": 44}, {"target_end_line": 36, "source_start_line": 55, "source_end_line": 66, "source_confidence": 14, "target_start_line": 29, "target_confidence": 44}, {"target_end_line": 71, "source_start_line": 129, "source_end_line": 145, "source_confidence": 14, "target_start_line": 57, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 26, "source_end_line": 35, "source_confidence": 14, "target_start_line": 3, "target_confidence": 44}, {"target_end_line": 23, "source_start_line": 45, "source_end_line": 53, "source_confidence": 14, "target_start_line": 15, "target_confidence": 44}, {"target_end_line": 36, "source_start_line": 55, "source_end_line": 66, "source_confidence": 14, "target_start_line": 29, "target_confidence": 44}, {"target_end_line": 71, "source_start_line": 129, "source_end_line": 145, "source_confidence": 14, "target_start_line": 57, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 26, "source_end_line": 35, "source_confidence": 14, "target_start_line": 3, "target_confidence": 44}, {"target_end_line": 23, "source_start_line": 45, "source_end_line": 53, "source_confidence": 14, "target_start_line": 15, "target_confidence": 44}]}, {"source": "curt-mitch_958238610403cc200fa6c08785bc0d6d", "value": 43, "target": "larsenmtl_e3b8b7c2ca4787f77d78f58d41c3da91", "links": [{"target_end_line": 66, "source_start_line": 32, "source_end_line": 43, "source_confidence": 30, "target_start_line": 55, "target_confidence": 12}, {"target_end_line": 35, "source_start_line": 8, "source_end_line": 17, "source_confidence": 30, "target_start_line": 26, "target_confidence": 12}, {"target_end_line": 53, "source_start_line": 23, "source_end_line": 31, "source_confidence": 30, "target_start_line": 45, "target_confidence": 12}, {"target_end_line": 140, "source_start_line": 48, "source_end_line": 59, "source_confidence": 30, "target_start_line": 129, "target_confidence": 12}, {"target_end_line": 66, "source_start_line": 32, "source_end_line": 43, "source_confidence": 30, "target_start_line": 55, "target_confidence": 12}, {"target_end_line": 35, "source_start_line": 8, "source_end_line": 17, "source_confidence": 30, "target_start_line": 26, "target_confidence": 12}, {"target_end_line": 53, "source_start_line": 23, "source_end_line": 31, "source_confidence": 30, "target_start_line": 45, "target_confidence": 12}, {"target_end_line": 140, "source_start_line": 48, "source_end_line": 59, "source_confidence": 30, "target_start_line": 129, "target_confidence": 12}, {"target_end_line": 66, "source_start_line": 32, "source_end_line": 43, "source_confidence": 30, "target_start_line": 55, "target_confidence": 12}, {"target_end_line": 35, "source_start_line": 8, "source_end_line": 17, "source_confidence": 30, "target_start_line": 26, "target_confidence": 12}, {"target_end_line": 53, "source_start_line": 23, "source_end_line": 31, "source_confidence": 30, "target_start_line": 45, "target_confidence": 12}, {"target_end_line": 140, "source_start_line": 48, "source_end_line": 59, "source_confidence": 30, "target_start_line": 129, "target_confidence": 12}, {"target_end_line": 66, "source_start_line": 32, "source_end_line": 43, "source_confidence": 30, "target_start_line": 55, "target_confidence": 12}, {"target_end_line": 35, "source_start_line": 8, "source_end_line": 17, "source_confidence": 30, "target_start_line": 26, "target_confidence": 12}, {"target_end_line": 53, "source_start_line": 23, "source_end_line": 31, "source_confidence": 30, "target_start_line": 45, "target_confidence": 12}, {"target_end_line": 140, "source_start_line": 48, "source_end_line": 59, "source_confidence": 30, "target_start_line": 129, "target_confidence": 12}]}, {"source": "BenHeubl_5a0a52a107d744d7aeecae4d9b920c93", "value": 44, "target": "enjalot_0d87f32a1ccb9a720d29ba74142ba365", "links": [{"target_end_line": 14, "source_start_line": 1, "source_end_line": 13, "source_confidence": 45, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 57, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 48, "target_confidence": 45}, {"target_end_line": 89, "source_start_line": 96, "source_end_line": 107, "source_confidence": 45, "target_start_line": 76, "target_confidence": 45}, {"target_end_line": 18, "source_start_line": 15, "source_end_line": 17, "source_confidence": 45, "target_start_line": 16, "target_confidence": 45}, {"target_end_line": 46, "source_start_line": 49, "source_end_line": 51, "source_confidence": 45, "target_start_line": 44, "target_confidence": 45}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 13, "source_confidence": 45, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 57, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 48, "target_confidence": 45}, {"target_end_line": 89, "source_start_line": 96, "source_end_line": 107, "source_confidence": 45, "target_start_line": 76, "target_confidence": 45}, {"target_end_line": 18, "source_start_line": 15, "source_end_line": 17, "source_confidence": 45, "target_start_line": 16, "target_confidence": 45}, {"target_end_line": 46, "source_start_line": 49, "source_end_line": 51, "source_confidence": 45, "target_start_line": 44, "target_confidence": 45}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 13, "source_confidence": 45, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 57, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 48, "target_confidence": 45}, {"target_end_line": 89, "source_start_line": 96, "source_end_line": 107, "source_confidence": 45, "target_start_line": 76, "target_confidence": 45}, {"target_end_line": 18, "source_start_line": 15, "source_end_line": 17, "source_confidence": 45, "target_start_line": 16, "target_confidence": 45}, {"target_end_line": 46, "source_start_line": 49, "source_end_line": 51, "source_confidence": 45, "target_start_line": 44, "target_confidence": 45}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 13, "source_confidence": 45, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 57, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 48, "target_confidence": 45}, {"target_end_line": 89, "source_start_line": 96, "source_end_line": 107, "source_confidence": 45, "target_start_line": 76, "target_confidence": 45}, {"target_end_line": 18, "source_start_line": 15, "source_end_line": 17, "source_confidence": 45, "target_start_line": 16, "target_confidence": 45}, {"target_end_line": 46, "source_start_line": 49, "source_end_line": 51, "source_confidence": 45, "target_start_line": 44, "target_confidence": 45}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 13, "source_confidence": 45, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 57, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 48, "target_confidence": 45}, {"target_end_line": 89, "source_start_line": 96, "source_end_line": 107, "source_confidence": 45, "target_start_line": 76, "target_confidence": 45}, {"target_end_line": 18, "source_start_line": 15, "source_end_line": 17, "source_confidence": 45, "target_start_line": 16, "target_confidence": 45}, {"target_end_line": 46, "source_start_line": 49, "source_end_line": 51, "source_confidence": 45, "target_start_line": 44, "target_confidence": 45}]}, {"source": "renecnielsen_744b716f997b2abd2fca", "value": 23, "target": "fogcity89_d8441881c1280b35e625b27e9d435b08", "links": [{"target_end_line": 35, "source_start_line": 38, "source_end_line": 45, "source_confidence": 54, "target_start_line": 28, "target_confidence": 65}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 7, "source_confidence": 54, "target_start_line": 1, "target_confidence": 65}, {"target_end_line": 40, "source_start_line": 46, "source_end_line": 49, "source_confidence": 54, "target_start_line": 37, "target_confidence": 65}, {"target_end_line": 18, "source_start_line": 9, "source_end_line": 12, "source_confidence": 54, "target_start_line": 15, "target_confidence": 65}, {"target_end_line": 35, "source_start_line": 38, "source_end_line": 45, "source_confidence": 54, "target_start_line": 28, "target_confidence": 65}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 7, "source_confidence": 54, "target_start_line": 1, "target_confidence": 65}, {"target_end_line": 40, "source_start_line": 46, "source_end_line": 49, "source_confidence": 54, "target_start_line": 37, "target_confidence": 65}, {"target_end_line": 18, "source_start_line": 9, "source_end_line": 12, "source_confidence": 54, "target_start_line": 15, "target_confidence": 65}, {"target_end_line": 35, "source_start_line": 38, "source_end_line": 45, "source_confidence": 54, "target_start_line": 28, "target_confidence": 65}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 7, "source_confidence": 54, "target_start_line": 1, "target_confidence": 65}, {"target_end_line": 40, "source_start_line": 46, "source_end_line": 49, "source_confidence": 54, "target_start_line": 37, "target_confidence": 65}, {"target_end_line": 18, "source_start_line": 9, "source_end_line": 12, "source_confidence": 54, "target_start_line": 15, "target_confidence": 65}, {"target_end_line": 35, "source_start_line": 38, "source_end_line": 45, "source_confidence": 54, "target_start_line": 28, "target_confidence": 65}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 7, "source_confidence": 54, "target_start_line": 1, "target_confidence": 65}, {"target_end_line": 40, "source_start_line": 46, "source_end_line": 49, "source_confidence": 54, "target_start_line": 37, "target_confidence": 65}, {"target_end_line": 18, "source_start_line": 9, "source_end_line": 12, "source_confidence": 54, "target_start_line": 15, "target_confidence": 65}]}, {"source": "mathnathan_e77414e67bd47439c57c", "value": 21, "target": "nbremer_e627a8fced026a9286932c6c0a02d71b", "links": [{"target_end_line": 116, "source_start_line": 532, "source_end_line": 552, "source_confidence": 5, "target_start_line": 96, "target_confidence": 11}]}, {"source": "enjalot_eb331a84b3ef877aa6b0004308abfac9", "value": 42, "target": "BenHeubl_5a0a52a107d744d7aeecae4d9b920c93", "links": [{"target_end_line": 62, "source_start_line": 25, "source_end_line": 47, "source_confidence": 24, "target_start_line": 41, "target_confidence": 48}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 12, "source_confidence": 24, "target_start_line": 3, "target_confidence": 48}, {"target_end_line": 17, "source_start_line": 19, "source_end_line": 21, "source_confidence": 24, "target_start_line": 15, "target_confidence": 48}, {"target_end_line": 88, "source_start_line": 49, "source_end_line": 57, "source_confidence": 24, "target_start_line": 81, "target_confidence": 48}, {"target_end_line": 62, "source_start_line": 25, "source_end_line": 47, "source_confidence": 24, "target_start_line": 41, "target_confidence": 48}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 12, "source_confidence": 24, "target_start_line": 3, "target_confidence": 48}, {"target_end_line": 17, "source_start_line": 19, "source_end_line": 21, "source_confidence": 24, "target_start_line": 15, "target_confidence": 48}, {"target_end_line": 88, "source_start_line": 49, "source_end_line": 57, "source_confidence": 24, "target_start_line": 81, "target_confidence": 48}, {"target_end_line": 62, "source_start_line": 25, "source_end_line": 47, "source_confidence": 24, "target_start_line": 41, "target_confidence": 48}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 12, "source_confidence": 24, "target_start_line": 3, "target_confidence": 48}, {"target_end_line": 17, "source_start_line": 19, "source_end_line": 21, "source_confidence": 24, "target_start_line": 15, "target_confidence": 48}, {"target_end_line": 88, "source_start_line": 49, "source_end_line": 57, "source_confidence": 24, "target_start_line": 81, "target_confidence": 48}, {"target_end_line": 62, "source_start_line": 25, "source_end_line": 47, "source_confidence": 24, "target_start_line": 41, "target_confidence": 48}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 12, "source_confidence": 24, "target_start_line": 3, "target_confidence": 48}, {"target_end_line": 17, "source_start_line": 19, "source_end_line": 21, "source_confidence": 24, "target_start_line": 15, "target_confidence": 48}, {"target_end_line": 88, "source_start_line": 49, "source_end_line": 57, "source_confidence": 24, "target_start_line": 81, "target_confidence": 48}]}, {"source": "piyushbhargava7_3fbc1276f4fef8dde67d3d9675903f23", "value": 54, "target": "puzzler10_fe9d75969a0d2f40f003f00808c00f3b", "links": [{"target_end_line": 78, "source_start_line": 44, "source_end_line": 55, "source_confidence": 51, "target_start_line": 66, "target_confidence": 29}, {"target_end_line": 244, "source_start_line": 109, "source_end_line": 119, "source_confidence": 51, "target_start_line": 235, "target_confidence": 29}, {"target_end_line": 27, "source_start_line": 32, "source_end_line": 38, "source_confidence": 51, "target_start_line": 20, "target_confidence": 29}, {"target_end_line": 140, "source_start_line": 75, "source_end_line": 82, "source_confidence": 51, "target_start_line": 134, "target_confidence": 29}, {"target_end_line": 163, "source_start_line": 92, "source_end_line": 97, "source_confidence": 51, "target_start_line": 158, "target_confidence": 29}, {"target_end_line": 16, "source_start_line": 8, "source_end_line": 10, "source_confidence": 51, "target_start_line": 13, "target_confidence": 29}, {"target_end_line": 36, "source_start_line": 18, "source_end_line": 23, "source_confidence": 51, "target_start_line": 31, "target_confidence": 29}, {"target_end_line": 78, "source_start_line": 44, "source_end_line": 55, "source_confidence": 51, "target_start_line": 66, "target_confidence": 29}, {"target_end_line": 244, "source_start_line": 109, "source_end_line": 119, "source_confidence": 51, "target_start_line": 235, "target_confidence": 29}, {"target_end_line": 27, "source_start_line": 32, "source_end_line": 38, "source_confidence": 51, "target_start_line": 20, "target_confidence": 29}, {"target_end_line": 140, "source_start_line": 75, "source_end_line": 82, "source_confidence": 51, "target_start_line": 134, "target_confidence": 29}, {"target_end_line": 163, "source_start_line": 92, "source_end_line": 97, "source_confidence": 51, "target_start_line": 158, "target_confidence": 29}, {"target_end_line": 16, "source_start_line": 8, "source_end_line": 10, "source_confidence": 51, "target_start_line": 13, "target_confidence": 29}, {"target_end_line": 36, "source_start_line": 18, "source_end_line": 23, "source_confidence": 51, "target_start_line": 31, "target_confidence": 29}, {"target_end_line": 78, "source_start_line": 44, "source_end_line": 55, "source_confidence": 51, "target_start_line": 66, "target_confidence": 29}, {"target_end_line": 244, "source_start_line": 109, "source_end_line": 119, "source_confidence": 51, "target_start_line": 235, "target_confidence": 29}, {"target_end_line": 27, "source_start_line": 32, "source_end_line": 38, "source_confidence": 51, "target_start_line": 20, "target_confidence": 29}, {"target_end_line": 140, "source_start_line": 75, "source_end_line": 82, "source_confidence": 51, "target_start_line": 134, "target_confidence": 29}, {"target_end_line": 163, "source_start_line": 92, "source_end_line": 97, "source_confidence": 51, "target_start_line": 158, "target_confidence": 29}, {"target_end_line": 16, "source_start_line": 8, "source_end_line": 10, "source_confidence": 51, "target_start_line": 13, "target_confidence": 29}, {"target_end_line": 36, "source_start_line": 18, "source_end_line": 23, "source_confidence": 51, "target_start_line": 31, "target_confidence": 29}, {"target_end_line": 78, "source_start_line": 44, "source_end_line": 55, "source_confidence": 51, "target_start_line": 66, "target_confidence": 29}, {"target_end_line": 244, "source_start_line": 109, "source_end_line": 119, "source_confidence": 51, "target_start_line": 235, "target_confidence": 29}, {"target_end_line": 27, "source_start_line": 32, "source_end_line": 38, "source_confidence": 51, "target_start_line": 20, "target_confidence": 29}, {"target_end_line": 140, "source_start_line": 75, "source_end_line": 82, "source_confidence": 51, "target_start_line": 134, "target_confidence": 29}, {"target_end_line": 163, "source_start_line": 92, "source_end_line": 97, "source_confidence": 51, "target_start_line": 158, "target_confidence": 29}, {"target_end_line": 16, "source_start_line": 8, "source_end_line": 10, "source_confidence": 51, "target_start_line": 13, "target_confidence": 29}, {"target_end_line": 36, "source_start_line": 18, "source_end_line": 23, "source_confidence": 51, "target_start_line": 31, "target_confidence": 29}, {"target_end_line": 78, "source_start_line": 44, "source_end_line": 55, "source_confidence": 51, "target_start_line": 66, "target_confidence": 29}, {"target_end_line": 244, "source_start_line": 109, "source_end_line": 119, "source_confidence": 51, "target_start_line": 235, "target_confidence": 29}, {"target_end_line": 27, "source_start_line": 32, "source_end_line": 38, "source_confidence": 51, "target_start_line": 20, "target_confidence": 29}, {"target_end_line": 140, "source_start_line": 75, "source_end_line": 82, "source_confidence": 51, "target_start_line": 134, "target_confidence": 29}, {"target_end_line": 163, "source_start_line": 92, "source_end_line": 97, "source_confidence": 51, "target_start_line": 158, "target_confidence": 29}, {"target_end_line": 16, "source_start_line": 8, "source_end_line": 10, "source_confidence": 51, "target_start_line": 13, "target_confidence": 29}, {"target_end_line": 36, "source_start_line": 18, "source_end_line": 23, "source_confidence": 51, "target_start_line": 31, "target_confidence": 29}, {"target_end_line": 78, "source_start_line": 44, "source_end_line": 55, "source_confidence": 51, "target_start_line": 66, "target_confidence": 29}, {"target_end_line": 244, "source_start_line": 109, "source_end_line": 119, "source_confidence": 51, "target_start_line": 235, "target_confidence": 29}, {"target_end_line": 27, "source_start_line": 32, "source_end_line": 38, "source_confidence": 51, "target_start_line": 20, "target_confidence": 29}, {"target_end_line": 140, "source_start_line": 75, "source_end_line": 82, "source_confidence": 51, "target_start_line": 134, "target_confidence": 29}, {"target_end_line": 163, "source_start_line": 92, "source_end_line": 97, "source_confidence": 51, "target_start_line": 158, "target_confidence": 29}, {"target_end_line": 16, "source_start_line": 8, "source_end_line": 10, "source_confidence": 51, "target_start_line": 13, "target_confidence": 29}, {"target_end_line": 36, "source_start_line": 18, "source_end_line": 23, "source_confidence": 51, "target_start_line": 31, "target_confidence": 29}, {"target_end_line": 78, "source_start_line": 44, "source_end_line": 55, "source_confidence": 51, "target_start_line": 66, "target_confidence": 29}, {"target_end_line": 244, "source_start_line": 109, "source_end_line": 119, "source_confidence": 51, "target_start_line": 235, "target_confidence": 29}, {"target_end_line": 27, "source_start_line": 32, "source_end_line": 38, "source_confidence": 51, "target_start_line": 20, "target_confidence": 29}, {"target_end_line": 140, "source_start_line": 75, "source_end_line": 82, "source_confidence": 51, "target_start_line": 134, "target_confidence": 29}, {"target_end_line": 163, "source_start_line": 92, "source_end_line": 97, "source_confidence": 51, "target_start_line": 158, "target_confidence": 29}, {"target_end_line": 16, "source_start_line": 8, "source_end_line": 10, "source_confidence": 51, "target_start_line": 13, "target_confidence": 29}, {"target_end_line": 36, "source_start_line": 18, "source_end_line": 23, "source_confidence": 51, "target_start_line": 31, "target_confidence": 29}]}, {"source": "zanarmstrong_e15f045b2ac54c532b1a", "value": 44, "target": "alexmacy_9f109c383f8ed21f5f610cb21113ca68", "links": [{"target_end_line": 178, "source_start_line": 106, "source_end_line": 120, "source_confidence": 30, "target_start_line": 164, "target_confidence": 27}, {"target_end_line": 163, "source_start_line": 94, "source_end_line": 104, "source_confidence": 30, "target_start_line": 153, "target_confidence": 27}, {"target_end_line": 83, "source_start_line": 64, "source_end_line": 70, "source_confidence": 30, "target_start_line": 77, "target_confidence": 27}, {"target_end_line": 110, "source_start_line": 72, "source_end_line": 81, "source_confidence": 30, "target_start_line": 100, "target_confidence": 27}, {"target_end_line": 178, "source_start_line": 106, "source_end_line": 120, "source_confidence": 30, "target_start_line": 164, "target_confidence": 27}, {"target_end_line": 163, "source_start_line": 94, "source_end_line": 104, "source_confidence": 30, "target_start_line": 153, "target_confidence": 27}, {"target_end_line": 83, "source_start_line": 64, "source_end_line": 70, "source_confidence": 30, "target_start_line": 77, "target_confidence": 27}, {"target_end_line": 110, "source_start_line": 72, "source_end_line": 81, "source_confidence": 30, "target_start_line": 100, "target_confidence": 27}, {"target_end_line": 178, "source_start_line": 106, "source_end_line": 120, "source_confidence": 30, "target_start_line": 164, "target_confidence": 27}, {"target_end_line": 163, "source_start_line": 94, "source_end_line": 104, "source_confidence": 30, "target_start_line": 153, "target_confidence": 27}, {"target_end_line": 83, "source_start_line": 64, "source_end_line": 70, "source_confidence": 30, "target_start_line": 77, "target_confidence": 27}, {"target_end_line": 110, "source_start_line": 72, "source_end_line": 81, "source_confidence": 30, "target_start_line": 100, "target_confidence": 27}, {"target_end_line": 178, "source_start_line": 106, "source_end_line": 120, "source_confidence": 30, "target_start_line": 164, "target_confidence": 27}, {"target_end_line": 163, "source_start_line": 94, "source_end_line": 104, "source_confidence": 30, "target_start_line": 153, "target_confidence": 27}, {"target_end_line": 83, "source_start_line": 64, "source_end_line": 70, "source_confidence": 30, "target_start_line": 77, "target_confidence": 27}, {"target_end_line": 110, "source_start_line": 72, "source_end_line": 81, "source_confidence": 30, "target_start_line": 100, "target_confidence": 27}]}, {"source": "domhorvath_90fd3b59070ec2b196ba05fc56ea0eab", "value": 56, "target": "Fil_068a46259411b86fd0bc4e7e36252d1e", "links": [{"target_end_line": 67, "source_start_line": 29, "source_end_line": 60, "source_confidence": 92, "target_start_line": 36, "target_confidence": 85}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 24, "source_confidence": 92, "target_start_line": 1, "target_confidence": 85}, {"target_end_line": 67, "source_start_line": 29, "source_end_line": 60, "source_confidence": 92, "target_start_line": 36, "target_confidence": 85}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 24, "source_confidence": 92, "target_start_line": 1, "target_confidence": 85}]}, {"source": "bricedev_6fa60662f4dabd7e3ecb", "value": 36, "target": "curt-mitch_958238610403cc200fa6c08785bc0d6d", "links": [{"target_end_line": 43, "source_start_line": 9, "source_end_line": 31, "source_confidence": 37, "target_start_line": 17, "target_confidence": 29}, {"target_end_line": 16, "source_start_line": 3, "source_end_line": 6, "source_confidence": 37, "target_start_line": 8, "target_confidence": 29}, {"target_end_line": 43, "source_start_line": 9, "source_end_line": 31, "source_confidence": 37, "target_start_line": 17, "target_confidence": 29}, {"target_end_line": 16, "source_start_line": 3, "source_end_line": 6, "source_confidence": 37, "target_start_line": 8, "target_confidence": 29}]}, {"source": "mbostock_6526445e2b44303eebf21da3b6627320", "value": 60, "target": "domhorvath_90fd3b59070ec2b196ba05fc56ea0eab", "links": [{"target_end_line": 60, "source_start_line": 1, "source_end_line": 60, "source_confidence": 98, "target_start_line": 1, "target_confidence": 98}]}, {"source": "dogobox_4df88ca21dd4303d787649b8f389ade3", "value": 60, "target": "enjalot_eb331a84b3ef877aa6b0004308abfac9", "links": [{"target_end_line": 68, "source_start_line": 21, "source_end_line": 63, "source_confidence": 93, "target_start_line": 25, "target_confidence": 30}, {"target_end_line": 21, "source_start_line": 3, "source_end_line": 18, "source_confidence": 93, "target_start_line": 6, "target_confidence": 30}, {"target_end_line": 68, "source_start_line": 21, "source_end_line": 63, "source_confidence": 93, "target_start_line": 25, "target_confidence": 30}, {"target_end_line": 21, "source_start_line": 3, "source_end_line": 18, "source_confidence": 93, "target_start_line": 6, "target_confidence": 30}]}, {"source": "armollica_853c9344a7808619d863c8d7410062e6", "value": 43, "target": "siakan_acdd8937258d5aca3001995316e0b6ca", "links": [{"target_end_line": 66, "source_start_line": 48, "source_end_line": 76, "source_confidence": 50, "target_start_line": 38, "target_confidence": 44}, {"target_end_line": 27, "source_start_line": 33, "source_end_line": 39, "source_confidence": 50, "target_start_line": 19, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 19, "source_end_line": 23, "source_confidence": 50, "target_start_line": 3, "target_confidence": 44}, {"target_end_line": 66, "source_start_line": 48, "source_end_line": 76, "source_confidence": 50, "target_start_line": 38, "target_confidence": 44}, {"target_end_line": 27, "source_start_line": 33, "source_end_line": 39, "source_confidence": 50, "target_start_line": 19, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 19, "source_end_line": 23, "source_confidence": 50, "target_start_line": 3, "target_confidence": 44}, {"target_end_line": 66, "source_start_line": 48, "source_end_line": 76, "source_confidence": 50, "target_start_line": 38, "target_confidence": 44}, {"target_end_line": 27, "source_start_line": 33, "source_end_line": 39, "source_confidence": 50, "target_start_line": 19, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 19, "source_end_line": 23, "source_confidence": 50, "target_start_line": 3, "target_confidence": 44}]}, {"source": "tylermachado_e24468e796146142d0d50c2136b184f3", "value": 65, "target": "siakan_cc432f0c5f163c81a4703532188efaab", "links": [{"target_end_line": 34, "source_start_line": 17, "source_end_line": 33, "source_confidence": 40, "target_start_line": 18, "target_confidence": 58}, {"target_end_line": 72, "source_start_line": 61, "source_end_line": 72, "source_confidence": 40, "target_start_line": 61, "target_confidence": 58}, {"target_end_line": 86, "source_start_line": 84, "source_end_line": 93, "source_confidence": 40, "target_start_line": 77, "target_confidence": 58}, {"target_end_line": 10, "source_start_line": 4, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 58}, {"target_end_line": 53, "source_start_line": 50, "source_end_line": 59, "source_confidence": 40, "target_start_line": 44, "target_confidence": 58}, {"target_end_line": 97, "source_start_line": 104, "source_end_line": 112, "source_confidence": 40, "target_start_line": 89, "target_confidence": 58}, {"target_end_line": 34, "source_start_line": 17, "source_end_line": 33, "source_confidence": 40, "target_start_line": 18, "target_confidence": 58}, {"target_end_line": 72, "source_start_line": 61, "source_end_line": 72, "source_confidence": 40, "target_start_line": 61, "target_confidence": 58}, {"target_end_line": 86, "source_start_line": 84, "source_end_line": 93, "source_confidence": 40, "target_start_line": 77, "target_confidence": 58}, {"target_end_line": 10, "source_start_line": 4, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 58}, {"target_end_line": 53, "source_start_line": 50, "source_end_line": 59, "source_confidence": 40, "target_start_line": 44, "target_confidence": 58}, {"target_end_line": 97, "source_start_line": 104, "source_end_line": 112, "source_confidence": 40, "target_start_line": 89, "target_confidence": 58}, {"target_end_line": 34, "source_start_line": 17, "source_end_line": 33, "source_confidence": 40, "target_start_line": 18, "target_confidence": 58}, {"target_end_line": 72, "source_start_line": 61, "source_end_line": 72, "source_confidence": 40, "target_start_line": 61, "target_confidence": 58}, {"target_end_line": 86, "source_start_line": 84, "source_end_line": 93, "source_confidence": 40, "target_start_line": 77, "target_confidence": 58}, {"target_end_line": 10, "source_start_line": 4, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 58}, {"target_end_line": 53, "source_start_line": 50, "source_end_line": 59, "source_confidence": 40, "target_start_line": 44, "target_confidence": 58}, {"target_end_line": 97, "source_start_line": 104, "source_end_line": 112, "source_confidence": 40, "target_start_line": 89, "target_confidence": 58}, {"target_end_line": 34, "source_start_line": 17, "source_end_line": 33, "source_confidence": 40, "target_start_line": 18, "target_confidence": 58}, {"target_end_line": 72, "source_start_line": 61, "source_end_line": 72, "source_confidence": 40, "target_start_line": 61, "target_confidence": 58}, {"target_end_line": 86, "source_start_line": 84, "source_end_line": 93, "source_confidence": 40, "target_start_line": 77, "target_confidence": 58}, {"target_end_line": 10, "source_start_line": 4, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 58}, {"target_end_line": 53, "source_start_line": 50, "source_end_line": 59, "source_confidence": 40, "target_start_line": 44, "target_confidence": 58}, {"target_end_line": 97, "source_start_line": 104, "source_end_line": 112, "source_confidence": 40, "target_start_line": 89, "target_confidence": 58}, {"target_end_line": 34, "source_start_line": 17, "source_end_line": 33, "source_confidence": 40, "target_start_line": 18, "target_confidence": 58}, {"target_end_line": 72, "source_start_line": 61, "source_end_line": 72, "source_confidence": 40, "target_start_line": 61, "target_confidence": 58}, {"target_end_line": 86, "source_start_line": 84, "source_end_line": 93, "source_confidence": 40, "target_start_line": 77, "target_confidence": 58}, {"target_end_line": 10, "source_start_line": 4, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 58}, {"target_end_line": 53, "source_start_line": 50, "source_end_line": 59, "source_confidence": 40, "target_start_line": 44, "target_confidence": 58}, {"target_end_line": 97, "source_start_line": 104, "source_end_line": 112, "source_confidence": 40, "target_start_line": 89, "target_confidence": 58}, {"target_end_line": 34, "source_start_line": 17, "source_end_line": 33, "source_confidence": 40, "target_start_line": 18, "target_confidence": 58}, {"target_end_line": 72, "source_start_line": 61, "source_end_line": 72, "source_confidence": 40, "target_start_line": 61, "target_confidence": 58}, {"target_end_line": 86, "source_start_line": 84, "source_end_line": 93, "source_confidence": 40, "target_start_line": 77, "target_confidence": 58}, {"target_end_line": 10, "source_start_line": 4, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 58}, {"target_end_line": 53, "source_start_line": 50, "source_end_line": 59, "source_confidence": 40, "target_start_line": 44, "target_confidence": 58}, {"target_end_line": 97, "source_start_line": 104, "source_end_line": 112, "source_confidence": 40, "target_start_line": 89, "target_confidence": 58}]}, {"source": "dogobox_4df88ca21dd4303d787649b8f389ade3", "value": 60, "target": "enjalot_1d7d42e9b4bc3d377db84d95a38ce800", "links": [{"target_end_line": 68, "source_start_line": 21, "source_end_line": 63, "source_confidence": 93, "target_start_line": 25, "target_confidence": 32}, {"target_end_line": 21, "source_start_line": 3, "source_end_line": 18, "source_confidence": 93, "target_start_line": 6, "target_confidence": 32}, {"target_end_line": 68, "source_start_line": 21, "source_end_line": 63, "source_confidence": 93, "target_start_line": 25, "target_confidence": 32}, {"target_end_line": 21, "source_start_line": 3, "source_end_line": 18, "source_confidence": 93, "target_start_line": 6, "target_confidence": 32}]}, {"source": "mhipley_423ed5ef0cc50fcdff0c", "value": 22, "target": "thecodingmonkey_c867dc58f2a812aebca33f48f4df8940", "links": [{"target_end_line": 41, "source_start_line": 25, "source_end_line": 31, "source_confidence": 29, "target_start_line": 35, "target_confidence": 17}, {"target_end_line": 12, "source_start_line": 3, "source_end_line": 8, "source_confidence": 29, "target_start_line": 7, "target_confidence": 17}, {"target_end_line": 59, "source_start_line": 62, "source_end_line": 66, "source_confidence": 29, "target_start_line": 55, "target_confidence": 17}, {"target_end_line": 53, "source_start_line": 42, "source_end_line": 45, "source_confidence": 29, "target_start_line": 51, "target_confidence": 17}, {"target_end_line": 41, "source_start_line": 25, "source_end_line": 31, "source_confidence": 29, "target_start_line": 35, "target_confidence": 17}, {"target_end_line": 12, "source_start_line": 3, "source_end_line": 8, "source_confidence": 29, "target_start_line": 7, "target_confidence": 17}, {"target_end_line": 59, "source_start_line": 62, "source_end_line": 66, "source_confidence": 29, "target_start_line": 55, "target_confidence": 17}, {"target_end_line": 53, "source_start_line": 42, "source_end_line": 45, "source_confidence": 29, "target_start_line": 51, "target_confidence": 17}, {"target_end_line": 41, "source_start_line": 25, "source_end_line": 31, "source_confidence": 29, "target_start_line": 35, "target_confidence": 17}, {"target_end_line": 12, "source_start_line": 3, "source_end_line": 8, "source_confidence": 29, "target_start_line": 7, "target_confidence": 17}, {"target_end_line": 59, "source_start_line": 62, "source_end_line": 66, "source_confidence": 29, "target_start_line": 55, "target_confidence": 17}, {"target_end_line": 53, "source_start_line": 42, "source_end_line": 45, "source_confidence": 29, "target_start_line": 51, "target_confidence": 17}, {"target_end_line": 41, "source_start_line": 25, "source_end_line": 31, "source_confidence": 29, "target_start_line": 35, "target_confidence": 17}, {"target_end_line": 12, "source_start_line": 3, "source_end_line": 8, "source_confidence": 29, "target_start_line": 7, "target_confidence": 17}, {"target_end_line": 59, "source_start_line": 62, "source_end_line": 66, "source_confidence": 29, "target_start_line": 55, "target_confidence": 17}, {"target_end_line": 53, "source_start_line": 42, "source_end_line": 45, "source_confidence": 29, "target_start_line": 51, "target_confidence": 17}]}, {"source": "Malicia_d09b3ae6b3ce3435a0ca4ec73b137528", "value": 186, "target": "thecodingmonkey_a2a09618503b18fe92a77200257e9d8e", "links": [{"target_end_line": 186, "source_start_line": 1, "source_end_line": 186, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "Malicia_d09b3ae6b3ce3435a0ca4ec73b137528", "value": 186, "target": "thecodingmonkey_85205f6e1ce370c15bd07ecaf9aed62f", "links": [{"target_end_line": 186, "source_start_line": 1, "source_end_line": 186, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "dhoboy_19d5d6dda01690e314e9a14a3cc3118e", "value": 35, "target": "jonpage_c2a95b1f7ee8d65761da60ad8450ec14", "links": [{"target_end_line": 39, "source_start_line": 26, "source_end_line": 45, "source_confidence": 27, "target_start_line": 20, "target_confidence": 55}, {"target_end_line": 69, "source_start_line": 156, "source_end_line": 165, "source_confidence": 27, "target_start_line": 61, "target_confidence": 55}, {"target_end_line": 18, "source_start_line": 21, "source_end_line": 25, "source_confidence": 27, "target_start_line": 14, "target_confidence": 55}, {"target_end_line": 39, "source_start_line": 26, "source_end_line": 45, "source_confidence": 27, "target_start_line": 20, "target_confidence": 55}, {"target_end_line": 69, "source_start_line": 156, "source_end_line": 165, "source_confidence": 27, "target_start_line": 61, "target_confidence": 55}, {"target_end_line": 18, "source_start_line": 21, "source_end_line": 25, "source_confidence": 27, "target_start_line": 14, "target_confidence": 55}, {"target_end_line": 39, "source_start_line": 26, "source_end_line": 45, "source_confidence": 27, "target_start_line": 20, "target_confidence": 55}, {"target_end_line": 69, "source_start_line": 156, "source_end_line": 165, "source_confidence": 27, "target_start_line": 61, "target_confidence": 55}, {"target_end_line": 18, "source_start_line": 21, "source_end_line": 25, "source_confidence": 27, "target_start_line": 14, "target_confidence": 55}]}, {"source": "Malicia_d09b3ae6b3ce3435a0ca4ec73b137528", "value": 186, "target": "thecodingmonkey_fa0a0886a8e3b466e89b8cf79063696e", "links": [{"target_end_line": 186, "source_start_line": 1, "source_end_line": 186, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "davo_a561a3a86f2b90a9fb79", "value": 41, "target": "sxywu_408b80e2e186c481b9ee99d86d116781", "links": [{"target_end_line": 46, "source_start_line": 29, "source_end_line": 42, "source_confidence": 55, "target_start_line": 33, "target_confidence": 40}, {"target_end_line": 32, "source_start_line": 23, "source_end_line": 28, "source_confidence": 55, "target_start_line": 27, "target_confidence": 40}, {"target_end_line": 4, "source_start_line": 3, "source_end_line": 4, "source_confidence": 55, "target_start_line": 3, "target_confidence": 40}, {"target_end_line": 63, "source_start_line": 46, "source_end_line": 56, "source_confidence": 55, "target_start_line": 53, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 12, "source_end_line": 16, "source_confidence": 55, "target_start_line": 7, "target_confidence": 40}, {"target_end_line": 3, "source_start_line": 1, "source_end_line": 3, "source_confidence": 55, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 46, "source_start_line": 29, "source_end_line": 42, "source_confidence": 55, "target_start_line": 33, "target_confidence": 40}, {"target_end_line": 32, "source_start_line": 23, "source_end_line": 28, "source_confidence": 55, "target_start_line": 27, "target_confidence": 40}, {"target_end_line": 4, "source_start_line": 3, "source_end_line": 4, "source_confidence": 55, "target_start_line": 3, "target_confidence": 40}, {"target_end_line": 63, "source_start_line": 46, "source_end_line": 56, "source_confidence": 55, "target_start_line": 53, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 12, "source_end_line": 16, "source_confidence": 55, "target_start_line": 7, "target_confidence": 40}, {"target_end_line": 3, "source_start_line": 1, "source_end_line": 3, "source_confidence": 55, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 46, "source_start_line": 29, "source_end_line": 42, "source_confidence": 55, "target_start_line": 33, "target_confidence": 40}, {"target_end_line": 32, "source_start_line": 23, "source_end_line": 28, "source_confidence": 55, "target_start_line": 27, "target_confidence": 40}, {"target_end_line": 4, "source_start_line": 3, "source_end_line": 4, "source_confidence": 55, "target_start_line": 3, "target_confidence": 40}, {"target_end_line": 63, "source_start_line": 46, "source_end_line": 56, "source_confidence": 55, "target_start_line": 53, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 12, "source_end_line": 16, "source_confidence": 55, "target_start_line": 7, "target_confidence": 40}, {"target_end_line": 3, "source_start_line": 1, "source_end_line": 3, "source_confidence": 55, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 46, "source_start_line": 29, "source_end_line": 42, "source_confidence": 55, "target_start_line": 33, "target_confidence": 40}, {"target_end_line": 32, "source_start_line": 23, "source_end_line": 28, "source_confidence": 55, "target_start_line": 27, "target_confidence": 40}, {"target_end_line": 4, "source_start_line": 3, "source_end_line": 4, "source_confidence": 55, "target_start_line": 3, "target_confidence": 40}, {"target_end_line": 63, "source_start_line": 46, "source_end_line": 56, "source_confidence": 55, "target_start_line": 53, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 12, "source_end_line": 16, "source_confidence": 55, "target_start_line": 7, "target_confidence": 40}, {"target_end_line": 3, "source_start_line": 1, "source_end_line": 3, "source_confidence": 55, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 46, "source_start_line": 29, "source_end_line": 42, "source_confidence": 55, "target_start_line": 33, "target_confidence": 40}, {"target_end_line": 32, "source_start_line": 23, "source_end_line": 28, "source_confidence": 55, "target_start_line": 27, "target_confidence": 40}, {"target_end_line": 4, "source_start_line": 3, "source_end_line": 4, "source_confidence": 55, "target_start_line": 3, "target_confidence": 40}, {"target_end_line": 63, "source_start_line": 46, "source_end_line": 56, "source_confidence": 55, "target_start_line": 53, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 12, "source_end_line": 16, "source_confidence": 55, "target_start_line": 7, "target_confidence": 40}, {"target_end_line": 3, "source_start_line": 1, "source_end_line": 3, "source_confidence": 55, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 46, "source_start_line": 29, "source_end_line": 42, "source_confidence": 55, "target_start_line": 33, "target_confidence": 40}, {"target_end_line": 32, "source_start_line": 23, "source_end_line": 28, "source_confidence": 55, "target_start_line": 27, "target_confidence": 40}, {"target_end_line": 4, "source_start_line": 3, "source_end_line": 4, "source_confidence": 55, "target_start_line": 3, "target_confidence": 40}, {"target_end_line": 63, "source_start_line": 46, "source_end_line": 56, "source_confidence": 55, "target_start_line": 53, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 12, "source_end_line": 16, "source_confidence": 55, "target_start_line": 7, "target_confidence": 40}, {"target_end_line": 3, "source_start_line": 1, "source_end_line": 3, "source_confidence": 55, "target_start_line": 1, "target_confidence": 40}]}, {"source": "saraquigley_1315a91b54ff11cb8b81", "value": 55, "target": "Fil_3172f279d3ba83303d61ae5964d48068", "links": [{"target_end_line": 84, "source_start_line": 45, "source_end_line": 69, "source_confidence": 75, "target_start_line": 61, "target_confidence": 58}, {"target_end_line": 53, "source_start_line": 33, "source_end_line": 39, "source_confidence": 75, "target_start_line": 46, "target_confidence": 58}, {"target_end_line": 19, "source_start_line": 8, "source_end_line": 16, "source_confidence": 75, "target_start_line": 11, "target_confidence": 58}, {"target_end_line": 42, "source_start_line": 17, "source_end_line": 30, "source_confidence": 75, "target_start_line": 29, "target_confidence": 58}, {"target_end_line": 84, "source_start_line": 45, "source_end_line": 69, "source_confidence": 75, "target_start_line": 61, "target_confidence": 58}, {"target_end_line": 53, "source_start_line": 33, "source_end_line": 39, "source_confidence": 75, "target_start_line": 46, "target_confidence": 58}, {"target_end_line": 19, "source_start_line": 8, "source_end_line": 16, "source_confidence": 75, "target_start_line": 11, "target_confidence": 58}, {"target_end_line": 42, "source_start_line": 17, "source_end_line": 30, "source_confidence": 75, "target_start_line": 29, "target_confidence": 58}, {"target_end_line": 84, "source_start_line": 45, "source_end_line": 69, "source_confidence": 75, "target_start_line": 61, "target_confidence": 58}, {"target_end_line": 53, "source_start_line": 33, "source_end_line": 39, "source_confidence": 75, "target_start_line": 46, "target_confidence": 58}, {"target_end_line": 19, "source_start_line": 8, "source_end_line": 16, "source_confidence": 75, "target_start_line": 11, "target_confidence": 58}, {"target_end_line": 42, "source_start_line": 17, "source_end_line": 30, "source_confidence": 75, "target_start_line": 29, "target_confidence": 58}, {"target_end_line": 84, "source_start_line": 45, "source_end_line": 69, "source_confidence": 75, "target_start_line": 61, "target_confidence": 58}, {"target_end_line": 53, "source_start_line": 33, "source_end_line": 39, "source_confidence": 75, "target_start_line": 46, "target_confidence": 58}, {"target_end_line": 19, "source_start_line": 8, "source_end_line": 16, "source_confidence": 75, "target_start_line": 11, "target_confidence": 58}, {"target_end_line": 42, "source_start_line": 17, "source_end_line": 30, "source_confidence": 75, "target_start_line": 29, "target_confidence": 58}]}, {"source": "pberden_06fb68c99092ecddb9a7", "value": 68, "target": "bsullins_faf637290007a08703b11af8a22f1781", "links": [{"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 72, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 33, "source_end_line": 43, "source_confidence": 72, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 106, "source_start_line": 84, "source_end_line": 95, "source_confidence": 72, "target_start_line": 97, "target_confidence": 45}, {"target_end_line": 33, "source_start_line": 20, "source_end_line": 31, "source_confidence": 72, "target_start_line": 22, "target_confidence": 45}, {"target_end_line": 71, "source_start_line": 51, "source_end_line": 62, "source_confidence": 72, "target_start_line": 60, "target_confidence": 45}, {"target_end_line": 59, "source_start_line": 44, "source_end_line": 50, "source_confidence": 72, "target_start_line": 53, "target_confidence": 45}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 72, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 33, "source_end_line": 43, "source_confidence": 72, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 106, "source_start_line": 84, "source_end_line": 95, "source_confidence": 72, "target_start_line": 97, "target_confidence": 45}, {"target_end_line": 33, "source_start_line": 20, "source_end_line": 31, "source_confidence": 72, "target_start_line": 22, "target_confidence": 45}, {"target_end_line": 71, "source_start_line": 51, "source_end_line": 62, "source_confidence": 72, "target_start_line": 60, "target_confidence": 45}, {"target_end_line": 59, "source_start_line": 44, "source_end_line": 50, "source_confidence": 72, "target_start_line": 53, "target_confidence": 45}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 72, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 33, "source_end_line": 43, "source_confidence": 72, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 106, "source_start_line": 84, "source_end_line": 95, "source_confidence": 72, "target_start_line": 97, "target_confidence": 45}, {"target_end_line": 33, "source_start_line": 20, "source_end_line": 31, "source_confidence": 72, "target_start_line": 22, "target_confidence": 45}, {"target_end_line": 71, "source_start_line": 51, "source_end_line": 62, "source_confidence": 72, "target_start_line": 60, "target_confidence": 45}, {"target_end_line": 59, "source_start_line": 44, "source_end_line": 50, "source_confidence": 72, "target_start_line": 53, "target_confidence": 45}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 72, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 33, "source_end_line": 43, "source_confidence": 72, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 106, "source_start_line": 84, "source_end_line": 95, "source_confidence": 72, "target_start_line": 97, "target_confidence": 45}, {"target_end_line": 33, "source_start_line": 20, "source_end_line": 31, "source_confidence": 72, "target_start_line": 22, "target_confidence": 45}, {"target_end_line": 71, "source_start_line": 51, "source_end_line": 62, "source_confidence": 72, "target_start_line": 60, "target_confidence": 45}, {"target_end_line": 59, "source_start_line": 44, "source_end_line": 50, "source_confidence": 72, "target_start_line": 53, "target_confidence": 45}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 72, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 33, "source_end_line": 43, "source_confidence": 72, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 106, "source_start_line": 84, "source_end_line": 95, "source_confidence": 72, "target_start_line": 97, "target_confidence": 45}, {"target_end_line": 33, "source_start_line": 20, "source_end_line": 31, "source_confidence": 72, "target_start_line": 22, "target_confidence": 45}, {"target_end_line": 71, "source_start_line": 51, "source_end_line": 62, "source_confidence": 72, "target_start_line": 60, "target_confidence": 45}, {"target_end_line": 59, "source_start_line": 44, "source_end_line": 50, "source_confidence": 72, "target_start_line": 53, "target_confidence": 45}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 72, "target_start_line": 1, "target_confidence": 45}, {"target_end_line": 51, "source_start_line": 33, "source_end_line": 43, "source_confidence": 72, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 106, "source_start_line": 84, "source_end_line": 95, "source_confidence": 72, "target_start_line": 97, "target_confidence": 45}, {"target_end_line": 33, "source_start_line": 20, "source_end_line": 31, "source_confidence": 72, "target_start_line": 22, "target_confidence": 45}, {"target_end_line": 71, "source_start_line": 51, "source_end_line": 62, "source_confidence": 72, "target_start_line": 60, "target_confidence": 45}, {"target_end_line": 59, "source_start_line": 44, "source_end_line": 50, "source_confidence": 72, "target_start_line": 53, "target_confidence": 45}]}, {"source": "pberden_06fb68c99092ecddb9a7", "value": 68, "target": "bsullins_61e0ceb0326b1af57f6c54c48340a473", "links": [{"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 72, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 51, "source_start_line": 33, "source_end_line": 43, "source_confidence": 72, "target_start_line": 41, "target_confidence": 46}, {"target_end_line": 106, "source_start_line": 84, "source_end_line": 95, "source_confidence": 72, "target_start_line": 97, "target_confidence": 46}, {"target_end_line": 33, "source_start_line": 20, "source_end_line": 31, "source_confidence": 72, "target_start_line": 22, "target_confidence": 46}, {"target_end_line": 71, "source_start_line": 51, "source_end_line": 62, "source_confidence": 72, "target_start_line": 60, "target_confidence": 46}, {"target_end_line": 59, "source_start_line": 44, "source_end_line": 50, "source_confidence": 72, "target_start_line": 53, "target_confidence": 46}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 72, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 51, "source_start_line": 33, "source_end_line": 43, "source_confidence": 72, "target_start_line": 41, "target_confidence": 46}, {"target_end_line": 106, "source_start_line": 84, "source_end_line": 95, "source_confidence": 72, "target_start_line": 97, "target_confidence": 46}, {"target_end_line": 33, "source_start_line": 20, "source_end_line": 31, "source_confidence": 72, "target_start_line": 22, "target_confidence": 46}, {"target_end_line": 71, "source_start_line": 51, "source_end_line": 62, "source_confidence": 72, "target_start_line": 60, "target_confidence": 46}, {"target_end_line": 59, "source_start_line": 44, "source_end_line": 50, "source_confidence": 72, "target_start_line": 53, "target_confidence": 46}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 72, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 51, "source_start_line": 33, "source_end_line": 43, "source_confidence": 72, "target_start_line": 41, "target_confidence": 46}, {"target_end_line": 106, "source_start_line": 84, "source_end_line": 95, "source_confidence": 72, "target_start_line": 97, "target_confidence": 46}, {"target_end_line": 33, "source_start_line": 20, "source_end_line": 31, "source_confidence": 72, "target_start_line": 22, "target_confidence": 46}, {"target_end_line": 71, "source_start_line": 51, "source_end_line": 62, "source_confidence": 72, "target_start_line": 60, "target_confidence": 46}, {"target_end_line": 59, "source_start_line": 44, "source_end_line": 50, "source_confidence": 72, "target_start_line": 53, "target_confidence": 46}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 72, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 51, "source_start_line": 33, "source_end_line": 43, "source_confidence": 72, "target_start_line": 41, "target_confidence": 46}, {"target_end_line": 106, "source_start_line": 84, "source_end_line": 95, "source_confidence": 72, "target_start_line": 97, "target_confidence": 46}, {"target_end_line": 33, "source_start_line": 20, "source_end_line": 31, "source_confidence": 72, "target_start_line": 22, "target_confidence": 46}, {"target_end_line": 71, "source_start_line": 51, "source_end_line": 62, "source_confidence": 72, "target_start_line": 60, "target_confidence": 46}, {"target_end_line": 59, "source_start_line": 44, "source_end_line": 50, "source_confidence": 72, "target_start_line": 53, "target_confidence": 46}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 72, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 51, "source_start_line": 33, "source_end_line": 43, "source_confidence": 72, "target_start_line": 41, "target_confidence": 46}, {"target_end_line": 106, "source_start_line": 84, "source_end_line": 95, "source_confidence": 72, "target_start_line": 97, "target_confidence": 46}, {"target_end_line": 33, "source_start_line": 20, "source_end_line": 31, "source_confidence": 72, "target_start_line": 22, "target_confidence": 46}, {"target_end_line": 71, "source_start_line": 51, "source_end_line": 62, "source_confidence": 72, "target_start_line": 60, "target_confidence": 46}, {"target_end_line": 59, "source_start_line": 44, "source_end_line": 50, "source_confidence": 72, "target_start_line": 53, "target_confidence": 46}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 14, "source_confidence": 72, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 51, "source_start_line": 33, "source_end_line": 43, "source_confidence": 72, "target_start_line": 41, "target_confidence": 46}, {"target_end_line": 106, "source_start_line": 84, "source_end_line": 95, "source_confidence": 72, "target_start_line": 97, "target_confidence": 46}, {"target_end_line": 33, "source_start_line": 20, "source_end_line": 31, "source_confidence": 72, "target_start_line": 22, "target_confidence": 46}, {"target_end_line": 71, "source_start_line": 51, "source_end_line": 62, "source_confidence": 72, "target_start_line": 60, "target_confidence": 46}, {"target_end_line": 59, "source_start_line": 44, "source_end_line": 50, "source_confidence": 72, "target_start_line": 53, "target_confidence": 46}]}, {"source": "mbostock_2675ff61ea5e063ede2b5d63c08020c7", "value": 60, "target": "rauldiazpoblete_bee7ab77e407c843a21fe0dde213789a", "links": [{"target_end_line": 62, "source_start_line": 26, "source_end_line": 57, "source_confidence": 78, "target_start_line": 31, "target_confidence": 78}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 13, "source_confidence": 78, "target_start_line": 1, "target_confidence": 78}, {"target_end_line": 31, "source_start_line": 13, "source_end_line": 26, "source_confidence": 78, "target_start_line": 17, "target_confidence": 78}, {"target_end_line": 62, "source_start_line": 26, "source_end_line": 57, "source_confidence": 78, "target_start_line": 31, "target_confidence": 78}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 13, "source_confidence": 78, "target_start_line": 1, "target_confidence": 78}, {"target_end_line": 31, "source_start_line": 13, "source_end_line": 26, "source_confidence": 78, "target_start_line": 17, "target_confidence": 78}, {"target_end_line": 62, "source_start_line": 26, "source_end_line": 57, "source_confidence": 78, "target_start_line": 31, "target_confidence": 78}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 13, "source_confidence": 78, "target_start_line": 1, "target_confidence": 78}, {"target_end_line": 31, "source_start_line": 13, "source_end_line": 26, "source_confidence": 78, "target_start_line": 17, "target_confidence": 78}]}, {"source": "mbostock_2675ff61ea5e063ede2b5d63c08020c7", "value": 57, "target": "rauldiazpoblete_0c622039ac9278f6daf82cfb016045f5", "links": [{"target_end_line": 57, "source_start_line": 1, "source_end_line": 57, "source_confidence": 80, "target_start_line": 1, "target_confidence": 85}]}, {"source": "micahstubbs_99df29f258860e53c5e2", "value": 26, "target": "nbremer_4b81aff1ff5907ac3db1780a1c6a5e01", "links": [{"target_end_line": 60, "source_start_line": 55, "source_end_line": 57, "source_confidence": 8, "target_start_line": 57, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 246, "source_end_line": 247, "source_confidence": 8, "target_start_line": 3, "target_confidence": 15}, {"target_end_line": 7, "source_start_line": 269, "source_end_line": 270, "source_confidence": 8, "target_start_line": 5, "target_confidence": 15}, {"target_end_line": 21, "source_start_line": 50, "source_end_line": 53, "source_confidence": 8, "target_start_line": 19, "target_confidence": 15}, {"target_end_line": 23, "source_start_line": 265, "source_end_line": 269, "source_confidence": 8, "target_start_line": 22, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 270, "source_end_line": 271, "source_confidence": 8, "target_start_line": 34, "target_confidence": 15}, {"target_end_line": 25, "source_start_line": 271, "source_end_line": 273, "source_confidence": 8, "target_start_line": 23, "target_confidence": 15}, {"target_end_line": 55, "source_start_line": 288, "source_end_line": 292, "source_confidence": 8, "target_start_line": 53, "target_confidence": 15}, {"target_end_line": 60, "source_start_line": 55, "source_end_line": 57, "source_confidence": 8, "target_start_line": 57, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 246, "source_end_line": 247, "source_confidence": 8, "target_start_line": 3, "target_confidence": 15}, {"target_end_line": 7, "source_start_line": 269, "source_end_line": 270, "source_confidence": 8, "target_start_line": 5, "target_confidence": 15}, {"target_end_line": 21, "source_start_line": 50, "source_end_line": 53, "source_confidence": 8, "target_start_line": 19, "target_confidence": 15}, {"target_end_line": 23, "source_start_line": 265, "source_end_line": 269, "source_confidence": 8, "target_start_line": 22, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 270, "source_end_line": 271, "source_confidence": 8, "target_start_line": 34, "target_confidence": 15}, {"target_end_line": 25, "source_start_line": 271, "source_end_line": 273, "source_confidence": 8, "target_start_line": 23, "target_confidence": 15}, {"target_end_line": 55, "source_start_line": 288, "source_end_line": 292, "source_confidence": 8, "target_start_line": 53, "target_confidence": 15}, {"target_end_line": 60, "source_start_line": 55, "source_end_line": 57, "source_confidence": 8, "target_start_line": 57, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 246, "source_end_line": 247, "source_confidence": 8, "target_start_line": 3, "target_confidence": 15}, {"target_end_line": 7, "source_start_line": 269, "source_end_line": 270, "source_confidence": 8, "target_start_line": 5, "target_confidence": 15}, {"target_end_line": 21, "source_start_line": 50, "source_end_line": 53, "source_confidence": 8, "target_start_line": 19, "target_confidence": 15}, {"target_end_line": 23, "source_start_line": 265, "source_end_line": 269, "source_confidence": 8, "target_start_line": 22, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 270, "source_end_line": 271, "source_confidence": 8, "target_start_line": 34, "target_confidence": 15}, {"target_end_line": 25, "source_start_line": 271, "source_end_line": 273, "source_confidence": 8, "target_start_line": 23, "target_confidence": 15}, {"target_end_line": 55, "source_start_line": 288, "source_end_line": 292, "source_confidence": 8, "target_start_line": 53, "target_confidence": 15}, {"target_end_line": 60, "source_start_line": 55, "source_end_line": 57, "source_confidence": 8, "target_start_line": 57, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 246, "source_end_line": 247, "source_confidence": 8, "target_start_line": 3, "target_confidence": 15}, {"target_end_line": 7, "source_start_line": 269, "source_end_line": 270, "source_confidence": 8, "target_start_line": 5, "target_confidence": 15}, {"target_end_line": 21, "source_start_line": 50, "source_end_line": 53, "source_confidence": 8, "target_start_line": 19, "target_confidence": 15}, {"target_end_line": 23, "source_start_line": 265, "source_end_line": 269, "source_confidence": 8, "target_start_line": 22, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 270, "source_end_line": 271, "source_confidence": 8, "target_start_line": 34, "target_confidence": 15}, {"target_end_line": 25, "source_start_line": 271, "source_end_line": 273, "source_confidence": 8, "target_start_line": 23, "target_confidence": 15}, {"target_end_line": 55, "source_start_line": 288, "source_end_line": 292, "source_confidence": 8, "target_start_line": 53, "target_confidence": 15}, {"target_end_line": 60, "source_start_line": 55, "source_end_line": 57, "source_confidence": 8, "target_start_line": 57, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 246, "source_end_line": 247, "source_confidence": 8, "target_start_line": 3, "target_confidence": 15}, {"target_end_line": 7, "source_start_line": 269, "source_end_line": 270, "source_confidence": 8, "target_start_line": 5, "target_confidence": 15}, {"target_end_line": 21, "source_start_line": 50, "source_end_line": 53, "source_confidence": 8, "target_start_line": 19, "target_confidence": 15}, {"target_end_line": 23, "source_start_line": 265, "source_end_line": 269, "source_confidence": 8, "target_start_line": 22, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 270, "source_end_line": 271, "source_confidence": 8, "target_start_line": 34, "target_confidence": 15}, {"target_end_line": 25, "source_start_line": 271, "source_end_line": 273, "source_confidence": 8, "target_start_line": 23, "target_confidence": 15}, {"target_end_line": 55, "source_start_line": 288, "source_end_line": 292, "source_confidence": 8, "target_start_line": 53, "target_confidence": 15}, {"target_end_line": 60, "source_start_line": 55, "source_end_line": 57, "source_confidence": 8, "target_start_line": 57, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 246, "source_end_line": 247, "source_confidence": 8, "target_start_line": 3, "target_confidence": 15}, {"target_end_line": 7, "source_start_line": 269, "source_end_line": 270, "source_confidence": 8, "target_start_line": 5, "target_confidence": 15}, {"target_end_line": 21, "source_start_line": 50, "source_end_line": 53, "source_confidence": 8, "target_start_line": 19, "target_confidence": 15}, {"target_end_line": 23, "source_start_line": 265, "source_end_line": 269, "source_confidence": 8, "target_start_line": 22, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 270, "source_end_line": 271, "source_confidence": 8, "target_start_line": 34, "target_confidence": 15}, {"target_end_line": 25, "source_start_line": 271, "source_end_line": 273, "source_confidence": 8, "target_start_line": 23, "target_confidence": 15}, {"target_end_line": 55, "source_start_line": 288, "source_end_line": 292, "source_confidence": 8, "target_start_line": 53, "target_confidence": 15}, {"target_end_line": 60, "source_start_line": 55, "source_end_line": 57, "source_confidence": 8, "target_start_line": 57, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 246, "source_end_line": 247, "source_confidence": 8, "target_start_line": 3, "target_confidence": 15}, {"target_end_line": 7, "source_start_line": 269, "source_end_line": 270, "source_confidence": 8, "target_start_line": 5, "target_confidence": 15}, {"target_end_line": 21, "source_start_line": 50, "source_end_line": 53, "source_confidence": 8, "target_start_line": 19, "target_confidence": 15}, {"target_end_line": 23, "source_start_line": 265, "source_end_line": 269, "source_confidence": 8, "target_start_line": 22, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 270, "source_end_line": 271, "source_confidence": 8, "target_start_line": 34, "target_confidence": 15}, {"target_end_line": 25, "source_start_line": 271, "source_end_line": 273, "source_confidence": 8, "target_start_line": 23, "target_confidence": 15}, {"target_end_line": 55, "source_start_line": 288, "source_end_line": 292, "source_confidence": 8, "target_start_line": 53, "target_confidence": 15}, {"target_end_line": 60, "source_start_line": 55, "source_end_line": 57, "source_confidence": 8, "target_start_line": 57, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 246, "source_end_line": 247, "source_confidence": 8, "target_start_line": 3, "target_confidence": 15}, {"target_end_line": 7, "source_start_line": 269, "source_end_line": 270, "source_confidence": 8, "target_start_line": 5, "target_confidence": 15}, {"target_end_line": 21, "source_start_line": 50, "source_end_line": 53, "source_confidence": 8, "target_start_line": 19, "target_confidence": 15}, {"target_end_line": 23, "source_start_line": 265, "source_end_line": 269, "source_confidence": 8, "target_start_line": 22, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 270, "source_end_line": 271, "source_confidence": 8, "target_start_line": 34, "target_confidence": 15}, {"target_end_line": 25, "source_start_line": 271, "source_end_line": 273, "source_confidence": 8, "target_start_line": 23, "target_confidence": 15}, {"target_end_line": 55, "source_start_line": 288, "source_end_line": 292, "source_confidence": 8, "target_start_line": 53, "target_confidence": 15}]}, {"source": "sirwart_8ce3a98af7219dfd4d966c8a01019d99", "value": 44, "target": "armollica_853c9344a7808619d863c8d7410062e6", "links": [{"target_end_line": 77, "source_start_line": 38, "source_end_line": 67, "source_confidence": 56, "target_start_line": 48, "target_confidence": 51}, {"target_end_line": 39, "source_start_line": 19, "source_end_line": 27, "source_confidence": 56, "target_start_line": 33, "target_confidence": 51}, {"target_end_line": 23, "source_start_line": 3, "source_end_line": 7, "source_confidence": 56, "target_start_line": 19, "target_confidence": 51}, {"target_end_line": 77, "source_start_line": 38, "source_end_line": 67, "source_confidence": 56, "target_start_line": 48, "target_confidence": 51}, {"target_end_line": 39, "source_start_line": 19, "source_end_line": 27, "source_confidence": 56, "target_start_line": 33, "target_confidence": 51}, {"target_end_line": 23, "source_start_line": 3, "source_end_line": 7, "source_confidence": 56, "target_start_line": 19, "target_confidence": 51}, {"target_end_line": 77, "source_start_line": 38, "source_end_line": 67, "source_confidence": 56, "target_start_line": 48, "target_confidence": 51}, {"target_end_line": 39, "source_start_line": 19, "source_end_line": 27, "source_confidence": 56, "target_start_line": 33, "target_confidence": 51}, {"target_end_line": 23, "source_start_line": 3, "source_end_line": 7, "source_confidence": 56, "target_start_line": 19, "target_confidence": 51}]}, {"source": "ntwieneke_0e22b7cc5b940a4df2ffdd0cc5567189", "value": 31, "target": "tylermachado_e24468e796146142d0d50c2136b184f3", "links": [{"target_end_line": 59, "source_start_line": 29, "source_end_line": 41, "source_confidence": 52, "target_start_line": 47, "target_confidence": 21}, {"target_end_line": 32, "source_start_line": 22, "source_end_line": 28, "source_confidence": 52, "target_start_line": 26, "target_confidence": 21}, {"target_end_line": 14, "source_start_line": 4, "source_end_line": 14, "source_confidence": 52, "target_start_line": 4, "target_confidence": 21}, {"target_end_line": 59, "source_start_line": 29, "source_end_line": 41, "source_confidence": 52, "target_start_line": 47, "target_confidence": 21}, {"target_end_line": 32, "source_start_line": 22, "source_end_line": 28, "source_confidence": 52, "target_start_line": 26, "target_confidence": 21}, {"target_end_line": 14, "source_start_line": 4, "source_end_line": 14, "source_confidence": 52, "target_start_line": 4, "target_confidence": 21}, {"target_end_line": 59, "source_start_line": 29, "source_end_line": 41, "source_confidence": 52, "target_start_line": 47, "target_confidence": 21}, {"target_end_line": 32, "source_start_line": 22, "source_end_line": 28, "source_confidence": 52, "target_start_line": 26, "target_confidence": 21}, {"target_end_line": 14, "source_start_line": 4, "source_end_line": 14, "source_confidence": 52, "target_start_line": 4, "target_confidence": 21}]}, {"source": "mbostock_7115f7a0393de96f2fdc", "value": 49, "target": "syntagmatic_be8287ae3724e0c83c31273b20710496", "links": [{"target_end_line": 49, "source_start_line": 86, "source_end_line": 99, "source_confidence": 16, "target_start_line": 36, "target_confidence": 41}, {"target_end_line": 74, "source_start_line": 106, "source_end_line": 131, "source_confidence": 16, "target_start_line": 49, "target_confidence": 41}, {"target_end_line": 35, "source_start_line": 77, "source_end_line": 85, "source_confidence": 16, "target_start_line": 27, "target_confidence": 41}, {"target_end_line": 49, "source_start_line": 86, "source_end_line": 99, "source_confidence": 16, "target_start_line": 36, "target_confidence": 41}, {"target_end_line": 74, "source_start_line": 106, "source_end_line": 131, "source_confidence": 16, "target_start_line": 49, "target_confidence": 41}, {"target_end_line": 35, "source_start_line": 77, "source_end_line": 85, "source_confidence": 16, "target_start_line": 27, "target_confidence": 41}, {"target_end_line": 49, "source_start_line": 86, "source_end_line": 99, "source_confidence": 16, "target_start_line": 36, "target_confidence": 41}, {"target_end_line": 74, "source_start_line": 106, "source_end_line": 131, "source_confidence": 16, "target_start_line": 49, "target_confidence": 41}, {"target_end_line": 35, "source_start_line": 77, "source_end_line": 85, "source_confidence": 16, "target_start_line": 27, "target_confidence": 41}]}, {"source": "sirwart_8ce3a98af7219dfd4d966c8a01019d99", "value": 33, "target": "ntwieneke_0e22b7cc5b940a4df2ffdd0cc5567189", "links": [{"target_end_line": 28, "source_start_line": 23, "source_end_line": 29, "source_confidence": 45, "target_start_line": 22, "target_confidence": 51}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 45, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 53, "source_start_line": 56, "source_end_line": 66, "source_confidence": 45, "target_start_line": 43, "target_confidence": 51}, {"target_end_line": 19, "source_start_line": 15, "source_end_line": 21, "source_confidence": 45, "target_start_line": 13, "target_confidence": 51}, {"target_end_line": 28, "source_start_line": 23, "source_end_line": 29, "source_confidence": 45, "target_start_line": 22, "target_confidence": 51}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 45, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 53, "source_start_line": 56, "source_end_line": 66, "source_confidence": 45, "target_start_line": 43, "target_confidence": 51}, {"target_end_line": 19, "source_start_line": 15, "source_end_line": 21, "source_confidence": 45, "target_start_line": 13, "target_confidence": 51}, {"target_end_line": 28, "source_start_line": 23, "source_end_line": 29, "source_confidence": 45, "target_start_line": 22, "target_confidence": 51}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 45, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 53, "source_start_line": 56, "source_end_line": 66, "source_confidence": 45, "target_start_line": 43, "target_confidence": 51}, {"target_end_line": 19, "source_start_line": 15, "source_end_line": 21, "source_confidence": 45, "target_start_line": 13, "target_confidence": 51}, {"target_end_line": 28, "source_start_line": 23, "source_end_line": 29, "source_confidence": 45, "target_start_line": 22, "target_confidence": 51}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 45, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 53, "source_start_line": 56, "source_end_line": 66, "source_confidence": 45, "target_start_line": 43, "target_confidence": 51}, {"target_end_line": 19, "source_start_line": 15, "source_end_line": 21, "source_confidence": 45, "target_start_line": 13, "target_confidence": 51}]}, {"source": "sampathweb_2ced6f3b7fe238fb63958dc3bbf052b9", "value": 29, "target": "WillNetsky_cf86ff9fed83ee6a333f422fab7ef539", "links": [{"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 55, "target_start_line": 1, "target_confidence": 18}, {"target_end_line": 139, "source_start_line": 31, "source_end_line": 36, "source_confidence": 55, "target_start_line": 134, "target_confidence": 18}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 55, "target_start_line": 1, "target_confidence": 18}, {"target_end_line": 139, "source_start_line": 31, "source_end_line": 36, "source_confidence": 55, "target_start_line": 134, "target_confidence": 18}]}, {"source": "rmar5h_d96e1ecedd1cd4b9cc6337e704c0e8ba", "value": 232, "target": "stjacqrm_344e9c52fa580966d47b1e13ca7fee11", "links": [{"target_end_line": 176, "source_start_line": 59, "source_end_line": 171, "source_confidence": 82, "target_start_line": 64, "target_confidence": 71}, {"target_end_line": 51, "source_start_line": 3, "source_end_line": 46, "source_confidence": 82, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 300, "source_start_line": 237, "source_end_line": 258, "source_confidence": 82, "target_start_line": 279, "target_confidence": 71}, {"target_end_line": 190, "source_start_line": 216, "source_end_line": 225, "source_confidence": 82, "target_start_line": 181, "target_confidence": 71}, {"target_end_line": 207, "source_start_line": 174, "source_end_line": 184, "source_confidence": 82, "target_start_line": 197, "target_confidence": 71}, {"target_end_line": 322, "source_start_line": 271, "source_end_line": 281, "source_confidence": 82, "target_start_line": 313, "target_confidence": 71}, {"target_end_line": 227, "source_start_line": 198, "source_end_line": 211, "source_confidence": 82, "target_start_line": 215, "target_confidence": 71}, {"target_end_line": 53, "source_start_line": 48, "source_end_line": 49, "source_confidence": 82, "target_start_line": 52, "target_confidence": 71}, {"target_end_line": 277, "source_start_line": 231, "source_end_line": 235, "source_confidence": 82, "target_start_line": 273, "target_confidence": 71}, {"target_end_line": 176, "source_start_line": 59, "source_end_line": 171, "source_confidence": 82, "target_start_line": 64, "target_confidence": 71}, {"target_end_line": 51, "source_start_line": 3, "source_end_line": 46, "source_confidence": 82, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 300, "source_start_line": 237, "source_end_line": 258, "source_confidence": 82, "target_start_line": 279, "target_confidence": 71}, {"target_end_line": 190, "source_start_line": 216, "source_end_line": 225, "source_confidence": 82, "target_start_line": 181, "target_confidence": 71}, {"target_end_line": 207, "source_start_line": 174, "source_end_line": 184, "source_confidence": 82, "target_start_line": 197, "target_confidence": 71}, {"target_end_line": 322, "source_start_line": 271, "source_end_line": 281, "source_confidence": 82, "target_start_line": 313, "target_confidence": 71}, {"target_end_line": 227, "source_start_line": 198, "source_end_line": 211, "source_confidence": 82, "target_start_line": 215, "target_confidence": 71}, {"target_end_line": 53, "source_start_line": 48, "source_end_line": 49, "source_confidence": 82, "target_start_line": 52, "target_confidence": 71}, {"target_end_line": 277, "source_start_line": 231, "source_end_line": 235, "source_confidence": 82, "target_start_line": 273, "target_confidence": 71}, {"target_end_line": 176, "source_start_line": 59, "source_end_line": 171, "source_confidence": 82, "target_start_line": 64, "target_confidence": 71}, {"target_end_line": 51, "source_start_line": 3, "source_end_line": 46, "source_confidence": 82, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 300, "source_start_line": 237, "source_end_line": 258, "source_confidence": 82, "target_start_line": 279, "target_confidence": 71}, {"target_end_line": 190, "source_start_line": 216, "source_end_line": 225, "source_confidence": 82, "target_start_line": 181, "target_confidence": 71}, {"target_end_line": 207, "source_start_line": 174, "source_end_line": 184, "source_confidence": 82, "target_start_line": 197, "target_confidence": 71}, {"target_end_line": 322, "source_start_line": 271, "source_end_line": 281, "source_confidence": 82, "target_start_line": 313, "target_confidence": 71}, {"target_end_line": 227, "source_start_line": 198, "source_end_line": 211, "source_confidence": 82, "target_start_line": 215, "target_confidence": 71}, {"target_end_line": 53, "source_start_line": 48, "source_end_line": 49, "source_confidence": 82, "target_start_line": 52, "target_confidence": 71}, {"target_end_line": 277, "source_start_line": 231, "source_end_line": 235, "source_confidence": 82, "target_start_line": 273, "target_confidence": 71}, {"target_end_line": 176, "source_start_line": 59, "source_end_line": 171, "source_confidence": 82, "target_start_line": 64, "target_confidence": 71}, {"target_end_line": 51, "source_start_line": 3, "source_end_line": 46, "source_confidence": 82, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 300, "source_start_line": 237, "source_end_line": 258, "source_confidence": 82, "target_start_line": 279, "target_confidence": 71}, {"target_end_line": 190, "source_start_line": 216, "source_end_line": 225, "source_confidence": 82, "target_start_line": 181, "target_confidence": 71}, {"target_end_line": 207, "source_start_line": 174, "source_end_line": 184, "source_confidence": 82, "target_start_line": 197, "target_confidence": 71}, {"target_end_line": 322, "source_start_line": 271, "source_end_line": 281, "source_confidence": 82, "target_start_line": 313, "target_confidence": 71}, {"target_end_line": 227, "source_start_line": 198, "source_end_line": 211, "source_confidence": 82, "target_start_line": 215, "target_confidence": 71}, {"target_end_line": 53, "source_start_line": 48, "source_end_line": 49, "source_confidence": 82, "target_start_line": 52, "target_confidence": 71}, {"target_end_line": 277, "source_start_line": 231, "source_end_line": 235, "source_confidence": 82, "target_start_line": 273, "target_confidence": 71}, {"target_end_line": 176, "source_start_line": 59, "source_end_line": 171, "source_confidence": 82, "target_start_line": 64, "target_confidence": 71}, {"target_end_line": 51, "source_start_line": 3, "source_end_line": 46, "source_confidence": 82, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 300, "source_start_line": 237, "source_end_line": 258, "source_confidence": 82, "target_start_line": 279, "target_confidence": 71}, {"target_end_line": 190, "source_start_line": 216, "source_end_line": 225, "source_confidence": 82, "target_start_line": 181, "target_confidence": 71}, {"target_end_line": 207, "source_start_line": 174, "source_end_line": 184, "source_confidence": 82, "target_start_line": 197, "target_confidence": 71}, {"target_end_line": 322, "source_start_line": 271, "source_end_line": 281, "source_confidence": 82, "target_start_line": 313, "target_confidence": 71}, {"target_end_line": 227, "source_start_line": 198, "source_end_line": 211, "source_confidence": 82, "target_start_line": 215, "target_confidence": 71}, {"target_end_line": 53, "source_start_line": 48, "source_end_line": 49, "source_confidence": 82, "target_start_line": 52, "target_confidence": 71}, {"target_end_line": 277, "source_start_line": 231, "source_end_line": 235, "source_confidence": 82, "target_start_line": 273, "target_confidence": 71}, {"target_end_line": 176, "source_start_line": 59, "source_end_line": 171, "source_confidence": 82, "target_start_line": 64, "target_confidence": 71}, {"target_end_line": 51, "source_start_line": 3, "source_end_line": 46, "source_confidence": 82, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 300, "source_start_line": 237, "source_end_line": 258, "source_confidence": 82, "target_start_line": 279, "target_confidence": 71}, {"target_end_line": 190, "source_start_line": 216, "source_end_line": 225, "source_confidence": 82, "target_start_line": 181, "target_confidence": 71}, {"target_end_line": 207, "source_start_line": 174, "source_end_line": 184, "source_confidence": 82, "target_start_line": 197, "target_confidence": 71}, {"target_end_line": 322, "source_start_line": 271, "source_end_line": 281, "source_confidence": 82, "target_start_line": 313, "target_confidence": 71}, {"target_end_line": 227, "source_start_line": 198, "source_end_line": 211, "source_confidence": 82, "target_start_line": 215, "target_confidence": 71}, {"target_end_line": 53, "source_start_line": 48, "source_end_line": 49, "source_confidence": 82, "target_start_line": 52, "target_confidence": 71}, {"target_end_line": 277, "source_start_line": 231, "source_end_line": 235, "source_confidence": 82, "target_start_line": 273, "target_confidence": 71}, {"target_end_line": 176, "source_start_line": 59, "source_end_line": 171, "source_confidence": 82, "target_start_line": 64, "target_confidence": 71}, {"target_end_line": 51, "source_start_line": 3, "source_end_line": 46, "source_confidence": 82, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 300, "source_start_line": 237, "source_end_line": 258, "source_confidence": 82, "target_start_line": 279, "target_confidence": 71}, {"target_end_line": 190, "source_start_line": 216, "source_end_line": 225, "source_confidence": 82, "target_start_line": 181, "target_confidence": 71}, {"target_end_line": 207, "source_start_line": 174, "source_end_line": 184, "source_confidence": 82, "target_start_line": 197, "target_confidence": 71}, {"target_end_line": 322, "source_start_line": 271, "source_end_line": 281, "source_confidence": 82, "target_start_line": 313, "target_confidence": 71}, {"target_end_line": 227, "source_start_line": 198, "source_end_line": 211, "source_confidence": 82, "target_start_line": 215, "target_confidence": 71}, {"target_end_line": 53, "source_start_line": 48, "source_end_line": 49, "source_confidence": 82, "target_start_line": 52, "target_confidence": 71}, {"target_end_line": 277, "source_start_line": 231, "source_end_line": 235, "source_confidence": 82, "target_start_line": 273, "target_confidence": 71}, {"target_end_line": 176, "source_start_line": 59, "source_end_line": 171, "source_confidence": 82, "target_start_line": 64, "target_confidence": 71}, {"target_end_line": 51, "source_start_line": 3, "source_end_line": 46, "source_confidence": 82, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 300, "source_start_line": 237, "source_end_line": 258, "source_confidence": 82, "target_start_line": 279, "target_confidence": 71}, {"target_end_line": 190, "source_start_line": 216, "source_end_line": 225, "source_confidence": 82, "target_start_line": 181, "target_confidence": 71}, {"target_end_line": 207, "source_start_line": 174, "source_end_line": 184, "source_confidence": 82, "target_start_line": 197, "target_confidence": 71}, {"target_end_line": 322, "source_start_line": 271, "source_end_line": 281, "source_confidence": 82, "target_start_line": 313, "target_confidence": 71}, {"target_end_line": 227, "source_start_line": 198, "source_end_line": 211, "source_confidence": 82, "target_start_line": 215, "target_confidence": 71}, {"target_end_line": 53, "source_start_line": 48, "source_end_line": 49, "source_confidence": 82, "target_start_line": 52, "target_confidence": 71}, {"target_end_line": 277, "source_start_line": 231, "source_end_line": 235, "source_confidence": 82, "target_start_line": 273, "target_confidence": 71}, {"target_end_line": 176, "source_start_line": 59, "source_end_line": 171, "source_confidence": 82, "target_start_line": 64, "target_confidence": 71}, {"target_end_line": 51, "source_start_line": 3, "source_end_line": 46, "source_confidence": 82, "target_start_line": 7, "target_confidence": 71}, {"target_end_line": 300, "source_start_line": 237, "source_end_line": 258, "source_confidence": 82, "target_start_line": 279, "target_confidence": 71}, {"target_end_line": 190, "source_start_line": 216, "source_end_line": 225, "source_confidence": 82, "target_start_line": 181, "target_confidence": 71}, {"target_end_line": 207, "source_start_line": 174, "source_end_line": 184, "source_confidence": 82, "target_start_line": 197, "target_confidence": 71}, {"target_end_line": 322, "source_start_line": 271, "source_end_line": 281, "source_confidence": 82, "target_start_line": 313, "target_confidence": 71}, {"target_end_line": 227, "source_start_line": 198, "source_end_line": 211, "source_confidence": 82, "target_start_line": 215, "target_confidence": 71}, {"target_end_line": 53, "source_start_line": 48, "source_end_line": 49, "source_confidence": 82, "target_start_line": 52, "target_confidence": 71}, {"target_end_line": 277, "source_start_line": 231, "source_end_line": 235, "source_confidence": 82, "target_start_line": 273, "target_confidence": 71}]}, {"source": "curran_bb9886529a77d4a3c0616b4b67a5ed66", "value": 182, "target": "Malicia_d09b3ae6b3ce3435a0ca4ec73b137528", "links": [{"target_end_line": 182, "source_start_line": 1, "source_end_line": 182, "source_confidence": 68, "target_start_line": 1, "target_confidence": 98}]}, {"source": "dogobox_3edc0106447dcc869a7ffe2cac9fed02", "value": 86, "target": "elon-_b50306eadecee32901d8ac0245de15ae", "links": [{"target_end_line": 86, "source_start_line": 1, "source_end_line": 86, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "mhipley_423ed5ef0cc50fcdff0c", "value": 45, "target": "slayerscouts_de99b8b25f7c68a40dd4b3d351d1c26e", "links": [{"target_end_line": 72, "source_start_line": 62, "source_end_line": 73, "source_confidence": 45, "target_start_line": 61, "target_confidence": 37}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 45, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 33, "source_start_line": 25, "source_end_line": 31, "source_confidence": 45, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 45, "source_end_line": 54, "source_confidence": 45, "target_start_line": 40, "target_confidence": 37}, {"target_end_line": 108, "source_start_line": 88, "source_end_line": 93, "source_confidence": 45, "target_start_line": 103, "target_confidence": 37}, {"target_end_line": 72, "source_start_line": 62, "source_end_line": 73, "source_confidence": 45, "target_start_line": 61, "target_confidence": 37}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 45, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 33, "source_start_line": 25, "source_end_line": 31, "source_confidence": 45, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 45, "source_end_line": 54, "source_confidence": 45, "target_start_line": 40, "target_confidence": 37}, {"target_end_line": 108, "source_start_line": 88, "source_end_line": 93, "source_confidence": 45, "target_start_line": 103, "target_confidence": 37}, {"target_end_line": 72, "source_start_line": 62, "source_end_line": 73, "source_confidence": 45, "target_start_line": 61, "target_confidence": 37}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 45, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 33, "source_start_line": 25, "source_end_line": 31, "source_confidence": 45, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 45, "source_end_line": 54, "source_confidence": 45, "target_start_line": 40, "target_confidence": 37}, {"target_end_line": 108, "source_start_line": 88, "source_end_line": 93, "source_confidence": 45, "target_start_line": 103, "target_confidence": 37}, {"target_end_line": 72, "source_start_line": 62, "source_end_line": 73, "source_confidence": 45, "target_start_line": 61, "target_confidence": 37}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 45, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 33, "source_start_line": 25, "source_end_line": 31, "source_confidence": 45, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 45, "source_end_line": 54, "source_confidence": 45, "target_start_line": 40, "target_confidence": 37}, {"target_end_line": 108, "source_start_line": 88, "source_end_line": 93, "source_confidence": 45, "target_start_line": 103, "target_confidence": 37}, {"target_end_line": 72, "source_start_line": 62, "source_end_line": 73, "source_confidence": 45, "target_start_line": 61, "target_confidence": 37}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 45, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 33, "source_start_line": 25, "source_end_line": 31, "source_confidence": 45, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 45, "source_end_line": 54, "source_confidence": 45, "target_start_line": 40, "target_confidence": 37}, {"target_end_line": 108, "source_start_line": 88, "source_end_line": 93, "source_confidence": 45, "target_start_line": 103, "target_confidence": 37}]}, {"source": "syntagmatic_c9fb69e425a3c07cfbd09169941fbf46", "value": 49, "target": "dogobox_d1e6411426e394efb82a49871e3f8cf7", "links": [{"target_end_line": 150, "source_start_line": 264, "source_end_line": 277, "source_confidence": 15, "target_start_line": 137, "target_confidence": 34}, {"target_end_line": 90, "source_start_line": 190, "source_end_line": 197, "source_confidence": 15, "target_start_line": 84, "target_confidence": 34}, {"target_end_line": 169, "source_start_line": 332, "source_end_line": 340, "source_confidence": 15, "target_start_line": 161, "target_confidence": 34}, {"target_end_line": 115, "source_start_line": 236, "source_end_line": 239, "source_confidence": 15, "target_start_line": 112, "target_confidence": 34}, {"target_end_line": 18, "source_start_line": 21, "source_end_line": 24, "source_confidence": 15, "target_start_line": 15, "target_confidence": 34}, {"target_end_line": 12, "source_start_line": 12, "source_end_line": 17, "source_confidence": 15, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 174, "source_start_line": 340, "source_end_line": 343, "source_confidence": 15, "target_start_line": 171, "target_confidence": 34}, {"target_end_line": 150, "source_start_line": 264, "source_end_line": 277, "source_confidence": 15, "target_start_line": 137, "target_confidence": 34}, {"target_end_line": 90, "source_start_line": 190, "source_end_line": 197, "source_confidence": 15, "target_start_line": 84, "target_confidence": 34}, {"target_end_line": 169, "source_start_line": 332, "source_end_line": 340, "source_confidence": 15, "target_start_line": 161, "target_confidence": 34}, {"target_end_line": 115, "source_start_line": 236, "source_end_line": 239, "source_confidence": 15, "target_start_line": 112, "target_confidence": 34}, {"target_end_line": 18, "source_start_line": 21, "source_end_line": 24, "source_confidence": 15, "target_start_line": 15, "target_confidence": 34}, {"target_end_line": 12, "source_start_line": 12, "source_end_line": 17, "source_confidence": 15, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 174, "source_start_line": 340, "source_end_line": 343, "source_confidence": 15, "target_start_line": 171, "target_confidence": 34}, {"target_end_line": 150, "source_start_line": 264, "source_end_line": 277, "source_confidence": 15, "target_start_line": 137, "target_confidence": 34}, {"target_end_line": 90, "source_start_line": 190, "source_end_line": 197, "source_confidence": 15, "target_start_line": 84, "target_confidence": 34}, {"target_end_line": 169, "source_start_line": 332, "source_end_line": 340, "source_confidence": 15, "target_start_line": 161, "target_confidence": 34}, {"target_end_line": 115, "source_start_line": 236, "source_end_line": 239, "source_confidence": 15, "target_start_line": 112, "target_confidence": 34}, {"target_end_line": 18, "source_start_line": 21, "source_end_line": 24, "source_confidence": 15, "target_start_line": 15, "target_confidence": 34}, {"target_end_line": 12, "source_start_line": 12, "source_end_line": 17, "source_confidence": 15, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 174, "source_start_line": 340, "source_end_line": 343, "source_confidence": 15, "target_start_line": 171, "target_confidence": 34}, {"target_end_line": 150, "source_start_line": 264, "source_end_line": 277, "source_confidence": 15, "target_start_line": 137, "target_confidence": 34}, {"target_end_line": 90, "source_start_line": 190, "source_end_line": 197, "source_confidence": 15, "target_start_line": 84, "target_confidence": 34}, {"target_end_line": 169, "source_start_line": 332, "source_end_line": 340, "source_confidence": 15, "target_start_line": 161, "target_confidence": 34}, {"target_end_line": 115, "source_start_line": 236, "source_end_line": 239, "source_confidence": 15, "target_start_line": 112, "target_confidence": 34}, {"target_end_line": 18, "source_start_line": 21, "source_end_line": 24, "source_confidence": 15, "target_start_line": 15, "target_confidence": 34}, {"target_end_line": 12, "source_start_line": 12, "source_end_line": 17, "source_confidence": 15, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 174, "source_start_line": 340, "source_end_line": 343, "source_confidence": 15, "target_start_line": 171, "target_confidence": 34}, {"target_end_line": 150, "source_start_line": 264, "source_end_line": 277, "source_confidence": 15, "target_start_line": 137, "target_confidence": 34}, {"target_end_line": 90, "source_start_line": 190, "source_end_line": 197, "source_confidence": 15, "target_start_line": 84, "target_confidence": 34}, {"target_end_line": 169, "source_start_line": 332, "source_end_line": 340, "source_confidence": 15, "target_start_line": 161, "target_confidence": 34}, {"target_end_line": 115, "source_start_line": 236, "source_end_line": 239, "source_confidence": 15, "target_start_line": 112, "target_confidence": 34}, {"target_end_line": 18, "source_start_line": 21, "source_end_line": 24, "source_confidence": 15, "target_start_line": 15, "target_confidence": 34}, {"target_end_line": 12, "source_start_line": 12, "source_end_line": 17, "source_confidence": 15, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 174, "source_start_line": 340, "source_end_line": 343, "source_confidence": 15, "target_start_line": 171, "target_confidence": 34}, {"target_end_line": 150, "source_start_line": 264, "source_end_line": 277, "source_confidence": 15, "target_start_line": 137, "target_confidence": 34}, {"target_end_line": 90, "source_start_line": 190, "source_end_line": 197, "source_confidence": 15, "target_start_line": 84, "target_confidence": 34}, {"target_end_line": 169, "source_start_line": 332, "source_end_line": 340, "source_confidence": 15, "target_start_line": 161, "target_confidence": 34}, {"target_end_line": 115, "source_start_line": 236, "source_end_line": 239, "source_confidence": 15, "target_start_line": 112, "target_confidence": 34}, {"target_end_line": 18, "source_start_line": 21, "source_end_line": 24, "source_confidence": 15, "target_start_line": 15, "target_confidence": 34}, {"target_end_line": 12, "source_start_line": 12, "source_end_line": 17, "source_confidence": 15, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 174, "source_start_line": 340, "source_end_line": 343, "source_confidence": 15, "target_start_line": 171, "target_confidence": 34}, {"target_end_line": 150, "source_start_line": 264, "source_end_line": 277, "source_confidence": 15, "target_start_line": 137, "target_confidence": 34}, {"target_end_line": 90, "source_start_line": 190, "source_end_line": 197, "source_confidence": 15, "target_start_line": 84, "target_confidence": 34}, {"target_end_line": 169, "source_start_line": 332, "source_end_line": 340, "source_confidence": 15, "target_start_line": 161, "target_confidence": 34}, {"target_end_line": 115, "source_start_line": 236, "source_end_line": 239, "source_confidence": 15, "target_start_line": 112, "target_confidence": 34}, {"target_end_line": 18, "source_start_line": 21, "source_end_line": 24, "source_confidence": 15, "target_start_line": 15, "target_confidence": 34}, {"target_end_line": 12, "source_start_line": 12, "source_end_line": 17, "source_confidence": 15, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 174, "source_start_line": 340, "source_end_line": 343, "source_confidence": 15, "target_start_line": 171, "target_confidence": 34}]}, {"source": "ericamartel_b895d79139c315b4a14c7c4f63a9b00e", "value": 163, "target": "rmar5h_d96e1ecedd1cd4b9cc6337e704c0e8ba", "links": [{"target_end_line": 169, "source_start_line": 289, "source_end_line": 369, "source_confidence": 37, "target_start_line": 89, "target_confidence": 55}, {"target_end_line": 211, "source_start_line": 413, "source_end_line": 451, "source_confidence": 37, "target_start_line": 173, "target_confidence": 55}, {"target_end_line": 258, "source_start_line": 493, "source_end_line": 504, "source_confidence": 37, "target_start_line": 246, "target_confidence": 55}, {"target_end_line": 281, "source_start_line": 517, "source_end_line": 531, "source_confidence": 37, "target_start_line": 271, "target_confidence": 55}, {"target_end_line": 234, "source_start_line": 478, "source_end_line": 481, "source_confidence": 37, "target_start_line": 231, "target_confidence": 55}, {"target_end_line": 88, "source_start_line": 282, "source_end_line": 288, "source_confidence": 37, "target_start_line": 81, "target_confidence": 55}, {"target_end_line": 72, "source_start_line": 263, "source_end_line": 267, "source_confidence": 37, "target_start_line": 67, "target_confidence": 55}, {"target_end_line": 169, "source_start_line": 289, "source_end_line": 369, "source_confidence": 37, "target_start_line": 89, "target_confidence": 55}, {"target_end_line": 211, "source_start_line": 413, "source_end_line": 451, "source_confidence": 37, "target_start_line": 173, "target_confidence": 55}, {"target_end_line": 258, "source_start_line": 493, "source_end_line": 504, "source_confidence": 37, "target_start_line": 246, "target_confidence": 55}, {"target_end_line": 281, "source_start_line": 517, "source_end_line": 531, "source_confidence": 37, "target_start_line": 271, "target_confidence": 55}, {"target_end_line": 234, "source_start_line": 478, "source_end_line": 481, "source_confidence": 37, "target_start_line": 231, "target_confidence": 55}, {"target_end_line": 88, "source_start_line": 282, "source_end_line": 288, "source_confidence": 37, "target_start_line": 81, "target_confidence": 55}, {"target_end_line": 72, "source_start_line": 263, "source_end_line": 267, "source_confidence": 37, "target_start_line": 67, "target_confidence": 55}, {"target_end_line": 169, "source_start_line": 289, "source_end_line": 369, "source_confidence": 37, "target_start_line": 89, "target_confidence": 55}, {"target_end_line": 211, "source_start_line": 413, "source_end_line": 451, "source_confidence": 37, "target_start_line": 173, "target_confidence": 55}, {"target_end_line": 258, "source_start_line": 493, "source_end_line": 504, "source_confidence": 37, "target_start_line": 246, "target_confidence": 55}, {"target_end_line": 281, "source_start_line": 517, "source_end_line": 531, "source_confidence": 37, "target_start_line": 271, "target_confidence": 55}, {"target_end_line": 234, "source_start_line": 478, "source_end_line": 481, "source_confidence": 37, "target_start_line": 231, "target_confidence": 55}, {"target_end_line": 88, "source_start_line": 282, "source_end_line": 288, "source_confidence": 37, "target_start_line": 81, "target_confidence": 55}, {"target_end_line": 72, "source_start_line": 263, "source_end_line": 267, "source_confidence": 37, "target_start_line": 67, "target_confidence": 55}, {"target_end_line": 169, "source_start_line": 289, "source_end_line": 369, "source_confidence": 37, "target_start_line": 89, "target_confidence": 55}, {"target_end_line": 211, "source_start_line": 413, "source_end_line": 451, "source_confidence": 37, "target_start_line": 173, "target_confidence": 55}, {"target_end_line": 258, "source_start_line": 493, "source_end_line": 504, "source_confidence": 37, "target_start_line": 246, "target_confidence": 55}, {"target_end_line": 281, "source_start_line": 517, "source_end_line": 531, "source_confidence": 37, "target_start_line": 271, "target_confidence": 55}, {"target_end_line": 234, "source_start_line": 478, "source_end_line": 481, "source_confidence": 37, "target_start_line": 231, "target_confidence": 55}, {"target_end_line": 88, "source_start_line": 282, "source_end_line": 288, "source_confidence": 37, "target_start_line": 81, "target_confidence": 55}, {"target_end_line": 72, "source_start_line": 263, "source_end_line": 267, "source_confidence": 37, "target_start_line": 67, "target_confidence": 55}, {"target_end_line": 169, "source_start_line": 289, "source_end_line": 369, "source_confidence": 37, "target_start_line": 89, "target_confidence": 55}, {"target_end_line": 211, "source_start_line": 413, "source_end_line": 451, "source_confidence": 37, "target_start_line": 173, "target_confidence": 55}, {"target_end_line": 258, "source_start_line": 493, "source_end_line": 504, "source_confidence": 37, "target_start_line": 246, "target_confidence": 55}, {"target_end_line": 281, "source_start_line": 517, "source_end_line": 531, "source_confidence": 37, "target_start_line": 271, "target_confidence": 55}, {"target_end_line": 234, "source_start_line": 478, "source_end_line": 481, "source_confidence": 37, "target_start_line": 231, "target_confidence": 55}, {"target_end_line": 88, "source_start_line": 282, "source_end_line": 288, "source_confidence": 37, "target_start_line": 81, "target_confidence": 55}, {"target_end_line": 72, "source_start_line": 263, "source_end_line": 267, "source_confidence": 37, "target_start_line": 67, "target_confidence": 55}, {"target_end_line": 169, "source_start_line": 289, "source_end_line": 369, "source_confidence": 37, "target_start_line": 89, "target_confidence": 55}, {"target_end_line": 211, "source_start_line": 413, "source_end_line": 451, "source_confidence": 37, "target_start_line": 173, "target_confidence": 55}, {"target_end_line": 258, "source_start_line": 493, "source_end_line": 504, "source_confidence": 37, "target_start_line": 246, "target_confidence": 55}, {"target_end_line": 281, "source_start_line": 517, "source_end_line": 531, "source_confidence": 37, "target_start_line": 271, "target_confidence": 55}, {"target_end_line": 234, "source_start_line": 478, "source_end_line": 481, "source_confidence": 37, "target_start_line": 231, "target_confidence": 55}, {"target_end_line": 88, "source_start_line": 282, "source_end_line": 288, "source_confidence": 37, "target_start_line": 81, "target_confidence": 55}, {"target_end_line": 72, "source_start_line": 263, "source_end_line": 267, "source_confidence": 37, "target_start_line": 67, "target_confidence": 55}, {"target_end_line": 169, "source_start_line": 289, "source_end_line": 369, "source_confidence": 37, "target_start_line": 89, "target_confidence": 55}, {"target_end_line": 211, "source_start_line": 413, "source_end_line": 451, "source_confidence": 37, "target_start_line": 173, "target_confidence": 55}, {"target_end_line": 258, "source_start_line": 493, "source_end_line": 504, "source_confidence": 37, "target_start_line": 246, "target_confidence": 55}, {"target_end_line": 281, "source_start_line": 517, "source_end_line": 531, "source_confidence": 37, "target_start_line": 271, "target_confidence": 55}, {"target_end_line": 234, "source_start_line": 478, "source_end_line": 481, "source_confidence": 37, "target_start_line": 231, "target_confidence": 55}, {"target_end_line": 88, "source_start_line": 282, "source_end_line": 288, "source_confidence": 37, "target_start_line": 81, "target_confidence": 55}, {"target_end_line": 72, "source_start_line": 263, "source_end_line": 267, "source_confidence": 37, "target_start_line": 67, "target_confidence": 55}]}, {"source": "namibian15_5d353f5f4a093a74d75f", "value": 57, "target": "dogobox_4df88ca21dd4303d787649b8f389ade3", "links": [{"target_end_line": 42, "source_start_line": 41, "source_end_line": 62, "source_confidence": 56, "target_start_line": 21, "target_confidence": 87}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 56, "target_start_line": 1, "target_confidence": 87}, {"target_end_line": 71, "source_start_line": 96, "source_end_line": 107, "source_confidence": 56, "target_start_line": 58, "target_confidence": 87}, {"target_end_line": 18, "source_start_line": 15, "source_end_line": 17, "source_confidence": 56, "target_start_line": 16, "target_confidence": 87}, {"target_end_line": 52, "source_start_line": 81, "source_end_line": 88, "source_confidence": 56, "target_start_line": 44, "target_confidence": 87}, {"target_end_line": 42, "source_start_line": 41, "source_end_line": 62, "source_confidence": 56, "target_start_line": 21, "target_confidence": 87}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 56, "target_start_line": 1, "target_confidence": 87}, {"target_end_line": 71, "source_start_line": 96, "source_end_line": 107, "source_confidence": 56, "target_start_line": 58, "target_confidence": 87}, {"target_end_line": 18, "source_start_line": 15, "source_end_line": 17, "source_confidence": 56, "target_start_line": 16, "target_confidence": 87}, {"target_end_line": 52, "source_start_line": 81, "source_end_line": 88, "source_confidence": 56, "target_start_line": 44, "target_confidence": 87}, {"target_end_line": 42, "source_start_line": 41, "source_end_line": 62, "source_confidence": 56, "target_start_line": 21, "target_confidence": 87}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 56, "target_start_line": 1, "target_confidence": 87}, {"target_end_line": 71, "source_start_line": 96, "source_end_line": 107, "source_confidence": 56, "target_start_line": 58, "target_confidence": 87}, {"target_end_line": 18, "source_start_line": 15, "source_end_line": 17, "source_confidence": 56, "target_start_line": 16, "target_confidence": 87}, {"target_end_line": 52, "source_start_line": 81, "source_end_line": 88, "source_confidence": 56, "target_start_line": 44, "target_confidence": 87}, {"target_end_line": 42, "source_start_line": 41, "source_end_line": 62, "source_confidence": 56, "target_start_line": 21, "target_confidence": 87}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 56, "target_start_line": 1, "target_confidence": 87}, {"target_end_line": 71, "source_start_line": 96, "source_end_line": 107, "source_confidence": 56, "target_start_line": 58, "target_confidence": 87}, {"target_end_line": 18, "source_start_line": 15, "source_end_line": 17, "source_confidence": 56, "target_start_line": 16, "target_confidence": 87}, {"target_end_line": 52, "source_start_line": 81, "source_end_line": 88, "source_confidence": 56, "target_start_line": 44, "target_confidence": 87}, {"target_end_line": 42, "source_start_line": 41, "source_end_line": 62, "source_confidence": 56, "target_start_line": 21, "target_confidence": 87}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 56, "target_start_line": 1, "target_confidence": 87}, {"target_end_line": 71, "source_start_line": 96, "source_end_line": 107, "source_confidence": 56, "target_start_line": 58, "target_confidence": 87}, {"target_end_line": 18, "source_start_line": 15, "source_end_line": 17, "source_confidence": 56, "target_start_line": 16, "target_confidence": 87}, {"target_end_line": 52, "source_start_line": 81, "source_end_line": 88, "source_confidence": 56, "target_start_line": 44, "target_confidence": 87}]}, {"source": "nguyenbq_295468868e2533b1ac77", "value": 86, "target": "dogobox_3edc0106447dcc869a7ffe2cac9fed02", "links": [{"target_end_line": 86, "source_start_line": 1, "source_end_line": 86, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "ThanisataS_8fd328b681644fe4468c76d09ebdd59d", "value": 136, "target": "ericamartel_b895d79139c315b4a14c7c4f63a9b00e", "links": [{"target_end_line": 346, "source_start_line": 54, "source_end_line": 83, "source_confidence": 43, "target_start_line": 317, "target_confidence": 33}, {"target_end_line": 371, "source_start_line": 85, "source_end_line": 108, "source_confidence": 43, "target_start_line": 347, "target_confidence": 33}, {"target_end_line": 439, "source_start_line": 110, "source_end_line": 138, "source_confidence": 43, "target_start_line": 413, "target_confidence": 33}, {"target_end_line": 311, "source_start_line": 25, "source_end_line": 46, "source_confidence": 43, "target_start_line": 289, "target_confidence": 33}, {"target_end_line": 504, "source_start_line": 234, "source_end_line": 243, "source_confidence": 43, "target_start_line": 496, "target_confidence": 33}, {"target_end_line": 481, "source_start_line": 198, "source_end_line": 201, "source_confidence": 43, "target_start_line": 478, "target_confidence": 33}, {"target_end_line": 493, "source_start_line": 244, "source_end_line": 256, "source_confidence": 43, "target_start_line": 482, "target_confidence": 33}, {"target_end_line": 315, "source_start_line": 48, "source_end_line": 51, "source_confidence": 43, "target_start_line": 312, "target_confidence": 33}, {"target_end_line": 346, "source_start_line": 54, "source_end_line": 83, "source_confidence": 43, "target_start_line": 317, "target_confidence": 33}, {"target_end_line": 371, "source_start_line": 85, "source_end_line": 108, "source_confidence": 43, "target_start_line": 347, "target_confidence": 33}, {"target_end_line": 439, "source_start_line": 110, "source_end_line": 138, "source_confidence": 43, "target_start_line": 413, "target_confidence": 33}, {"target_end_line": 311, "source_start_line": 25, "source_end_line": 46, "source_confidence": 43, "target_start_line": 289, "target_confidence": 33}, {"target_end_line": 504, "source_start_line": 234, "source_end_line": 243, "source_confidence": 43, "target_start_line": 496, "target_confidence": 33}, {"target_end_line": 481, "source_start_line": 198, "source_end_line": 201, "source_confidence": 43, "target_start_line": 478, "target_confidence": 33}, {"target_end_line": 493, "source_start_line": 244, "source_end_line": 256, "source_confidence": 43, "target_start_line": 482, "target_confidence": 33}, {"target_end_line": 315, "source_start_line": 48, "source_end_line": 51, "source_confidence": 43, "target_start_line": 312, "target_confidence": 33}, {"target_end_line": 346, "source_start_line": 54, "source_end_line": 83, "source_confidence": 43, "target_start_line": 317, "target_confidence": 33}, {"target_end_line": 371, "source_start_line": 85, "source_end_line": 108, "source_confidence": 43, "target_start_line": 347, "target_confidence": 33}, {"target_end_line": 439, "source_start_line": 110, "source_end_line": 138, "source_confidence": 43, "target_start_line": 413, "target_confidence": 33}, {"target_end_line": 311, "source_start_line": 25, "source_end_line": 46, "source_confidence": 43, "target_start_line": 289, "target_confidence": 33}, {"target_end_line": 504, "source_start_line": 234, "source_end_line": 243, "source_confidence": 43, "target_start_line": 496, "target_confidence": 33}, {"target_end_line": 481, "source_start_line": 198, "source_end_line": 201, "source_confidence": 43, "target_start_line": 478, "target_confidence": 33}, {"target_end_line": 493, "source_start_line": 244, "source_end_line": 256, "source_confidence": 43, "target_start_line": 482, "target_confidence": 33}, {"target_end_line": 315, "source_start_line": 48, "source_end_line": 51, "source_confidence": 43, "target_start_line": 312, "target_confidence": 33}, {"target_end_line": 346, "source_start_line": 54, "source_end_line": 83, "source_confidence": 43, "target_start_line": 317, "target_confidence": 33}, {"target_end_line": 371, "source_start_line": 85, "source_end_line": 108, "source_confidence": 43, "target_start_line": 347, "target_confidence": 33}, {"target_end_line": 439, "source_start_line": 110, "source_end_line": 138, "source_confidence": 43, "target_start_line": 413, "target_confidence": 33}, {"target_end_line": 311, "source_start_line": 25, "source_end_line": 46, "source_confidence": 43, "target_start_line": 289, "target_confidence": 33}, {"target_end_line": 504, "source_start_line": 234, "source_end_line": 243, "source_confidence": 43, "target_start_line": 496, "target_confidence": 33}, {"target_end_line": 481, "source_start_line": 198, "source_end_line": 201, "source_confidence": 43, "target_start_line": 478, "target_confidence": 33}, {"target_end_line": 493, "source_start_line": 244, "source_end_line": 256, "source_confidence": 43, "target_start_line": 482, "target_confidence": 33}, {"target_end_line": 315, "source_start_line": 48, "source_end_line": 51, "source_confidence": 43, "target_start_line": 312, "target_confidence": 33}, {"target_end_line": 346, "source_start_line": 54, "source_end_line": 83, "source_confidence": 43, "target_start_line": 317, "target_confidence": 33}, {"target_end_line": 371, "source_start_line": 85, "source_end_line": 108, "source_confidence": 43, "target_start_line": 347, "target_confidence": 33}, {"target_end_line": 439, "source_start_line": 110, "source_end_line": 138, "source_confidence": 43, "target_start_line": 413, "target_confidence": 33}, {"target_end_line": 311, "source_start_line": 25, "source_end_line": 46, "source_confidence": 43, "target_start_line": 289, "target_confidence": 33}, {"target_end_line": 504, "source_start_line": 234, "source_end_line": 243, "source_confidence": 43, "target_start_line": 496, "target_confidence": 33}, {"target_end_line": 481, "source_start_line": 198, "source_end_line": 201, "source_confidence": 43, "target_start_line": 478, "target_confidence": 33}, {"target_end_line": 493, "source_start_line": 244, "source_end_line": 256, "source_confidence": 43, "target_start_line": 482, "target_confidence": 33}, {"target_end_line": 315, "source_start_line": 48, "source_end_line": 51, "source_confidence": 43, "target_start_line": 312, "target_confidence": 33}, {"target_end_line": 346, "source_start_line": 54, "source_end_line": 83, "source_confidence": 43, "target_start_line": 317, "target_confidence": 33}, {"target_end_line": 371, "source_start_line": 85, "source_end_line": 108, "source_confidence": 43, "target_start_line": 347, "target_confidence": 33}, {"target_end_line": 439, "source_start_line": 110, "source_end_line": 138, "source_confidence": 43, "target_start_line": 413, "target_confidence": 33}, {"target_end_line": 311, "source_start_line": 25, "source_end_line": 46, "source_confidence": 43, "target_start_line": 289, "target_confidence": 33}, {"target_end_line": 504, "source_start_line": 234, "source_end_line": 243, "source_confidence": 43, "target_start_line": 496, "target_confidence": 33}, {"target_end_line": 481, "source_start_line": 198, "source_end_line": 201, "source_confidence": 43, "target_start_line": 478, "target_confidence": 33}, {"target_end_line": 493, "source_start_line": 244, "source_end_line": 256, "source_confidence": 43, "target_start_line": 482, "target_confidence": 33}, {"target_end_line": 315, "source_start_line": 48, "source_end_line": 51, "source_confidence": 43, "target_start_line": 312, "target_confidence": 33}, {"target_end_line": 346, "source_start_line": 54, "source_end_line": 83, "source_confidence": 43, "target_start_line": 317, "target_confidence": 33}, {"target_end_line": 371, "source_start_line": 85, "source_end_line": 108, "source_confidence": 43, "target_start_line": 347, "target_confidence": 33}, {"target_end_line": 439, "source_start_line": 110, "source_end_line": 138, "source_confidence": 43, "target_start_line": 413, "target_confidence": 33}, {"target_end_line": 311, "source_start_line": 25, "source_end_line": 46, "source_confidence": 43, "target_start_line": 289, "target_confidence": 33}, {"target_end_line": 504, "source_start_line": 234, "source_end_line": 243, "source_confidence": 43, "target_start_line": 496, "target_confidence": 33}, {"target_end_line": 481, "source_start_line": 198, "source_end_line": 201, "source_confidence": 43, "target_start_line": 478, "target_confidence": 33}, {"target_end_line": 493, "source_start_line": 244, "source_end_line": 256, "source_confidence": 43, "target_start_line": 482, "target_confidence": 33}, {"target_end_line": 315, "source_start_line": 48, "source_end_line": 51, "source_confidence": 43, "target_start_line": 312, "target_confidence": 33}, {"target_end_line": 346, "source_start_line": 54, "source_end_line": 83, "source_confidence": 43, "target_start_line": 317, "target_confidence": 33}, {"target_end_line": 371, "source_start_line": 85, "source_end_line": 108, "source_confidence": 43, "target_start_line": 347, "target_confidence": 33}, {"target_end_line": 439, "source_start_line": 110, "source_end_line": 138, "source_confidence": 43, "target_start_line": 413, "target_confidence": 33}, {"target_end_line": 311, "source_start_line": 25, "source_end_line": 46, "source_confidence": 43, "target_start_line": 289, "target_confidence": 33}, {"target_end_line": 504, "source_start_line": 234, "source_end_line": 243, "source_confidence": 43, "target_start_line": 496, "target_confidence": 33}, {"target_end_line": 481, "source_start_line": 198, "source_end_line": 201, "source_confidence": 43, "target_start_line": 478, "target_confidence": 33}, {"target_end_line": 493, "source_start_line": 244, "source_end_line": 256, "source_confidence": 43, "target_start_line": 482, "target_confidence": 33}, {"target_end_line": 315, "source_start_line": 48, "source_end_line": 51, "source_confidence": 43, "target_start_line": 312, "target_confidence": 33}]}, {"source": "diepvf_116450605691903918b951a996fdfabf", "value": 144, "target": "ThanisataS_8fd328b681644fe4468c76d09ebdd59d", "links": [{"target_end_line": 83, "source_start_line": 95, "source_end_line": 124, "source_confidence": 60, "target_start_line": 54, "target_confidence": 43}, {"target_end_line": 110, "source_start_line": 125, "source_end_line": 158, "source_confidence": 60, "target_start_line": 85, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 68, "source_end_line": 89, "source_confidence": 60, "target_start_line": 25, "target_confidence": 43}, {"target_end_line": 133, "source_start_line": 160, "source_end_line": 184, "source_confidence": 60, "target_start_line": 110, "target_confidence": 43}, {"target_end_line": 243, "source_start_line": 228, "source_end_line": 236, "source_confidence": 60, "target_start_line": 234, "target_confidence": 43}, {"target_end_line": 201, "source_start_line": 203, "source_end_line": 206, "source_confidence": 60, "target_start_line": 198, "target_confidence": 43}, {"target_end_line": 256, "source_start_line": 207, "source_end_line": 218, "source_confidence": 60, "target_start_line": 244, "target_confidence": 43}, {"target_end_line": 51, "source_start_line": 90, "source_end_line": 93, "source_confidence": 60, "target_start_line": 48, "target_confidence": 43}, {"target_end_line": 138, "source_start_line": 185, "source_end_line": 188, "source_confidence": 60, "target_start_line": 133, "target_confidence": 43}, {"target_end_line": 83, "source_start_line": 95, "source_end_line": 124, "source_confidence": 60, "target_start_line": 54, "target_confidence": 43}, {"target_end_line": 110, "source_start_line": 125, "source_end_line": 158, "source_confidence": 60, "target_start_line": 85, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 68, "source_end_line": 89, "source_confidence": 60, "target_start_line": 25, "target_confidence": 43}, {"target_end_line": 133, "source_start_line": 160, "source_end_line": 184, "source_confidence": 60, "target_start_line": 110, "target_confidence": 43}, {"target_end_line": 243, "source_start_line": 228, "source_end_line": 236, "source_confidence": 60, "target_start_line": 234, "target_confidence": 43}, {"target_end_line": 201, "source_start_line": 203, "source_end_line": 206, "source_confidence": 60, "target_start_line": 198, "target_confidence": 43}, {"target_end_line": 256, "source_start_line": 207, "source_end_line": 218, "source_confidence": 60, "target_start_line": 244, "target_confidence": 43}, {"target_end_line": 51, "source_start_line": 90, "source_end_line": 93, "source_confidence": 60, "target_start_line": 48, "target_confidence": 43}, {"target_end_line": 138, "source_start_line": 185, "source_end_line": 188, "source_confidence": 60, "target_start_line": 133, "target_confidence": 43}, {"target_end_line": 83, "source_start_line": 95, "source_end_line": 124, "source_confidence": 60, "target_start_line": 54, "target_confidence": 43}, {"target_end_line": 110, "source_start_line": 125, "source_end_line": 158, "source_confidence": 60, "target_start_line": 85, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 68, "source_end_line": 89, "source_confidence": 60, "target_start_line": 25, "target_confidence": 43}, {"target_end_line": 133, "source_start_line": 160, "source_end_line": 184, "source_confidence": 60, "target_start_line": 110, "target_confidence": 43}, {"target_end_line": 243, "source_start_line": 228, "source_end_line": 236, "source_confidence": 60, "target_start_line": 234, "target_confidence": 43}, {"target_end_line": 201, "source_start_line": 203, "source_end_line": 206, "source_confidence": 60, "target_start_line": 198, "target_confidence": 43}, {"target_end_line": 256, "source_start_line": 207, "source_end_line": 218, "source_confidence": 60, "target_start_line": 244, "target_confidence": 43}, {"target_end_line": 51, "source_start_line": 90, "source_end_line": 93, "source_confidence": 60, "target_start_line": 48, "target_confidence": 43}, {"target_end_line": 138, "source_start_line": 185, "source_end_line": 188, "source_confidence": 60, "target_start_line": 133, "target_confidence": 43}, {"target_end_line": 83, "source_start_line": 95, "source_end_line": 124, "source_confidence": 60, "target_start_line": 54, "target_confidence": 43}, {"target_end_line": 110, "source_start_line": 125, "source_end_line": 158, "source_confidence": 60, "target_start_line": 85, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 68, "source_end_line": 89, "source_confidence": 60, "target_start_line": 25, "target_confidence": 43}, {"target_end_line": 133, "source_start_line": 160, "source_end_line": 184, "source_confidence": 60, "target_start_line": 110, "target_confidence": 43}, {"target_end_line": 243, "source_start_line": 228, "source_end_line": 236, "source_confidence": 60, "target_start_line": 234, "target_confidence": 43}, {"target_end_line": 201, "source_start_line": 203, "source_end_line": 206, "source_confidence": 60, "target_start_line": 198, "target_confidence": 43}, {"target_end_line": 256, "source_start_line": 207, "source_end_line": 218, "source_confidence": 60, "target_start_line": 244, "target_confidence": 43}, {"target_end_line": 51, "source_start_line": 90, "source_end_line": 93, "source_confidence": 60, "target_start_line": 48, "target_confidence": 43}, {"target_end_line": 138, "source_start_line": 185, "source_end_line": 188, "source_confidence": 60, "target_start_line": 133, "target_confidence": 43}, {"target_end_line": 83, "source_start_line": 95, "source_end_line": 124, "source_confidence": 60, "target_start_line": 54, "target_confidence": 43}, {"target_end_line": 110, "source_start_line": 125, "source_end_line": 158, "source_confidence": 60, "target_start_line": 85, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 68, "source_end_line": 89, "source_confidence": 60, "target_start_line": 25, "target_confidence": 43}, {"target_end_line": 133, "source_start_line": 160, "source_end_line": 184, "source_confidence": 60, "target_start_line": 110, "target_confidence": 43}, {"target_end_line": 243, "source_start_line": 228, "source_end_line": 236, "source_confidence": 60, "target_start_line": 234, "target_confidence": 43}, {"target_end_line": 201, "source_start_line": 203, "source_end_line": 206, "source_confidence": 60, "target_start_line": 198, "target_confidence": 43}, {"target_end_line": 256, "source_start_line": 207, "source_end_line": 218, "source_confidence": 60, "target_start_line": 244, "target_confidence": 43}, {"target_end_line": 51, "source_start_line": 90, "source_end_line": 93, "source_confidence": 60, "target_start_line": 48, "target_confidence": 43}, {"target_end_line": 138, "source_start_line": 185, "source_end_line": 188, "source_confidence": 60, "target_start_line": 133, "target_confidence": 43}, {"target_end_line": 83, "source_start_line": 95, "source_end_line": 124, "source_confidence": 60, "target_start_line": 54, "target_confidence": 43}, {"target_end_line": 110, "source_start_line": 125, "source_end_line": 158, "source_confidence": 60, "target_start_line": 85, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 68, "source_end_line": 89, "source_confidence": 60, "target_start_line": 25, "target_confidence": 43}, {"target_end_line": 133, "source_start_line": 160, "source_end_line": 184, "source_confidence": 60, "target_start_line": 110, "target_confidence": 43}, {"target_end_line": 243, "source_start_line": 228, "source_end_line": 236, "source_confidence": 60, "target_start_line": 234, "target_confidence": 43}, {"target_end_line": 201, "source_start_line": 203, "source_end_line": 206, "source_confidence": 60, "target_start_line": 198, "target_confidence": 43}, {"target_end_line": 256, "source_start_line": 207, "source_end_line": 218, "source_confidence": 60, "target_start_line": 244, "target_confidence": 43}, {"target_end_line": 51, "source_start_line": 90, "source_end_line": 93, "source_confidence": 60, "target_start_line": 48, "target_confidence": 43}, {"target_end_line": 138, "source_start_line": 185, "source_end_line": 188, "source_confidence": 60, "target_start_line": 133, "target_confidence": 43}, {"target_end_line": 83, "source_start_line": 95, "source_end_line": 124, "source_confidence": 60, "target_start_line": 54, "target_confidence": 43}, {"target_end_line": 110, "source_start_line": 125, "source_end_line": 158, "source_confidence": 60, "target_start_line": 85, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 68, "source_end_line": 89, "source_confidence": 60, "target_start_line": 25, "target_confidence": 43}, {"target_end_line": 133, "source_start_line": 160, "source_end_line": 184, "source_confidence": 60, "target_start_line": 110, "target_confidence": 43}, {"target_end_line": 243, "source_start_line": 228, "source_end_line": 236, "source_confidence": 60, "target_start_line": 234, "target_confidence": 43}, {"target_end_line": 201, "source_start_line": 203, "source_end_line": 206, "source_confidence": 60, "target_start_line": 198, "target_confidence": 43}, {"target_end_line": 256, "source_start_line": 207, "source_end_line": 218, "source_confidence": 60, "target_start_line": 244, "target_confidence": 43}, {"target_end_line": 51, "source_start_line": 90, "source_end_line": 93, "source_confidence": 60, "target_start_line": 48, "target_confidence": 43}, {"target_end_line": 138, "source_start_line": 185, "source_end_line": 188, "source_confidence": 60, "target_start_line": 133, "target_confidence": 43}, {"target_end_line": 83, "source_start_line": 95, "source_end_line": 124, "source_confidence": 60, "target_start_line": 54, "target_confidence": 43}, {"target_end_line": 110, "source_start_line": 125, "source_end_line": 158, "source_confidence": 60, "target_start_line": 85, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 68, "source_end_line": 89, "source_confidence": 60, "target_start_line": 25, "target_confidence": 43}, {"target_end_line": 133, "source_start_line": 160, "source_end_line": 184, "source_confidence": 60, "target_start_line": 110, "target_confidence": 43}, {"target_end_line": 243, "source_start_line": 228, "source_end_line": 236, "source_confidence": 60, "target_start_line": 234, "target_confidence": 43}, {"target_end_line": 201, "source_start_line": 203, "source_end_line": 206, "source_confidence": 60, "target_start_line": 198, "target_confidence": 43}, {"target_end_line": 256, "source_start_line": 207, "source_end_line": 218, "source_confidence": 60, "target_start_line": 244, "target_confidence": 43}, {"target_end_line": 51, "source_start_line": 90, "source_end_line": 93, "source_confidence": 60, "target_start_line": 48, "target_confidence": 43}, {"target_end_line": 138, "source_start_line": 185, "source_end_line": 188, "source_confidence": 60, "target_start_line": 133, "target_confidence": 43}, {"target_end_line": 83, "source_start_line": 95, "source_end_line": 124, "source_confidence": 60, "target_start_line": 54, "target_confidence": 43}, {"target_end_line": 110, "source_start_line": 125, "source_end_line": 158, "source_confidence": 60, "target_start_line": 85, "target_confidence": 43}, {"target_end_line": 46, "source_start_line": 68, "source_end_line": 89, "source_confidence": 60, "target_start_line": 25, "target_confidence": 43}, {"target_end_line": 133, "source_start_line": 160, "source_end_line": 184, "source_confidence": 60, "target_start_line": 110, "target_confidence": 43}, {"target_end_line": 243, "source_start_line": 228, "source_end_line": 236, "source_confidence": 60, "target_start_line": 234, "target_confidence": 43}, {"target_end_line": 201, "source_start_line": 203, "source_end_line": 206, "source_confidence": 60, "target_start_line": 198, "target_confidence": 43}, {"target_end_line": 256, "source_start_line": 207, "source_end_line": 218, "source_confidence": 60, "target_start_line": 244, "target_confidence": 43}, {"target_end_line": 51, "source_start_line": 90, "source_end_line": 93, "source_confidence": 60, "target_start_line": 48, "target_confidence": 43}, {"target_end_line": 138, "source_start_line": 185, "source_end_line": 188, "source_confidence": 60, "target_start_line": 133, "target_confidence": 43}]}, {"source": "mbostock_01ab2e85e8727d6529d20391c0fd9a16", "value": 76, "target": "krishanson_27fbc6e2c20938ee03422fca42661c5f", "links": [{"target_end_line": 76, "source_start_line": 1, "source_end_line": 76, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "dunlapea_55456ce447666876a32497dfa91c35d4", "value": 139, "target": "diepvf_116450605691903918b951a996fdfabf", "links": [{"target_end_line": 124, "source_start_line": 57, "source_end_line": 86, "source_confidence": 53, "target_start_line": 95, "target_confidence": 58}, {"target_end_line": 153, "source_start_line": 88, "source_end_line": 109, "source_confidence": 53, "target_start_line": 125, "target_confidence": 58}, {"target_end_line": 89, "source_start_line": 28, "source_end_line": 49, "source_confidence": 53, "target_start_line": 68, "target_confidence": 58}, {"target_end_line": 184, "source_start_line": 114, "source_end_line": 137, "source_confidence": 53, "target_start_line": 160, "target_confidence": 58}, {"target_end_line": 236, "source_start_line": 205, "source_end_line": 214, "source_confidence": 53, "target_start_line": 228, "target_confidence": 58}, {"target_end_line": 206, "source_start_line": 169, "source_end_line": 172, "source_confidence": 53, "target_start_line": 203, "target_confidence": 58}, {"target_end_line": 218, "source_start_line": 215, "source_end_line": 227, "source_confidence": 53, "target_start_line": 207, "target_confidence": 58}, {"target_end_line": 93, "source_start_line": 51, "source_end_line": 54, "source_confidence": 53, "target_start_line": 90, "target_confidence": 58}, {"target_end_line": 188, "source_start_line": 137, "source_end_line": 140, "source_confidence": 53, "target_start_line": 185, "target_confidence": 58}, {"target_end_line": 124, "source_start_line": 57, "source_end_line": 86, "source_confidence": 53, "target_start_line": 95, "target_confidence": 58}, {"target_end_line": 153, "source_start_line": 88, "source_end_line": 109, "source_confidence": 53, "target_start_line": 125, "target_confidence": 58}, {"target_end_line": 89, "source_start_line": 28, "source_end_line": 49, "source_confidence": 53, "target_start_line": 68, "target_confidence": 58}, {"target_end_line": 184, "source_start_line": 114, "source_end_line": 137, "source_confidence": 53, "target_start_line": 160, "target_confidence": 58}, {"target_end_line": 236, "source_start_line": 205, "source_end_line": 214, "source_confidence": 53, "target_start_line": 228, "target_confidence": 58}, {"target_end_line": 206, "source_start_line": 169, "source_end_line": 172, "source_confidence": 53, "target_start_line": 203, "target_confidence": 58}, {"target_end_line": 218, "source_start_line": 215, "source_end_line": 227, "source_confidence": 53, "target_start_line": 207, "target_confidence": 58}, {"target_end_line": 93, "source_start_line": 51, "source_end_line": 54, "source_confidence": 53, "target_start_line": 90, "target_confidence": 58}, {"target_end_line": 188, "source_start_line": 137, "source_end_line": 140, "source_confidence": 53, "target_start_line": 185, "target_confidence": 58}, {"target_end_line": 124, "source_start_line": 57, "source_end_line": 86, "source_confidence": 53, "target_start_line": 95, "target_confidence": 58}, {"target_end_line": 153, "source_start_line": 88, "source_end_line": 109, "source_confidence": 53, "target_start_line": 125, "target_confidence": 58}, {"target_end_line": 89, "source_start_line": 28, "source_end_line": 49, "source_confidence": 53, "target_start_line": 68, "target_confidence": 58}, {"target_end_line": 184, "source_start_line": 114, "source_end_line": 137, "source_confidence": 53, "target_start_line": 160, "target_confidence": 58}, {"target_end_line": 236, "source_start_line": 205, "source_end_line": 214, "source_confidence": 53, "target_start_line": 228, "target_confidence": 58}, {"target_end_line": 206, "source_start_line": 169, "source_end_line": 172, "source_confidence": 53, "target_start_line": 203, "target_confidence": 58}, {"target_end_line": 218, "source_start_line": 215, "source_end_line": 227, "source_confidence": 53, "target_start_line": 207, "target_confidence": 58}, {"target_end_line": 93, "source_start_line": 51, "source_end_line": 54, "source_confidence": 53, "target_start_line": 90, "target_confidence": 58}, {"target_end_line": 188, "source_start_line": 137, "source_end_line": 140, "source_confidence": 53, "target_start_line": 185, "target_confidence": 58}, {"target_end_line": 124, "source_start_line": 57, "source_end_line": 86, "source_confidence": 53, "target_start_line": 95, "target_confidence": 58}, {"target_end_line": 153, "source_start_line": 88, "source_end_line": 109, "source_confidence": 53, "target_start_line": 125, "target_confidence": 58}, {"target_end_line": 89, "source_start_line": 28, "source_end_line": 49, "source_confidence": 53, "target_start_line": 68, "target_confidence": 58}, {"target_end_line": 184, "source_start_line": 114, "source_end_line": 137, "source_confidence": 53, "target_start_line": 160, "target_confidence": 58}, {"target_end_line": 236, "source_start_line": 205, "source_end_line": 214, "source_confidence": 53, "target_start_line": 228, "target_confidence": 58}, {"target_end_line": 206, "source_start_line": 169, "source_end_line": 172, "source_confidence": 53, "target_start_line": 203, "target_confidence": 58}, {"target_end_line": 218, "source_start_line": 215, "source_end_line": 227, "source_confidence": 53, "target_start_line": 207, "target_confidence": 58}, {"target_end_line": 93, "source_start_line": 51, "source_end_line": 54, "source_confidence": 53, "target_start_line": 90, "target_confidence": 58}, {"target_end_line": 188, "source_start_line": 137, "source_end_line": 140, "source_confidence": 53, "target_start_line": 185, "target_confidence": 58}, {"target_end_line": 124, "source_start_line": 57, "source_end_line": 86, "source_confidence": 53, "target_start_line": 95, "target_confidence": 58}, {"target_end_line": 153, "source_start_line": 88, "source_end_line": 109, "source_confidence": 53, "target_start_line": 125, "target_confidence": 58}, {"target_end_line": 89, "source_start_line": 28, "source_end_line": 49, "source_confidence": 53, "target_start_line": 68, "target_confidence": 58}, {"target_end_line": 184, "source_start_line": 114, "source_end_line": 137, "source_confidence": 53, "target_start_line": 160, "target_confidence": 58}, {"target_end_line": 236, "source_start_line": 205, "source_end_line": 214, "source_confidence": 53, "target_start_line": 228, "target_confidence": 58}, {"target_end_line": 206, "source_start_line": 169, "source_end_line": 172, "source_confidence": 53, "target_start_line": 203, "target_confidence": 58}, {"target_end_line": 218, "source_start_line": 215, "source_end_line": 227, "source_confidence": 53, "target_start_line": 207, "target_confidence": 58}, {"target_end_line": 93, "source_start_line": 51, "source_end_line": 54, "source_confidence": 53, "target_start_line": 90, "target_confidence": 58}, {"target_end_line": 188, "source_start_line": 137, "source_end_line": 140, "source_confidence": 53, "target_start_line": 185, "target_confidence": 58}, {"target_end_line": 124, "source_start_line": 57, "source_end_line": 86, "source_confidence": 53, "target_start_line": 95, "target_confidence": 58}, {"target_end_line": 153, "source_start_line": 88, "source_end_line": 109, "source_confidence": 53, "target_start_line": 125, "target_confidence": 58}, {"target_end_line": 89, "source_start_line": 28, "source_end_line": 49, "source_confidence": 53, "target_start_line": 68, "target_confidence": 58}, {"target_end_line": 184, "source_start_line": 114, "source_end_line": 137, "source_confidence": 53, "target_start_line": 160, "target_confidence": 58}, {"target_end_line": 236, "source_start_line": 205, "source_end_line": 214, "source_confidence": 53, "target_start_line": 228, "target_confidence": 58}, {"target_end_line": 206, "source_start_line": 169, "source_end_line": 172, "source_confidence": 53, "target_start_line": 203, "target_confidence": 58}, {"target_end_line": 218, "source_start_line": 215, "source_end_line": 227, "source_confidence": 53, "target_start_line": 207, "target_confidence": 58}, {"target_end_line": 93, "source_start_line": 51, "source_end_line": 54, "source_confidence": 53, "target_start_line": 90, "target_confidence": 58}, {"target_end_line": 188, "source_start_line": 137, "source_end_line": 140, "source_confidence": 53, "target_start_line": 185, "target_confidence": 58}, {"target_end_line": 124, "source_start_line": 57, "source_end_line": 86, "source_confidence": 53, "target_start_line": 95, "target_confidence": 58}, {"target_end_line": 153, "source_start_line": 88, "source_end_line": 109, "source_confidence": 53, "target_start_line": 125, "target_confidence": 58}, {"target_end_line": 89, "source_start_line": 28, "source_end_line": 49, "source_confidence": 53, "target_start_line": 68, "target_confidence": 58}, {"target_end_line": 184, "source_start_line": 114, "source_end_line": 137, "source_confidence": 53, "target_start_line": 160, "target_confidence": 58}, {"target_end_line": 236, "source_start_line": 205, "source_end_line": 214, "source_confidence": 53, "target_start_line": 228, "target_confidence": 58}, {"target_end_line": 206, "source_start_line": 169, "source_end_line": 172, "source_confidence": 53, "target_start_line": 203, "target_confidence": 58}, {"target_end_line": 218, "source_start_line": 215, "source_end_line": 227, "source_confidence": 53, "target_start_line": 207, "target_confidence": 58}, {"target_end_line": 93, "source_start_line": 51, "source_end_line": 54, "source_confidence": 53, "target_start_line": 90, "target_confidence": 58}, {"target_end_line": 188, "source_start_line": 137, "source_end_line": 140, "source_confidence": 53, "target_start_line": 185, "target_confidence": 58}, {"target_end_line": 124, "source_start_line": 57, "source_end_line": 86, "source_confidence": 53, "target_start_line": 95, "target_confidence": 58}, {"target_end_line": 153, "source_start_line": 88, "source_end_line": 109, "source_confidence": 53, "target_start_line": 125, "target_confidence": 58}, {"target_end_line": 89, "source_start_line": 28, "source_end_line": 49, "source_confidence": 53, "target_start_line": 68, "target_confidence": 58}, {"target_end_line": 184, "source_start_line": 114, "source_end_line": 137, "source_confidence": 53, "target_start_line": 160, "target_confidence": 58}, {"target_end_line": 236, "source_start_line": 205, "source_end_line": 214, "source_confidence": 53, "target_start_line": 228, "target_confidence": 58}, {"target_end_line": 206, "source_start_line": 169, "source_end_line": 172, "source_confidence": 53, "target_start_line": 203, "target_confidence": 58}, {"target_end_line": 218, "source_start_line": 215, "source_end_line": 227, "source_confidence": 53, "target_start_line": 207, "target_confidence": 58}, {"target_end_line": 93, "source_start_line": 51, "source_end_line": 54, "source_confidence": 53, "target_start_line": 90, "target_confidence": 58}, {"target_end_line": 188, "source_start_line": 137, "source_end_line": 140, "source_confidence": 53, "target_start_line": 185, "target_confidence": 58}, {"target_end_line": 124, "source_start_line": 57, "source_end_line": 86, "source_confidence": 53, "target_start_line": 95, "target_confidence": 58}, {"target_end_line": 153, "source_start_line": 88, "source_end_line": 109, "source_confidence": 53, "target_start_line": 125, "target_confidence": 58}, {"target_end_line": 89, "source_start_line": 28, "source_end_line": 49, "source_confidence": 53, "target_start_line": 68, "target_confidence": 58}, {"target_end_line": 184, "source_start_line": 114, "source_end_line": 137, "source_confidence": 53, "target_start_line": 160, "target_confidence": 58}, {"target_end_line": 236, "source_start_line": 205, "source_end_line": 214, "source_confidence": 53, "target_start_line": 228, "target_confidence": 58}, {"target_end_line": 206, "source_start_line": 169, "source_end_line": 172, "source_confidence": 53, "target_start_line": 203, "target_confidence": 58}, {"target_end_line": 218, "source_start_line": 215, "source_end_line": 227, "source_confidence": 53, "target_start_line": 207, "target_confidence": 58}, {"target_end_line": 93, "source_start_line": 51, "source_end_line": 54, "source_confidence": 53, "target_start_line": 90, "target_confidence": 58}, {"target_end_line": 188, "source_start_line": 137, "source_end_line": 140, "source_confidence": 53, "target_start_line": 185, "target_confidence": 58}]}, {"source": "ThanisataS_5e87818a12b3ef84f43e9c8415ad16a6", "value": 219, "target": "dunlapea_55456ce447666876a32497dfa91c35d4", "links": [{"target_end_line": 109, "source_start_line": 20, "source_end_line": 105, "source_confidence": 79, "target_start_line": 24, "target_confidence": 89}, {"target_end_line": 184, "source_start_line": 180, "source_end_line": 212, "source_confidence": 79, "target_start_line": 152, "target_confidence": 89}, {"target_end_line": 140, "source_start_line": 105, "source_end_line": 137, "source_confidence": 79, "target_start_line": 109, "target_confidence": 89}, {"target_end_line": 227, "source_start_line": 220, "source_end_line": 255, "source_confidence": 79, "target_start_line": 192, "target_confidence": 89}, {"target_end_line": 23, "source_start_line": 6, "source_end_line": 20, "source_confidence": 79, "target_start_line": 10, "target_confidence": 89}, {"target_end_line": 191, "source_start_line": 212, "source_end_line": 219, "source_confidence": 79, "target_start_line": 184, "target_confidence": 89}, {"target_end_line": 235, "source_start_line": 256, "source_end_line": 263, "source_confidence": 79, "target_start_line": 228, "target_confidence": 89}, {"target_end_line": 109, "source_start_line": 20, "source_end_line": 105, "source_confidence": 79, "target_start_line": 24, "target_confidence": 89}, {"target_end_line": 184, "source_start_line": 180, "source_end_line": 212, "source_confidence": 79, "target_start_line": 152, "target_confidence": 89}, {"target_end_line": 140, "source_start_line": 105, "source_end_line": 137, "source_confidence": 79, "target_start_line": 109, "target_confidence": 89}, {"target_end_line": 227, "source_start_line": 220, "source_end_line": 255, "source_confidence": 79, "target_start_line": 192, "target_confidence": 89}, {"target_end_line": 23, "source_start_line": 6, "source_end_line": 20, "source_confidence": 79, "target_start_line": 10, "target_confidence": 89}, {"target_end_line": 191, "source_start_line": 212, "source_end_line": 219, "source_confidence": 79, "target_start_line": 184, "target_confidence": 89}, {"target_end_line": 235, "source_start_line": 256, "source_end_line": 263, "source_confidence": 79, "target_start_line": 228, "target_confidence": 89}, {"target_end_line": 109, "source_start_line": 20, "source_end_line": 105, "source_confidence": 79, "target_start_line": 24, "target_confidence": 89}, {"target_end_line": 184, "source_start_line": 180, "source_end_line": 212, "source_confidence": 79, "target_start_line": 152, "target_confidence": 89}, {"target_end_line": 140, "source_start_line": 105, "source_end_line": 137, "source_confidence": 79, "target_start_line": 109, "target_confidence": 89}, {"target_end_line": 227, "source_start_line": 220, "source_end_line": 255, "source_confidence": 79, "target_start_line": 192, "target_confidence": 89}, {"target_end_line": 23, "source_start_line": 6, "source_end_line": 20, "source_confidence": 79, "target_start_line": 10, "target_confidence": 89}, {"target_end_line": 191, "source_start_line": 212, "source_end_line": 219, "source_confidence": 79, "target_start_line": 184, "target_confidence": 89}, {"target_end_line": 235, "source_start_line": 256, "source_end_line": 263, "source_confidence": 79, "target_start_line": 228, "target_confidence": 89}, {"target_end_line": 109, "source_start_line": 20, "source_end_line": 105, "source_confidence": 79, "target_start_line": 24, "target_confidence": 89}, {"target_end_line": 184, "source_start_line": 180, "source_end_line": 212, "source_confidence": 79, "target_start_line": 152, "target_confidence": 89}, {"target_end_line": 140, "source_start_line": 105, "source_end_line": 137, "source_confidence": 79, "target_start_line": 109, "target_confidence": 89}, {"target_end_line": 227, "source_start_line": 220, "source_end_line": 255, "source_confidence": 79, "target_start_line": 192, "target_confidence": 89}, {"target_end_line": 23, "source_start_line": 6, "source_end_line": 20, "source_confidence": 79, "target_start_line": 10, "target_confidence": 89}, {"target_end_line": 191, "source_start_line": 212, "source_end_line": 219, "source_confidence": 79, "target_start_line": 184, "target_confidence": 89}, {"target_end_line": 235, "source_start_line": 256, "source_end_line": 263, "source_confidence": 79, "target_start_line": 228, "target_confidence": 89}, {"target_end_line": 109, "source_start_line": 20, "source_end_line": 105, "source_confidence": 79, "target_start_line": 24, "target_confidence": 89}, {"target_end_line": 184, "source_start_line": 180, "source_end_line": 212, "source_confidence": 79, "target_start_line": 152, "target_confidence": 89}, {"target_end_line": 140, "source_start_line": 105, "source_end_line": 137, "source_confidence": 79, "target_start_line": 109, "target_confidence": 89}, {"target_end_line": 227, "source_start_line": 220, "source_end_line": 255, "source_confidence": 79, "target_start_line": 192, "target_confidence": 89}, {"target_end_line": 23, "source_start_line": 6, "source_end_line": 20, "source_confidence": 79, "target_start_line": 10, "target_confidence": 89}, {"target_end_line": 191, "source_start_line": 212, "source_end_line": 219, "source_confidence": 79, "target_start_line": 184, "target_confidence": 89}, {"target_end_line": 235, "source_start_line": 256, "source_end_line": 263, "source_confidence": 79, "target_start_line": 228, "target_confidence": 89}, {"target_end_line": 109, "source_start_line": 20, "source_end_line": 105, "source_confidence": 79, "target_start_line": 24, "target_confidence": 89}, {"target_end_line": 184, "source_start_line": 180, "source_end_line": 212, "source_confidence": 79, "target_start_line": 152, "target_confidence": 89}, {"target_end_line": 140, "source_start_line": 105, "source_end_line": 137, "source_confidence": 79, "target_start_line": 109, "target_confidence": 89}, {"target_end_line": 227, "source_start_line": 220, "source_end_line": 255, "source_confidence": 79, "target_start_line": 192, "target_confidence": 89}, {"target_end_line": 23, "source_start_line": 6, "source_end_line": 20, "source_confidence": 79, "target_start_line": 10, "target_confidence": 89}, {"target_end_line": 191, "source_start_line": 212, "source_end_line": 219, "source_confidence": 79, "target_start_line": 184, "target_confidence": 89}, {"target_end_line": 235, "source_start_line": 256, "source_end_line": 263, "source_confidence": 79, "target_start_line": 228, "target_confidence": 89}, {"target_end_line": 109, "source_start_line": 20, "source_end_line": 105, "source_confidence": 79, "target_start_line": 24, "target_confidence": 89}, {"target_end_line": 184, "source_start_line": 180, "source_end_line": 212, "source_confidence": 79, "target_start_line": 152, "target_confidence": 89}, {"target_end_line": 140, "source_start_line": 105, "source_end_line": 137, "source_confidence": 79, "target_start_line": 109, "target_confidence": 89}, {"target_end_line": 227, "source_start_line": 220, "source_end_line": 255, "source_confidence": 79, "target_start_line": 192, "target_confidence": 89}, {"target_end_line": 23, "source_start_line": 6, "source_end_line": 20, "source_confidence": 79, "target_start_line": 10, "target_confidence": 89}, {"target_end_line": 191, "source_start_line": 212, "source_end_line": 219, "source_confidence": 79, "target_start_line": 184, "target_confidence": 89}, {"target_end_line": 235, "source_start_line": 256, "source_end_line": 263, "source_confidence": 79, "target_start_line": 228, "target_confidence": 89}]}, {"source": "lambrex_9d49a219f72d8958313eb7fd9f236936", "value": 158, "target": "ThanisataS_5e87818a12b3ef84f43e9c8415ad16a6", "links": [{"target_end_line": 82, "source_start_line": 110, "source_end_line": 139, "source_confidence": 61, "target_start_line": 53, "target_confidence": 54}, {"target_end_line": 109, "source_start_line": 140, "source_end_line": 173, "source_confidence": 61, "target_start_line": 84, "target_confidence": 54}, {"target_end_line": 45, "source_start_line": 83, "source_end_line": 104, "source_confidence": 61, "target_start_line": 24, "target_confidence": 54}, {"target_end_line": 132, "source_start_line": 175, "source_end_line": 199, "source_confidence": 61, "target_start_line": 109, "target_confidence": 54}, {"target_end_line": 242, "source_start_line": 236, "source_end_line": 244, "source_confidence": 61, "target_start_line": 233, "target_confidence": 54}, {"target_end_line": 200, "source_start_line": 218, "source_end_line": 221, "source_confidence": 61, "target_start_line": 197, "target_confidence": 54}, {"target_end_line": 23, "source_start_line": 76, "source_end_line": 82, "source_confidence": 61, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 255, "source_start_line": 222, "source_end_line": 233, "source_confidence": 61, "target_start_line": 243, "target_confidence": 54}, {"target_end_line": 50, "source_start_line": 105, "source_end_line": 108, "source_confidence": 61, "target_start_line": 47, "target_confidence": 54}, {"target_end_line": 137, "source_start_line": 200, "source_end_line": 203, "source_confidence": 61, "target_start_line": 132, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 61, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 82, "source_start_line": 110, "source_end_line": 139, "source_confidence": 61, "target_start_line": 53, "target_confidence": 54}, {"target_end_line": 109, "source_start_line": 140, "source_end_line": 173, "source_confidence": 61, "target_start_line": 84, "target_confidence": 54}, {"target_end_line": 45, "source_start_line": 83, "source_end_line": 104, "source_confidence": 61, "target_start_line": 24, "target_confidence": 54}, {"target_end_line": 132, "source_start_line": 175, "source_end_line": 199, "source_confidence": 61, "target_start_line": 109, "target_confidence": 54}, {"target_end_line": 242, "source_start_line": 236, "source_end_line": 244, "source_confidence": 61, "target_start_line": 233, "target_confidence": 54}, {"target_end_line": 200, "source_start_line": 218, "source_end_line": 221, "source_confidence": 61, "target_start_line": 197, "target_confidence": 54}, {"target_end_line": 23, "source_start_line": 76, "source_end_line": 82, "source_confidence": 61, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 255, "source_start_line": 222, "source_end_line": 233, "source_confidence": 61, "target_start_line": 243, "target_confidence": 54}, {"target_end_line": 50, "source_start_line": 105, "source_end_line": 108, "source_confidence": 61, "target_start_line": 47, "target_confidence": 54}, {"target_end_line": 137, "source_start_line": 200, "source_end_line": 203, "source_confidence": 61, "target_start_line": 132, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 61, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 82, "source_start_line": 110, "source_end_line": 139, "source_confidence": 61, "target_start_line": 53, "target_confidence": 54}, {"target_end_line": 109, "source_start_line": 140, "source_end_line": 173, "source_confidence": 61, "target_start_line": 84, "target_confidence": 54}, {"target_end_line": 45, "source_start_line": 83, "source_end_line": 104, "source_confidence": 61, "target_start_line": 24, "target_confidence": 54}, {"target_end_line": 132, "source_start_line": 175, "source_end_line": 199, "source_confidence": 61, "target_start_line": 109, "target_confidence": 54}, {"target_end_line": 242, "source_start_line": 236, "source_end_line": 244, "source_confidence": 61, "target_start_line": 233, "target_confidence": 54}, {"target_end_line": 200, "source_start_line": 218, "source_end_line": 221, "source_confidence": 61, "target_start_line": 197, "target_confidence": 54}, {"target_end_line": 23, "source_start_line": 76, "source_end_line": 82, "source_confidence": 61, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 255, "source_start_line": 222, "source_end_line": 233, "source_confidence": 61, "target_start_line": 243, "target_confidence": 54}, {"target_end_line": 50, "source_start_line": 105, "source_end_line": 108, "source_confidence": 61, "target_start_line": 47, "target_confidence": 54}, {"target_end_line": 137, "source_start_line": 200, "source_end_line": 203, "source_confidence": 61, "target_start_line": 132, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 61, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 82, "source_start_line": 110, "source_end_line": 139, "source_confidence": 61, "target_start_line": 53, "target_confidence": 54}, {"target_end_line": 109, "source_start_line": 140, "source_end_line": 173, "source_confidence": 61, "target_start_line": 84, "target_confidence": 54}, {"target_end_line": 45, "source_start_line": 83, "source_end_line": 104, "source_confidence": 61, "target_start_line": 24, "target_confidence": 54}, {"target_end_line": 132, "source_start_line": 175, "source_end_line": 199, "source_confidence": 61, "target_start_line": 109, "target_confidence": 54}, {"target_end_line": 242, "source_start_line": 236, "source_end_line": 244, "source_confidence": 61, "target_start_line": 233, "target_confidence": 54}, {"target_end_line": 200, "source_start_line": 218, "source_end_line": 221, "source_confidence": 61, "target_start_line": 197, "target_confidence": 54}, {"target_end_line": 23, "source_start_line": 76, "source_end_line": 82, "source_confidence": 61, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 255, "source_start_line": 222, "source_end_line": 233, "source_confidence": 61, "target_start_line": 243, "target_confidence": 54}, {"target_end_line": 50, "source_start_line": 105, "source_end_line": 108, "source_confidence": 61, "target_start_line": 47, "target_confidence": 54}, {"target_end_line": 137, "source_start_line": 200, "source_end_line": 203, "source_confidence": 61, "target_start_line": 132, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 61, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 82, "source_start_line": 110, "source_end_line": 139, "source_confidence": 61, "target_start_line": 53, "target_confidence": 54}, {"target_end_line": 109, "source_start_line": 140, "source_end_line": 173, "source_confidence": 61, "target_start_line": 84, "target_confidence": 54}, {"target_end_line": 45, "source_start_line": 83, "source_end_line": 104, "source_confidence": 61, "target_start_line": 24, "target_confidence": 54}, {"target_end_line": 132, "source_start_line": 175, "source_end_line": 199, "source_confidence": 61, "target_start_line": 109, "target_confidence": 54}, {"target_end_line": 242, "source_start_line": 236, "source_end_line": 244, "source_confidence": 61, "target_start_line": 233, "target_confidence": 54}, {"target_end_line": 200, "source_start_line": 218, "source_end_line": 221, "source_confidence": 61, "target_start_line": 197, "target_confidence": 54}, {"target_end_line": 23, "source_start_line": 76, "source_end_line": 82, "source_confidence": 61, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 255, "source_start_line": 222, "source_end_line": 233, "source_confidence": 61, "target_start_line": 243, "target_confidence": 54}, {"target_end_line": 50, "source_start_line": 105, "source_end_line": 108, "source_confidence": 61, "target_start_line": 47, "target_confidence": 54}, {"target_end_line": 137, "source_start_line": 200, "source_end_line": 203, "source_confidence": 61, "target_start_line": 132, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 61, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 82, "source_start_line": 110, "source_end_line": 139, "source_confidence": 61, "target_start_line": 53, "target_confidence": 54}, {"target_end_line": 109, "source_start_line": 140, "source_end_line": 173, "source_confidence": 61, "target_start_line": 84, "target_confidence": 54}, {"target_end_line": 45, "source_start_line": 83, "source_end_line": 104, "source_confidence": 61, "target_start_line": 24, "target_confidence": 54}, {"target_end_line": 132, "source_start_line": 175, "source_end_line": 199, "source_confidence": 61, "target_start_line": 109, "target_confidence": 54}, {"target_end_line": 242, "source_start_line": 236, "source_end_line": 244, "source_confidence": 61, "target_start_line": 233, "target_confidence": 54}, {"target_end_line": 200, "source_start_line": 218, "source_end_line": 221, "source_confidence": 61, "target_start_line": 197, "target_confidence": 54}, {"target_end_line": 23, "source_start_line": 76, "source_end_line": 82, "source_confidence": 61, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 255, "source_start_line": 222, "source_end_line": 233, "source_confidence": 61, "target_start_line": 243, "target_confidence": 54}, {"target_end_line": 50, "source_start_line": 105, "source_end_line": 108, "source_confidence": 61, "target_start_line": 47, "target_confidence": 54}, {"target_end_line": 137, "source_start_line": 200, "source_end_line": 203, "source_confidence": 61, "target_start_line": 132, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 61, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 82, "source_start_line": 110, "source_end_line": 139, "source_confidence": 61, "target_start_line": 53, "target_confidence": 54}, {"target_end_line": 109, "source_start_line": 140, "source_end_line": 173, "source_confidence": 61, "target_start_line": 84, "target_confidence": 54}, {"target_end_line": 45, "source_start_line": 83, "source_end_line": 104, "source_confidence": 61, "target_start_line": 24, "target_confidence": 54}, {"target_end_line": 132, "source_start_line": 175, "source_end_line": 199, "source_confidence": 61, "target_start_line": 109, "target_confidence": 54}, {"target_end_line": 242, "source_start_line": 236, "source_end_line": 244, "source_confidence": 61, "target_start_line": 233, "target_confidence": 54}, {"target_end_line": 200, "source_start_line": 218, "source_end_line": 221, "source_confidence": 61, "target_start_line": 197, "target_confidence": 54}, {"target_end_line": 23, "source_start_line": 76, "source_end_line": 82, "source_confidence": 61, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 255, "source_start_line": 222, "source_end_line": 233, "source_confidence": 61, "target_start_line": 243, "target_confidence": 54}, {"target_end_line": 50, "source_start_line": 105, "source_end_line": 108, "source_confidence": 61, "target_start_line": 47, "target_confidence": 54}, {"target_end_line": 137, "source_start_line": 200, "source_end_line": 203, "source_confidence": 61, "target_start_line": 132, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 61, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 82, "source_start_line": 110, "source_end_line": 139, "source_confidence": 61, "target_start_line": 53, "target_confidence": 54}, {"target_end_line": 109, "source_start_line": 140, "source_end_line": 173, "source_confidence": 61, "target_start_line": 84, "target_confidence": 54}, {"target_end_line": 45, "source_start_line": 83, "source_end_line": 104, "source_confidence": 61, "target_start_line": 24, "target_confidence": 54}, {"target_end_line": 132, "source_start_line": 175, "source_end_line": 199, "source_confidence": 61, "target_start_line": 109, "target_confidence": 54}, {"target_end_line": 242, "source_start_line": 236, "source_end_line": 244, "source_confidence": 61, "target_start_line": 233, "target_confidence": 54}, {"target_end_line": 200, "source_start_line": 218, "source_end_line": 221, "source_confidence": 61, "target_start_line": 197, "target_confidence": 54}, {"target_end_line": 23, "source_start_line": 76, "source_end_line": 82, "source_confidence": 61, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 255, "source_start_line": 222, "source_end_line": 233, "source_confidence": 61, "target_start_line": 243, "target_confidence": 54}, {"target_end_line": 50, "source_start_line": 105, "source_end_line": 108, "source_confidence": 61, "target_start_line": 47, "target_confidence": 54}, {"target_end_line": 137, "source_start_line": 200, "source_end_line": 203, "source_confidence": 61, "target_start_line": 132, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 61, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 82, "source_start_line": 110, "source_end_line": 139, "source_confidence": 61, "target_start_line": 53, "target_confidence": 54}, {"target_end_line": 109, "source_start_line": 140, "source_end_line": 173, "source_confidence": 61, "target_start_line": 84, "target_confidence": 54}, {"target_end_line": 45, "source_start_line": 83, "source_end_line": 104, "source_confidence": 61, "target_start_line": 24, "target_confidence": 54}, {"target_end_line": 132, "source_start_line": 175, "source_end_line": 199, "source_confidence": 61, "target_start_line": 109, "target_confidence": 54}, {"target_end_line": 242, "source_start_line": 236, "source_end_line": 244, "source_confidence": 61, "target_start_line": 233, "target_confidence": 54}, {"target_end_line": 200, "source_start_line": 218, "source_end_line": 221, "source_confidence": 61, "target_start_line": 197, "target_confidence": 54}, {"target_end_line": 23, "source_start_line": 76, "source_end_line": 82, "source_confidence": 61, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 255, "source_start_line": 222, "source_end_line": 233, "source_confidence": 61, "target_start_line": 243, "target_confidence": 54}, {"target_end_line": 50, "source_start_line": 105, "source_end_line": 108, "source_confidence": 61, "target_start_line": 47, "target_confidence": 54}, {"target_end_line": 137, "source_start_line": 200, "source_end_line": 203, "source_confidence": 61, "target_start_line": 132, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 61, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 82, "source_start_line": 110, "source_end_line": 139, "source_confidence": 61, "target_start_line": 53, "target_confidence": 54}, {"target_end_line": 109, "source_start_line": 140, "source_end_line": 173, "source_confidence": 61, "target_start_line": 84, "target_confidence": 54}, {"target_end_line": 45, "source_start_line": 83, "source_end_line": 104, "source_confidence": 61, "target_start_line": 24, "target_confidence": 54}, {"target_end_line": 132, "source_start_line": 175, "source_end_line": 199, "source_confidence": 61, "target_start_line": 109, "target_confidence": 54}, {"target_end_line": 242, "source_start_line": 236, "source_end_line": 244, "source_confidence": 61, "target_start_line": 233, "target_confidence": 54}, {"target_end_line": 200, "source_start_line": 218, "source_end_line": 221, "source_confidence": 61, "target_start_line": 197, "target_confidence": 54}, {"target_end_line": 23, "source_start_line": 76, "source_end_line": 82, "source_confidence": 61, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 255, "source_start_line": 222, "source_end_line": 233, "source_confidence": 61, "target_start_line": 243, "target_confidence": 54}, {"target_end_line": 50, "source_start_line": 105, "source_end_line": 108, "source_confidence": 61, "target_start_line": 47, "target_confidence": 54}, {"target_end_line": 137, "source_start_line": 200, "source_end_line": 203, "source_confidence": 61, "target_start_line": 132, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 61, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 82, "source_start_line": 110, "source_end_line": 139, "source_confidence": 61, "target_start_line": 53, "target_confidence": 54}, {"target_end_line": 109, "source_start_line": 140, "source_end_line": 173, "source_confidence": 61, "target_start_line": 84, "target_confidence": 54}, {"target_end_line": 45, "source_start_line": 83, "source_end_line": 104, "source_confidence": 61, "target_start_line": 24, "target_confidence": 54}, {"target_end_line": 132, "source_start_line": 175, "source_end_line": 199, "source_confidence": 61, "target_start_line": 109, "target_confidence": 54}, {"target_end_line": 242, "source_start_line": 236, "source_end_line": 244, "source_confidence": 61, "target_start_line": 233, "target_confidence": 54}, {"target_end_line": 200, "source_start_line": 218, "source_end_line": 221, "source_confidence": 61, "target_start_line": 197, "target_confidence": 54}, {"target_end_line": 23, "source_start_line": 76, "source_end_line": 82, "source_confidence": 61, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 255, "source_start_line": 222, "source_end_line": 233, "source_confidence": 61, "target_start_line": 243, "target_confidence": 54}, {"target_end_line": 50, "source_start_line": 105, "source_end_line": 108, "source_confidence": 61, "target_start_line": 47, "target_confidence": 54}, {"target_end_line": 137, "source_start_line": 200, "source_end_line": 203, "source_confidence": 61, "target_start_line": 132, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 61, "target_start_line": 1, "target_confidence": 54}]}, {"source": "grybnicky_0762f972ce5785f6efd4b975f2a95ff5", "value": 169, "target": "JohnWall64_5d3dcd2e01bff585e6928fa18626a958", "links": [{"target_end_line": 144, "source_start_line": 1, "source_end_line": 146, "source_confidence": 90, "target_start_line": 1, "target_confidence": 91}, {"target_end_line": 160, "source_start_line": 153, "source_end_line": 160, "source_confidence": 90, "target_start_line": 153, "target_confidence": 91}, {"target_end_line": 183, "source_start_line": 169, "source_end_line": 183, "source_confidence": 90, "target_start_line": 169, "target_confidence": 91}, {"target_end_line": 144, "source_start_line": 1, "source_end_line": 146, "source_confidence": 90, "target_start_line": 1, "target_confidence": 91}, {"target_end_line": 160, "source_start_line": 153, "source_end_line": 160, "source_confidence": 90, "target_start_line": 153, "target_confidence": 91}, {"target_end_line": 183, "source_start_line": 169, "source_end_line": 183, "source_confidence": 90, "target_start_line": 169, "target_confidence": 91}, {"target_end_line": 144, "source_start_line": 1, "source_end_line": 146, "source_confidence": 90, "target_start_line": 1, "target_confidence": 91}, {"target_end_line": 160, "source_start_line": 153, "source_end_line": 160, "source_confidence": 90, "target_start_line": 153, "target_confidence": 91}, {"target_end_line": 183, "source_start_line": 169, "source_end_line": 183, "source_confidence": 90, "target_start_line": 169, "target_confidence": 91}]}, {"source": "scresawn_b7c34de6536e00a4f11de558b916156a", "value": 116, "target": "grybnicky_0762f972ce5785f6efd4b975f2a95ff5", "links": [{"target_end_line": 134, "source_start_line": 58, "source_end_line": 120, "source_confidence": 82, "target_start_line": 69, "target_confidence": 64}, {"target_end_line": 38, "source_start_line": 10, "source_end_line": 22, "source_confidence": 82, "target_start_line": 23, "target_confidence": 64}, {"target_end_line": 54, "source_start_line": 37, "source_end_line": 46, "source_confidence": 82, "target_start_line": 44, "target_confidence": 64}, {"target_end_line": 68, "source_start_line": 49, "source_end_line": 55, "source_confidence": 82, "target_start_line": 61, "target_confidence": 64}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 64}, {"target_end_line": 23, "source_start_line": 26, "source_end_line": 37, "source_confidence": 82, "target_start_line": 17, "target_confidence": 64}, {"target_end_line": 134, "source_start_line": 58, "source_end_line": 120, "source_confidence": 82, "target_start_line": 69, "target_confidence": 64}, {"target_end_line": 38, "source_start_line": 10, "source_end_line": 22, "source_confidence": 82, "target_start_line": 23, "target_confidence": 64}, {"target_end_line": 54, "source_start_line": 37, "source_end_line": 46, "source_confidence": 82, "target_start_line": 44, "target_confidence": 64}, {"target_end_line": 68, "source_start_line": 49, "source_end_line": 55, "source_confidence": 82, "target_start_line": 61, "target_confidence": 64}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 64}, {"target_end_line": 23, "source_start_line": 26, "source_end_line": 37, "source_confidence": 82, "target_start_line": 17, "target_confidence": 64}, {"target_end_line": 134, "source_start_line": 58, "source_end_line": 120, "source_confidence": 82, "target_start_line": 69, "target_confidence": 64}, {"target_end_line": 38, "source_start_line": 10, "source_end_line": 22, "source_confidence": 82, "target_start_line": 23, "target_confidence": 64}, {"target_end_line": 54, "source_start_line": 37, "source_end_line": 46, "source_confidence": 82, "target_start_line": 44, "target_confidence": 64}, {"target_end_line": 68, "source_start_line": 49, "source_end_line": 55, "source_confidence": 82, "target_start_line": 61, "target_confidence": 64}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 64}, {"target_end_line": 23, "source_start_line": 26, "source_end_line": 37, "source_confidence": 82, "target_start_line": 17, "target_confidence": 64}, {"target_end_line": 134, "source_start_line": 58, "source_end_line": 120, "source_confidence": 82, "target_start_line": 69, "target_confidence": 64}, {"target_end_line": 38, "source_start_line": 10, "source_end_line": 22, "source_confidence": 82, "target_start_line": 23, "target_confidence": 64}, {"target_end_line": 54, "source_start_line": 37, "source_end_line": 46, "source_confidence": 82, "target_start_line": 44, "target_confidence": 64}, {"target_end_line": 68, "source_start_line": 49, "source_end_line": 55, "source_confidence": 82, "target_start_line": 61, "target_confidence": 64}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 64}, {"target_end_line": 23, "source_start_line": 26, "source_end_line": 37, "source_confidence": 82, "target_start_line": 17, "target_confidence": 64}, {"target_end_line": 134, "source_start_line": 58, "source_end_line": 120, "source_confidence": 82, "target_start_line": 69, "target_confidence": 64}, {"target_end_line": 38, "source_start_line": 10, "source_end_line": 22, "source_confidence": 82, "target_start_line": 23, "target_confidence": 64}, {"target_end_line": 54, "source_start_line": 37, "source_end_line": 46, "source_confidence": 82, "target_start_line": 44, "target_confidence": 64}, {"target_end_line": 68, "source_start_line": 49, "source_end_line": 55, "source_confidence": 82, "target_start_line": 61, "target_confidence": 64}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 64}, {"target_end_line": 23, "source_start_line": 26, "source_end_line": 37, "source_confidence": 82, "target_start_line": 17, "target_confidence": 64}, {"target_end_line": 134, "source_start_line": 58, "source_end_line": 120, "source_confidence": 82, "target_start_line": 69, "target_confidence": 64}, {"target_end_line": 38, "source_start_line": 10, "source_end_line": 22, "source_confidence": 82, "target_start_line": 23, "target_confidence": 64}, {"target_end_line": 54, "source_start_line": 37, "source_end_line": 46, "source_confidence": 82, "target_start_line": 44, "target_confidence": 64}, {"target_end_line": 68, "source_start_line": 49, "source_end_line": 55, "source_confidence": 82, "target_start_line": 61, "target_confidence": 64}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 82, "target_start_line": 1, "target_confidence": 64}, {"target_end_line": 23, "source_start_line": 26, "source_end_line": 37, "source_confidence": 82, "target_start_line": 17, "target_confidence": 64}]}, {"source": "grybnicky_7d41f75647bdc4fef8736442db42bad0", "value": 123, "target": "scresawn_b7c34de6536e00a4f11de558b916156a", "links": [{"target_end_line": 120, "source_start_line": 55, "source_end_line": 126, "source_confidence": 88, "target_start_line": 49, "target_confidence": 88}, {"target_end_line": 37, "source_start_line": 17, "source_end_line": 39, "source_confidence": 88, "target_start_line": 10, "target_confidence": 88}, {"target_end_line": 46, "source_start_line": 42, "source_end_line": 51, "source_confidence": 88, "target_start_line": 37, "target_confidence": 88}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 88, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 124, "source_start_line": 126, "source_end_line": 130, "source_confidence": 88, "target_start_line": 120, "target_confidence": 88}, {"target_end_line": 120, "source_start_line": 55, "source_end_line": 126, "source_confidence": 88, "target_start_line": 49, "target_confidence": 88}, {"target_end_line": 37, "source_start_line": 17, "source_end_line": 39, "source_confidence": 88, "target_start_line": 10, "target_confidence": 88}, {"target_end_line": 46, "source_start_line": 42, "source_end_line": 51, "source_confidence": 88, "target_start_line": 37, "target_confidence": 88}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 88, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 124, "source_start_line": 126, "source_end_line": 130, "source_confidence": 88, "target_start_line": 120, "target_confidence": 88}, {"target_end_line": 120, "source_start_line": 55, "source_end_line": 126, "source_confidence": 88, "target_start_line": 49, "target_confidence": 88}, {"target_end_line": 37, "source_start_line": 17, "source_end_line": 39, "source_confidence": 88, "target_start_line": 10, "target_confidence": 88}, {"target_end_line": 46, "source_start_line": 42, "source_end_line": 51, "source_confidence": 88, "target_start_line": 37, "target_confidence": 88}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 88, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 124, "source_start_line": 126, "source_end_line": 130, "source_confidence": 88, "target_start_line": 120, "target_confidence": 88}, {"target_end_line": 120, "source_start_line": 55, "source_end_line": 126, "source_confidence": 88, "target_start_line": 49, "target_confidence": 88}, {"target_end_line": 37, "source_start_line": 17, "source_end_line": 39, "source_confidence": 88, "target_start_line": 10, "target_confidence": 88}, {"target_end_line": 46, "source_start_line": 42, "source_end_line": 51, "source_confidence": 88, "target_start_line": 37, "target_confidence": 88}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 88, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 124, "source_start_line": 126, "source_end_line": 130, "source_confidence": 88, "target_start_line": 120, "target_confidence": 88}, {"target_end_line": 120, "source_start_line": 55, "source_end_line": 126, "source_confidence": 88, "target_start_line": 49, "target_confidence": 88}, {"target_end_line": 37, "source_start_line": 17, "source_end_line": 39, "source_confidence": 88, "target_start_line": 10, "target_confidence": 88}, {"target_end_line": 46, "source_start_line": 42, "source_end_line": 51, "source_confidence": 88, "target_start_line": 37, "target_confidence": 88}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 88, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 124, "source_start_line": 126, "source_end_line": 130, "source_confidence": 88, "target_start_line": 120, "target_confidence": 88}]}, {"source": "scresawn_4d7dfded54d1e2162265862ffb178f4a", "value": 220, "target": "lambrex_9d49a219f72d8958313eb7fd9f236936", "links": [{"target_end_line": 203, "source_start_line": 38, "source_end_line": 173, "source_confidence": 89, "target_start_line": 68, "target_confidence": 80}, {"target_end_line": 270, "source_start_line": 204, "source_end_line": 242, "source_confidence": 89, "target_start_line": 233, "target_confidence": 80}, {"target_end_line": 233, "source_start_line": 184, "source_end_line": 199, "source_confidence": 89, "target_start_line": 218, "target_confidence": 80}, {"target_end_line": 17, "source_start_line": 1, "source_end_line": 15, "source_confidence": 89, "target_start_line": 1, "target_confidence": 80}, {"target_end_line": 217, "source_start_line": 173, "source_end_line": 184, "source_confidence": 89, "target_start_line": 205, "target_confidence": 80}, {"target_end_line": 203, "source_start_line": 38, "source_end_line": 173, "source_confidence": 89, "target_start_line": 68, "target_confidence": 80}, {"target_end_line": 270, "source_start_line": 204, "source_end_line": 242, "source_confidence": 89, "target_start_line": 233, "target_confidence": 80}, {"target_end_line": 233, "source_start_line": 184, "source_end_line": 199, "source_confidence": 89, "target_start_line": 218, "target_confidence": 80}, {"target_end_line": 17, "source_start_line": 1, "source_end_line": 15, "source_confidence": 89, "target_start_line": 1, "target_confidence": 80}, {"target_end_line": 217, "source_start_line": 173, "source_end_line": 184, "source_confidence": 89, "target_start_line": 205, "target_confidence": 80}, {"target_end_line": 203, "source_start_line": 38, "source_end_line": 173, "source_confidence": 89, "target_start_line": 68, "target_confidence": 80}, {"target_end_line": 270, "source_start_line": 204, "source_end_line": 242, "source_confidence": 89, "target_start_line": 233, "target_confidence": 80}, {"target_end_line": 233, "source_start_line": 184, "source_end_line": 199, "source_confidence": 89, "target_start_line": 218, "target_confidence": 80}, {"target_end_line": 17, "source_start_line": 1, "source_end_line": 15, "source_confidence": 89, "target_start_line": 1, "target_confidence": 80}, {"target_end_line": 217, "source_start_line": 173, "source_end_line": 184, "source_confidence": 89, "target_start_line": 205, "target_confidence": 80}, {"target_end_line": 203, "source_start_line": 38, "source_end_line": 173, "source_confidence": 89, "target_start_line": 68, "target_confidence": 80}, {"target_end_line": 270, "source_start_line": 204, "source_end_line": 242, "source_confidence": 89, "target_start_line": 233, "target_confidence": 80}, {"target_end_line": 233, "source_start_line": 184, "source_end_line": 199, "source_confidence": 89, "target_start_line": 218, "target_confidence": 80}, {"target_end_line": 17, "source_start_line": 1, "source_end_line": 15, "source_confidence": 89, "target_start_line": 1, "target_confidence": 80}, {"target_end_line": 217, "source_start_line": 173, "source_end_line": 184, "source_confidence": 89, "target_start_line": 205, "target_confidence": 80}, {"target_end_line": 203, "source_start_line": 38, "source_end_line": 173, "source_confidence": 89, "target_start_line": 68, "target_confidence": 80}, {"target_end_line": 270, "source_start_line": 204, "source_end_line": 242, "source_confidence": 89, "target_start_line": 233, "target_confidence": 80}, {"target_end_line": 233, "source_start_line": 184, "source_end_line": 199, "source_confidence": 89, "target_start_line": 218, "target_confidence": 80}, {"target_end_line": 17, "source_start_line": 1, "source_end_line": 15, "source_confidence": 89, "target_start_line": 1, "target_confidence": 80}, {"target_end_line": 217, "source_start_line": 173, "source_end_line": 184, "source_confidence": 89, "target_start_line": 205, "target_confidence": 80}]}, {"source": "jpnoll_12a91cc928de17b09856dc8c06dead2c", "value": 206, "target": "scresawn_4d7dfded54d1e2162265862ffb178f4a", "links": [{"target_end_line": 169, "source_start_line": 129, "source_end_line": 250, "source_confidence": 61, "target_start_line": 33, "target_confidence": 88}, {"target_end_line": 212, "source_start_line": 254, "source_end_line": 284, "source_confidence": 61, "target_start_line": 179, "target_confidence": 88}, {"target_end_line": 235, "source_start_line": 285, "source_end_line": 306, "source_confidence": 61, "target_start_line": 213, "target_confidence": 88}, {"target_end_line": 8, "source_start_line": 124, "source_end_line": 128, "source_confidence": 61, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 173, "source_start_line": 250, "source_end_line": 253, "source_confidence": 61, "target_start_line": 170, "target_confidence": 88}, {"target_end_line": 169, "source_start_line": 129, "source_end_line": 250, "source_confidence": 61, "target_start_line": 33, "target_confidence": 88}, {"target_end_line": 212, "source_start_line": 254, "source_end_line": 284, "source_confidence": 61, "target_start_line": 179, "target_confidence": 88}, {"target_end_line": 235, "source_start_line": 285, "source_end_line": 306, "source_confidence": 61, "target_start_line": 213, "target_confidence": 88}, {"target_end_line": 8, "source_start_line": 124, "source_end_line": 128, "source_confidence": 61, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 173, "source_start_line": 250, "source_end_line": 253, "source_confidence": 61, "target_start_line": 170, "target_confidence": 88}, {"target_end_line": 169, "source_start_line": 129, "source_end_line": 250, "source_confidence": 61, "target_start_line": 33, "target_confidence": 88}, {"target_end_line": 212, "source_start_line": 254, "source_end_line": 284, "source_confidence": 61, "target_start_line": 179, "target_confidence": 88}, {"target_end_line": 235, "source_start_line": 285, "source_end_line": 306, "source_confidence": 61, "target_start_line": 213, "target_confidence": 88}, {"target_end_line": 8, "source_start_line": 124, "source_end_line": 128, "source_confidence": 61, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 173, "source_start_line": 250, "source_end_line": 253, "source_confidence": 61, "target_start_line": 170, "target_confidence": 88}, {"target_end_line": 169, "source_start_line": 129, "source_end_line": 250, "source_confidence": 61, "target_start_line": 33, "target_confidence": 88}, {"target_end_line": 212, "source_start_line": 254, "source_end_line": 284, "source_confidence": 61, "target_start_line": 179, "target_confidence": 88}, {"target_end_line": 235, "source_start_line": 285, "source_end_line": 306, "source_confidence": 61, "target_start_line": 213, "target_confidence": 88}, {"target_end_line": 8, "source_start_line": 124, "source_end_line": 128, "source_confidence": 61, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 173, "source_start_line": 250, "source_end_line": 253, "source_confidence": 61, "target_start_line": 170, "target_confidence": 88}, {"target_end_line": 169, "source_start_line": 129, "source_end_line": 250, "source_confidence": 61, "target_start_line": 33, "target_confidence": 88}, {"target_end_line": 212, "source_start_line": 254, "source_end_line": 284, "source_confidence": 61, "target_start_line": 179, "target_confidence": 88}, {"target_end_line": 235, "source_start_line": 285, "source_end_line": 306, "source_confidence": 61, "target_start_line": 213, "target_confidence": 88}, {"target_end_line": 8, "source_start_line": 124, "source_end_line": 128, "source_confidence": 61, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 173, "source_start_line": 250, "source_end_line": 253, "source_confidence": 61, "target_start_line": 170, "target_confidence": 88}]}, {"source": "diepvf_499a938e9f44ba8d9abc94151e8aa3f5", "value": 193, "target": "jpnoll_12a91cc928de17b09856dc8c06dead2c", "links": [{"target_end_line": 284, "source_start_line": 1, "source_end_line": 170, "source_confidence": 98, "target_start_line": 124, "target_confidence": 62}, {"target_end_line": 306, "source_start_line": 171, "source_end_line": 193, "source_confidence": 98, "target_start_line": 285, "target_confidence": 62}, {"target_end_line": 284, "source_start_line": 1, "source_end_line": 170, "source_confidence": 98, "target_start_line": 124, "target_confidence": 62}, {"target_end_line": 306, "source_start_line": 171, "source_end_line": 193, "source_confidence": 98, "target_start_line": 285, "target_confidence": 62}]}, {"source": "micahstubbs_4ee4c58c9dfc2a41ed26", "value": 26, "target": "mbostock_5583afd2a0d03b9c94918659fa151cac", "links": [{"target_end_line": 39, "source_start_line": 33, "source_end_line": 42, "source_confidence": 50, "target_start_line": 30, "target_confidence": 52}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 50, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 43, "source_start_line": 52, "source_end_line": 55, "source_confidence": 50, "target_start_line": 41, "target_confidence": 52}, {"target_end_line": 12, "source_start_line": 8, "source_end_line": 12, "source_confidence": 50, "target_start_line": 8, "target_confidence": 52}, {"target_end_line": 39, "source_start_line": 33, "source_end_line": 42, "source_confidence": 50, "target_start_line": 30, "target_confidence": 52}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 50, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 43, "source_start_line": 52, "source_end_line": 55, "source_confidence": 50, "target_start_line": 41, "target_confidence": 52}, {"target_end_line": 12, "source_start_line": 8, "source_end_line": 12, "source_confidence": 50, "target_start_line": 8, "target_confidence": 52}, {"target_end_line": 39, "source_start_line": 33, "source_end_line": 42, "source_confidence": 50, "target_start_line": 30, "target_confidence": 52}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 50, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 43, "source_start_line": 52, "source_end_line": 55, "source_confidence": 50, "target_start_line": 41, "target_confidence": 52}, {"target_end_line": 12, "source_start_line": 8, "source_end_line": 12, "source_confidence": 50, "target_start_line": 8, "target_confidence": 52}, {"target_end_line": 39, "source_start_line": 33, "source_end_line": 42, "source_confidence": 50, "target_start_line": 30, "target_confidence": 52}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 50, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 43, "source_start_line": 52, "source_end_line": 55, "source_confidence": 50, "target_start_line": 41, "target_confidence": 52}, {"target_end_line": 12, "source_start_line": 8, "source_end_line": 12, "source_confidence": 50, "target_start_line": 8, "target_confidence": 52}]}, {"source": "dunlapea_0bc494cbfc5dab3fbea588a6a7cc0cdb", "value": 149, "target": "diepvf_499a938e9f44ba8d9abc94151e8aa3f5", "links": [{"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 54, "target_start_line": 53, "target_confidence": 75}, {"target_end_line": 108, "source_start_line": 84, "source_end_line": 109, "source_confidence": 54, "target_start_line": 83, "target_confidence": 75}, {"target_end_line": 136, "source_start_line": 109, "source_end_line": 137, "source_confidence": 54, "target_start_line": 110, "target_confidence": 75}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 45, "source_confidence": 54, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 174, "source_start_line": 233, "source_end_line": 242, "source_confidence": 54, "target_start_line": 166, "target_confidence": 75}, {"target_end_line": 145, "source_start_line": 197, "source_end_line": 200, "source_confidence": 54, "target_start_line": 142, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 17, "source_end_line": 23, "source_confidence": 54, "target_start_line": 19, "target_confidence": 75}, {"target_end_line": 157, "source_start_line": 243, "source_end_line": 255, "source_confidence": 54, "target_start_line": 146, "target_confidence": 75}, {"target_end_line": 51, "source_start_line": 47, "source_end_line": 50, "source_confidence": 54, "target_start_line": 48, "target_confidence": 75}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 54, "target_start_line": 1, "target_confidence": 75}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 54, "target_start_line": 53, "target_confidence": 75}, {"target_end_line": 108, "source_start_line": 84, "source_end_line": 109, "source_confidence": 54, "target_start_line": 83, "target_confidence": 75}, {"target_end_line": 136, "source_start_line": 109, "source_end_line": 137, "source_confidence": 54, "target_start_line": 110, "target_confidence": 75}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 45, "source_confidence": 54, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 174, "source_start_line": 233, "source_end_line": 242, "source_confidence": 54, "target_start_line": 166, "target_confidence": 75}, {"target_end_line": 145, "source_start_line": 197, "source_end_line": 200, "source_confidence": 54, "target_start_line": 142, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 17, "source_end_line": 23, "source_confidence": 54, "target_start_line": 19, "target_confidence": 75}, {"target_end_line": 157, "source_start_line": 243, "source_end_line": 255, "source_confidence": 54, "target_start_line": 146, "target_confidence": 75}, {"target_end_line": 51, "source_start_line": 47, "source_end_line": 50, "source_confidence": 54, "target_start_line": 48, "target_confidence": 75}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 54, "target_start_line": 1, "target_confidence": 75}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 54, "target_start_line": 53, "target_confidence": 75}, {"target_end_line": 108, "source_start_line": 84, "source_end_line": 109, "source_confidence": 54, "target_start_line": 83, "target_confidence": 75}, {"target_end_line": 136, "source_start_line": 109, "source_end_line": 137, "source_confidence": 54, "target_start_line": 110, "target_confidence": 75}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 45, "source_confidence": 54, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 174, "source_start_line": 233, "source_end_line": 242, "source_confidence": 54, "target_start_line": 166, "target_confidence": 75}, {"target_end_line": 145, "source_start_line": 197, "source_end_line": 200, "source_confidence": 54, "target_start_line": 142, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 17, "source_end_line": 23, "source_confidence": 54, "target_start_line": 19, "target_confidence": 75}, {"target_end_line": 157, "source_start_line": 243, "source_end_line": 255, "source_confidence": 54, "target_start_line": 146, "target_confidence": 75}, {"target_end_line": 51, "source_start_line": 47, "source_end_line": 50, "source_confidence": 54, "target_start_line": 48, "target_confidence": 75}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 54, "target_start_line": 1, "target_confidence": 75}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 54, "target_start_line": 53, "target_confidence": 75}, {"target_end_line": 108, "source_start_line": 84, "source_end_line": 109, "source_confidence": 54, "target_start_line": 83, "target_confidence": 75}, {"target_end_line": 136, "source_start_line": 109, "source_end_line": 137, "source_confidence": 54, "target_start_line": 110, "target_confidence": 75}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 45, "source_confidence": 54, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 174, "source_start_line": 233, "source_end_line": 242, "source_confidence": 54, "target_start_line": 166, "target_confidence": 75}, {"target_end_line": 145, "source_start_line": 197, "source_end_line": 200, "source_confidence": 54, "target_start_line": 142, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 17, "source_end_line": 23, "source_confidence": 54, "target_start_line": 19, "target_confidence": 75}, {"target_end_line": 157, "source_start_line": 243, "source_end_line": 255, "source_confidence": 54, "target_start_line": 146, "target_confidence": 75}, {"target_end_line": 51, "source_start_line": 47, "source_end_line": 50, "source_confidence": 54, "target_start_line": 48, "target_confidence": 75}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 54, "target_start_line": 1, "target_confidence": 75}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 54, "target_start_line": 53, "target_confidence": 75}, {"target_end_line": 108, "source_start_line": 84, "source_end_line": 109, "source_confidence": 54, "target_start_line": 83, "target_confidence": 75}, {"target_end_line": 136, "source_start_line": 109, "source_end_line": 137, "source_confidence": 54, "target_start_line": 110, "target_confidence": 75}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 45, "source_confidence": 54, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 174, "source_start_line": 233, "source_end_line": 242, "source_confidence": 54, "target_start_line": 166, "target_confidence": 75}, {"target_end_line": 145, "source_start_line": 197, "source_end_line": 200, "source_confidence": 54, "target_start_line": 142, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 17, "source_end_line": 23, "source_confidence": 54, "target_start_line": 19, "target_confidence": 75}, {"target_end_line": 157, "source_start_line": 243, "source_end_line": 255, "source_confidence": 54, "target_start_line": 146, "target_confidence": 75}, {"target_end_line": 51, "source_start_line": 47, "source_end_line": 50, "source_confidence": 54, "target_start_line": 48, "target_confidence": 75}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 54, "target_start_line": 1, "target_confidence": 75}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 54, "target_start_line": 53, "target_confidence": 75}, {"target_end_line": 108, "source_start_line": 84, "source_end_line": 109, "source_confidence": 54, "target_start_line": 83, "target_confidence": 75}, {"target_end_line": 136, "source_start_line": 109, "source_end_line": 137, "source_confidence": 54, "target_start_line": 110, "target_confidence": 75}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 45, "source_confidence": 54, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 174, "source_start_line": 233, "source_end_line": 242, "source_confidence": 54, "target_start_line": 166, "target_confidence": 75}, {"target_end_line": 145, "source_start_line": 197, "source_end_line": 200, "source_confidence": 54, "target_start_line": 142, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 17, "source_end_line": 23, "source_confidence": 54, "target_start_line": 19, "target_confidence": 75}, {"target_end_line": 157, "source_start_line": 243, "source_end_line": 255, "source_confidence": 54, "target_start_line": 146, "target_confidence": 75}, {"target_end_line": 51, "source_start_line": 47, "source_end_line": 50, "source_confidence": 54, "target_start_line": 48, "target_confidence": 75}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 54, "target_start_line": 1, "target_confidence": 75}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 54, "target_start_line": 53, "target_confidence": 75}, {"target_end_line": 108, "source_start_line": 84, "source_end_line": 109, "source_confidence": 54, "target_start_line": 83, "target_confidence": 75}, {"target_end_line": 136, "source_start_line": 109, "source_end_line": 137, "source_confidence": 54, "target_start_line": 110, "target_confidence": 75}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 45, "source_confidence": 54, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 174, "source_start_line": 233, "source_end_line": 242, "source_confidence": 54, "target_start_line": 166, "target_confidence": 75}, {"target_end_line": 145, "source_start_line": 197, "source_end_line": 200, "source_confidence": 54, "target_start_line": 142, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 17, "source_end_line": 23, "source_confidence": 54, "target_start_line": 19, "target_confidence": 75}, {"target_end_line": 157, "source_start_line": 243, "source_end_line": 255, "source_confidence": 54, "target_start_line": 146, "target_confidence": 75}, {"target_end_line": 51, "source_start_line": 47, "source_end_line": 50, "source_confidence": 54, "target_start_line": 48, "target_confidence": 75}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 54, "target_start_line": 1, "target_confidence": 75}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 54, "target_start_line": 53, "target_confidence": 75}, {"target_end_line": 108, "source_start_line": 84, "source_end_line": 109, "source_confidence": 54, "target_start_line": 83, "target_confidence": 75}, {"target_end_line": 136, "source_start_line": 109, "source_end_line": 137, "source_confidence": 54, "target_start_line": 110, "target_confidence": 75}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 45, "source_confidence": 54, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 174, "source_start_line": 233, "source_end_line": 242, "source_confidence": 54, "target_start_line": 166, "target_confidence": 75}, {"target_end_line": 145, "source_start_line": 197, "source_end_line": 200, "source_confidence": 54, "target_start_line": 142, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 17, "source_end_line": 23, "source_confidence": 54, "target_start_line": 19, "target_confidence": 75}, {"target_end_line": 157, "source_start_line": 243, "source_end_line": 255, "source_confidence": 54, "target_start_line": 146, "target_confidence": 75}, {"target_end_line": 51, "source_start_line": 47, "source_end_line": 50, "source_confidence": 54, "target_start_line": 48, "target_confidence": 75}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 54, "target_start_line": 1, "target_confidence": 75}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 54, "target_start_line": 53, "target_confidence": 75}, {"target_end_line": 108, "source_start_line": 84, "source_end_line": 109, "source_confidence": 54, "target_start_line": 83, "target_confidence": 75}, {"target_end_line": 136, "source_start_line": 109, "source_end_line": 137, "source_confidence": 54, "target_start_line": 110, "target_confidence": 75}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 45, "source_confidence": 54, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 174, "source_start_line": 233, "source_end_line": 242, "source_confidence": 54, "target_start_line": 166, "target_confidence": 75}, {"target_end_line": 145, "source_start_line": 197, "source_end_line": 200, "source_confidence": 54, "target_start_line": 142, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 17, "source_end_line": 23, "source_confidence": 54, "target_start_line": 19, "target_confidence": 75}, {"target_end_line": 157, "source_start_line": 243, "source_end_line": 255, "source_confidence": 54, "target_start_line": 146, "target_confidence": 75}, {"target_end_line": 51, "source_start_line": 47, "source_end_line": 50, "source_confidence": 54, "target_start_line": 48, "target_confidence": 75}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 54, "target_start_line": 1, "target_confidence": 75}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 54, "target_start_line": 53, "target_confidence": 75}, {"target_end_line": 108, "source_start_line": 84, "source_end_line": 109, "source_confidence": 54, "target_start_line": 83, "target_confidence": 75}, {"target_end_line": 136, "source_start_line": 109, "source_end_line": 137, "source_confidence": 54, "target_start_line": 110, "target_confidence": 75}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 45, "source_confidence": 54, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 174, "source_start_line": 233, "source_end_line": 242, "source_confidence": 54, "target_start_line": 166, "target_confidence": 75}, {"target_end_line": 145, "source_start_line": 197, "source_end_line": 200, "source_confidence": 54, "target_start_line": 142, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 17, "source_end_line": 23, "source_confidence": 54, "target_start_line": 19, "target_confidence": 75}, {"target_end_line": 157, "source_start_line": 243, "source_end_line": 255, "source_confidence": 54, "target_start_line": 146, "target_confidence": 75}, {"target_end_line": 51, "source_start_line": 47, "source_end_line": 50, "source_confidence": 54, "target_start_line": 48, "target_confidence": 75}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 54, "target_start_line": 1, "target_confidence": 75}]}, {"source": "jpnoll_0ba553dfc1c29bd8a92d9cc3817dff42", "value": 145, "target": "dunlapea_0bc494cbfc5dab3fbea588a6a7cc0cdb", "links": [{"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 70, "target_start_line": 53, "target_confidence": 51}, {"target_end_line": 109, "source_start_line": 83, "source_end_line": 108, "source_confidence": 70, "target_start_line": 84, "target_confidence": 51}, {"target_end_line": 137, "source_start_line": 110, "source_end_line": 136, "source_confidence": 70, "target_start_line": 109, "target_confidence": 51}, {"target_end_line": 45, "source_start_line": 26, "source_end_line": 47, "source_confidence": 70, "target_start_line": 24, "target_confidence": 51}, {"target_end_line": 255, "source_start_line": 142, "source_end_line": 157, "source_confidence": 70, "target_start_line": 239, "target_confidence": 51}, {"target_end_line": 23, "source_start_line": 19, "source_end_line": 25, "source_confidence": 70, "target_start_line": 17, "target_confidence": 51}, {"target_end_line": 50, "source_start_line": 48, "source_end_line": 51, "source_confidence": 70, "target_start_line": 47, "target_confidence": 51}, {"target_end_line": 260, "source_start_line": 162, "source_end_line": 168, "source_confidence": 70, "target_start_line": 255, "target_confidence": 51}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 70, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 70, "target_start_line": 53, "target_confidence": 51}, {"target_end_line": 109, "source_start_line": 83, "source_end_line": 108, "source_confidence": 70, "target_start_line": 84, "target_confidence": 51}, {"target_end_line": 137, "source_start_line": 110, "source_end_line": 136, "source_confidence": 70, "target_start_line": 109, "target_confidence": 51}, {"target_end_line": 45, "source_start_line": 26, "source_end_line": 47, "source_confidence": 70, "target_start_line": 24, "target_confidence": 51}, {"target_end_line": 255, "source_start_line": 142, "source_end_line": 157, "source_confidence": 70, "target_start_line": 239, "target_confidence": 51}, {"target_end_line": 23, "source_start_line": 19, "source_end_line": 25, "source_confidence": 70, "target_start_line": 17, "target_confidence": 51}, {"target_end_line": 50, "source_start_line": 48, "source_end_line": 51, "source_confidence": 70, "target_start_line": 47, "target_confidence": 51}, {"target_end_line": 260, "source_start_line": 162, "source_end_line": 168, "source_confidence": 70, "target_start_line": 255, "target_confidence": 51}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 70, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 70, "target_start_line": 53, "target_confidence": 51}, {"target_end_line": 109, "source_start_line": 83, "source_end_line": 108, "source_confidence": 70, "target_start_line": 84, "target_confidence": 51}, {"target_end_line": 137, "source_start_line": 110, "source_end_line": 136, "source_confidence": 70, "target_start_line": 109, "target_confidence": 51}, {"target_end_line": 45, "source_start_line": 26, "source_end_line": 47, "source_confidence": 70, "target_start_line": 24, "target_confidence": 51}, {"target_end_line": 255, "source_start_line": 142, "source_end_line": 157, "source_confidence": 70, "target_start_line": 239, "target_confidence": 51}, {"target_end_line": 23, "source_start_line": 19, "source_end_line": 25, "source_confidence": 70, "target_start_line": 17, "target_confidence": 51}, {"target_end_line": 50, "source_start_line": 48, "source_end_line": 51, "source_confidence": 70, "target_start_line": 47, "target_confidence": 51}, {"target_end_line": 260, "source_start_line": 162, "source_end_line": 168, "source_confidence": 70, "target_start_line": 255, "target_confidence": 51}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 70, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 70, "target_start_line": 53, "target_confidence": 51}, {"target_end_line": 109, "source_start_line": 83, "source_end_line": 108, "source_confidence": 70, "target_start_line": 84, "target_confidence": 51}, {"target_end_line": 137, "source_start_line": 110, "source_end_line": 136, "source_confidence": 70, "target_start_line": 109, "target_confidence": 51}, {"target_end_line": 45, "source_start_line": 26, "source_end_line": 47, "source_confidence": 70, "target_start_line": 24, "target_confidence": 51}, {"target_end_line": 255, "source_start_line": 142, "source_end_line": 157, "source_confidence": 70, "target_start_line": 239, "target_confidence": 51}, {"target_end_line": 23, "source_start_line": 19, "source_end_line": 25, "source_confidence": 70, "target_start_line": 17, "target_confidence": 51}, {"target_end_line": 50, "source_start_line": 48, "source_end_line": 51, "source_confidence": 70, "target_start_line": 47, "target_confidence": 51}, {"target_end_line": 260, "source_start_line": 162, "source_end_line": 168, "source_confidence": 70, "target_start_line": 255, "target_confidence": 51}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 70, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 70, "target_start_line": 53, "target_confidence": 51}, {"target_end_line": 109, "source_start_line": 83, "source_end_line": 108, "source_confidence": 70, "target_start_line": 84, "target_confidence": 51}, {"target_end_line": 137, "source_start_line": 110, "source_end_line": 136, "source_confidence": 70, "target_start_line": 109, "target_confidence": 51}, {"target_end_line": 45, "source_start_line": 26, "source_end_line": 47, "source_confidence": 70, "target_start_line": 24, "target_confidence": 51}, {"target_end_line": 255, "source_start_line": 142, "source_end_line": 157, "source_confidence": 70, "target_start_line": 239, "target_confidence": 51}, {"target_end_line": 23, "source_start_line": 19, "source_end_line": 25, "source_confidence": 70, "target_start_line": 17, "target_confidence": 51}, {"target_end_line": 50, "source_start_line": 48, "source_end_line": 51, "source_confidence": 70, "target_start_line": 47, "target_confidence": 51}, {"target_end_line": 260, "source_start_line": 162, "source_end_line": 168, "source_confidence": 70, "target_start_line": 255, "target_confidence": 51}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 70, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 70, "target_start_line": 53, "target_confidence": 51}, {"target_end_line": 109, "source_start_line": 83, "source_end_line": 108, "source_confidence": 70, "target_start_line": 84, "target_confidence": 51}, {"target_end_line": 137, "source_start_line": 110, "source_end_line": 136, "source_confidence": 70, "target_start_line": 109, "target_confidence": 51}, {"target_end_line": 45, "source_start_line": 26, "source_end_line": 47, "source_confidence": 70, "target_start_line": 24, "target_confidence": 51}, {"target_end_line": 255, "source_start_line": 142, "source_end_line": 157, "source_confidence": 70, "target_start_line": 239, "target_confidence": 51}, {"target_end_line": 23, "source_start_line": 19, "source_end_line": 25, "source_confidence": 70, "target_start_line": 17, "target_confidence": 51}, {"target_end_line": 50, "source_start_line": 48, "source_end_line": 51, "source_confidence": 70, "target_start_line": 47, "target_confidence": 51}, {"target_end_line": 260, "source_start_line": 162, "source_end_line": 168, "source_confidence": 70, "target_start_line": 255, "target_confidence": 51}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 70, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 70, "target_start_line": 53, "target_confidence": 51}, {"target_end_line": 109, "source_start_line": 83, "source_end_line": 108, "source_confidence": 70, "target_start_line": 84, "target_confidence": 51}, {"target_end_line": 137, "source_start_line": 110, "source_end_line": 136, "source_confidence": 70, "target_start_line": 109, "target_confidence": 51}, {"target_end_line": 45, "source_start_line": 26, "source_end_line": 47, "source_confidence": 70, "target_start_line": 24, "target_confidence": 51}, {"target_end_line": 255, "source_start_line": 142, "source_end_line": 157, "source_confidence": 70, "target_start_line": 239, "target_confidence": 51}, {"target_end_line": 23, "source_start_line": 19, "source_end_line": 25, "source_confidence": 70, "target_start_line": 17, "target_confidence": 51}, {"target_end_line": 50, "source_start_line": 48, "source_end_line": 51, "source_confidence": 70, "target_start_line": 47, "target_confidence": 51}, {"target_end_line": 260, "source_start_line": 162, "source_end_line": 168, "source_confidence": 70, "target_start_line": 255, "target_confidence": 51}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 70, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 70, "target_start_line": 53, "target_confidence": 51}, {"target_end_line": 109, "source_start_line": 83, "source_end_line": 108, "source_confidence": 70, "target_start_line": 84, "target_confidence": 51}, {"target_end_line": 137, "source_start_line": 110, "source_end_line": 136, "source_confidence": 70, "target_start_line": 109, "target_confidence": 51}, {"target_end_line": 45, "source_start_line": 26, "source_end_line": 47, "source_confidence": 70, "target_start_line": 24, "target_confidence": 51}, {"target_end_line": 255, "source_start_line": 142, "source_end_line": 157, "source_confidence": 70, "target_start_line": 239, "target_confidence": 51}, {"target_end_line": 23, "source_start_line": 19, "source_end_line": 25, "source_confidence": 70, "target_start_line": 17, "target_confidence": 51}, {"target_end_line": 50, "source_start_line": 48, "source_end_line": 51, "source_confidence": 70, "target_start_line": 47, "target_confidence": 51}, {"target_end_line": 260, "source_start_line": 162, "source_end_line": 168, "source_confidence": 70, "target_start_line": 255, "target_confidence": 51}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 70, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 82, "source_start_line": 53, "source_end_line": 82, "source_confidence": 70, "target_start_line": 53, "target_confidence": 51}, {"target_end_line": 109, "source_start_line": 83, "source_end_line": 108, "source_confidence": 70, "target_start_line": 84, "target_confidence": 51}, {"target_end_line": 137, "source_start_line": 110, "source_end_line": 136, "source_confidence": 70, "target_start_line": 109, "target_confidence": 51}, {"target_end_line": 45, "source_start_line": 26, "source_end_line": 47, "source_confidence": 70, "target_start_line": 24, "target_confidence": 51}, {"target_end_line": 255, "source_start_line": 142, "source_end_line": 157, "source_confidence": 70, "target_start_line": 239, "target_confidence": 51}, {"target_end_line": 23, "source_start_line": 19, "source_end_line": 25, "source_confidence": 70, "target_start_line": 17, "target_confidence": 51}, {"target_end_line": 50, "source_start_line": 48, "source_end_line": 51, "source_confidence": 70, "target_start_line": 47, "target_confidence": 51}, {"target_end_line": 260, "source_start_line": 162, "source_end_line": 168, "source_confidence": 70, "target_start_line": 255, "target_confidence": 51}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 70, "target_start_line": 1, "target_confidence": 51}]}, {"source": "JohnWall64_0b45df4222660357022e999fcb2df172", "value": 125, "target": "grybnicky_7d41f75647bdc4fef8736442db42bad0", "links": [{"target_end_line": 120, "source_start_line": 1, "source_end_line": 125, "source_confidence": 98, "target_start_line": 1, "target_confidence": 90}]}, {"source": "JohnWall64_0b45df4222660357022e999fcb2df172", "value": 112, "target": "grybnicky_0bbec668d5ba6765cc908eafd6c556fc", "links": [{"target_end_line": 114, "source_start_line": 60, "source_end_line": 125, "source_confidence": 88, "target_start_line": 49, "target_confidence": 80}, {"target_end_line": 37, "source_start_line": 22, "source_end_line": 44, "source_confidence": 88, "target_start_line": 10, "target_confidence": 80}, {"target_end_line": 46, "source_start_line": 47, "source_end_line": 56, "source_confidence": 88, "target_start_line": 37, "target_confidence": 80}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 10, "source_confidence": 88, "target_start_line": 1, "target_confidence": 80}, {"target_end_line": 114, "source_start_line": 60, "source_end_line": 125, "source_confidence": 88, "target_start_line": 49, "target_confidence": 80}, {"target_end_line": 37, "source_start_line": 22, "source_end_line": 44, "source_confidence": 88, "target_start_line": 10, "target_confidence": 80}, {"target_end_line": 46, "source_start_line": 47, "source_end_line": 56, "source_confidence": 88, "target_start_line": 37, "target_confidence": 80}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 10, "source_confidence": 88, "target_start_line": 1, "target_confidence": 80}, {"target_end_line": 114, "source_start_line": 60, "source_end_line": 125, "source_confidence": 88, "target_start_line": 49, "target_confidence": 80}, {"target_end_line": 37, "source_start_line": 22, "source_end_line": 44, "source_confidence": 88, "target_start_line": 10, "target_confidence": 80}, {"target_end_line": 46, "source_start_line": 47, "source_end_line": 56, "source_confidence": 88, "target_start_line": 37, "target_confidence": 80}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 10, "source_confidence": 88, "target_start_line": 1, "target_confidence": 80}, {"target_end_line": 114, "source_start_line": 60, "source_end_line": 125, "source_confidence": 88, "target_start_line": 49, "target_confidence": 80}, {"target_end_line": 37, "source_start_line": 22, "source_end_line": 44, "source_confidence": 88, "target_start_line": 10, "target_confidence": 80}, {"target_end_line": 46, "source_start_line": 47, "source_end_line": 56, "source_confidence": 88, "target_start_line": 37, "target_confidence": 80}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 10, "source_confidence": 88, "target_start_line": 1, "target_confidence": 80}]}, {"source": "grybnicky_9be28947eccefb1ac05598b8fbc53d27", "value": 112, "target": "JohnWall64_0b45df4222660357022e999fcb2df172", "links": [{"target_end_line": 125, "source_start_line": 49, "source_end_line": 114, "source_confidence": 88, "target_start_line": 60, "target_confidence": 88}, {"target_end_line": 44, "source_start_line": 10, "source_end_line": 37, "source_confidence": 88, "target_start_line": 22, "target_confidence": 88}, {"target_end_line": 56, "source_start_line": 37, "source_end_line": 46, "source_confidence": 88, "target_start_line": 47, "target_confidence": 88}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 8, "source_confidence": 88, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 125, "source_start_line": 49, "source_end_line": 114, "source_confidence": 88, "target_start_line": 60, "target_confidence": 88}, {"target_end_line": 44, "source_start_line": 10, "source_end_line": 37, "source_confidence": 88, "target_start_line": 22, "target_confidence": 88}, {"target_end_line": 56, "source_start_line": 37, "source_end_line": 46, "source_confidence": 88, "target_start_line": 47, "target_confidence": 88}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 8, "source_confidence": 88, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 125, "source_start_line": 49, "source_end_line": 114, "source_confidence": 88, "target_start_line": 60, "target_confidence": 88}, {"target_end_line": 44, "source_start_line": 10, "source_end_line": 37, "source_confidence": 88, "target_start_line": 22, "target_confidence": 88}, {"target_end_line": 56, "source_start_line": 37, "source_end_line": 46, "source_confidence": 88, "target_start_line": 47, "target_confidence": 88}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 8, "source_confidence": 88, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 125, "source_start_line": 49, "source_end_line": 114, "source_confidence": 88, "target_start_line": 60, "target_confidence": 88}, {"target_end_line": 44, "source_start_line": 10, "source_end_line": 37, "source_confidence": 88, "target_start_line": 22, "target_confidence": 88}, {"target_end_line": 56, "source_start_line": 37, "source_end_line": 46, "source_confidence": 88, "target_start_line": 47, "target_confidence": 88}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 8, "source_confidence": 88, "target_start_line": 1, "target_confidence": 88}]}, {"source": "voltdatalab_227af1477ad2a7e2a55e", "value": 119, "target": "piyushbhargava7_3fbc1276f4fef8dde67d3d9675903f23", "links": [{"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "enjalot_527374377ab35222b5fe", "value": 33, "target": "curran_bb9886529a77d4a3c0616b4b67a5ed66", "links": [{"target_end_line": 22, "source_start_line": 8, "source_end_line": 17, "source_confidence": 40, "target_start_line": 13, "target_confidence": 16}, {"target_end_line": 75, "source_start_line": 30, "source_end_line": 38, "source_confidence": 40, "target_start_line": 67, "target_confidence": 16}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 40, "target_start_line": 1, "target_confidence": 16}, {"target_end_line": 44, "source_start_line": 18, "source_end_line": 24, "source_confidence": 40, "target_start_line": 39, "target_confidence": 16}, {"target_end_line": 22, "source_start_line": 8, "source_end_line": 17, "source_confidence": 40, "target_start_line": 13, "target_confidence": 16}, {"target_end_line": 75, "source_start_line": 30, "source_end_line": 38, "source_confidence": 40, "target_start_line": 67, "target_confidence": 16}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 40, "target_start_line": 1, "target_confidence": 16}, {"target_end_line": 44, "source_start_line": 18, "source_end_line": 24, "source_confidence": 40, "target_start_line": 39, "target_confidence": 16}, {"target_end_line": 22, "source_start_line": 8, "source_end_line": 17, "source_confidence": 40, "target_start_line": 13, "target_confidence": 16}, {"target_end_line": 75, "source_start_line": 30, "source_end_line": 38, "source_confidence": 40, "target_start_line": 67, "target_confidence": 16}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 40, "target_start_line": 1, "target_confidence": 16}, {"target_end_line": 44, "source_start_line": 18, "source_end_line": 24, "source_confidence": 40, "target_start_line": 39, "target_confidence": 16}, {"target_end_line": 22, "source_start_line": 8, "source_end_line": 17, "source_confidence": 40, "target_start_line": 13, "target_confidence": 16}, {"target_end_line": 75, "source_start_line": 30, "source_end_line": 38, "source_confidence": 40, "target_start_line": 67, "target_confidence": 16}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 40, "target_start_line": 1, "target_confidence": 16}, {"target_end_line": 44, "source_start_line": 18, "source_end_line": 24, "source_confidence": 40, "target_start_line": 39, "target_confidence": 16}]}, {"source": "mitchparker_57aaa9eb663b18d90184", "value": 28, "target": "trebor_9d8c66d0db06f4896b245a94efa93d66", "links": [{"target_end_line": 13, "source_start_line": 5, "source_end_line": 10, "source_confidence": 31, "target_start_line": 6, "target_confidence": 52}, {"target_end_line": 46, "source_start_line": 73, "source_end_line": 76, "source_confidence": 31, "target_start_line": 43, "target_confidence": 52}, {"target_end_line": 29, "source_start_line": 54, "source_end_line": 60, "source_confidence": 31, "target_start_line": 21, "target_confidence": 52}, {"target_end_line": 37, "source_start_line": 62, "source_end_line": 67, "source_confidence": 31, "target_start_line": 31, "target_confidence": 52}, {"target_end_line": 13, "source_start_line": 5, "source_end_line": 10, "source_confidence": 31, "target_start_line": 6, "target_confidence": 52}, {"target_end_line": 46, "source_start_line": 73, "source_end_line": 76, "source_confidence": 31, "target_start_line": 43, "target_confidence": 52}, {"target_end_line": 29, "source_start_line": 54, "source_end_line": 60, "source_confidence": 31, "target_start_line": 21, "target_confidence": 52}, {"target_end_line": 37, "source_start_line": 62, "source_end_line": 67, "source_confidence": 31, "target_start_line": 31, "target_confidence": 52}, {"target_end_line": 13, "source_start_line": 5, "source_end_line": 10, "source_confidence": 31, "target_start_line": 6, "target_confidence": 52}, {"target_end_line": 46, "source_start_line": 73, "source_end_line": 76, "source_confidence": 31, "target_start_line": 43, "target_confidence": 52}, {"target_end_line": 29, "source_start_line": 54, "source_end_line": 60, "source_confidence": 31, "target_start_line": 21, "target_confidence": 52}, {"target_end_line": 37, "source_start_line": 62, "source_end_line": 67, "source_confidence": 31, "target_start_line": 31, "target_confidence": 52}, {"target_end_line": 13, "source_start_line": 5, "source_end_line": 10, "source_confidence": 31, "target_start_line": 6, "target_confidence": 52}, {"target_end_line": 46, "source_start_line": 73, "source_end_line": 76, "source_confidence": 31, "target_start_line": 43, "target_confidence": 52}, {"target_end_line": 29, "source_start_line": 54, "source_end_line": 60, "source_confidence": 31, "target_start_line": 21, "target_confidence": 52}, {"target_end_line": 37, "source_start_line": 62, "source_end_line": 67, "source_confidence": 31, "target_start_line": 31, "target_confidence": 52}]}, {"source": "mitchparker_57aaa9eb663b18d90184", "value": 28, "target": "trebor_2269cebaaf9b5a523f3ea11579fd9625", "links": [{"target_end_line": 13, "source_start_line": 5, "source_end_line": 10, "source_confidence": 34, "target_start_line": 6, "target_confidence": 59}, {"target_end_line": 46, "source_start_line": 73, "source_end_line": 76, "source_confidence": 34, "target_start_line": 43, "target_confidence": 59}, {"target_end_line": 29, "source_start_line": 54, "source_end_line": 60, "source_confidence": 34, "target_start_line": 21, "target_confidence": 59}, {"target_end_line": 37, "source_start_line": 62, "source_end_line": 67, "source_confidence": 34, "target_start_line": 31, "target_confidence": 59}, {"target_end_line": 13, "source_start_line": 5, "source_end_line": 10, "source_confidence": 34, "target_start_line": 6, "target_confidence": 59}, {"target_end_line": 46, "source_start_line": 73, "source_end_line": 76, "source_confidence": 34, "target_start_line": 43, "target_confidence": 59}, {"target_end_line": 29, "source_start_line": 54, "source_end_line": 60, "source_confidence": 34, "target_start_line": 21, "target_confidence": 59}, {"target_end_line": 37, "source_start_line": 62, "source_end_line": 67, "source_confidence": 34, "target_start_line": 31, "target_confidence": 59}, {"target_end_line": 13, "source_start_line": 5, "source_end_line": 10, "source_confidence": 34, "target_start_line": 6, "target_confidence": 59}, {"target_end_line": 46, "source_start_line": 73, "source_end_line": 76, "source_confidence": 34, "target_start_line": 43, "target_confidence": 59}, {"target_end_line": 29, "source_start_line": 54, "source_end_line": 60, "source_confidence": 34, "target_start_line": 21, "target_confidence": 59}, {"target_end_line": 37, "source_start_line": 62, "source_end_line": 67, "source_confidence": 34, "target_start_line": 31, "target_confidence": 59}, {"target_end_line": 13, "source_start_line": 5, "source_end_line": 10, "source_confidence": 34, "target_start_line": 6, "target_confidence": 59}, {"target_end_line": 46, "source_start_line": 73, "source_end_line": 76, "source_confidence": 34, "target_start_line": 43, "target_confidence": 59}, {"target_end_line": 29, "source_start_line": 54, "source_end_line": 60, "source_confidence": 34, "target_start_line": 21, "target_confidence": 59}, {"target_end_line": 37, "source_start_line": 62, "source_end_line": 67, "source_confidence": 34, "target_start_line": 31, "target_confidence": 59}]}, {"source": "mitchparker_57aaa9eb663b18d90184", "value": 28, "target": "trebor_36a0fa91471b42da773550ea58c6e257", "links": [{"target_end_line": 13, "source_start_line": 5, "source_end_line": 10, "source_confidence": 34, "target_start_line": 6, "target_confidence": 59}, {"target_end_line": 46, "source_start_line": 73, "source_end_line": 76, "source_confidence": 34, "target_start_line": 43, "target_confidence": 59}, {"target_end_line": 29, "source_start_line": 54, "source_end_line": 60, "source_confidence": 34, "target_start_line": 21, "target_confidence": 59}, {"target_end_line": 37, "source_start_line": 62, "source_end_line": 67, "source_confidence": 34, "target_start_line": 31, "target_confidence": 59}, {"target_end_line": 13, "source_start_line": 5, "source_end_line": 10, "source_confidence": 34, "target_start_line": 6, "target_confidence": 59}, {"target_end_line": 46, "source_start_line": 73, "source_end_line": 76, "source_confidence": 34, "target_start_line": 43, "target_confidence": 59}, {"target_end_line": 29, "source_start_line": 54, "source_end_line": 60, "source_confidence": 34, "target_start_line": 21, "target_confidence": 59}, {"target_end_line": 37, "source_start_line": 62, "source_end_line": 67, "source_confidence": 34, "target_start_line": 31, "target_confidence": 59}, {"target_end_line": 13, "source_start_line": 5, "source_end_line": 10, "source_confidence": 34, "target_start_line": 6, "target_confidence": 59}, {"target_end_line": 46, "source_start_line": 73, "source_end_line": 76, "source_confidence": 34, "target_start_line": 43, "target_confidence": 59}, {"target_end_line": 29, "source_start_line": 54, "source_end_line": 60, "source_confidence": 34, "target_start_line": 21, "target_confidence": 59}, {"target_end_line": 37, "source_start_line": 62, "source_end_line": 67, "source_confidence": 34, "target_start_line": 31, "target_confidence": 59}, {"target_end_line": 13, "source_start_line": 5, "source_end_line": 10, "source_confidence": 34, "target_start_line": 6, "target_confidence": 59}, {"target_end_line": 46, "source_start_line": 73, "source_end_line": 76, "source_confidence": 34, "target_start_line": 43, "target_confidence": 59}, {"target_end_line": 29, "source_start_line": 54, "source_end_line": 60, "source_confidence": 34, "target_start_line": 21, "target_confidence": 59}, {"target_end_line": 37, "source_start_line": 62, "source_end_line": 67, "source_confidence": 34, "target_start_line": 31, "target_confidence": 59}]}, {"source": "grybnicky_9be28947eccefb1ac05598b8fbc53d27", "value": 114, "target": "JohnWall64_38b37fc4dc5b6f773a8c57e84f933cc2", "links": [{"target_end_line": 112, "source_start_line": 1, "source_end_line": 114, "source_confidence": 90, "target_start_line": 1, "target_confidence": 98}]}, {"source": "devssunil_cd887ec9d6ebd46aa12e", "value": 91, "target": "jpnoll_0ba553dfc1c29bd8a92d9cc3817dff42", "links": [{"target_end_line": 97, "source_start_line": 84, "source_end_line": 99, "source_confidence": 28, "target_start_line": 83, "target_confidence": 40}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 28, "target_start_line": 64, "target_confidence": 40}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 49, "source_confidence": 28, "target_start_line": 32, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 15, "source_confidence": 28, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 145, "source_start_line": 231, "source_end_line": 235, "source_confidence": 28, "target_start_line": 141, "target_confidence": 40}, {"target_end_line": 29, "source_start_line": 25, "source_end_line": 30, "source_confidence": 28, "target_start_line": 26, "target_confidence": 40}, {"target_end_line": 128, "source_start_line": 150, "source_end_line": 154, "source_confidence": 28, "target_start_line": 124, "target_confidence": 40}, {"target_end_line": 157, "source_start_line": 240, "source_end_line": 247, "source_confidence": 28, "target_start_line": 150, "target_confidence": 40}, {"target_end_line": 168, "source_start_line": 247, "source_end_line": 252, "source_confidence": 28, "target_start_line": 162, "target_confidence": 40}, {"target_end_line": 97, "source_start_line": 84, "source_end_line": 99, "source_confidence": 28, "target_start_line": 83, "target_confidence": 40}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 28, "target_start_line": 64, "target_confidence": 40}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 49, "source_confidence": 28, "target_start_line": 32, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 15, "source_confidence": 28, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 145, "source_start_line": 231, "source_end_line": 235, "source_confidence": 28, "target_start_line": 141, "target_confidence": 40}, {"target_end_line": 29, "source_start_line": 25, "source_end_line": 30, "source_confidence": 28, "target_start_line": 26, "target_confidence": 40}, {"target_end_line": 128, "source_start_line": 150, "source_end_line": 154, "source_confidence": 28, "target_start_line": 124, "target_confidence": 40}, {"target_end_line": 157, "source_start_line": 240, "source_end_line": 247, "source_confidence": 28, "target_start_line": 150, "target_confidence": 40}, {"target_end_line": 168, "source_start_line": 247, "source_end_line": 252, "source_confidence": 28, "target_start_line": 162, "target_confidence": 40}, {"target_end_line": 97, "source_start_line": 84, "source_end_line": 99, "source_confidence": 28, "target_start_line": 83, "target_confidence": 40}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 28, "target_start_line": 64, "target_confidence": 40}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 49, "source_confidence": 28, "target_start_line": 32, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 15, "source_confidence": 28, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 145, "source_start_line": 231, "source_end_line": 235, "source_confidence": 28, "target_start_line": 141, "target_confidence": 40}, {"target_end_line": 29, "source_start_line": 25, "source_end_line": 30, "source_confidence": 28, "target_start_line": 26, "target_confidence": 40}, {"target_end_line": 128, "source_start_line": 150, "source_end_line": 154, "source_confidence": 28, "target_start_line": 124, "target_confidence": 40}, {"target_end_line": 157, "source_start_line": 240, "source_end_line": 247, "source_confidence": 28, "target_start_line": 150, "target_confidence": 40}, {"target_end_line": 168, "source_start_line": 247, "source_end_line": 252, "source_confidence": 28, "target_start_line": 162, "target_confidence": 40}, {"target_end_line": 97, "source_start_line": 84, "source_end_line": 99, "source_confidence": 28, "target_start_line": 83, "target_confidence": 40}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 28, "target_start_line": 64, "target_confidence": 40}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 49, "source_confidence": 28, "target_start_line": 32, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 15, "source_confidence": 28, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 145, "source_start_line": 231, "source_end_line": 235, "source_confidence": 28, "target_start_line": 141, "target_confidence": 40}, {"target_end_line": 29, "source_start_line": 25, "source_end_line": 30, "source_confidence": 28, "target_start_line": 26, "target_confidence": 40}, {"target_end_line": 128, "source_start_line": 150, "source_end_line": 154, "source_confidence": 28, "target_start_line": 124, "target_confidence": 40}, {"target_end_line": 157, "source_start_line": 240, "source_end_line": 247, "source_confidence": 28, "target_start_line": 150, "target_confidence": 40}, {"target_end_line": 168, "source_start_line": 247, "source_end_line": 252, "source_confidence": 28, "target_start_line": 162, "target_confidence": 40}, {"target_end_line": 97, "source_start_line": 84, "source_end_line": 99, "source_confidence": 28, "target_start_line": 83, "target_confidence": 40}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 28, "target_start_line": 64, "target_confidence": 40}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 49, "source_confidence": 28, "target_start_line": 32, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 15, "source_confidence": 28, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 145, "source_start_line": 231, "source_end_line": 235, "source_confidence": 28, "target_start_line": 141, "target_confidence": 40}, {"target_end_line": 29, "source_start_line": 25, "source_end_line": 30, "source_confidence": 28, "target_start_line": 26, "target_confidence": 40}, {"target_end_line": 128, "source_start_line": 150, "source_end_line": 154, "source_confidence": 28, "target_start_line": 124, "target_confidence": 40}, {"target_end_line": 157, "source_start_line": 240, "source_end_line": 247, "source_confidence": 28, "target_start_line": 150, "target_confidence": 40}, {"target_end_line": 168, "source_start_line": 247, "source_end_line": 252, "source_confidence": 28, "target_start_line": 162, "target_confidence": 40}, {"target_end_line": 97, "source_start_line": 84, "source_end_line": 99, "source_confidence": 28, "target_start_line": 83, "target_confidence": 40}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 28, "target_start_line": 64, "target_confidence": 40}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 49, "source_confidence": 28, "target_start_line": 32, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 15, "source_confidence": 28, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 145, "source_start_line": 231, "source_end_line": 235, "source_confidence": 28, "target_start_line": 141, "target_confidence": 40}, {"target_end_line": 29, "source_start_line": 25, "source_end_line": 30, "source_confidence": 28, "target_start_line": 26, "target_confidence": 40}, {"target_end_line": 128, "source_start_line": 150, "source_end_line": 154, "source_confidence": 28, "target_start_line": 124, "target_confidence": 40}, {"target_end_line": 157, "source_start_line": 240, "source_end_line": 247, "source_confidence": 28, "target_start_line": 150, "target_confidence": 40}, {"target_end_line": 168, "source_start_line": 247, "source_end_line": 252, "source_confidence": 28, "target_start_line": 162, "target_confidence": 40}, {"target_end_line": 97, "source_start_line": 84, "source_end_line": 99, "source_confidence": 28, "target_start_line": 83, "target_confidence": 40}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 28, "target_start_line": 64, "target_confidence": 40}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 49, "source_confidence": 28, "target_start_line": 32, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 15, "source_confidence": 28, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 145, "source_start_line": 231, "source_end_line": 235, "source_confidence": 28, "target_start_line": 141, "target_confidence": 40}, {"target_end_line": 29, "source_start_line": 25, "source_end_line": 30, "source_confidence": 28, "target_start_line": 26, "target_confidence": 40}, {"target_end_line": 128, "source_start_line": 150, "source_end_line": 154, "source_confidence": 28, "target_start_line": 124, "target_confidence": 40}, {"target_end_line": 157, "source_start_line": 240, "source_end_line": 247, "source_confidence": 28, "target_start_line": 150, "target_confidence": 40}, {"target_end_line": 168, "source_start_line": 247, "source_end_line": 252, "source_confidence": 28, "target_start_line": 162, "target_confidence": 40}, {"target_end_line": 97, "source_start_line": 84, "source_end_line": 99, "source_confidence": 28, "target_start_line": 83, "target_confidence": 40}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 28, "target_start_line": 64, "target_confidence": 40}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 49, "source_confidence": 28, "target_start_line": 32, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 15, "source_confidence": 28, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 145, "source_start_line": 231, "source_end_line": 235, "source_confidence": 28, "target_start_line": 141, "target_confidence": 40}, {"target_end_line": 29, "source_start_line": 25, "source_end_line": 30, "source_confidence": 28, "target_start_line": 26, "target_confidence": 40}, {"target_end_line": 128, "source_start_line": 150, "source_end_line": 154, "source_confidence": 28, "target_start_line": 124, "target_confidence": 40}, {"target_end_line": 157, "source_start_line": 240, "source_end_line": 247, "source_confidence": 28, "target_start_line": 150, "target_confidence": 40}, {"target_end_line": 168, "source_start_line": 247, "source_end_line": 252, "source_confidence": 28, "target_start_line": 162, "target_confidence": 40}, {"target_end_line": 97, "source_start_line": 84, "source_end_line": 99, "source_confidence": 28, "target_start_line": 83, "target_confidence": 40}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 28, "target_start_line": 64, "target_confidence": 40}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 49, "source_confidence": 28, "target_start_line": 32, "target_confidence": 40}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 15, "source_confidence": 28, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 145, "source_start_line": 231, "source_end_line": 235, "source_confidence": 28, "target_start_line": 141, "target_confidence": 40}, {"target_end_line": 29, "source_start_line": 25, "source_end_line": 30, "source_confidence": 28, "target_start_line": 26, "target_confidence": 40}, {"target_end_line": 128, "source_start_line": 150, "source_end_line": 154, "source_confidence": 28, "target_start_line": 124, "target_confidence": 40}, {"target_end_line": 157, "source_start_line": 240, "source_end_line": 247, "source_confidence": 28, "target_start_line": 150, "target_confidence": 40}, {"target_end_line": 168, "source_start_line": 247, "source_end_line": 252, "source_confidence": 28, "target_start_line": 162, "target_confidence": 40}]}, {"source": "caHaber_327c854c2b24d6835382", "value": 35, "target": "dhoboy_19d5d6dda01690e314e9a14a3cc3118e", "links": [{"target_end_line": 45, "source_start_line": 20, "source_end_line": 39, "source_confidence": 55, "target_start_line": 26, "target_confidence": 27}, {"target_end_line": 165, "source_start_line": 61, "source_end_line": 69, "source_confidence": 55, "target_start_line": 156, "target_confidence": 27}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 18, "source_confidence": 55, "target_start_line": 21, "target_confidence": 27}, {"target_end_line": 45, "source_start_line": 20, "source_end_line": 39, "source_confidence": 55, "target_start_line": 26, "target_confidence": 27}, {"target_end_line": 165, "source_start_line": 61, "source_end_line": 69, "source_confidence": 55, "target_start_line": 156, "target_confidence": 27}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 18, "source_confidence": 55, "target_start_line": 21, "target_confidence": 27}, {"target_end_line": 45, "source_start_line": 20, "source_end_line": 39, "source_confidence": 55, "target_start_line": 26, "target_confidence": 27}, {"target_end_line": 165, "source_start_line": 61, "source_end_line": 69, "source_confidence": 55, "target_start_line": 156, "target_confidence": 27}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 18, "source_confidence": 55, "target_start_line": 21, "target_confidence": 27}]}, {"source": "evansodu_a6c0b6b8d32cf99143181f286d991956", "value": 39, "target": "sirwart_8ce3a98af7219dfd4d966c8a01019d99", "links": [{"target_end_line": 66, "source_start_line": 58, "source_end_line": 85, "source_confidence": 21, "target_start_line": 40, "target_confidence": 52}, {"target_end_line": 27, "source_start_line": 34, "source_end_line": 38, "source_confidence": 21, "target_start_line": 23, "target_confidence": 52}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 6, "source_confidence": 21, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 66, "source_start_line": 58, "source_end_line": 85, "source_confidence": 21, "target_start_line": 40, "target_confidence": 52}, {"target_end_line": 27, "source_start_line": 34, "source_end_line": 38, "source_confidence": 21, "target_start_line": 23, "target_confidence": 52}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 6, "source_confidence": 21, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 66, "source_start_line": 58, "source_end_line": 85, "source_confidence": 21, "target_start_line": 40, "target_confidence": 52}, {"target_end_line": 27, "source_start_line": 34, "source_end_line": 38, "source_confidence": 21, "target_start_line": 23, "target_confidence": 52}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 6, "source_confidence": 21, "target_start_line": 1, "target_confidence": 52}]}, {"source": "devssunil_cd887ec9d6ebd46aa12e", "value": 84, "target": "jpnoll_ee3bf5a5e9a2ba1577d90a0ea7a79c4c", "links": [{"target_end_line": 98, "source_start_line": 83, "source_end_line": 99, "source_confidence": 29, "target_start_line": 83, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 51, "source_confidence": 29, "target_start_line": 30, "target_confidence": 37}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 29, "target_start_line": 64, "target_confidence": 37}, {"target_end_line": 167, "source_start_line": 232, "source_end_line": 235, "source_confidence": 29, "target_start_line": 164, "target_confidence": 37}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 29, "target_start_line": 24, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 150, "source_end_line": 154, "source_confidence": 29, "target_start_line": 123, "target_confidence": 37}, {"target_end_line": 184, "source_start_line": 247, "source_end_line": 252, "source_confidence": 29, "target_start_line": 179, "target_confidence": 37}, {"target_end_line": 21, "source_start_line": 15, "source_end_line": 20, "source_confidence": 29, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 8, "source_confidence": 29, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 98, "source_start_line": 83, "source_end_line": 99, "source_confidence": 29, "target_start_line": 83, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 51, "source_confidence": 29, "target_start_line": 30, "target_confidence": 37}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 29, "target_start_line": 64, "target_confidence": 37}, {"target_end_line": 167, "source_start_line": 232, "source_end_line": 235, "source_confidence": 29, "target_start_line": 164, "target_confidence": 37}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 29, "target_start_line": 24, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 150, "source_end_line": 154, "source_confidence": 29, "target_start_line": 123, "target_confidence": 37}, {"target_end_line": 184, "source_start_line": 247, "source_end_line": 252, "source_confidence": 29, "target_start_line": 179, "target_confidence": 37}, {"target_end_line": 21, "source_start_line": 15, "source_end_line": 20, "source_confidence": 29, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 8, "source_confidence": 29, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 98, "source_start_line": 83, "source_end_line": 99, "source_confidence": 29, "target_start_line": 83, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 51, "source_confidence": 29, "target_start_line": 30, "target_confidence": 37}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 29, "target_start_line": 64, "target_confidence": 37}, {"target_end_line": 167, "source_start_line": 232, "source_end_line": 235, "source_confidence": 29, "target_start_line": 164, "target_confidence": 37}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 29, "target_start_line": 24, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 150, "source_end_line": 154, "source_confidence": 29, "target_start_line": 123, "target_confidence": 37}, {"target_end_line": 184, "source_start_line": 247, "source_end_line": 252, "source_confidence": 29, "target_start_line": 179, "target_confidence": 37}, {"target_end_line": 21, "source_start_line": 15, "source_end_line": 20, "source_confidence": 29, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 8, "source_confidence": 29, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 98, "source_start_line": 83, "source_end_line": 99, "source_confidence": 29, "target_start_line": 83, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 51, "source_confidence": 29, "target_start_line": 30, "target_confidence": 37}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 29, "target_start_line": 64, "target_confidence": 37}, {"target_end_line": 167, "source_start_line": 232, "source_end_line": 235, "source_confidence": 29, "target_start_line": 164, "target_confidence": 37}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 29, "target_start_line": 24, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 150, "source_end_line": 154, "source_confidence": 29, "target_start_line": 123, "target_confidence": 37}, {"target_end_line": 184, "source_start_line": 247, "source_end_line": 252, "source_confidence": 29, "target_start_line": 179, "target_confidence": 37}, {"target_end_line": 21, "source_start_line": 15, "source_end_line": 20, "source_confidence": 29, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 8, "source_confidence": 29, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 98, "source_start_line": 83, "source_end_line": 99, "source_confidence": 29, "target_start_line": 83, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 51, "source_confidence": 29, "target_start_line": 30, "target_confidence": 37}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 29, "target_start_line": 64, "target_confidence": 37}, {"target_end_line": 167, "source_start_line": 232, "source_end_line": 235, "source_confidence": 29, "target_start_line": 164, "target_confidence": 37}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 29, "target_start_line": 24, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 150, "source_end_line": 154, "source_confidence": 29, "target_start_line": 123, "target_confidence": 37}, {"target_end_line": 184, "source_start_line": 247, "source_end_line": 252, "source_confidence": 29, "target_start_line": 179, "target_confidence": 37}, {"target_end_line": 21, "source_start_line": 15, "source_end_line": 20, "source_confidence": 29, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 8, "source_confidence": 29, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 98, "source_start_line": 83, "source_end_line": 99, "source_confidence": 29, "target_start_line": 83, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 51, "source_confidence": 29, "target_start_line": 30, "target_confidence": 37}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 29, "target_start_line": 64, "target_confidence": 37}, {"target_end_line": 167, "source_start_line": 232, "source_end_line": 235, "source_confidence": 29, "target_start_line": 164, "target_confidence": 37}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 29, "target_start_line": 24, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 150, "source_end_line": 154, "source_confidence": 29, "target_start_line": 123, "target_confidence": 37}, {"target_end_line": 184, "source_start_line": 247, "source_end_line": 252, "source_confidence": 29, "target_start_line": 179, "target_confidence": 37}, {"target_end_line": 21, "source_start_line": 15, "source_end_line": 20, "source_confidence": 29, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 8, "source_confidence": 29, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 98, "source_start_line": 83, "source_end_line": 99, "source_confidence": 29, "target_start_line": 83, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 51, "source_confidence": 29, "target_start_line": 30, "target_confidence": 37}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 29, "target_start_line": 64, "target_confidence": 37}, {"target_end_line": 167, "source_start_line": 232, "source_end_line": 235, "source_confidence": 29, "target_start_line": 164, "target_confidence": 37}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 29, "target_start_line": 24, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 150, "source_end_line": 154, "source_confidence": 29, "target_start_line": 123, "target_confidence": 37}, {"target_end_line": 184, "source_start_line": 247, "source_end_line": 252, "source_confidence": 29, "target_start_line": 179, "target_confidence": 37}, {"target_end_line": 21, "source_start_line": 15, "source_end_line": 20, "source_confidence": 29, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 8, "source_confidence": 29, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 98, "source_start_line": 83, "source_end_line": 99, "source_confidence": 29, "target_start_line": 83, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 51, "source_confidence": 29, "target_start_line": 30, "target_confidence": 37}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 29, "target_start_line": 64, "target_confidence": 37}, {"target_end_line": 167, "source_start_line": 232, "source_end_line": 235, "source_confidence": 29, "target_start_line": 164, "target_confidence": 37}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 29, "target_start_line": 24, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 150, "source_end_line": 154, "source_confidence": 29, "target_start_line": 123, "target_confidence": 37}, {"target_end_line": 184, "source_start_line": 247, "source_end_line": 252, "source_confidence": 29, "target_start_line": 179, "target_confidence": 37}, {"target_end_line": 21, "source_start_line": 15, "source_end_line": 20, "source_confidence": 29, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 8, "source_confidence": 29, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 98, "source_start_line": 83, "source_end_line": 99, "source_confidence": 29, "target_start_line": 83, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 35, "source_end_line": 51, "source_confidence": 29, "target_start_line": 30, "target_confidence": 37}, {"target_end_line": 78, "source_start_line": 64, "source_end_line": 78, "source_confidence": 29, "target_start_line": 64, "target_confidence": 37}, {"target_end_line": 167, "source_start_line": 232, "source_end_line": 235, "source_confidence": 29, "target_start_line": 164, "target_confidence": 37}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 30, "source_confidence": 29, "target_start_line": 24, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 150, "source_end_line": 154, "source_confidence": 29, "target_start_line": 123, "target_confidence": 37}, {"target_end_line": 184, "source_start_line": 247, "source_end_line": 252, "source_confidence": 29, "target_start_line": 179, "target_confidence": 37}, {"target_end_line": 21, "source_start_line": 15, "source_end_line": 20, "source_confidence": 29, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 8, "source_confidence": 29, "target_start_line": 1, "target_confidence": 37}]}, {"source": "enjalot_7402f55e19e1e609f014", "value": 26, "target": "newsummit_880d663dba66affaf18226113d34073d", "links": [{"target_end_line": 119, "source_start_line": 170, "source_end_line": 175, "source_confidence": 17, "target_start_line": 114, "target_confidence": 19}, {"target_end_line": 133, "source_start_line": 178, "source_end_line": 188, "source_confidence": 17, "target_start_line": 122, "target_confidence": 19}, {"target_end_line": 113, "source_start_line": 166, "source_end_line": 169, "source_confidence": 17, "target_start_line": 110, "target_confidence": 19}, {"target_end_line": 100, "source_start_line": 123, "source_end_line": 126, "source_confidence": 17, "target_start_line": 97, "target_confidence": 19}, {"target_end_line": 119, "source_start_line": 170, "source_end_line": 175, "source_confidence": 17, "target_start_line": 114, "target_confidence": 19}, {"target_end_line": 133, "source_start_line": 178, "source_end_line": 188, "source_confidence": 17, "target_start_line": 122, "target_confidence": 19}, {"target_end_line": 113, "source_start_line": 166, "source_end_line": 169, "source_confidence": 17, "target_start_line": 110, "target_confidence": 19}, {"target_end_line": 100, "source_start_line": 123, "source_end_line": 126, "source_confidence": 17, "target_start_line": 97, "target_confidence": 19}, {"target_end_line": 119, "source_start_line": 170, "source_end_line": 175, "source_confidence": 17, "target_start_line": 114, "target_confidence": 19}, {"target_end_line": 133, "source_start_line": 178, "source_end_line": 188, "source_confidence": 17, "target_start_line": 122, "target_confidence": 19}, {"target_end_line": 113, "source_start_line": 166, "source_end_line": 169, "source_confidence": 17, "target_start_line": 110, "target_confidence": 19}, {"target_end_line": 100, "source_start_line": 123, "source_end_line": 126, "source_confidence": 17, "target_start_line": 97, "target_confidence": 19}, {"target_end_line": 119, "source_start_line": 170, "source_end_line": 175, "source_confidence": 17, "target_start_line": 114, "target_confidence": 19}, {"target_end_line": 133, "source_start_line": 178, "source_end_line": 188, "source_confidence": 17, "target_start_line": 122, "target_confidence": 19}, {"target_end_line": 113, "source_start_line": 166, "source_end_line": 169, "source_confidence": 17, "target_start_line": 110, "target_confidence": 19}, {"target_end_line": 100, "source_start_line": 123, "source_end_line": 126, "source_confidence": 17, "target_start_line": 97, "target_confidence": 19}]}, {"source": "renecnielsen_254addab2deb0e096ccf", "value": 73, "target": "syntagmatic_c9fb69e425a3c07cfbd09169941fbf46", "links": [{"target_end_line": 277, "source_start_line": 298, "source_end_line": 320, "source_confidence": 31, "target_start_line": 255, "target_confidence": 23}, {"target_end_line": 25, "source_start_line": 7, "source_end_line": 20, "source_confidence": 31, "target_start_line": 12, "target_confidence": 23}, {"target_end_line": 197, "source_start_line": 240, "source_end_line": 246, "source_confidence": 31, "target_start_line": 190, "target_confidence": 23}, {"target_end_line": 239, "source_start_line": 269, "source_end_line": 273, "source_confidence": 31, "target_start_line": 235, "target_confidence": 23}, {"target_end_line": 340, "source_start_line": 331, "source_end_line": 339, "source_confidence": 31, "target_start_line": 332, "target_confidence": 23}, {"target_end_line": 343, "source_start_line": 341, "source_end_line": 344, "source_confidence": 31, "target_start_line": 340, "target_confidence": 23}, {"target_end_line": 245, "source_start_line": 281, "source_end_line": 285, "source_confidence": 31, "target_start_line": 241, "target_confidence": 23}, {"target_end_line": 42, "source_start_line": 146, "source_end_line": 150, "source_confidence": 31, "target_start_line": 38, "target_confidence": 23}, {"target_end_line": 277, "source_start_line": 298, "source_end_line": 320, "source_confidence": 31, "target_start_line": 255, "target_confidence": 23}, {"target_end_line": 25, "source_start_line": 7, "source_end_line": 20, "source_confidence": 31, "target_start_line": 12, "target_confidence": 23}, {"target_end_line": 197, "source_start_line": 240, "source_end_line": 246, "source_confidence": 31, "target_start_line": 190, "target_confidence": 23}, {"target_end_line": 239, "source_start_line": 269, "source_end_line": 273, "source_confidence": 31, "target_start_line": 235, "target_confidence": 23}, {"target_end_line": 340, "source_start_line": 331, "source_end_line": 339, "source_confidence": 31, "target_start_line": 332, "target_confidence": 23}, {"target_end_line": 343, "source_start_line": 341, "source_end_line": 344, "source_confidence": 31, "target_start_line": 340, "target_confidence": 23}, {"target_end_line": 245, "source_start_line": 281, "source_end_line": 285, "source_confidence": 31, "target_start_line": 241, "target_confidence": 23}, {"target_end_line": 42, "source_start_line": 146, "source_end_line": 150, "source_confidence": 31, "target_start_line": 38, "target_confidence": 23}, {"target_end_line": 277, "source_start_line": 298, "source_end_line": 320, "source_confidence": 31, "target_start_line": 255, "target_confidence": 23}, {"target_end_line": 25, "source_start_line": 7, "source_end_line": 20, "source_confidence": 31, "target_start_line": 12, "target_confidence": 23}, {"target_end_line": 197, "source_start_line": 240, "source_end_line": 246, "source_confidence": 31, "target_start_line": 190, "target_confidence": 23}, {"target_end_line": 239, "source_start_line": 269, "source_end_line": 273, "source_confidence": 31, "target_start_line": 235, "target_confidence": 23}, {"target_end_line": 340, "source_start_line": 331, "source_end_line": 339, "source_confidence": 31, "target_start_line": 332, "target_confidence": 23}, {"target_end_line": 343, "source_start_line": 341, "source_end_line": 344, "source_confidence": 31, "target_start_line": 340, "target_confidence": 23}, {"target_end_line": 245, "source_start_line": 281, "source_end_line": 285, "source_confidence": 31, "target_start_line": 241, "target_confidence": 23}, {"target_end_line": 42, "source_start_line": 146, "source_end_line": 150, "source_confidence": 31, "target_start_line": 38, "target_confidence": 23}, {"target_end_line": 277, "source_start_line": 298, "source_end_line": 320, "source_confidence": 31, "target_start_line": 255, "target_confidence": 23}, {"target_end_line": 25, "source_start_line": 7, "source_end_line": 20, "source_confidence": 31, "target_start_line": 12, "target_confidence": 23}, {"target_end_line": 197, "source_start_line": 240, "source_end_line": 246, "source_confidence": 31, "target_start_line": 190, "target_confidence": 23}, {"target_end_line": 239, "source_start_line": 269, "source_end_line": 273, "source_confidence": 31, "target_start_line": 235, "target_confidence": 23}, {"target_end_line": 340, "source_start_line": 331, "source_end_line": 339, "source_confidence": 31, "target_start_line": 332, "target_confidence": 23}, {"target_end_line": 343, "source_start_line": 341, "source_end_line": 344, "source_confidence": 31, "target_start_line": 340, "target_confidence": 23}, {"target_end_line": 245, "source_start_line": 281, "source_end_line": 285, "source_confidence": 31, "target_start_line": 241, "target_confidence": 23}, {"target_end_line": 42, "source_start_line": 146, "source_end_line": 150, "source_confidence": 31, "target_start_line": 38, "target_confidence": 23}, {"target_end_line": 277, "source_start_line": 298, "source_end_line": 320, "source_confidence": 31, "target_start_line": 255, "target_confidence": 23}, {"target_end_line": 25, "source_start_line": 7, "source_end_line": 20, "source_confidence": 31, "target_start_line": 12, "target_confidence": 23}, {"target_end_line": 197, "source_start_line": 240, "source_end_line": 246, "source_confidence": 31, "target_start_line": 190, "target_confidence": 23}, {"target_end_line": 239, "source_start_line": 269, "source_end_line": 273, "source_confidence": 31, "target_start_line": 235, "target_confidence": 23}, {"target_end_line": 340, "source_start_line": 331, "source_end_line": 339, "source_confidence": 31, "target_start_line": 332, "target_confidence": 23}, {"target_end_line": 343, "source_start_line": 341, "source_end_line": 344, "source_confidence": 31, "target_start_line": 340, "target_confidence": 23}, {"target_end_line": 245, "source_start_line": 281, "source_end_line": 285, "source_confidence": 31, "target_start_line": 241, "target_confidence": 23}, {"target_end_line": 42, "source_start_line": 146, "source_end_line": 150, "source_confidence": 31, "target_start_line": 38, "target_confidence": 23}, {"target_end_line": 277, "source_start_line": 298, "source_end_line": 320, "source_confidence": 31, "target_start_line": 255, "target_confidence": 23}, {"target_end_line": 25, "source_start_line": 7, "source_end_line": 20, "source_confidence": 31, "target_start_line": 12, "target_confidence": 23}, {"target_end_line": 197, "source_start_line": 240, "source_end_line": 246, "source_confidence": 31, "target_start_line": 190, "target_confidence": 23}, {"target_end_line": 239, "source_start_line": 269, "source_end_line": 273, "source_confidence": 31, "target_start_line": 235, "target_confidence": 23}, {"target_end_line": 340, "source_start_line": 331, "source_end_line": 339, "source_confidence": 31, "target_start_line": 332, "target_confidence": 23}, {"target_end_line": 343, "source_start_line": 341, "source_end_line": 344, "source_confidence": 31, "target_start_line": 340, "target_confidence": 23}, {"target_end_line": 245, "source_start_line": 281, "source_end_line": 285, "source_confidence": 31, "target_start_line": 241, "target_confidence": 23}, {"target_end_line": 42, "source_start_line": 146, "source_end_line": 150, "source_confidence": 31, "target_start_line": 38, "target_confidence": 23}, {"target_end_line": 277, "source_start_line": 298, "source_end_line": 320, "source_confidence": 31, "target_start_line": 255, "target_confidence": 23}, {"target_end_line": 25, "source_start_line": 7, "source_end_line": 20, "source_confidence": 31, "target_start_line": 12, "target_confidence": 23}, {"target_end_line": 197, "source_start_line": 240, "source_end_line": 246, "source_confidence": 31, "target_start_line": 190, "target_confidence": 23}, {"target_end_line": 239, "source_start_line": 269, "source_end_line": 273, "source_confidence": 31, "target_start_line": 235, "target_confidence": 23}, {"target_end_line": 340, "source_start_line": 331, "source_end_line": 339, "source_confidence": 31, "target_start_line": 332, "target_confidence": 23}, {"target_end_line": 343, "source_start_line": 341, "source_end_line": 344, "source_confidence": 31, "target_start_line": 340, "target_confidence": 23}, {"target_end_line": 245, "source_start_line": 281, "source_end_line": 285, "source_confidence": 31, "target_start_line": 241, "target_confidence": 23}, {"target_end_line": 42, "source_start_line": 146, "source_end_line": 150, "source_confidence": 31, "target_start_line": 38, "target_confidence": 23}, {"target_end_line": 277, "source_start_line": 298, "source_end_line": 320, "source_confidence": 31, "target_start_line": 255, "target_confidence": 23}, {"target_end_line": 25, "source_start_line": 7, "source_end_line": 20, "source_confidence": 31, "target_start_line": 12, "target_confidence": 23}, {"target_end_line": 197, "source_start_line": 240, "source_end_line": 246, "source_confidence": 31, "target_start_line": 190, "target_confidence": 23}, {"target_end_line": 239, "source_start_line": 269, "source_end_line": 273, "source_confidence": 31, "target_start_line": 235, "target_confidence": 23}, {"target_end_line": 340, "source_start_line": 331, "source_end_line": 339, "source_confidence": 31, "target_start_line": 332, "target_confidence": 23}, {"target_end_line": 343, "source_start_line": 341, "source_end_line": 344, "source_confidence": 31, "target_start_line": 340, "target_confidence": 23}, {"target_end_line": 245, "source_start_line": 281, "source_end_line": 285, "source_confidence": 31, "target_start_line": 241, "target_confidence": 23}, {"target_end_line": 42, "source_start_line": 146, "source_end_line": 150, "source_confidence": 31, "target_start_line": 38, "target_confidence": 23}]}, {"source": "Mrajyalakshmi_df5a31dd7db44dbd142f", "value": 76, "target": "evansodu_a6c0b6b8d32cf99143181f286d991956", "links": [{"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 11, "target_confidence": 54}, {"target_end_line": 91, "source_start_line": 61, "source_end_line": 73, "source_confidence": 10, "target_start_line": 81, "target_confidence": 54}, {"target_end_line": 38, "source_start_line": 19, "source_end_line": 23, "source_confidence": 10, "target_start_line": 34, "target_confidence": 54}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 10, "target_start_line": 6, "target_confidence": 54}, {"target_end_line": 100, "source_start_line": 73, "source_end_line": 81, "source_confidence": 10, "target_start_line": 91, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 10, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 47, "source_confidence": 10, "target_start_line": 58, "target_confidence": 54}, {"target_end_line": 55, "source_start_line": 36, "source_end_line": 37, "source_confidence": 10, "target_start_line": 54, "target_confidence": 54}, {"target_end_line": 78, "source_start_line": 51, "source_end_line": 59, "source_confidence": 10, "target_start_line": 70, "target_confidence": 54}, {"target_end_line": 144, "source_start_line": 96, "source_end_line": 103, "source_confidence": 10, "target_start_line": 136, "target_confidence": 54}, {"target_end_line": 46, "source_start_line": 25, "source_end_line": 29, "source_confidence": 10, "target_start_line": 41, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 11, "target_confidence": 54}, {"target_end_line": 91, "source_start_line": 61, "source_end_line": 73, "source_confidence": 10, "target_start_line": 81, "target_confidence": 54}, {"target_end_line": 38, "source_start_line": 19, "source_end_line": 23, "source_confidence": 10, "target_start_line": 34, "target_confidence": 54}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 10, "target_start_line": 6, "target_confidence": 54}, {"target_end_line": 100, "source_start_line": 73, "source_end_line": 81, "source_confidence": 10, "target_start_line": 91, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 10, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 47, "source_confidence": 10, "target_start_line": 58, "target_confidence": 54}, {"target_end_line": 55, "source_start_line": 36, "source_end_line": 37, "source_confidence": 10, "target_start_line": 54, "target_confidence": 54}, {"target_end_line": 78, "source_start_line": 51, "source_end_line": 59, "source_confidence": 10, "target_start_line": 70, "target_confidence": 54}, {"target_end_line": 144, "source_start_line": 96, "source_end_line": 103, "source_confidence": 10, "target_start_line": 136, "target_confidence": 54}, {"target_end_line": 46, "source_start_line": 25, "source_end_line": 29, "source_confidence": 10, "target_start_line": 41, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 11, "target_confidence": 54}, {"target_end_line": 91, "source_start_line": 61, "source_end_line": 73, "source_confidence": 10, "target_start_line": 81, "target_confidence": 54}, {"target_end_line": 38, "source_start_line": 19, "source_end_line": 23, "source_confidence": 10, "target_start_line": 34, "target_confidence": 54}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 10, "target_start_line": 6, "target_confidence": 54}, {"target_end_line": 100, "source_start_line": 73, "source_end_line": 81, "source_confidence": 10, "target_start_line": 91, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 10, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 47, "source_confidence": 10, "target_start_line": 58, "target_confidence": 54}, {"target_end_line": 55, "source_start_line": 36, "source_end_line": 37, "source_confidence": 10, "target_start_line": 54, "target_confidence": 54}, {"target_end_line": 78, "source_start_line": 51, "source_end_line": 59, "source_confidence": 10, "target_start_line": 70, "target_confidence": 54}, {"target_end_line": 144, "source_start_line": 96, "source_end_line": 103, "source_confidence": 10, "target_start_line": 136, "target_confidence": 54}, {"target_end_line": 46, "source_start_line": 25, "source_end_line": 29, "source_confidence": 10, "target_start_line": 41, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 11, "target_confidence": 54}, {"target_end_line": 91, "source_start_line": 61, "source_end_line": 73, "source_confidence": 10, "target_start_line": 81, "target_confidence": 54}, {"target_end_line": 38, "source_start_line": 19, "source_end_line": 23, "source_confidence": 10, "target_start_line": 34, "target_confidence": 54}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 10, "target_start_line": 6, "target_confidence": 54}, {"target_end_line": 100, "source_start_line": 73, "source_end_line": 81, "source_confidence": 10, "target_start_line": 91, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 10, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 47, "source_confidence": 10, "target_start_line": 58, "target_confidence": 54}, {"target_end_line": 55, "source_start_line": 36, "source_end_line": 37, "source_confidence": 10, "target_start_line": 54, "target_confidence": 54}, {"target_end_line": 78, "source_start_line": 51, "source_end_line": 59, "source_confidence": 10, "target_start_line": 70, "target_confidence": 54}, {"target_end_line": 144, "source_start_line": 96, "source_end_line": 103, "source_confidence": 10, "target_start_line": 136, "target_confidence": 54}, {"target_end_line": 46, "source_start_line": 25, "source_end_line": 29, "source_confidence": 10, "target_start_line": 41, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 11, "target_confidence": 54}, {"target_end_line": 91, "source_start_line": 61, "source_end_line": 73, "source_confidence": 10, "target_start_line": 81, "target_confidence": 54}, {"target_end_line": 38, "source_start_line": 19, "source_end_line": 23, "source_confidence": 10, "target_start_line": 34, "target_confidence": 54}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 10, "target_start_line": 6, "target_confidence": 54}, {"target_end_line": 100, "source_start_line": 73, "source_end_line": 81, "source_confidence": 10, "target_start_line": 91, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 10, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 47, "source_confidence": 10, "target_start_line": 58, "target_confidence": 54}, {"target_end_line": 55, "source_start_line": 36, "source_end_line": 37, "source_confidence": 10, "target_start_line": 54, "target_confidence": 54}, {"target_end_line": 78, "source_start_line": 51, "source_end_line": 59, "source_confidence": 10, "target_start_line": 70, "target_confidence": 54}, {"target_end_line": 144, "source_start_line": 96, "source_end_line": 103, "source_confidence": 10, "target_start_line": 136, "target_confidence": 54}, {"target_end_line": 46, "source_start_line": 25, "source_end_line": 29, "source_confidence": 10, "target_start_line": 41, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 11, "target_confidence": 54}, {"target_end_line": 91, "source_start_line": 61, "source_end_line": 73, "source_confidence": 10, "target_start_line": 81, "target_confidence": 54}, {"target_end_line": 38, "source_start_line": 19, "source_end_line": 23, "source_confidence": 10, "target_start_line": 34, "target_confidence": 54}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 10, "target_start_line": 6, "target_confidence": 54}, {"target_end_line": 100, "source_start_line": 73, "source_end_line": 81, "source_confidence": 10, "target_start_line": 91, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 10, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 47, "source_confidence": 10, "target_start_line": 58, "target_confidence": 54}, {"target_end_line": 55, "source_start_line": 36, "source_end_line": 37, "source_confidence": 10, "target_start_line": 54, "target_confidence": 54}, {"target_end_line": 78, "source_start_line": 51, "source_end_line": 59, "source_confidence": 10, "target_start_line": 70, "target_confidence": 54}, {"target_end_line": 144, "source_start_line": 96, "source_end_line": 103, "source_confidence": 10, "target_start_line": 136, "target_confidence": 54}, {"target_end_line": 46, "source_start_line": 25, "source_end_line": 29, "source_confidence": 10, "target_start_line": 41, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 11, "target_confidence": 54}, {"target_end_line": 91, "source_start_line": 61, "source_end_line": 73, "source_confidence": 10, "target_start_line": 81, "target_confidence": 54}, {"target_end_line": 38, "source_start_line": 19, "source_end_line": 23, "source_confidence": 10, "target_start_line": 34, "target_confidence": 54}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 10, "target_start_line": 6, "target_confidence": 54}, {"target_end_line": 100, "source_start_line": 73, "source_end_line": 81, "source_confidence": 10, "target_start_line": 91, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 10, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 47, "source_confidence": 10, "target_start_line": 58, "target_confidence": 54}, {"target_end_line": 55, "source_start_line": 36, "source_end_line": 37, "source_confidence": 10, "target_start_line": 54, "target_confidence": 54}, {"target_end_line": 78, "source_start_line": 51, "source_end_line": 59, "source_confidence": 10, "target_start_line": 70, "target_confidence": 54}, {"target_end_line": 144, "source_start_line": 96, "source_end_line": 103, "source_confidence": 10, "target_start_line": 136, "target_confidence": 54}, {"target_end_line": 46, "source_start_line": 25, "source_end_line": 29, "source_confidence": 10, "target_start_line": 41, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 11, "target_confidence": 54}, {"target_end_line": 91, "source_start_line": 61, "source_end_line": 73, "source_confidence": 10, "target_start_line": 81, "target_confidence": 54}, {"target_end_line": 38, "source_start_line": 19, "source_end_line": 23, "source_confidence": 10, "target_start_line": 34, "target_confidence": 54}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 10, "target_start_line": 6, "target_confidence": 54}, {"target_end_line": 100, "source_start_line": 73, "source_end_line": 81, "source_confidence": 10, "target_start_line": 91, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 10, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 47, "source_confidence": 10, "target_start_line": 58, "target_confidence": 54}, {"target_end_line": 55, "source_start_line": 36, "source_end_line": 37, "source_confidence": 10, "target_start_line": 54, "target_confidence": 54}, {"target_end_line": 78, "source_start_line": 51, "source_end_line": 59, "source_confidence": 10, "target_start_line": 70, "target_confidence": 54}, {"target_end_line": 144, "source_start_line": 96, "source_end_line": 103, "source_confidence": 10, "target_start_line": 136, "target_confidence": 54}, {"target_end_line": 46, "source_start_line": 25, "source_end_line": 29, "source_confidence": 10, "target_start_line": 41, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 11, "target_confidence": 54}, {"target_end_line": 91, "source_start_line": 61, "source_end_line": 73, "source_confidence": 10, "target_start_line": 81, "target_confidence": 54}, {"target_end_line": 38, "source_start_line": 19, "source_end_line": 23, "source_confidence": 10, "target_start_line": 34, "target_confidence": 54}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 10, "target_start_line": 6, "target_confidence": 54}, {"target_end_line": 100, "source_start_line": 73, "source_end_line": 81, "source_confidence": 10, "target_start_line": 91, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 10, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 47, "source_confidence": 10, "target_start_line": 58, "target_confidence": 54}, {"target_end_line": 55, "source_start_line": 36, "source_end_line": 37, "source_confidence": 10, "target_start_line": 54, "target_confidence": 54}, {"target_end_line": 78, "source_start_line": 51, "source_end_line": 59, "source_confidence": 10, "target_start_line": 70, "target_confidence": 54}, {"target_end_line": 144, "source_start_line": 96, "source_end_line": 103, "source_confidence": 10, "target_start_line": 136, "target_confidence": 54}, {"target_end_line": 46, "source_start_line": 25, "source_end_line": 29, "source_confidence": 10, "target_start_line": 41, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 11, "target_confidence": 54}, {"target_end_line": 91, "source_start_line": 61, "source_end_line": 73, "source_confidence": 10, "target_start_line": 81, "target_confidence": 54}, {"target_end_line": 38, "source_start_line": 19, "source_end_line": 23, "source_confidence": 10, "target_start_line": 34, "target_confidence": 54}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 10, "target_start_line": 6, "target_confidence": 54}, {"target_end_line": 100, "source_start_line": 73, "source_end_line": 81, "source_confidence": 10, "target_start_line": 91, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 10, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 47, "source_confidence": 10, "target_start_line": 58, "target_confidence": 54}, {"target_end_line": 55, "source_start_line": 36, "source_end_line": 37, "source_confidence": 10, "target_start_line": 54, "target_confidence": 54}, {"target_end_line": 78, "source_start_line": 51, "source_end_line": 59, "source_confidence": 10, "target_start_line": 70, "target_confidence": 54}, {"target_end_line": 144, "source_start_line": 96, "source_end_line": 103, "source_confidence": 10, "target_start_line": 136, "target_confidence": 54}, {"target_end_line": 46, "source_start_line": 25, "source_end_line": 29, "source_confidence": 10, "target_start_line": 41, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 11, "source_end_line": 16, "source_confidence": 10, "target_start_line": 11, "target_confidence": 54}, {"target_end_line": 91, "source_start_line": 61, "source_end_line": 73, "source_confidence": 10, "target_start_line": 81, "target_confidence": 54}, {"target_end_line": 38, "source_start_line": 19, "source_end_line": 23, "source_confidence": 10, "target_start_line": 34, "target_confidence": 54}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 10, "target_start_line": 6, "target_confidence": 54}, {"target_end_line": 100, "source_start_line": 73, "source_end_line": 81, "source_confidence": 10, "target_start_line": 91, "target_confidence": 54}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 10, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 47, "source_confidence": 10, "target_start_line": 58, "target_confidence": 54}, {"target_end_line": 55, "source_start_line": 36, "source_end_line": 37, "source_confidence": 10, "target_start_line": 54, "target_confidence": 54}, {"target_end_line": 78, "source_start_line": 51, "source_end_line": 59, "source_confidence": 10, "target_start_line": 70, "target_confidence": 54}, {"target_end_line": 144, "source_start_line": 96, "source_end_line": 103, "source_confidence": 10, "target_start_line": 136, "target_confidence": 54}, {"target_end_line": 46, "source_start_line": 25, "source_end_line": 29, "source_confidence": 10, "target_start_line": 41, "target_confidence": 54}]}, {"source": "deckerlr_90d8928adf0098720bc9", "value": 31, "target": "bricedev_6fa60662f4dabd7e3ecb", "links": [{"target_end_line": 41, "source_start_line": 21, "source_end_line": 32, "source_confidence": 31, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 5, "source_confidence": 31, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 31, "target_start_line": 15, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 21, "source_end_line": 32, "source_confidence": 31, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 5, "source_confidence": 31, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 31, "target_start_line": 15, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 21, "source_end_line": 32, "source_confidence": 31, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 5, "source_confidence": 31, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 31, "target_start_line": 15, "target_confidence": 37}]}, {"source": "lambrex_374f80c550b969bc0853", "value": 58, "target": "devssunil_cd887ec9d6ebd46aa12e", "links": [{"target_end_line": 247, "source_start_line": 121, "source_end_line": 136, "source_confidence": 23, "target_start_line": 232, "target_confidence": 20}, {"target_end_line": 126, "source_start_line": 46, "source_end_line": 60, "source_confidence": 23, "target_start_line": 113, "target_confidence": 20}, {"target_end_line": 151, "source_start_line": 78, "source_end_line": 82, "source_confidence": 23, "target_start_line": 147, "target_confidence": 20}, {"target_end_line": 134, "source_start_line": 61, "source_end_line": 68, "source_confidence": 23, "target_start_line": 127, "target_confidence": 20}, {"target_end_line": 51, "source_start_line": 181, "source_end_line": 187, "source_confidence": 23, "target_start_line": 44, "target_confidence": 20}, {"target_end_line": 113, "source_start_line": 32, "source_end_line": 38, "source_confidence": 23, "target_start_line": 107, "target_confidence": 20}, {"target_end_line": 247, "source_start_line": 121, "source_end_line": 136, "source_confidence": 23, "target_start_line": 232, "target_confidence": 20}, {"target_end_line": 126, "source_start_line": 46, "source_end_line": 60, "source_confidence": 23, "target_start_line": 113, "target_confidence": 20}, {"target_end_line": 151, "source_start_line": 78, "source_end_line": 82, "source_confidence": 23, "target_start_line": 147, "target_confidence": 20}, {"target_end_line": 134, "source_start_line": 61, "source_end_line": 68, "source_confidence": 23, "target_start_line": 127, "target_confidence": 20}, {"target_end_line": 51, "source_start_line": 181, "source_end_line": 187, "source_confidence": 23, "target_start_line": 44, "target_confidence": 20}, {"target_end_line": 113, "source_start_line": 32, "source_end_line": 38, "source_confidence": 23, "target_start_line": 107, "target_confidence": 20}, {"target_end_line": 247, "source_start_line": 121, "source_end_line": 136, "source_confidence": 23, "target_start_line": 232, "target_confidence": 20}, {"target_end_line": 126, "source_start_line": 46, "source_end_line": 60, "source_confidence": 23, "target_start_line": 113, "target_confidence": 20}, {"target_end_line": 151, "source_start_line": 78, "source_end_line": 82, "source_confidence": 23, "target_start_line": 147, "target_confidence": 20}, {"target_end_line": 134, "source_start_line": 61, "source_end_line": 68, "source_confidence": 23, "target_start_line": 127, "target_confidence": 20}, {"target_end_line": 51, "source_start_line": 181, "source_end_line": 187, "source_confidence": 23, "target_start_line": 44, "target_confidence": 20}, {"target_end_line": 113, "source_start_line": 32, "source_end_line": 38, "source_confidence": 23, "target_start_line": 107, "target_confidence": 20}, {"target_end_line": 247, "source_start_line": 121, "source_end_line": 136, "source_confidence": 23, "target_start_line": 232, "target_confidence": 20}, {"target_end_line": 126, "source_start_line": 46, "source_end_line": 60, "source_confidence": 23, "target_start_line": 113, "target_confidence": 20}, {"target_end_line": 151, "source_start_line": 78, "source_end_line": 82, "source_confidence": 23, "target_start_line": 147, "target_confidence": 20}, {"target_end_line": 134, "source_start_line": 61, "source_end_line": 68, "source_confidence": 23, "target_start_line": 127, "target_confidence": 20}, {"target_end_line": 51, "source_start_line": 181, "source_end_line": 187, "source_confidence": 23, "target_start_line": 44, "target_confidence": 20}, {"target_end_line": 113, "source_start_line": 32, "source_end_line": 38, "source_confidence": 23, "target_start_line": 107, "target_confidence": 20}, {"target_end_line": 247, "source_start_line": 121, "source_end_line": 136, "source_confidence": 23, "target_start_line": 232, "target_confidence": 20}, {"target_end_line": 126, "source_start_line": 46, "source_end_line": 60, "source_confidence": 23, "target_start_line": 113, "target_confidence": 20}, {"target_end_line": 151, "source_start_line": 78, "source_end_line": 82, "source_confidence": 23, "target_start_line": 147, "target_confidence": 20}, {"target_end_line": 134, "source_start_line": 61, "source_end_line": 68, "source_confidence": 23, "target_start_line": 127, "target_confidence": 20}, {"target_end_line": 51, "source_start_line": 181, "source_end_line": 187, "source_confidence": 23, "target_start_line": 44, "target_confidence": 20}, {"target_end_line": 113, "source_start_line": 32, "source_end_line": 38, "source_confidence": 23, "target_start_line": 107, "target_confidence": 20}, {"target_end_line": 247, "source_start_line": 121, "source_end_line": 136, "source_confidence": 23, "target_start_line": 232, "target_confidence": 20}, {"target_end_line": 126, "source_start_line": 46, "source_end_line": 60, "source_confidence": 23, "target_start_line": 113, "target_confidence": 20}, {"target_end_line": 151, "source_start_line": 78, "source_end_line": 82, "source_confidence": 23, "target_start_line": 147, "target_confidence": 20}, {"target_end_line": 134, "source_start_line": 61, "source_end_line": 68, "source_confidence": 23, "target_start_line": 127, "target_confidence": 20}, {"target_end_line": 51, "source_start_line": 181, "source_end_line": 187, "source_confidence": 23, "target_start_line": 44, "target_confidence": 20}, {"target_end_line": 113, "source_start_line": 32, "source_end_line": 38, "source_confidence": 23, "target_start_line": 107, "target_confidence": 20}]}, {"source": "ashtonburg_c9ff5176a08a7f1d55dd", "value": 108, "target": "lambrex_374f80c550b969bc0853", "links": [{"target_end_line": 193, "source_start_line": 39, "source_end_line": 53, "source_confidence": 49, "target_start_line": 181, "target_confidence": 46}, {"target_end_line": 216, "source_start_line": 76, "source_end_line": 86, "source_confidence": 49, "target_start_line": 206, "target_confidence": 46}, {"target_end_line": 124, "source_start_line": 162, "source_end_line": 169, "source_confidence": 49, "target_start_line": 117, "target_confidence": 46}, {"target_end_line": 156, "source_start_line": 184, "source_end_line": 192, "source_confidence": 49, "target_start_line": 146, "target_confidence": 46}, {"target_end_line": 99, "source_start_line": 117, "source_end_line": 128, "source_confidence": 49, "target_start_line": 88, "target_confidence": 46}, {"target_end_line": 117, "source_start_line": 133, "source_end_line": 147, "source_confidence": 49, "target_start_line": 103, "target_confidence": 46}, {"target_end_line": 205, "source_start_line": 57, "source_end_line": 66, "source_confidence": 49, "target_start_line": 196, "target_confidence": 46}, {"target_end_line": 224, "source_start_line": 96, "source_end_line": 103, "source_confidence": 49, "target_start_line": 217, "target_confidence": 46}, {"target_end_line": 174, "source_start_line": 198, "source_end_line": 208, "source_confidence": 49, "target_start_line": 162, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 24, "source_end_line": 30, "source_confidence": 49, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 193, "source_start_line": 39, "source_end_line": 53, "source_confidence": 49, "target_start_line": 181, "target_confidence": 46}, {"target_end_line": 216, "source_start_line": 76, "source_end_line": 86, "source_confidence": 49, "target_start_line": 206, "target_confidence": 46}, {"target_end_line": 124, "source_start_line": 162, "source_end_line": 169, "source_confidence": 49, "target_start_line": 117, "target_confidence": 46}, {"target_end_line": 156, "source_start_line": 184, "source_end_line": 192, "source_confidence": 49, "target_start_line": 146, "target_confidence": 46}, {"target_end_line": 99, "source_start_line": 117, "source_end_line": 128, "source_confidence": 49, "target_start_line": 88, "target_confidence": 46}, {"target_end_line": 117, "source_start_line": 133, "source_end_line": 147, "source_confidence": 49, "target_start_line": 103, "target_confidence": 46}, {"target_end_line": 205, "source_start_line": 57, "source_end_line": 66, "source_confidence": 49, "target_start_line": 196, "target_confidence": 46}, {"target_end_line": 224, "source_start_line": 96, "source_end_line": 103, "source_confidence": 49, "target_start_line": 217, "target_confidence": 46}, {"target_end_line": 174, "source_start_line": 198, "source_end_line": 208, "source_confidence": 49, "target_start_line": 162, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 24, "source_end_line": 30, "source_confidence": 49, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 193, "source_start_line": 39, "source_end_line": 53, "source_confidence": 49, "target_start_line": 181, "target_confidence": 46}, {"target_end_line": 216, "source_start_line": 76, "source_end_line": 86, "source_confidence": 49, "target_start_line": 206, "target_confidence": 46}, {"target_end_line": 124, "source_start_line": 162, "source_end_line": 169, "source_confidence": 49, "target_start_line": 117, "target_confidence": 46}, {"target_end_line": 156, "source_start_line": 184, "source_end_line": 192, "source_confidence": 49, "target_start_line": 146, "target_confidence": 46}, {"target_end_line": 99, "source_start_line": 117, "source_end_line": 128, "source_confidence": 49, "target_start_line": 88, "target_confidence": 46}, {"target_end_line": 117, "source_start_line": 133, "source_end_line": 147, "source_confidence": 49, "target_start_line": 103, "target_confidence": 46}, {"target_end_line": 205, "source_start_line": 57, "source_end_line": 66, "source_confidence": 49, "target_start_line": 196, "target_confidence": 46}, {"target_end_line": 224, "source_start_line": 96, "source_end_line": 103, "source_confidence": 49, "target_start_line": 217, "target_confidence": 46}, {"target_end_line": 174, "source_start_line": 198, "source_end_line": 208, "source_confidence": 49, "target_start_line": 162, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 24, "source_end_line": 30, "source_confidence": 49, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 193, "source_start_line": 39, "source_end_line": 53, "source_confidence": 49, "target_start_line": 181, "target_confidence": 46}, {"target_end_line": 216, "source_start_line": 76, "source_end_line": 86, "source_confidence": 49, "target_start_line": 206, "target_confidence": 46}, {"target_end_line": 124, "source_start_line": 162, "source_end_line": 169, "source_confidence": 49, "target_start_line": 117, "target_confidence": 46}, {"target_end_line": 156, "source_start_line": 184, "source_end_line": 192, "source_confidence": 49, "target_start_line": 146, "target_confidence": 46}, {"target_end_line": 99, "source_start_line": 117, "source_end_line": 128, "source_confidence": 49, "target_start_line": 88, "target_confidence": 46}, {"target_end_line": 117, "source_start_line": 133, "source_end_line": 147, "source_confidence": 49, "target_start_line": 103, "target_confidence": 46}, {"target_end_line": 205, "source_start_line": 57, "source_end_line": 66, "source_confidence": 49, "target_start_line": 196, "target_confidence": 46}, {"target_end_line": 224, "source_start_line": 96, "source_end_line": 103, "source_confidence": 49, "target_start_line": 217, "target_confidence": 46}, {"target_end_line": 174, "source_start_line": 198, "source_end_line": 208, "source_confidence": 49, "target_start_line": 162, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 24, "source_end_line": 30, "source_confidence": 49, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 193, "source_start_line": 39, "source_end_line": 53, "source_confidence": 49, "target_start_line": 181, "target_confidence": 46}, {"target_end_line": 216, "source_start_line": 76, "source_end_line": 86, "source_confidence": 49, "target_start_line": 206, "target_confidence": 46}, {"target_end_line": 124, "source_start_line": 162, "source_end_line": 169, "source_confidence": 49, "target_start_line": 117, "target_confidence": 46}, {"target_end_line": 156, "source_start_line": 184, "source_end_line": 192, "source_confidence": 49, "target_start_line": 146, "target_confidence": 46}, {"target_end_line": 99, "source_start_line": 117, "source_end_line": 128, "source_confidence": 49, "target_start_line": 88, "target_confidence": 46}, {"target_end_line": 117, "source_start_line": 133, "source_end_line": 147, "source_confidence": 49, "target_start_line": 103, "target_confidence": 46}, {"target_end_line": 205, "source_start_line": 57, "source_end_line": 66, "source_confidence": 49, "target_start_line": 196, "target_confidence": 46}, {"target_end_line": 224, "source_start_line": 96, "source_end_line": 103, "source_confidence": 49, "target_start_line": 217, "target_confidence": 46}, {"target_end_line": 174, "source_start_line": 198, "source_end_line": 208, "source_confidence": 49, "target_start_line": 162, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 24, "source_end_line": 30, "source_confidence": 49, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 193, "source_start_line": 39, "source_end_line": 53, "source_confidence": 49, "target_start_line": 181, "target_confidence": 46}, {"target_end_line": 216, "source_start_line": 76, "source_end_line": 86, "source_confidence": 49, "target_start_line": 206, "target_confidence": 46}, {"target_end_line": 124, "source_start_line": 162, "source_end_line": 169, "source_confidence": 49, "target_start_line": 117, "target_confidence": 46}, {"target_end_line": 156, "source_start_line": 184, "source_end_line": 192, "source_confidence": 49, "target_start_line": 146, "target_confidence": 46}, {"target_end_line": 99, "source_start_line": 117, "source_end_line": 128, "source_confidence": 49, "target_start_line": 88, "target_confidence": 46}, {"target_end_line": 117, "source_start_line": 133, "source_end_line": 147, "source_confidence": 49, "target_start_line": 103, "target_confidence": 46}, {"target_end_line": 205, "source_start_line": 57, "source_end_line": 66, "source_confidence": 49, "target_start_line": 196, "target_confidence": 46}, {"target_end_line": 224, "source_start_line": 96, "source_end_line": 103, "source_confidence": 49, "target_start_line": 217, "target_confidence": 46}, {"target_end_line": 174, "source_start_line": 198, "source_end_line": 208, "source_confidence": 49, "target_start_line": 162, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 24, "source_end_line": 30, "source_confidence": 49, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 193, "source_start_line": 39, "source_end_line": 53, "source_confidence": 49, "target_start_line": 181, "target_confidence": 46}, {"target_end_line": 216, "source_start_line": 76, "source_end_line": 86, "source_confidence": 49, "target_start_line": 206, "target_confidence": 46}, {"target_end_line": 124, "source_start_line": 162, "source_end_line": 169, "source_confidence": 49, "target_start_line": 117, "target_confidence": 46}, {"target_end_line": 156, "source_start_line": 184, "source_end_line": 192, "source_confidence": 49, "target_start_line": 146, "target_confidence": 46}, {"target_end_line": 99, "source_start_line": 117, "source_end_line": 128, "source_confidence": 49, "target_start_line": 88, "target_confidence": 46}, {"target_end_line": 117, "source_start_line": 133, "source_end_line": 147, "source_confidence": 49, "target_start_line": 103, "target_confidence": 46}, {"target_end_line": 205, "source_start_line": 57, "source_end_line": 66, "source_confidence": 49, "target_start_line": 196, "target_confidence": 46}, {"target_end_line": 224, "source_start_line": 96, "source_end_line": 103, "source_confidence": 49, "target_start_line": 217, "target_confidence": 46}, {"target_end_line": 174, "source_start_line": 198, "source_end_line": 208, "source_confidence": 49, "target_start_line": 162, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 24, "source_end_line": 30, "source_confidence": 49, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 193, "source_start_line": 39, "source_end_line": 53, "source_confidence": 49, "target_start_line": 181, "target_confidence": 46}, {"target_end_line": 216, "source_start_line": 76, "source_end_line": 86, "source_confidence": 49, "target_start_line": 206, "target_confidence": 46}, {"target_end_line": 124, "source_start_line": 162, "source_end_line": 169, "source_confidence": 49, "target_start_line": 117, "target_confidence": 46}, {"target_end_line": 156, "source_start_line": 184, "source_end_line": 192, "source_confidence": 49, "target_start_line": 146, "target_confidence": 46}, {"target_end_line": 99, "source_start_line": 117, "source_end_line": 128, "source_confidence": 49, "target_start_line": 88, "target_confidence": 46}, {"target_end_line": 117, "source_start_line": 133, "source_end_line": 147, "source_confidence": 49, "target_start_line": 103, "target_confidence": 46}, {"target_end_line": 205, "source_start_line": 57, "source_end_line": 66, "source_confidence": 49, "target_start_line": 196, "target_confidence": 46}, {"target_end_line": 224, "source_start_line": 96, "source_end_line": 103, "source_confidence": 49, "target_start_line": 217, "target_confidence": 46}, {"target_end_line": 174, "source_start_line": 198, "source_end_line": 208, "source_confidence": 49, "target_start_line": 162, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 24, "source_end_line": 30, "source_confidence": 49, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 193, "source_start_line": 39, "source_end_line": 53, "source_confidence": 49, "target_start_line": 181, "target_confidence": 46}, {"target_end_line": 216, "source_start_line": 76, "source_end_line": 86, "source_confidence": 49, "target_start_line": 206, "target_confidence": 46}, {"target_end_line": 124, "source_start_line": 162, "source_end_line": 169, "source_confidence": 49, "target_start_line": 117, "target_confidence": 46}, {"target_end_line": 156, "source_start_line": 184, "source_end_line": 192, "source_confidence": 49, "target_start_line": 146, "target_confidence": 46}, {"target_end_line": 99, "source_start_line": 117, "source_end_line": 128, "source_confidence": 49, "target_start_line": 88, "target_confidence": 46}, {"target_end_line": 117, "source_start_line": 133, "source_end_line": 147, "source_confidence": 49, "target_start_line": 103, "target_confidence": 46}, {"target_end_line": 205, "source_start_line": 57, "source_end_line": 66, "source_confidence": 49, "target_start_line": 196, "target_confidence": 46}, {"target_end_line": 224, "source_start_line": 96, "source_end_line": 103, "source_confidence": 49, "target_start_line": 217, "target_confidence": 46}, {"target_end_line": 174, "source_start_line": 198, "source_end_line": 208, "source_confidence": 49, "target_start_line": 162, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 24, "source_end_line": 30, "source_confidence": 49, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 193, "source_start_line": 39, "source_end_line": 53, "source_confidence": 49, "target_start_line": 181, "target_confidence": 46}, {"target_end_line": 216, "source_start_line": 76, "source_end_line": 86, "source_confidence": 49, "target_start_line": 206, "target_confidence": 46}, {"target_end_line": 124, "source_start_line": 162, "source_end_line": 169, "source_confidence": 49, "target_start_line": 117, "target_confidence": 46}, {"target_end_line": 156, "source_start_line": 184, "source_end_line": 192, "source_confidence": 49, "target_start_line": 146, "target_confidence": 46}, {"target_end_line": 99, "source_start_line": 117, "source_end_line": 128, "source_confidence": 49, "target_start_line": 88, "target_confidence": 46}, {"target_end_line": 117, "source_start_line": 133, "source_end_line": 147, "source_confidence": 49, "target_start_line": 103, "target_confidence": 46}, {"target_end_line": 205, "source_start_line": 57, "source_end_line": 66, "source_confidence": 49, "target_start_line": 196, "target_confidence": 46}, {"target_end_line": 224, "source_start_line": 96, "source_end_line": 103, "source_confidence": 49, "target_start_line": 217, "target_confidence": 46}, {"target_end_line": 174, "source_start_line": 198, "source_end_line": 208, "source_confidence": 49, "target_start_line": 162, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 24, "source_end_line": 30, "source_confidence": 49, "target_start_line": 40, "target_confidence": 46}]}, {"source": "grybnicky_754657775a7809725130", "value": 76, "target": "ashtonburg_c9ff5176a08a7f1d55dd", "links": [{"target_end_line": 47, "source_start_line": 34, "source_end_line": 50, "source_confidence": 29, "target_start_line": 30, "target_confidence": 35}, {"target_end_line": 99, "source_start_line": 83, "source_end_line": 101, "source_confidence": 29, "target_start_line": 84, "target_confidence": 35}, {"target_end_line": 169, "source_start_line": 237, "source_end_line": 240, "source_confidence": 29, "target_start_line": 166, "target_confidence": 35}, {"target_end_line": 70, "source_start_line": 65, "source_end_line": 70, "source_confidence": 29, "target_start_line": 65, "target_confidence": 35}, {"target_end_line": 27, "source_start_line": 24, "source_end_line": 29, "source_confidence": 29, "target_start_line": 24, "target_confidence": 35}, {"target_end_line": 128, "source_start_line": 152, "source_end_line": 156, "source_confidence": 29, "target_start_line": 124, "target_confidence": 35}, {"target_end_line": 186, "source_start_line": 252, "source_end_line": 257, "source_confidence": 29, "target_start_line": 181, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 14, "source_end_line": 19, "source_confidence": 29, "target_start_line": 17, "target_confidence": 35}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 29, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 47, "source_start_line": 34, "source_end_line": 50, "source_confidence": 29, "target_start_line": 30, "target_confidence": 35}, {"target_end_line": 99, "source_start_line": 83, "source_end_line": 101, "source_confidence": 29, "target_start_line": 84, "target_confidence": 35}, {"target_end_line": 169, "source_start_line": 237, "source_end_line": 240, "source_confidence": 29, "target_start_line": 166, "target_confidence": 35}, {"target_end_line": 70, "source_start_line": 65, "source_end_line": 70, "source_confidence": 29, "target_start_line": 65, "target_confidence": 35}, {"target_end_line": 27, "source_start_line": 24, "source_end_line": 29, "source_confidence": 29, "target_start_line": 24, "target_confidence": 35}, {"target_end_line": 128, "source_start_line": 152, "source_end_line": 156, "source_confidence": 29, "target_start_line": 124, "target_confidence": 35}, {"target_end_line": 186, "source_start_line": 252, "source_end_line": 257, "source_confidence": 29, "target_start_line": 181, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 14, "source_end_line": 19, "source_confidence": 29, "target_start_line": 17, "target_confidence": 35}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 29, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 47, "source_start_line": 34, "source_end_line": 50, "source_confidence": 29, "target_start_line": 30, "target_confidence": 35}, {"target_end_line": 99, "source_start_line": 83, "source_end_line": 101, "source_confidence": 29, "target_start_line": 84, "target_confidence": 35}, {"target_end_line": 169, "source_start_line": 237, "source_end_line": 240, "source_confidence": 29, "target_start_line": 166, "target_confidence": 35}, {"target_end_line": 70, "source_start_line": 65, "source_end_line": 70, "source_confidence": 29, "target_start_line": 65, "target_confidence": 35}, {"target_end_line": 27, "source_start_line": 24, "source_end_line": 29, "source_confidence": 29, "target_start_line": 24, "target_confidence": 35}, {"target_end_line": 128, "source_start_line": 152, "source_end_line": 156, "source_confidence": 29, "target_start_line": 124, "target_confidence": 35}, {"target_end_line": 186, "source_start_line": 252, "source_end_line": 257, "source_confidence": 29, "target_start_line": 181, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 14, "source_end_line": 19, "source_confidence": 29, "target_start_line": 17, "target_confidence": 35}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 29, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 47, "source_start_line": 34, "source_end_line": 50, "source_confidence": 29, "target_start_line": 30, "target_confidence": 35}, {"target_end_line": 99, "source_start_line": 83, "source_end_line": 101, "source_confidence": 29, "target_start_line": 84, "target_confidence": 35}, {"target_end_line": 169, "source_start_line": 237, "source_end_line": 240, "source_confidence": 29, "target_start_line": 166, "target_confidence": 35}, {"target_end_line": 70, "source_start_line": 65, "source_end_line": 70, "source_confidence": 29, "target_start_line": 65, "target_confidence": 35}, {"target_end_line": 27, "source_start_line": 24, "source_end_line": 29, "source_confidence": 29, "target_start_line": 24, "target_confidence": 35}, {"target_end_line": 128, "source_start_line": 152, "source_end_line": 156, "source_confidence": 29, "target_start_line": 124, "target_confidence": 35}, {"target_end_line": 186, "source_start_line": 252, "source_end_line": 257, "source_confidence": 29, "target_start_line": 181, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 14, "source_end_line": 19, "source_confidence": 29, "target_start_line": 17, "target_confidence": 35}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 29, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 47, "source_start_line": 34, "source_end_line": 50, "source_confidence": 29, "target_start_line": 30, "target_confidence": 35}, {"target_end_line": 99, "source_start_line": 83, "source_end_line": 101, "source_confidence": 29, "target_start_line": 84, "target_confidence": 35}, {"target_end_line": 169, "source_start_line": 237, "source_end_line": 240, "source_confidence": 29, "target_start_line": 166, "target_confidence": 35}, {"target_end_line": 70, "source_start_line": 65, "source_end_line": 70, "source_confidence": 29, "target_start_line": 65, "target_confidence": 35}, {"target_end_line": 27, "source_start_line": 24, "source_end_line": 29, "source_confidence": 29, "target_start_line": 24, "target_confidence": 35}, {"target_end_line": 128, "source_start_line": 152, "source_end_line": 156, "source_confidence": 29, "target_start_line": 124, "target_confidence": 35}, {"target_end_line": 186, "source_start_line": 252, "source_end_line": 257, "source_confidence": 29, "target_start_line": 181, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 14, "source_end_line": 19, "source_confidence": 29, "target_start_line": 17, "target_confidence": 35}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 29, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 47, "source_start_line": 34, "source_end_line": 50, "source_confidence": 29, "target_start_line": 30, "target_confidence": 35}, {"target_end_line": 99, "source_start_line": 83, "source_end_line": 101, "source_confidence": 29, "target_start_line": 84, "target_confidence": 35}, {"target_end_line": 169, "source_start_line": 237, "source_end_line": 240, "source_confidence": 29, "target_start_line": 166, "target_confidence": 35}, {"target_end_line": 70, "source_start_line": 65, "source_end_line": 70, "source_confidence": 29, "target_start_line": 65, "target_confidence": 35}, {"target_end_line": 27, "source_start_line": 24, "source_end_line": 29, "source_confidence": 29, "target_start_line": 24, "target_confidence": 35}, {"target_end_line": 128, "source_start_line": 152, "source_end_line": 156, "source_confidence": 29, "target_start_line": 124, "target_confidence": 35}, {"target_end_line": 186, "source_start_line": 252, "source_end_line": 257, "source_confidence": 29, "target_start_line": 181, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 14, "source_end_line": 19, "source_confidence": 29, "target_start_line": 17, "target_confidence": 35}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 29, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 47, "source_start_line": 34, "source_end_line": 50, "source_confidence": 29, "target_start_line": 30, "target_confidence": 35}, {"target_end_line": 99, "source_start_line": 83, "source_end_line": 101, "source_confidence": 29, "target_start_line": 84, "target_confidence": 35}, {"target_end_line": 169, "source_start_line": 237, "source_end_line": 240, "source_confidence": 29, "target_start_line": 166, "target_confidence": 35}, {"target_end_line": 70, "source_start_line": 65, "source_end_line": 70, "source_confidence": 29, "target_start_line": 65, "target_confidence": 35}, {"target_end_line": 27, "source_start_line": 24, "source_end_line": 29, "source_confidence": 29, "target_start_line": 24, "target_confidence": 35}, {"target_end_line": 128, "source_start_line": 152, "source_end_line": 156, "source_confidence": 29, "target_start_line": 124, "target_confidence": 35}, {"target_end_line": 186, "source_start_line": 252, "source_end_line": 257, "source_confidence": 29, "target_start_line": 181, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 14, "source_end_line": 19, "source_confidence": 29, "target_start_line": 17, "target_confidence": 35}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 29, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 47, "source_start_line": 34, "source_end_line": 50, "source_confidence": 29, "target_start_line": 30, "target_confidence": 35}, {"target_end_line": 99, "source_start_line": 83, "source_end_line": 101, "source_confidence": 29, "target_start_line": 84, "target_confidence": 35}, {"target_end_line": 169, "source_start_line": 237, "source_end_line": 240, "source_confidence": 29, "target_start_line": 166, "target_confidence": 35}, {"target_end_line": 70, "source_start_line": 65, "source_end_line": 70, "source_confidence": 29, "target_start_line": 65, "target_confidence": 35}, {"target_end_line": 27, "source_start_line": 24, "source_end_line": 29, "source_confidence": 29, "target_start_line": 24, "target_confidence": 35}, {"target_end_line": 128, "source_start_line": 152, "source_end_line": 156, "source_confidence": 29, "target_start_line": 124, "target_confidence": 35}, {"target_end_line": 186, "source_start_line": 252, "source_end_line": 257, "source_confidence": 29, "target_start_line": 181, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 14, "source_end_line": 19, "source_confidence": 29, "target_start_line": 17, "target_confidence": 35}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 29, "target_start_line": 1, "target_confidence": 35}, {"target_end_line": 47, "source_start_line": 34, "source_end_line": 50, "source_confidence": 29, "target_start_line": 30, "target_confidence": 35}, {"target_end_line": 99, "source_start_line": 83, "source_end_line": 101, "source_confidence": 29, "target_start_line": 84, "target_confidence": 35}, {"target_end_line": 169, "source_start_line": 237, "source_end_line": 240, "source_confidence": 29, "target_start_line": 166, "target_confidence": 35}, {"target_end_line": 70, "source_start_line": 65, "source_end_line": 70, "source_confidence": 29, "target_start_line": 65, "target_confidence": 35}, {"target_end_line": 27, "source_start_line": 24, "source_end_line": 29, "source_confidence": 29, "target_start_line": 24, "target_confidence": 35}, {"target_end_line": 128, "source_start_line": 152, "source_end_line": 156, "source_confidence": 29, "target_start_line": 124, "target_confidence": 35}, {"target_end_line": 186, "source_start_line": 252, "source_end_line": 257, "source_confidence": 29, "target_start_line": 181, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 14, "source_end_line": 19, "source_confidence": 29, "target_start_line": 17, "target_confidence": 35}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 7, "source_confidence": 29, "target_start_line": 1, "target_confidence": 35}]}, {"source": "ThanisataS_da165812278897b669ed", "value": 76, "target": "grybnicky_754657775a7809725130", "links": [{"target_end_line": 50, "source_start_line": 30, "source_end_line": 47, "source_confidence": 35, "target_start_line": 34, "target_confidence": 29}, {"target_end_line": 101, "source_start_line": 83, "source_end_line": 98, "source_confidence": 35, "target_start_line": 83, "target_confidence": 29}, {"target_end_line": 240, "source_start_line": 164, "source_end_line": 167, "source_confidence": 35, "target_start_line": 237, "target_confidence": 29}, {"target_end_line": 70, "source_start_line": 64, "source_end_line": 69, "source_confidence": 35, "target_start_line": 65, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 27, "source_confidence": 35, "target_start_line": 24, "target_confidence": 29}, {"target_end_line": 156, "source_start_line": 123, "source_end_line": 127, "source_confidence": 35, "target_start_line": 152, "target_confidence": 29}, {"target_end_line": 257, "source_start_line": 179, "source_end_line": 184, "source_confidence": 35, "target_start_line": 252, "target_confidence": 29}, {"target_end_line": 19, "source_start_line": 17, "source_end_line": 21, "source_confidence": 35, "target_start_line": 14, "target_confidence": 29}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 4, "source_confidence": 35, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 50, "source_start_line": 30, "source_end_line": 47, "source_confidence": 35, "target_start_line": 34, "target_confidence": 29}, {"target_end_line": 101, "source_start_line": 83, "source_end_line": 98, "source_confidence": 35, "target_start_line": 83, "target_confidence": 29}, {"target_end_line": 240, "source_start_line": 164, "source_end_line": 167, "source_confidence": 35, "target_start_line": 237, "target_confidence": 29}, {"target_end_line": 70, "source_start_line": 64, "source_end_line": 69, "source_confidence": 35, "target_start_line": 65, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 27, "source_confidence": 35, "target_start_line": 24, "target_confidence": 29}, {"target_end_line": 156, "source_start_line": 123, "source_end_line": 127, "source_confidence": 35, "target_start_line": 152, "target_confidence": 29}, {"target_end_line": 257, "source_start_line": 179, "source_end_line": 184, "source_confidence": 35, "target_start_line": 252, "target_confidence": 29}, {"target_end_line": 19, "source_start_line": 17, "source_end_line": 21, "source_confidence": 35, "target_start_line": 14, "target_confidence": 29}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 4, "source_confidence": 35, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 50, "source_start_line": 30, "source_end_line": 47, "source_confidence": 35, "target_start_line": 34, "target_confidence": 29}, {"target_end_line": 101, "source_start_line": 83, "source_end_line": 98, "source_confidence": 35, "target_start_line": 83, "target_confidence": 29}, {"target_end_line": 240, "source_start_line": 164, "source_end_line": 167, "source_confidence": 35, "target_start_line": 237, "target_confidence": 29}, {"target_end_line": 70, "source_start_line": 64, "source_end_line": 69, "source_confidence": 35, "target_start_line": 65, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 27, "source_confidence": 35, "target_start_line": 24, "target_confidence": 29}, {"target_end_line": 156, "source_start_line": 123, "source_end_line": 127, "source_confidence": 35, "target_start_line": 152, "target_confidence": 29}, {"target_end_line": 257, "source_start_line": 179, "source_end_line": 184, "source_confidence": 35, "target_start_line": 252, "target_confidence": 29}, {"target_end_line": 19, "source_start_line": 17, "source_end_line": 21, "source_confidence": 35, "target_start_line": 14, "target_confidence": 29}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 4, "source_confidence": 35, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 50, "source_start_line": 30, "source_end_line": 47, "source_confidence": 35, "target_start_line": 34, "target_confidence": 29}, {"target_end_line": 101, "source_start_line": 83, "source_end_line": 98, "source_confidence": 35, "target_start_line": 83, "target_confidence": 29}, {"target_end_line": 240, "source_start_line": 164, "source_end_line": 167, "source_confidence": 35, "target_start_line": 237, "target_confidence": 29}, {"target_end_line": 70, "source_start_line": 64, "source_end_line": 69, "source_confidence": 35, "target_start_line": 65, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 27, "source_confidence": 35, "target_start_line": 24, "target_confidence": 29}, {"target_end_line": 156, "source_start_line": 123, "source_end_line": 127, "source_confidence": 35, "target_start_line": 152, "target_confidence": 29}, {"target_end_line": 257, "source_start_line": 179, "source_end_line": 184, "source_confidence": 35, "target_start_line": 252, "target_confidence": 29}, {"target_end_line": 19, "source_start_line": 17, "source_end_line": 21, "source_confidence": 35, "target_start_line": 14, "target_confidence": 29}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 4, "source_confidence": 35, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 50, "source_start_line": 30, "source_end_line": 47, "source_confidence": 35, "target_start_line": 34, "target_confidence": 29}, {"target_end_line": 101, "source_start_line": 83, "source_end_line": 98, "source_confidence": 35, "target_start_line": 83, "target_confidence": 29}, {"target_end_line": 240, "source_start_line": 164, "source_end_line": 167, "source_confidence": 35, "target_start_line": 237, "target_confidence": 29}, {"target_end_line": 70, "source_start_line": 64, "source_end_line": 69, "source_confidence": 35, "target_start_line": 65, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 27, "source_confidence": 35, "target_start_line": 24, "target_confidence": 29}, {"target_end_line": 156, "source_start_line": 123, "source_end_line": 127, "source_confidence": 35, "target_start_line": 152, "target_confidence": 29}, {"target_end_line": 257, "source_start_line": 179, "source_end_line": 184, "source_confidence": 35, "target_start_line": 252, "target_confidence": 29}, {"target_end_line": 19, "source_start_line": 17, "source_end_line": 21, "source_confidence": 35, "target_start_line": 14, "target_confidence": 29}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 4, "source_confidence": 35, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 50, "source_start_line": 30, "source_end_line": 47, "source_confidence": 35, "target_start_line": 34, "target_confidence": 29}, {"target_end_line": 101, "source_start_line": 83, "source_end_line": 98, "source_confidence": 35, "target_start_line": 83, "target_confidence": 29}, {"target_end_line": 240, "source_start_line": 164, "source_end_line": 167, "source_confidence": 35, "target_start_line": 237, "target_confidence": 29}, {"target_end_line": 70, "source_start_line": 64, "source_end_line": 69, "source_confidence": 35, "target_start_line": 65, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 27, "source_confidence": 35, "target_start_line": 24, "target_confidence": 29}, {"target_end_line": 156, "source_start_line": 123, "source_end_line": 127, "source_confidence": 35, "target_start_line": 152, "target_confidence": 29}, {"target_end_line": 257, "source_start_line": 179, "source_end_line": 184, "source_confidence": 35, "target_start_line": 252, "target_confidence": 29}, {"target_end_line": 19, "source_start_line": 17, "source_end_line": 21, "source_confidence": 35, "target_start_line": 14, "target_confidence": 29}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 4, "source_confidence": 35, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 50, "source_start_line": 30, "source_end_line": 47, "source_confidence": 35, "target_start_line": 34, "target_confidence": 29}, {"target_end_line": 101, "source_start_line": 83, "source_end_line": 98, "source_confidence": 35, "target_start_line": 83, "target_confidence": 29}, {"target_end_line": 240, "source_start_line": 164, "source_end_line": 167, "source_confidence": 35, "target_start_line": 237, "target_confidence": 29}, {"target_end_line": 70, "source_start_line": 64, "source_end_line": 69, "source_confidence": 35, "target_start_line": 65, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 27, "source_confidence": 35, "target_start_line": 24, "target_confidence": 29}, {"target_end_line": 156, "source_start_line": 123, "source_end_line": 127, "source_confidence": 35, "target_start_line": 152, "target_confidence": 29}, {"target_end_line": 257, "source_start_line": 179, "source_end_line": 184, "source_confidence": 35, "target_start_line": 252, "target_confidence": 29}, {"target_end_line": 19, "source_start_line": 17, "source_end_line": 21, "source_confidence": 35, "target_start_line": 14, "target_confidence": 29}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 4, "source_confidence": 35, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 50, "source_start_line": 30, "source_end_line": 47, "source_confidence": 35, "target_start_line": 34, "target_confidence": 29}, {"target_end_line": 101, "source_start_line": 83, "source_end_line": 98, "source_confidence": 35, "target_start_line": 83, "target_confidence": 29}, {"target_end_line": 240, "source_start_line": 164, "source_end_line": 167, "source_confidence": 35, "target_start_line": 237, "target_confidence": 29}, {"target_end_line": 70, "source_start_line": 64, "source_end_line": 69, "source_confidence": 35, "target_start_line": 65, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 27, "source_confidence": 35, "target_start_line": 24, "target_confidence": 29}, {"target_end_line": 156, "source_start_line": 123, "source_end_line": 127, "source_confidence": 35, "target_start_line": 152, "target_confidence": 29}, {"target_end_line": 257, "source_start_line": 179, "source_end_line": 184, "source_confidence": 35, "target_start_line": 252, "target_confidence": 29}, {"target_end_line": 19, "source_start_line": 17, "source_end_line": 21, "source_confidence": 35, "target_start_line": 14, "target_confidence": 29}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 4, "source_confidence": 35, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 50, "source_start_line": 30, "source_end_line": 47, "source_confidence": 35, "target_start_line": 34, "target_confidence": 29}, {"target_end_line": 101, "source_start_line": 83, "source_end_line": 98, "source_confidence": 35, "target_start_line": 83, "target_confidence": 29}, {"target_end_line": 240, "source_start_line": 164, "source_end_line": 167, "source_confidence": 35, "target_start_line": 237, "target_confidence": 29}, {"target_end_line": 70, "source_start_line": 64, "source_end_line": 69, "source_confidence": 35, "target_start_line": 65, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 27, "source_confidence": 35, "target_start_line": 24, "target_confidence": 29}, {"target_end_line": 156, "source_start_line": 123, "source_end_line": 127, "source_confidence": 35, "target_start_line": 152, "target_confidence": 29}, {"target_end_line": 257, "source_start_line": 179, "source_end_line": 184, "source_confidence": 35, "target_start_line": 252, "target_confidence": 29}, {"target_end_line": 19, "source_start_line": 17, "source_end_line": 21, "source_confidence": 35, "target_start_line": 14, "target_confidence": 29}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 4, "source_confidence": 35, "target_start_line": 1, "target_confidence": 29}]}, {"source": "sumanthpopuri567_3924dc925c242935ec6a", "value": 101, "target": "Mrajyalakshmi_df5a31dd7db44dbd142f", "links": [{"target_end_line": 17, "source_start_line": 1, "source_end_line": 17, "source_confidence": 82, "target_start_line": 1, "target_confidence": 13}, {"target_end_line": 33, "source_start_line": 34, "source_end_line": 49, "source_confidence": 82, "target_start_line": 18, "target_confidence": 13}, {"target_end_line": 73, "source_start_line": 67, "source_end_line": 91, "source_confidence": 82, "target_start_line": 49, "target_confidence": 13}, {"target_end_line": 103, "source_start_line": 107, "source_end_line": 121, "source_confidence": 82, "target_start_line": 89, "target_confidence": 13}, {"target_end_line": 84, "source_start_line": 91, "source_end_line": 102, "source_confidence": 82, "target_start_line": 73, "target_confidence": 13}, {"target_end_line": 49, "source_start_line": 56, "source_end_line": 67, "source_confidence": 82, "target_start_line": 38, "target_confidence": 13}, {"target_end_line": 38, "source_start_line": 53, "source_end_line": 56, "source_confidence": 82, "target_start_line": 36, "target_confidence": 13}, {"target_end_line": 17, "source_start_line": 1, "source_end_line": 17, "source_confidence": 82, "target_start_line": 1, "target_confidence": 13}, {"target_end_line": 33, "source_start_line": 34, "source_end_line": 49, "source_confidence": 82, "target_start_line": 18, "target_confidence": 13}, {"target_end_line": 73, "source_start_line": 67, "source_end_line": 91, "source_confidence": 82, "target_start_line": 49, "target_confidence": 13}, {"target_end_line": 103, "source_start_line": 107, "source_end_line": 121, "source_confidence": 82, "target_start_line": 89, "target_confidence": 13}, {"target_end_line": 84, "source_start_line": 91, "source_end_line": 102, "source_confidence": 82, "target_start_line": 73, "target_confidence": 13}, {"target_end_line": 49, "source_start_line": 56, "source_end_line": 67, "source_confidence": 82, "target_start_line": 38, "target_confidence": 13}, {"target_end_line": 38, "source_start_line": 53, "source_end_line": 56, "source_confidence": 82, "target_start_line": 36, "target_confidence": 13}, {"target_end_line": 17, "source_start_line": 1, "source_end_line": 17, "source_confidence": 82, "target_start_line": 1, "target_confidence": 13}, {"target_end_line": 33, "source_start_line": 34, "source_end_line": 49, "source_confidence": 82, "target_start_line": 18, "target_confidence": 13}, {"target_end_line": 73, "source_start_line": 67, "source_end_line": 91, "source_confidence": 82, "target_start_line": 49, "target_confidence": 13}, {"target_end_line": 103, "source_start_line": 107, "source_end_line": 121, "source_confidence": 82, "target_start_line": 89, "target_confidence": 13}, {"target_end_line": 84, "source_start_line": 91, "source_end_line": 102, "source_confidence": 82, "target_start_line": 73, "target_confidence": 13}, {"target_end_line": 49, "source_start_line": 56, "source_end_line": 67, "source_confidence": 82, "target_start_line": 38, "target_confidence": 13}, {"target_end_line": 38, "source_start_line": 53, "source_end_line": 56, "source_confidence": 82, "target_start_line": 36, "target_confidence": 13}, {"target_end_line": 17, "source_start_line": 1, "source_end_line": 17, "source_confidence": 82, "target_start_line": 1, "target_confidence": 13}, {"target_end_line": 33, "source_start_line": 34, "source_end_line": 49, "source_confidence": 82, "target_start_line": 18, "target_confidence": 13}, {"target_end_line": 73, "source_start_line": 67, "source_end_line": 91, "source_confidence": 82, "target_start_line": 49, "target_confidence": 13}, {"target_end_line": 103, "source_start_line": 107, "source_end_line": 121, "source_confidence": 82, "target_start_line": 89, "target_confidence": 13}, {"target_end_line": 84, "source_start_line": 91, "source_end_line": 102, "source_confidence": 82, "target_start_line": 73, "target_confidence": 13}, {"target_end_line": 49, "source_start_line": 56, "source_end_line": 67, "source_confidence": 82, "target_start_line": 38, "target_confidence": 13}, {"target_end_line": 38, "source_start_line": 53, "source_end_line": 56, "source_confidence": 82, "target_start_line": 36, "target_confidence": 13}, {"target_end_line": 17, "source_start_line": 1, "source_end_line": 17, "source_confidence": 82, "target_start_line": 1, "target_confidence": 13}, {"target_end_line": 33, "source_start_line": 34, "source_end_line": 49, "source_confidence": 82, "target_start_line": 18, "target_confidence": 13}, {"target_end_line": 73, "source_start_line": 67, "source_end_line": 91, "source_confidence": 82, "target_start_line": 49, "target_confidence": 13}, {"target_end_line": 103, "source_start_line": 107, "source_end_line": 121, "source_confidence": 82, "target_start_line": 89, "target_confidence": 13}, {"target_end_line": 84, "source_start_line": 91, "source_end_line": 102, "source_confidence": 82, "target_start_line": 73, "target_confidence": 13}, {"target_end_line": 49, "source_start_line": 56, "source_end_line": 67, "source_confidence": 82, "target_start_line": 38, "target_confidence": 13}, {"target_end_line": 38, "source_start_line": 53, "source_end_line": 56, "source_confidence": 82, "target_start_line": 36, "target_confidence": 13}, {"target_end_line": 17, "source_start_line": 1, "source_end_line": 17, "source_confidence": 82, "target_start_line": 1, "target_confidence": 13}, {"target_end_line": 33, "source_start_line": 34, "source_end_line": 49, "source_confidence": 82, "target_start_line": 18, "target_confidence": 13}, {"target_end_line": 73, "source_start_line": 67, "source_end_line": 91, "source_confidence": 82, "target_start_line": 49, "target_confidence": 13}, {"target_end_line": 103, "source_start_line": 107, "source_end_line": 121, "source_confidence": 82, "target_start_line": 89, "target_confidence": 13}, {"target_end_line": 84, "source_start_line": 91, "source_end_line": 102, "source_confidence": 82, "target_start_line": 73, "target_confidence": 13}, {"target_end_line": 49, "source_start_line": 56, "source_end_line": 67, "source_confidence": 82, "target_start_line": 38, "target_confidence": 13}, {"target_end_line": 38, "source_start_line": 53, "source_end_line": 56, "source_confidence": 82, "target_start_line": 36, "target_confidence": 13}, {"target_end_line": 17, "source_start_line": 1, "source_end_line": 17, "source_confidence": 82, "target_start_line": 1, "target_confidence": 13}, {"target_end_line": 33, "source_start_line": 34, "source_end_line": 49, "source_confidence": 82, "target_start_line": 18, "target_confidence": 13}, {"target_end_line": 73, "source_start_line": 67, "source_end_line": 91, "source_confidence": 82, "target_start_line": 49, "target_confidence": 13}, {"target_end_line": 103, "source_start_line": 107, "source_end_line": 121, "source_confidence": 82, "target_start_line": 89, "target_confidence": 13}, {"target_end_line": 84, "source_start_line": 91, "source_end_line": 102, "source_confidence": 82, "target_start_line": 73, "target_confidence": 13}, {"target_end_line": 49, "source_start_line": 56, "source_end_line": 67, "source_confidence": 82, "target_start_line": 38, "target_confidence": 13}, {"target_end_line": 38, "source_start_line": 53, "source_end_line": 56, "source_confidence": 82, "target_start_line": 36, "target_confidence": 13}]}, {"source": "evansodu_fd0005b1df148238da1e", "value": 71, "target": "sumanthpopuri567_3924dc925c242935ec6a", "links": [{"target_end_line": 16, "source_start_line": 11, "source_end_line": 17, "source_confidence": 21, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 91, "source_confidence": 21, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 38, "source_confidence": 21, "target_start_line": 35, "target_confidence": 57}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 21, "target_start_line": 6, "target_confidence": 57}, {"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 21, "target_start_line": 91, "target_confidence": 57}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 21, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 65, "source_start_line": 58, "source_end_line": 66, "source_confidence": 21, "target_start_line": 57, "target_confidence": 57}, {"target_end_line": 77, "source_start_line": 70, "source_end_line": 78, "source_confidence": 21, "target_start_line": 69, "target_confidence": 57}, {"target_end_line": 45, "source_start_line": 41, "source_end_line": 46, "source_confidence": 21, "target_start_line": 41, "target_confidence": 57}, {"target_end_line": 119, "source_start_line": 115, "source_end_line": 120, "source_confidence": 21, "target_start_line": 114, "target_confidence": 57}, {"target_end_line": 16, "source_start_line": 11, "source_end_line": 17, "source_confidence": 21, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 91, "source_confidence": 21, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 38, "source_confidence": 21, "target_start_line": 35, "target_confidence": 57}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 21, "target_start_line": 6, "target_confidence": 57}, {"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 21, "target_start_line": 91, "target_confidence": 57}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 21, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 65, "source_start_line": 58, "source_end_line": 66, "source_confidence": 21, "target_start_line": 57, "target_confidence": 57}, {"target_end_line": 77, "source_start_line": 70, "source_end_line": 78, "source_confidence": 21, "target_start_line": 69, "target_confidence": 57}, {"target_end_line": 45, "source_start_line": 41, "source_end_line": 46, "source_confidence": 21, "target_start_line": 41, "target_confidence": 57}, {"target_end_line": 119, "source_start_line": 115, "source_end_line": 120, "source_confidence": 21, "target_start_line": 114, "target_confidence": 57}, {"target_end_line": 16, "source_start_line": 11, "source_end_line": 17, "source_confidence": 21, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 91, "source_confidence": 21, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 38, "source_confidence": 21, "target_start_line": 35, "target_confidence": 57}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 21, "target_start_line": 6, "target_confidence": 57}, {"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 21, "target_start_line": 91, "target_confidence": 57}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 21, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 65, "source_start_line": 58, "source_end_line": 66, "source_confidence": 21, "target_start_line": 57, "target_confidence": 57}, {"target_end_line": 77, "source_start_line": 70, "source_end_line": 78, "source_confidence": 21, "target_start_line": 69, "target_confidence": 57}, {"target_end_line": 45, "source_start_line": 41, "source_end_line": 46, "source_confidence": 21, "target_start_line": 41, "target_confidence": 57}, {"target_end_line": 119, "source_start_line": 115, "source_end_line": 120, "source_confidence": 21, "target_start_line": 114, "target_confidence": 57}, {"target_end_line": 16, "source_start_line": 11, "source_end_line": 17, "source_confidence": 21, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 91, "source_confidence": 21, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 38, "source_confidence": 21, "target_start_line": 35, "target_confidence": 57}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 21, "target_start_line": 6, "target_confidence": 57}, {"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 21, "target_start_line": 91, "target_confidence": 57}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 21, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 65, "source_start_line": 58, "source_end_line": 66, "source_confidence": 21, "target_start_line": 57, "target_confidence": 57}, {"target_end_line": 77, "source_start_line": 70, "source_end_line": 78, "source_confidence": 21, "target_start_line": 69, "target_confidence": 57}, {"target_end_line": 45, "source_start_line": 41, "source_end_line": 46, "source_confidence": 21, "target_start_line": 41, "target_confidence": 57}, {"target_end_line": 119, "source_start_line": 115, "source_end_line": 120, "source_confidence": 21, "target_start_line": 114, "target_confidence": 57}, {"target_end_line": 16, "source_start_line": 11, "source_end_line": 17, "source_confidence": 21, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 91, "source_confidence": 21, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 38, "source_confidence": 21, "target_start_line": 35, "target_confidence": 57}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 21, "target_start_line": 6, "target_confidence": 57}, {"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 21, "target_start_line": 91, "target_confidence": 57}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 21, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 65, "source_start_line": 58, "source_end_line": 66, "source_confidence": 21, "target_start_line": 57, "target_confidence": 57}, {"target_end_line": 77, "source_start_line": 70, "source_end_line": 78, "source_confidence": 21, "target_start_line": 69, "target_confidence": 57}, {"target_end_line": 45, "source_start_line": 41, "source_end_line": 46, "source_confidence": 21, "target_start_line": 41, "target_confidence": 57}, {"target_end_line": 119, "source_start_line": 115, "source_end_line": 120, "source_confidence": 21, "target_start_line": 114, "target_confidence": 57}, {"target_end_line": 16, "source_start_line": 11, "source_end_line": 17, "source_confidence": 21, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 91, "source_confidence": 21, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 38, "source_confidence": 21, "target_start_line": 35, "target_confidence": 57}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 21, "target_start_line": 6, "target_confidence": 57}, {"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 21, "target_start_line": 91, "target_confidence": 57}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 21, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 65, "source_start_line": 58, "source_end_line": 66, "source_confidence": 21, "target_start_line": 57, "target_confidence": 57}, {"target_end_line": 77, "source_start_line": 70, "source_end_line": 78, "source_confidence": 21, "target_start_line": 69, "target_confidence": 57}, {"target_end_line": 45, "source_start_line": 41, "source_end_line": 46, "source_confidence": 21, "target_start_line": 41, "target_confidence": 57}, {"target_end_line": 119, "source_start_line": 115, "source_end_line": 120, "source_confidence": 21, "target_start_line": 114, "target_confidence": 57}, {"target_end_line": 16, "source_start_line": 11, "source_end_line": 17, "source_confidence": 21, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 91, "source_confidence": 21, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 38, "source_confidence": 21, "target_start_line": 35, "target_confidence": 57}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 21, "target_start_line": 6, "target_confidence": 57}, {"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 21, "target_start_line": 91, "target_confidence": 57}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 21, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 65, "source_start_line": 58, "source_end_line": 66, "source_confidence": 21, "target_start_line": 57, "target_confidence": 57}, {"target_end_line": 77, "source_start_line": 70, "source_end_line": 78, "source_confidence": 21, "target_start_line": 69, "target_confidence": 57}, {"target_end_line": 45, "source_start_line": 41, "source_end_line": 46, "source_confidence": 21, "target_start_line": 41, "target_confidence": 57}, {"target_end_line": 119, "source_start_line": 115, "source_end_line": 120, "source_confidence": 21, "target_start_line": 114, "target_confidence": 57}, {"target_end_line": 16, "source_start_line": 11, "source_end_line": 17, "source_confidence": 21, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 91, "source_confidence": 21, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 38, "source_confidence": 21, "target_start_line": 35, "target_confidence": 57}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 21, "target_start_line": 6, "target_confidence": 57}, {"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 21, "target_start_line": 91, "target_confidence": 57}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 21, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 65, "source_start_line": 58, "source_end_line": 66, "source_confidence": 21, "target_start_line": 57, "target_confidence": 57}, {"target_end_line": 77, "source_start_line": 70, "source_end_line": 78, "source_confidence": 21, "target_start_line": 69, "target_confidence": 57}, {"target_end_line": 45, "source_start_line": 41, "source_end_line": 46, "source_confidence": 21, "target_start_line": 41, "target_confidence": 57}, {"target_end_line": 119, "source_start_line": 115, "source_end_line": 120, "source_confidence": 21, "target_start_line": 114, "target_confidence": 57}, {"target_end_line": 16, "source_start_line": 11, "source_end_line": 17, "source_confidence": 21, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 91, "source_confidence": 21, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 38, "source_confidence": 21, "target_start_line": 35, "target_confidence": 57}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 21, "target_start_line": 6, "target_confidence": 57}, {"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 21, "target_start_line": 91, "target_confidence": 57}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 21, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 65, "source_start_line": 58, "source_end_line": 66, "source_confidence": 21, "target_start_line": 57, "target_confidence": 57}, {"target_end_line": 77, "source_start_line": 70, "source_end_line": 78, "source_confidence": 21, "target_start_line": 69, "target_confidence": 57}, {"target_end_line": 45, "source_start_line": 41, "source_end_line": 46, "source_confidence": 21, "target_start_line": 41, "target_confidence": 57}, {"target_end_line": 119, "source_start_line": 115, "source_end_line": 120, "source_confidence": 21, "target_start_line": 114, "target_confidence": 57}, {"target_end_line": 16, "source_start_line": 11, "source_end_line": 17, "source_confidence": 21, "target_start_line": 11, "target_confidence": 57}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 91, "source_confidence": 21, "target_start_line": 79, "target_confidence": 57}, {"target_end_line": 39, "source_start_line": 34, "source_end_line": 38, "source_confidence": 21, "target_start_line": 35, "target_confidence": 57}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 9, "source_confidence": 21, "target_start_line": 6, "target_confidence": 57}, {"target_end_line": 99, "source_start_line": 91, "source_end_line": 100, "source_confidence": 21, "target_start_line": 91, "target_confidence": 57}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 21, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 65, "source_start_line": 58, "source_end_line": 66, "source_confidence": 21, "target_start_line": 57, "target_confidence": 57}, {"target_end_line": 77, "source_start_line": 70, "source_end_line": 78, "source_confidence": 21, "target_start_line": 69, "target_confidence": 57}, {"target_end_line": 45, "source_start_line": 41, "source_end_line": 46, "source_confidence": 21, "target_start_line": 41, "target_confidence": 57}, {"target_end_line": 119, "source_start_line": 115, "source_end_line": 120, "source_confidence": 21, "target_start_line": 114, "target_confidence": 57}]}, {"source": "deckerlr_90d8928adf0098720bc9", "value": 66, "target": "evansodu_fd0005b1df148238da1e", "links": [{"target_end_line": 86, "source_start_line": 34, "source_end_line": 59, "source_confidence": 53, "target_start_line": 58, "target_confidence": 14}, {"target_end_line": 120, "source_start_line": 77, "source_end_line": 90, "source_confidence": 53, "target_start_line": 105, "target_confidence": 14}, {"target_end_line": 38, "source_start_line": 21, "source_end_line": 25, "source_confidence": 53, "target_start_line": 34, "target_confidence": 14}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 53, "target_start_line": 1, "target_confidence": 14}, {"target_end_line": 103, "source_start_line": 68, "source_end_line": 75, "source_confidence": 53, "target_start_line": 94, "target_confidence": 14}, {"target_end_line": 86, "source_start_line": 34, "source_end_line": 59, "source_confidence": 53, "target_start_line": 58, "target_confidence": 14}, {"target_end_line": 120, "source_start_line": 77, "source_end_line": 90, "source_confidence": 53, "target_start_line": 105, "target_confidence": 14}, {"target_end_line": 38, "source_start_line": 21, "source_end_line": 25, "source_confidence": 53, "target_start_line": 34, "target_confidence": 14}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 53, "target_start_line": 1, "target_confidence": 14}, {"target_end_line": 103, "source_start_line": 68, "source_end_line": 75, "source_confidence": 53, "target_start_line": 94, "target_confidence": 14}, {"target_end_line": 86, "source_start_line": 34, "source_end_line": 59, "source_confidence": 53, "target_start_line": 58, "target_confidence": 14}, {"target_end_line": 120, "source_start_line": 77, "source_end_line": 90, "source_confidence": 53, "target_start_line": 105, "target_confidence": 14}, {"target_end_line": 38, "source_start_line": 21, "source_end_line": 25, "source_confidence": 53, "target_start_line": 34, "target_confidence": 14}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 53, "target_start_line": 1, "target_confidence": 14}, {"target_end_line": 103, "source_start_line": 68, "source_end_line": 75, "source_confidence": 53, "target_start_line": 94, "target_confidence": 14}, {"target_end_line": 86, "source_start_line": 34, "source_end_line": 59, "source_confidence": 53, "target_start_line": 58, "target_confidence": 14}, {"target_end_line": 120, "source_start_line": 77, "source_end_line": 90, "source_confidence": 53, "target_start_line": 105, "target_confidence": 14}, {"target_end_line": 38, "source_start_line": 21, "source_end_line": 25, "source_confidence": 53, "target_start_line": 34, "target_confidence": 14}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 53, "target_start_line": 1, "target_confidence": 14}, {"target_end_line": 103, "source_start_line": 68, "source_end_line": 75, "source_confidence": 53, "target_start_line": 94, "target_confidence": 14}, {"target_end_line": 86, "source_start_line": 34, "source_end_line": 59, "source_confidence": 53, "target_start_line": 58, "target_confidence": 14}, {"target_end_line": 120, "source_start_line": 77, "source_end_line": 90, "source_confidence": 53, "target_start_line": 105, "target_confidence": 14}, {"target_end_line": 38, "source_start_line": 21, "source_end_line": 25, "source_confidence": 53, "target_start_line": 34, "target_confidence": 14}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 53, "target_start_line": 1, "target_confidence": 14}, {"target_end_line": 103, "source_start_line": 68, "source_end_line": 75, "source_confidence": 53, "target_start_line": 94, "target_confidence": 14}]}, {"source": "Bcohn_45bcd1eb1394898ceaf8", "value": 76, "target": "deckerlr_90d8928adf0098720bc9", "links": [{"target_end_line": 56, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 34, "target_confidence": 68}, {"target_end_line": 92, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 75, "target_confidence": 68}, {"target_end_line": 30, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 21, "target_confidence": 68}, {"target_end_line": 9, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 2, "target_confidence": 68}, {"target_end_line": 61, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 56, "target_confidence": 68}, {"target_end_line": 56, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 34, "target_confidence": 68}, {"target_end_line": 92, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 75, "target_confidence": 68}, {"target_end_line": 30, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 21, "target_confidence": 68}, {"target_end_line": 9, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 2, "target_confidence": 68}, {"target_end_line": 61, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 56, "target_confidence": 68}, {"target_end_line": 56, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 34, "target_confidence": 68}, {"target_end_line": 92, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 75, "target_confidence": 68}, {"target_end_line": 30, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 21, "target_confidence": 68}, {"target_end_line": 9, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 2, "target_confidence": 68}, {"target_end_line": 61, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 56, "target_confidence": 68}, {"target_end_line": 56, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 34, "target_confidence": 68}, {"target_end_line": 92, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 75, "target_confidence": 68}, {"target_end_line": 30, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 21, "target_confidence": 68}, {"target_end_line": 9, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 2, "target_confidence": 68}, {"target_end_line": 61, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 56, "target_confidence": 68}, {"target_end_line": 56, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 34, "target_confidence": 68}, {"target_end_line": 92, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 75, "target_confidence": 68}, {"target_end_line": 30, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 21, "target_confidence": 68}, {"target_end_line": 9, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 2, "target_confidence": 68}, {"target_end_line": 61, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 56, "target_confidence": 68}]}, {"source": "Bcohn_45bcd1eb1394898ceaf8", "value": 76, "target": "deckerlr_1041b4846396a1af3b27", "links": [{"target_end_line": 70, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 46, "target_confidence": 68}, {"target_end_line": 111, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 90, "target_confidence": 68}, {"target_end_line": 40, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 13, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 3, "target_confidence": 68}, {"target_end_line": 75, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 70, "target_confidence": 68}, {"target_end_line": 70, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 46, "target_confidence": 68}, {"target_end_line": 111, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 90, "target_confidence": 68}, {"target_end_line": 40, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 13, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 3, "target_confidence": 68}, {"target_end_line": 75, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 70, "target_confidence": 68}, {"target_end_line": 70, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 46, "target_confidence": 68}, {"target_end_line": 111, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 90, "target_confidence": 68}, {"target_end_line": 40, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 13, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 3, "target_confidence": 68}, {"target_end_line": 75, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 70, "target_confidence": 68}, {"target_end_line": 70, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 46, "target_confidence": 68}, {"target_end_line": 111, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 90, "target_confidence": 68}, {"target_end_line": 40, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 13, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 3, "target_confidence": 68}, {"target_end_line": 75, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 70, "target_confidence": 68}, {"target_end_line": 70, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 46, "target_confidence": 68}, {"target_end_line": 111, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 90, "target_confidence": 68}, {"target_end_line": 40, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 13, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 3, "target_confidence": 68}, {"target_end_line": 75, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 70, "target_confidence": 68}]}, {"source": "Bcohn_45bcd1eb1394898ceaf8", "value": 76, "target": "deckerlr_4fe62e3b157c5db54deb", "links": [{"target_end_line": 70, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 46, "target_confidence": 68}, {"target_end_line": 111, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 90, "target_confidence": 68}, {"target_end_line": 40, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 13, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 3, "target_confidence": 68}, {"target_end_line": 75, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 70, "target_confidence": 68}, {"target_end_line": 70, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 46, "target_confidence": 68}, {"target_end_line": 111, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 90, "target_confidence": 68}, {"target_end_line": 40, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 13, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 3, "target_confidence": 68}, {"target_end_line": 75, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 70, "target_confidence": 68}, {"target_end_line": 70, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 46, "target_confidence": 68}, {"target_end_line": 111, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 90, "target_confidence": 68}, {"target_end_line": 40, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 13, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 3, "target_confidence": 68}, {"target_end_line": 75, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 70, "target_confidence": 68}, {"target_end_line": 70, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 46, "target_confidence": 68}, {"target_end_line": 111, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 90, "target_confidence": 68}, {"target_end_line": 40, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 13, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 3, "target_confidence": 68}, {"target_end_line": 75, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 70, "target_confidence": 68}, {"target_end_line": 70, "source_start_line": 124, "source_end_line": 148, "source_confidence": 46, "target_start_line": 46, "target_confidence": 68}, {"target_end_line": 111, "source_start_line": 156, "source_end_line": 177, "source_confidence": 46, "target_start_line": 90, "target_confidence": 68}, {"target_end_line": 40, "source_start_line": 68, "source_end_line": 79, "source_confidence": 46, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 13, "source_start_line": 48, "source_end_line": 58, "source_confidence": 46, "target_start_line": 3, "target_confidence": 68}, {"target_end_line": 75, "source_start_line": 149, "source_end_line": 154, "source_confidence": 46, "target_start_line": 70, "target_confidence": 68}]}, {"source": "resolutionfoundation_3e88d3100ecbaed6b9a2", "value": 24, "target": "yesoreyeram_c1b07998add14ffc9d03", "links": [{"target_end_line": 34, "source_start_line": 36, "source_end_line": 40, "source_confidence": 22, "target_start_line": 28, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 22, "target_start_line": 4, "target_confidence": 44}, {"target_end_line": 40, "source_start_line": 56, "source_end_line": 59, "source_confidence": 22, "target_start_line": 37, "target_confidence": 44}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 13, "source_confidence": 22, "target_start_line": 12, "target_confidence": 44}, {"target_end_line": 19, "source_start_line": 19, "source_end_line": 25, "source_confidence": 22, "target_start_line": 16, "target_confidence": 44}, {"target_end_line": 34, "source_start_line": 36, "source_end_line": 40, "source_confidence": 22, "target_start_line": 28, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 22, "target_start_line": 4, "target_confidence": 44}, {"target_end_line": 40, "source_start_line": 56, "source_end_line": 59, "source_confidence": 22, "target_start_line": 37, "target_confidence": 44}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 13, "source_confidence": 22, "target_start_line": 12, "target_confidence": 44}, {"target_end_line": 19, "source_start_line": 19, "source_end_line": 25, "source_confidence": 22, "target_start_line": 16, "target_confidence": 44}, {"target_end_line": 34, "source_start_line": 36, "source_end_line": 40, "source_confidence": 22, "target_start_line": 28, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 22, "target_start_line": 4, "target_confidence": 44}, {"target_end_line": 40, "source_start_line": 56, "source_end_line": 59, "source_confidence": 22, "target_start_line": 37, "target_confidence": 44}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 13, "source_confidence": 22, "target_start_line": 12, "target_confidence": 44}, {"target_end_line": 19, "source_start_line": 19, "source_end_line": 25, "source_confidence": 22, "target_start_line": 16, "target_confidence": 44}, {"target_end_line": 34, "source_start_line": 36, "source_end_line": 40, "source_confidence": 22, "target_start_line": 28, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 22, "target_start_line": 4, "target_confidence": 44}, {"target_end_line": 40, "source_start_line": 56, "source_end_line": 59, "source_confidence": 22, "target_start_line": 37, "target_confidence": 44}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 13, "source_confidence": 22, "target_start_line": 12, "target_confidence": 44}, {"target_end_line": 19, "source_start_line": 19, "source_end_line": 25, "source_confidence": 22, "target_start_line": 16, "target_confidence": 44}, {"target_end_line": 34, "source_start_line": 36, "source_end_line": 40, "source_confidence": 22, "target_start_line": 28, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 22, "target_start_line": 4, "target_confidence": 44}, {"target_end_line": 40, "source_start_line": 56, "source_end_line": 59, "source_confidence": 22, "target_start_line": 37, "target_confidence": 44}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 13, "source_confidence": 22, "target_start_line": 12, "target_confidence": 44}, {"target_end_line": 19, "source_start_line": 19, "source_end_line": 25, "source_confidence": 22, "target_start_line": 16, "target_confidence": 44}]}, {"source": "Bcohn_45bcd1eb1394898ceaf8", "value": 36, "target": "junngeronimo_ea20ddf8d56b4d97c196", "links": [{"target_end_line": 26, "source_start_line": 52, "source_end_line": 68, "source_confidence": 20, "target_start_line": 10, "target_confidence": 26}, {"target_end_line": 7, "source_start_line": 48, "source_end_line": 51, "source_confidence": 20, "target_start_line": 4, "target_confidence": 26}, {"target_end_line": 123, "source_start_line": 153, "source_end_line": 158, "source_confidence": 20, "target_start_line": 118, "target_confidence": 26}, {"target_end_line": 98, "source_start_line": 132, "source_end_line": 140, "source_confidence": 20, "target_start_line": 90, "target_confidence": 26}, {"target_end_line": 26, "source_start_line": 52, "source_end_line": 68, "source_confidence": 20, "target_start_line": 10, "target_confidence": 26}, {"target_end_line": 7, "source_start_line": 48, "source_end_line": 51, "source_confidence": 20, "target_start_line": 4, "target_confidence": 26}, {"target_end_line": 123, "source_start_line": 153, "source_end_line": 158, "source_confidence": 20, "target_start_line": 118, "target_confidence": 26}, {"target_end_line": 98, "source_start_line": 132, "source_end_line": 140, "source_confidence": 20, "target_start_line": 90, "target_confidence": 26}, {"target_end_line": 26, "source_start_line": 52, "source_end_line": 68, "source_confidence": 20, "target_start_line": 10, "target_confidence": 26}, {"target_end_line": 7, "source_start_line": 48, "source_end_line": 51, "source_confidence": 20, "target_start_line": 4, "target_confidence": 26}, {"target_end_line": 123, "source_start_line": 153, "source_end_line": 158, "source_confidence": 20, "target_start_line": 118, "target_confidence": 26}, {"target_end_line": 98, "source_start_line": 132, "source_end_line": 140, "source_confidence": 20, "target_start_line": 90, "target_confidence": 26}, {"target_end_line": 26, "source_start_line": 52, "source_end_line": 68, "source_confidence": 20, "target_start_line": 10, "target_confidence": 26}, {"target_end_line": 7, "source_start_line": 48, "source_end_line": 51, "source_confidence": 20, "target_start_line": 4, "target_confidence": 26}, {"target_end_line": 123, "source_start_line": 153, "source_end_line": 158, "source_confidence": 20, "target_start_line": 118, "target_confidence": 26}, {"target_end_line": 98, "source_start_line": 132, "source_end_line": 140, "source_confidence": 20, "target_start_line": 90, "target_confidence": 26}]}, {"source": "devssunil_8e2ca140232cfbf68a17", "value": 211, "target": "ThanisataS_da165812278897b669ed", "links": [{"target_end_line": 211, "source_start_line": 1, "source_end_line": 211, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "jalapic_000b9683638c18c48273", "value": 48, "target": "SpaceActuary_9a92db9794c21d576087", "links": [{"target_end_line": 87, "source_start_line": 147, "source_end_line": 169, "source_confidence": 21, "target_start_line": 65, "target_confidence": 38}, {"target_end_line": 16, "source_start_line": 2, "source_end_line": 5, "source_confidence": 21, "target_start_line": 13, "target_confidence": 38}, {"target_end_line": 58, "source_start_line": 108, "source_end_line": 115, "source_confidence": 21, "target_start_line": 50, "target_confidence": 38}, {"target_end_line": 29, "source_start_line": 49, "source_end_line": 54, "source_confidence": 21, "target_start_line": 24, "target_confidence": 38}, {"target_end_line": 102, "source_start_line": 175, "source_end_line": 179, "source_confidence": 21, "target_start_line": 97, "target_confidence": 38}, {"target_end_line": 87, "source_start_line": 147, "source_end_line": 169, "source_confidence": 21, "target_start_line": 65, "target_confidence": 38}, {"target_end_line": 16, "source_start_line": 2, "source_end_line": 5, "source_confidence": 21, "target_start_line": 13, "target_confidence": 38}, {"target_end_line": 58, "source_start_line": 108, "source_end_line": 115, "source_confidence": 21, "target_start_line": 50, "target_confidence": 38}, {"target_end_line": 29, "source_start_line": 49, "source_end_line": 54, "source_confidence": 21, "target_start_line": 24, "target_confidence": 38}, {"target_end_line": 102, "source_start_line": 175, "source_end_line": 179, "source_confidence": 21, "target_start_line": 97, "target_confidence": 38}, {"target_end_line": 87, "source_start_line": 147, "source_end_line": 169, "source_confidence": 21, "target_start_line": 65, "target_confidence": 38}, {"target_end_line": 16, "source_start_line": 2, "source_end_line": 5, "source_confidence": 21, "target_start_line": 13, "target_confidence": 38}, {"target_end_line": 58, "source_start_line": 108, "source_end_line": 115, "source_confidence": 21, "target_start_line": 50, "target_confidence": 38}, {"target_end_line": 29, "source_start_line": 49, "source_end_line": 54, "source_confidence": 21, "target_start_line": 24, "target_confidence": 38}, {"target_end_line": 102, "source_start_line": 175, "source_end_line": 179, "source_confidence": 21, "target_start_line": 97, "target_confidence": 38}, {"target_end_line": 87, "source_start_line": 147, "source_end_line": 169, "source_confidence": 21, "target_start_line": 65, "target_confidence": 38}, {"target_end_line": 16, "source_start_line": 2, "source_end_line": 5, "source_confidence": 21, "target_start_line": 13, "target_confidence": 38}, {"target_end_line": 58, "source_start_line": 108, "source_end_line": 115, "source_confidence": 21, "target_start_line": 50, "target_confidence": 38}, {"target_end_line": 29, "source_start_line": 49, "source_end_line": 54, "source_confidence": 21, "target_start_line": 24, "target_confidence": 38}, {"target_end_line": 102, "source_start_line": 175, "source_end_line": 179, "source_confidence": 21, "target_start_line": 97, "target_confidence": 38}, {"target_end_line": 87, "source_start_line": 147, "source_end_line": 169, "source_confidence": 21, "target_start_line": 65, "target_confidence": 38}, {"target_end_line": 16, "source_start_line": 2, "source_end_line": 5, "source_confidence": 21, "target_start_line": 13, "target_confidence": 38}, {"target_end_line": 58, "source_start_line": 108, "source_end_line": 115, "source_confidence": 21, "target_start_line": 50, "target_confidence": 38}, {"target_end_line": 29, "source_start_line": 49, "source_end_line": 54, "source_confidence": 21, "target_start_line": 24, "target_confidence": 38}, {"target_end_line": 102, "source_start_line": 175, "source_end_line": 179, "source_confidence": 21, "target_start_line": 97, "target_confidence": 38}]}, {"source": "dunlapea_545566453d4c45d1f4a3", "value": 82, "target": "nguyenbq_b18d0144ce09e1acee26", "links": [{"target_end_line": 35, "source_start_line": 3, "source_end_line": 27, "source_confidence": 38, "target_start_line": 4, "target_confidence": 28}, {"target_end_line": 188, "source_start_line": 81, "source_end_line": 96, "source_confidence": 38, "target_start_line": 173, "target_confidence": 28}, {"target_end_line": 93, "source_start_line": 55, "source_end_line": 64, "source_confidence": 38, "target_start_line": 82, "target_confidence": 28}, {"target_end_line": 231, "source_start_line": 167, "source_end_line": 173, "source_confidence": 38, "target_start_line": 223, "target_confidence": 28}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 38, "source_confidence": 38, "target_start_line": 37, "target_confidence": 28}, {"target_end_line": 202, "source_start_line": 157, "source_end_line": 163, "source_confidence": 38, "target_start_line": 196, "target_confidence": 28}, {"target_end_line": 35, "source_start_line": 3, "source_end_line": 27, "source_confidence": 38, "target_start_line": 4, "target_confidence": 28}, {"target_end_line": 188, "source_start_line": 81, "source_end_line": 96, "source_confidence": 38, "target_start_line": 173, "target_confidence": 28}, {"target_end_line": 93, "source_start_line": 55, "source_end_line": 64, "source_confidence": 38, "target_start_line": 82, "target_confidence": 28}, {"target_end_line": 231, "source_start_line": 167, "source_end_line": 173, "source_confidence": 38, "target_start_line": 223, "target_confidence": 28}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 38, "source_confidence": 38, "target_start_line": 37, "target_confidence": 28}, {"target_end_line": 202, "source_start_line": 157, "source_end_line": 163, "source_confidence": 38, "target_start_line": 196, "target_confidence": 28}, {"target_end_line": 35, "source_start_line": 3, "source_end_line": 27, "source_confidence": 38, "target_start_line": 4, "target_confidence": 28}, {"target_end_line": 188, "source_start_line": 81, "source_end_line": 96, "source_confidence": 38, "target_start_line": 173, "target_confidence": 28}, {"target_end_line": 93, "source_start_line": 55, "source_end_line": 64, "source_confidence": 38, "target_start_line": 82, "target_confidence": 28}, {"target_end_line": 231, "source_start_line": 167, "source_end_line": 173, "source_confidence": 38, "target_start_line": 223, "target_confidence": 28}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 38, "source_confidence": 38, "target_start_line": 37, "target_confidence": 28}, {"target_end_line": 202, "source_start_line": 157, "source_end_line": 163, "source_confidence": 38, "target_start_line": 196, "target_confidence": 28}, {"target_end_line": 35, "source_start_line": 3, "source_end_line": 27, "source_confidence": 38, "target_start_line": 4, "target_confidence": 28}, {"target_end_line": 188, "source_start_line": 81, "source_end_line": 96, "source_confidence": 38, "target_start_line": 173, "target_confidence": 28}, {"target_end_line": 93, "source_start_line": 55, "source_end_line": 64, "source_confidence": 38, "target_start_line": 82, "target_confidence": 28}, {"target_end_line": 231, "source_start_line": 167, "source_end_line": 173, "source_confidence": 38, "target_start_line": 223, "target_confidence": 28}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 38, "source_confidence": 38, "target_start_line": 37, "target_confidence": 28}, {"target_end_line": 202, "source_start_line": 157, "source_end_line": 163, "source_confidence": 38, "target_start_line": 196, "target_confidence": 28}, {"target_end_line": 35, "source_start_line": 3, "source_end_line": 27, "source_confidence": 38, "target_start_line": 4, "target_confidence": 28}, {"target_end_line": 188, "source_start_line": 81, "source_end_line": 96, "source_confidence": 38, "target_start_line": 173, "target_confidence": 28}, {"target_end_line": 93, "source_start_line": 55, "source_end_line": 64, "source_confidence": 38, "target_start_line": 82, "target_confidence": 28}, {"target_end_line": 231, "source_start_line": 167, "source_end_line": 173, "source_confidence": 38, "target_start_line": 223, "target_confidence": 28}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 38, "source_confidence": 38, "target_start_line": 37, "target_confidence": 28}, {"target_end_line": 202, "source_start_line": 157, "source_end_line": 163, "source_confidence": 38, "target_start_line": 196, "target_confidence": 28}, {"target_end_line": 35, "source_start_line": 3, "source_end_line": 27, "source_confidence": 38, "target_start_line": 4, "target_confidence": 28}, {"target_end_line": 188, "source_start_line": 81, "source_end_line": 96, "source_confidence": 38, "target_start_line": 173, "target_confidence": 28}, {"target_end_line": 93, "source_start_line": 55, "source_end_line": 64, "source_confidence": 38, "target_start_line": 82, "target_confidence": 28}, {"target_end_line": 231, "source_start_line": 167, "source_end_line": 173, "source_confidence": 38, "target_start_line": 223, "target_confidence": 28}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 38, "source_confidence": 38, "target_start_line": 37, "target_confidence": 28}, {"target_end_line": 202, "source_start_line": 157, "source_end_line": 163, "source_confidence": 38, "target_start_line": 196, "target_confidence": 28}]}, {"source": "dunlapea_545566453d4c45d1f4a3", "value": 112, "target": "devssunil_8e2ca140232cfbf68a17", "links": [{"target_end_line": 53, "source_start_line": 134, "source_end_line": 146, "source_confidence": 65, "target_start_line": 39, "target_confidence": 52}, {"target_end_line": 190, "source_start_line": 96, "source_end_line": 109, "source_confidence": 65, "target_start_line": 179, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 159, "source_end_line": 169, "source_confidence": 65, "target_start_line": 75, "target_confidence": 52}, {"target_end_line": 167, "source_start_line": 77, "source_end_line": 84, "source_confidence": 65, "target_start_line": 160, "target_confidence": 52}, {"target_end_line": 127, "source_start_line": 48, "source_end_line": 59, "source_confidence": 65, "target_start_line": 116, "target_confidence": 52}, {"target_end_line": 146, "source_start_line": 63, "source_end_line": 77, "source_confidence": 65, "target_start_line": 132, "target_confidence": 52}, {"target_end_line": 65, "source_start_line": 149, "source_end_line": 158, "source_confidence": 65, "target_start_line": 56, "target_confidence": 52}, {"target_end_line": 102, "source_start_line": 170, "source_end_line": 177, "source_confidence": 65, "target_start_line": 95, "target_confidence": 52}, {"target_end_line": 208, "source_start_line": 122, "source_end_line": 129, "source_confidence": 65, "target_start_line": 203, "target_confidence": 52}, {"target_end_line": 112, "source_start_line": 37, "source_end_line": 44, "source_confidence": 65, "target_start_line": 106, "target_confidence": 52}, {"target_end_line": 28, "source_start_line": 26, "source_end_line": 30, "source_confidence": 65, "target_start_line": 24, "target_confidence": 52}, {"target_end_line": 53, "source_start_line": 134, "source_end_line": 146, "source_confidence": 65, "target_start_line": 39, "target_confidence": 52}, {"target_end_line": 190, "source_start_line": 96, "source_end_line": 109, "source_confidence": 65, "target_start_line": 179, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 159, "source_end_line": 169, "source_confidence": 65, "target_start_line": 75, "target_confidence": 52}, {"target_end_line": 167, "source_start_line": 77, "source_end_line": 84, "source_confidence": 65, "target_start_line": 160, "target_confidence": 52}, {"target_end_line": 127, "source_start_line": 48, "source_end_line": 59, "source_confidence": 65, "target_start_line": 116, "target_confidence": 52}, {"target_end_line": 146, "source_start_line": 63, "source_end_line": 77, "source_confidence": 65, "target_start_line": 132, "target_confidence": 52}, {"target_end_line": 65, "source_start_line": 149, "source_end_line": 158, "source_confidence": 65, "target_start_line": 56, "target_confidence": 52}, {"target_end_line": 102, "source_start_line": 170, "source_end_line": 177, "source_confidence": 65, "target_start_line": 95, "target_confidence": 52}, {"target_end_line": 208, "source_start_line": 122, "source_end_line": 129, "source_confidence": 65, "target_start_line": 203, "target_confidence": 52}, {"target_end_line": 112, "source_start_line": 37, "source_end_line": 44, "source_confidence": 65, "target_start_line": 106, "target_confidence": 52}, {"target_end_line": 28, "source_start_line": 26, "source_end_line": 30, "source_confidence": 65, "target_start_line": 24, "target_confidence": 52}, {"target_end_line": 53, "source_start_line": 134, "source_end_line": 146, "source_confidence": 65, "target_start_line": 39, "target_confidence": 52}, {"target_end_line": 190, "source_start_line": 96, "source_end_line": 109, "source_confidence": 65, "target_start_line": 179, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 159, "source_end_line": 169, "source_confidence": 65, "target_start_line": 75, "target_confidence": 52}, {"target_end_line": 167, "source_start_line": 77, "source_end_line": 84, "source_confidence": 65, "target_start_line": 160, "target_confidence": 52}, {"target_end_line": 127, "source_start_line": 48, "source_end_line": 59, "source_confidence": 65, "target_start_line": 116, "target_confidence": 52}, {"target_end_line": 146, "source_start_line": 63, "source_end_line": 77, "source_confidence": 65, "target_start_line": 132, "target_confidence": 52}, {"target_end_line": 65, "source_start_line": 149, "source_end_line": 158, "source_confidence": 65, "target_start_line": 56, "target_confidence": 52}, {"target_end_line": 102, "source_start_line": 170, "source_end_line": 177, "source_confidence": 65, "target_start_line": 95, "target_confidence": 52}, {"target_end_line": 208, "source_start_line": 122, "source_end_line": 129, "source_confidence": 65, "target_start_line": 203, "target_confidence": 52}, {"target_end_line": 112, "source_start_line": 37, "source_end_line": 44, "source_confidence": 65, "target_start_line": 106, "target_confidence": 52}, {"target_end_line": 28, "source_start_line": 26, "source_end_line": 30, "source_confidence": 65, "target_start_line": 24, "target_confidence": 52}, {"target_end_line": 53, "source_start_line": 134, "source_end_line": 146, "source_confidence": 65, "target_start_line": 39, "target_confidence": 52}, {"target_end_line": 190, "source_start_line": 96, "source_end_line": 109, "source_confidence": 65, "target_start_line": 179, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 159, "source_end_line": 169, "source_confidence": 65, "target_start_line": 75, "target_confidence": 52}, {"target_end_line": 167, "source_start_line": 77, "source_end_line": 84, "source_confidence": 65, "target_start_line": 160, "target_confidence": 52}, {"target_end_line": 127, "source_start_line": 48, "source_end_line": 59, "source_confidence": 65, "target_start_line": 116, "target_confidence": 52}, {"target_end_line": 146, "source_start_line": 63, "source_end_line": 77, "source_confidence": 65, "target_start_line": 132, "target_confidence": 52}, {"target_end_line": 65, "source_start_line": 149, "source_end_line": 158, "source_confidence": 65, "target_start_line": 56, "target_confidence": 52}, {"target_end_line": 102, "source_start_line": 170, "source_end_line": 177, "source_confidence": 65, "target_start_line": 95, "target_confidence": 52}, {"target_end_line": 208, "source_start_line": 122, "source_end_line": 129, "source_confidence": 65, "target_start_line": 203, "target_confidence": 52}, {"target_end_line": 112, "source_start_line": 37, "source_end_line": 44, "source_confidence": 65, "target_start_line": 106, "target_confidence": 52}, {"target_end_line": 28, "source_start_line": 26, "source_end_line": 30, "source_confidence": 65, "target_start_line": 24, "target_confidence": 52}, {"target_end_line": 53, "source_start_line": 134, "source_end_line": 146, "source_confidence": 65, "target_start_line": 39, "target_confidence": 52}, {"target_end_line": 190, "source_start_line": 96, "source_end_line": 109, "source_confidence": 65, "target_start_line": 179, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 159, "source_end_line": 169, "source_confidence": 65, "target_start_line": 75, "target_confidence": 52}, {"target_end_line": 167, "source_start_line": 77, "source_end_line": 84, "source_confidence": 65, "target_start_line": 160, "target_confidence": 52}, {"target_end_line": 127, "source_start_line": 48, "source_end_line": 59, "source_confidence": 65, "target_start_line": 116, "target_confidence": 52}, {"target_end_line": 146, "source_start_line": 63, "source_end_line": 77, "source_confidence": 65, "target_start_line": 132, "target_confidence": 52}, {"target_end_line": 65, "source_start_line": 149, "source_end_line": 158, "source_confidence": 65, "target_start_line": 56, "target_confidence": 52}, {"target_end_line": 102, "source_start_line": 170, "source_end_line": 177, "source_confidence": 65, "target_start_line": 95, "target_confidence": 52}, {"target_end_line": 208, "source_start_line": 122, "source_end_line": 129, "source_confidence": 65, "target_start_line": 203, "target_confidence": 52}, {"target_end_line": 112, "source_start_line": 37, "source_end_line": 44, "source_confidence": 65, "target_start_line": 106, "target_confidence": 52}, {"target_end_line": 28, "source_start_line": 26, "source_end_line": 30, "source_confidence": 65, "target_start_line": 24, "target_confidence": 52}, {"target_end_line": 53, "source_start_line": 134, "source_end_line": 146, "source_confidence": 65, "target_start_line": 39, "target_confidence": 52}, {"target_end_line": 190, "source_start_line": 96, "source_end_line": 109, "source_confidence": 65, "target_start_line": 179, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 159, "source_end_line": 169, "source_confidence": 65, "target_start_line": 75, "target_confidence": 52}, {"target_end_line": 167, "source_start_line": 77, "source_end_line": 84, "source_confidence": 65, "target_start_line": 160, "target_confidence": 52}, {"target_end_line": 127, "source_start_line": 48, "source_end_line": 59, "source_confidence": 65, "target_start_line": 116, "target_confidence": 52}, {"target_end_line": 146, "source_start_line": 63, "source_end_line": 77, "source_confidence": 65, "target_start_line": 132, "target_confidence": 52}, {"target_end_line": 65, "source_start_line": 149, "source_end_line": 158, "source_confidence": 65, "target_start_line": 56, "target_confidence": 52}, {"target_end_line": 102, "source_start_line": 170, "source_end_line": 177, "source_confidence": 65, "target_start_line": 95, "target_confidence": 52}, {"target_end_line": 208, "source_start_line": 122, "source_end_line": 129, "source_confidence": 65, "target_start_line": 203, "target_confidence": 52}, {"target_end_line": 112, "source_start_line": 37, "source_end_line": 44, "source_confidence": 65, "target_start_line": 106, "target_confidence": 52}, {"target_end_line": 28, "source_start_line": 26, "source_end_line": 30, "source_confidence": 65, "target_start_line": 24, "target_confidence": 52}, {"target_end_line": 53, "source_start_line": 134, "source_end_line": 146, "source_confidence": 65, "target_start_line": 39, "target_confidence": 52}, {"target_end_line": 190, "source_start_line": 96, "source_end_line": 109, "source_confidence": 65, "target_start_line": 179, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 159, "source_end_line": 169, "source_confidence": 65, "target_start_line": 75, "target_confidence": 52}, {"target_end_line": 167, "source_start_line": 77, "source_end_line": 84, "source_confidence": 65, "target_start_line": 160, "target_confidence": 52}, {"target_end_line": 127, "source_start_line": 48, "source_end_line": 59, "source_confidence": 65, "target_start_line": 116, "target_confidence": 52}, {"target_end_line": 146, "source_start_line": 63, "source_end_line": 77, "source_confidence": 65, "target_start_line": 132, "target_confidence": 52}, {"target_end_line": 65, "source_start_line": 149, "source_end_line": 158, "source_confidence": 65, "target_start_line": 56, "target_confidence": 52}, {"target_end_line": 102, "source_start_line": 170, "source_end_line": 177, "source_confidence": 65, "target_start_line": 95, "target_confidence": 52}, {"target_end_line": 208, "source_start_line": 122, "source_end_line": 129, "source_confidence": 65, "target_start_line": 203, "target_confidence": 52}, {"target_end_line": 112, "source_start_line": 37, "source_end_line": 44, "source_confidence": 65, "target_start_line": 106, "target_confidence": 52}, {"target_end_line": 28, "source_start_line": 26, "source_end_line": 30, "source_confidence": 65, "target_start_line": 24, "target_confidence": 52}, {"target_end_line": 53, "source_start_line": 134, "source_end_line": 146, "source_confidence": 65, "target_start_line": 39, "target_confidence": 52}, {"target_end_line": 190, "source_start_line": 96, "source_end_line": 109, "source_confidence": 65, "target_start_line": 179, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 159, "source_end_line": 169, "source_confidence": 65, "target_start_line": 75, "target_confidence": 52}, {"target_end_line": 167, "source_start_line": 77, "source_end_line": 84, "source_confidence": 65, "target_start_line": 160, "target_confidence": 52}, {"target_end_line": 127, "source_start_line": 48, "source_end_line": 59, "source_confidence": 65, "target_start_line": 116, "target_confidence": 52}, {"target_end_line": 146, "source_start_line": 63, "source_end_line": 77, "source_confidence": 65, "target_start_line": 132, "target_confidence": 52}, {"target_end_line": 65, "source_start_line": 149, "source_end_line": 158, "source_confidence": 65, "target_start_line": 56, "target_confidence": 52}, {"target_end_line": 102, "source_start_line": 170, "source_end_line": 177, "source_confidence": 65, "target_start_line": 95, "target_confidence": 52}, {"target_end_line": 208, "source_start_line": 122, "source_end_line": 129, "source_confidence": 65, "target_start_line": 203, "target_confidence": 52}, {"target_end_line": 112, "source_start_line": 37, "source_end_line": 44, "source_confidence": 65, "target_start_line": 106, "target_confidence": 52}, {"target_end_line": 28, "source_start_line": 26, "source_end_line": 30, "source_confidence": 65, "target_start_line": 24, "target_confidence": 52}, {"target_end_line": 53, "source_start_line": 134, "source_end_line": 146, "source_confidence": 65, "target_start_line": 39, "target_confidence": 52}, {"target_end_line": 190, "source_start_line": 96, "source_end_line": 109, "source_confidence": 65, "target_start_line": 179, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 159, "source_end_line": 169, "source_confidence": 65, "target_start_line": 75, "target_confidence": 52}, {"target_end_line": 167, "source_start_line": 77, "source_end_line": 84, "source_confidence": 65, "target_start_line": 160, "target_confidence": 52}, {"target_end_line": 127, "source_start_line": 48, "source_end_line": 59, "source_confidence": 65, "target_start_line": 116, "target_confidence": 52}, {"target_end_line": 146, "source_start_line": 63, "source_end_line": 77, "source_confidence": 65, "target_start_line": 132, "target_confidence": 52}, {"target_end_line": 65, "source_start_line": 149, "source_end_line": 158, "source_confidence": 65, "target_start_line": 56, "target_confidence": 52}, {"target_end_line": 102, "source_start_line": 170, "source_end_line": 177, "source_confidence": 65, "target_start_line": 95, "target_confidence": 52}, {"target_end_line": 208, "source_start_line": 122, "source_end_line": 129, "source_confidence": 65, "target_start_line": 203, "target_confidence": 52}, {"target_end_line": 112, "source_start_line": 37, "source_end_line": 44, "source_confidence": 65, "target_start_line": 106, "target_confidence": 52}, {"target_end_line": 28, "source_start_line": 26, "source_end_line": 30, "source_confidence": 65, "target_start_line": 24, "target_confidence": 52}, {"target_end_line": 53, "source_start_line": 134, "source_end_line": 146, "source_confidence": 65, "target_start_line": 39, "target_confidence": 52}, {"target_end_line": 190, "source_start_line": 96, "source_end_line": 109, "source_confidence": 65, "target_start_line": 179, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 159, "source_end_line": 169, "source_confidence": 65, "target_start_line": 75, "target_confidence": 52}, {"target_end_line": 167, "source_start_line": 77, "source_end_line": 84, "source_confidence": 65, "target_start_line": 160, "target_confidence": 52}, {"target_end_line": 127, "source_start_line": 48, "source_end_line": 59, "source_confidence": 65, "target_start_line": 116, "target_confidence": 52}, {"target_end_line": 146, "source_start_line": 63, "source_end_line": 77, "source_confidence": 65, "target_start_line": 132, "target_confidence": 52}, {"target_end_line": 65, "source_start_line": 149, "source_end_line": 158, "source_confidence": 65, "target_start_line": 56, "target_confidence": 52}, {"target_end_line": 102, "source_start_line": 170, "source_end_line": 177, "source_confidence": 65, "target_start_line": 95, "target_confidence": 52}, {"target_end_line": 208, "source_start_line": 122, "source_end_line": 129, "source_confidence": 65, "target_start_line": 203, "target_confidence": 52}, {"target_end_line": 112, "source_start_line": 37, "source_end_line": 44, "source_confidence": 65, "target_start_line": 106, "target_confidence": 52}, {"target_end_line": 28, "source_start_line": 26, "source_end_line": 30, "source_confidence": 65, "target_start_line": 24, "target_confidence": 52}, {"target_end_line": 53, "source_start_line": 134, "source_end_line": 146, "source_confidence": 65, "target_start_line": 39, "target_confidence": 52}, {"target_end_line": 190, "source_start_line": 96, "source_end_line": 109, "source_confidence": 65, "target_start_line": 179, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 159, "source_end_line": 169, "source_confidence": 65, "target_start_line": 75, "target_confidence": 52}, {"target_end_line": 167, "source_start_line": 77, "source_end_line": 84, "source_confidence": 65, "target_start_line": 160, "target_confidence": 52}, {"target_end_line": 127, "source_start_line": 48, "source_end_line": 59, "source_confidence": 65, "target_start_line": 116, "target_confidence": 52}, {"target_end_line": 146, "source_start_line": 63, "source_end_line": 77, "source_confidence": 65, "target_start_line": 132, "target_confidence": 52}, {"target_end_line": 65, "source_start_line": 149, "source_end_line": 158, "source_confidence": 65, "target_start_line": 56, "target_confidence": 52}, {"target_end_line": 102, "source_start_line": 170, "source_end_line": 177, "source_confidence": 65, "target_start_line": 95, "target_confidence": 52}, {"target_end_line": 208, "source_start_line": 122, "source_end_line": 129, "source_confidence": 65, "target_start_line": 203, "target_confidence": 52}, {"target_end_line": 112, "source_start_line": 37, "source_end_line": 44, "source_confidence": 65, "target_start_line": 106, "target_confidence": 52}, {"target_end_line": 28, "source_start_line": 26, "source_end_line": 30, "source_confidence": 65, "target_start_line": 24, "target_confidence": 52}]}, {"source": "JohnWall64_391a2664b155f90cc601", "value": 195, "target": "dunlapea_545566453d4c45d1f4a3", "links": [{"target_end_line": 194, "source_start_line": 101, "source_end_line": 196, "source_confidence": 95, "target_start_line": 99, "target_confidence": 99}, {"target_end_line": 80, "source_start_line": 1, "source_end_line": 80, "source_confidence": 95, "target_start_line": 1, "target_confidence": 99}, {"target_end_line": 99, "source_start_line": 81, "source_end_line": 99, "source_confidence": 95, "target_start_line": 81, "target_confidence": 99}, {"target_end_line": 194, "source_start_line": 101, "source_end_line": 196, "source_confidence": 95, "target_start_line": 99, "target_confidence": 99}, {"target_end_line": 80, "source_start_line": 1, "source_end_line": 80, "source_confidence": 95, "target_start_line": 1, "target_confidence": 99}, {"target_end_line": 99, "source_start_line": 81, "source_end_line": 99, "source_confidence": 95, "target_start_line": 81, "target_confidence": 99}, {"target_end_line": 194, "source_start_line": 101, "source_end_line": 196, "source_confidence": 95, "target_start_line": 99, "target_confidence": 99}, {"target_end_line": 80, "source_start_line": 1, "source_end_line": 80, "source_confidence": 95, "target_start_line": 1, "target_confidence": 99}, {"target_end_line": 99, "source_start_line": 81, "source_end_line": 99, "source_confidence": 95, "target_start_line": 81, "target_confidence": 99}]}, {"source": "wcjohnson11_e9973aa49e3876a538b4", "value": 69, "target": "caHaber_327c854c2b24d6835382", "links": [{"target_end_line": 69, "source_start_line": 1, "source_end_line": 69, "source_confidence": 96, "target_start_line": 1, "target_confidence": 98}]}, {"source": "abhishekpolavarapu_13c5ec70f7840df9ce5c", "value": 52, "target": "Mrajyalakshmi_661a44c5ce6d6800f00c", "links": [{"target_end_line": 40, "source_start_line": 9, "source_end_line": 37, "source_confidence": 91, "target_start_line": 10, "target_confidence": 73}, {"target_end_line": 61, "source_start_line": 39, "source_end_line": 48, "source_confidence": 91, "target_start_line": 49, "target_confidence": 73}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 91, "target_start_line": 1, "target_confidence": 73}, {"target_end_line": 40, "source_start_line": 9, "source_end_line": 37, "source_confidence": 91, "target_start_line": 10, "target_confidence": 73}, {"target_end_line": 61, "source_start_line": 39, "source_end_line": 48, "source_confidence": 91, "target_start_line": 49, "target_confidence": 73}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 91, "target_start_line": 1, "target_confidence": 73}, {"target_end_line": 40, "source_start_line": 9, "source_end_line": 37, "source_confidence": 91, "target_start_line": 10, "target_confidence": 73}, {"target_end_line": 61, "source_start_line": 39, "source_end_line": 48, "source_confidence": 91, "target_start_line": 49, "target_confidence": 73}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 91, "target_start_line": 1, "target_confidence": 73}]}, {"source": "RithikaReddyM_d0577504b72d2e03b2ac", "value": 115, "target": "manojchandrak_965566485cb33ee9ae80", "links": [{"target_end_line": 114, "source_start_line": 11, "source_end_line": 112, "source_confidence": 98, "target_start_line": 11, "target_confidence": 97}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 98, "target_start_line": 1, "target_confidence": 97}, {"target_end_line": 114, "source_start_line": 11, "source_end_line": 112, "source_confidence": 98, "target_start_line": 11, "target_confidence": 97}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 98, "target_start_line": 1, "target_confidence": 97}]}, {"source": "meysamabl_fae4da04564935d3f3be", "value": 174, "target": "RithikaReddyM_d0577504b72d2e03b2ac", "links": [{"target_end_line": 112, "source_start_line": 101, "source_end_line": 183, "source_confidence": 89, "target_start_line": 70, "target_confidence": 88}, {"target_end_line": 26, "source_start_line": 1, "source_end_line": 41, "source_confidence": 89, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 58, "source_start_line": 49, "source_end_line": 82, "source_confidence": 89, "target_start_line": 33, "target_confidence": 88}, {"target_end_line": 69, "source_start_line": 84, "source_end_line": 99, "source_confidence": 89, "target_start_line": 59, "target_confidence": 88}, {"target_end_line": 112, "source_start_line": 101, "source_end_line": 183, "source_confidence": 89, "target_start_line": 70, "target_confidence": 88}, {"target_end_line": 26, "source_start_line": 1, "source_end_line": 41, "source_confidence": 89, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 58, "source_start_line": 49, "source_end_line": 82, "source_confidence": 89, "target_start_line": 33, "target_confidence": 88}, {"target_end_line": 69, "source_start_line": 84, "source_end_line": 99, "source_confidence": 89, "target_start_line": 59, "target_confidence": 88}, {"target_end_line": 112, "source_start_line": 101, "source_end_line": 183, "source_confidence": 89, "target_start_line": 70, "target_confidence": 88}, {"target_end_line": 26, "source_start_line": 1, "source_end_line": 41, "source_confidence": 89, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 58, "source_start_line": 49, "source_end_line": 82, "source_confidence": 89, "target_start_line": 33, "target_confidence": 88}, {"target_end_line": 69, "source_start_line": 84, "source_end_line": 99, "source_confidence": 89, "target_start_line": 59, "target_confidence": 88}, {"target_end_line": 112, "source_start_line": 101, "source_end_line": 183, "source_confidence": 89, "target_start_line": 70, "target_confidence": 88}, {"target_end_line": 26, "source_start_line": 1, "source_end_line": 41, "source_confidence": 89, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 58, "source_start_line": 49, "source_end_line": 82, "source_confidence": 89, "target_start_line": 33, "target_confidence": 88}, {"target_end_line": 69, "source_start_line": 84, "source_end_line": 99, "source_confidence": 89, "target_start_line": 59, "target_confidence": 88}]}, {"source": "srinivashavanur_ab441b0f43779f5ea140", "value": 46, "target": "abhishekpolavarapu_13c5ec70f7840df9ce5c", "links": [{"target_end_line": 53, "source_start_line": 49, "source_end_line": 66, "source_confidence": 69, "target_start_line": 37, "target_confidence": 88}, {"target_end_line": 36, "source_start_line": 19, "source_end_line": 34, "source_confidence": 69, "target_start_line": 21, "target_confidence": 88}, {"target_end_line": 17, "source_start_line": 6, "source_end_line": 17, "source_confidence": 69, "target_start_line": 6, "target_confidence": 88}, {"target_end_line": 53, "source_start_line": 49, "source_end_line": 66, "source_confidence": 69, "target_start_line": 37, "target_confidence": 88}, {"target_end_line": 36, "source_start_line": 19, "source_end_line": 34, "source_confidence": 69, "target_start_line": 21, "target_confidence": 88}, {"target_end_line": 17, "source_start_line": 6, "source_end_line": 17, "source_confidence": 69, "target_start_line": 6, "target_confidence": 88}, {"target_end_line": 53, "source_start_line": 49, "source_end_line": 66, "source_confidence": 69, "target_start_line": 37, "target_confidence": 88}, {"target_end_line": 36, "source_start_line": 19, "source_end_line": 34, "source_confidence": 69, "target_start_line": 21, "target_confidence": 88}, {"target_end_line": 17, "source_start_line": 6, "source_end_line": 17, "source_confidence": 69, "target_start_line": 6, "target_confidence": 88}]}, {"source": "enjalot_7402f55e19e1e609f014", "value": 40, "target": "mathnathan_e77414e67bd47439c57c", "links": [{"target_end_line": 552, "source_start_line": 164, "source_end_line": 184, "source_confidence": 28, "target_start_line": 532, "target_confidence": 9}, {"target_end_line": 314, "source_start_line": 106, "source_end_line": 114, "source_confidence": 28, "target_start_line": 306, "target_confidence": 9}, {"target_end_line": 292, "source_start_line": 47, "source_end_line": 51, "source_confidence": 28, "target_start_line": 288, "target_confidence": 9}, {"target_end_line": 355, "source_start_line": 139, "source_end_line": 143, "source_confidence": 28, "target_start_line": 351, "target_confidence": 9}, {"target_end_line": 552, "source_start_line": 164, "source_end_line": 184, "source_confidence": 28, "target_start_line": 532, "target_confidence": 9}, {"target_end_line": 314, "source_start_line": 106, "source_end_line": 114, "source_confidence": 28, "target_start_line": 306, "target_confidence": 9}, {"target_end_line": 292, "source_start_line": 47, "source_end_line": 51, "source_confidence": 28, "target_start_line": 288, "target_confidence": 9}, {"target_end_line": 355, "source_start_line": 139, "source_end_line": 143, "source_confidence": 28, "target_start_line": 351, "target_confidence": 9}, {"target_end_line": 552, "source_start_line": 164, "source_end_line": 184, "source_confidence": 28, "target_start_line": 532, "target_confidence": 9}, {"target_end_line": 314, "source_start_line": 106, "source_end_line": 114, "source_confidence": 28, "target_start_line": 306, "target_confidence": 9}, {"target_end_line": 292, "source_start_line": 47, "source_end_line": 51, "source_confidence": 28, "target_start_line": 288, "target_confidence": 9}, {"target_end_line": 355, "source_start_line": 139, "source_end_line": 143, "source_confidence": 28, "target_start_line": 351, "target_confidence": 9}, {"target_end_line": 552, "source_start_line": 164, "source_end_line": 184, "source_confidence": 28, "target_start_line": 532, "target_confidence": 9}, {"target_end_line": 314, "source_start_line": 106, "source_end_line": 114, "source_confidence": 28, "target_start_line": 306, "target_confidence": 9}, {"target_end_line": 292, "source_start_line": 47, "source_end_line": 51, "source_confidence": 28, "target_start_line": 288, "target_confidence": 9}, {"target_end_line": 355, "source_start_line": 139, "source_end_line": 143, "source_confidence": 28, "target_start_line": 351, "target_confidence": 9}]}, {"source": "BDAguila_102a0982e35cdad76e15", "value": 195, "target": "JohnWall64_391a2664b155f90cc601", "links": [{"target_end_line": 196, "source_start_line": 99, "source_end_line": 194, "source_confidence": 99, "target_start_line": 101, "target_confidence": 95}, {"target_end_line": 80, "source_start_line": 1, "source_end_line": 80, "source_confidence": 99, "target_start_line": 1, "target_confidence": 95}, {"target_end_line": 99, "source_start_line": 81, "source_end_line": 99, "source_confidence": 99, "target_start_line": 81, "target_confidence": 95}, {"target_end_line": 196, "source_start_line": 99, "source_end_line": 194, "source_confidence": 99, "target_start_line": 101, "target_confidence": 95}, {"target_end_line": 80, "source_start_line": 1, "source_end_line": 80, "source_confidence": 99, "target_start_line": 1, "target_confidence": 95}, {"target_end_line": 99, "source_start_line": 81, "source_end_line": 99, "source_confidence": 99, "target_start_line": 81, "target_confidence": 95}, {"target_end_line": 196, "source_start_line": 99, "source_end_line": 194, "source_confidence": 99, "target_start_line": 101, "target_confidence": 95}, {"target_end_line": 80, "source_start_line": 1, "source_end_line": 80, "source_confidence": 99, "target_start_line": 1, "target_confidence": 95}, {"target_end_line": 99, "source_start_line": 81, "source_end_line": 99, "source_confidence": 99, "target_start_line": 81, "target_confidence": 95}]}, {"source": "diepvf_793ae40d4139f2959561", "value": 192, "target": "BDAguila_102a0982e35cdad76e15", "links": [{"target_end_line": 194, "source_start_line": 88, "source_end_line": 202, "source_confidence": 93, "target_start_line": 80, "target_confidence": 99}, {"target_end_line": 77, "source_start_line": 29, "source_end_line": 84, "source_confidence": 93, "target_start_line": 24, "target_confidence": 99}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 93, "target_start_line": 1, "target_confidence": 99}, {"target_end_line": 194, "source_start_line": 88, "source_end_line": 202, "source_confidence": 93, "target_start_line": 80, "target_confidence": 99}, {"target_end_line": 77, "source_start_line": 29, "source_end_line": 84, "source_confidence": 93, "target_start_line": 24, "target_confidence": 99}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 93, "target_start_line": 1, "target_confidence": 99}, {"target_end_line": 194, "source_start_line": 88, "source_end_line": 202, "source_confidence": 93, "target_start_line": 80, "target_confidence": 99}, {"target_end_line": 77, "source_start_line": 29, "source_end_line": 84, "source_confidence": 93, "target_start_line": 24, "target_confidence": 99}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 93, "target_start_line": 1, "target_confidence": 99}]}, {"source": "Ifeanyi-1_41704a49f9f81ca9f29b", "value": 84, "target": "diepvf_793ae40d4139f2959561", "links": [{"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 53, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 24, "source_end_line": 27, "source_confidence": 53, "target_start_line": 29, "target_confidence": 39}, {"target_end_line": 104, "source_start_line": 76, "source_end_line": 91, "source_confidence": 53, "target_start_line": 89, "target_confidence": 39}, {"target_end_line": 62, "source_start_line": 51, "source_end_line": 65, "source_confidence": 53, "target_start_line": 48, "target_confidence": 39}, {"target_end_line": 75, "source_start_line": 39, "source_end_line": 44, "source_confidence": 53, "target_start_line": 70, "target_confidence": 39}, {"target_end_line": 181, "source_start_line": 128, "source_end_line": 134, "source_confidence": 53, "target_start_line": 175, "target_confidence": 39}, {"target_end_line": 45, "source_start_line": 29, "source_end_line": 34, "source_confidence": 53, "target_start_line": 40, "target_confidence": 39}, {"target_end_line": 171, "source_start_line": 104, "source_end_line": 110, "source_confidence": 53, "target_start_line": 165, "target_confidence": 39}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 53, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 24, "source_end_line": 27, "source_confidence": 53, "target_start_line": 29, "target_confidence": 39}, {"target_end_line": 104, "source_start_line": 76, "source_end_line": 91, "source_confidence": 53, "target_start_line": 89, "target_confidence": 39}, {"target_end_line": 62, "source_start_line": 51, "source_end_line": 65, "source_confidence": 53, "target_start_line": 48, "target_confidence": 39}, {"target_end_line": 75, "source_start_line": 39, "source_end_line": 44, "source_confidence": 53, "target_start_line": 70, "target_confidence": 39}, {"target_end_line": 181, "source_start_line": 128, "source_end_line": 134, "source_confidence": 53, "target_start_line": 175, "target_confidence": 39}, {"target_end_line": 45, "source_start_line": 29, "source_end_line": 34, "source_confidence": 53, "target_start_line": 40, "target_confidence": 39}, {"target_end_line": 171, "source_start_line": 104, "source_end_line": 110, "source_confidence": 53, "target_start_line": 165, "target_confidence": 39}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 53, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 24, "source_end_line": 27, "source_confidence": 53, "target_start_line": 29, "target_confidence": 39}, {"target_end_line": 104, "source_start_line": 76, "source_end_line": 91, "source_confidence": 53, "target_start_line": 89, "target_confidence": 39}, {"target_end_line": 62, "source_start_line": 51, "source_end_line": 65, "source_confidence": 53, "target_start_line": 48, "target_confidence": 39}, {"target_end_line": 75, "source_start_line": 39, "source_end_line": 44, "source_confidence": 53, "target_start_line": 70, "target_confidence": 39}, {"target_end_line": 181, "source_start_line": 128, "source_end_line": 134, "source_confidence": 53, "target_start_line": 175, "target_confidence": 39}, {"target_end_line": 45, "source_start_line": 29, "source_end_line": 34, "source_confidence": 53, "target_start_line": 40, "target_confidence": 39}, {"target_end_line": 171, "source_start_line": 104, "source_end_line": 110, "source_confidence": 53, "target_start_line": 165, "target_confidence": 39}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 53, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 24, "source_end_line": 27, "source_confidence": 53, "target_start_line": 29, "target_confidence": 39}, {"target_end_line": 104, "source_start_line": 76, "source_end_line": 91, "source_confidence": 53, "target_start_line": 89, "target_confidence": 39}, {"target_end_line": 62, "source_start_line": 51, "source_end_line": 65, "source_confidence": 53, "target_start_line": 48, "target_confidence": 39}, {"target_end_line": 75, "source_start_line": 39, "source_end_line": 44, "source_confidence": 53, "target_start_line": 70, "target_confidence": 39}, {"target_end_line": 181, "source_start_line": 128, "source_end_line": 134, "source_confidence": 53, "target_start_line": 175, "target_confidence": 39}, {"target_end_line": 45, "source_start_line": 29, "source_end_line": 34, "source_confidence": 53, "target_start_line": 40, "target_confidence": 39}, {"target_end_line": 171, "source_start_line": 104, "source_end_line": 110, "source_confidence": 53, "target_start_line": 165, "target_confidence": 39}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 53, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 24, "source_end_line": 27, "source_confidence": 53, "target_start_line": 29, "target_confidence": 39}, {"target_end_line": 104, "source_start_line": 76, "source_end_line": 91, "source_confidence": 53, "target_start_line": 89, "target_confidence": 39}, {"target_end_line": 62, "source_start_line": 51, "source_end_line": 65, "source_confidence": 53, "target_start_line": 48, "target_confidence": 39}, {"target_end_line": 75, "source_start_line": 39, "source_end_line": 44, "source_confidence": 53, "target_start_line": 70, "target_confidence": 39}, {"target_end_line": 181, "source_start_line": 128, "source_end_line": 134, "source_confidence": 53, "target_start_line": 175, "target_confidence": 39}, {"target_end_line": 45, "source_start_line": 29, "source_end_line": 34, "source_confidence": 53, "target_start_line": 40, "target_confidence": 39}, {"target_end_line": 171, "source_start_line": 104, "source_end_line": 110, "source_confidence": 53, "target_start_line": 165, "target_confidence": 39}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 53, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 24, "source_end_line": 27, "source_confidence": 53, "target_start_line": 29, "target_confidence": 39}, {"target_end_line": 104, "source_start_line": 76, "source_end_line": 91, "source_confidence": 53, "target_start_line": 89, "target_confidence": 39}, {"target_end_line": 62, "source_start_line": 51, "source_end_line": 65, "source_confidence": 53, "target_start_line": 48, "target_confidence": 39}, {"target_end_line": 75, "source_start_line": 39, "source_end_line": 44, "source_confidence": 53, "target_start_line": 70, "target_confidence": 39}, {"target_end_line": 181, "source_start_line": 128, "source_end_line": 134, "source_confidence": 53, "target_start_line": 175, "target_confidence": 39}, {"target_end_line": 45, "source_start_line": 29, "source_end_line": 34, "source_confidence": 53, "target_start_line": 40, "target_confidence": 39}, {"target_end_line": 171, "source_start_line": 104, "source_end_line": 110, "source_confidence": 53, "target_start_line": 165, "target_confidence": 39}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 53, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 24, "source_end_line": 27, "source_confidence": 53, "target_start_line": 29, "target_confidence": 39}, {"target_end_line": 104, "source_start_line": 76, "source_end_line": 91, "source_confidence": 53, "target_start_line": 89, "target_confidence": 39}, {"target_end_line": 62, "source_start_line": 51, "source_end_line": 65, "source_confidence": 53, "target_start_line": 48, "target_confidence": 39}, {"target_end_line": 75, "source_start_line": 39, "source_end_line": 44, "source_confidence": 53, "target_start_line": 70, "target_confidence": 39}, {"target_end_line": 181, "source_start_line": 128, "source_end_line": 134, "source_confidence": 53, "target_start_line": 175, "target_confidence": 39}, {"target_end_line": 45, "source_start_line": 29, "source_end_line": 34, "source_confidence": 53, "target_start_line": 40, "target_confidence": 39}, {"target_end_line": 171, "source_start_line": 104, "source_end_line": 110, "source_confidence": 53, "target_start_line": 165, "target_confidence": 39}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 53, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 24, "source_end_line": 27, "source_confidence": 53, "target_start_line": 29, "target_confidence": 39}, {"target_end_line": 104, "source_start_line": 76, "source_end_line": 91, "source_confidence": 53, "target_start_line": 89, "target_confidence": 39}, {"target_end_line": 62, "source_start_line": 51, "source_end_line": 65, "source_confidence": 53, "target_start_line": 48, "target_confidence": 39}, {"target_end_line": 75, "source_start_line": 39, "source_end_line": 44, "source_confidence": 53, "target_start_line": 70, "target_confidence": 39}, {"target_end_line": 181, "source_start_line": 128, "source_end_line": 134, "source_confidence": 53, "target_start_line": 175, "target_confidence": 39}, {"target_end_line": 45, "source_start_line": 29, "source_end_line": 34, "source_confidence": 53, "target_start_line": 40, "target_confidence": 39}, {"target_end_line": 171, "source_start_line": 104, "source_end_line": 110, "source_confidence": 53, "target_start_line": 165, "target_confidence": 39}]}, {"source": "renecnielsen_c36879a6060718fce321", "value": 65, "target": "Bcohn_45bcd1eb1394898ceaf8", "links": [{"target_end_line": 74, "source_start_line": 2, "source_end_line": 35, "source_confidence": 16, "target_start_line": 48, "target_confidence": 33}, {"target_end_line": 132, "source_start_line": 81, "source_end_line": 89, "source_confidence": 16, "target_start_line": 124, "target_confidence": 33}, {"target_end_line": 144, "source_start_line": 91, "source_end_line": 102, "source_confidence": 16, "target_start_line": 133, "target_confidence": 33}, {"target_end_line": 112, "source_start_line": 131, "source_end_line": 140, "source_confidence": 16, "target_start_line": 107, "target_confidence": 33}, {"target_end_line": 74, "source_start_line": 2, "source_end_line": 35, "source_confidence": 16, "target_start_line": 48, "target_confidence": 33}, {"target_end_line": 132, "source_start_line": 81, "source_end_line": 89, "source_confidence": 16, "target_start_line": 124, "target_confidence": 33}, {"target_end_line": 144, "source_start_line": 91, "source_end_line": 102, "source_confidence": 16, "target_start_line": 133, "target_confidence": 33}, {"target_end_line": 112, "source_start_line": 131, "source_end_line": 140, "source_confidence": 16, "target_start_line": 107, "target_confidence": 33}, {"target_end_line": 74, "source_start_line": 2, "source_end_line": 35, "source_confidence": 16, "target_start_line": 48, "target_confidence": 33}, {"target_end_line": 132, "source_start_line": 81, "source_end_line": 89, "source_confidence": 16, "target_start_line": 124, "target_confidence": 33}, {"target_end_line": 144, "source_start_line": 91, "source_end_line": 102, "source_confidence": 16, "target_start_line": 133, "target_confidence": 33}, {"target_end_line": 112, "source_start_line": 131, "source_end_line": 140, "source_confidence": 16, "target_start_line": 107, "target_confidence": 33}, {"target_end_line": 74, "source_start_line": 2, "source_end_line": 35, "source_confidence": 16, "target_start_line": 48, "target_confidence": 33}, {"target_end_line": 132, "source_start_line": 81, "source_end_line": 89, "source_confidence": 16, "target_start_line": 124, "target_confidence": 33}, {"target_end_line": 144, "source_start_line": 91, "source_end_line": 102, "source_confidence": 16, "target_start_line": 133, "target_confidence": 33}, {"target_end_line": 112, "source_start_line": 131, "source_end_line": 140, "source_confidence": 16, "target_start_line": 107, "target_confidence": 33}]}, {"source": "enjalot_0912e1962ed512093895", "value": 107, "target": "namibian15_5d353f5f4a093a74d75f", "links": [{"target_end_line": 107, "source_start_line": 1, "source_end_line": 107, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "dogobox_e694099d4bae5c390551", "value": 130, "target": "Lincoln-Jiang_3a92f6973f730a2f4bb4", "links": [{"target_end_line": 191, "source_start_line": 62, "source_end_line": 113, "source_confidence": 88, "target_start_line": 127, "target_confidence": 65}, {"target_end_line": 77, "source_start_line": 30, "source_end_line": 46, "source_confidence": 88, "target_start_line": 54, "target_confidence": 65}, {"target_end_line": 22, "source_start_line": 8, "source_end_line": 16, "source_confidence": 88, "target_start_line": 11, "target_confidence": 65}, {"target_end_line": 113, "source_start_line": 47, "source_end_line": 56, "source_confidence": 88, "target_start_line": 99, "target_confidence": 65}, {"target_end_line": 126, "source_start_line": 57, "source_end_line": 61, "source_confidence": 88, "target_start_line": 118, "target_confidence": 65}, {"target_end_line": 8, "source_start_line": 2, "source_end_line": 5, "source_confidence": 88, "target_start_line": 4, "target_confidence": 65}, {"target_end_line": 191, "source_start_line": 62, "source_end_line": 113, "source_confidence": 88, "target_start_line": 127, "target_confidence": 65}, {"target_end_line": 77, "source_start_line": 30, "source_end_line": 46, "source_confidence": 88, "target_start_line": 54, "target_confidence": 65}, {"target_end_line": 22, "source_start_line": 8, "source_end_line": 16, "source_confidence": 88, "target_start_line": 11, "target_confidence": 65}, {"target_end_line": 113, "source_start_line": 47, "source_end_line": 56, "source_confidence": 88, "target_start_line": 99, "target_confidence": 65}, {"target_end_line": 126, "source_start_line": 57, "source_end_line": 61, "source_confidence": 88, "target_start_line": 118, "target_confidence": 65}, {"target_end_line": 8, "source_start_line": 2, "source_end_line": 5, "source_confidence": 88, "target_start_line": 4, "target_confidence": 65}, {"target_end_line": 191, "source_start_line": 62, "source_end_line": 113, "source_confidence": 88, "target_start_line": 127, "target_confidence": 65}, {"target_end_line": 77, "source_start_line": 30, "source_end_line": 46, "source_confidence": 88, "target_start_line": 54, "target_confidence": 65}, {"target_end_line": 22, "source_start_line": 8, "source_end_line": 16, "source_confidence": 88, "target_start_line": 11, "target_confidence": 65}, {"target_end_line": 113, "source_start_line": 47, "source_end_line": 56, "source_confidence": 88, "target_start_line": 99, "target_confidence": 65}, {"target_end_line": 126, "source_start_line": 57, "source_end_line": 61, "source_confidence": 88, "target_start_line": 118, "target_confidence": 65}, {"target_end_line": 8, "source_start_line": 2, "source_end_line": 5, "source_confidence": 88, "target_start_line": 4, "target_confidence": 65}, {"target_end_line": 191, "source_start_line": 62, "source_end_line": 113, "source_confidence": 88, "target_start_line": 127, "target_confidence": 65}, {"target_end_line": 77, "source_start_line": 30, "source_end_line": 46, "source_confidence": 88, "target_start_line": 54, "target_confidence": 65}, {"target_end_line": 22, "source_start_line": 8, "source_end_line": 16, "source_confidence": 88, "target_start_line": 11, "target_confidence": 65}, {"target_end_line": 113, "source_start_line": 47, "source_end_line": 56, "source_confidence": 88, "target_start_line": 99, "target_confidence": 65}, {"target_end_line": 126, "source_start_line": 57, "source_end_line": 61, "source_confidence": 88, "target_start_line": 118, "target_confidence": 65}, {"target_end_line": 8, "source_start_line": 2, "source_end_line": 5, "source_confidence": 88, "target_start_line": 4, "target_confidence": 65}, {"target_end_line": 191, "source_start_line": 62, "source_end_line": 113, "source_confidence": 88, "target_start_line": 127, "target_confidence": 65}, {"target_end_line": 77, "source_start_line": 30, "source_end_line": 46, "source_confidence": 88, "target_start_line": 54, "target_confidence": 65}, {"target_end_line": 22, "source_start_line": 8, "source_end_line": 16, "source_confidence": 88, "target_start_line": 11, "target_confidence": 65}, {"target_end_line": 113, "source_start_line": 47, "source_end_line": 56, "source_confidence": 88, "target_start_line": 99, "target_confidence": 65}, {"target_end_line": 126, "source_start_line": 57, "source_end_line": 61, "source_confidence": 88, "target_start_line": 118, "target_confidence": 65}, {"target_end_line": 8, "source_start_line": 2, "source_end_line": 5, "source_confidence": 88, "target_start_line": 4, "target_confidence": 65}, {"target_end_line": 191, "source_start_line": 62, "source_end_line": 113, "source_confidence": 88, "target_start_line": 127, "target_confidence": 65}, {"target_end_line": 77, "source_start_line": 30, "source_end_line": 46, "source_confidence": 88, "target_start_line": 54, "target_confidence": 65}, {"target_end_line": 22, "source_start_line": 8, "source_end_line": 16, "source_confidence": 88, "target_start_line": 11, "target_confidence": 65}, {"target_end_line": 113, "source_start_line": 47, "source_end_line": 56, "source_confidence": 88, "target_start_line": 99, "target_confidence": 65}, {"target_end_line": 126, "source_start_line": 57, "source_end_line": 61, "source_confidence": 88, "target_start_line": 118, "target_confidence": 65}, {"target_end_line": 8, "source_start_line": 2, "source_end_line": 5, "source_confidence": 88, "target_start_line": 4, "target_confidence": 65}]}, {"source": "mbostock_835cf2925ba217821434", "value": 28, "target": "enjalot_7402f55e19e1e609f014", "links": [{"target_end_line": 177, "source_start_line": 50, "source_end_line": 66, "source_confidence": 35, "target_start_line": 161, "target_confidence": 17}, {"target_end_line": 188, "source_start_line": 67, "source_end_line": 77, "source_confidence": 35, "target_start_line": 178, "target_confidence": 17}, {"target_end_line": 177, "source_start_line": 50, "source_end_line": 66, "source_confidence": 35, "target_start_line": 161, "target_confidence": 17}, {"target_end_line": 188, "source_start_line": 67, "source_end_line": 77, "source_confidence": 35, "target_start_line": 178, "target_confidence": 17}]}, {"source": "lambrex_7fedb282aca4df15b0d4", "value": 84, "target": "Ifeanyi-1_41704a49f9f81ca9f29b", "links": [{"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 39, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 96, "source_confidence": 39, "target_start_line": 76, "target_confidence": 53}, {"target_end_line": 65, "source_start_line": 41, "source_end_line": 55, "source_confidence": 39, "target_start_line": 51, "target_confidence": 53}, {"target_end_line": 44, "source_start_line": 63, "source_end_line": 68, "source_confidence": 39, "target_start_line": 39, "target_confidence": 53}, {"target_end_line": 134, "source_start_line": 174, "source_end_line": 180, "source_confidence": 39, "target_start_line": 128, "target_confidence": 53}, {"target_end_line": 34, "source_start_line": 33, "source_end_line": 38, "source_confidence": 39, "target_start_line": 29, "target_confidence": 53}, {"target_end_line": 110, "source_start_line": 164, "source_end_line": 170, "source_confidence": 39, "target_start_line": 104, "target_confidence": 53}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 39, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 96, "source_confidence": 39, "target_start_line": 76, "target_confidence": 53}, {"target_end_line": 65, "source_start_line": 41, "source_end_line": 55, "source_confidence": 39, "target_start_line": 51, "target_confidence": 53}, {"target_end_line": 44, "source_start_line": 63, "source_end_line": 68, "source_confidence": 39, "target_start_line": 39, "target_confidence": 53}, {"target_end_line": 134, "source_start_line": 174, "source_end_line": 180, "source_confidence": 39, "target_start_line": 128, "target_confidence": 53}, {"target_end_line": 34, "source_start_line": 33, "source_end_line": 38, "source_confidence": 39, "target_start_line": 29, "target_confidence": 53}, {"target_end_line": 110, "source_start_line": 164, "source_end_line": 170, "source_confidence": 39, "target_start_line": 104, "target_confidence": 53}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 39, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 96, "source_confidence": 39, "target_start_line": 76, "target_confidence": 53}, {"target_end_line": 65, "source_start_line": 41, "source_end_line": 55, "source_confidence": 39, "target_start_line": 51, "target_confidence": 53}, {"target_end_line": 44, "source_start_line": 63, "source_end_line": 68, "source_confidence": 39, "target_start_line": 39, "target_confidence": 53}, {"target_end_line": 134, "source_start_line": 174, "source_end_line": 180, "source_confidence": 39, "target_start_line": 128, "target_confidence": 53}, {"target_end_line": 34, "source_start_line": 33, "source_end_line": 38, "source_confidence": 39, "target_start_line": 29, "target_confidence": 53}, {"target_end_line": 110, "source_start_line": 164, "source_end_line": 170, "source_confidence": 39, "target_start_line": 104, "target_confidence": 53}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 39, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 96, "source_confidence": 39, "target_start_line": 76, "target_confidence": 53}, {"target_end_line": 65, "source_start_line": 41, "source_end_line": 55, "source_confidence": 39, "target_start_line": 51, "target_confidence": 53}, {"target_end_line": 44, "source_start_line": 63, "source_end_line": 68, "source_confidence": 39, "target_start_line": 39, "target_confidence": 53}, {"target_end_line": 134, "source_start_line": 174, "source_end_line": 180, "source_confidence": 39, "target_start_line": 128, "target_confidence": 53}, {"target_end_line": 34, "source_start_line": 33, "source_end_line": 38, "source_confidence": 39, "target_start_line": 29, "target_confidence": 53}, {"target_end_line": 110, "source_start_line": 164, "source_end_line": 170, "source_confidence": 39, "target_start_line": 104, "target_confidence": 53}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 39, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 96, "source_confidence": 39, "target_start_line": 76, "target_confidence": 53}, {"target_end_line": 65, "source_start_line": 41, "source_end_line": 55, "source_confidence": 39, "target_start_line": 51, "target_confidence": 53}, {"target_end_line": 44, "source_start_line": 63, "source_end_line": 68, "source_confidence": 39, "target_start_line": 39, "target_confidence": 53}, {"target_end_line": 134, "source_start_line": 174, "source_end_line": 180, "source_confidence": 39, "target_start_line": 128, "target_confidence": 53}, {"target_end_line": 34, "source_start_line": 33, "source_end_line": 38, "source_confidence": 39, "target_start_line": 29, "target_confidence": 53}, {"target_end_line": 110, "source_start_line": 164, "source_end_line": 170, "source_confidence": 39, "target_start_line": 104, "target_confidence": 53}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 39, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 96, "source_confidence": 39, "target_start_line": 76, "target_confidence": 53}, {"target_end_line": 65, "source_start_line": 41, "source_end_line": 55, "source_confidence": 39, "target_start_line": 51, "target_confidence": 53}, {"target_end_line": 44, "source_start_line": 63, "source_end_line": 68, "source_confidence": 39, "target_start_line": 39, "target_confidence": 53}, {"target_end_line": 134, "source_start_line": 174, "source_end_line": 180, "source_confidence": 39, "target_start_line": 128, "target_confidence": 53}, {"target_end_line": 34, "source_start_line": 33, "source_end_line": 38, "source_confidence": 39, "target_start_line": 29, "target_confidence": 53}, {"target_end_line": 110, "source_start_line": 164, "source_end_line": 170, "source_confidence": 39, "target_start_line": 104, "target_confidence": 53}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 39, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 91, "source_start_line": 81, "source_end_line": 96, "source_confidence": 39, "target_start_line": 76, "target_confidence": 53}, {"target_end_line": 65, "source_start_line": 41, "source_end_line": 55, "source_confidence": 39, "target_start_line": 51, "target_confidence": 53}, {"target_end_line": 44, "source_start_line": 63, "source_end_line": 68, "source_confidence": 39, "target_start_line": 39, "target_confidence": 53}, {"target_end_line": 134, "source_start_line": 174, "source_end_line": 180, "source_confidence": 39, "target_start_line": 128, "target_confidence": 53}, {"target_end_line": 34, "source_start_line": 33, "source_end_line": 38, "source_confidence": 39, "target_start_line": 29, "target_confidence": 53}, {"target_end_line": 110, "source_start_line": 164, "source_end_line": 170, "source_confidence": 39, "target_start_line": 104, "target_confidence": 53}]}, {"source": "AdamBlaine1_fb8e1e6750843954ead0", "value": 193, "target": "lambrex_7fedb282aca4df15b0d4", "links": [{"target_end_line": 97, "source_start_line": 1, "source_end_line": 96, "source_confidence": 97, "target_start_line": 1, "target_confidence": 90}, {"target_end_line": 153, "source_start_line": 98, "source_end_line": 145, "source_confidence": 97, "target_start_line": 106, "target_confidence": 90}, {"target_end_line": 201, "source_start_line": 146, "source_end_line": 178, "source_confidence": 97, "target_start_line": 154, "target_confidence": 90}, {"target_end_line": 97, "source_start_line": 1, "source_end_line": 96, "source_confidence": 97, "target_start_line": 1, "target_confidence": 90}, {"target_end_line": 153, "source_start_line": 98, "source_end_line": 145, "source_confidence": 97, "target_start_line": 106, "target_confidence": 90}, {"target_end_line": 201, "source_start_line": 146, "source_end_line": 178, "source_confidence": 97, "target_start_line": 154, "target_confidence": 90}, {"target_end_line": 97, "source_start_line": 1, "source_end_line": 96, "source_confidence": 97, "target_start_line": 1, "target_confidence": 90}, {"target_end_line": 153, "source_start_line": 98, "source_end_line": 145, "source_confidence": 97, "target_start_line": 106, "target_confidence": 90}, {"target_end_line": 201, "source_start_line": 146, "source_end_line": 178, "source_confidence": 97, "target_start_line": 154, "target_confidence": 90}]}, {"source": "thanisata_cb0058e2f04d134798e2", "value": 149, "target": "AdamBlaine1_fb8e1e6750843954ead0", "links": [{"target_end_line": 145, "source_start_line": 78, "source_end_line": 140, "source_confidence": 85, "target_start_line": 79, "target_confidence": 79}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 85, "target_start_line": 1, "target_confidence": 79}, {"target_end_line": 65, "source_start_line": 29, "source_end_line": 61, "source_confidence": 85, "target_start_line": 33, "target_confidence": 79}, {"target_end_line": 173, "source_start_line": 156, "source_end_line": 163, "source_confidence": 85, "target_start_line": 166, "target_confidence": 79}, {"target_end_line": 152, "source_start_line": 141, "source_end_line": 147, "source_confidence": 85, "target_start_line": 146, "target_confidence": 79}, {"target_end_line": 162, "source_start_line": 148, "source_end_line": 154, "source_confidence": 85, "target_start_line": 156, "target_confidence": 79}, {"target_end_line": 145, "source_start_line": 78, "source_end_line": 140, "source_confidence": 85, "target_start_line": 79, "target_confidence": 79}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 85, "target_start_line": 1, "target_confidence": 79}, {"target_end_line": 65, "source_start_line": 29, "source_end_line": 61, "source_confidence": 85, "target_start_line": 33, "target_confidence": 79}, {"target_end_line": 173, "source_start_line": 156, "source_end_line": 163, "source_confidence": 85, "target_start_line": 166, "target_confidence": 79}, {"target_end_line": 152, "source_start_line": 141, "source_end_line": 147, "source_confidence": 85, "target_start_line": 146, "target_confidence": 79}, {"target_end_line": 162, "source_start_line": 148, "source_end_line": 154, "source_confidence": 85, "target_start_line": 156, "target_confidence": 79}, {"target_end_line": 145, "source_start_line": 78, "source_end_line": 140, "source_confidence": 85, "target_start_line": 79, "target_confidence": 79}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 85, "target_start_line": 1, "target_confidence": 79}, {"target_end_line": 65, "source_start_line": 29, "source_end_line": 61, "source_confidence": 85, "target_start_line": 33, "target_confidence": 79}, {"target_end_line": 173, "source_start_line": 156, "source_end_line": 163, "source_confidence": 85, "target_start_line": 166, "target_confidence": 79}, {"target_end_line": 152, "source_start_line": 141, "source_end_line": 147, "source_confidence": 85, "target_start_line": 146, "target_confidence": 79}, {"target_end_line": 162, "source_start_line": 148, "source_end_line": 154, "source_confidence": 85, "target_start_line": 156, "target_confidence": 79}, {"target_end_line": 145, "source_start_line": 78, "source_end_line": 140, "source_confidence": 85, "target_start_line": 79, "target_confidence": 79}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 85, "target_start_line": 1, "target_confidence": 79}, {"target_end_line": 65, "source_start_line": 29, "source_end_line": 61, "source_confidence": 85, "target_start_line": 33, "target_confidence": 79}, {"target_end_line": 173, "source_start_line": 156, "source_end_line": 163, "source_confidence": 85, "target_start_line": 166, "target_confidence": 79}, {"target_end_line": 152, "source_start_line": 141, "source_end_line": 147, "source_confidence": 85, "target_start_line": 146, "target_confidence": 79}, {"target_end_line": 162, "source_start_line": 148, "source_end_line": 154, "source_confidence": 85, "target_start_line": 156, "target_confidence": 79}, {"target_end_line": 145, "source_start_line": 78, "source_end_line": 140, "source_confidence": 85, "target_start_line": 79, "target_confidence": 79}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 85, "target_start_line": 1, "target_confidence": 79}, {"target_end_line": 65, "source_start_line": 29, "source_end_line": 61, "source_confidence": 85, "target_start_line": 33, "target_confidence": 79}, {"target_end_line": 173, "source_start_line": 156, "source_end_line": 163, "source_confidence": 85, "target_start_line": 166, "target_confidence": 79}, {"target_end_line": 152, "source_start_line": 141, "source_end_line": 147, "source_confidence": 85, "target_start_line": 146, "target_confidence": 79}, {"target_end_line": 162, "source_start_line": 148, "source_end_line": 154, "source_confidence": 85, "target_start_line": 156, "target_confidence": 79}, {"target_end_line": 145, "source_start_line": 78, "source_end_line": 140, "source_confidence": 85, "target_start_line": 79, "target_confidence": 79}, {"target_end_line": 27, "source_start_line": 1, "source_end_line": 27, "source_confidence": 85, "target_start_line": 1, "target_confidence": 79}, {"target_end_line": 65, "source_start_line": 29, "source_end_line": 61, "source_confidence": 85, "target_start_line": 33, "target_confidence": 79}, {"target_end_line": 173, "source_start_line": 156, "source_end_line": 163, "source_confidence": 85, "target_start_line": 166, "target_confidence": 79}, {"target_end_line": 152, "source_start_line": 141, "source_end_line": 147, "source_confidence": 85, "target_start_line": 146, "target_confidence": 79}, {"target_end_line": 162, "source_start_line": 148, "source_end_line": 154, "source_confidence": 85, "target_start_line": 156, "target_confidence": 79}]}, {"source": "thanisata_cb0058e2f04d134798e2", "value": 38, "target": "mcgovemc_9ae67e0693d9a5fbb4de", "links": [{"target_end_line": 42, "source_start_line": 9, "source_end_line": 26, "source_confidence": 22, "target_start_line": 25, "target_confidence": 25}, {"target_end_line": 118, "source_start_line": 148, "source_end_line": 154, "source_confidence": 22, "target_start_line": 112, "target_confidence": 25}, {"target_end_line": 130, "source_start_line": 157, "source_end_line": 163, "source_confidence": 22, "target_start_line": 124, "target_confidence": 25}, {"target_end_line": 49, "source_start_line": 27, "source_end_line": 30, "source_confidence": 22, "target_start_line": 44, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 9, "source_end_line": 26, "source_confidence": 22, "target_start_line": 25, "target_confidence": 25}, {"target_end_line": 118, "source_start_line": 148, "source_end_line": 154, "source_confidence": 22, "target_start_line": 112, "target_confidence": 25}, {"target_end_line": 130, "source_start_line": 157, "source_end_line": 163, "source_confidence": 22, "target_start_line": 124, "target_confidence": 25}, {"target_end_line": 49, "source_start_line": 27, "source_end_line": 30, "source_confidence": 22, "target_start_line": 44, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 9, "source_end_line": 26, "source_confidence": 22, "target_start_line": 25, "target_confidence": 25}, {"target_end_line": 118, "source_start_line": 148, "source_end_line": 154, "source_confidence": 22, "target_start_line": 112, "target_confidence": 25}, {"target_end_line": 130, "source_start_line": 157, "source_end_line": 163, "source_confidence": 22, "target_start_line": 124, "target_confidence": 25}, {"target_end_line": 49, "source_start_line": 27, "source_end_line": 30, "source_confidence": 22, "target_start_line": 44, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 9, "source_end_line": 26, "source_confidence": 22, "target_start_line": 25, "target_confidence": 25}, {"target_end_line": 118, "source_start_line": 148, "source_end_line": 154, "source_confidence": 22, "target_start_line": 112, "target_confidence": 25}, {"target_end_line": 130, "source_start_line": 157, "source_end_line": 163, "source_confidence": 22, "target_start_line": 124, "target_confidence": 25}, {"target_end_line": 49, "source_start_line": 27, "source_end_line": 30, "source_confidence": 22, "target_start_line": 44, "target_confidence": 25}]}, {"source": "thanisata_cb0058e2f04d134798e2", "value": 38, "target": "mcgovemc_8d48064f03c22ae1a539", "links": [{"target_end_line": 42, "source_start_line": 9, "source_end_line": 26, "source_confidence": 22, "target_start_line": 25, "target_confidence": 25}, {"target_end_line": 118, "source_start_line": 148, "source_end_line": 154, "source_confidence": 22, "target_start_line": 112, "target_confidence": 25}, {"target_end_line": 130, "source_start_line": 157, "source_end_line": 163, "source_confidence": 22, "target_start_line": 124, "target_confidence": 25}, {"target_end_line": 49, "source_start_line": 27, "source_end_line": 30, "source_confidence": 22, "target_start_line": 44, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 9, "source_end_line": 26, "source_confidence": 22, "target_start_line": 25, "target_confidence": 25}, {"target_end_line": 118, "source_start_line": 148, "source_end_line": 154, "source_confidence": 22, "target_start_line": 112, "target_confidence": 25}, {"target_end_line": 130, "source_start_line": 157, "source_end_line": 163, "source_confidence": 22, "target_start_line": 124, "target_confidence": 25}, {"target_end_line": 49, "source_start_line": 27, "source_end_line": 30, "source_confidence": 22, "target_start_line": 44, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 9, "source_end_line": 26, "source_confidence": 22, "target_start_line": 25, "target_confidence": 25}, {"target_end_line": 118, "source_start_line": 148, "source_end_line": 154, "source_confidence": 22, "target_start_line": 112, "target_confidence": 25}, {"target_end_line": 130, "source_start_line": 157, "source_end_line": 163, "source_confidence": 22, "target_start_line": 124, "target_confidence": 25}, {"target_end_line": 49, "source_start_line": 27, "source_end_line": 30, "source_confidence": 22, "target_start_line": 44, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 9, "source_end_line": 26, "source_confidence": 22, "target_start_line": 25, "target_confidence": 25}, {"target_end_line": 118, "source_start_line": 148, "source_end_line": 154, "source_confidence": 22, "target_start_line": 112, "target_confidence": 25}, {"target_end_line": 130, "source_start_line": 157, "source_end_line": 163, "source_confidence": 22, "target_start_line": 124, "target_confidence": 25}, {"target_end_line": 49, "source_start_line": 27, "source_end_line": 30, "source_confidence": 22, "target_start_line": 44, "target_confidence": 25}]}, {"source": "Ivanhound_f417f0034cf8b1454d8c", "value": 55, "target": "thanisata_cb0058e2f04d134798e2", "links": [{"target_end_line": 37, "source_start_line": 1, "source_end_line": 37, "source_confidence": 43, "target_start_line": 1, "target_confidence": 36}, {"target_end_line": 165, "source_start_line": 91, "source_end_line": 108, "source_confidence": 43, "target_start_line": 148, "target_confidence": 36}, {"target_end_line": 37, "source_start_line": 1, "source_end_line": 37, "source_confidence": 43, "target_start_line": 1, "target_confidence": 36}, {"target_end_line": 165, "source_start_line": 91, "source_end_line": 108, "source_confidence": 43, "target_start_line": 148, "target_confidence": 36}]}, {"source": "diepvf_5839d689529d717cb8c4", "value": 55, "target": "Ivanhound_f417f0034cf8b1454d8c", "links": [{"target_end_line": 38, "source_start_line": 2, "source_end_line": 38, "source_confidence": 45, "target_start_line": 3, "target_confidence": 42}, {"target_end_line": 108, "source_start_line": 113, "source_end_line": 130, "source_confidence": 45, "target_start_line": 91, "target_confidence": 42}, {"target_end_line": 38, "source_start_line": 2, "source_end_line": 38, "source_confidence": 45, "target_start_line": 3, "target_confidence": 42}, {"target_end_line": 108, "source_start_line": 113, "source_end_line": 130, "source_confidence": 45, "target_start_line": 91, "target_confidence": 42}]}, {"source": "BDAguila_14223e6d3ea9e79f9e3b", "value": 89, "target": "diepvf_5839d689529d717cb8c4", "links": [{"target_end_line": 57, "source_start_line": 3, "source_end_line": 55, "source_confidence": 63, "target_start_line": 2, "target_confidence": 67}, {"target_end_line": 132, "source_start_line": 109, "source_end_line": 128, "source_confidence": 63, "target_start_line": 113, "target_confidence": 67}, {"target_end_line": 72, "source_start_line": 65, "source_end_line": 72, "source_confidence": 63, "target_start_line": 64, "target_confidence": 67}, {"target_end_line": 110, "source_start_line": 97, "source_end_line": 100, "source_confidence": 63, "target_start_line": 107, "target_confidence": 67}, {"target_end_line": 57, "source_start_line": 3, "source_end_line": 55, "source_confidence": 63, "target_start_line": 2, "target_confidence": 67}, {"target_end_line": 132, "source_start_line": 109, "source_end_line": 128, "source_confidence": 63, "target_start_line": 113, "target_confidence": 67}, {"target_end_line": 72, "source_start_line": 65, "source_end_line": 72, "source_confidence": 63, "target_start_line": 64, "target_confidence": 67}, {"target_end_line": 110, "source_start_line": 97, "source_end_line": 100, "source_confidence": 63, "target_start_line": 107, "target_confidence": 67}, {"target_end_line": 57, "source_start_line": 3, "source_end_line": 55, "source_confidence": 63, "target_start_line": 2, "target_confidence": 67}, {"target_end_line": 132, "source_start_line": 109, "source_end_line": 128, "source_confidence": 63, "target_start_line": 113, "target_confidence": 67}, {"target_end_line": 72, "source_start_line": 65, "source_end_line": 72, "source_confidence": 63, "target_start_line": 64, "target_confidence": 67}, {"target_end_line": 110, "source_start_line": 97, "source_end_line": 100, "source_confidence": 63, "target_start_line": 107, "target_confidence": 67}, {"target_end_line": 57, "source_start_line": 3, "source_end_line": 55, "source_confidence": 63, "target_start_line": 2, "target_confidence": 67}, {"target_end_line": 132, "source_start_line": 109, "source_end_line": 128, "source_confidence": 63, "target_start_line": 113, "target_confidence": 67}, {"target_end_line": 72, "source_start_line": 65, "source_end_line": 72, "source_confidence": 63, "target_start_line": 64, "target_confidence": 67}, {"target_end_line": 110, "source_start_line": 97, "source_end_line": 100, "source_confidence": 63, "target_start_line": 107, "target_confidence": 67}]}, {"source": "ericamartel_1a7a11da8c91707edf6f", "value": 63, "target": "BDAguila_14223e6d3ea9e79f9e3b", "links": [{"target_end_line": 43, "source_start_line": 1, "source_end_line": 44, "source_confidence": 76, "target_start_line": 1, "target_confidence": 50}, {"target_end_line": 126, "source_start_line": 56, "source_end_line": 74, "source_confidence": 76, "target_start_line": 109, "target_confidence": 50}, {"target_end_line": 43, "source_start_line": 1, "source_end_line": 44, "source_confidence": 76, "target_start_line": 1, "target_confidence": 50}, {"target_end_line": 126, "source_start_line": 56, "source_end_line": 74, "source_confidence": 76, "target_start_line": 109, "target_confidence": 50}]}, {"source": "altocumulus_8b607978218e4a7513f3", "value": 154, "target": "jfost00_9000b051c96dd30c300e", "links": [{"target_end_line": 166, "source_start_line": 112, "source_end_line": 156, "source_confidence": 84, "target_start_line": 119, "target_confidence": 77}, {"target_end_line": 68, "source_start_line": 25, "source_end_line": 67, "source_confidence": 84, "target_start_line": 26, "target_confidence": 77}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 84, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 94, "source_start_line": 83, "source_end_line": 92, "source_confidence": 84, "target_start_line": 85, "target_confidence": 77}, {"target_end_line": 82, "source_start_line": 71, "source_end_line": 79, "source_confidence": 84, "target_start_line": 74, "target_confidence": 77}, {"target_end_line": 181, "source_start_line": 161, "source_end_line": 167, "source_confidence": 84, "target_start_line": 171, "target_confidence": 77}, {"target_end_line": 117, "source_start_line": 104, "source_end_line": 112, "source_confidence": 84, "target_start_line": 109, "target_confidence": 77}, {"target_end_line": 166, "source_start_line": 112, "source_end_line": 156, "source_confidence": 84, "target_start_line": 119, "target_confidence": 77}, {"target_end_line": 68, "source_start_line": 25, "source_end_line": 67, "source_confidence": 84, "target_start_line": 26, "target_confidence": 77}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 84, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 94, "source_start_line": 83, "source_end_line": 92, "source_confidence": 84, "target_start_line": 85, "target_confidence": 77}, {"target_end_line": 82, "source_start_line": 71, "source_end_line": 79, "source_confidence": 84, "target_start_line": 74, "target_confidence": 77}, {"target_end_line": 181, "source_start_line": 161, "source_end_line": 167, "source_confidence": 84, "target_start_line": 171, "target_confidence": 77}, {"target_end_line": 117, "source_start_line": 104, "source_end_line": 112, "source_confidence": 84, "target_start_line": 109, "target_confidence": 77}, {"target_end_line": 166, "source_start_line": 112, "source_end_line": 156, "source_confidence": 84, "target_start_line": 119, "target_confidence": 77}, {"target_end_line": 68, "source_start_line": 25, "source_end_line": 67, "source_confidence": 84, "target_start_line": 26, "target_confidence": 77}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 84, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 94, "source_start_line": 83, "source_end_line": 92, "source_confidence": 84, "target_start_line": 85, "target_confidence": 77}, {"target_end_line": 82, "source_start_line": 71, "source_end_line": 79, "source_confidence": 84, "target_start_line": 74, "target_confidence": 77}, {"target_end_line": 181, "source_start_line": 161, "source_end_line": 167, "source_confidence": 84, "target_start_line": 171, "target_confidence": 77}, {"target_end_line": 117, "source_start_line": 104, "source_end_line": 112, "source_confidence": 84, "target_start_line": 109, "target_confidence": 77}, {"target_end_line": 166, "source_start_line": 112, "source_end_line": 156, "source_confidence": 84, "target_start_line": 119, "target_confidence": 77}, {"target_end_line": 68, "source_start_line": 25, "source_end_line": 67, "source_confidence": 84, "target_start_line": 26, "target_confidence": 77}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 84, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 94, "source_start_line": 83, "source_end_line": 92, "source_confidence": 84, "target_start_line": 85, "target_confidence": 77}, {"target_end_line": 82, "source_start_line": 71, "source_end_line": 79, "source_confidence": 84, "target_start_line": 74, "target_confidence": 77}, {"target_end_line": 181, "source_start_line": 161, "source_end_line": 167, "source_confidence": 84, "target_start_line": 171, "target_confidence": 77}, {"target_end_line": 117, "source_start_line": 104, "source_end_line": 112, "source_confidence": 84, "target_start_line": 109, "target_confidence": 77}, {"target_end_line": 166, "source_start_line": 112, "source_end_line": 156, "source_confidence": 84, "target_start_line": 119, "target_confidence": 77}, {"target_end_line": 68, "source_start_line": 25, "source_end_line": 67, "source_confidence": 84, "target_start_line": 26, "target_confidence": 77}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 84, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 94, "source_start_line": 83, "source_end_line": 92, "source_confidence": 84, "target_start_line": 85, "target_confidence": 77}, {"target_end_line": 82, "source_start_line": 71, "source_end_line": 79, "source_confidence": 84, "target_start_line": 74, "target_confidence": 77}, {"target_end_line": 181, "source_start_line": 161, "source_end_line": 167, "source_confidence": 84, "target_start_line": 171, "target_confidence": 77}, {"target_end_line": 117, "source_start_line": 104, "source_end_line": 112, "source_confidence": 84, "target_start_line": 109, "target_confidence": 77}, {"target_end_line": 166, "source_start_line": 112, "source_end_line": 156, "source_confidence": 84, "target_start_line": 119, "target_confidence": 77}, {"target_end_line": 68, "source_start_line": 25, "source_end_line": 67, "source_confidence": 84, "target_start_line": 26, "target_confidence": 77}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 84, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 94, "source_start_line": 83, "source_end_line": 92, "source_confidence": 84, "target_start_line": 85, "target_confidence": 77}, {"target_end_line": 82, "source_start_line": 71, "source_end_line": 79, "source_confidence": 84, "target_start_line": 74, "target_confidence": 77}, {"target_end_line": 181, "source_start_line": 161, "source_end_line": 167, "source_confidence": 84, "target_start_line": 171, "target_confidence": 77}, {"target_end_line": 117, "source_start_line": 104, "source_end_line": 112, "source_confidence": 84, "target_start_line": 109, "target_confidence": 77}, {"target_end_line": 166, "source_start_line": 112, "source_end_line": 156, "source_confidence": 84, "target_start_line": 119, "target_confidence": 77}, {"target_end_line": 68, "source_start_line": 25, "source_end_line": 67, "source_confidence": 84, "target_start_line": 26, "target_confidence": 77}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 84, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 94, "source_start_line": 83, "source_end_line": 92, "source_confidence": 84, "target_start_line": 85, "target_confidence": 77}, {"target_end_line": 82, "source_start_line": 71, "source_end_line": 79, "source_confidence": 84, "target_start_line": 74, "target_confidence": 77}, {"target_end_line": 181, "source_start_line": 161, "source_end_line": 167, "source_confidence": 84, "target_start_line": 171, "target_confidence": 77}, {"target_end_line": 117, "source_start_line": 104, "source_end_line": 112, "source_confidence": 84, "target_start_line": 109, "target_confidence": 77}]}, {"source": "jalapic_14fcf6f266e877cb1c23", "value": 153, "target": "altocumulus_8b607978218e4a7513f3", "links": [{"target_end_line": 167, "source_start_line": 92, "source_end_line": 162, "source_confidence": 88, "target_start_line": 104, "target_confidence": 82}, {"target_end_line": 67, "source_start_line": 26, "source_end_line": 68, "source_confidence": 88, "target_start_line": 25, "target_confidence": 82}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 88, "target_start_line": 1, "target_confidence": 82}, {"target_end_line": 79, "source_start_line": 74, "source_end_line": 82, "source_confidence": 88, "target_start_line": 71, "target_confidence": 82}, {"target_end_line": 101, "source_start_line": 83, "source_end_line": 88, "source_confidence": 88, "target_start_line": 96, "target_confidence": 82}, {"target_end_line": 167, "source_start_line": 92, "source_end_line": 162, "source_confidence": 88, "target_start_line": 104, "target_confidence": 82}, {"target_end_line": 67, "source_start_line": 26, "source_end_line": 68, "source_confidence": 88, "target_start_line": 25, "target_confidence": 82}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 88, "target_start_line": 1, "target_confidence": 82}, {"target_end_line": 79, "source_start_line": 74, "source_end_line": 82, "source_confidence": 88, "target_start_line": 71, "target_confidence": 82}, {"target_end_line": 101, "source_start_line": 83, "source_end_line": 88, "source_confidence": 88, "target_start_line": 96, "target_confidence": 82}, {"target_end_line": 167, "source_start_line": 92, "source_end_line": 162, "source_confidence": 88, "target_start_line": 104, "target_confidence": 82}, {"target_end_line": 67, "source_start_line": 26, "source_end_line": 68, "source_confidence": 88, "target_start_line": 25, "target_confidence": 82}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 88, "target_start_line": 1, "target_confidence": 82}, {"target_end_line": 79, "source_start_line": 74, "source_end_line": 82, "source_confidence": 88, "target_start_line": 71, "target_confidence": 82}, {"target_end_line": 101, "source_start_line": 83, "source_end_line": 88, "source_confidence": 88, "target_start_line": 96, "target_confidence": 82}, {"target_end_line": 167, "source_start_line": 92, "source_end_line": 162, "source_confidence": 88, "target_start_line": 104, "target_confidence": 82}, {"target_end_line": 67, "source_start_line": 26, "source_end_line": 68, "source_confidence": 88, "target_start_line": 25, "target_confidence": 82}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 88, "target_start_line": 1, "target_confidence": 82}, {"target_end_line": 79, "source_start_line": 74, "source_end_line": 82, "source_confidence": 88, "target_start_line": 71, "target_confidence": 82}, {"target_end_line": 101, "source_start_line": 83, "source_end_line": 88, "source_confidence": 88, "target_start_line": 96, "target_confidence": 82}, {"target_end_line": 167, "source_start_line": 92, "source_end_line": 162, "source_confidence": 88, "target_start_line": 104, "target_confidence": 82}, {"target_end_line": 67, "source_start_line": 26, "source_end_line": 68, "source_confidence": 88, "target_start_line": 25, "target_confidence": 82}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 88, "target_start_line": 1, "target_confidence": 82}, {"target_end_line": 79, "source_start_line": 74, "source_end_line": 82, "source_confidence": 88, "target_start_line": 71, "target_confidence": 82}, {"target_end_line": 101, "source_start_line": 83, "source_end_line": 88, "source_confidence": 88, "target_start_line": 96, "target_confidence": 82}]}, {"source": "BenHeubl_7faa7393b88bcdb19822", "value": 47, "target": "jalapic_14fcf6f266e877cb1c23", "links": [{"target_end_line": 28, "source_start_line": 3, "source_end_line": 33, "source_confidence": 18, "target_start_line": 12, "target_confidence": 30}, {"target_end_line": 49, "source_start_line": 134, "source_end_line": 149, "source_confidence": 18, "target_start_line": 34, "target_confidence": 30}, {"target_end_line": 28, "source_start_line": 3, "source_end_line": 33, "source_confidence": 18, "target_start_line": 12, "target_confidence": 30}, {"target_end_line": 49, "source_start_line": 134, "source_end_line": 149, "source_confidence": 18, "target_start_line": 34, "target_confidence": 30}]}, {"source": "junngeronimo_cc8b7c3fa1163d314d06", "value": 44, "target": "darshit-shah_3b0327f5e04f89887a4f", "links": [{"target_end_line": 42, "source_start_line": 27, "source_end_line": 34, "source_confidence": 40, "target_start_line": 31, "target_confidence": 8}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 7, "source_confidence": 40, "target_start_line": 1, "target_confidence": 8}, {"target_end_line": 105, "source_start_line": 61, "source_end_line": 73, "source_confidence": 40, "target_start_line": 93, "target_confidence": 8}, {"target_end_line": 20, "source_start_line": 9, "source_end_line": 17, "source_confidence": 40, "target_start_line": 13, "target_confidence": 8}, {"target_end_line": 42, "source_start_line": 27, "source_end_line": 34, "source_confidence": 40, "target_start_line": 31, "target_confidence": 8}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 7, "source_confidence": 40, "target_start_line": 1, "target_confidence": 8}, {"target_end_line": 105, "source_start_line": 61, "source_end_line": 73, "source_confidence": 40, "target_start_line": 93, "target_confidence": 8}, {"target_end_line": 20, "source_start_line": 9, "source_end_line": 17, "source_confidence": 40, "target_start_line": 13, "target_confidence": 8}, {"target_end_line": 42, "source_start_line": 27, "source_end_line": 34, "source_confidence": 40, "target_start_line": 31, "target_confidence": 8}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 7, "source_confidence": 40, "target_start_line": 1, "target_confidence": 8}, {"target_end_line": 105, "source_start_line": 61, "source_end_line": 73, "source_confidence": 40, "target_start_line": 93, "target_confidence": 8}, {"target_end_line": 20, "source_start_line": 9, "source_end_line": 17, "source_confidence": 40, "target_start_line": 13, "target_confidence": 8}, {"target_end_line": 42, "source_start_line": 27, "source_end_line": 34, "source_confidence": 40, "target_start_line": 31, "target_confidence": 8}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 7, "source_confidence": 40, "target_start_line": 1, "target_confidence": 8}, {"target_end_line": 105, "source_start_line": 61, "source_end_line": 73, "source_confidence": 40, "target_start_line": 93, "target_confidence": 8}, {"target_end_line": 20, "source_start_line": 9, "source_end_line": 17, "source_confidence": 40, "target_start_line": 13, "target_confidence": 8}]}, {"source": "sliu72_bb84f01ac9ce7dae7281", "value": 45, "target": "renecnielsen_c36879a6060718fce321", "links": [{"target_end_line": 25, "source_start_line": 9, "source_end_line": 23, "source_confidence": 30, "target_start_line": 11, "target_confidence": 12}, {"target_end_line": 35, "source_start_line": 31, "source_end_line": 37, "source_confidence": 30, "target_start_line": 27, "target_confidence": 12}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 6, "source_confidence": 30, "target_start_line": 1, "target_confidence": 12}, {"target_end_line": 86, "source_start_line": 71, "source_end_line": 76, "source_confidence": 30, "target_start_line": 81, "target_confidence": 12}, {"target_end_line": 114, "source_start_line": 83, "source_end_line": 89, "source_confidence": 30, "target_start_line": 110, "target_confidence": 12}, {"target_end_line": 25, "source_start_line": 9, "source_end_line": 23, "source_confidence": 30, "target_start_line": 11, "target_confidence": 12}, {"target_end_line": 35, "source_start_line": 31, "source_end_line": 37, "source_confidence": 30, "target_start_line": 27, "target_confidence": 12}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 6, "source_confidence": 30, "target_start_line": 1, "target_confidence": 12}, {"target_end_line": 86, "source_start_line": 71, "source_end_line": 76, "source_confidence": 30, "target_start_line": 81, "target_confidence": 12}, {"target_end_line": 114, "source_start_line": 83, "source_end_line": 89, "source_confidence": 30, "target_start_line": 110, "target_confidence": 12}, {"target_end_line": 25, "source_start_line": 9, "source_end_line": 23, "source_confidence": 30, "target_start_line": 11, "target_confidence": 12}, {"target_end_line": 35, "source_start_line": 31, "source_end_line": 37, "source_confidence": 30, "target_start_line": 27, "target_confidence": 12}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 6, "source_confidence": 30, "target_start_line": 1, "target_confidence": 12}, {"target_end_line": 86, "source_start_line": 71, "source_end_line": 76, "source_confidence": 30, "target_start_line": 81, "target_confidence": 12}, {"target_end_line": 114, "source_start_line": 83, "source_end_line": 89, "source_confidence": 30, "target_start_line": 110, "target_confidence": 12}, {"target_end_line": 25, "source_start_line": 9, "source_end_line": 23, "source_confidence": 30, "target_start_line": 11, "target_confidence": 12}, {"target_end_line": 35, "source_start_line": 31, "source_end_line": 37, "source_confidence": 30, "target_start_line": 27, "target_confidence": 12}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 6, "source_confidence": 30, "target_start_line": 1, "target_confidence": 12}, {"target_end_line": 86, "source_start_line": 71, "source_end_line": 76, "source_confidence": 30, "target_start_line": 81, "target_confidence": 12}, {"target_end_line": 114, "source_start_line": 83, "source_end_line": 89, "source_confidence": 30, "target_start_line": 110, "target_confidence": 12}, {"target_end_line": 25, "source_start_line": 9, "source_end_line": 23, "source_confidence": 30, "target_start_line": 11, "target_confidence": 12}, {"target_end_line": 35, "source_start_line": 31, "source_end_line": 37, "source_confidence": 30, "target_start_line": 27, "target_confidence": 12}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 6, "source_confidence": 30, "target_start_line": 1, "target_confidence": 12}, {"target_end_line": 86, "source_start_line": 71, "source_end_line": 76, "source_confidence": 30, "target_start_line": 81, "target_confidence": 12}, {"target_end_line": 114, "source_start_line": 83, "source_end_line": 89, "source_confidence": 30, "target_start_line": 110, "target_confidence": 12}]}, {"source": "junngeronimo_cc8b7c3fa1163d314d06", "value": 75, "target": "sliu72_bb84f01ac9ce7dae7281", "links": [{"target_end_line": 50, "source_start_line": 23, "source_end_line": 49, "source_confidence": 80, "target_start_line": 24, "target_confidence": 59}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 80, "target_start_line": 1, "target_confidence": 59}, {"target_end_line": 62, "source_start_line": 54, "source_end_line": 61, "source_confidence": 80, "target_start_line": 55, "target_confidence": 59}, {"target_end_line": 91, "source_start_line": 72, "source_end_line": 84, "source_confidence": 80, "target_start_line": 78, "target_confidence": 59}, {"target_end_line": 112, "source_start_line": 87, "source_end_line": 89, "source_confidence": 80, "target_start_line": 110, "target_confidence": 59}, {"target_end_line": 50, "source_start_line": 23, "source_end_line": 49, "source_confidence": 80, "target_start_line": 24, "target_confidence": 59}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 80, "target_start_line": 1, "target_confidence": 59}, {"target_end_line": 62, "source_start_line": 54, "source_end_line": 61, "source_confidence": 80, "target_start_line": 55, "target_confidence": 59}, {"target_end_line": 91, "source_start_line": 72, "source_end_line": 84, "source_confidence": 80, "target_start_line": 78, "target_confidence": 59}, {"target_end_line": 112, "source_start_line": 87, "source_end_line": 89, "source_confidence": 80, "target_start_line": 110, "target_confidence": 59}, {"target_end_line": 50, "source_start_line": 23, "source_end_line": 49, "source_confidence": 80, "target_start_line": 24, "target_confidence": 59}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 80, "target_start_line": 1, "target_confidence": 59}, {"target_end_line": 62, "source_start_line": 54, "source_end_line": 61, "source_confidence": 80, "target_start_line": 55, "target_confidence": 59}, {"target_end_line": 91, "source_start_line": 72, "source_end_line": 84, "source_confidence": 80, "target_start_line": 78, "target_confidence": 59}, {"target_end_line": 112, "source_start_line": 87, "source_end_line": 89, "source_confidence": 80, "target_start_line": 110, "target_confidence": 59}, {"target_end_line": 50, "source_start_line": 23, "source_end_line": 49, "source_confidence": 80, "target_start_line": 24, "target_confidence": 59}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 80, "target_start_line": 1, "target_confidence": 59}, {"target_end_line": 62, "source_start_line": 54, "source_end_line": 61, "source_confidence": 80, "target_start_line": 55, "target_confidence": 59}, {"target_end_line": 91, "source_start_line": 72, "source_end_line": 84, "source_confidence": 80, "target_start_line": 78, "target_confidence": 59}, {"target_end_line": 112, "source_start_line": 87, "source_end_line": 89, "source_confidence": 80, "target_start_line": 110, "target_confidence": 59}, {"target_end_line": 50, "source_start_line": 23, "source_end_line": 49, "source_confidence": 80, "target_start_line": 24, "target_confidence": 59}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 80, "target_start_line": 1, "target_confidence": 59}, {"target_end_line": 62, "source_start_line": 54, "source_end_line": 61, "source_confidence": 80, "target_start_line": 55, "target_confidence": 59}, {"target_end_line": 91, "source_start_line": 72, "source_end_line": 84, "source_confidence": 80, "target_start_line": 78, "target_confidence": 59}, {"target_end_line": 112, "source_start_line": 87, "source_end_line": 89, "source_confidence": 80, "target_start_line": 110, "target_confidence": 59}]}, {"source": "johangithub_c9887b42dcaac09381b5", "value": 207, "target": "MatteoTomassetti_a19238e5b706a43b68bf", "links": [{"target_end_line": 191, "source_start_line": 1, "source_end_line": 207, "source_confidence": 92, "target_start_line": 1, "target_confidence": 97}]}, {"source": "diepvf_d30e1f3cd1f7219bd0e5", "value": 73, "target": "ericamartel_1a7a11da8c91707edf6f", "links": [{"target_end_line": 42, "source_start_line": 1, "source_end_line": 42, "source_confidence": 83, "target_start_line": 1, "target_confidence": 87}, {"target_end_line": 86, "source_start_line": 58, "source_end_line": 86, "source_confidence": 83, "target_start_line": 56, "target_confidence": 87}, {"target_end_line": 42, "source_start_line": 1, "source_end_line": 42, "source_confidence": 83, "target_start_line": 1, "target_confidence": 87}, {"target_end_line": 86, "source_start_line": 58, "source_end_line": 86, "source_confidence": 83, "target_start_line": 56, "target_confidence": 87}]}, {"source": "smith13mr_4742802e9cf761912270", "value": 67, "target": "diepvf_d30e1f3cd1f7219bd0e5", "links": [{"target_end_line": 42, "source_start_line": 2, "source_end_line": 40, "source_confidence": 54, "target_start_line": 3, "target_confidence": 79}, {"target_end_line": 84, "source_start_line": 119, "source_end_line": 145, "source_confidence": 54, "target_start_line": 58, "target_confidence": 79}, {"target_end_line": 42, "source_start_line": 2, "source_end_line": 40, "source_confidence": 54, "target_start_line": 3, "target_confidence": 79}, {"target_end_line": 84, "source_start_line": 119, "source_end_line": 145, "source_confidence": 54, "target_start_line": 58, "target_confidence": 79}]}, {"source": "cheneymb_5a9a4b90f3f89e07918c", "value": 73, "target": "smith13mr_4742802e9cf761912270", "links": [{"target_end_line": 40, "source_start_line": 3, "source_end_line": 41, "source_confidence": 91, "target_start_line": 2, "target_confidence": 58}, {"target_end_line": 145, "source_start_line": 47, "source_end_line": 73, "source_confidence": 91, "target_start_line": 119, "target_confidence": 58}, {"target_end_line": 83, "source_start_line": 41, "source_end_line": 44, "source_confidence": 91, "target_start_line": 77, "target_confidence": 58}, {"target_end_line": 40, "source_start_line": 3, "source_end_line": 41, "source_confidence": 91, "target_start_line": 2, "target_confidence": 58}, {"target_end_line": 145, "source_start_line": 47, "source_end_line": 73, "source_confidence": 91, "target_start_line": 119, "target_confidence": 58}, {"target_end_line": 83, "source_start_line": 41, "source_end_line": 44, "source_confidence": 91, "target_start_line": 77, "target_confidence": 58}, {"target_end_line": 40, "source_start_line": 3, "source_end_line": 41, "source_confidence": 91, "target_start_line": 2, "target_confidence": 58}, {"target_end_line": 145, "source_start_line": 47, "source_end_line": 73, "source_confidence": 91, "target_start_line": 119, "target_confidence": 58}, {"target_end_line": 83, "source_start_line": 41, "source_end_line": 44, "source_confidence": 91, "target_start_line": 77, "target_confidence": 58}]}, {"source": "AdamBlaine1_01215dfa696fb3ec66f6", "value": 75, "target": "cheneymb_5a9a4b90f3f89e07918c", "links": [{"target_end_line": 37, "source_start_line": 1, "source_end_line": 36, "source_confidence": 69, "target_start_line": 1, "target_confidence": 93}, {"target_end_line": 75, "source_start_line": 68, "source_end_line": 100, "source_confidence": 69, "target_start_line": 43, "target_confidence": 93}, {"target_end_line": 41, "source_start_line": 54, "source_end_line": 59, "source_confidence": 69, "target_start_line": 38, "target_confidence": 93}, {"target_end_line": 37, "source_start_line": 1, "source_end_line": 36, "source_confidence": 69, "target_start_line": 1, "target_confidence": 93}, {"target_end_line": 75, "source_start_line": 68, "source_end_line": 100, "source_confidence": 69, "target_start_line": 43, "target_confidence": 93}, {"target_end_line": 41, "source_start_line": 54, "source_end_line": 59, "source_confidence": 69, "target_start_line": 38, "target_confidence": 93}, {"target_end_line": 37, "source_start_line": 1, "source_end_line": 36, "source_confidence": 69, "target_start_line": 1, "target_confidence": 93}, {"target_end_line": 75, "source_start_line": 68, "source_end_line": 100, "source_confidence": 69, "target_start_line": 43, "target_confidence": 93}, {"target_end_line": 41, "source_start_line": 54, "source_end_line": 59, "source_confidence": 69, "target_start_line": 38, "target_confidence": 93}]}, {"source": "BrandonStroud_76e2c83907897fdd7aae", "value": 54, "target": "AdamBlaine1_01215dfa696fb3ec66f6", "links": [{"target_end_line": 98, "source_start_line": 34, "source_end_line": 60, "source_confidence": 81, "target_start_line": 72, "target_confidence": 53}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 81, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 27, "source_confidence": 81, "target_start_line": 25, "target_confidence": 53}, {"target_end_line": 98, "source_start_line": 34, "source_end_line": 60, "source_confidence": 81, "target_start_line": 72, "target_confidence": 53}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 81, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 27, "source_confidence": 81, "target_start_line": 25, "target_confidence": 53}, {"target_end_line": 98, "source_start_line": 34, "source_end_line": 60, "source_confidence": 81, "target_start_line": 72, "target_confidence": 53}, {"target_end_line": 24, "source_start_line": 1, "source_end_line": 24, "source_confidence": 81, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 27, "source_confidence": 81, "target_start_line": 25, "target_confidence": 53}]}, {"source": "mhipley_423ed5ef0cc50fcdff0c", "value": 48, "target": "junngeronimo_cc8b7c3fa1163d314d06", "links": [{"target_end_line": 41, "source_start_line": 25, "source_end_line": 36, "source_confidence": 43, "target_start_line": 30, "target_confidence": 46}, {"target_end_line": 79, "source_start_line": 45, "source_end_line": 65, "source_confidence": 43, "target_start_line": 58, "target_confidence": 46}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 43, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 23, "source_start_line": 16, "source_end_line": 22, "source_confidence": 43, "target_start_line": 17, "target_confidence": 46}, {"target_end_line": 41, "source_start_line": 25, "source_end_line": 36, "source_confidence": 43, "target_start_line": 30, "target_confidence": 46}, {"target_end_line": 79, "source_start_line": 45, "source_end_line": 65, "source_confidence": 43, "target_start_line": 58, "target_confidence": 46}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 43, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 23, "source_start_line": 16, "source_end_line": 22, "source_confidence": 43, "target_start_line": 17, "target_confidence": 46}, {"target_end_line": 41, "source_start_line": 25, "source_end_line": 36, "source_confidence": 43, "target_start_line": 30, "target_confidence": 46}, {"target_end_line": 79, "source_start_line": 45, "source_end_line": 65, "source_confidence": 43, "target_start_line": 58, "target_confidence": 46}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 43, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 23, "source_start_line": 16, "source_end_line": 22, "source_confidence": 43, "target_start_line": 17, "target_confidence": 46}, {"target_end_line": 41, "source_start_line": 25, "source_end_line": 36, "source_confidence": 43, "target_start_line": 30, "target_confidence": 46}, {"target_end_line": 79, "source_start_line": 45, "source_end_line": 65, "source_confidence": 43, "target_start_line": 58, "target_confidence": 46}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 43, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 23, "source_start_line": 16, "source_end_line": 22, "source_confidence": 43, "target_start_line": 17, "target_confidence": 46}]}, {"source": "AdamBlaine1_c577bf5492366964735a", "value": 60, "target": "BrandonStroud_76e2c83907897fdd7aae", "links": [{"target_end_line": 60, "source_start_line": 1, "source_end_line": 60, "source_confidence": 68, "target_start_line": 1, "target_confidence": 90}]}, {"source": "jpnoll_e9c7153fca7217c500b2", "value": 63, "target": "AdamBlaine1_c577bf5492366964735a", "links": [{"target_end_line": 62, "source_start_line": 1, "source_end_line": 63, "source_confidence": 92, "target_start_line": 1, "target_confidence": 70}]}, {"source": "surabhishankar_3139b91d478f35c3b0aa", "value": 81, "target": "mhipley_423ed5ef0cc50fcdff0c", "links": [{"target_end_line": 31, "source_start_line": 16, "source_end_line": 35, "source_confidence": 68, "target_start_line": 14, "target_confidence": 66}, {"target_end_line": 73, "source_start_line": 58, "source_end_line": 73, "source_confidence": 68, "target_start_line": 58, "target_confidence": 66}, {"target_end_line": 97, "source_start_line": 78, "source_end_line": 98, "source_confidence": 68, "target_start_line": 77, "target_confidence": 66}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 68, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 57, "source_start_line": 44, "source_end_line": 57, "source_confidence": 68, "target_start_line": 45, "target_confidence": 66}, {"target_end_line": 31, "source_start_line": 16, "source_end_line": 35, "source_confidence": 68, "target_start_line": 14, "target_confidence": 66}, {"target_end_line": 73, "source_start_line": 58, "source_end_line": 73, "source_confidence": 68, "target_start_line": 58, "target_confidence": 66}, {"target_end_line": 97, "source_start_line": 78, "source_end_line": 98, "source_confidence": 68, "target_start_line": 77, "target_confidence": 66}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 68, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 57, "source_start_line": 44, "source_end_line": 57, "source_confidence": 68, "target_start_line": 45, "target_confidence": 66}, {"target_end_line": 31, "source_start_line": 16, "source_end_line": 35, "source_confidence": 68, "target_start_line": 14, "target_confidence": 66}, {"target_end_line": 73, "source_start_line": 58, "source_end_line": 73, "source_confidence": 68, "target_start_line": 58, "target_confidence": 66}, {"target_end_line": 97, "source_start_line": 78, "source_end_line": 98, "source_confidence": 68, "target_start_line": 77, "target_confidence": 66}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 68, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 57, "source_start_line": 44, "source_end_line": 57, "source_confidence": 68, "target_start_line": 45, "target_confidence": 66}, {"target_end_line": 31, "source_start_line": 16, "source_end_line": 35, "source_confidence": 68, "target_start_line": 14, "target_confidence": 66}, {"target_end_line": 73, "source_start_line": 58, "source_end_line": 73, "source_confidence": 68, "target_start_line": 58, "target_confidence": 66}, {"target_end_line": 97, "source_start_line": 78, "source_end_line": 98, "source_confidence": 68, "target_start_line": 77, "target_confidence": 66}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 68, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 57, "source_start_line": 44, "source_end_line": 57, "source_confidence": 68, "target_start_line": 45, "target_confidence": 66}, {"target_end_line": 31, "source_start_line": 16, "source_end_line": 35, "source_confidence": 68, "target_start_line": 14, "target_confidence": 66}, {"target_end_line": 73, "source_start_line": 58, "source_end_line": 73, "source_confidence": 68, "target_start_line": 58, "target_confidence": 66}, {"target_end_line": 97, "source_start_line": 78, "source_end_line": 98, "source_confidence": 68, "target_start_line": 77, "target_confidence": 66}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 68, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 57, "source_start_line": 44, "source_end_line": 57, "source_confidence": 68, "target_start_line": 45, "target_confidence": 66}]}, {"source": "Rico3734_d2ab6b9c3ee57ed647f4", "value": 60, "target": "jpnoll_e9c7153fca7217c500b2", "links": [{"target_end_line": 60, "source_start_line": 1, "source_end_line": 60, "source_confidence": 97, "target_start_line": 1, "target_confidence": 89}]}, {"source": "dunlapea_f5a3b738d32cf23ee0da", "value": 63, "target": "Rico3734_d2ab6b9c3ee57ed647f4", "links": [{"target_end_line": 63, "source_start_line": 1, "source_end_line": 63, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "dunlapea_f5a3b738d32cf23ee0da", "value": 63, "target": "Rico3734_596bee71fb0e0373f2bd", "links": [{"target_end_line": 63, "source_start_line": 1, "source_end_line": 63, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "dunlapea_f5a3b738d32cf23ee0da", "value": 63, "target": "Rico3734_ce962fd82a6f7c8c1836", "links": [{"target_end_line": 63, "source_start_line": 1, "source_end_line": 63, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "NgoScope_f5b840a531408aa77ead", "value": 60, "target": "dunlapea_f5a3b738d32cf23ee0da", "links": [{"target_end_line": 60, "source_start_line": 1, "source_end_line": 60, "source_confidence": 67, "target_start_line": 1, "target_confidence": 97}]}, {"source": "NgoScope_f5b840a531408aa77ead", "value": 60, "target": "dunlapea_cb81841a3531e586aa08", "links": [{"target_end_line": 60, "source_start_line": 1, "source_end_line": 60, "source_confidence": 67, "target_start_line": 1, "target_confidence": 97}]}, {"source": "grybnicky_36511a38ee44a254c172", "value": 63, "target": "NgoScope_f5b840a531408aa77ead", "links": [{"target_end_line": 63, "source_start_line": 1, "source_end_line": 62, "source_confidence": 98, "target_start_line": 1, "target_confidence": 68}]}, {"source": "ericamartel_2c7a18c7fe09e8475715", "value": 60, "target": "grybnicky_36511a38ee44a254c172", "links": [{"target_end_line": 60, "source_start_line": 1, "source_end_line": 60, "source_confidence": 97, "target_start_line": 1, "target_confidence": 96}]}, {"source": "dunlapea_f1b2b824bd9cccea57df", "value": 63, "target": "ericamartel_2c7a18c7fe09e8475715", "links": [{"target_end_line": 63, "source_start_line": 1, "source_end_line": 63, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "zaccagbj_72570438c3c733a43c7b", "value": 63, "target": "dunlapea_f1b2b824bd9cccea57df", "links": [{"target_end_line": 63, "source_start_line": 1, "source_end_line": 63, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "ericamartel_7659024aa5a2c74c8de1", "value": 63, "target": "zaccagbj_72570438c3c733a43c7b", "links": [{"target_end_line": 63, "source_start_line": 1, "source_end_line": 63, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "grybnicky_974c107a455f3ee4a40d", "value": 63, "target": "ericamartel_7659024aa5a2c74c8de1", "links": [{"target_end_line": 63, "source_start_line": 1, "source_end_line": 63, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "zaccagbj_3ec06ca5a0c4696e38c0", "value": 63, "target": "grybnicky_974c107a455f3ee4a40d", "links": [{"target_end_line": 63, "source_start_line": 1, "source_end_line": 63, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "grybnicky_16ffc82ccdc6275d9e31", "value": 60, "target": "zaccagbj_3ec06ca5a0c4696e38c0", "links": [{"target_end_line": 60, "source_start_line": 1, "source_end_line": 60, "source_confidence": 95, "target_start_line": 1, "target_confidence": 97}]}, {"source": "diepvf_7e065f7afc9056315fbb", "value": 58, "target": "grybnicky_16ffc82ccdc6275d9e31", "links": [{"target_end_line": 60, "source_start_line": 45, "source_end_line": 102, "source_confidence": 66, "target_start_line": 3, "target_confidence": 90}]}, {"source": "JohnWall64_1409924ec52bb2867b27", "value": 61, "target": "diepvf_7e065f7afc9056315fbb", "links": [{"target_end_line": 105, "source_start_line": 3, "source_end_line": 63, "source_confidence": 94, "target_start_line": 45, "target_confidence": 67}]}, {"source": "mcgovemc_6ab200758a817e8af7cc", "value": 63, "target": "JohnWall64_1409924ec52bb2867b27", "links": [{"target_end_line": 63, "source_start_line": 1, "source_end_line": 63, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "espinielli_874de501ebf175d84fef", "value": 28, "target": "mbostock_835cf2925ba217821434", "links": [{"target_end_line": 66, "source_start_line": 134, "source_end_line": 150, "source_confidence": 19, "target_start_line": 50, "target_confidence": 35}, {"target_end_line": 77, "source_start_line": 151, "source_end_line": 161, "source_confidence": 19, "target_start_line": 67, "target_confidence": 35}, {"target_end_line": 66, "source_start_line": 134, "source_end_line": 150, "source_confidence": 19, "target_start_line": 50, "target_confidence": 35}, {"target_end_line": 77, "source_start_line": 151, "source_end_line": 161, "source_confidence": 19, "target_start_line": 67, "target_confidence": 35}]}, {"source": "Smith5mr_993688a11a5012207c36", "value": 65, "target": "mansfimx_8afdede69a25463716c0", "links": [{"target_end_line": 65, "source_start_line": 1, "source_end_line": 65, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "Wanagram_a4a5dbb278ba56f94d98", "value": 39, "target": "lambrex_b52a4c0ad10ca83e8ed2", "links": [{"target_end_line": 29, "source_start_line": 1, "source_end_line": 29, "source_confidence": 73, "target_start_line": 1, "target_confidence": 92}, {"target_end_line": 39, "source_start_line": 41, "source_end_line": 49, "source_confidence": 73, "target_start_line": 30, "target_confidence": 92}, {"target_end_line": 29, "source_start_line": 1, "source_end_line": 29, "source_confidence": 73, "target_start_line": 1, "target_confidence": 92}, {"target_end_line": 39, "source_start_line": 41, "source_end_line": 49, "source_confidence": 73, "target_start_line": 30, "target_confidence": 92}]}, {"source": "cheneymb_955d61b7d5a8f52a42bb", "value": 35, "target": "Wanagram_a4a5dbb278ba56f94d98", "links": [{"target_end_line": 18, "source_start_line": 10, "source_end_line": 19, "source_confidence": 79, "target_start_line": 9, "target_confidence": 67}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 9, "source_confidence": 79, "target_start_line": 1, "target_confidence": 67}, {"target_end_line": 49, "source_start_line": 36, "source_end_line": 44, "source_confidence": 79, "target_start_line": 41, "target_confidence": 67}, {"target_end_line": 29, "source_start_line": 29, "source_end_line": 35, "source_confidence": 79, "target_start_line": 22, "target_confidence": 67}, {"target_end_line": 18, "source_start_line": 10, "source_end_line": 19, "source_confidence": 79, "target_start_line": 9, "target_confidence": 67}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 9, "source_confidence": 79, "target_start_line": 1, "target_confidence": 67}, {"target_end_line": 49, "source_start_line": 36, "source_end_line": 44, "source_confidence": 79, "target_start_line": 41, "target_confidence": 67}, {"target_end_line": 29, "source_start_line": 29, "source_end_line": 35, "source_confidence": 79, "target_start_line": 22, "target_confidence": 67}, {"target_end_line": 18, "source_start_line": 10, "source_end_line": 19, "source_confidence": 79, "target_start_line": 9, "target_confidence": 67}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 9, "source_confidence": 79, "target_start_line": 1, "target_confidence": 67}, {"target_end_line": 49, "source_start_line": 36, "source_end_line": 44, "source_confidence": 79, "target_start_line": 41, "target_confidence": 67}, {"target_end_line": 29, "source_start_line": 29, "source_end_line": 35, "source_confidence": 79, "target_start_line": 22, "target_confidence": 67}, {"target_end_line": 18, "source_start_line": 10, "source_end_line": 19, "source_confidence": 79, "target_start_line": 9, "target_confidence": 67}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 9, "source_confidence": 79, "target_start_line": 1, "target_confidence": 67}, {"target_end_line": 49, "source_start_line": 36, "source_end_line": 44, "source_confidence": 79, "target_start_line": 41, "target_confidence": 67}, {"target_end_line": 29, "source_start_line": 29, "source_end_line": 35, "source_confidence": 79, "target_start_line": 22, "target_confidence": 67}]}, {"source": "dunlapea_54650ee6b4cbf0c03504", "value": 28, "target": "ashtonburg_981721947501c7fc2fbc", "links": [{"target_end_line": 28, "source_start_line": 1, "source_end_line": 28, "source_confidence": 97, "target_start_line": 1, "target_confidence": 97}]}, {"source": "dunlapea_54650ee6b4cbf0c03504", "value": 28, "target": "ashtonburg_b378b3a76c1e12038c43", "links": [{"target_end_line": 28, "source_start_line": 1, "source_end_line": 28, "source_confidence": 97, "target_start_line": 1, "target_confidence": 97}]}, {"source": "sjhavanur_d335d1ea06102c47d653", "value": 46, "target": "surabhishankar_3139b91d478f35c3b0aa", "links": [{"target_end_line": 94, "source_start_line": 133, "source_end_line": 153, "source_confidence": 20, "target_start_line": 74, "target_confidence": 41}, {"target_end_line": 35, "source_start_line": 26, "source_end_line": 34, "source_confidence": 20, "target_start_line": 27, "target_confidence": 41}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 9, "source_confidence": 20, "target_start_line": 1, "target_confidence": 41}, {"target_end_line": 26, "source_start_line": 20, "source_end_line": 26, "source_confidence": 20, "target_start_line": 19, "target_confidence": 41}, {"target_end_line": 94, "source_start_line": 133, "source_end_line": 153, "source_confidence": 20, "target_start_line": 74, "target_confidence": 41}, {"target_end_line": 35, "source_start_line": 26, "source_end_line": 34, "source_confidence": 20, "target_start_line": 27, "target_confidence": 41}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 9, "source_confidence": 20, "target_start_line": 1, "target_confidence": 41}, {"target_end_line": 26, "source_start_line": 20, "source_end_line": 26, "source_confidence": 20, "target_start_line": 19, "target_confidence": 41}, {"target_end_line": 94, "source_start_line": 133, "source_end_line": 153, "source_confidence": 20, "target_start_line": 74, "target_confidence": 41}, {"target_end_line": 35, "source_start_line": 26, "source_end_line": 34, "source_confidence": 20, "target_start_line": 27, "target_confidence": 41}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 9, "source_confidence": 20, "target_start_line": 1, "target_confidence": 41}, {"target_end_line": 26, "source_start_line": 20, "source_end_line": 26, "source_confidence": 20, "target_start_line": 19, "target_confidence": 41}, {"target_end_line": 94, "source_start_line": 133, "source_end_line": 153, "source_confidence": 20, "target_start_line": 74, "target_confidence": 41}, {"target_end_line": 35, "source_start_line": 26, "source_end_line": 34, "source_confidence": 20, "target_start_line": 27, "target_confidence": 41}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 9, "source_confidence": 20, "target_start_line": 1, "target_confidence": 41}, {"target_end_line": 26, "source_start_line": 20, "source_end_line": 26, "source_confidence": 20, "target_start_line": 19, "target_confidence": 41}]}, {"source": "jeremiahraymond_81d0c04cbd78c95cc674", "value": 37, "target": "sjhavanur_d335d1ea06102c47d653", "links": [{"target_end_line": 28, "source_start_line": 9, "source_end_line": 25, "source_confidence": 32, "target_start_line": 12, "target_confidence": 15}, {"target_end_line": 39, "source_start_line": 31, "source_end_line": 39, "source_confidence": 32, "target_start_line": 29, "target_confidence": 15}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 5, "source_confidence": 32, "target_start_line": 1, "target_confidence": 15}, {"target_end_line": 28, "source_start_line": 9, "source_end_line": 25, "source_confidence": 32, "target_start_line": 12, "target_confidence": 15}, {"target_end_line": 39, "source_start_line": 31, "source_end_line": 39, "source_confidence": 32, "target_start_line": 29, "target_confidence": 15}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 5, "source_confidence": 32, "target_start_line": 1, "target_confidence": 15}, {"target_end_line": 28, "source_start_line": 9, "source_end_line": 25, "source_confidence": 32, "target_start_line": 12, "target_confidence": 15}, {"target_end_line": 39, "source_start_line": 31, "source_end_line": 39, "source_confidence": 32, "target_start_line": 29, "target_confidence": 15}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 5, "source_confidence": 32, "target_start_line": 1, "target_confidence": 15}]}, {"source": "HelenHChen_d1699c22d0067e4cb2d3", "value": 82, "target": "jeremiahraymond_81d0c04cbd78c95cc674", "links": [{"target_end_line": 61, "source_start_line": 24, "source_end_line": 62, "source_confidence": 77, "target_start_line": 23, "target_confidence": 83}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 77, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 87, "source_start_line": 75, "source_end_line": 94, "source_confidence": 77, "target_start_line": 68, "target_confidence": 83}, {"target_end_line": 61, "source_start_line": 24, "source_end_line": 62, "source_confidence": 77, "target_start_line": 23, "target_confidence": 83}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 77, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 87, "source_start_line": 75, "source_end_line": 94, "source_confidence": 77, "target_start_line": 68, "target_confidence": 83}, {"target_end_line": 61, "source_start_line": 24, "source_end_line": 62, "source_confidence": 77, "target_start_line": 23, "target_confidence": 83}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 77, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 87, "source_start_line": 75, "source_end_line": 94, "source_confidence": 77, "target_start_line": 68, "target_confidence": 83}]}, {"source": "fengqingli_a2c2ab6da0a0aa3d8fd1", "value": 82, "target": "HelenHChen_d1699c22d0067e4cb2d3", "links": [{"target_end_line": 62, "source_start_line": 23, "source_end_line": 61, "source_confidence": 83, "target_start_line": 24, "target_confidence": 77}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 83, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 94, "source_start_line": 68, "source_end_line": 87, "source_confidence": 83, "target_start_line": 75, "target_confidence": 77}, {"target_end_line": 62, "source_start_line": 23, "source_end_line": 61, "source_confidence": 83, "target_start_line": 24, "target_confidence": 77}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 83, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 94, "source_start_line": 68, "source_end_line": 87, "source_confidence": 83, "target_start_line": 75, "target_confidence": 77}, {"target_end_line": 62, "source_start_line": 23, "source_end_line": 61, "source_confidence": 83, "target_start_line": 24, "target_confidence": 77}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 83, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 94, "source_start_line": 68, "source_end_line": 87, "source_confidence": 83, "target_start_line": 75, "target_confidence": 77}]}, {"source": "kiansheik_fea2240ea499f36b7ec4", "value": 94, "target": "fengqingli_a2c2ab6da0a0aa3d8fd1", "links": [{"target_end_line": 94, "source_start_line": 1, "source_end_line": 94, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "AdamBlaine1_7af6f1a2463de9febde0", "value": 93, "target": "kiansheik_fea2240ea499f36b7ec4", "links": [{"target_end_line": 64, "source_start_line": 19, "source_end_line": 65, "source_confidence": 94, "target_start_line": 18, "target_confidence": 98}, {"target_end_line": 94, "source_start_line": 72, "source_end_line": 99, "source_confidence": 94, "target_start_line": 67, "target_confidence": 98}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 94, "target_start_line": 1, "target_confidence": 98}, {"target_end_line": 64, "source_start_line": 19, "source_end_line": 65, "source_confidence": 94, "target_start_line": 18, "target_confidence": 98}, {"target_end_line": 94, "source_start_line": 72, "source_end_line": 99, "source_confidence": 94, "target_start_line": 67, "target_confidence": 98}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 94, "target_start_line": 1, "target_confidence": 98}, {"target_end_line": 64, "source_start_line": 19, "source_end_line": 65, "source_confidence": 94, "target_start_line": 18, "target_confidence": 98}, {"target_end_line": 94, "source_start_line": 72, "source_end_line": 99, "source_confidence": 94, "target_start_line": 67, "target_confidence": 98}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 94, "target_start_line": 1, "target_confidence": 98}]}, {"source": "AdamBlaine1_7af6f1a2463de9febde0", "value": 93, "target": "kiansheik_d3b1e127741d5be5bbc3", "links": [{"target_end_line": 64, "source_start_line": 19, "source_end_line": 65, "source_confidence": 94, "target_start_line": 18, "target_confidence": 98}, {"target_end_line": 94, "source_start_line": 72, "source_end_line": 99, "source_confidence": 94, "target_start_line": 67, "target_confidence": 98}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 94, "target_start_line": 1, "target_confidence": 98}, {"target_end_line": 64, "source_start_line": 19, "source_end_line": 65, "source_confidence": 94, "target_start_line": 18, "target_confidence": 98}, {"target_end_line": 94, "source_start_line": 72, "source_end_line": 99, "source_confidence": 94, "target_start_line": 67, "target_confidence": 98}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 94, "target_start_line": 1, "target_confidence": 98}, {"target_end_line": 64, "source_start_line": 19, "source_end_line": 65, "source_confidence": 94, "target_start_line": 18, "target_confidence": 98}, {"target_end_line": 94, "source_start_line": 72, "source_end_line": 99, "source_confidence": 94, "target_start_line": 67, "target_confidence": 98}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 94, "target_start_line": 1, "target_confidence": 98}]}, {"source": "AdamBlaine1_7af6f1a2463de9febde0", "value": 93, "target": "kiansheik_2fbe51dcbc0d27cf897b", "links": [{"target_end_line": 64, "source_start_line": 19, "source_end_line": 65, "source_confidence": 94, "target_start_line": 18, "target_confidence": 98}, {"target_end_line": 94, "source_start_line": 72, "source_end_line": 99, "source_confidence": 94, "target_start_line": 67, "target_confidence": 98}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 94, "target_start_line": 1, "target_confidence": 98}, {"target_end_line": 64, "source_start_line": 19, "source_end_line": 65, "source_confidence": 94, "target_start_line": 18, "target_confidence": 98}, {"target_end_line": 94, "source_start_line": 72, "source_end_line": 99, "source_confidence": 94, "target_start_line": 67, "target_confidence": 98}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 94, "target_start_line": 1, "target_confidence": 98}, {"target_end_line": 64, "source_start_line": 19, "source_end_line": 65, "source_confidence": 94, "target_start_line": 18, "target_confidence": 98}, {"target_end_line": 94, "source_start_line": 72, "source_end_line": 99, "source_confidence": 94, "target_start_line": 67, "target_confidence": 98}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 94, "target_start_line": 1, "target_confidence": 98}]}, {"source": "lambrex_0514ad3e56d05722f997", "value": 93, "target": "AdamBlaine1_7af6f1a2463de9febde0", "links": [{"target_end_line": 65, "source_start_line": 20, "source_end_line": 65, "source_confidence": 96, "target_start_line": 19, "target_confidence": 94}, {"target_end_line": 99, "source_start_line": 68, "source_end_line": 95, "source_confidence": 96, "target_start_line": 72, "target_confidence": 94}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 96, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 65, "source_start_line": 20, "source_end_line": 65, "source_confidence": 96, "target_start_line": 19, "target_confidence": 94}, {"target_end_line": 99, "source_start_line": 68, "source_end_line": 95, "source_confidence": 96, "target_start_line": 72, "target_confidence": 94}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 96, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 65, "source_start_line": 20, "source_end_line": 65, "source_confidence": 96, "target_start_line": 19, "target_confidence": 94}, {"target_end_line": 99, "source_start_line": 68, "source_end_line": 95, "source_confidence": 96, "target_start_line": 72, "target_confidence": 94}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 96, "target_start_line": 1, "target_confidence": 94}]}, {"source": "thanisata_e817989f31d3ab7bae48", "value": 94, "target": "lambrex_0514ad3e56d05722f997", "links": [{"target_end_line": 95, "source_start_line": 18, "source_end_line": 94, "source_confidence": 99, "target_start_line": 20, "target_confidence": 97}, {"target_end_line": 17, "source_start_line": 1, "source_end_line": 17, "source_confidence": 99, "target_start_line": 1, "target_confidence": 97}, {"target_end_line": 95, "source_start_line": 18, "source_end_line": 94, "source_confidence": 99, "target_start_line": 20, "target_confidence": 97}, {"target_end_line": 17, "source_start_line": 1, "source_end_line": 17, "source_confidence": 99, "target_start_line": 1, "target_confidence": 97}]}, {"source": "thoma2nm_882ceca293eb26143043", "value": 93, "target": "thanisata_e817989f31d3ab7bae48", "links": [{"target_end_line": 64, "source_start_line": 19, "source_end_line": 65, "source_confidence": 94, "target_start_line": 18, "target_confidence": 98}, {"target_end_line": 94, "source_start_line": 74, "source_end_line": 101, "source_confidence": 94, "target_start_line": 67, "target_confidence": 98}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 94, "target_start_line": 1, "target_confidence": 98}, {"target_end_line": 64, "source_start_line": 19, "source_end_line": 65, "source_confidence": 94, "target_start_line": 18, "target_confidence": 98}, {"target_end_line": 94, "source_start_line": 74, "source_end_line": 101, "source_confidence": 94, "target_start_line": 67, "target_confidence": 98}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 94, "target_start_line": 1, "target_confidence": 98}, {"target_end_line": 64, "source_start_line": 19, "source_end_line": 65, "source_confidence": 94, "target_start_line": 18, "target_confidence": 98}, {"target_end_line": 94, "source_start_line": 74, "source_end_line": 101, "source_confidence": 94, "target_start_line": 67, "target_confidence": 98}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 94, "target_start_line": 1, "target_confidence": 98}]}, {"source": "lambrex_17567df60d22eed325b4", "value": 93, "target": "thoma2nm_882ceca293eb26143043", "links": [{"target_end_line": 65, "source_start_line": 18, "source_end_line": 64, "source_confidence": 98, "target_start_line": 19, "target_confidence": 94}, {"target_end_line": 101, "source_start_line": 67, "source_end_line": 94, "source_confidence": 98, "target_start_line": 74, "target_confidence": 94}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 98, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 65, "source_start_line": 18, "source_end_line": 64, "source_confidence": 98, "target_start_line": 19, "target_confidence": 94}, {"target_end_line": 101, "source_start_line": 67, "source_end_line": 94, "source_confidence": 98, "target_start_line": 74, "target_confidence": 94}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 98, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 65, "source_start_line": 18, "source_end_line": 64, "source_confidence": 98, "target_start_line": 19, "target_confidence": 94}, {"target_end_line": 101, "source_start_line": 67, "source_end_line": 94, "source_confidence": 98, "target_start_line": 74, "target_confidence": 94}, {"target_end_line": 18, "source_start_line": 1, "source_end_line": 18, "source_confidence": 98, "target_start_line": 1, "target_confidence": 94}]}, {"source": "nguyenbq_cbd685cc1c75046303ae", "value": 38, "target": "lambrex_17567df60d22eed325b4", "links": [{"target_end_line": 36, "source_start_line": 22, "source_end_line": 30, "source_confidence": 54, "target_start_line": 30, "target_confidence": 36}, {"target_end_line": 73, "source_start_line": 34, "source_end_line": 48, "source_confidence": 54, "target_start_line": 58, "target_confidence": 36}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 54, "target_start_line": 1, "target_confidence": 36}, {"target_end_line": 23, "source_start_line": 13, "source_end_line": 19, "source_confidence": 54, "target_start_line": 17, "target_confidence": 36}, {"target_end_line": 36, "source_start_line": 22, "source_end_line": 30, "source_confidence": 54, "target_start_line": 30, "target_confidence": 36}, {"target_end_line": 73, "source_start_line": 34, "source_end_line": 48, "source_confidence": 54, "target_start_line": 58, "target_confidence": 36}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 54, "target_start_line": 1, "target_confidence": 36}, {"target_end_line": 23, "source_start_line": 13, "source_end_line": 19, "source_confidence": 54, "target_start_line": 17, "target_confidence": 36}, {"target_end_line": 36, "source_start_line": 22, "source_end_line": 30, "source_confidence": 54, "target_start_line": 30, "target_confidence": 36}, {"target_end_line": 73, "source_start_line": 34, "source_end_line": 48, "source_confidence": 54, "target_start_line": 58, "target_confidence": 36}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 54, "target_start_line": 1, "target_confidence": 36}, {"target_end_line": 23, "source_start_line": 13, "source_end_line": 19, "source_confidence": 54, "target_start_line": 17, "target_confidence": 36}, {"target_end_line": 36, "source_start_line": 22, "source_end_line": 30, "source_confidence": 54, "target_start_line": 30, "target_confidence": 36}, {"target_end_line": 73, "source_start_line": 34, "source_end_line": 48, "source_confidence": 54, "target_start_line": 58, "target_confidence": 36}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 54, "target_start_line": 1, "target_confidence": 36}, {"target_end_line": 23, "source_start_line": 13, "source_end_line": 19, "source_confidence": 54, "target_start_line": 17, "target_confidence": 36}]}, {"source": "meysamabl_05f79318b878e5cc2f4b", "value": 62, "target": "N0taN3rd_ca8a6d89ed7a8cc2d972", "links": [{"target_end_line": 133, "source_start_line": 61, "source_end_line": 71, "source_confidence": 32, "target_start_line": 114, "target_confidence": 19}, {"target_end_line": 93, "source_start_line": 77, "source_end_line": 108, "source_confidence": 32, "target_start_line": 59, "target_confidence": 19}, {"target_end_line": 99, "source_start_line": 113, "source_end_line": 118, "source_confidence": 32, "target_start_line": 93, "target_confidence": 19}, {"target_end_line": 133, "source_start_line": 61, "source_end_line": 71, "source_confidence": 32, "target_start_line": 114, "target_confidence": 19}, {"target_end_line": 93, "source_start_line": 77, "source_end_line": 108, "source_confidence": 32, "target_start_line": 59, "target_confidence": 19}, {"target_end_line": 99, "source_start_line": 113, "source_end_line": 118, "source_confidence": 32, "target_start_line": 93, "target_confidence": 19}, {"target_end_line": 133, "source_start_line": 61, "source_end_line": 71, "source_confidence": 32, "target_start_line": 114, "target_confidence": 19}, {"target_end_line": 93, "source_start_line": 77, "source_end_line": 108, "source_confidence": 32, "target_start_line": 59, "target_confidence": 19}, {"target_end_line": 99, "source_start_line": 113, "source_end_line": 118, "source_confidence": 32, "target_start_line": 93, "target_confidence": 19}]}, {"source": "zaccagbj_75878caf6912fe6bfe85", "value": 66, "target": "nguyenbq_cbd685cc1c75046303ae", "links": [{"target_end_line": 54, "source_start_line": 1, "source_end_line": 52, "source_confidence": 89, "target_start_line": 1, "target_confidence": 87}, {"target_end_line": 71, "source_start_line": 57, "source_end_line": 67, "source_confidence": 89, "target_start_line": 60, "target_confidence": 87}, {"target_end_line": 54, "source_start_line": 1, "source_end_line": 52, "source_confidence": 89, "target_start_line": 1, "target_confidence": 87}, {"target_end_line": 71, "source_start_line": 57, "source_end_line": 67, "source_confidence": 89, "target_start_line": 60, "target_confidence": 87}]}, {"source": "Smith5mr_13ea59d2d6a615a0f7df", "value": 66, "target": "zaccagbj_75878caf6912fe6bfe85", "links": [{"target_end_line": 56, "source_start_line": 22, "source_end_line": 54, "source_confidence": 98, "target_start_line": 23, "target_confidence": 95}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 20, "source_confidence": 98, "target_start_line": 1, "target_confidence": 95}, {"target_end_line": 67, "source_start_line": 54, "source_end_line": 63, "source_confidence": 98, "target_start_line": 57, "target_confidence": 95}, {"target_end_line": 56, "source_start_line": 22, "source_end_line": 54, "source_confidence": 98, "target_start_line": 23, "target_confidence": 95}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 20, "source_confidence": 98, "target_start_line": 1, "target_confidence": 95}, {"target_end_line": 67, "source_start_line": 54, "source_end_line": 63, "source_confidence": 98, "target_start_line": 57, "target_confidence": 95}, {"target_end_line": 56, "source_start_line": 22, "source_end_line": 54, "source_confidence": 98, "target_start_line": 23, "target_confidence": 95}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 20, "source_confidence": 98, "target_start_line": 1, "target_confidence": 95}, {"target_end_line": 67, "source_start_line": 54, "source_end_line": 63, "source_confidence": 98, "target_start_line": 57, "target_confidence": 95}]}, {"source": "diepvf_2436efd44fc8f9cb646e", "value": 63, "target": "Smith5mr_13ea59d2d6a615a0f7df", "links": [{"target_end_line": 63, "source_start_line": 22, "source_end_line": 64, "source_confidence": 98, "target_start_line": 22, "target_confidence": 98}, {"target_end_line": 20, "source_start_line": 1, "source_end_line": 20, "source_confidence": 98, "target_start_line": 1, "target_confidence": 98}, {"target_end_line": 63, "source_start_line": 22, "source_end_line": 64, "source_confidence": 98, "target_start_line": 22, "target_confidence": 98}, {"target_end_line": 20, "source_start_line": 1, "source_end_line": 20, "source_confidence": 98, "target_start_line": 1, "target_confidence": 98}]}, {"source": "nguyenbq_05f859f169dbe3dcbbfe", "value": 69, "target": "diepvf_2436efd44fc8f9cb646e", "links": [{"target_end_line": 51, "source_start_line": 1, "source_end_line": 54, "source_confidence": 94, "target_start_line": 1, "target_confidence": 99}, {"target_end_line": 64, "source_start_line": 57, "source_end_line": 71, "source_confidence": 94, "target_start_line": 52, "target_confidence": 99}, {"target_end_line": 51, "source_start_line": 1, "source_end_line": 54, "source_confidence": 94, "target_start_line": 1, "target_confidence": 99}, {"target_end_line": 64, "source_start_line": 57, "source_end_line": 71, "source_confidence": 94, "target_start_line": 52, "target_confidence": 99}]}, {"source": "NgoScope_19e6a6b81b8ae8c93de4", "value": 82, "target": "Ifeanyi-1_591f14d2edbd11dda068", "links": [{"target_end_line": 82, "source_start_line": 1, "source_end_line": 82, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "BDAguila_fc1eca1081329aa55ef7", "value": 66, "target": "nguyenbq_05f859f169dbe3dcbbfe", "links": [{"target_end_line": 54, "source_start_line": 1, "source_end_line": 52, "source_confidence": 89, "target_start_line": 1, "target_confidence": 87}, {"target_end_line": 71, "source_start_line": 57, "source_end_line": 68, "source_confidence": 89, "target_start_line": 60, "target_confidence": 87}, {"target_end_line": 54, "source_start_line": 1, "source_end_line": 52, "source_confidence": 89, "target_start_line": 1, "target_confidence": 87}, {"target_end_line": 71, "source_start_line": 57, "source_end_line": 68, "source_confidence": 89, "target_start_line": 60, "target_confidence": 87}]}, {"source": "ashtonburg_2d788f6fbeced724ea6e", "value": 82, "target": "NgoScope_19e6a6b81b8ae8c93de4", "links": [{"target_end_line": 82, "source_start_line": 1, "source_end_line": 82, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "Ivanhound_b3110ce49e95c7b2afc2", "value": 63, "target": "BDAguila_fc1eca1081329aa55ef7", "links": [{"target_end_line": 52, "source_start_line": 22, "source_end_line": 51, "source_confidence": 87, "target_start_line": 22, "target_confidence": 88}, {"target_end_line": 20, "source_start_line": 1, "source_end_line": 20, "source_confidence": 87, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 68, "source_start_line": 57, "source_end_line": 66, "source_confidence": 87, "target_start_line": 57, "target_confidence": 88}, {"target_end_line": 52, "source_start_line": 22, "source_end_line": 51, "source_confidence": 87, "target_start_line": 22, "target_confidence": 88}, {"target_end_line": 20, "source_start_line": 1, "source_end_line": 20, "source_confidence": 87, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 68, "source_start_line": 57, "source_end_line": 66, "source_confidence": 87, "target_start_line": 57, "target_confidence": 88}, {"target_end_line": 52, "source_start_line": 22, "source_end_line": 51, "source_confidence": 87, "target_start_line": 22, "target_confidence": 88}, {"target_end_line": 20, "source_start_line": 1, "source_end_line": 20, "source_confidence": 87, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 68, "source_start_line": 57, "source_end_line": 66, "source_confidence": 87, "target_start_line": 57, "target_confidence": 88}]}, {"source": "grybnicky_165e231864dcafa71551", "value": 61, "target": "Ivanhound_b3110ce49e95c7b2afc2", "links": [{"target_end_line": 51, "source_start_line": 1, "source_end_line": 51, "source_confidence": 88, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 66, "source_start_line": 58, "source_end_line": 67, "source_confidence": 88, "target_start_line": 57, "target_confidence": 88}, {"target_end_line": 51, "source_start_line": 1, "source_end_line": 51, "source_confidence": 88, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 66, "source_start_line": 58, "source_end_line": 67, "source_confidence": 88, "target_start_line": 57, "target_confidence": 88}]}, {"source": "Smith5mr_1733c62207e0bf614f06", "value": 65, "target": "grybnicky_165e231864dcafa71551", "links": [{"target_end_line": 55, "source_start_line": 22, "source_end_line": 55, "source_confidence": 98, "target_start_line": 22, "target_confidence": 94}, {"target_end_line": 20, "source_start_line": 1, "source_end_line": 20, "source_confidence": 98, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 67, "source_start_line": 55, "source_end_line": 65, "source_confidence": 98, "target_start_line": 58, "target_confidence": 94}, {"target_end_line": 55, "source_start_line": 22, "source_end_line": 55, "source_confidence": 98, "target_start_line": 22, "target_confidence": 94}, {"target_end_line": 20, "source_start_line": 1, "source_end_line": 20, "source_confidence": 98, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 67, "source_start_line": 55, "source_end_line": 65, "source_confidence": 98, "target_start_line": 58, "target_confidence": 94}, {"target_end_line": 55, "source_start_line": 22, "source_end_line": 55, "source_confidence": 98, "target_start_line": 22, "target_confidence": 94}, {"target_end_line": 20, "source_start_line": 1, "source_end_line": 20, "source_confidence": 98, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 67, "source_start_line": 55, "source_end_line": 65, "source_confidence": 98, "target_start_line": 58, "target_confidence": 94}]}, {"source": "Ifeanyi-1_7d361ee944d5798257fc", "value": 65, "target": "Smith5mr_1733c62207e0bf614f06", "links": [{"target_end_line": 65, "source_start_line": 1, "source_end_line": 64, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "Smith5mr_3b68e9c28545771802a3", "value": 64, "target": "Ifeanyi-1_7d361ee944d5798257fc", "links": [{"target_end_line": 64, "source_start_line": 1, "source_end_line": 64, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "grybnicky_9e3f368898e5fca662f2", "value": 64, "target": "Smith5mr_3b68e9c28545771802a3", "links": [{"target_end_line": 64, "source_start_line": 1, "source_end_line": 64, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "Darius9_96b39c3c21c18f0ace31", "value": 64, "target": "grybnicky_9e3f368898e5fca662f2", "links": [{"target_end_line": 64, "source_start_line": 1, "source_end_line": 64, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "mbostock_946ddf8a32b3b660ffd8", "value": 82, "target": "ashtonburg_2d788f6fbeced724ea6e", "links": [{"target_end_line": 82, "source_start_line": 1, "source_end_line": 82, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "daluu_d43ec5e610dd5dedbbe1", "value": 30, "target": "Darius9_96b39c3c21c18f0ace31", "links": [{"target_end_line": 50, "source_start_line": 88, "source_end_line": 104, "source_confidence": 24, "target_start_line": 34, "target_confidence": 55}, {"target_end_line": 26, "source_start_line": 58, "source_end_line": 62, "source_confidence": 24, "target_start_line": 22, "target_confidence": 55}, {"target_end_line": 56, "source_start_line": 70, "source_end_line": 74, "source_confidence": 24, "target_start_line": 52, "target_confidence": 55}, {"target_end_line": 5, "source_start_line": 6, "source_end_line": 8, "source_confidence": 24, "target_start_line": 3, "target_confidence": 55}, {"target_end_line": 50, "source_start_line": 88, "source_end_line": 104, "source_confidence": 24, "target_start_line": 34, "target_confidence": 55}, {"target_end_line": 26, "source_start_line": 58, "source_end_line": 62, "source_confidence": 24, "target_start_line": 22, "target_confidence": 55}, {"target_end_line": 56, "source_start_line": 70, "source_end_line": 74, "source_confidence": 24, "target_start_line": 52, "target_confidence": 55}, {"target_end_line": 5, "source_start_line": 6, "source_end_line": 8, "source_confidence": 24, "target_start_line": 3, "target_confidence": 55}, {"target_end_line": 50, "source_start_line": 88, "source_end_line": 104, "source_confidence": 24, "target_start_line": 34, "target_confidence": 55}, {"target_end_line": 26, "source_start_line": 58, "source_end_line": 62, "source_confidence": 24, "target_start_line": 22, "target_confidence": 55}, {"target_end_line": 56, "source_start_line": 70, "source_end_line": 74, "source_confidence": 24, "target_start_line": 52, "target_confidence": 55}, {"target_end_line": 5, "source_start_line": 6, "source_end_line": 8, "source_confidence": 24, "target_start_line": 3, "target_confidence": 55}, {"target_end_line": 50, "source_start_line": 88, "source_end_line": 104, "source_confidence": 24, "target_start_line": 34, "target_confidence": 55}, {"target_end_line": 26, "source_start_line": 58, "source_end_line": 62, "source_confidence": 24, "target_start_line": 22, "target_confidence": 55}, {"target_end_line": 56, "source_start_line": 70, "source_end_line": 74, "source_confidence": 24, "target_start_line": 52, "target_confidence": 55}, {"target_end_line": 5, "source_start_line": 6, "source_end_line": 8, "source_confidence": 24, "target_start_line": 3, "target_confidence": 55}]}, {"source": "jonpage_324d2ec970c1f9556ddb", "value": 124, "target": "sivartravis_9a5ba3d2f25d1eebc912", "links": [{"target_end_line": 124, "source_start_line": 1, "source_end_line": 124, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "Sokrates86_1297670a35e6e0841636", "value": 25, "target": "daluu_d43ec5e610dd5dedbbe1", "links": [{"target_end_line": 62, "source_start_line": 40, "source_end_line": 45, "source_confidence": 15, "target_start_line": 58, "target_confidence": 22}, {"target_end_line": 8, "source_start_line": 36, "source_end_line": 38, "source_confidence": 15, "target_start_line": 6, "target_confidence": 22}, {"target_end_line": 45, "source_start_line": 49, "source_end_line": 53, "source_confidence": 15, "target_start_line": 43, "target_confidence": 22}, {"target_end_line": 79, "source_start_line": 79, "source_end_line": 81, "source_confidence": 15, "target_start_line": 77, "target_confidence": 22}, {"target_end_line": 95, "source_start_line": 67, "source_end_line": 74, "source_confidence": 15, "target_start_line": 88, "target_confidence": 22}, {"target_end_line": 62, "source_start_line": 40, "source_end_line": 45, "source_confidence": 15, "target_start_line": 58, "target_confidence": 22}, {"target_end_line": 8, "source_start_line": 36, "source_end_line": 38, "source_confidence": 15, "target_start_line": 6, "target_confidence": 22}, {"target_end_line": 45, "source_start_line": 49, "source_end_line": 53, "source_confidence": 15, "target_start_line": 43, "target_confidence": 22}, {"target_end_line": 79, "source_start_line": 79, "source_end_line": 81, "source_confidence": 15, "target_start_line": 77, "target_confidence": 22}, {"target_end_line": 95, "source_start_line": 67, "source_end_line": 74, "source_confidence": 15, "target_start_line": 88, "target_confidence": 22}, {"target_end_line": 62, "source_start_line": 40, "source_end_line": 45, "source_confidence": 15, "target_start_line": 58, "target_confidence": 22}, {"target_end_line": 8, "source_start_line": 36, "source_end_line": 38, "source_confidence": 15, "target_start_line": 6, "target_confidence": 22}, {"target_end_line": 45, "source_start_line": 49, "source_end_line": 53, "source_confidence": 15, "target_start_line": 43, "target_confidence": 22}, {"target_end_line": 79, "source_start_line": 79, "source_end_line": 81, "source_confidence": 15, "target_start_line": 77, "target_confidence": 22}, {"target_end_line": 95, "source_start_line": 67, "source_end_line": 74, "source_confidence": 15, "target_start_line": 88, "target_confidence": 22}, {"target_end_line": 62, "source_start_line": 40, "source_end_line": 45, "source_confidence": 15, "target_start_line": 58, "target_confidence": 22}, {"target_end_line": 8, "source_start_line": 36, "source_end_line": 38, "source_confidence": 15, "target_start_line": 6, "target_confidence": 22}, {"target_end_line": 45, "source_start_line": 49, "source_end_line": 53, "source_confidence": 15, "target_start_line": 43, "target_confidence": 22}, {"target_end_line": 79, "source_start_line": 79, "source_end_line": 81, "source_confidence": 15, "target_start_line": 77, "target_confidence": 22}, {"target_end_line": 95, "source_start_line": 67, "source_end_line": 74, "source_confidence": 15, "target_start_line": 88, "target_confidence": 22}, {"target_end_line": 62, "source_start_line": 40, "source_end_line": 45, "source_confidence": 15, "target_start_line": 58, "target_confidence": 22}, {"target_end_line": 8, "source_start_line": 36, "source_end_line": 38, "source_confidence": 15, "target_start_line": 6, "target_confidence": 22}, {"target_end_line": 45, "source_start_line": 49, "source_end_line": 53, "source_confidence": 15, "target_start_line": 43, "target_confidence": 22}, {"target_end_line": 79, "source_start_line": 79, "source_end_line": 81, "source_confidence": 15, "target_start_line": 77, "target_confidence": 22}, {"target_end_line": 95, "source_start_line": 67, "source_end_line": 74, "source_confidence": 15, "target_start_line": 88, "target_confidence": 22}]}, {"source": "foolosopher_0ed409fcb969ad282ccf", "value": 17, "target": "hungvietdo_7bc52597560fc51e1117", "links": [{"target_end_line": 21, "source_start_line": 38, "source_end_line": 42, "source_confidence": 20, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 15, "source_start_line": 20, "source_end_line": 23, "source_confidence": 20, "target_start_line": 12, "target_confidence": 37}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 20, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 10, "source_start_line": 15, "source_end_line": 17, "source_confidence": 20, "target_start_line": 8, "target_confidence": 37}, {"target_end_line": 21, "source_start_line": 38, "source_end_line": 42, "source_confidence": 20, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 15, "source_start_line": 20, "source_end_line": 23, "source_confidence": 20, "target_start_line": 12, "target_confidence": 37}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 20, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 10, "source_start_line": 15, "source_end_line": 17, "source_confidence": 20, "target_start_line": 8, "target_confidence": 37}, {"target_end_line": 21, "source_start_line": 38, "source_end_line": 42, "source_confidence": 20, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 15, "source_start_line": 20, "source_end_line": 23, "source_confidence": 20, "target_start_line": 12, "target_confidence": 37}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 20, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 10, "source_start_line": 15, "source_end_line": 17, "source_confidence": 20, "target_start_line": 8, "target_confidence": 37}, {"target_end_line": 21, "source_start_line": 38, "source_end_line": 42, "source_confidence": 20, "target_start_line": 17, "target_confidence": 37}, {"target_end_line": 15, "source_start_line": 20, "source_end_line": 23, "source_confidence": 20, "target_start_line": 12, "target_confidence": 37}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 20, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 10, "source_start_line": 15, "source_end_line": 17, "source_confidence": 20, "target_start_line": 8, "target_confidence": 37}]}, {"source": "curran_b23acf239cc4e4db7f36", "value": 38, "target": "sheffieldhale_275a6ed8e985b01ed150", "links": [{"target_end_line": 19, "source_start_line": 41, "source_end_line": 50, "source_confidence": 34, "target_start_line": 9, "target_confidence": 44}, {"target_end_line": 72, "source_start_line": 92, "source_end_line": 98, "source_confidence": 34, "target_start_line": 66, "target_confidence": 44}, {"target_end_line": 52, "source_start_line": 67, "source_end_line": 71, "source_confidence": 34, "target_start_line": 48, "target_confidence": 44}, {"target_end_line": 86, "source_start_line": 104, "source_end_line": 113, "source_confidence": 34, "target_start_line": 77, "target_confidence": 44}, {"target_end_line": 58, "source_start_line": 83, "source_end_line": 86, "source_confidence": 34, "target_start_line": 54, "target_confidence": 44}, {"target_end_line": 19, "source_start_line": 41, "source_end_line": 50, "source_confidence": 34, "target_start_line": 9, "target_confidence": 44}, {"target_end_line": 72, "source_start_line": 92, "source_end_line": 98, "source_confidence": 34, "target_start_line": 66, "target_confidence": 44}, {"target_end_line": 52, "source_start_line": 67, "source_end_line": 71, "source_confidence": 34, "target_start_line": 48, "target_confidence": 44}, {"target_end_line": 86, "source_start_line": 104, "source_end_line": 113, "source_confidence": 34, "target_start_line": 77, "target_confidence": 44}, {"target_end_line": 58, "source_start_line": 83, "source_end_line": 86, "source_confidence": 34, "target_start_line": 54, "target_confidence": 44}, {"target_end_line": 19, "source_start_line": 41, "source_end_line": 50, "source_confidence": 34, "target_start_line": 9, "target_confidence": 44}, {"target_end_line": 72, "source_start_line": 92, "source_end_line": 98, "source_confidence": 34, "target_start_line": 66, "target_confidence": 44}, {"target_end_line": 52, "source_start_line": 67, "source_end_line": 71, "source_confidence": 34, "target_start_line": 48, "target_confidence": 44}, {"target_end_line": 86, "source_start_line": 104, "source_end_line": 113, "source_confidence": 34, "target_start_line": 77, "target_confidence": 44}, {"target_end_line": 58, "source_start_line": 83, "source_end_line": 86, "source_confidence": 34, "target_start_line": 54, "target_confidence": 44}, {"target_end_line": 19, "source_start_line": 41, "source_end_line": 50, "source_confidence": 34, "target_start_line": 9, "target_confidence": 44}, {"target_end_line": 72, "source_start_line": 92, "source_end_line": 98, "source_confidence": 34, "target_start_line": 66, "target_confidence": 44}, {"target_end_line": 52, "source_start_line": 67, "source_end_line": 71, "source_confidence": 34, "target_start_line": 48, "target_confidence": 44}, {"target_end_line": 86, "source_start_line": 104, "source_end_line": 113, "source_confidence": 34, "target_start_line": 77, "target_confidence": 44}, {"target_end_line": 58, "source_start_line": 83, "source_end_line": 86, "source_confidence": 34, "target_start_line": 54, "target_confidence": 44}, {"target_end_line": 19, "source_start_line": 41, "source_end_line": 50, "source_confidence": 34, "target_start_line": 9, "target_confidence": 44}, {"target_end_line": 72, "source_start_line": 92, "source_end_line": 98, "source_confidence": 34, "target_start_line": 66, "target_confidence": 44}, {"target_end_line": 52, "source_start_line": 67, "source_end_line": 71, "source_confidence": 34, "target_start_line": 48, "target_confidence": 44}, {"target_end_line": 86, "source_start_line": 104, "source_end_line": 113, "source_confidence": 34, "target_start_line": 77, "target_confidence": 44}, {"target_end_line": 58, "source_start_line": 83, "source_end_line": 86, "source_confidence": 34, "target_start_line": 54, "target_confidence": 44}]}, {"source": "sbreslav_be9af0d809b49864b7d8", "value": 97, "target": "benduffin_4506b5bf37fab13586f7", "links": [{"target_end_line": 50, "source_start_line": 1, "source_end_line": 50, "source_confidence": 69, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 95, "source_start_line": 83, "source_end_line": 104, "source_confidence": 69, "target_start_line": 74, "target_confidence": 94}, {"target_end_line": 60, "source_start_line": 53, "source_end_line": 65, "source_confidence": 69, "target_start_line": 50, "target_confidence": 94}, {"target_end_line": 72, "source_start_line": 68, "source_end_line": 79, "source_confidence": 69, "target_start_line": 61, "target_confidence": 94}, {"target_end_line": 50, "source_start_line": 1, "source_end_line": 50, "source_confidence": 69, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 95, "source_start_line": 83, "source_end_line": 104, "source_confidence": 69, "target_start_line": 74, "target_confidence": 94}, {"target_end_line": 60, "source_start_line": 53, "source_end_line": 65, "source_confidence": 69, "target_start_line": 50, "target_confidence": 94}, {"target_end_line": 72, "source_start_line": 68, "source_end_line": 79, "source_confidence": 69, "target_start_line": 61, "target_confidence": 94}, {"target_end_line": 50, "source_start_line": 1, "source_end_line": 50, "source_confidence": 69, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 95, "source_start_line": 83, "source_end_line": 104, "source_confidence": 69, "target_start_line": 74, "target_confidence": 94}, {"target_end_line": 60, "source_start_line": 53, "source_end_line": 65, "source_confidence": 69, "target_start_line": 50, "target_confidence": 94}, {"target_end_line": 72, "source_start_line": 68, "source_end_line": 79, "source_confidence": 69, "target_start_line": 61, "target_confidence": 94}, {"target_end_line": 50, "source_start_line": 1, "source_end_line": 50, "source_confidence": 69, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 95, "source_start_line": 83, "source_end_line": 104, "source_confidence": 69, "target_start_line": 74, "target_confidence": 94}, {"target_end_line": 60, "source_start_line": 53, "source_end_line": 65, "source_confidence": 69, "target_start_line": 50, "target_confidence": 94}, {"target_end_line": 72, "source_start_line": 68, "source_end_line": 79, "source_confidence": 69, "target_start_line": 61, "target_confidence": 94}]}, {"source": "jonsadka_810749b7dbcf0eca1e4e", "value": 51, "target": "KatiRG_5f168b5c884b1f9c36a5", "links": [{"target_end_line": 29, "source_start_line": 16, "source_end_line": 31, "source_confidence": 32, "target_start_line": 14, "target_confidence": 17}, {"target_end_line": 67, "source_start_line": 50, "source_end_line": 64, "source_confidence": 32, "target_start_line": 53, "target_confidence": 17}, {"target_end_line": 83, "source_start_line": 71, "source_end_line": 77, "source_confidence": 32, "target_start_line": 75, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 32, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 194, "source_start_line": 101, "source_end_line": 106, "source_confidence": 32, "target_start_line": 189, "target_confidence": 17}, {"target_end_line": 29, "source_start_line": 16, "source_end_line": 31, "source_confidence": 32, "target_start_line": 14, "target_confidence": 17}, {"target_end_line": 67, "source_start_line": 50, "source_end_line": 64, "source_confidence": 32, "target_start_line": 53, "target_confidence": 17}, {"target_end_line": 83, "source_start_line": 71, "source_end_line": 77, "source_confidence": 32, "target_start_line": 75, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 32, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 194, "source_start_line": 101, "source_end_line": 106, "source_confidence": 32, "target_start_line": 189, "target_confidence": 17}, {"target_end_line": 29, "source_start_line": 16, "source_end_line": 31, "source_confidence": 32, "target_start_line": 14, "target_confidence": 17}, {"target_end_line": 67, "source_start_line": 50, "source_end_line": 64, "source_confidence": 32, "target_start_line": 53, "target_confidence": 17}, {"target_end_line": 83, "source_start_line": 71, "source_end_line": 77, "source_confidence": 32, "target_start_line": 75, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 32, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 194, "source_start_line": 101, "source_end_line": 106, "source_confidence": 32, "target_start_line": 189, "target_confidence": 17}, {"target_end_line": 29, "source_start_line": 16, "source_end_line": 31, "source_confidence": 32, "target_start_line": 14, "target_confidence": 17}, {"target_end_line": 67, "source_start_line": 50, "source_end_line": 64, "source_confidence": 32, "target_start_line": 53, "target_confidence": 17}, {"target_end_line": 83, "source_start_line": 71, "source_end_line": 77, "source_confidence": 32, "target_start_line": 75, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 32, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 194, "source_start_line": 101, "source_end_line": 106, "source_confidence": 32, "target_start_line": 189, "target_confidence": 17}, {"target_end_line": 29, "source_start_line": 16, "source_end_line": 31, "source_confidence": 32, "target_start_line": 14, "target_confidence": 17}, {"target_end_line": 67, "source_start_line": 50, "source_end_line": 64, "source_confidence": 32, "target_start_line": 53, "target_confidence": 17}, {"target_end_line": 83, "source_start_line": 71, "source_end_line": 77, "source_confidence": 32, "target_start_line": 75, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 32, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 194, "source_start_line": 101, "source_end_line": 106, "source_confidence": 32, "target_start_line": 189, "target_confidence": 17}]}, {"source": "micahstubbs_99df29f258860e53c5e2", "value": 28, "target": "nbremer_d7071c6a5a7206701015", "links": [{"target_end_line": 123, "source_start_line": 55, "source_end_line": 57, "source_confidence": 9, "target_start_line": 121, "target_confidence": 13}, {"target_end_line": 30, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 29, "target_confidence": 13}, {"target_end_line": 82, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 119, "source_start_line": 50, "source_end_line": 53, "source_confidence": 9, "target_start_line": 117, "target_confidence": 13}, {"target_end_line": 3, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 3, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 27, "target_confidence": 13}, {"target_end_line": 31, "source_start_line": 270, "source_end_line": 271, "source_confidence": 9, "target_start_line": 30, "target_confidence": 13}, {"target_end_line": 85, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 83, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 123, "source_start_line": 55, "source_end_line": 57, "source_confidence": 9, "target_start_line": 121, "target_confidence": 13}, {"target_end_line": 30, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 29, "target_confidence": 13}, {"target_end_line": 82, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 119, "source_start_line": 50, "source_end_line": 53, "source_confidence": 9, "target_start_line": 117, "target_confidence": 13}, {"target_end_line": 3, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 3, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 27, "target_confidence": 13}, {"target_end_line": 31, "source_start_line": 270, "source_end_line": 271, "source_confidence": 9, "target_start_line": 30, "target_confidence": 13}, {"target_end_line": 85, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 83, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 123, "source_start_line": 55, "source_end_line": 57, "source_confidence": 9, "target_start_line": 121, "target_confidence": 13}, {"target_end_line": 30, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 29, "target_confidence": 13}, {"target_end_line": 82, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 119, "source_start_line": 50, "source_end_line": 53, "source_confidence": 9, "target_start_line": 117, "target_confidence": 13}, {"target_end_line": 3, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 3, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 27, "target_confidence": 13}, {"target_end_line": 31, "source_start_line": 270, "source_end_line": 271, "source_confidence": 9, "target_start_line": 30, "target_confidence": 13}, {"target_end_line": 85, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 83, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 123, "source_start_line": 55, "source_end_line": 57, "source_confidence": 9, "target_start_line": 121, "target_confidence": 13}, {"target_end_line": 30, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 29, "target_confidence": 13}, {"target_end_line": 82, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 119, "source_start_line": 50, "source_end_line": 53, "source_confidence": 9, "target_start_line": 117, "target_confidence": 13}, {"target_end_line": 3, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 3, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 27, "target_confidence": 13}, {"target_end_line": 31, "source_start_line": 270, "source_end_line": 271, "source_confidence": 9, "target_start_line": 30, "target_confidence": 13}, {"target_end_line": 85, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 83, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 123, "source_start_line": 55, "source_end_line": 57, "source_confidence": 9, "target_start_line": 121, "target_confidence": 13}, {"target_end_line": 30, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 29, "target_confidence": 13}, {"target_end_line": 82, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 119, "source_start_line": 50, "source_end_line": 53, "source_confidence": 9, "target_start_line": 117, "target_confidence": 13}, {"target_end_line": 3, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 3, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 27, "target_confidence": 13}, {"target_end_line": 31, "source_start_line": 270, "source_end_line": 271, "source_confidence": 9, "target_start_line": 30, "target_confidence": 13}, {"target_end_line": 85, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 83, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 123, "source_start_line": 55, "source_end_line": 57, "source_confidence": 9, "target_start_line": 121, "target_confidence": 13}, {"target_end_line": 30, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 29, "target_confidence": 13}, {"target_end_line": 82, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 119, "source_start_line": 50, "source_end_line": 53, "source_confidence": 9, "target_start_line": 117, "target_confidence": 13}, {"target_end_line": 3, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 3, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 27, "target_confidence": 13}, {"target_end_line": 31, "source_start_line": 270, "source_end_line": 271, "source_confidence": 9, "target_start_line": 30, "target_confidence": 13}, {"target_end_line": 85, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 83, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 123, "source_start_line": 55, "source_end_line": 57, "source_confidence": 9, "target_start_line": 121, "target_confidence": 13}, {"target_end_line": 30, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 29, "target_confidence": 13}, {"target_end_line": 82, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 119, "source_start_line": 50, "source_end_line": 53, "source_confidence": 9, "target_start_line": 117, "target_confidence": 13}, {"target_end_line": 3, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 3, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 27, "target_confidence": 13}, {"target_end_line": 31, "source_start_line": 270, "source_end_line": 271, "source_confidence": 9, "target_start_line": 30, "target_confidence": 13}, {"target_end_line": 85, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 83, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 123, "source_start_line": 55, "source_end_line": 57, "source_confidence": 9, "target_start_line": 121, "target_confidence": 13}, {"target_end_line": 30, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 29, "target_confidence": 13}, {"target_end_line": 82, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 119, "source_start_line": 50, "source_end_line": 53, "source_confidence": 9, "target_start_line": 117, "target_confidence": 13}, {"target_end_line": 3, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 3, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 27, "target_confidence": 13}, {"target_end_line": 31, "source_start_line": 270, "source_end_line": 271, "source_confidence": 9, "target_start_line": 30, "target_confidence": 13}, {"target_end_line": 85, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 83, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 123, "source_start_line": 55, "source_end_line": 57, "source_confidence": 9, "target_start_line": 121, "target_confidence": 13}, {"target_end_line": 30, "source_start_line": 246, "source_end_line": 247, "source_confidence": 9, "target_start_line": 29, "target_confidence": 13}, {"target_end_line": 82, "source_start_line": 269, "source_end_line": 270, "source_confidence": 9, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 119, "source_start_line": 50, "source_end_line": 53, "source_confidence": 9, "target_start_line": 117, "target_confidence": 13}, {"target_end_line": 3, "source_start_line": 247, "source_end_line": 248, "source_confidence": 9, "target_start_line": 3, "target_confidence": 13}, {"target_end_line": 29, "source_start_line": 265, "source_end_line": 269, "source_confidence": 9, "target_start_line": 27, "target_confidence": 13}, {"target_end_line": 31, "source_start_line": 270, "source_end_line": 271, "source_confidence": 9, "target_start_line": 30, "target_confidence": 13}, {"target_end_line": 85, "source_start_line": 271, "source_end_line": 273, "source_confidence": 9, "target_start_line": 83, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 288, "source_end_line": 292, "source_confidence": 9, "target_start_line": 79, "target_confidence": 13}]}, {"source": "BenHeubl_8df912bfa0d147b74de2", "value": 62, "target": "foolosopher_0ed409fcb969ad282ccf", "links": [{"target_end_line": 58, "source_start_line": 32, "source_end_line": 54, "source_confidence": 44, "target_start_line": 35, "target_confidence": 43}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 8, "source_confidence": 44, "target_start_line": 1, "target_confidence": 43}, {"target_end_line": 17, "source_start_line": 8, "source_end_line": 12, "source_confidence": 44, "target_start_line": 14, "target_confidence": 43}, {"target_end_line": 23, "source_start_line": 18, "source_end_line": 22, "source_confidence": 44, "target_start_line": 20, "target_confidence": 43}, {"target_end_line": 146, "source_start_line": 115, "source_end_line": 119, "source_confidence": 44, "target_start_line": 141, "target_confidence": 43}, {"target_end_line": 82, "source_start_line": 60, "source_end_line": 68, "source_confidence": 44, "target_start_line": 73, "target_confidence": 43}, {"target_end_line": 58, "source_start_line": 32, "source_end_line": 54, "source_confidence": 44, "target_start_line": 35, "target_confidence": 43}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 8, "source_confidence": 44, "target_start_line": 1, "target_confidence": 43}, {"target_end_line": 17, "source_start_line": 8, "source_end_line": 12, "source_confidence": 44, "target_start_line": 14, "target_confidence": 43}, {"target_end_line": 23, "source_start_line": 18, "source_end_line": 22, "source_confidence": 44, "target_start_line": 20, "target_confidence": 43}, {"target_end_line": 146, "source_start_line": 115, "source_end_line": 119, "source_confidence": 44, "target_start_line": 141, "target_confidence": 43}, {"target_end_line": 82, "source_start_line": 60, "source_end_line": 68, "source_confidence": 44, "target_start_line": 73, "target_confidence": 43}, {"target_end_line": 58, "source_start_line": 32, "source_end_line": 54, "source_confidence": 44, "target_start_line": 35, "target_confidence": 43}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 8, "source_confidence": 44, "target_start_line": 1, "target_confidence": 43}, {"target_end_line": 17, "source_start_line": 8, "source_end_line": 12, "source_confidence": 44, "target_start_line": 14, "target_confidence": 43}, {"target_end_line": 23, "source_start_line": 18, "source_end_line": 22, "source_confidence": 44, "target_start_line": 20, "target_confidence": 43}, {"target_end_line": 146, "source_start_line": 115, "source_end_line": 119, "source_confidence": 44, "target_start_line": 141, "target_confidence": 43}, {"target_end_line": 82, "source_start_line": 60, "source_end_line": 68, "source_confidence": 44, "target_start_line": 73, "target_confidence": 43}, {"target_end_line": 58, "source_start_line": 32, "source_end_line": 54, "source_confidence": 44, "target_start_line": 35, "target_confidence": 43}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 8, "source_confidence": 44, "target_start_line": 1, "target_confidence": 43}, {"target_end_line": 17, "source_start_line": 8, "source_end_line": 12, "source_confidence": 44, "target_start_line": 14, "target_confidence": 43}, {"target_end_line": 23, "source_start_line": 18, "source_end_line": 22, "source_confidence": 44, "target_start_line": 20, "target_confidence": 43}, {"target_end_line": 146, "source_start_line": 115, "source_end_line": 119, "source_confidence": 44, "target_start_line": 141, "target_confidence": 43}, {"target_end_line": 82, "source_start_line": 60, "source_end_line": 68, "source_confidence": 44, "target_start_line": 73, "target_confidence": 43}, {"target_end_line": 58, "source_start_line": 32, "source_end_line": 54, "source_confidence": 44, "target_start_line": 35, "target_confidence": 43}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 8, "source_confidence": 44, "target_start_line": 1, "target_confidence": 43}, {"target_end_line": 17, "source_start_line": 8, "source_end_line": 12, "source_confidence": 44, "target_start_line": 14, "target_confidence": 43}, {"target_end_line": 23, "source_start_line": 18, "source_end_line": 22, "source_confidence": 44, "target_start_line": 20, "target_confidence": 43}, {"target_end_line": 146, "source_start_line": 115, "source_end_line": 119, "source_confidence": 44, "target_start_line": 141, "target_confidence": 43}, {"target_end_line": 82, "source_start_line": 60, "source_end_line": 68, "source_confidence": 44, "target_start_line": 73, "target_confidence": 43}, {"target_end_line": 58, "source_start_line": 32, "source_end_line": 54, "source_confidence": 44, "target_start_line": 35, "target_confidence": 43}, {"target_end_line": 14, "source_start_line": 1, "source_end_line": 8, "source_confidence": 44, "target_start_line": 1, "target_confidence": 43}, {"target_end_line": 17, "source_start_line": 8, "source_end_line": 12, "source_confidence": 44, "target_start_line": 14, "target_confidence": 43}, {"target_end_line": 23, "source_start_line": 18, "source_end_line": 22, "source_confidence": 44, "target_start_line": 20, "target_confidence": 43}, {"target_end_line": 146, "source_start_line": 115, "source_end_line": 119, "source_confidence": 44, "target_start_line": 141, "target_confidence": 43}, {"target_end_line": 82, "source_start_line": 60, "source_end_line": 68, "source_confidence": 44, "target_start_line": 73, "target_confidence": 43}]}, {"source": "enjalot_7a8dd01fe61fba5fea45", "value": 56, "target": "renecnielsen_744b716f997b2abd2fca", "links": [{"target_end_line": 60, "source_start_line": 70, "source_end_line": 90, "source_confidence": 27, "target_start_line": 38, "target_confidence": 86}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 47, "source_confidence": 27, "target_start_line": 15, "target_confidence": 86}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 7, "source_confidence": 27, "target_start_line": 1, "target_confidence": 86}, {"target_end_line": 14, "source_start_line": 20, "source_end_line": 25, "source_confidence": 27, "target_start_line": 9, "target_confidence": 86}, {"target_end_line": 60, "source_start_line": 70, "source_end_line": 90, "source_confidence": 27, "target_start_line": 38, "target_confidence": 86}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 47, "source_confidence": 27, "target_start_line": 15, "target_confidence": 86}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 7, "source_confidence": 27, "target_start_line": 1, "target_confidence": 86}, {"target_end_line": 14, "source_start_line": 20, "source_end_line": 25, "source_confidence": 27, "target_start_line": 9, "target_confidence": 86}, {"target_end_line": 60, "source_start_line": 70, "source_end_line": 90, "source_confidence": 27, "target_start_line": 38, "target_confidence": 86}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 47, "source_confidence": 27, "target_start_line": 15, "target_confidence": 86}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 7, "source_confidence": 27, "target_start_line": 1, "target_confidence": 86}, {"target_end_line": 14, "source_start_line": 20, "source_end_line": 25, "source_confidence": 27, "target_start_line": 9, "target_confidence": 86}, {"target_end_line": 60, "source_start_line": 70, "source_end_line": 90, "source_confidence": 27, "target_start_line": 38, "target_confidence": 86}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 47, "source_confidence": 27, "target_start_line": 15, "target_confidence": 86}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 7, "source_confidence": 27, "target_start_line": 1, "target_confidence": 86}, {"target_end_line": 14, "source_start_line": 20, "source_end_line": 25, "source_confidence": 27, "target_start_line": 9, "target_confidence": 86}]}, {"source": "nbremer_db24422abdb20150a9dd", "value": 28, "target": "micahstubbs_99df29f258860e53c5e2", "links": [{"target_end_line": 247, "source_start_line": 20, "source_end_line": 22, "source_confidence": 7, "target_start_line": 246, "target_confidence": 10}, {"target_end_line": 248, "source_start_line": 6, "source_end_line": 7, "source_confidence": 7, "target_start_line": 247, "target_confidence": 10}, {"target_end_line": 270, "source_start_line": 152, "source_end_line": 154, "source_confidence": 7, "target_start_line": 269, "target_confidence": 10}, {"target_end_line": 53, "source_start_line": 17, "source_end_line": 18, "source_confidence": 7, "target_start_line": 50, "target_confidence": 10}, {"target_end_line": 250, "source_start_line": 18, "source_end_line": 19, "source_confidence": 7, "target_start_line": 248, "target_confidence": 10}, {"target_end_line": 269, "source_start_line": 8, "source_end_line": 9, "source_confidence": 7, "target_start_line": 265, "target_confidence": 10}, {"target_end_line": 271, "source_start_line": 19, "source_end_line": 20, "source_confidence": 7, "target_start_line": 270, "target_confidence": 10}, {"target_end_line": 273, "source_start_line": 44, "source_end_line": 45, "source_confidence": 7, "target_start_line": 271, "target_confidence": 10}, {"target_end_line": 292, "source_start_line": 42, "source_end_line": 44, "source_confidence": 7, "target_start_line": 288, "target_confidence": 10}, {"target_end_line": 247, "source_start_line": 20, "source_end_line": 22, "source_confidence": 7, "target_start_line": 246, "target_confidence": 10}, {"target_end_line": 248, "source_start_line": 6, "source_end_line": 7, "source_confidence": 7, "target_start_line": 247, "target_confidence": 10}, {"target_end_line": 270, "source_start_line": 152, "source_end_line": 154, "source_confidence": 7, "target_start_line": 269, "target_confidence": 10}, {"target_end_line": 53, "source_start_line": 17, "source_end_line": 18, "source_confidence": 7, "target_start_line": 50, "target_confidence": 10}, {"target_end_line": 250, "source_start_line": 18, "source_end_line": 19, "source_confidence": 7, "target_start_line": 248, "target_confidence": 10}, {"target_end_line": 269, "source_start_line": 8, "source_end_line": 9, "source_confidence": 7, "target_start_line": 265, "target_confidence": 10}, {"target_end_line": 271, "source_start_line": 19, "source_end_line": 20, "source_confidence": 7, "target_start_line": 270, "target_confidence": 10}, {"target_end_line": 273, "source_start_line": 44, "source_end_line": 45, "source_confidence": 7, "target_start_line": 271, "target_confidence": 10}, {"target_end_line": 292, "source_start_line": 42, "source_end_line": 44, "source_confidence": 7, "target_start_line": 288, "target_confidence": 10}, {"target_end_line": 247, "source_start_line": 20, "source_end_line": 22, "source_confidence": 7, "target_start_line": 246, "target_confidence": 10}, {"target_end_line": 248, "source_start_line": 6, "source_end_line": 7, "source_confidence": 7, "target_start_line": 247, "target_confidence": 10}, {"target_end_line": 270, "source_start_line": 152, "source_end_line": 154, "source_confidence": 7, "target_start_line": 269, "target_confidence": 10}, {"target_end_line": 53, "source_start_line": 17, "source_end_line": 18, "source_confidence": 7, "target_start_line": 50, "target_confidence": 10}, {"target_end_line": 250, "source_start_line": 18, "source_end_line": 19, "source_confidence": 7, "target_start_line": 248, "target_confidence": 10}, {"target_end_line": 269, "source_start_line": 8, "source_end_line": 9, "source_confidence": 7, "target_start_line": 265, "target_confidence": 10}, {"target_end_line": 271, "source_start_line": 19, "source_end_line": 20, "source_confidence": 7, "target_start_line": 270, "target_confidence": 10}, {"target_end_line": 273, "source_start_line": 44, "source_end_line": 45, "source_confidence": 7, "target_start_line": 271, "target_confidence": 10}, {"target_end_line": 292, "source_start_line": 42, "source_end_line": 44, "source_confidence": 7, "target_start_line": 288, "target_confidence": 10}, {"target_end_line": 247, "source_start_line": 20, "source_end_line": 22, "source_confidence": 7, "target_start_line": 246, "target_confidence": 10}, {"target_end_line": 248, "source_start_line": 6, "source_end_line": 7, "source_confidence": 7, "target_start_line": 247, "target_confidence": 10}, {"target_end_line": 270, "source_start_line": 152, "source_end_line": 154, "source_confidence": 7, "target_start_line": 269, "target_confidence": 10}, {"target_end_line": 53, "source_start_line": 17, "source_end_line": 18, "source_confidence": 7, "target_start_line": 50, "target_confidence": 10}, {"target_end_line": 250, "source_start_line": 18, "source_end_line": 19, "source_confidence": 7, "target_start_line": 248, "target_confidence": 10}, {"target_end_line": 269, "source_start_line": 8, "source_end_line": 9, "source_confidence": 7, "target_start_line": 265, "target_confidence": 10}, {"target_end_line": 271, "source_start_line": 19, "source_end_line": 20, "source_confidence": 7, "target_start_line": 270, "target_confidence": 10}, {"target_end_line": 273, "source_start_line": 44, "source_end_line": 45, "source_confidence": 7, "target_start_line": 271, "target_confidence": 10}, {"target_end_line": 292, "source_start_line": 42, "source_end_line": 44, "source_confidence": 7, "target_start_line": 288, "target_confidence": 10}, {"target_end_line": 247, "source_start_line": 20, "source_end_line": 22, "source_confidence": 7, "target_start_line": 246, "target_confidence": 10}, {"target_end_line": 248, "source_start_line": 6, "source_end_line": 7, "source_confidence": 7, "target_start_line": 247, "target_confidence": 10}, {"target_end_line": 270, "source_start_line": 152, "source_end_line": 154, "source_confidence": 7, "target_start_line": 269, "target_confidence": 10}, {"target_end_line": 53, "source_start_line": 17, "source_end_line": 18, "source_confidence": 7, "target_start_line": 50, "target_confidence": 10}, {"target_end_line": 250, "source_start_line": 18, "source_end_line": 19, "source_confidence": 7, "target_start_line": 248, "target_confidence": 10}, {"target_end_line": 269, "source_start_line": 8, "source_end_line": 9, "source_confidence": 7, "target_start_line": 265, "target_confidence": 10}, {"target_end_line": 271, "source_start_line": 19, "source_end_line": 20, "source_confidence": 7, "target_start_line": 270, "target_confidence": 10}, {"target_end_line": 273, "source_start_line": 44, "source_end_line": 45, "source_confidence": 7, "target_start_line": 271, "target_confidence": 10}, {"target_end_line": 292, "source_start_line": 42, "source_end_line": 44, "source_confidence": 7, "target_start_line": 288, "target_confidence": 10}, {"target_end_line": 247, "source_start_line": 20, "source_end_line": 22, "source_confidence": 7, "target_start_line": 246, "target_confidence": 10}, {"target_end_line": 248, "source_start_line": 6, "source_end_line": 7, "source_confidence": 7, "target_start_line": 247, "target_confidence": 10}, {"target_end_line": 270, "source_start_line": 152, "source_end_line": 154, "source_confidence": 7, "target_start_line": 269, "target_confidence": 10}, {"target_end_line": 53, "source_start_line": 17, "source_end_line": 18, "source_confidence": 7, "target_start_line": 50, "target_confidence": 10}, {"target_end_line": 250, "source_start_line": 18, "source_end_line": 19, "source_confidence": 7, "target_start_line": 248, "target_confidence": 10}, {"target_end_line": 269, "source_start_line": 8, "source_end_line": 9, "source_confidence": 7, "target_start_line": 265, "target_confidence": 10}, {"target_end_line": 271, "source_start_line": 19, "source_end_line": 20, "source_confidence": 7, "target_start_line": 270, "target_confidence": 10}, {"target_end_line": 273, "source_start_line": 44, "source_end_line": 45, "source_confidence": 7, "target_start_line": 271, "target_confidence": 10}, {"target_end_line": 292, "source_start_line": 42, "source_end_line": 44, "source_confidence": 7, "target_start_line": 288, "target_confidence": 10}, {"target_end_line": 247, "source_start_line": 20, "source_end_line": 22, "source_confidence": 7, "target_start_line": 246, "target_confidence": 10}, {"target_end_line": 248, "source_start_line": 6, "source_end_line": 7, "source_confidence": 7, "target_start_line": 247, "target_confidence": 10}, {"target_end_line": 270, "source_start_line": 152, "source_end_line": 154, "source_confidence": 7, "target_start_line": 269, "target_confidence": 10}, {"target_end_line": 53, "source_start_line": 17, "source_end_line": 18, "source_confidence": 7, "target_start_line": 50, "target_confidence": 10}, {"target_end_line": 250, "source_start_line": 18, "source_end_line": 19, "source_confidence": 7, "target_start_line": 248, "target_confidence": 10}, {"target_end_line": 269, "source_start_line": 8, "source_end_line": 9, "source_confidence": 7, "target_start_line": 265, "target_confidence": 10}, {"target_end_line": 271, "source_start_line": 19, "source_end_line": 20, "source_confidence": 7, "target_start_line": 270, "target_confidence": 10}, {"target_end_line": 273, "source_start_line": 44, "source_end_line": 45, "source_confidence": 7, "target_start_line": 271, "target_confidence": 10}, {"target_end_line": 292, "source_start_line": 42, "source_end_line": 44, "source_confidence": 7, "target_start_line": 288, "target_confidence": 10}, {"target_end_line": 247, "source_start_line": 20, "source_end_line": 22, "source_confidence": 7, "target_start_line": 246, "target_confidence": 10}, {"target_end_line": 248, "source_start_line": 6, "source_end_line": 7, "source_confidence": 7, "target_start_line": 247, "target_confidence": 10}, {"target_end_line": 270, "source_start_line": 152, "source_end_line": 154, "source_confidence": 7, "target_start_line": 269, "target_confidence": 10}, {"target_end_line": 53, "source_start_line": 17, "source_end_line": 18, "source_confidence": 7, "target_start_line": 50, "target_confidence": 10}, {"target_end_line": 250, "source_start_line": 18, "source_end_line": 19, "source_confidence": 7, "target_start_line": 248, "target_confidence": 10}, {"target_end_line": 269, "source_start_line": 8, "source_end_line": 9, "source_confidence": 7, "target_start_line": 265, "target_confidence": 10}, {"target_end_line": 271, "source_start_line": 19, "source_end_line": 20, "source_confidence": 7, "target_start_line": 270, "target_confidence": 10}, {"target_end_line": 273, "source_start_line": 44, "source_end_line": 45, "source_confidence": 7, "target_start_line": 271, "target_confidence": 10}, {"target_end_line": 292, "source_start_line": 42, "source_end_line": 44, "source_confidence": 7, "target_start_line": 288, "target_confidence": 10}, {"target_end_line": 247, "source_start_line": 20, "source_end_line": 22, "source_confidence": 7, "target_start_line": 246, "target_confidence": 10}, {"target_end_line": 248, "source_start_line": 6, "source_end_line": 7, "source_confidence": 7, "target_start_line": 247, "target_confidence": 10}, {"target_end_line": 270, "source_start_line": 152, "source_end_line": 154, "source_confidence": 7, "target_start_line": 269, "target_confidence": 10}, {"target_end_line": 53, "source_start_line": 17, "source_end_line": 18, "source_confidence": 7, "target_start_line": 50, "target_confidence": 10}, {"target_end_line": 250, "source_start_line": 18, "source_end_line": 19, "source_confidence": 7, "target_start_line": 248, "target_confidence": 10}, {"target_end_line": 269, "source_start_line": 8, "source_end_line": 9, "source_confidence": 7, "target_start_line": 265, "target_confidence": 10}, {"target_end_line": 271, "source_start_line": 19, "source_end_line": 20, "source_confidence": 7, "target_start_line": 270, "target_confidence": 10}, {"target_end_line": 273, "source_start_line": 44, "source_end_line": 45, "source_confidence": 7, "target_start_line": 271, "target_confidence": 10}, {"target_end_line": 292, "source_start_line": 42, "source_end_line": 44, "source_confidence": 7, "target_start_line": 288, "target_confidence": 10}]}, {"source": "aaizemberg_fb57115b0980ac1455f6", "value": 33, "target": "mbostock_02d893e3486c70c4475f", "links": [{"target_end_line": 25, "source_start_line": 24, "source_end_line": 34, "source_confidence": 55, "target_start_line": 15, "target_confidence": 63}, {"target_end_line": 34, "source_start_line": 40, "source_end_line": 46, "source_confidence": 55, "target_start_line": 28, "target_confidence": 63}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 55, "target_start_line": 1, "target_confidence": 63}, {"target_end_line": 50, "source_start_line": 52, "source_end_line": 61, "source_confidence": 55, "target_start_line": 41, "target_confidence": 63}, {"target_end_line": 25, "source_start_line": 24, "source_end_line": 34, "source_confidence": 55, "target_start_line": 15, "target_confidence": 63}, {"target_end_line": 34, "source_start_line": 40, "source_end_line": 46, "source_confidence": 55, "target_start_line": 28, "target_confidence": 63}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 55, "target_start_line": 1, "target_confidence": 63}, {"target_end_line": 50, "source_start_line": 52, "source_end_line": 61, "source_confidence": 55, "target_start_line": 41, "target_confidence": 63}, {"target_end_line": 25, "source_start_line": 24, "source_end_line": 34, "source_confidence": 55, "target_start_line": 15, "target_confidence": 63}, {"target_end_line": 34, "source_start_line": 40, "source_end_line": 46, "source_confidence": 55, "target_start_line": 28, "target_confidence": 63}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 55, "target_start_line": 1, "target_confidence": 63}, {"target_end_line": 50, "source_start_line": 52, "source_end_line": 61, "source_confidence": 55, "target_start_line": 41, "target_confidence": 63}, {"target_end_line": 25, "source_start_line": 24, "source_end_line": 34, "source_confidence": 55, "target_start_line": 15, "target_confidence": 63}, {"target_end_line": 34, "source_start_line": 40, "source_end_line": 46, "source_confidence": 55, "target_start_line": 28, "target_confidence": 63}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 55, "target_start_line": 1, "target_confidence": 63}, {"target_end_line": 50, "source_start_line": 52, "source_end_line": 61, "source_confidence": 55, "target_start_line": 41, "target_confidence": 63}]}, {"source": "erikhazzard_e7a13ff417ff5257a067", "value": 59, "target": "eesur_f1147cb871cfe9cdf121", "links": [{"target_end_line": 95, "source_start_line": 53, "source_end_line": 67, "source_confidence": 61, "target_start_line": 81, "target_confidence": 48}, {"target_end_line": 126, "source_start_line": 70, "source_end_line": 98, "source_confidence": 61, "target_start_line": 98, "target_confidence": 48}, {"target_end_line": 79, "source_start_line": 33, "source_end_line": 47, "source_confidence": 61, "target_start_line": 65, "target_confidence": 48}, {"target_end_line": 95, "source_start_line": 53, "source_end_line": 67, "source_confidence": 61, "target_start_line": 81, "target_confidence": 48}, {"target_end_line": 126, "source_start_line": 70, "source_end_line": 98, "source_confidence": 61, "target_start_line": 98, "target_confidence": 48}, {"target_end_line": 79, "source_start_line": 33, "source_end_line": 47, "source_confidence": 61, "target_start_line": 65, "target_confidence": 48}, {"target_end_line": 95, "source_start_line": 53, "source_end_line": 67, "source_confidence": 61, "target_start_line": 81, "target_confidence": 48}, {"target_end_line": 126, "source_start_line": 70, "source_end_line": 98, "source_confidence": 61, "target_start_line": 98, "target_confidence": 48}, {"target_end_line": 79, "source_start_line": 33, "source_end_line": 47, "source_confidence": 61, "target_start_line": 65, "target_confidence": 48}]}, {"source": "georules_3a19a7e5bdd27ca57a08", "value": 98, "target": "dogobox_e694099d4bae5c390551", "links": [{"target_end_line": 76, "source_start_line": 59, "source_end_line": 98, "source_confidence": 66, "target_start_line": 46, "target_confidence": 73}, {"target_end_line": 102, "source_start_line": 111, "source_end_line": 132, "source_confidence": 66, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 46, "source_start_line": 48, "source_end_line": 59, "source_confidence": 66, "target_start_line": 37, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 99, "source_end_line": 105, "source_confidence": 66, "target_start_line": 77, "target_confidence": 73}, {"target_end_line": 13, "source_start_line": 6, "source_end_line": 15, "source_confidence": 66, "target_start_line": 7, "target_confidence": 73}, {"target_end_line": 109, "source_start_line": 133, "source_end_line": 139, "source_confidence": 66, "target_start_line": 103, "target_confidence": 73}, {"target_end_line": 76, "source_start_line": 59, "source_end_line": 98, "source_confidence": 66, "target_start_line": 46, "target_confidence": 73}, {"target_end_line": 102, "source_start_line": 111, "source_end_line": 132, "source_confidence": 66, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 46, "source_start_line": 48, "source_end_line": 59, "source_confidence": 66, "target_start_line": 37, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 99, "source_end_line": 105, "source_confidence": 66, "target_start_line": 77, "target_confidence": 73}, {"target_end_line": 13, "source_start_line": 6, "source_end_line": 15, "source_confidence": 66, "target_start_line": 7, "target_confidence": 73}, {"target_end_line": 109, "source_start_line": 133, "source_end_line": 139, "source_confidence": 66, "target_start_line": 103, "target_confidence": 73}, {"target_end_line": 76, "source_start_line": 59, "source_end_line": 98, "source_confidence": 66, "target_start_line": 46, "target_confidence": 73}, {"target_end_line": 102, "source_start_line": 111, "source_end_line": 132, "source_confidence": 66, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 46, "source_start_line": 48, "source_end_line": 59, "source_confidence": 66, "target_start_line": 37, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 99, "source_end_line": 105, "source_confidence": 66, "target_start_line": 77, "target_confidence": 73}, {"target_end_line": 13, "source_start_line": 6, "source_end_line": 15, "source_confidence": 66, "target_start_line": 7, "target_confidence": 73}, {"target_end_line": 109, "source_start_line": 133, "source_end_line": 139, "source_confidence": 66, "target_start_line": 103, "target_confidence": 73}, {"target_end_line": 76, "source_start_line": 59, "source_end_line": 98, "source_confidence": 66, "target_start_line": 46, "target_confidence": 73}, {"target_end_line": 102, "source_start_line": 111, "source_end_line": 132, "source_confidence": 66, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 46, "source_start_line": 48, "source_end_line": 59, "source_confidence": 66, "target_start_line": 37, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 99, "source_end_line": 105, "source_confidence": 66, "target_start_line": 77, "target_confidence": 73}, {"target_end_line": 13, "source_start_line": 6, "source_end_line": 15, "source_confidence": 66, "target_start_line": 7, "target_confidence": 73}, {"target_end_line": 109, "source_start_line": 133, "source_end_line": 139, "source_confidence": 66, "target_start_line": 103, "target_confidence": 73}, {"target_end_line": 76, "source_start_line": 59, "source_end_line": 98, "source_confidence": 66, "target_start_line": 46, "target_confidence": 73}, {"target_end_line": 102, "source_start_line": 111, "source_end_line": 132, "source_confidence": 66, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 46, "source_start_line": 48, "source_end_line": 59, "source_confidence": 66, "target_start_line": 37, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 99, "source_end_line": 105, "source_confidence": 66, "target_start_line": 77, "target_confidence": 73}, {"target_end_line": 13, "source_start_line": 6, "source_end_line": 15, "source_confidence": 66, "target_start_line": 7, "target_confidence": 73}, {"target_end_line": 109, "source_start_line": 133, "source_end_line": 139, "source_confidence": 66, "target_start_line": 103, "target_confidence": 73}, {"target_end_line": 76, "source_start_line": 59, "source_end_line": 98, "source_confidence": 66, "target_start_line": 46, "target_confidence": 73}, {"target_end_line": 102, "source_start_line": 111, "source_end_line": 132, "source_confidence": 66, "target_start_line": 84, "target_confidence": 73}, {"target_end_line": 46, "source_start_line": 48, "source_end_line": 59, "source_confidence": 66, "target_start_line": 37, "target_confidence": 73}, {"target_end_line": 82, "source_start_line": 99, "source_end_line": 105, "source_confidence": 66, "target_start_line": 77, "target_confidence": 73}, {"target_end_line": 13, "source_start_line": 6, "source_end_line": 15, "source_confidence": 66, "target_start_line": 7, "target_confidence": 73}, {"target_end_line": 109, "source_start_line": 133, "source_end_line": 139, "source_confidence": 66, "target_start_line": 103, "target_confidence": 73}]}, {"source": "Nastasi7_8e4b032ce21ee9291ee8", "value": 30, "target": "jonsadka_810749b7dbcf0eca1e4e", "links": [{"target_end_line": 31, "source_start_line": 71, "source_end_line": 77, "source_confidence": 17, "target_start_line": 25, "target_confidence": 21}, {"target_end_line": 99, "source_start_line": 104, "source_end_line": 113, "source_confidence": 17, "target_start_line": 90, "target_confidence": 21}, {"target_end_line": 5, "source_start_line": 52, "source_end_line": 54, "source_confidence": 17, "target_start_line": 3, "target_confidence": 21}, {"target_end_line": 110, "source_start_line": 115, "source_end_line": 122, "source_confidence": 17, "target_start_line": 101, "target_confidence": 21}, {"target_end_line": 31, "source_start_line": 71, "source_end_line": 77, "source_confidence": 17, "target_start_line": 25, "target_confidence": 21}, {"target_end_line": 99, "source_start_line": 104, "source_end_line": 113, "source_confidence": 17, "target_start_line": 90, "target_confidence": 21}, {"target_end_line": 5, "source_start_line": 52, "source_end_line": 54, "source_confidence": 17, "target_start_line": 3, "target_confidence": 21}, {"target_end_line": 110, "source_start_line": 115, "source_end_line": 122, "source_confidence": 17, "target_start_line": 101, "target_confidence": 21}, {"target_end_line": 31, "source_start_line": 71, "source_end_line": 77, "source_confidence": 17, "target_start_line": 25, "target_confidence": 21}, {"target_end_line": 99, "source_start_line": 104, "source_end_line": 113, "source_confidence": 17, "target_start_line": 90, "target_confidence": 21}, {"target_end_line": 5, "source_start_line": 52, "source_end_line": 54, "source_confidence": 17, "target_start_line": 3, "target_confidence": 21}, {"target_end_line": 110, "source_start_line": 115, "source_end_line": 122, "source_confidence": 17, "target_start_line": 101, "target_confidence": 21}, {"target_end_line": 31, "source_start_line": 71, "source_end_line": 77, "source_confidence": 17, "target_start_line": 25, "target_confidence": 21}, {"target_end_line": 99, "source_start_line": 104, "source_end_line": 113, "source_confidence": 17, "target_start_line": 90, "target_confidence": 21}, {"target_end_line": 5, "source_start_line": 52, "source_end_line": 54, "source_confidence": 17, "target_start_line": 3, "target_confidence": 21}, {"target_end_line": 110, "source_start_line": 115, "source_end_line": 122, "source_confidence": 17, "target_start_line": 101, "target_confidence": 21}]}, {"source": "trinary_b1a5f453c51231cd7bb5", "value": 29, "target": "mbostock_978f6c03c9aab8af8594", "links": [{"target_end_line": 39, "source_start_line": 26, "source_end_line": 34, "source_confidence": 32, "target_start_line": 31, "target_confidence": 30}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 24, "source_confidence": 32, "target_start_line": 11, "target_confidence": 30}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 32, "target_start_line": 1, "target_confidence": 30}, {"target_end_line": 39, "source_start_line": 26, "source_end_line": 34, "source_confidence": 32, "target_start_line": 31, "target_confidence": 30}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 24, "source_confidence": 32, "target_start_line": 11, "target_confidence": 30}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 32, "target_start_line": 1, "target_confidence": 30}, {"target_end_line": 39, "source_start_line": 26, "source_end_line": 34, "source_confidence": 32, "target_start_line": 31, "target_confidence": 30}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 24, "source_confidence": 32, "target_start_line": 11, "target_confidence": 30}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 32, "target_start_line": 1, "target_confidence": 30}]}, {"source": "trinary_b1a5f453c51231cd7bb5", "value": 29, "target": "mbostock_c69f5960c6b1a95b6f78", "links": [{"target_end_line": 35, "source_start_line": 26, "source_end_line": 34, "source_confidence": 32, "target_start_line": 27, "target_confidence": 40}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 24, "source_confidence": 32, "target_start_line": 11, "target_confidence": 40}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 32, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 35, "source_start_line": 26, "source_end_line": 34, "source_confidence": 32, "target_start_line": 27, "target_confidence": 40}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 24, "source_confidence": 32, "target_start_line": 11, "target_confidence": 40}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 32, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 35, "source_start_line": 26, "source_end_line": 34, "source_confidence": 32, "target_start_line": 27, "target_confidence": 40}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 24, "source_confidence": 32, "target_start_line": 11, "target_confidence": 40}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 32, "target_start_line": 1, "target_confidence": 40}]}, {"source": "KatiRG_90a972bad9109ae556c0", "value": 53, "target": "greencracker_8661fbc35815d261b9fa", "links": [{"target_end_line": 29, "source_start_line": 13, "source_end_line": 27, "source_confidence": 24, "target_start_line": 15, "target_confidence": 29}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 24, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 148, "source_start_line": 114, "source_end_line": 121, "source_confidence": 24, "target_start_line": 141, "target_confidence": 29}, {"target_end_line": 120, "source_start_line": 79, "source_end_line": 84, "source_confidence": 24, "target_start_line": 115, "target_confidence": 29}, {"target_end_line": 85, "source_start_line": 47, "source_end_line": 51, "source_confidence": 24, "target_start_line": 81, "target_confidence": 29}, {"target_end_line": 111, "source_start_line": 62, "source_end_line": 66, "source_confidence": 24, "target_start_line": 107, "target_confidence": 29}, {"target_end_line": 153, "source_start_line": 121, "source_end_line": 124, "source_confidence": 24, "target_start_line": 150, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 13, "source_end_line": 27, "source_confidence": 24, "target_start_line": 15, "target_confidence": 29}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 24, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 148, "source_start_line": 114, "source_end_line": 121, "source_confidence": 24, "target_start_line": 141, "target_confidence": 29}, {"target_end_line": 120, "source_start_line": 79, "source_end_line": 84, "source_confidence": 24, "target_start_line": 115, "target_confidence": 29}, {"target_end_line": 85, "source_start_line": 47, "source_end_line": 51, "source_confidence": 24, "target_start_line": 81, "target_confidence": 29}, {"target_end_line": 111, "source_start_line": 62, "source_end_line": 66, "source_confidence": 24, "target_start_line": 107, "target_confidence": 29}, {"target_end_line": 153, "source_start_line": 121, "source_end_line": 124, "source_confidence": 24, "target_start_line": 150, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 13, "source_end_line": 27, "source_confidence": 24, "target_start_line": 15, "target_confidence": 29}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 24, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 148, "source_start_line": 114, "source_end_line": 121, "source_confidence": 24, "target_start_line": 141, "target_confidence": 29}, {"target_end_line": 120, "source_start_line": 79, "source_end_line": 84, "source_confidence": 24, "target_start_line": 115, "target_confidence": 29}, {"target_end_line": 85, "source_start_line": 47, "source_end_line": 51, "source_confidence": 24, "target_start_line": 81, "target_confidence": 29}, {"target_end_line": 111, "source_start_line": 62, "source_end_line": 66, "source_confidence": 24, "target_start_line": 107, "target_confidence": 29}, {"target_end_line": 153, "source_start_line": 121, "source_end_line": 124, "source_confidence": 24, "target_start_line": 150, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 13, "source_end_line": 27, "source_confidence": 24, "target_start_line": 15, "target_confidence": 29}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 24, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 148, "source_start_line": 114, "source_end_line": 121, "source_confidence": 24, "target_start_line": 141, "target_confidence": 29}, {"target_end_line": 120, "source_start_line": 79, "source_end_line": 84, "source_confidence": 24, "target_start_line": 115, "target_confidence": 29}, {"target_end_line": 85, "source_start_line": 47, "source_end_line": 51, "source_confidence": 24, "target_start_line": 81, "target_confidence": 29}, {"target_end_line": 111, "source_start_line": 62, "source_end_line": 66, "source_confidence": 24, "target_start_line": 107, "target_confidence": 29}, {"target_end_line": 153, "source_start_line": 121, "source_end_line": 124, "source_confidence": 24, "target_start_line": 150, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 13, "source_end_line": 27, "source_confidence": 24, "target_start_line": 15, "target_confidence": 29}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 24, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 148, "source_start_line": 114, "source_end_line": 121, "source_confidence": 24, "target_start_line": 141, "target_confidence": 29}, {"target_end_line": 120, "source_start_line": 79, "source_end_line": 84, "source_confidence": 24, "target_start_line": 115, "target_confidence": 29}, {"target_end_line": 85, "source_start_line": 47, "source_end_line": 51, "source_confidence": 24, "target_start_line": 81, "target_confidence": 29}, {"target_end_line": 111, "source_start_line": 62, "source_end_line": 66, "source_confidence": 24, "target_start_line": 107, "target_confidence": 29}, {"target_end_line": 153, "source_start_line": 121, "source_end_line": 124, "source_confidence": 24, "target_start_line": 150, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 13, "source_end_line": 27, "source_confidence": 24, "target_start_line": 15, "target_confidence": 29}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 24, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 148, "source_start_line": 114, "source_end_line": 121, "source_confidence": 24, "target_start_line": 141, "target_confidence": 29}, {"target_end_line": 120, "source_start_line": 79, "source_end_line": 84, "source_confidence": 24, "target_start_line": 115, "target_confidence": 29}, {"target_end_line": 85, "source_start_line": 47, "source_end_line": 51, "source_confidence": 24, "target_start_line": 81, "target_confidence": 29}, {"target_end_line": 111, "source_start_line": 62, "source_end_line": 66, "source_confidence": 24, "target_start_line": 107, "target_confidence": 29}, {"target_end_line": 153, "source_start_line": 121, "source_end_line": 124, "source_confidence": 24, "target_start_line": 150, "target_confidence": 29}, {"target_end_line": 29, "source_start_line": 13, "source_end_line": 27, "source_confidence": 24, "target_start_line": 15, "target_confidence": 29}, {"target_end_line": 10, "source_start_line": 1, "source_end_line": 10, "source_confidence": 24, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 148, "source_start_line": 114, "source_end_line": 121, "source_confidence": 24, "target_start_line": 141, "target_confidence": 29}, {"target_end_line": 120, "source_start_line": 79, "source_end_line": 84, "source_confidence": 24, "target_start_line": 115, "target_confidence": 29}, {"target_end_line": 85, "source_start_line": 47, "source_end_line": 51, "source_confidence": 24, "target_start_line": 81, "target_confidence": 29}, {"target_end_line": 111, "source_start_line": 62, "source_end_line": 66, "source_confidence": 24, "target_start_line": 107, "target_confidence": 29}, {"target_end_line": 153, "source_start_line": 121, "source_end_line": 124, "source_confidence": 24, "target_start_line": 150, "target_confidence": 29}]}, {"source": "roundrobin_5e8287bd3fecf0cf7b8c", "value": 95, "target": "KatiRG_90a972bad9109ae556c0", "links": [{"target_end_line": 68, "source_start_line": 9, "source_end_line": 68, "source_confidence": 88, "target_start_line": 9, "target_confidence": 45}, {"target_end_line": 135, "source_start_line": 80, "source_end_line": 108, "source_confidence": 88, "target_start_line": 106, "target_confidence": 45}, {"target_end_line": 83, "source_start_line": 75, "source_end_line": 79, "source_confidence": 88, "target_start_line": 79, "target_confidence": 45}, {"target_end_line": 68, "source_start_line": 9, "source_end_line": 68, "source_confidence": 88, "target_start_line": 9, "target_confidence": 45}, {"target_end_line": 135, "source_start_line": 80, "source_end_line": 108, "source_confidence": 88, "target_start_line": 106, "target_confidence": 45}, {"target_end_line": 83, "source_start_line": 75, "source_end_line": 79, "source_confidence": 88, "target_start_line": 79, "target_confidence": 45}, {"target_end_line": 68, "source_start_line": 9, "source_end_line": 68, "source_confidence": 88, "target_start_line": 9, "target_confidence": 45}, {"target_end_line": 135, "source_start_line": 80, "source_end_line": 108, "source_confidence": 88, "target_start_line": 106, "target_confidence": 45}, {"target_end_line": 83, "source_start_line": 75, "source_end_line": 79, "source_confidence": 88, "target_start_line": 79, "target_confidence": 45}]}, {"source": "micahstubbs_3cda05ca68cba260cb81", "value": 93, "target": "sbreslav_be9af0d809b49864b7d8", "links": [{"target_end_line": 34, "source_start_line": 1, "source_end_line": 33, "source_confidence": 42, "target_start_line": 1, "target_confidence": 68}, {"target_end_line": 50, "source_start_line": 95, "source_end_line": 109, "source_confidence": 42, "target_start_line": 36, "target_confidence": 68}, {"target_end_line": 65, "source_start_line": 109, "source_end_line": 119, "source_confidence": 42, "target_start_line": 53, "target_confidence": 68}, {"target_end_line": 98, "source_start_line": 133, "source_end_line": 148, "source_confidence": 42, "target_start_line": 83, "target_confidence": 68}, {"target_end_line": 79, "source_start_line": 120, "source_end_line": 131, "source_confidence": 42, "target_start_line": 68, "target_confidence": 68}, {"target_end_line": 104, "source_start_line": 197, "source_end_line": 199, "source_confidence": 42, "target_start_line": 102, "target_confidence": 68}, {"target_end_line": 34, "source_start_line": 1, "source_end_line": 33, "source_confidence": 42, "target_start_line": 1, "target_confidence": 68}, {"target_end_line": 50, "source_start_line": 95, "source_end_line": 109, "source_confidence": 42, "target_start_line": 36, "target_confidence": 68}, {"target_end_line": 65, "source_start_line": 109, "source_end_line": 119, "source_confidence": 42, "target_start_line": 53, "target_confidence": 68}, {"target_end_line": 98, "source_start_line": 133, "source_end_line": 148, "source_confidence": 42, "target_start_line": 83, "target_confidence": 68}, {"target_end_line": 79, "source_start_line": 120, "source_end_line": 131, "source_confidence": 42, "target_start_line": 68, "target_confidence": 68}, {"target_end_line": 104, "source_start_line": 197, "source_end_line": 199, "source_confidence": 42, "target_start_line": 102, "target_confidence": 68}, {"target_end_line": 34, "source_start_line": 1, "source_end_line": 33, "source_confidence": 42, "target_start_line": 1, "target_confidence": 68}, {"target_end_line": 50, "source_start_line": 95, "source_end_line": 109, "source_confidence": 42, "target_start_line": 36, "target_confidence": 68}, {"target_end_line": 65, "source_start_line": 109, "source_end_line": 119, "source_confidence": 42, "target_start_line": 53, "target_confidence": 68}, {"target_end_line": 98, "source_start_line": 133, "source_end_line": 148, "source_confidence": 42, "target_start_line": 83, "target_confidence": 68}, {"target_end_line": 79, "source_start_line": 120, "source_end_line": 131, "source_confidence": 42, "target_start_line": 68, "target_confidence": 68}, {"target_end_line": 104, "source_start_line": 197, "source_end_line": 199, "source_confidence": 42, "target_start_line": 102, "target_confidence": 68}, {"target_end_line": 34, "source_start_line": 1, "source_end_line": 33, "source_confidence": 42, "target_start_line": 1, "target_confidence": 68}, {"target_end_line": 50, "source_start_line": 95, "source_end_line": 109, "source_confidence": 42, "target_start_line": 36, "target_confidence": 68}, {"target_end_line": 65, "source_start_line": 109, "source_end_line": 119, "source_confidence": 42, "target_start_line": 53, "target_confidence": 68}, {"target_end_line": 98, "source_start_line": 133, "source_end_line": 148, "source_confidence": 42, "target_start_line": 83, "target_confidence": 68}, {"target_end_line": 79, "source_start_line": 120, "source_end_line": 131, "source_confidence": 42, "target_start_line": 68, "target_confidence": 68}, {"target_end_line": 104, "source_start_line": 197, "source_end_line": 199, "source_confidence": 42, "target_start_line": 102, "target_confidence": 68}, {"target_end_line": 34, "source_start_line": 1, "source_end_line": 33, "source_confidence": 42, "target_start_line": 1, "target_confidence": 68}, {"target_end_line": 50, "source_start_line": 95, "source_end_line": 109, "source_confidence": 42, "target_start_line": 36, "target_confidence": 68}, {"target_end_line": 65, "source_start_line": 109, "source_end_line": 119, "source_confidence": 42, "target_start_line": 53, "target_confidence": 68}, {"target_end_line": 98, "source_start_line": 133, "source_end_line": 148, "source_confidence": 42, "target_start_line": 83, "target_confidence": 68}, {"target_end_line": 79, "source_start_line": 120, "source_end_line": 131, "source_confidence": 42, "target_start_line": 68, "target_confidence": 68}, {"target_end_line": 104, "source_start_line": 197, "source_end_line": 199, "source_confidence": 42, "target_start_line": 102, "target_confidence": 68}, {"target_end_line": 34, "source_start_line": 1, "source_end_line": 33, "source_confidence": 42, "target_start_line": 1, "target_confidence": 68}, {"target_end_line": 50, "source_start_line": 95, "source_end_line": 109, "source_confidence": 42, "target_start_line": 36, "target_confidence": 68}, {"target_end_line": 65, "source_start_line": 109, "source_end_line": 119, "source_confidence": 42, "target_start_line": 53, "target_confidence": 68}, {"target_end_line": 98, "source_start_line": 133, "source_end_line": 148, "source_confidence": 42, "target_start_line": 83, "target_confidence": 68}, {"target_end_line": 79, "source_start_line": 120, "source_end_line": 131, "source_confidence": 42, "target_start_line": 68, "target_confidence": 68}, {"target_end_line": 104, "source_start_line": 197, "source_end_line": 199, "source_confidence": 42, "target_start_line": 102, "target_confidence": 68}]}, {"source": "mbostock_29c534ff0b270054a01c", "value": 39, "target": "dhoboy_ceb621dd5e7a4ba2620c", "links": [{"target_end_line": 3, "source_start_line": 140, "source_end_line": 162, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 126, "source_end_line": 133, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 118, "source_end_line": 121, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 84, "source_end_line": 87, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 140, "source_end_line": 162, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 126, "source_end_line": 133, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 118, "source_end_line": 121, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 84, "source_end_line": 87, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 140, "source_end_line": 162, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 126, "source_end_line": 133, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 118, "source_end_line": 121, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 84, "source_end_line": 87, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 140, "source_end_line": 162, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 126, "source_end_line": 133, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 118, "source_end_line": 121, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}, {"target_end_line": 3, "source_start_line": 84, "source_end_line": 87, "source_confidence": 39, "target_start_line": 3, "target_confidence": 7}]}, {"source": "emeeks_f2f6883ac7c965d09b90", "value": 104, "target": "micahstubbs_8a173cfcb9171627c7f1", "links": [{"target_end_line": 106, "source_start_line": 27, "source_end_line": 57, "source_confidence": 42, "target_start_line": 76, "target_confidence": 44}, {"target_end_line": 44, "source_start_line": 14, "source_end_line": 21, "source_confidence": 42, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 109, "source_start_line": 59, "source_end_line": 61, "source_confidence": 42, "target_start_line": 108, "target_confidence": 44}, {"target_end_line": 207, "source_start_line": 213, "source_end_line": 219, "source_confidence": 42, "target_start_line": 202, "target_confidence": 44}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 24, "source_confidence": 42, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 12, "source_confidence": 42, "target_start_line": 17, "target_confidence": 44}, {"target_end_line": 112, "source_start_line": 61, "source_end_line": 62, "source_confidence": 42, "target_start_line": 111, "target_confidence": 44}, {"target_end_line": 144, "source_start_line": 85, "source_end_line": 92, "source_confidence": 42, "target_start_line": 137, "target_confidence": 44}, {"target_end_line": 150, "source_start_line": 94, "source_end_line": 98, "source_confidence": 42, "target_start_line": 146, "target_confidence": 44}, {"target_end_line": 186, "source_start_line": 206, "source_end_line": 209, "source_confidence": 42, "target_start_line": 162, "target_confidence": 44}, {"target_end_line": 106, "source_start_line": 27, "source_end_line": 57, "source_confidence": 42, "target_start_line": 76, "target_confidence": 44}, {"target_end_line": 44, "source_start_line": 14, "source_end_line": 21, "source_confidence": 42, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 109, "source_start_line": 59, "source_end_line": 61, "source_confidence": 42, "target_start_line": 108, "target_confidence": 44}, {"target_end_line": 207, "source_start_line": 213, "source_end_line": 219, "source_confidence": 42, "target_start_line": 202, "target_confidence": 44}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 24, "source_confidence": 42, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 12, "source_confidence": 42, "target_start_line": 17, "target_confidence": 44}, {"target_end_line": 112, "source_start_line": 61, "source_end_line": 62, "source_confidence": 42, "target_start_line": 111, "target_confidence": 44}, {"target_end_line": 144, "source_start_line": 85, "source_end_line": 92, "source_confidence": 42, "target_start_line": 137, "target_confidence": 44}, {"target_end_line": 150, "source_start_line": 94, "source_end_line": 98, "source_confidence": 42, "target_start_line": 146, "target_confidence": 44}, {"target_end_line": 186, "source_start_line": 206, "source_end_line": 209, "source_confidence": 42, "target_start_line": 162, "target_confidence": 44}, {"target_end_line": 106, "source_start_line": 27, "source_end_line": 57, "source_confidence": 42, "target_start_line": 76, "target_confidence": 44}, {"target_end_line": 44, "source_start_line": 14, "source_end_line": 21, "source_confidence": 42, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 109, "source_start_line": 59, "source_end_line": 61, "source_confidence": 42, "target_start_line": 108, "target_confidence": 44}, {"target_end_line": 207, "source_start_line": 213, "source_end_line": 219, "source_confidence": 42, "target_start_line": 202, "target_confidence": 44}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 24, "source_confidence": 42, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 12, "source_confidence": 42, "target_start_line": 17, "target_confidence": 44}, {"target_end_line": 112, "source_start_line": 61, "source_end_line": 62, "source_confidence": 42, "target_start_line": 111, "target_confidence": 44}, {"target_end_line": 144, "source_start_line": 85, "source_end_line": 92, "source_confidence": 42, "target_start_line": 137, "target_confidence": 44}, {"target_end_line": 150, "source_start_line": 94, "source_end_line": 98, "source_confidence": 42, "target_start_line": 146, "target_confidence": 44}, {"target_end_line": 186, "source_start_line": 206, "source_end_line": 209, "source_confidence": 42, "target_start_line": 162, "target_confidence": 44}, {"target_end_line": 106, "source_start_line": 27, "source_end_line": 57, "source_confidence": 42, "target_start_line": 76, "target_confidence": 44}, {"target_end_line": 44, "source_start_line": 14, "source_end_line": 21, "source_confidence": 42, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 109, "source_start_line": 59, "source_end_line": 61, "source_confidence": 42, "target_start_line": 108, "target_confidence": 44}, {"target_end_line": 207, "source_start_line": 213, "source_end_line": 219, "source_confidence": 42, "target_start_line": 202, "target_confidence": 44}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 24, "source_confidence": 42, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 12, "source_confidence": 42, "target_start_line": 17, "target_confidence": 44}, {"target_end_line": 112, "source_start_line": 61, "source_end_line": 62, "source_confidence": 42, "target_start_line": 111, "target_confidence": 44}, {"target_end_line": 144, "source_start_line": 85, "source_end_line": 92, "source_confidence": 42, "target_start_line": 137, "target_confidence": 44}, {"target_end_line": 150, "source_start_line": 94, "source_end_line": 98, "source_confidence": 42, "target_start_line": 146, "target_confidence": 44}, {"target_end_line": 186, "source_start_line": 206, "source_end_line": 209, "source_confidence": 42, "target_start_line": 162, "target_confidence": 44}, {"target_end_line": 106, "source_start_line": 27, "source_end_line": 57, "source_confidence": 42, "target_start_line": 76, "target_confidence": 44}, {"target_end_line": 44, "source_start_line": 14, "source_end_line": 21, "source_confidence": 42, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 109, "source_start_line": 59, "source_end_line": 61, "source_confidence": 42, "target_start_line": 108, "target_confidence": 44}, {"target_end_line": 207, "source_start_line": 213, "source_end_line": 219, "source_confidence": 42, "target_start_line": 202, "target_confidence": 44}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 24, "source_confidence": 42, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 12, "source_confidence": 42, "target_start_line": 17, "target_confidence": 44}, {"target_end_line": 112, "source_start_line": 61, "source_end_line": 62, "source_confidence": 42, "target_start_line": 111, "target_confidence": 44}, {"target_end_line": 144, "source_start_line": 85, "source_end_line": 92, "source_confidence": 42, "target_start_line": 137, "target_confidence": 44}, {"target_end_line": 150, "source_start_line": 94, "source_end_line": 98, "source_confidence": 42, "target_start_line": 146, "target_confidence": 44}, {"target_end_line": 186, "source_start_line": 206, "source_end_line": 209, "source_confidence": 42, "target_start_line": 162, "target_confidence": 44}, {"target_end_line": 106, "source_start_line": 27, "source_end_line": 57, "source_confidence": 42, "target_start_line": 76, "target_confidence": 44}, {"target_end_line": 44, "source_start_line": 14, "source_end_line": 21, "source_confidence": 42, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 109, "source_start_line": 59, "source_end_line": 61, "source_confidence": 42, "target_start_line": 108, "target_confidence": 44}, {"target_end_line": 207, "source_start_line": 213, "source_end_line": 219, "source_confidence": 42, "target_start_line": 202, "target_confidence": 44}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 24, "source_confidence": 42, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 12, "source_confidence": 42, "target_start_line": 17, "target_confidence": 44}, {"target_end_line": 112, "source_start_line": 61, "source_end_line": 62, "source_confidence": 42, "target_start_line": 111, "target_confidence": 44}, {"target_end_line": 144, "source_start_line": 85, "source_end_line": 92, "source_confidence": 42, "target_start_line": 137, "target_confidence": 44}, {"target_end_line": 150, "source_start_line": 94, "source_end_line": 98, "source_confidence": 42, "target_start_line": 146, "target_confidence": 44}, {"target_end_line": 186, "source_start_line": 206, "source_end_line": 209, "source_confidence": 42, "target_start_line": 162, "target_confidence": 44}, {"target_end_line": 106, "source_start_line": 27, "source_end_line": 57, "source_confidence": 42, "target_start_line": 76, "target_confidence": 44}, {"target_end_line": 44, "source_start_line": 14, "source_end_line": 21, "source_confidence": 42, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 109, "source_start_line": 59, "source_end_line": 61, "source_confidence": 42, "target_start_line": 108, "target_confidence": 44}, {"target_end_line": 207, "source_start_line": 213, "source_end_line": 219, "source_confidence": 42, "target_start_line": 202, "target_confidence": 44}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 24, "source_confidence": 42, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 12, "source_confidence": 42, "target_start_line": 17, "target_confidence": 44}, {"target_end_line": 112, "source_start_line": 61, "source_end_line": 62, "source_confidence": 42, "target_start_line": 111, "target_confidence": 44}, {"target_end_line": 144, "source_start_line": 85, "source_end_line": 92, "source_confidence": 42, "target_start_line": 137, "target_confidence": 44}, {"target_end_line": 150, "source_start_line": 94, "source_end_line": 98, "source_confidence": 42, "target_start_line": 146, "target_confidence": 44}, {"target_end_line": 186, "source_start_line": 206, "source_end_line": 209, "source_confidence": 42, "target_start_line": 162, "target_confidence": 44}, {"target_end_line": 106, "source_start_line": 27, "source_end_line": 57, "source_confidence": 42, "target_start_line": 76, "target_confidence": 44}, {"target_end_line": 44, "source_start_line": 14, "source_end_line": 21, "source_confidence": 42, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 109, "source_start_line": 59, "source_end_line": 61, "source_confidence": 42, "target_start_line": 108, "target_confidence": 44}, {"target_end_line": 207, "source_start_line": 213, "source_end_line": 219, "source_confidence": 42, "target_start_line": 202, "target_confidence": 44}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 24, "source_confidence": 42, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 12, "source_confidence": 42, "target_start_line": 17, "target_confidence": 44}, {"target_end_line": 112, "source_start_line": 61, "source_end_line": 62, "source_confidence": 42, "target_start_line": 111, "target_confidence": 44}, {"target_end_line": 144, "source_start_line": 85, "source_end_line": 92, "source_confidence": 42, "target_start_line": 137, "target_confidence": 44}, {"target_end_line": 150, "source_start_line": 94, "source_end_line": 98, "source_confidence": 42, "target_start_line": 146, "target_confidence": 44}, {"target_end_line": 186, "source_start_line": 206, "source_end_line": 209, "source_confidence": 42, "target_start_line": 162, "target_confidence": 44}, {"target_end_line": 106, "source_start_line": 27, "source_end_line": 57, "source_confidence": 42, "target_start_line": 76, "target_confidence": 44}, {"target_end_line": 44, "source_start_line": 14, "source_end_line": 21, "source_confidence": 42, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 109, "source_start_line": 59, "source_end_line": 61, "source_confidence": 42, "target_start_line": 108, "target_confidence": 44}, {"target_end_line": 207, "source_start_line": 213, "source_end_line": 219, "source_confidence": 42, "target_start_line": 202, "target_confidence": 44}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 24, "source_confidence": 42, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 12, "source_confidence": 42, "target_start_line": 17, "target_confidence": 44}, {"target_end_line": 112, "source_start_line": 61, "source_end_line": 62, "source_confidence": 42, "target_start_line": 111, "target_confidence": 44}, {"target_end_line": 144, "source_start_line": 85, "source_end_line": 92, "source_confidence": 42, "target_start_line": 137, "target_confidence": 44}, {"target_end_line": 150, "source_start_line": 94, "source_end_line": 98, "source_confidence": 42, "target_start_line": 146, "target_confidence": 44}, {"target_end_line": 186, "source_start_line": 206, "source_end_line": 209, "source_confidence": 42, "target_start_line": 162, "target_confidence": 44}, {"target_end_line": 106, "source_start_line": 27, "source_end_line": 57, "source_confidence": 42, "target_start_line": 76, "target_confidence": 44}, {"target_end_line": 44, "source_start_line": 14, "source_end_line": 21, "source_confidence": 42, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 109, "source_start_line": 59, "source_end_line": 61, "source_confidence": 42, "target_start_line": 108, "target_confidence": 44}, {"target_end_line": 207, "source_start_line": 213, "source_end_line": 219, "source_confidence": 42, "target_start_line": 202, "target_confidence": 44}, {"target_end_line": 47, "source_start_line": 24, "source_end_line": 24, "source_confidence": 42, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 12, "source_confidence": 42, "target_start_line": 17, "target_confidence": 44}, {"target_end_line": 112, "source_start_line": 61, "source_end_line": 62, "source_confidence": 42, "target_start_line": 111, "target_confidence": 44}, {"target_end_line": 144, "source_start_line": 85, "source_end_line": 92, "source_confidence": 42, "target_start_line": 137, "target_confidence": 44}, {"target_end_line": 150, "source_start_line": 94, "source_end_line": 98, "source_confidence": 42, "target_start_line": 146, "target_confidence": 44}, {"target_end_line": 186, "source_start_line": 206, "source_end_line": 209, "source_confidence": 42, "target_start_line": 162, "target_confidence": 44}]}, {"source": "Nathan-O_6e64e78ca6390a3f311e", "value": 71, "target": "Jay-Oh-eN_f372f1555d1ab41dadd1", "links": [{"target_end_line": 37, "source_start_line": 15, "source_end_line": 40, "source_confidence": 55, "target_start_line": 13, "target_confidence": 28}, {"target_end_line": 106, "source_start_line": 74, "source_end_line": 83, "source_confidence": 55, "target_start_line": 97, "target_confidence": 28}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 14, "source_confidence": 55, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 123, "source_start_line": 85, "source_end_line": 90, "source_confidence": 55, "target_start_line": 118, "target_confidence": 28}, {"target_end_line": 85, "source_start_line": 63, "source_end_line": 70, "source_confidence": 55, "target_start_line": 78, "target_confidence": 28}, {"target_end_line": 130, "source_start_line": 91, "source_end_line": 97, "source_confidence": 55, "target_start_line": 124, "target_confidence": 28}, {"target_end_line": 37, "source_start_line": 15, "source_end_line": 40, "source_confidence": 55, "target_start_line": 13, "target_confidence": 28}, {"target_end_line": 106, "source_start_line": 74, "source_end_line": 83, "source_confidence": 55, "target_start_line": 97, "target_confidence": 28}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 14, "source_confidence": 55, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 123, "source_start_line": 85, "source_end_line": 90, "source_confidence": 55, "target_start_line": 118, "target_confidence": 28}, {"target_end_line": 85, "source_start_line": 63, "source_end_line": 70, "source_confidence": 55, "target_start_line": 78, "target_confidence": 28}, {"target_end_line": 130, "source_start_line": 91, "source_end_line": 97, "source_confidence": 55, "target_start_line": 124, "target_confidence": 28}, {"target_end_line": 37, "source_start_line": 15, "source_end_line": 40, "source_confidence": 55, "target_start_line": 13, "target_confidence": 28}, {"target_end_line": 106, "source_start_line": 74, "source_end_line": 83, "source_confidence": 55, "target_start_line": 97, "target_confidence": 28}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 14, "source_confidence": 55, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 123, "source_start_line": 85, "source_end_line": 90, "source_confidence": 55, "target_start_line": 118, "target_confidence": 28}, {"target_end_line": 85, "source_start_line": 63, "source_end_line": 70, "source_confidence": 55, "target_start_line": 78, "target_confidence": 28}, {"target_end_line": 130, "source_start_line": 91, "source_end_line": 97, "source_confidence": 55, "target_start_line": 124, "target_confidence": 28}, {"target_end_line": 37, "source_start_line": 15, "source_end_line": 40, "source_confidence": 55, "target_start_line": 13, "target_confidence": 28}, {"target_end_line": 106, "source_start_line": 74, "source_end_line": 83, "source_confidence": 55, "target_start_line": 97, "target_confidence": 28}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 14, "source_confidence": 55, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 123, "source_start_line": 85, "source_end_line": 90, "source_confidence": 55, "target_start_line": 118, "target_confidence": 28}, {"target_end_line": 85, "source_start_line": 63, "source_end_line": 70, "source_confidence": 55, "target_start_line": 78, "target_confidence": 28}, {"target_end_line": 130, "source_start_line": 91, "source_end_line": 97, "source_confidence": 55, "target_start_line": 124, "target_confidence": 28}, {"target_end_line": 37, "source_start_line": 15, "source_end_line": 40, "source_confidence": 55, "target_start_line": 13, "target_confidence": 28}, {"target_end_line": 106, "source_start_line": 74, "source_end_line": 83, "source_confidence": 55, "target_start_line": 97, "target_confidence": 28}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 14, "source_confidence": 55, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 123, "source_start_line": 85, "source_end_line": 90, "source_confidence": 55, "target_start_line": 118, "target_confidence": 28}, {"target_end_line": 85, "source_start_line": 63, "source_end_line": 70, "source_confidence": 55, "target_start_line": 78, "target_confidence": 28}, {"target_end_line": 130, "source_start_line": 91, "source_end_line": 97, "source_confidence": 55, "target_start_line": 124, "target_confidence": 28}, {"target_end_line": 37, "source_start_line": 15, "source_end_line": 40, "source_confidence": 55, "target_start_line": 13, "target_confidence": 28}, {"target_end_line": 106, "source_start_line": 74, "source_end_line": 83, "source_confidence": 55, "target_start_line": 97, "target_confidence": 28}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 14, "source_confidence": 55, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 123, "source_start_line": 85, "source_end_line": 90, "source_confidence": 55, "target_start_line": 118, "target_confidence": 28}, {"target_end_line": 85, "source_start_line": 63, "source_end_line": 70, "source_confidence": 55, "target_start_line": 78, "target_confidence": 28}, {"target_end_line": 130, "source_start_line": 91, "source_end_line": 97, "source_confidence": 55, "target_start_line": 124, "target_confidence": 28}]}, {"source": "curran_fea34ca9b3b8886e3ab8", "value": 46, "target": "enjalot_527374377ab35222b5fe", "links": [{"target_end_line": 26, "source_start_line": 8, "source_end_line": 26, "source_confidence": 68, "target_start_line": 7, "target_confidence": 57}, {"target_end_line": 68, "source_start_line": 55, "source_end_line": 64, "source_confidence": 68, "target_start_line": 58, "target_confidence": 57}, {"target_end_line": 38, "source_start_line": 29, "source_end_line": 37, "source_confidence": 68, "target_start_line": 30, "target_confidence": 57}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 68, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 26, "source_start_line": 8, "source_end_line": 26, "source_confidence": 68, "target_start_line": 7, "target_confidence": 57}, {"target_end_line": 68, "source_start_line": 55, "source_end_line": 64, "source_confidence": 68, "target_start_line": 58, "target_confidence": 57}, {"target_end_line": 38, "source_start_line": 29, "source_end_line": 37, "source_confidence": 68, "target_start_line": 30, "target_confidence": 57}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 68, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 26, "source_start_line": 8, "source_end_line": 26, "source_confidence": 68, "target_start_line": 7, "target_confidence": 57}, {"target_end_line": 68, "source_start_line": 55, "source_end_line": 64, "source_confidence": 68, "target_start_line": 58, "target_confidence": 57}, {"target_end_line": 38, "source_start_line": 29, "source_end_line": 37, "source_confidence": 68, "target_start_line": 30, "target_confidence": 57}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 68, "target_start_line": 1, "target_confidence": 57}, {"target_end_line": 26, "source_start_line": 8, "source_end_line": 26, "source_confidence": 68, "target_start_line": 7, "target_confidence": 57}, {"target_end_line": 68, "source_start_line": 55, "source_end_line": 64, "source_confidence": 68, "target_start_line": 58, "target_confidence": 57}, {"target_end_line": 38, "source_start_line": 29, "source_end_line": 37, "source_confidence": 68, "target_start_line": 30, "target_confidence": 57}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 68, "target_start_line": 1, "target_confidence": 57}]}, {"source": "SpaceActuary_8da9fcf564d2f741898c", "value": 39, "target": "geraldarthur_21f83856cf89482c2796", "links": [{"target_end_line": 42, "source_start_line": 4, "source_end_line": 42, "source_confidence": 93, "target_start_line": 4, "target_confidence": 94}]}, {"source": "elizabethshell_f14ce97283c1f11f9ebb", "value": 74, "target": "BenHeubl_d781122f3c36e4fd823e", "links": [{"target_end_line": 87, "source_start_line": 106, "source_end_line": 162, "source_confidence": 29, "target_start_line": 31, "target_confidence": 23}, {"target_end_line": 146, "source_start_line": 202, "source_end_line": 214, "source_confidence": 29, "target_start_line": 133, "target_confidence": 23}, {"target_end_line": 5, "source_start_line": 79, "source_end_line": 80, "source_confidence": 29, "target_start_line": 4, "target_confidence": 23}, {"target_end_line": 172, "source_start_line": 232, "source_end_line": 232, "source_confidence": 29, "target_start_line": 172, "target_confidence": 23}, {"target_end_line": 87, "source_start_line": 106, "source_end_line": 162, "source_confidence": 29, "target_start_line": 31, "target_confidence": 23}, {"target_end_line": 146, "source_start_line": 202, "source_end_line": 214, "source_confidence": 29, "target_start_line": 133, "target_confidence": 23}, {"target_end_line": 5, "source_start_line": 79, "source_end_line": 80, "source_confidence": 29, "target_start_line": 4, "target_confidence": 23}, {"target_end_line": 172, "source_start_line": 232, "source_end_line": 232, "source_confidence": 29, "target_start_line": 172, "target_confidence": 23}, {"target_end_line": 87, "source_start_line": 106, "source_end_line": 162, "source_confidence": 29, "target_start_line": 31, "target_confidence": 23}, {"target_end_line": 146, "source_start_line": 202, "source_end_line": 214, "source_confidence": 29, "target_start_line": 133, "target_confidence": 23}, {"target_end_line": 5, "source_start_line": 79, "source_end_line": 80, "source_confidence": 29, "target_start_line": 4, "target_confidence": 23}, {"target_end_line": 172, "source_start_line": 232, "source_end_line": 232, "source_confidence": 29, "target_start_line": 172, "target_confidence": 23}, {"target_end_line": 87, "source_start_line": 106, "source_end_line": 162, "source_confidence": 29, "target_start_line": 31, "target_confidence": 23}, {"target_end_line": 146, "source_start_line": 202, "source_end_line": 214, "source_confidence": 29, "target_start_line": 133, "target_confidence": 23}, {"target_end_line": 5, "source_start_line": 79, "source_end_line": 80, "source_confidence": 29, "target_start_line": 4, "target_confidence": 23}, {"target_end_line": 172, "source_start_line": 232, "source_end_line": 232, "source_confidence": 29, "target_start_line": 172, "target_confidence": 23}]}, {"source": "micahstubbs_44bb05aab218a40a4c12", "value": 16, "target": "nbremer_db24422abdb20150a9dd", "links": [{"target_end_line": 72, "source_start_line": 10, "source_end_line": 11, "source_confidence": 38, "target_start_line": 70, "target_confidence": 6}, {"target_end_line": 49, "source_start_line": 12, "source_end_line": 15, "source_confidence": 38, "target_start_line": 46, "target_confidence": 6}, {"target_end_line": 11, "source_start_line": 4, "source_end_line": 6, "source_confidence": 38, "target_start_line": 9, "target_confidence": 6}, {"target_end_line": 8, "source_start_line": 2, "source_end_line": 3, "source_confidence": 38, "target_start_line": 7, "target_confidence": 6}, {"target_end_line": 7, "source_start_line": 3, "source_end_line": 3, "source_confidence": 38, "target_start_line": 6, "target_confidence": 6}, {"target_end_line": 18, "source_start_line": 8, "source_end_line": 10, "source_confidence": 38, "target_start_line": 17, "target_confidence": 6}, {"target_end_line": 72, "source_start_line": 10, "source_end_line": 11, "source_confidence": 38, "target_start_line": 70, "target_confidence": 6}, {"target_end_line": 49, "source_start_line": 12, "source_end_line": 15, "source_confidence": 38, "target_start_line": 46, "target_confidence": 6}, {"target_end_line": 11, "source_start_line": 4, "source_end_line": 6, "source_confidence": 38, "target_start_line": 9, "target_confidence": 6}, {"target_end_line": 8, "source_start_line": 2, "source_end_line": 3, "source_confidence": 38, "target_start_line": 7, "target_confidence": 6}, {"target_end_line": 7, "source_start_line": 3, "source_end_line": 3, "source_confidence": 38, "target_start_line": 6, "target_confidence": 6}, {"target_end_line": 18, "source_start_line": 8, "source_end_line": 10, "source_confidence": 38, "target_start_line": 17, "target_confidence": 6}, {"target_end_line": 72, "source_start_line": 10, "source_end_line": 11, "source_confidence": 38, "target_start_line": 70, "target_confidence": 6}, {"target_end_line": 49, "source_start_line": 12, "source_end_line": 15, "source_confidence": 38, "target_start_line": 46, "target_confidence": 6}, {"target_end_line": 11, "source_start_line": 4, "source_end_line": 6, "source_confidence": 38, "target_start_line": 9, "target_confidence": 6}, {"target_end_line": 8, "source_start_line": 2, "source_end_line": 3, "source_confidence": 38, "target_start_line": 7, "target_confidence": 6}, {"target_end_line": 7, "source_start_line": 3, "source_end_line": 3, "source_confidence": 38, "target_start_line": 6, "target_confidence": 6}, {"target_end_line": 18, "source_start_line": 8, "source_end_line": 10, "source_confidence": 38, "target_start_line": 17, "target_confidence": 6}, {"target_end_line": 72, "source_start_line": 10, "source_end_line": 11, "source_confidence": 38, "target_start_line": 70, "target_confidence": 6}, {"target_end_line": 49, "source_start_line": 12, "source_end_line": 15, "source_confidence": 38, "target_start_line": 46, "target_confidence": 6}, {"target_end_line": 11, "source_start_line": 4, "source_end_line": 6, "source_confidence": 38, "target_start_line": 9, "target_confidence": 6}, {"target_end_line": 8, "source_start_line": 2, "source_end_line": 3, "source_confidence": 38, "target_start_line": 7, "target_confidence": 6}, {"target_end_line": 7, "source_start_line": 3, "source_end_line": 3, "source_confidence": 38, "target_start_line": 6, "target_confidence": 6}, {"target_end_line": 18, "source_start_line": 8, "source_end_line": 10, "source_confidence": 38, "target_start_line": 17, "target_confidence": 6}, {"target_end_line": 72, "source_start_line": 10, "source_end_line": 11, "source_confidence": 38, "target_start_line": 70, "target_confidence": 6}, {"target_end_line": 49, "source_start_line": 12, "source_end_line": 15, "source_confidence": 38, "target_start_line": 46, "target_confidence": 6}, {"target_end_line": 11, "source_start_line": 4, "source_end_line": 6, "source_confidence": 38, "target_start_line": 9, "target_confidence": 6}, {"target_end_line": 8, "source_start_line": 2, "source_end_line": 3, "source_confidence": 38, "target_start_line": 7, "target_confidence": 6}, {"target_end_line": 7, "source_start_line": 3, "source_end_line": 3, "source_confidence": 38, "target_start_line": 6, "target_confidence": 6}, {"target_end_line": 18, "source_start_line": 8, "source_end_line": 10, "source_confidence": 38, "target_start_line": 17, "target_confidence": 6}, {"target_end_line": 72, "source_start_line": 10, "source_end_line": 11, "source_confidence": 38, "target_start_line": 70, "target_confidence": 6}, {"target_end_line": 49, "source_start_line": 12, "source_end_line": 15, "source_confidence": 38, "target_start_line": 46, "target_confidence": 6}, {"target_end_line": 11, "source_start_line": 4, "source_end_line": 6, "source_confidence": 38, "target_start_line": 9, "target_confidence": 6}, {"target_end_line": 8, "source_start_line": 2, "source_end_line": 3, "source_confidence": 38, "target_start_line": 7, "target_confidence": 6}, {"target_end_line": 7, "source_start_line": 3, "source_end_line": 3, "source_confidence": 38, "target_start_line": 6, "target_confidence": 6}, {"target_end_line": 18, "source_start_line": 8, "source_end_line": 10, "source_confidence": 38, "target_start_line": 17, "target_confidence": 6}]}, {"source": "jalapic_ad6a1f1333aeff04c04b", "value": 27, "target": "micahstubbs_d8d96e1e554aa72671f4", "links": [{"target_end_line": 21, "source_start_line": 8, "source_end_line": 18, "source_confidence": 42, "target_start_line": 11, "target_confidence": 23}, {"target_end_line": 131, "source_start_line": 63, "source_end_line": 73, "source_confidence": 42, "target_start_line": 121, "target_confidence": 23}, {"target_end_line": 75, "source_start_line": 39, "source_end_line": 43, "source_confidence": 42, "target_start_line": 71, "target_confidence": 23}, {"target_end_line": 21, "source_start_line": 8, "source_end_line": 18, "source_confidence": 42, "target_start_line": 11, "target_confidence": 23}, {"target_end_line": 131, "source_start_line": 63, "source_end_line": 73, "source_confidence": 42, "target_start_line": 121, "target_confidence": 23}, {"target_end_line": 75, "source_start_line": 39, "source_end_line": 43, "source_confidence": 42, "target_start_line": 71, "target_confidence": 23}, {"target_end_line": 21, "source_start_line": 8, "source_end_line": 18, "source_confidence": 42, "target_start_line": 11, "target_confidence": 23}, {"target_end_line": 131, "source_start_line": 63, "source_end_line": 73, "source_confidence": 42, "target_start_line": 121, "target_confidence": 23}, {"target_end_line": 75, "source_start_line": 39, "source_end_line": 43, "source_confidence": 42, "target_start_line": 71, "target_confidence": 23}]}, {"source": "emeeks_f2f6883ac7c965d09b90", "value": 24, "target": "jalapic_ad6a1f1333aeff04c04b", "links": [{"target_end_line": 18, "source_start_line": 11, "source_end_line": 21, "source_confidence": 14, "target_start_line": 8, "target_confidence": 41}, {"target_end_line": 73, "source_start_line": 215, "source_end_line": 222, "source_confidence": 14, "target_start_line": 66, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 71, "source_end_line": 75, "source_confidence": 14, "target_start_line": 39, "target_confidence": 41}, {"target_end_line": 18, "source_start_line": 11, "source_end_line": 21, "source_confidence": 14, "target_start_line": 8, "target_confidence": 41}, {"target_end_line": 73, "source_start_line": 215, "source_end_line": 222, "source_confidence": 14, "target_start_line": 66, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 71, "source_end_line": 75, "source_confidence": 14, "target_start_line": 39, "target_confidence": 41}, {"target_end_line": 18, "source_start_line": 11, "source_end_line": 21, "source_confidence": 14, "target_start_line": 8, "target_confidence": 41}, {"target_end_line": 73, "source_start_line": 215, "source_end_line": 222, "source_confidence": 14, "target_start_line": 66, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 71, "source_end_line": 75, "source_confidence": 14, "target_start_line": 39, "target_confidence": 41}]}, {"source": "scottkildall_b1196a441042d14a655d", "value": 59, "target": "newsummit_29debc588cbc1a1320c9", "links": [{"target_end_line": 88, "source_start_line": 19, "source_end_line": 58, "source_confidence": 76, "target_start_line": 49, "target_confidence": 40}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 17, "source_confidence": 76, "target_start_line": 9, "target_confidence": 40}, {"target_end_line": 30, "source_start_line": 60, "source_end_line": 63, "source_confidence": 76, "target_start_line": 26, "target_confidence": 40}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 76, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 88, "source_start_line": 19, "source_end_line": 58, "source_confidence": 76, "target_start_line": 49, "target_confidence": 40}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 17, "source_confidence": 76, "target_start_line": 9, "target_confidence": 40}, {"target_end_line": 30, "source_start_line": 60, "source_end_line": 63, "source_confidence": 76, "target_start_line": 26, "target_confidence": 40}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 76, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 88, "source_start_line": 19, "source_end_line": 58, "source_confidence": 76, "target_start_line": 49, "target_confidence": 40}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 17, "source_confidence": 76, "target_start_line": 9, "target_confidence": 40}, {"target_end_line": 30, "source_start_line": 60, "source_end_line": 63, "source_confidence": 76, "target_start_line": 26, "target_confidence": 40}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 76, "target_start_line": 1, "target_confidence": 40}, {"target_end_line": 88, "source_start_line": 19, "source_end_line": 58, "source_confidence": 76, "target_start_line": 49, "target_confidence": 40}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 17, "source_confidence": 76, "target_start_line": 9, "target_confidence": 40}, {"target_end_line": 30, "source_start_line": 60, "source_end_line": 63, "source_confidence": 76, "target_start_line": 26, "target_confidence": 40}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 76, "target_start_line": 1, "target_confidence": 40}]}, {"source": "benlyall_b237f16dda3125423130", "value": 38, "target": "wcjohnson11_e9973aa49e3876a538b4", "links": [{"target_end_line": 34, "source_start_line": 21, "source_end_line": 41, "source_confidence": 47, "target_start_line": 14, "target_confidence": 52}, {"target_end_line": 69, "source_start_line": 84, "source_end_line": 89, "source_confidence": 47, "target_start_line": 64, "target_confidence": 52}, {"target_end_line": 45, "source_start_line": 42, "source_end_line": 52, "source_confidence": 47, "target_start_line": 35, "target_confidence": 52}, {"target_end_line": 34, "source_start_line": 21, "source_end_line": 41, "source_confidence": 47, "target_start_line": 14, "target_confidence": 52}, {"target_end_line": 69, "source_start_line": 84, "source_end_line": 89, "source_confidence": 47, "target_start_line": 64, "target_confidence": 52}, {"target_end_line": 45, "source_start_line": 42, "source_end_line": 52, "source_confidence": 47, "target_start_line": 35, "target_confidence": 52}, {"target_end_line": 34, "source_start_line": 21, "source_end_line": 41, "source_confidence": 47, "target_start_line": 14, "target_confidence": 52}, {"target_end_line": 69, "source_start_line": 84, "source_end_line": 89, "source_confidence": 47, "target_start_line": 64, "target_confidence": 52}, {"target_end_line": 45, "source_start_line": 42, "source_end_line": 52, "source_confidence": 47, "target_start_line": 35, "target_confidence": 52}]}, {"source": "ufenegga_eb449216394512121db5", "value": 60, "target": "wcjohnson11_7ebb3f3a28e403745856", "links": [{"target_end_line": 59, "source_start_line": 64, "source_end_line": 82, "source_confidence": 28, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 128, "source_start_line": 198, "source_end_line": 210, "source_confidence": 28, "target_start_line": 117, "target_confidence": 45}, {"target_end_line": 40, "source_start_line": 46, "source_end_line": 60, "source_confidence": 28, "target_start_line": 26, "target_confidence": 45}, {"target_end_line": 73, "source_start_line": 95, "source_end_line": 102, "source_confidence": 28, "target_start_line": 65, "target_confidence": 45}, {"target_end_line": 19, "source_start_line": 34, "source_end_line": 38, "source_confidence": 28, "target_start_line": 15, "target_confidence": 45}, {"target_end_line": 59, "source_start_line": 64, "source_end_line": 82, "source_confidence": 28, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 128, "source_start_line": 198, "source_end_line": 210, "source_confidence": 28, "target_start_line": 117, "target_confidence": 45}, {"target_end_line": 40, "source_start_line": 46, "source_end_line": 60, "source_confidence": 28, "target_start_line": 26, "target_confidence": 45}, {"target_end_line": 73, "source_start_line": 95, "source_end_line": 102, "source_confidence": 28, "target_start_line": 65, "target_confidence": 45}, {"target_end_line": 19, "source_start_line": 34, "source_end_line": 38, "source_confidence": 28, "target_start_line": 15, "target_confidence": 45}, {"target_end_line": 59, "source_start_line": 64, "source_end_line": 82, "source_confidence": 28, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 128, "source_start_line": 198, "source_end_line": 210, "source_confidence": 28, "target_start_line": 117, "target_confidence": 45}, {"target_end_line": 40, "source_start_line": 46, "source_end_line": 60, "source_confidence": 28, "target_start_line": 26, "target_confidence": 45}, {"target_end_line": 73, "source_start_line": 95, "source_end_line": 102, "source_confidence": 28, "target_start_line": 65, "target_confidence": 45}, {"target_end_line": 19, "source_start_line": 34, "source_end_line": 38, "source_confidence": 28, "target_start_line": 15, "target_confidence": 45}, {"target_end_line": 59, "source_start_line": 64, "source_end_line": 82, "source_confidence": 28, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 128, "source_start_line": 198, "source_end_line": 210, "source_confidence": 28, "target_start_line": 117, "target_confidence": 45}, {"target_end_line": 40, "source_start_line": 46, "source_end_line": 60, "source_confidence": 28, "target_start_line": 26, "target_confidence": 45}, {"target_end_line": 73, "source_start_line": 95, "source_end_line": 102, "source_confidence": 28, "target_start_line": 65, "target_confidence": 45}, {"target_end_line": 19, "source_start_line": 34, "source_end_line": 38, "source_confidence": 28, "target_start_line": 15, "target_confidence": 45}, {"target_end_line": 59, "source_start_line": 64, "source_end_line": 82, "source_confidence": 28, "target_start_line": 41, "target_confidence": 45}, {"target_end_line": 128, "source_start_line": 198, "source_end_line": 210, "source_confidence": 28, "target_start_line": 117, "target_confidence": 45}, {"target_end_line": 40, "source_start_line": 46, "source_end_line": 60, "source_confidence": 28, "target_start_line": 26, "target_confidence": 45}, {"target_end_line": 73, "source_start_line": 95, "source_end_line": 102, "source_confidence": 28, "target_start_line": 65, "target_confidence": 45}, {"target_end_line": 19, "source_start_line": 34, "source_end_line": 38, "source_confidence": 28, "target_start_line": 15, "target_confidence": 45}]}, {"source": "zanarmstrong_4b6ab7914183dbf7a16f", "value": 33, "target": "blehman_f528a8bc2a05ff9dcd9c", "links": [{"target_end_line": 33, "source_start_line": 1, "source_end_line": 33, "source_confidence": 97, "target_start_line": 1, "target_confidence": 93}]}, {"source": "mbostock_c034d66572fd6bd6815a", "value": 140, "target": "wcjohnson11_e956b7a2c9fcf1a86aef", "links": [{"target_end_line": 140, "source_start_line": 1, "source_end_line": 140, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "emeeks_05f44e46124cefa0070c", "value": 192, "target": "Beaupe_5c4c88bc4eeee47fc607", "links": [{"target_end_line": 192, "source_start_line": 1, "source_end_line": 192, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "micahstubbs_3ef5a223bdb760a228b4", "value": 76, "target": "jalapic_e4e2914addd34a2d689d", "links": [{"target_end_line": 77, "source_start_line": 24, "source_end_line": 78, "source_confidence": 97, "target_start_line": 23, "target_confidence": 98}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 20, "source_confidence": 97, "target_start_line": 1, "target_confidence": 98}, {"target_end_line": 77, "source_start_line": 24, "source_end_line": 78, "source_confidence": 97, "target_start_line": 23, "target_confidence": 98}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 20, "source_confidence": 97, "target_start_line": 1, "target_confidence": 98}]}, {"source": "ericsoco_647db6ebadd4f4756cae", "value": 26, "target": "zanarmstrong_dc73d339a0f921d638ac", "links": [{"target_end_line": 19, "source_start_line": 22, "source_end_line": 28, "source_confidence": 27, "target_start_line": 13, "target_confidence": 70}, {"target_end_line": 35, "source_start_line": 49, "source_end_line": 59, "source_confidence": 27, "target_start_line": 25, "target_confidence": 70}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 27, "target_start_line": 1, "target_confidence": 70}, {"target_end_line": 19, "source_start_line": 22, "source_end_line": 28, "source_confidence": 27, "target_start_line": 13, "target_confidence": 70}, {"target_end_line": 35, "source_start_line": 49, "source_end_line": 59, "source_confidence": 27, "target_start_line": 25, "target_confidence": 70}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 27, "target_start_line": 1, "target_confidence": 70}, {"target_end_line": 19, "source_start_line": 22, "source_end_line": 28, "source_confidence": 27, "target_start_line": 13, "target_confidence": 70}, {"target_end_line": 35, "source_start_line": 49, "source_end_line": 59, "source_confidence": 27, "target_start_line": 25, "target_confidence": 70}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 27, "target_start_line": 1, "target_confidence": 70}]}, {"source": "emeeks_671c0e7adfb1ce7060b8", "value": 72, "target": "micahstubbs_3ef5a223bdb760a228b4", "links": [{"target_end_line": 46, "source_start_line": 22, "source_end_line": 44, "source_confidence": 90, "target_start_line": 24, "target_confidence": 88}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 90, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 78, "source_start_line": 60, "source_end_line": 76, "source_confidence": 90, "target_start_line": 62, "target_confidence": 88}, {"target_end_line": 61, "source_start_line": 44, "source_end_line": 59, "source_confidence": 90, "target_start_line": 46, "target_confidence": 88}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 44, "source_confidence": 90, "target_start_line": 24, "target_confidence": 88}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 90, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 78, "source_start_line": 60, "source_end_line": 76, "source_confidence": 90, "target_start_line": 62, "target_confidence": 88}, {"target_end_line": 61, "source_start_line": 44, "source_end_line": 59, "source_confidence": 90, "target_start_line": 46, "target_confidence": 88}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 44, "source_confidence": 90, "target_start_line": 24, "target_confidence": 88}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 90, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 78, "source_start_line": 60, "source_end_line": 76, "source_confidence": 90, "target_start_line": 62, "target_confidence": 88}, {"target_end_line": 61, "source_start_line": 44, "source_end_line": 59, "source_confidence": 90, "target_start_line": 46, "target_confidence": 88}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 44, "source_confidence": 90, "target_start_line": 24, "target_confidence": 88}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 90, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 78, "source_start_line": 60, "source_end_line": 76, "source_confidence": 90, "target_start_line": 62, "target_confidence": 88}, {"target_end_line": 61, "source_start_line": 44, "source_end_line": 59, "source_confidence": 90, "target_start_line": 46, "target_confidence": 88}]}, {"source": "ssongalice_2b57db11b3584e7fa826", "value": 35, "target": "ericsoco_647db6ebadd4f4756cae", "links": [{"target_end_line": 56, "source_start_line": 40, "source_end_line": 53, "source_confidence": 52, "target_start_line": 43, "target_confidence": 31}, {"target_end_line": 28, "source_start_line": 7, "source_end_line": 13, "source_confidence": 52, "target_start_line": 22, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 6, "source_confidence": 52, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 20, "source_start_line": 25, "source_end_line": 34, "source_confidence": 52, "target_start_line": 11, "target_confidence": 31}, {"target_end_line": 56, "source_start_line": 40, "source_end_line": 53, "source_confidence": 52, "target_start_line": 43, "target_confidence": 31}, {"target_end_line": 28, "source_start_line": 7, "source_end_line": 13, "source_confidence": 52, "target_start_line": 22, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 6, "source_confidence": 52, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 20, "source_start_line": 25, "source_end_line": 34, "source_confidence": 52, "target_start_line": 11, "target_confidence": 31}, {"target_end_line": 56, "source_start_line": 40, "source_end_line": 53, "source_confidence": 52, "target_start_line": 43, "target_confidence": 31}, {"target_end_line": 28, "source_start_line": 7, "source_end_line": 13, "source_confidence": 52, "target_start_line": 22, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 6, "source_confidence": 52, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 20, "source_start_line": 25, "source_end_line": 34, "source_confidence": 52, "target_start_line": 11, "target_confidence": 31}, {"target_end_line": 56, "source_start_line": 40, "source_end_line": 53, "source_confidence": 52, "target_start_line": 43, "target_confidence": 31}, {"target_end_line": 28, "source_start_line": 7, "source_end_line": 13, "source_confidence": 52, "target_start_line": 22, "target_confidence": 31}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 6, "source_confidence": 52, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 20, "source_start_line": 25, "source_end_line": 34, "source_confidence": 52, "target_start_line": 11, "target_confidence": 31}]}, {"source": "mbostock_76342abc327062128604", "value": 59, "target": "erikhazzard_e7a13ff417ff5257a067", "links": [{"target_end_line": 67, "source_start_line": 49, "source_end_line": 63, "source_confidence": 58, "target_start_line": 53, "target_confidence": 61}, {"target_end_line": 98, "source_start_line": 66, "source_end_line": 94, "source_confidence": 58, "target_start_line": 70, "target_confidence": 61}, {"target_end_line": 47, "source_start_line": 33, "source_end_line": 47, "source_confidence": 58, "target_start_line": 33, "target_confidence": 61}, {"target_end_line": 67, "source_start_line": 49, "source_end_line": 63, "source_confidence": 58, "target_start_line": 53, "target_confidence": 61}, {"target_end_line": 98, "source_start_line": 66, "source_end_line": 94, "source_confidence": 58, "target_start_line": 70, "target_confidence": 61}, {"target_end_line": 47, "source_start_line": 33, "source_end_line": 47, "source_confidence": 58, "target_start_line": 33, "target_confidence": 61}, {"target_end_line": 67, "source_start_line": 49, "source_end_line": 63, "source_confidence": 58, "target_start_line": 53, "target_confidence": 61}, {"target_end_line": 98, "source_start_line": 66, "source_end_line": 94, "source_confidence": 58, "target_start_line": 70, "target_confidence": 61}, {"target_end_line": 47, "source_start_line": 33, "source_end_line": 47, "source_confidence": 58, "target_start_line": 33, "target_confidence": 61}]}, {"source": "resolutionfoundation_3e88d3100ecbaed6b9a2", "value": 42, "target": "kcsluis_248493f0bb9fce3e8588", "links": [{"target_end_line": 26, "source_start_line": 7, "source_end_line": 21, "source_confidence": 27, "target_start_line": 14, "target_confidence": 49}, {"target_end_line": 11, "source_start_line": 34, "source_end_line": 40, "source_confidence": 27, "target_start_line": 5, "target_confidence": 49}, {"target_end_line": 59, "source_start_line": 68, "source_end_line": 78, "source_confidence": 27, "target_start_line": 49, "target_confidence": 49}, {"target_end_line": 43, "source_start_line": 58, "source_end_line": 64, "source_confidence": 27, "target_start_line": 39, "target_confidence": 49}, {"target_end_line": 47, "source_start_line": 64, "source_end_line": 65, "source_confidence": 27, "target_start_line": 46, "target_confidence": 49}, {"target_end_line": 26, "source_start_line": 7, "source_end_line": 21, "source_confidence": 27, "target_start_line": 14, "target_confidence": 49}, {"target_end_line": 11, "source_start_line": 34, "source_end_line": 40, "source_confidence": 27, "target_start_line": 5, "target_confidence": 49}, {"target_end_line": 59, "source_start_line": 68, "source_end_line": 78, "source_confidence": 27, "target_start_line": 49, "target_confidence": 49}, {"target_end_line": 43, "source_start_line": 58, "source_end_line": 64, "source_confidence": 27, "target_start_line": 39, "target_confidence": 49}, {"target_end_line": 47, "source_start_line": 64, "source_end_line": 65, "source_confidence": 27, "target_start_line": 46, "target_confidence": 49}, {"target_end_line": 26, "source_start_line": 7, "source_end_line": 21, "source_confidence": 27, "target_start_line": 14, "target_confidence": 49}, {"target_end_line": 11, "source_start_line": 34, "source_end_line": 40, "source_confidence": 27, "target_start_line": 5, "target_confidence": 49}, {"target_end_line": 59, "source_start_line": 68, "source_end_line": 78, "source_confidence": 27, "target_start_line": 49, "target_confidence": 49}, {"target_end_line": 43, "source_start_line": 58, "source_end_line": 64, "source_confidence": 27, "target_start_line": 39, "target_confidence": 49}, {"target_end_line": 47, "source_start_line": 64, "source_end_line": 65, "source_confidence": 27, "target_start_line": 46, "target_confidence": 49}, {"target_end_line": 26, "source_start_line": 7, "source_end_line": 21, "source_confidence": 27, "target_start_line": 14, "target_confidence": 49}, {"target_end_line": 11, "source_start_line": 34, "source_end_line": 40, "source_confidence": 27, "target_start_line": 5, "target_confidence": 49}, {"target_end_line": 59, "source_start_line": 68, "source_end_line": 78, "source_confidence": 27, "target_start_line": 49, "target_confidence": 49}, {"target_end_line": 43, "source_start_line": 58, "source_end_line": 64, "source_confidence": 27, "target_start_line": 39, "target_confidence": 49}, {"target_end_line": 47, "source_start_line": 64, "source_end_line": 65, "source_confidence": 27, "target_start_line": 46, "target_confidence": 49}, {"target_end_line": 26, "source_start_line": 7, "source_end_line": 21, "source_confidence": 27, "target_start_line": 14, "target_confidence": 49}, {"target_end_line": 11, "source_start_line": 34, "source_end_line": 40, "source_confidence": 27, "target_start_line": 5, "target_confidence": 49}, {"target_end_line": 59, "source_start_line": 68, "source_end_line": 78, "source_confidence": 27, "target_start_line": 49, "target_confidence": 49}, {"target_end_line": 43, "source_start_line": 58, "source_end_line": 64, "source_confidence": 27, "target_start_line": 39, "target_confidence": 49}, {"target_end_line": 47, "source_start_line": 64, "source_end_line": 65, "source_confidence": 27, "target_start_line": 46, "target_confidence": 49}]}, {"source": "cjburgoyne_521c3d6216eb4be18304", "value": 76, "target": "pberden_06fb68c99092ecddb9a7", "links": [{"target_end_line": 50, "source_start_line": 29, "source_end_line": 53, "source_confidence": 64, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 95, "source_start_line": 74, "source_end_line": 94, "source_confidence": 64, "target_start_line": 76, "target_confidence": 75}, {"target_end_line": 18, "source_start_line": 6, "source_end_line": 19, "source_confidence": 64, "target_start_line": 9, "target_confidence": 75}, {"target_end_line": 60, "source_start_line": 54, "source_end_line": 62, "source_confidence": 64, "target_start_line": 52, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 27, "source_confidence": 64, "target_start_line": 19, "target_confidence": 75}, {"target_end_line": 50, "source_start_line": 29, "source_end_line": 53, "source_confidence": 64, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 95, "source_start_line": 74, "source_end_line": 94, "source_confidence": 64, "target_start_line": 76, "target_confidence": 75}, {"target_end_line": 18, "source_start_line": 6, "source_end_line": 19, "source_confidence": 64, "target_start_line": 9, "target_confidence": 75}, {"target_end_line": 60, "source_start_line": 54, "source_end_line": 62, "source_confidence": 64, "target_start_line": 52, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 27, "source_confidence": 64, "target_start_line": 19, "target_confidence": 75}, {"target_end_line": 50, "source_start_line": 29, "source_end_line": 53, "source_confidence": 64, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 95, "source_start_line": 74, "source_end_line": 94, "source_confidence": 64, "target_start_line": 76, "target_confidence": 75}, {"target_end_line": 18, "source_start_line": 6, "source_end_line": 19, "source_confidence": 64, "target_start_line": 9, "target_confidence": 75}, {"target_end_line": 60, "source_start_line": 54, "source_end_line": 62, "source_confidence": 64, "target_start_line": 52, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 27, "source_confidence": 64, "target_start_line": 19, "target_confidence": 75}, {"target_end_line": 50, "source_start_line": 29, "source_end_line": 53, "source_confidence": 64, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 95, "source_start_line": 74, "source_end_line": 94, "source_confidence": 64, "target_start_line": 76, "target_confidence": 75}, {"target_end_line": 18, "source_start_line": 6, "source_end_line": 19, "source_confidence": 64, "target_start_line": 9, "target_confidence": 75}, {"target_end_line": 60, "source_start_line": 54, "source_end_line": 62, "source_confidence": 64, "target_start_line": 52, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 27, "source_confidence": 64, "target_start_line": 19, "target_confidence": 75}, {"target_end_line": 50, "source_start_line": 29, "source_end_line": 53, "source_confidence": 64, "target_start_line": 26, "target_confidence": 75}, {"target_end_line": 95, "source_start_line": 74, "source_end_line": 94, "source_confidence": 64, "target_start_line": 76, "target_confidence": 75}, {"target_end_line": 18, "source_start_line": 6, "source_end_line": 19, "source_confidence": 64, "target_start_line": 9, "target_confidence": 75}, {"target_end_line": 60, "source_start_line": 54, "source_end_line": 62, "source_confidence": 64, "target_start_line": 52, "target_confidence": 75}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 27, "source_confidence": 64, "target_start_line": 19, "target_confidence": 75}]}, {"source": "skokenes_fd6b142c0f38e71424ab", "value": 38, "target": "bdilday_7d0d64c41fc5b9ddcf71", "links": [{"target_end_line": 67, "source_start_line": 23, "source_end_line": 27, "source_confidence": 20, "target_start_line": 63, "target_confidence": 9}, {"target_end_line": 19, "source_start_line": 3, "source_end_line": 7, "source_confidence": 20, "target_start_line": 10, "target_confidence": 9}, {"target_end_line": 342, "source_start_line": 131, "source_end_line": 137, "source_confidence": 20, "target_start_line": 333, "target_confidence": 9}, {"target_end_line": 56, "source_start_line": 15, "source_end_line": 21, "source_confidence": 20, "target_start_line": 50, "target_confidence": 9}, {"target_end_line": 210, "source_start_line": 92, "source_end_line": 97, "source_confidence": 20, "target_start_line": 205, "target_confidence": 9}, {"target_end_line": 67, "source_start_line": 23, "source_end_line": 27, "source_confidence": 20, "target_start_line": 63, "target_confidence": 9}, {"target_end_line": 19, "source_start_line": 3, "source_end_line": 7, "source_confidence": 20, "target_start_line": 10, "target_confidence": 9}, {"target_end_line": 342, "source_start_line": 131, "source_end_line": 137, "source_confidence": 20, "target_start_line": 333, "target_confidence": 9}, {"target_end_line": 56, "source_start_line": 15, "source_end_line": 21, "source_confidence": 20, "target_start_line": 50, "target_confidence": 9}, {"target_end_line": 210, "source_start_line": 92, "source_end_line": 97, "source_confidence": 20, "target_start_line": 205, "target_confidence": 9}, {"target_end_line": 67, "source_start_line": 23, "source_end_line": 27, "source_confidence": 20, "target_start_line": 63, "target_confidence": 9}, {"target_end_line": 19, "source_start_line": 3, "source_end_line": 7, "source_confidence": 20, "target_start_line": 10, "target_confidence": 9}, {"target_end_line": 342, "source_start_line": 131, "source_end_line": 137, "source_confidence": 20, "target_start_line": 333, "target_confidence": 9}, {"target_end_line": 56, "source_start_line": 15, "source_end_line": 21, "source_confidence": 20, "target_start_line": 50, "target_confidence": 9}, {"target_end_line": 210, "source_start_line": 92, "source_end_line": 97, "source_confidence": 20, "target_start_line": 205, "target_confidence": 9}, {"target_end_line": 67, "source_start_line": 23, "source_end_line": 27, "source_confidence": 20, "target_start_line": 63, "target_confidence": 9}, {"target_end_line": 19, "source_start_line": 3, "source_end_line": 7, "source_confidence": 20, "target_start_line": 10, "target_confidence": 9}, {"target_end_line": 342, "source_start_line": 131, "source_end_line": 137, "source_confidence": 20, "target_start_line": 333, "target_confidence": 9}, {"target_end_line": 56, "source_start_line": 15, "source_end_line": 21, "source_confidence": 20, "target_start_line": 50, "target_confidence": 9}, {"target_end_line": 210, "source_start_line": 92, "source_end_line": 97, "source_confidence": 20, "target_start_line": 205, "target_confidence": 9}, {"target_end_line": 67, "source_start_line": 23, "source_end_line": 27, "source_confidence": 20, "target_start_line": 63, "target_confidence": 9}, {"target_end_line": 19, "source_start_line": 3, "source_end_line": 7, "source_confidence": 20, "target_start_line": 10, "target_confidence": 9}, {"target_end_line": 342, "source_start_line": 131, "source_end_line": 137, "source_confidence": 20, "target_start_line": 333, "target_confidence": 9}, {"target_end_line": 56, "source_start_line": 15, "source_end_line": 21, "source_confidence": 20, "target_start_line": 50, "target_confidence": 9}, {"target_end_line": 210, "source_start_line": 92, "source_end_line": 97, "source_confidence": 20, "target_start_line": 205, "target_confidence": 9}]}, {"source": "Nastasi7_8e4b032ce21ee9291ee8", "value": 89, "target": "voltdatalab_227af1477ad2a7e2a55e", "links": [{"target_end_line": 60, "source_start_line": 67, "source_end_line": 101, "source_confidence": 53, "target_start_line": 26, "target_confidence": 68}, {"target_end_line": 97, "source_start_line": 120, "source_end_line": 157, "source_confidence": 53, "target_start_line": 60, "target_confidence": 68}, {"target_end_line": 15, "source_start_line": 50, "source_end_line": 57, "source_confidence": 53, "target_start_line": 8, "target_confidence": 68}, {"target_end_line": 23, "source_start_line": 58, "source_end_line": 65, "source_confidence": 53, "target_start_line": 17, "target_confidence": 68}, {"target_end_line": 60, "source_start_line": 67, "source_end_line": 101, "source_confidence": 53, "target_start_line": 26, "target_confidence": 68}, {"target_end_line": 97, "source_start_line": 120, "source_end_line": 157, "source_confidence": 53, "target_start_line": 60, "target_confidence": 68}, {"target_end_line": 15, "source_start_line": 50, "source_end_line": 57, "source_confidence": 53, "target_start_line": 8, "target_confidence": 68}, {"target_end_line": 23, "source_start_line": 58, "source_end_line": 65, "source_confidence": 53, "target_start_line": 17, "target_confidence": 68}, {"target_end_line": 60, "source_start_line": 67, "source_end_line": 101, "source_confidence": 53, "target_start_line": 26, "target_confidence": 68}, {"target_end_line": 97, "source_start_line": 120, "source_end_line": 157, "source_confidence": 53, "target_start_line": 60, "target_confidence": 68}, {"target_end_line": 15, "source_start_line": 50, "source_end_line": 57, "source_confidence": 53, "target_start_line": 8, "target_confidence": 68}, {"target_end_line": 23, "source_start_line": 58, "source_end_line": 65, "source_confidence": 53, "target_start_line": 17, "target_confidence": 68}, {"target_end_line": 60, "source_start_line": 67, "source_end_line": 101, "source_confidence": 53, "target_start_line": 26, "target_confidence": 68}, {"target_end_line": 97, "source_start_line": 120, "source_end_line": 157, "source_confidence": 53, "target_start_line": 60, "target_confidence": 68}, {"target_end_line": 15, "source_start_line": 50, "source_end_line": 57, "source_confidence": 53, "target_start_line": 8, "target_confidence": 68}, {"target_end_line": 23, "source_start_line": 58, "source_end_line": 65, "source_confidence": 53, "target_start_line": 17, "target_confidence": 68}]}, {"source": "mbostock_ec585e034819c06f5c99", "value": 37, "target": "ssongalice_2b57db11b3584e7fa826", "links": [{"target_end_line": 13, "source_start_line": 22, "source_end_line": 28, "source_confidence": 54, "target_start_line": 7, "target_confidence": 56}, {"target_end_line": 53, "source_start_line": 59, "source_end_line": 66, "source_confidence": 54, "target_start_line": 46, "target_confidence": 56}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 6, "source_confidence": 54, "target_start_line": 3, "target_confidence": 56}, {"target_end_line": 34, "source_start_line": 11, "source_end_line": 20, "source_confidence": 54, "target_start_line": 25, "target_confidence": 56}, {"target_end_line": 44, "source_start_line": 44, "source_end_line": 51, "source_confidence": 54, "target_start_line": 37, "target_confidence": 56}, {"target_end_line": 13, "source_start_line": 22, "source_end_line": 28, "source_confidence": 54, "target_start_line": 7, "target_confidence": 56}, {"target_end_line": 53, "source_start_line": 59, "source_end_line": 66, "source_confidence": 54, "target_start_line": 46, "target_confidence": 56}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 6, "source_confidence": 54, "target_start_line": 3, "target_confidence": 56}, {"target_end_line": 34, "source_start_line": 11, "source_end_line": 20, "source_confidence": 54, "target_start_line": 25, "target_confidence": 56}, {"target_end_line": 44, "source_start_line": 44, "source_end_line": 51, "source_confidence": 54, "target_start_line": 37, "target_confidence": 56}, {"target_end_line": 13, "source_start_line": 22, "source_end_line": 28, "source_confidence": 54, "target_start_line": 7, "target_confidence": 56}, {"target_end_line": 53, "source_start_line": 59, "source_end_line": 66, "source_confidence": 54, "target_start_line": 46, "target_confidence": 56}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 6, "source_confidence": 54, "target_start_line": 3, "target_confidence": 56}, {"target_end_line": 34, "source_start_line": 11, "source_end_line": 20, "source_confidence": 54, "target_start_line": 25, "target_confidence": 56}, {"target_end_line": 44, "source_start_line": 44, "source_end_line": 51, "source_confidence": 54, "target_start_line": 37, "target_confidence": 56}, {"target_end_line": 13, "source_start_line": 22, "source_end_line": 28, "source_confidence": 54, "target_start_line": 7, "target_confidence": 56}, {"target_end_line": 53, "source_start_line": 59, "source_end_line": 66, "source_confidence": 54, "target_start_line": 46, "target_confidence": 56}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 6, "source_confidence": 54, "target_start_line": 3, "target_confidence": 56}, {"target_end_line": 34, "source_start_line": 11, "source_end_line": 20, "source_confidence": 54, "target_start_line": 25, "target_confidence": 56}, {"target_end_line": 44, "source_start_line": 44, "source_end_line": 51, "source_confidence": 54, "target_start_line": 37, "target_confidence": 56}, {"target_end_line": 13, "source_start_line": 22, "source_end_line": 28, "source_confidence": 54, "target_start_line": 7, "target_confidence": 56}, {"target_end_line": 53, "source_start_line": 59, "source_end_line": 66, "source_confidence": 54, "target_start_line": 46, "target_confidence": 56}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 6, "source_confidence": 54, "target_start_line": 3, "target_confidence": 56}, {"target_end_line": 34, "source_start_line": 11, "source_end_line": 20, "source_confidence": 54, "target_start_line": 25, "target_confidence": 56}, {"target_end_line": 44, "source_start_line": 44, "source_end_line": 51, "source_confidence": 54, "target_start_line": 37, "target_confidence": 56}]}, {"source": "enjalot_2b1446f496c3968f6ecd", "value": 160, "target": "Nastasi7_8e4b032ce21ee9291ee8", "links": [{"target_end_line": 160, "source_start_line": 1, "source_end_line": 160, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "Jverma_4d8d73ad5f2bb39bab53", "value": 101, "target": "georules_3a19a7e5bdd27ca57a08", "links": [{"target_end_line": 98, "source_start_line": 111, "source_end_line": 130, "source_confidence": 58, "target_start_line": 79, "target_confidence": 65}, {"target_end_line": 132, "source_start_line": 140, "source_end_line": 161, "source_confidence": 58, "target_start_line": 111, "target_confidence": 65}, {"target_end_line": 59, "source_start_line": 66, "source_end_line": 77, "source_confidence": 58, "target_start_line": 48, "target_confidence": 65}, {"target_end_line": 70, "source_start_line": 77, "source_end_line": 89, "source_confidence": 58, "target_start_line": 59, "target_confidence": 65}, {"target_end_line": 105, "source_start_line": 131, "source_end_line": 137, "source_confidence": 58, "target_start_line": 99, "target_confidence": 65}, {"target_end_line": 15, "source_start_line": 12, "source_end_line": 21, "source_confidence": 58, "target_start_line": 6, "target_confidence": 65}, {"target_end_line": 78, "source_start_line": 101, "source_end_line": 110, "source_confidence": 58, "target_start_line": 70, "target_confidence": 65}, {"target_end_line": 139, "source_start_line": 162, "source_end_line": 168, "source_confidence": 58, "target_start_line": 133, "target_confidence": 65}, {"target_end_line": 98, "source_start_line": 111, "source_end_line": 130, "source_confidence": 58, "target_start_line": 79, "target_confidence": 65}, {"target_end_line": 132, "source_start_line": 140, "source_end_line": 161, "source_confidence": 58, "target_start_line": 111, "target_confidence": 65}, {"target_end_line": 59, "source_start_line": 66, "source_end_line": 77, "source_confidence": 58, "target_start_line": 48, "target_confidence": 65}, {"target_end_line": 70, "source_start_line": 77, "source_end_line": 89, "source_confidence": 58, "target_start_line": 59, "target_confidence": 65}, {"target_end_line": 105, "source_start_line": 131, "source_end_line": 137, "source_confidence": 58, "target_start_line": 99, "target_confidence": 65}, {"target_end_line": 15, "source_start_line": 12, "source_end_line": 21, "source_confidence": 58, "target_start_line": 6, "target_confidence": 65}, {"target_end_line": 78, "source_start_line": 101, "source_end_line": 110, "source_confidence": 58, "target_start_line": 70, "target_confidence": 65}, {"target_end_line": 139, "source_start_line": 162, "source_end_line": 168, "source_confidence": 58, "target_start_line": 133, "target_confidence": 65}, {"target_end_line": 98, "source_start_line": 111, "source_end_line": 130, "source_confidence": 58, "target_start_line": 79, "target_confidence": 65}, {"target_end_line": 132, "source_start_line": 140, "source_end_line": 161, "source_confidence": 58, "target_start_line": 111, "target_confidence": 65}, {"target_end_line": 59, "source_start_line": 66, "source_end_line": 77, "source_confidence": 58, "target_start_line": 48, "target_confidence": 65}, {"target_end_line": 70, "source_start_line": 77, "source_end_line": 89, "source_confidence": 58, "target_start_line": 59, "target_confidence": 65}, {"target_end_line": 105, "source_start_line": 131, "source_end_line": 137, "source_confidence": 58, "target_start_line": 99, "target_confidence": 65}, {"target_end_line": 15, "source_start_line": 12, "source_end_line": 21, "source_confidence": 58, "target_start_line": 6, "target_confidence": 65}, {"target_end_line": 78, "source_start_line": 101, "source_end_line": 110, "source_confidence": 58, "target_start_line": 70, "target_confidence": 65}, {"target_end_line": 139, "source_start_line": 162, "source_end_line": 168, "source_confidence": 58, "target_start_line": 133, "target_confidence": 65}, {"target_end_line": 98, "source_start_line": 111, "source_end_line": 130, "source_confidence": 58, "target_start_line": 79, "target_confidence": 65}, {"target_end_line": 132, "source_start_line": 140, "source_end_line": 161, "source_confidence": 58, "target_start_line": 111, "target_confidence": 65}, {"target_end_line": 59, "source_start_line": 66, "source_end_line": 77, "source_confidence": 58, "target_start_line": 48, "target_confidence": 65}, {"target_end_line": 70, "source_start_line": 77, "source_end_line": 89, "source_confidence": 58, "target_start_line": 59, "target_confidence": 65}, {"target_end_line": 105, "source_start_line": 131, "source_end_line": 137, "source_confidence": 58, "target_start_line": 99, "target_confidence": 65}, {"target_end_line": 15, "source_start_line": 12, "source_end_line": 21, "source_confidence": 58, "target_start_line": 6, "target_confidence": 65}, {"target_end_line": 78, "source_start_line": 101, "source_end_line": 110, "source_confidence": 58, "target_start_line": 70, "target_confidence": 65}, {"target_end_line": 139, "source_start_line": 162, "source_end_line": 168, "source_confidence": 58, "target_start_line": 133, "target_confidence": 65}, {"target_end_line": 98, "source_start_line": 111, "source_end_line": 130, "source_confidence": 58, "target_start_line": 79, "target_confidence": 65}, {"target_end_line": 132, "source_start_line": 140, "source_end_line": 161, "source_confidence": 58, "target_start_line": 111, "target_confidence": 65}, {"target_end_line": 59, "source_start_line": 66, "source_end_line": 77, "source_confidence": 58, "target_start_line": 48, "target_confidence": 65}, {"target_end_line": 70, "source_start_line": 77, "source_end_line": 89, "source_confidence": 58, "target_start_line": 59, "target_confidence": 65}, {"target_end_line": 105, "source_start_line": 131, "source_end_line": 137, "source_confidence": 58, "target_start_line": 99, "target_confidence": 65}, {"target_end_line": 15, "source_start_line": 12, "source_end_line": 21, "source_confidence": 58, "target_start_line": 6, "target_confidence": 65}, {"target_end_line": 78, "source_start_line": 101, "source_end_line": 110, "source_confidence": 58, "target_start_line": 70, "target_confidence": 65}, {"target_end_line": 139, "source_start_line": 162, "source_end_line": 168, "source_confidence": 58, "target_start_line": 133, "target_confidence": 65}, {"target_end_line": 98, "source_start_line": 111, "source_end_line": 130, "source_confidence": 58, "target_start_line": 79, "target_confidence": 65}, {"target_end_line": 132, "source_start_line": 140, "source_end_line": 161, "source_confidence": 58, "target_start_line": 111, "target_confidence": 65}, {"target_end_line": 59, "source_start_line": 66, "source_end_line": 77, "source_confidence": 58, "target_start_line": 48, "target_confidence": 65}, {"target_end_line": 70, "source_start_line": 77, "source_end_line": 89, "source_confidence": 58, "target_start_line": 59, "target_confidence": 65}, {"target_end_line": 105, "source_start_line": 131, "source_end_line": 137, "source_confidence": 58, "target_start_line": 99, "target_confidence": 65}, {"target_end_line": 15, "source_start_line": 12, "source_end_line": 21, "source_confidence": 58, "target_start_line": 6, "target_confidence": 65}, {"target_end_line": 78, "source_start_line": 101, "source_end_line": 110, "source_confidence": 58, "target_start_line": 70, "target_confidence": 65}, {"target_end_line": 139, "source_start_line": 162, "source_end_line": 168, "source_confidence": 58, "target_start_line": 133, "target_confidence": 65}, {"target_end_line": 98, "source_start_line": 111, "source_end_line": 130, "source_confidence": 58, "target_start_line": 79, "target_confidence": 65}, {"target_end_line": 132, "source_start_line": 140, "source_end_line": 161, "source_confidence": 58, "target_start_line": 111, "target_confidence": 65}, {"target_end_line": 59, "source_start_line": 66, "source_end_line": 77, "source_confidence": 58, "target_start_line": 48, "target_confidence": 65}, {"target_end_line": 70, "source_start_line": 77, "source_end_line": 89, "source_confidence": 58, "target_start_line": 59, "target_confidence": 65}, {"target_end_line": 105, "source_start_line": 131, "source_end_line": 137, "source_confidence": 58, "target_start_line": 99, "target_confidence": 65}, {"target_end_line": 15, "source_start_line": 12, "source_end_line": 21, "source_confidence": 58, "target_start_line": 6, "target_confidence": 65}, {"target_end_line": 78, "source_start_line": 101, "source_end_line": 110, "source_confidence": 58, "target_start_line": 70, "target_confidence": 65}, {"target_end_line": 139, "source_start_line": 162, "source_end_line": 168, "source_confidence": 58, "target_start_line": 133, "target_confidence": 65}, {"target_end_line": 98, "source_start_line": 111, "source_end_line": 130, "source_confidence": 58, "target_start_line": 79, "target_confidence": 65}, {"target_end_line": 132, "source_start_line": 140, "source_end_line": 161, "source_confidence": 58, "target_start_line": 111, "target_confidence": 65}, {"target_end_line": 59, "source_start_line": 66, "source_end_line": 77, "source_confidence": 58, "target_start_line": 48, "target_confidence": 65}, {"target_end_line": 70, "source_start_line": 77, "source_end_line": 89, "source_confidence": 58, "target_start_line": 59, "target_confidence": 65}, {"target_end_line": 105, "source_start_line": 131, "source_end_line": 137, "source_confidence": 58, "target_start_line": 99, "target_confidence": 65}, {"target_end_line": 15, "source_start_line": 12, "source_end_line": 21, "source_confidence": 58, "target_start_line": 6, "target_confidence": 65}, {"target_end_line": 78, "source_start_line": 101, "source_end_line": 110, "source_confidence": 58, "target_start_line": 70, "target_confidence": 65}, {"target_end_line": 139, "source_start_line": 162, "source_end_line": 168, "source_confidence": 58, "target_start_line": 133, "target_confidence": 65}]}, {"source": "skokenes_fd6b142c0f38e71424ab", "value": 31, "target": "enjalot_2b1446f496c3968f6ecd", "links": [{"target_end_line": 77, "source_start_line": 21, "source_end_line": 27, "source_confidence": 20, "target_start_line": 71, "target_confidence": 18}, {"target_end_line": 57, "source_start_line": 3, "source_end_line": 8, "source_confidence": 20, "target_start_line": 52, "target_confidence": 18}, {"target_end_line": 113, "source_start_line": 131, "source_end_line": 140, "source_confidence": 20, "target_start_line": 104, "target_confidence": 18}, {"target_end_line": 122, "source_start_line": 142, "source_end_line": 149, "source_confidence": 20, "target_start_line": 115, "target_confidence": 18}, {"target_end_line": 77, "source_start_line": 21, "source_end_line": 27, "source_confidence": 20, "target_start_line": 71, "target_confidence": 18}, {"target_end_line": 57, "source_start_line": 3, "source_end_line": 8, "source_confidence": 20, "target_start_line": 52, "target_confidence": 18}, {"target_end_line": 113, "source_start_line": 131, "source_end_line": 140, "source_confidence": 20, "target_start_line": 104, "target_confidence": 18}, {"target_end_line": 122, "source_start_line": 142, "source_end_line": 149, "source_confidence": 20, "target_start_line": 115, "target_confidence": 18}, {"target_end_line": 77, "source_start_line": 21, "source_end_line": 27, "source_confidence": 20, "target_start_line": 71, "target_confidence": 18}, {"target_end_line": 57, "source_start_line": 3, "source_end_line": 8, "source_confidence": 20, "target_start_line": 52, "target_confidence": 18}, {"target_end_line": 113, "source_start_line": 131, "source_end_line": 140, "source_confidence": 20, "target_start_line": 104, "target_confidence": 18}, {"target_end_line": 122, "source_start_line": 142, "source_end_line": 149, "source_confidence": 20, "target_start_line": 115, "target_confidence": 18}, {"target_end_line": 77, "source_start_line": 21, "source_end_line": 27, "source_confidence": 20, "target_start_line": 71, "target_confidence": 18}, {"target_end_line": 57, "source_start_line": 3, "source_end_line": 8, "source_confidence": 20, "target_start_line": 52, "target_confidence": 18}, {"target_end_line": 113, "source_start_line": 131, "source_end_line": 140, "source_confidence": 20, "target_start_line": 104, "target_confidence": 18}, {"target_end_line": 122, "source_start_line": 142, "source_end_line": 149, "source_confidence": 20, "target_start_line": 115, "target_confidence": 18}]}, {"source": "Jverma_4d8d73ad5f2bb39bab53", "value": 49, "target": "georules_a1c7527eb158b57af662", "links": [{"target_end_line": 20, "source_start_line": 14, "source_end_line": 24, "source_confidence": 34, "target_start_line": 10, "target_confidence": 75}, {"target_end_line": 58, "source_start_line": 57, "source_end_line": 73, "source_confidence": 34, "target_start_line": 42, "target_confidence": 75}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 10, "source_confidence": 34, "target_start_line": 1, "target_confidence": 75}, {"target_end_line": 75, "source_start_line": 84, "source_end_line": 89, "source_confidence": 34, "target_start_line": 68, "target_confidence": 75}, {"target_end_line": 62, "source_start_line": 73, "source_end_line": 76, "source_confidence": 34, "target_start_line": 58, "target_confidence": 75}, {"target_end_line": 20, "source_start_line": 14, "source_end_line": 24, "source_confidence": 34, "target_start_line": 10, "target_confidence": 75}, {"target_end_line": 58, "source_start_line": 57, "source_end_line": 73, "source_confidence": 34, "target_start_line": 42, "target_confidence": 75}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 10, "source_confidence": 34, "target_start_line": 1, "target_confidence": 75}, {"target_end_line": 75, "source_start_line": 84, "source_end_line": 89, "source_confidence": 34, "target_start_line": 68, "target_confidence": 75}, {"target_end_line": 62, "source_start_line": 73, "source_end_line": 76, "source_confidence": 34, "target_start_line": 58, "target_confidence": 75}, {"target_end_line": 20, "source_start_line": 14, "source_end_line": 24, "source_confidence": 34, "target_start_line": 10, "target_confidence": 75}, {"target_end_line": 58, "source_start_line": 57, "source_end_line": 73, "source_confidence": 34, "target_start_line": 42, "target_confidence": 75}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 10, "source_confidence": 34, "target_start_line": 1, "target_confidence": 75}, {"target_end_line": 75, "source_start_line": 84, "source_end_line": 89, "source_confidence": 34, "target_start_line": 68, "target_confidence": 75}, {"target_end_line": 62, "source_start_line": 73, "source_end_line": 76, "source_confidence": 34, "target_start_line": 58, "target_confidence": 75}, {"target_end_line": 20, "source_start_line": 14, "source_end_line": 24, "source_confidence": 34, "target_start_line": 10, "target_confidence": 75}, {"target_end_line": 58, "source_start_line": 57, "source_end_line": 73, "source_confidence": 34, "target_start_line": 42, "target_confidence": 75}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 10, "source_confidence": 34, "target_start_line": 1, "target_confidence": 75}, {"target_end_line": 75, "source_start_line": 84, "source_end_line": 89, "source_confidence": 34, "target_start_line": 68, "target_confidence": 75}, {"target_end_line": 62, "source_start_line": 73, "source_end_line": 76, "source_confidence": 34, "target_start_line": 58, "target_confidence": 75}, {"target_end_line": 20, "source_start_line": 14, "source_end_line": 24, "source_confidence": 34, "target_start_line": 10, "target_confidence": 75}, {"target_end_line": 58, "source_start_line": 57, "source_end_line": 73, "source_confidence": 34, "target_start_line": 42, "target_confidence": 75}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 10, "source_confidence": 34, "target_start_line": 1, "target_confidence": 75}, {"target_end_line": 75, "source_start_line": 84, "source_end_line": 89, "source_confidence": 34, "target_start_line": 68, "target_confidence": 75}, {"target_end_line": 62, "source_start_line": 73, "source_end_line": 76, "source_confidence": 34, "target_start_line": 58, "target_confidence": 75}]}, {"source": "renecnielsen_8af83e3999c84b4eb61e", "value": 26, "target": "roundrobin_5e8287bd3fecf0cf7b8c", "links": [{"target_end_line": 19, "source_start_line": 15, "source_end_line": 21, "source_confidence": 30, "target_start_line": 13, "target_confidence": 27}, {"target_end_line": 54, "source_start_line": 37, "source_end_line": 43, "source_confidence": 30, "target_start_line": 48, "target_confidence": 27}, {"target_end_line": 68, "source_start_line": 62, "source_end_line": 66, "source_confidence": 30, "target_start_line": 63, "target_confidence": 27}, {"target_end_line": 95, "source_start_line": 77, "source_end_line": 82, "source_confidence": 30, "target_start_line": 90, "target_confidence": 27}, {"target_end_line": 19, "source_start_line": 15, "source_end_line": 21, "source_confidence": 30, "target_start_line": 13, "target_confidence": 27}, {"target_end_line": 54, "source_start_line": 37, "source_end_line": 43, "source_confidence": 30, "target_start_line": 48, "target_confidence": 27}, {"target_end_line": 68, "source_start_line": 62, "source_end_line": 66, "source_confidence": 30, "target_start_line": 63, "target_confidence": 27}, {"target_end_line": 95, "source_start_line": 77, "source_end_line": 82, "source_confidence": 30, "target_start_line": 90, "target_confidence": 27}, {"target_end_line": 19, "source_start_line": 15, "source_end_line": 21, "source_confidence": 30, "target_start_line": 13, "target_confidence": 27}, {"target_end_line": 54, "source_start_line": 37, "source_end_line": 43, "source_confidence": 30, "target_start_line": 48, "target_confidence": 27}, {"target_end_line": 68, "source_start_line": 62, "source_end_line": 66, "source_confidence": 30, "target_start_line": 63, "target_confidence": 27}, {"target_end_line": 95, "source_start_line": 77, "source_end_line": 82, "source_confidence": 30, "target_start_line": 90, "target_confidence": 27}, {"target_end_line": 19, "source_start_line": 15, "source_end_line": 21, "source_confidence": 30, "target_start_line": 13, "target_confidence": 27}, {"target_end_line": 54, "source_start_line": 37, "source_end_line": 43, "source_confidence": 30, "target_start_line": 48, "target_confidence": 27}, {"target_end_line": 68, "source_start_line": 62, "source_end_line": 66, "source_confidence": 30, "target_start_line": 63, "target_confidence": 27}, {"target_end_line": 95, "source_start_line": 77, "source_end_line": 82, "source_confidence": 30, "target_start_line": 90, "target_confidence": 27}]}, {"source": "mbostock_280d83080497c8c13152", "value": 23, "target": "rflow_bb7ad38820bfa0076c73", "links": [{"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 72, "target_start_line": 1, "target_confidence": 70}, {"target_end_line": 54, "source_start_line": 29, "source_end_line": 38, "source_confidence": 72, "target_start_line": 43, "target_confidence": 70}, {"target_end_line": 31, "source_start_line": 20, "source_end_line": 23, "source_confidence": 72, "target_start_line": 28, "target_confidence": 70}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 72, "target_start_line": 1, "target_confidence": 70}, {"target_end_line": 54, "source_start_line": 29, "source_end_line": 38, "source_confidence": 72, "target_start_line": 43, "target_confidence": 70}, {"target_end_line": 31, "source_start_line": 20, "source_end_line": 23, "source_confidence": 72, "target_start_line": 28, "target_confidence": 70}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 72, "target_start_line": 1, "target_confidence": 70}, {"target_end_line": 54, "source_start_line": 29, "source_end_line": 38, "source_confidence": 72, "target_start_line": 43, "target_confidence": 70}, {"target_end_line": 31, "source_start_line": 20, "source_end_line": 23, "source_confidence": 72, "target_start_line": 28, "target_confidence": 70}]}, {"source": "syntagmatic_4446b31c6cd746eedaeb", "value": 147, "target": "renecnielsen_254addab2deb0e096ccf", "links": [{"target_end_line": 352, "source_start_line": 171, "source_end_line": 227, "source_confidence": 74, "target_start_line": 296, "target_confidence": 52}, {"target_end_line": 258, "source_start_line": 108, "source_end_line": 138, "source_confidence": 74, "target_start_line": 228, "target_confidence": 52}, {"target_end_line": 288, "source_start_line": 140, "source_end_line": 165, "source_confidence": 74, "target_start_line": 263, "target_confidence": 52}, {"target_end_line": 20, "source_start_line": 1, "source_end_line": 20, "source_confidence": 74, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 33, "source_end_line": 45, "source_confidence": 74, "target_start_line": 73, "target_confidence": 52}, {"target_end_line": 352, "source_start_line": 171, "source_end_line": 227, "source_confidence": 74, "target_start_line": 296, "target_confidence": 52}, {"target_end_line": 258, "source_start_line": 108, "source_end_line": 138, "source_confidence": 74, "target_start_line": 228, "target_confidence": 52}, {"target_end_line": 288, "source_start_line": 140, "source_end_line": 165, "source_confidence": 74, "target_start_line": 263, "target_confidence": 52}, {"target_end_line": 20, "source_start_line": 1, "source_end_line": 20, "source_confidence": 74, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 33, "source_end_line": 45, "source_confidence": 74, "target_start_line": 73, "target_confidence": 52}, {"target_end_line": 352, "source_start_line": 171, "source_end_line": 227, "source_confidence": 74, "target_start_line": 296, "target_confidence": 52}, {"target_end_line": 258, "source_start_line": 108, "source_end_line": 138, "source_confidence": 74, "target_start_line": 228, "target_confidence": 52}, {"target_end_line": 288, "source_start_line": 140, "source_end_line": 165, "source_confidence": 74, "target_start_line": 263, "target_confidence": 52}, {"target_end_line": 20, "source_start_line": 1, "source_end_line": 20, "source_confidence": 74, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 33, "source_end_line": 45, "source_confidence": 74, "target_start_line": 73, "target_confidence": 52}, {"target_end_line": 352, "source_start_line": 171, "source_end_line": 227, "source_confidence": 74, "target_start_line": 296, "target_confidence": 52}, {"target_end_line": 258, "source_start_line": 108, "source_end_line": 138, "source_confidence": 74, "target_start_line": 228, "target_confidence": 52}, {"target_end_line": 288, "source_start_line": 140, "source_end_line": 165, "source_confidence": 74, "target_start_line": 263, "target_confidence": 52}, {"target_end_line": 20, "source_start_line": 1, "source_end_line": 20, "source_confidence": 74, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 33, "source_end_line": 45, "source_confidence": 74, "target_start_line": 73, "target_confidence": 52}, {"target_end_line": 352, "source_start_line": 171, "source_end_line": 227, "source_confidence": 74, "target_start_line": 296, "target_confidence": 52}, {"target_end_line": 258, "source_start_line": 108, "source_end_line": 138, "source_confidence": 74, "target_start_line": 228, "target_confidence": 52}, {"target_end_line": 288, "source_start_line": 140, "source_end_line": 165, "source_confidence": 74, "target_start_line": 263, "target_confidence": 52}, {"target_end_line": 20, "source_start_line": 1, "source_end_line": 20, "source_confidence": 74, "target_start_line": 1, "target_confidence": 52}, {"target_end_line": 85, "source_start_line": 33, "source_end_line": 45, "source_confidence": 74, "target_start_line": 73, "target_confidence": 52}]}, {"source": "tophtucker_93ff5a3f6f82d6fd7719", "value": 30, "target": "skokenes_fd6b142c0f38e71424ab", "links": [{"target_end_line": 95, "source_start_line": 49, "source_end_line": 60, "source_confidence": 55, "target_start_line": 84, "target_confidence": 23}, {"target_end_line": 27, "source_start_line": 40, "source_end_line": 44, "source_confidence": 55, "target_start_line": 23, "target_confidence": 23}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 55, "target_start_line": 1, "target_confidence": 23}, {"target_end_line": 13, "source_start_line": 24, "source_end_line": 29, "source_confidence": 55, "target_start_line": 8, "target_confidence": 23}, {"target_end_line": 95, "source_start_line": 49, "source_end_line": 60, "source_confidence": 55, "target_start_line": 84, "target_confidence": 23}, {"target_end_line": 27, "source_start_line": 40, "source_end_line": 44, "source_confidence": 55, "target_start_line": 23, "target_confidence": 23}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 55, "target_start_line": 1, "target_confidence": 23}, {"target_end_line": 13, "source_start_line": 24, "source_end_line": 29, "source_confidence": 55, "target_start_line": 8, "target_confidence": 23}, {"target_end_line": 95, "source_start_line": 49, "source_end_line": 60, "source_confidence": 55, "target_start_line": 84, "target_confidence": 23}, {"target_end_line": 27, "source_start_line": 40, "source_end_line": 44, "source_confidence": 55, "target_start_line": 23, "target_confidence": 23}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 55, "target_start_line": 1, "target_confidence": 23}, {"target_end_line": 13, "source_start_line": 24, "source_end_line": 29, "source_confidence": 55, "target_start_line": 8, "target_confidence": 23}, {"target_end_line": 95, "source_start_line": 49, "source_end_line": 60, "source_confidence": 55, "target_start_line": 84, "target_confidence": 23}, {"target_end_line": 27, "source_start_line": 40, "source_end_line": 44, "source_confidence": 55, "target_start_line": 23, "target_confidence": 23}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 55, "target_start_line": 1, "target_confidence": 23}, {"target_end_line": 13, "source_start_line": 24, "source_end_line": 29, "source_confidence": 55, "target_start_line": 8, "target_confidence": 23}]}, {"source": "sampathweb_2f2e047172a34d146e4f", "value": 59, "target": "enjalot_d524bd18fbff11046c75", "links": [{"target_end_line": 72, "source_start_line": 39, "source_end_line": 67, "source_confidence": 55, "target_start_line": 46, "target_confidence": 52}, {"target_end_line": 94, "source_start_line": 72, "source_end_line": 86, "source_confidence": 55, "target_start_line": 81, "target_confidence": 52}, {"target_end_line": 41, "source_start_line": 29, "source_end_line": 37, "source_confidence": 55, "target_start_line": 30, "target_confidence": 52}, {"target_end_line": 100, "source_start_line": 88, "source_end_line": 93, "source_confidence": 55, "target_start_line": 95, "target_confidence": 52}, {"target_end_line": 72, "source_start_line": 39, "source_end_line": 67, "source_confidence": 55, "target_start_line": 46, "target_confidence": 52}, {"target_end_line": 94, "source_start_line": 72, "source_end_line": 86, "source_confidence": 55, "target_start_line": 81, "target_confidence": 52}, {"target_end_line": 41, "source_start_line": 29, "source_end_line": 37, "source_confidence": 55, "target_start_line": 30, "target_confidence": 52}, {"target_end_line": 100, "source_start_line": 88, "source_end_line": 93, "source_confidence": 55, "target_start_line": 95, "target_confidence": 52}, {"target_end_line": 72, "source_start_line": 39, "source_end_line": 67, "source_confidence": 55, "target_start_line": 46, "target_confidence": 52}, {"target_end_line": 94, "source_start_line": 72, "source_end_line": 86, "source_confidence": 55, "target_start_line": 81, "target_confidence": 52}, {"target_end_line": 41, "source_start_line": 29, "source_end_line": 37, "source_confidence": 55, "target_start_line": 30, "target_confidence": 52}, {"target_end_line": 100, "source_start_line": 88, "source_end_line": 93, "source_confidence": 55, "target_start_line": 95, "target_confidence": 52}, {"target_end_line": 72, "source_start_line": 39, "source_end_line": 67, "source_confidence": 55, "target_start_line": 46, "target_confidence": 52}, {"target_end_line": 94, "source_start_line": 72, "source_end_line": 86, "source_confidence": 55, "target_start_line": 81, "target_confidence": 52}, {"target_end_line": 41, "source_start_line": 29, "source_end_line": 37, "source_confidence": 55, "target_start_line": 30, "target_confidence": 52}, {"target_end_line": 100, "source_start_line": 88, "source_end_line": 93, "source_confidence": 55, "target_start_line": 95, "target_confidence": 52}]}, {"source": "jhubley_c673e664379f964b357c", "value": 40, "target": "curran_6c0ce7a12c7d5497350d", "links": [{"target_end_line": 76, "source_start_line": 54, "source_end_line": 71, "source_confidence": 43, "target_start_line": 59, "target_confidence": 32}, {"target_end_line": 91, "source_start_line": 71, "source_end_line": 83, "source_confidence": 43, "target_start_line": 80, "target_confidence": 32}, {"target_end_line": 79, "source_start_line": 32, "source_end_line": 34, "source_confidence": 43, "target_start_line": 77, "target_confidence": 32}, {"target_end_line": 19, "source_start_line": 38, "source_end_line": 41, "source_confidence": 43, "target_start_line": 16, "target_confidence": 32}, {"target_end_line": 94, "source_start_line": 84, "source_end_line": 85, "source_confidence": 43, "target_start_line": 93, "target_confidence": 32}, {"target_end_line": 76, "source_start_line": 54, "source_end_line": 71, "source_confidence": 43, "target_start_line": 59, "target_confidence": 32}, {"target_end_line": 91, "source_start_line": 71, "source_end_line": 83, "source_confidence": 43, "target_start_line": 80, "target_confidence": 32}, {"target_end_line": 79, "source_start_line": 32, "source_end_line": 34, "source_confidence": 43, "target_start_line": 77, "target_confidence": 32}, {"target_end_line": 19, "source_start_line": 38, "source_end_line": 41, "source_confidence": 43, "target_start_line": 16, "target_confidence": 32}, {"target_end_line": 94, "source_start_line": 84, "source_end_line": 85, "source_confidence": 43, "target_start_line": 93, "target_confidence": 32}, {"target_end_line": 76, "source_start_line": 54, "source_end_line": 71, "source_confidence": 43, "target_start_line": 59, "target_confidence": 32}, {"target_end_line": 91, "source_start_line": 71, "source_end_line": 83, "source_confidence": 43, "target_start_line": 80, "target_confidence": 32}, {"target_end_line": 79, "source_start_line": 32, "source_end_line": 34, "source_confidence": 43, "target_start_line": 77, "target_confidence": 32}, {"target_end_line": 19, "source_start_line": 38, "source_end_line": 41, "source_confidence": 43, "target_start_line": 16, "target_confidence": 32}, {"target_end_line": 94, "source_start_line": 84, "source_end_line": 85, "source_confidence": 43, "target_start_line": 93, "target_confidence": 32}, {"target_end_line": 76, "source_start_line": 54, "source_end_line": 71, "source_confidence": 43, "target_start_line": 59, "target_confidence": 32}, {"target_end_line": 91, "source_start_line": 71, "source_end_line": 83, "source_confidence": 43, "target_start_line": 80, "target_confidence": 32}, {"target_end_line": 79, "source_start_line": 32, "source_end_line": 34, "source_confidence": 43, "target_start_line": 77, "target_confidence": 32}, {"target_end_line": 19, "source_start_line": 38, "source_end_line": 41, "source_confidence": 43, "target_start_line": 16, "target_confidence": 32}, {"target_end_line": 94, "source_start_line": 84, "source_end_line": 85, "source_confidence": 43, "target_start_line": 93, "target_confidence": 32}, {"target_end_line": 76, "source_start_line": 54, "source_end_line": 71, "source_confidence": 43, "target_start_line": 59, "target_confidence": 32}, {"target_end_line": 91, "source_start_line": 71, "source_end_line": 83, "source_confidence": 43, "target_start_line": 80, "target_confidence": 32}, {"target_end_line": 79, "source_start_line": 32, "source_end_line": 34, "source_confidence": 43, "target_start_line": 77, "target_confidence": 32}, {"target_end_line": 19, "source_start_line": 38, "source_end_line": 41, "source_confidence": 43, "target_start_line": 16, "target_confidence": 32}, {"target_end_line": 94, "source_start_line": 84, "source_end_line": 85, "source_confidence": 43, "target_start_line": 93, "target_confidence": 32}]}, {"source": "resolutionfoundation_3e88d3100ecbaed6b9a2", "value": 29, "target": "trinary_b1a5f453c51231cd7bb5", "links": [{"target_end_line": 34, "source_start_line": 32, "source_end_line": 40, "source_confidence": 23, "target_start_line": 26, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 9, "source_end_line": 21, "source_confidence": 23, "target_start_line": 12, "target_confidence": 33}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 23, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 40, "source_confidence": 23, "target_start_line": 26, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 9, "source_end_line": 21, "source_confidence": 23, "target_start_line": 12, "target_confidence": 33}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 23, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 40, "source_confidence": 23, "target_start_line": 26, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 9, "source_end_line": 21, "source_confidence": 23, "target_start_line": 12, "target_confidence": 33}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 23, "target_start_line": 1, "target_confidence": 33}]}, {"source": "mbostock_8ca036b3505121279daf", "value": 40, "target": "syntagmatic_0613ee9324e989a6fb6b", "links": [{"target_end_line": 66, "source_start_line": 32, "source_end_line": 46, "source_confidence": 82, "target_start_line": 53, "target_confidence": 44}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 82, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 47, "source_start_line": 23, "source_end_line": 31, "source_confidence": 82, "target_start_line": 39, "target_confidence": 44}, {"target_end_line": 66, "source_start_line": 32, "source_end_line": 46, "source_confidence": 82, "target_start_line": 53, "target_confidence": 44}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 82, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 47, "source_start_line": 23, "source_end_line": 31, "source_confidence": 82, "target_start_line": 39, "target_confidence": 44}, {"target_end_line": 66, "source_start_line": 32, "source_end_line": 46, "source_confidence": 82, "target_start_line": 53, "target_confidence": 44}, {"target_end_line": 16, "source_start_line": 1, "source_end_line": 16, "source_confidence": 82, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 47, "source_start_line": 23, "source_end_line": 31, "source_confidence": 82, "target_start_line": 39, "target_confidence": 44}]}, {"source": "micahstubbs_b7182dddb4a1b79d1ac7", "value": 83, "target": "cjburgoyne_521c3d6216eb4be18304", "links": [{"target_end_line": 94, "source_start_line": 71, "source_end_line": 97, "source_confidence": 66, "target_start_line": 67, "target_confidence": 68}, {"target_end_line": 46, "source_start_line": 32, "source_end_line": 49, "source_confidence": 66, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 19, "source_start_line": 15, "source_end_line": 24, "source_confidence": 66, "target_start_line": 6, "target_confidence": 68}, {"target_end_line": 53, "source_start_line": 51, "source_end_line": 57, "source_confidence": 66, "target_start_line": 47, "target_confidence": 68}, {"target_end_line": 62, "source_start_line": 59, "source_end_line": 67, "source_confidence": 66, "target_start_line": 54, "target_confidence": 68}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 31, "source_confidence": 66, "target_start_line": 21, "target_confidence": 68}, {"target_end_line": 94, "source_start_line": 71, "source_end_line": 97, "source_confidence": 66, "target_start_line": 67, "target_confidence": 68}, {"target_end_line": 46, "source_start_line": 32, "source_end_line": 49, "source_confidence": 66, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 19, "source_start_line": 15, "source_end_line": 24, "source_confidence": 66, "target_start_line": 6, "target_confidence": 68}, {"target_end_line": 53, "source_start_line": 51, "source_end_line": 57, "source_confidence": 66, "target_start_line": 47, "target_confidence": 68}, {"target_end_line": 62, "source_start_line": 59, "source_end_line": 67, "source_confidence": 66, "target_start_line": 54, "target_confidence": 68}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 31, "source_confidence": 66, "target_start_line": 21, "target_confidence": 68}, {"target_end_line": 94, "source_start_line": 71, "source_end_line": 97, "source_confidence": 66, "target_start_line": 67, "target_confidence": 68}, {"target_end_line": 46, "source_start_line": 32, "source_end_line": 49, "source_confidence": 66, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 19, "source_start_line": 15, "source_end_line": 24, "source_confidence": 66, "target_start_line": 6, "target_confidence": 68}, {"target_end_line": 53, "source_start_line": 51, "source_end_line": 57, "source_confidence": 66, "target_start_line": 47, "target_confidence": 68}, {"target_end_line": 62, "source_start_line": 59, "source_end_line": 67, "source_confidence": 66, "target_start_line": 54, "target_confidence": 68}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 31, "source_confidence": 66, "target_start_line": 21, "target_confidence": 68}, {"target_end_line": 94, "source_start_line": 71, "source_end_line": 97, "source_confidence": 66, "target_start_line": 67, "target_confidence": 68}, {"target_end_line": 46, "source_start_line": 32, "source_end_line": 49, "source_confidence": 66, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 19, "source_start_line": 15, "source_end_line": 24, "source_confidence": 66, "target_start_line": 6, "target_confidence": 68}, {"target_end_line": 53, "source_start_line": 51, "source_end_line": 57, "source_confidence": 66, "target_start_line": 47, "target_confidence": 68}, {"target_end_line": 62, "source_start_line": 59, "source_end_line": 67, "source_confidence": 66, "target_start_line": 54, "target_confidence": 68}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 31, "source_confidence": 66, "target_start_line": 21, "target_confidence": 68}, {"target_end_line": 94, "source_start_line": 71, "source_end_line": 97, "source_confidence": 66, "target_start_line": 67, "target_confidence": 68}, {"target_end_line": 46, "source_start_line": 32, "source_end_line": 49, "source_confidence": 66, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 19, "source_start_line": 15, "source_end_line": 24, "source_confidence": 66, "target_start_line": 6, "target_confidence": 68}, {"target_end_line": 53, "source_start_line": 51, "source_end_line": 57, "source_confidence": 66, "target_start_line": 47, "target_confidence": 68}, {"target_end_line": 62, "source_start_line": 59, "source_end_line": 67, "source_confidence": 66, "target_start_line": 54, "target_confidence": 68}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 31, "source_confidence": 66, "target_start_line": 21, "target_confidence": 68}, {"target_end_line": 94, "source_start_line": 71, "source_end_line": 97, "source_confidence": 66, "target_start_line": 67, "target_confidence": 68}, {"target_end_line": 46, "source_start_line": 32, "source_end_line": 49, "source_confidence": 66, "target_start_line": 29, "target_confidence": 68}, {"target_end_line": 19, "source_start_line": 15, "source_end_line": 24, "source_confidence": 66, "target_start_line": 6, "target_confidence": 68}, {"target_end_line": 53, "source_start_line": 51, "source_end_line": 57, "source_confidence": 66, "target_start_line": 47, "target_confidence": 68}, {"target_end_line": 62, "source_start_line": 59, "source_end_line": 67, "source_confidence": 66, "target_start_line": 54, "target_confidence": 68}, {"target_end_line": 27, "source_start_line": 25, "source_end_line": 31, "source_confidence": 66, "target_start_line": 21, "target_confidence": 68}]}, {"source": "resolutionfoundation_3e88d3100ecbaed6b9a2", "value": 37, "target": "tophtucker_93ff5a3f6f82d6fd7719", "links": [{"target_end_line": 44, "source_start_line": 36, "source_end_line": 40, "source_confidence": 25, "target_start_line": 40, "target_confidence": 54}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 25, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 31, "source_start_line": 9, "source_end_line": 17, "source_confidence": 25, "target_start_line": 23, "target_confidence": 54}, {"target_end_line": 67, "source_start_line": 68, "source_end_line": 78, "source_confidence": 25, "target_start_line": 57, "target_confidence": 54}, {"target_end_line": 54, "source_start_line": 60, "source_end_line": 64, "source_confidence": 25, "target_start_line": 50, "target_confidence": 54}, {"target_end_line": 44, "source_start_line": 36, "source_end_line": 40, "source_confidence": 25, "target_start_line": 40, "target_confidence": 54}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 25, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 31, "source_start_line": 9, "source_end_line": 17, "source_confidence": 25, "target_start_line": 23, "target_confidence": 54}, {"target_end_line": 67, "source_start_line": 68, "source_end_line": 78, "source_confidence": 25, "target_start_line": 57, "target_confidence": 54}, {"target_end_line": 54, "source_start_line": 60, "source_end_line": 64, "source_confidence": 25, "target_start_line": 50, "target_confidence": 54}, {"target_end_line": 44, "source_start_line": 36, "source_end_line": 40, "source_confidence": 25, "target_start_line": 40, "target_confidence": 54}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 25, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 31, "source_start_line": 9, "source_end_line": 17, "source_confidence": 25, "target_start_line": 23, "target_confidence": 54}, {"target_end_line": 67, "source_start_line": 68, "source_end_line": 78, "source_confidence": 25, "target_start_line": 57, "target_confidence": 54}, {"target_end_line": 54, "source_start_line": 60, "source_end_line": 64, "source_confidence": 25, "target_start_line": 50, "target_confidence": 54}, {"target_end_line": 44, "source_start_line": 36, "source_end_line": 40, "source_confidence": 25, "target_start_line": 40, "target_confidence": 54}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 25, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 31, "source_start_line": 9, "source_end_line": 17, "source_confidence": 25, "target_start_line": 23, "target_confidence": 54}, {"target_end_line": 67, "source_start_line": 68, "source_end_line": 78, "source_confidence": 25, "target_start_line": 57, "target_confidence": 54}, {"target_end_line": 54, "source_start_line": 60, "source_end_line": 64, "source_confidence": 25, "target_start_line": 50, "target_confidence": 54}, {"target_end_line": 44, "source_start_line": 36, "source_end_line": 40, "source_confidence": 25, "target_start_line": 40, "target_confidence": 54}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 25, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 31, "source_start_line": 9, "source_end_line": 17, "source_confidence": 25, "target_start_line": 23, "target_confidence": 54}, {"target_end_line": 67, "source_start_line": 68, "source_end_line": 78, "source_confidence": 25, "target_start_line": 57, "target_confidence": 54}, {"target_end_line": 54, "source_start_line": 60, "source_end_line": 64, "source_confidence": 25, "target_start_line": 50, "target_confidence": 54}]}, {"source": "aaizemberg_fb57115b0980ac1455f6", "value": 43, "target": "resolutionfoundation_3e88d3100ecbaed6b9a2", "links": [{"target_end_line": 40, "source_start_line": 24, "source_end_line": 32, "source_confidence": 74, "target_start_line": 32, "target_confidence": 33}, {"target_end_line": 21, "source_start_line": 8, "source_end_line": 22, "source_confidence": 74, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 74, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 59, "source_start_line": 34, "source_end_line": 37, "source_confidence": 74, "target_start_line": 56, "target_confidence": 33}, {"target_end_line": 65, "source_start_line": 40, "source_end_line": 41, "source_confidence": 74, "target_start_line": 64, "target_confidence": 33}, {"target_end_line": 75, "source_start_line": 43, "source_end_line": 50, "source_confidence": 74, "target_start_line": 68, "target_confidence": 33}, {"target_end_line": 40, "source_start_line": 24, "source_end_line": 32, "source_confidence": 74, "target_start_line": 32, "target_confidence": 33}, {"target_end_line": 21, "source_start_line": 8, "source_end_line": 22, "source_confidence": 74, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 74, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 59, "source_start_line": 34, "source_end_line": 37, "source_confidence": 74, "target_start_line": 56, "target_confidence": 33}, {"target_end_line": 65, "source_start_line": 40, "source_end_line": 41, "source_confidence": 74, "target_start_line": 64, "target_confidence": 33}, {"target_end_line": 75, "source_start_line": 43, "source_end_line": 50, "source_confidence": 74, "target_start_line": 68, "target_confidence": 33}, {"target_end_line": 40, "source_start_line": 24, "source_end_line": 32, "source_confidence": 74, "target_start_line": 32, "target_confidence": 33}, {"target_end_line": 21, "source_start_line": 8, "source_end_line": 22, "source_confidence": 74, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 74, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 59, "source_start_line": 34, "source_end_line": 37, "source_confidence": 74, "target_start_line": 56, "target_confidence": 33}, {"target_end_line": 65, "source_start_line": 40, "source_end_line": 41, "source_confidence": 74, "target_start_line": 64, "target_confidence": 33}, {"target_end_line": 75, "source_start_line": 43, "source_end_line": 50, "source_confidence": 74, "target_start_line": 68, "target_confidence": 33}, {"target_end_line": 40, "source_start_line": 24, "source_end_line": 32, "source_confidence": 74, "target_start_line": 32, "target_confidence": 33}, {"target_end_line": 21, "source_start_line": 8, "source_end_line": 22, "source_confidence": 74, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 74, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 59, "source_start_line": 34, "source_end_line": 37, "source_confidence": 74, "target_start_line": 56, "target_confidence": 33}, {"target_end_line": 65, "source_start_line": 40, "source_end_line": 41, "source_confidence": 74, "target_start_line": 64, "target_confidence": 33}, {"target_end_line": 75, "source_start_line": 43, "source_end_line": 50, "source_confidence": 74, "target_start_line": 68, "target_confidence": 33}, {"target_end_line": 40, "source_start_line": 24, "source_end_line": 32, "source_confidence": 74, "target_start_line": 32, "target_confidence": 33}, {"target_end_line": 21, "source_start_line": 8, "source_end_line": 22, "source_confidence": 74, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 74, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 59, "source_start_line": 34, "source_end_line": 37, "source_confidence": 74, "target_start_line": 56, "target_confidence": 33}, {"target_end_line": 65, "source_start_line": 40, "source_end_line": 41, "source_confidence": 74, "target_start_line": 64, "target_confidence": 33}, {"target_end_line": 75, "source_start_line": 43, "source_end_line": 50, "source_confidence": 74, "target_start_line": 68, "target_confidence": 33}, {"target_end_line": 40, "source_start_line": 24, "source_end_line": 32, "source_confidence": 74, "target_start_line": 32, "target_confidence": 33}, {"target_end_line": 21, "source_start_line": 8, "source_end_line": 22, "source_confidence": 74, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 74, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 59, "source_start_line": 34, "source_end_line": 37, "source_confidence": 74, "target_start_line": 56, "target_confidence": 33}, {"target_end_line": 65, "source_start_line": 40, "source_end_line": 41, "source_confidence": 74, "target_start_line": 64, "target_confidence": 33}, {"target_end_line": 75, "source_start_line": 43, "source_end_line": 50, "source_confidence": 74, "target_start_line": 68, "target_confidence": 33}]}, {"source": "mbostock_ec585e034819c06f5c99", "value": 40, "target": "aaizemberg_fb57115b0980ac1455f6", "links": [{"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 50, "target_start_line": 28, "target_confidence": 56}, {"target_end_line": 60, "source_start_line": 44, "source_end_line": 61, "source_confidence": 50, "target_start_line": 43, "target_confidence": 56}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 5, "source_confidence": 50, "target_start_line": 1, "target_confidence": 56}, {"target_end_line": 22, "source_start_line": 10, "source_end_line": 19, "source_confidence": 50, "target_start_line": 13, "target_confidence": 56}, {"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 50, "target_start_line": 28, "target_confidence": 56}, {"target_end_line": 60, "source_start_line": 44, "source_end_line": 61, "source_confidence": 50, "target_start_line": 43, "target_confidence": 56}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 5, "source_confidence": 50, "target_start_line": 1, "target_confidence": 56}, {"target_end_line": 22, "source_start_line": 10, "source_end_line": 19, "source_confidence": 50, "target_start_line": 13, "target_confidence": 56}, {"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 50, "target_start_line": 28, "target_confidence": 56}, {"target_end_line": 60, "source_start_line": 44, "source_end_line": 61, "source_confidence": 50, "target_start_line": 43, "target_confidence": 56}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 5, "source_confidence": 50, "target_start_line": 1, "target_confidence": 56}, {"target_end_line": 22, "source_start_line": 10, "source_end_line": 19, "source_confidence": 50, "target_start_line": 13, "target_confidence": 56}, {"target_end_line": 34, "source_start_line": 22, "source_end_line": 28, "source_confidence": 50, "target_start_line": 28, "target_confidence": 56}, {"target_end_line": 60, "source_start_line": 44, "source_end_line": 61, "source_confidence": 50, "target_start_line": 43, "target_confidence": 56}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 5, "source_confidence": 50, "target_start_line": 1, "target_confidence": 56}, {"target_end_line": 22, "source_start_line": 10, "source_end_line": 19, "source_confidence": 50, "target_start_line": 13, "target_confidence": 56}]}, {"source": "BenHeubl_7faa7393b88bcdb19822", "value": 36, "target": "micahstubbs_b7182dddb4a1b79d1ac7", "links": [{"target_end_line": 92, "source_start_line": 196, "source_end_line": 199, "source_confidence": 16, "target_start_line": 84, "target_confidence": 34}, {"target_end_line": 37, "source_start_line": 139, "source_end_line": 153, "source_confidence": 16, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 19, "source_start_line": 134, "source_end_line": 136, "source_confidence": 16, "target_start_line": 15, "target_confidence": 34}, {"target_end_line": 49, "source_start_line": 158, "source_end_line": 164, "source_confidence": 16, "target_start_line": 43, "target_confidence": 34}, {"target_end_line": 92, "source_start_line": 196, "source_end_line": 199, "source_confidence": 16, "target_start_line": 84, "target_confidence": 34}, {"target_end_line": 37, "source_start_line": 139, "source_end_line": 153, "source_confidence": 16, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 19, "source_start_line": 134, "source_end_line": 136, "source_confidence": 16, "target_start_line": 15, "target_confidence": 34}, {"target_end_line": 49, "source_start_line": 158, "source_end_line": 164, "source_confidence": 16, "target_start_line": 43, "target_confidence": 34}, {"target_end_line": 92, "source_start_line": 196, "source_end_line": 199, "source_confidence": 16, "target_start_line": 84, "target_confidence": 34}, {"target_end_line": 37, "source_start_line": 139, "source_end_line": 153, "source_confidence": 16, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 19, "source_start_line": 134, "source_end_line": 136, "source_confidence": 16, "target_start_line": 15, "target_confidence": 34}, {"target_end_line": 49, "source_start_line": 158, "source_end_line": 164, "source_confidence": 16, "target_start_line": 43, "target_confidence": 34}, {"target_end_line": 92, "source_start_line": 196, "source_end_line": 199, "source_confidence": 16, "target_start_line": 84, "target_confidence": 34}, {"target_end_line": 37, "source_start_line": 139, "source_end_line": 153, "source_confidence": 16, "target_start_line": 23, "target_confidence": 34}, {"target_end_line": 19, "source_start_line": 134, "source_end_line": 136, "source_confidence": 16, "target_start_line": 15, "target_confidence": 34}, {"target_end_line": 49, "source_start_line": 158, "source_end_line": 164, "source_confidence": 16, "target_start_line": 43, "target_confidence": 34}]}]}