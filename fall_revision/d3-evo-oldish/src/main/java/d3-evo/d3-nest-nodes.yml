---
  nodes: 
    - 
      code: "<script>\n\nvar margin = {top: 20, right: 30, bottom: 50, left: 60};\nvar width = 1000 - margin.left - margin.right;\nvar height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .range([0, width])\n    .padding(0.2)\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar yAxis = d3.axisLeft(y)\n  .ticks(10)\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\");\n\nd3.csv(\"pokemon.csv\", function(poke) {  \n  poke = poke.map(function(d) {\n    d.value = +d.value;\n    return d;\n  });\n\n  x.domain(poke.map(function(d) { return d.pokemon; }));\n  y.domain(d3.extent(poke, function(d) { return d.value; }));\n\n/*  var types = d3.nest()\n                .key(function(d) { return d.type; })\n                .entries(poke);\n\n  console.log(\"types: \", types) */\n\n  svg.selectAll(\".bar\") \n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return y(d.value);\n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height - y(d.value); })\n    .attr(\"class\", \"bar\")\n\n  svg.selectAll(\".topofbar\")\n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", function(d) {\n      return \"topofbar \" + d.type;\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return 0; \n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height; })\n    .on(\"mouseover\", function(d) {\n       tooltip.html(\"\");\n       tooltip.append(\"img\").attr(\"src\", d.thumb);\n       tooltip.append(\"pre\");\n       tooltip.select(\"pre\")\n         .text(d.pokemon + \"\\n\" + d.type.split(\"_\").join(\",\") + \"\\n\" + d.value);\n       return tooltip.style(\"visibility\", \"visible\");\n     })\n     .on(\"mousemove\", function() {\n       return tooltip.style(\"top\", (d3.event.pageY-20) + \"px\").style(\"left\", (d3.event.pageX+10) + \"px\");\n     })\n     .on(\"mouseout\", function() {\n       return tooltip.style(\"visibility\", \"hidden\");\n     });\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .call(yAxis);\n});\n</script>"
      description: "Pokemon"
      created_at: "2016-09-26T05:26:15Z"
      updated_at: "2016-09-26T05:38:31Z"
      api: 
        - "d3.scaleBand"
        - "d3.scaleLinear"
        - "d3.axisLeft"
        - "d3.select"
        - "d3.csv"
        - "d3.extent"
        - "d3.nest"
      readme: "Meaningless Pokemon data from pastebin graphed. Supplemented with types and thumbnails from [bulbapedia](http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_National_Pok%C3%A9dex_number).\nHover colors from [iwanthue](http://tools.medialab.sciences-po.fr/iwanthue/) based on the Pokemon's type."
      uid: "dhoboy_1178601925731459c224bd4d69a1791d"
    - 
      code: "<script>\n\n// Setting up your vars for defining the boundaries of this chart + margins\nvar margin = {top: 20, right: 40, bottom: 80, left: 80},\n  width = 800 - margin.left - margin.right,\n  height = 380 - margin.top - margin.bottom;\n\n// X axis scale is defined by the length of the array divided by the width of the chart\n// second parametere (.2) defines distance between\nvar x0 = d3.scale.ordinal()\n  .rangeRoundBands([0, width], .2);\n\nvar x1 = d3.scale.ordinal();\n\n// Y axis scale is defined by a linear scale, max being the height of the chart.\nvar y = d3.scale.linear()\n  .range([height, 0]);\n\nvar color = d3.scale.ordinal()\n  .range([\"#e74c3c\", \"#2ecc71\", \"#f1c40f\", \"#3498db\"]); //<-- Red, Green, Yellow, Blue\n\nvar xAxis = d3.svg.axis()\n  .scale(x0)\n  .tickSize(10,0)\n  .orient(\"bottom\");\n\n// additional features, like its alignment and tickFormat\nvar yAxisLeft = d3.svg.axis()\n  .scale(y)\n  .orient(\"left\")\n  .tickSize(7,0)\n  .tickFormat(d3.format(\".2s\"));\n\n// Another Y Axis for Mr. Simmon\nvar yAxisRight = d3.svg.axis()\n  .scale(y)\n  .orient(\"right\")\n  .tickSize(7,0)\n  .tickFormat(d3.format(\".2s\"));\n\n//  This is defining a var (svg) that will draw our div at this current box\nvar svg = d3.select(\"div\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .attr(\"class\", \"chart\")\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar sortedXvalues = {};\n\n// We load our data\nd3.csv(\"pokemans.csv\", function(error, data) {\n  if (error) throw error;\n  data.sort(function(a,b) {\n    return d3.ascending(a.Type, b.Type); //<-- By default we sort by Type\n  });\n\n// Types out Red, Blue, Green, and Average data from each Object\n  var Stats_names = d3.keys(data[0])\n    .filter(function(key) { return key != \"Pokemon\" && key != \"Type\" && key != \"Generation\" });\n\n  console.log(Stats_names);\n// Adds to our CSV the RGB value where name is equal to name and the value is the color's value\n  data.forEach(function(d) {\n    d.Stats = Stats_names.map(function(name) { return {name: name, value: +d[name]}; });\n  });\n\n  x0.domain(data.map(function(d) { return d.Pokemon; }));\n  x1.domain(Stats_names).rangeRoundBands([0, x0.rangeBand()]);\n  y.domain([0, d3.max(data, function(d) { return d3.max(d.Stats, function(d) { return d.value; }); })]);\n\n  var TypeCount = d3.nest()\n    .key(function(d) { return d.Type; })\n    .rollup(function(v) { return v.length; })\n    .entries(data);\n\n  var pokemon = svg.selectAll(\".pokemon\")\n    .data(data);\n\n  pokemon.enter()\n    .append(\"g\")\n    .attr(\"class\", \"pokemon\")\n    .attr(\"transform\", function(d) { return \"translate(\" + x0(d.Pokemon) + \",0)\"; });\n\n  var columnBars = pokemon.selectAll(\"rect\")\n    .data(function(d) { return d.Stats; });\n\n  var sortSelection = svg.selectAll(\".type\")\n    .data(data);\n\n//Type name either Generation or Type type\n\n  sortSelection.enter().append(\"text\")\n    .attr(\"class\", \"type\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"transform\", function(d) { return \"translate(\" + (x0(d.Pokemon) + margin.right) + \",\" + (height + margin.bottom/1.9) + \")\"; })\n    .text(function(d) {\n        if (!!sortedXvalues[d.Type]) {\n          sortedXvalues[d.Type]++\n        }\n        else {\n          sortedXvalues[d.Type] = 1;\n          return d.Type;\n        }\n    });\n\n//Draws a rectangle\n  columnBars.enter().append(\"rect\")\n    .attr(\"width\", x1.rangeBand())\n    .attr(\"x\", function(d) { return x1(d.name); })\n    .attr(\"y\", function(d) { return y(d.value); })\n    .attr(\"height\", function(d) { return height - y(d.value); })\n    .style(\"fill\", function(d) { return color(d.name); })\n    .on(\"mouseover\", function(d) {\n      d3.select(\"#tooltip\")\n        .style(\"left\", width - 50 + \"px\")\n        .style(\"top\", \"50px\")\n        .select(\"#value\")\n        .text(d.name + ' = ' + d.value);\n      //Show the tooltip\n      d3.select(\"#tooltip\").classed(\"hidden\", false);\n    })\n    .on(\"mouseout\", function() {\n    //Hide the tooltip\n      d3.select(\"#tooltip\").classed(\"hidden\", true);\n    });\n\n  svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis)\n    .append(\"text\")\n    .attr(\"y\", 60)\n    .attr(\"x\", (width/2) -40)\n    .style(\"font-size\", 12)\n    .style(\"text-transform\", \"uppercase\")\n    .style(\"opacity\", .8)\n    .text(\"Pokemans\");\n\n// Labels your y axis and formats it\n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxisLeft)\n    .append(\"text\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \"-5em\")\n    .attr(\"x\", 30-height/2)\n    .style(\"text-anchor\", \"end\")\n    .style(\"font-size\", 12)\n    .style(\"text-transform\", \"uppercase\")\n    .style(\"opacity\", .8)\n    .text(\"Points\");\n\n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", \"translate(\" + width + \" ,0)\")\n    .call(yAxisRight);\n\n  d3.selectAll(\"#sort-by-controls input[name=mode]\")\n    .on(\"change\", function() {\n      var Mode = this.value;\n      d3.csv(\"pokemans.csv\", function(error, data) {\n        if (error) throw error;\n        data.sort(function(a,b) {\n          console.log('sort', a, b);\n          return d3.ascending(a[Mode], b[Mode]);\n        });\n        data.forEach(function(d) {\n          d.Stats = Stats_names.map(function(name) { return {name: name, value: +d[name]}; });\n        });\n        x0.domain(data.map(function(d) { return d.Pokemon; }));\n        pokemon.transition().duration(1000).attr(\"class\", \"pokemon\")\n          .attr(\"transform\", function(d) { return \"translate(\" + x0(d.Pokemon) + \",0)\"; });\n        svg.selectAll(\".x\").filter(\".axis\")\n          .transition().duration(1000)\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(xAxis);\n\n        sortSelection.transition().duration(1000)\n          .attr(\"class\", \"type\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"transform\", function(d) { return \"translate(\" + (x0(d.Pokemon) + margin.right) + \",\" + (height + margin.bottom/1.9) + \")\"; })\n          .text(function(d) {\n              if (!!sortedXvalues[d[Mode]]) {\n                sortedXvalues[d[Mode]]++\n              }\n              else {\n                sortedXvalues[d[Mode]] = 1;\n                return d[Mode];\n              }\n          });\n\n        columnBars.transition().duration(1000)\n          .attr(\"width\", x1.rangeBand())\n          .attr(\"x\", function(d) { return x1(d.name); })\n          .attr(\"y\", function(d) { return y(d.value); })\n          .attr(\"height\", function(d) { return height - y(d.value); })\n          .style(\"fill\", function(d) { return color(d.name); });\n        });\n    });\n});\n</script>"
      description: "Sortable Grouped Bar Chart (w/ Pokemans)"
      created_at: "2016-09-16T20:47:50Z"
      updated_at: "2016-09-16T20:53:31Z"
      api: 
        - "d3.scale.ordinal"
        - "d3.scale.linear"
        - "d3.svg.axis"
        - "d3.format"
        - "d3.select"
        - "d3.csv"
        - "d3.ascending"
        - "d3.keys"
        - "d3.max"
        - "d3.nest"
        - "d3.selectAll"
      readme: "First block!\n\nNeeded a sortable grouped bar chart for work. Took the @mbostock grouped bar chart and updated it to my needs.\n\nSorting is not robust at this time! Unfortunately, but I wanted to send something to apply to visfest this year."
      uid: "sadbumblebee_89d9cc90e17eca55e880405404690d91"
    - 
      code: "<script>\n\nvar diameter = 600;\n\nvar bundaries = 30;\n\nvar scale = 1;\n\nvar color = d3.scale.category20c();\n\nvar x = d3.scale.log().range([bundaries,diameter-bundaries]);\nvar y = d3.scale.log().range([bundaries,diameter-bundaries]);\n\nvar xAxis = d3.svg.axis()\n  .scale(x)\n  .orient(\"bottom\")\n  .ticks(6, \",.1s\")\n  .tickSize(6, 0);\n\nvar yAxis = d3.svg.axis()\n  .scale(y)\n  .orient(\"left\")\n  .ticks(6, \",.1s\")\n  .tickSize(6, 0);\n\n// x.domain([3200,.9]);\n// y.domain([9000000,1]);\n\nvar svg = d3.select(\"#visualization\")\n  .append(\"svg\")\n  .attr(\"width\", diameter)\n  .attr(\"height\", diameter)\n  .append(\"g\");\n\nd3.csv(\"data.csv\", function(data){\n\n    var years = d3.nest()\n      .key(function(d) { return \"y\" + (d.year - 2008); })\n      .rollup(function(values) { return d3.sum(values, function(d) {return +d.real_pageviews; }) })\n      .map(data);\n\n    // console.log(years)\n    // console.log(data)\n\n    x.domain([\n      d3.max(data, function(d) { return +d.best_rank; }),\n      d3.min(data, function(d) { return +d.best_rank; })\n    ]);\n\n    y.domain([\n      d3.max(data, function(d) { return +d.real_pageviews; }),\n      d3.min(data, function(d) { return +d.real_pageviews; })\n    ]);\n\n    svg.append(\"rect\")\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", diameter)\n      .attr(\"height\", diameter)\n      .style(\"fill\", \"white\")\n      .on(\"click\", zoomOut);\n\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + (diameter - bundaries) + \")\")\n        .call(xAxis);\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(\" + bundaries + \",0)\")\n        .call(yAxis);\n\n    svg.selectAll(\"circle\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"id\", function (d) {return d.player_name;})\n      .attr(\"class\", function (d) {return \"y\" + d.year;})\n      .attr(\"cx\", function (d) {return x(d.best_rank);})\n      .attr(\"cy\", function (d) {return y(d.real_pageviews);})\n      .attr(\"r\", function (d) {return (d.year-2007)/2;})\n      .style(\"stroke\", function (d) {return color(d.year-2007);})\n      .style(\"fill\", \"rgba(0,0,0,0.05)\")\n      // .attr(\"opacity\", 1)\n      .style(\"stroke-width\", 1)\n      .on(\"click\", zoom);\n\nconsole.log(years)\n\n    var check = d3.select(\"body\").selectAll(\".yearButton\")\n      // .data(years)\n      // .enter()\n      // .style(\"font-size\", \"20px\");\n      .style(\"font-size\", years.y2008 + \"px\");\n\nconsole.log(check)\n\n  d3.selectAll(\"circle\")\n    .on('mouseover', function(d){\n\n      d3.selectAll(\"circle\")\n        .transition()\n        .style(\"stroke-width\", 0);\n\n      d3.selectAll(\"#\" + this.id)\n        .transition()\n        .style(\"stroke-width\", 2)\n        .style(\"opacity\", \"1\");\n\n      svg.append(\"text\")\n        .attr(\"class\", \"tooltip\")\n        .attr(\"id\", \"tooltip\")\n        .attr(\"x\", 100)\n        .attr(\"y\", 100)\n        .text(this.id);\n\n    })\n\n    .on('mouseout', function(d){\n\n      d3.select(\"#tooltip\").remove();\n\n      d3.selectAll(\"circle\")\n        .transition()\n        .style(\"stroke-width\", 1 / scale + \"px\");\n\n      d3.selectAll(\"#\" + this.id)\n        .transition()\n        .style(\"stroke-width\", 1 / scale + \"px\");\n\n    });\n\nfunction zoom() {\n\n    var zoomSpeed = 2000;\n\n    var selectPerson = this.id;\n\n    var selectedData = d3.selectAll(\"#\" + this.id).data();\n\n    var selectedRankMax = d3.max(selectedData, function(d) { return +d.best_rank; });\n    var selectedRankMin = (d3.min(selectedData, function(d) { return +d.best_rank; }));\n\n    var selectedViewsMax = d3.max(selectedData, function(d) { return +d.real_pageviews; });\n    var selectedViewsMin = (d3.min(selectedData, function(d) { return +d.real_pageviews; }));\n\n    var years = d3.nest()\n      .key(function(d) { return \"y\" + d.year; })\n      .rollup(function(values) { return d3.sum(values, function(d) {return +d.real_pageviews; }) })\n      .map(selectedData);\n\n    console.log(years)\n\n    y.domain([selectedViewsMax,selectedViewsMin]);\n    x.domain([selectedRankMax,selectedRankMin]);\n\n    d3.selectAll(\"circle\")\n      .transition()\n      .duration(zoomSpeed)\n      .style(\"stroke-width\", 1 / scale + \"px\")\n      .style(\"fill\", function (d) {\n        if (d.player_name != selectPerson) { return \"rgba(0,0,0,0.05)\" }\n        else{ color(d.year-2007) };\n      })\n      .attr(\"r\", function (d) {return (d.year-2007) / scale;})\n      .attr(\"cx\", function (d) {return x(d.best_rank);})\n      .attr(\"cy\", function (d) {return y(d.real_pageviews);});\n\n    var wikiLine = d3.svg.line()\n      .x(function(d) { return x(d.best_rank); })\n      .y(function(d) { return y(d.real_pageviews); });\n      // .interpolate(\"cardinal\");\n\n    d3.select(\".wikiLine\")\n      .transition()\n      .duration(zoomSpeed)\n      .style(\"opacity\", \"0\")\n      .remove();\n\n    var selectedLine = d3.select(\"svg\")\n      .append(\"path\") \n      .attr(\"class\", \"wikiLine\")\n      .style(\"stroke\", \"black\")\n      .style(\"fill\",\"none\")\n      .style(\"opacity\", \"0\");\n\n    selectedLine\n      .transition()\n      .delay(zoomSpeed)\n      .duration(500)\n      .style(\"opacity\", \".5\")\n      .attr(\"d\", wikiLine(selectedData));\n\n    d3.select(\".x.axis\")\n      .transition()\n      .duration(zoomSpeed)\n      .call(xAxis);\n\n    d3.select(\".y.axis\")\n      .transition()\n      .duration(zoomSpeed)\n      .call(yAxis);\n\n}\n\nfunction zoomOut() {\n\n    d3.select(\".wikiLine\")\n      .transition()\n      .duration(200)\n      .style(\"opacity\", \"0\")\n      .remove();\n\n    x.domain([\n      d3.max(data, function(d) { return +d.best_rank; }),\n      d3.min(data, function(d) { return +d.best_rank; })\n    ]);\n\n    y.domain([\n      d3.max(data, function(d) { return +d.real_pageviews; }),\n      d3.min(data, function(d) { return +d.real_pageviews; })\n    ]);\n\n    d3.selectAll(\"circle\")\n      .transition()\n      .duration(1000)\n      .style(\"stroke-width\", 1 / scale + \"px\")\n      .attr(\"r\", function (d) {return (d.year-2007) / 2;})\n      .attr(\"cx\", function (d) {return x(d.best_rank);})\n      .attr(\"cy\", function (d) {return y(d.real_pageviews);});\n\n    d3.select(\".x.axis\")\n      .transition()\n      .duration(1000)\n      .call(xAxis);\n\n    d3.select(\".y.axis\")\n      .transition()\n      .duration(1000)\n      .call(yAxis);\n}\n\n});\n\nfunction yearSelection(year) {\n\n      d3.selectAll(\"circle\")\n        .transition()\n        .style(\"stroke-width\", 0);\n\n      var hoverYear = \".y\" + year;\n\n      // console.log(hoverYear)\n\n      d3.selectAll(hoverYear)\n        .transition()\n        .style(\"stroke-width\", .5);\n};\n\n    </script>"
      description: "Zoomable Connected Scatterplot"
      created_at: "2016-09-13T18:51:21Z"
      updated_at: "2016-09-14T15:16:08Z"
      api: 
        - "d3.scale.category20c"
        - "d3.scale.log"
        - "d3.svg.axis"
        - "d3.select"
        - "d3.csv"
        - "d3.nest"
        - "d3.sum"
        - "d3.max"
        - "d3.min"
        - "d3.selectAll"
        - "d3.svg.line"
      readme: ""
      uid: "kimalbrecht_0f38f05ab18357ef07e41b71a4f079c6"
    - 
      code: "<script>\nvar data = [\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Health Impacts\",\n   \"label\": \"Child Mortality\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Household Air Quality\",\n   \"value\": 95\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average Exposure to PM2.5\",\n   \"value\": 82.24\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average PM2.5 Exceedance\",\n   \"value\": 58.27\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Sanitation\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Drinking Water\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Water Resources\",\n   \"label\": \"Wastewater Treatment\",\n   \"value\": 95.18\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Agricultural Subsidies\",\n   \"value\": 38.62\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Pesticide Regulation\",\n   \"value\": 92\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Forests\",\n   \"label\": \"Change in Forest Cover \",\n   \"value\": 31.35\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Fish Stocks\",\n   \"value\": 8.33\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Coastal Shelf Fishing Pressure\",\n   \"value\": 18.46\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (National Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (Global Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Marine Protected Areas\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in Carbon Intensity\",\n   \"value\": 65.24\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Change of Trend in Carbon Intensity\",\n   \"value\": 27.82\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in CO2 Emissions per KwH\",\n   \"value\": 58.26\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Access to Electricity\",\n   \"value\": 100\n }\n]\n\nvar parentlabels= [\n \" EH - Health Impacts\",\n\"EH - Air Quality\",\n\"EH -Water and Sanitation\",\n\"EV - Water Resources\",\n\"EV - Agriculture\",\n\"EV - Forests\",\n\"EV - Fisheries\",\n\"EV- Biodiversity and Habitat\",\n\"EV - Climate and Energy\"];\n  \nvar parentvalues= [100,78.5,100,95.18,65.31,31.35,13.4,100,62.77];\n  \n var grandparentvalues = [92.83, 72.73];\n  \nvar margin = {top: 20, right: 20, bottom: 30, left: 155},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom; \n  \nvar x = d3.scale.linear()\n    .range([0,width]);\n\nvar y = d3.scale.ordinal()\n    .rangePoints([0,height-margin.bottom]);\n\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\t\t.ticks(10);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n\t\t.tickSize(0);\nvar BAR_HEIGHT = 17;\n  \nvar colScale = d3.scale.ordinal()\n    .range([    \"#ff8c00\",\"#f9bb00\",\"#ff6100\",\"#555f9f\",, \"#10599c\",\"#0099cc\",\"#216342\", \"#339966\",\"#009900\"]);\n  \n\n  /*\nvar tip = d3.tip()\n  \t.attr('class', 'd3-tip')\n  \t.offset([-10, 0])\n  \t.html(function(d) {\n      if(d.grade<3.0)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span>\";\n      else if(d.grade>3.0 && d.grade <3.5)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:yellow'>\" + d.grade + \"</span>\";\n      else\n        return \"<strong>Grade:</strong> <span style='color:lightgreen'>\" + d.grade + \"</span>\";\n  });\n  \n  */\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n//svg.call(tip);  \n  \n\n  \n//d3.tsv(\"grades.tsv\", type, function(error, data) {\n // if (error) throw error;\n\n  //y.domain(data.map(function(d) { return d.grandparent; }));\n  //y.domain(data.map(function(d) { return d.parent; }));\n  y.domain(data.map(function(d) { return d.label; }));\n  x.domain([0, d3.max(data, function(d) { return d.value; })]);\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(0,\" + margin.top +  \")\")\n      .call(yAxis);\n  \t\t\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dx\", 60.2+\"em\")\n      .style(\"text-anchor\", \"end\")\n  \t\t.text(\"EPI score\");\n        \n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n   \t\t.attr(\"x\", 0 )//function(d) { return x(d.grade); })\n      .attr(\"y\", function(d) { return margin.top+y(d.label); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.parent); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.grandparent); })\n  \t\t//.on('mouseover', tip.show)\n  \t\t//.on('mouseout', tip.hide)\n  \t\t//.on(\"click\", clicked) ??\n      .attr(\"height\", BAR_HEIGHT)//height/data.length )//y.rangeBand())\n  \t\t/*.attr(\"width\",0)\n    \t.transition()\n    \t.duration(2000)*/\n  \t\t.attr(\"width\", function(d) { return x(d.value); })\n  \t.style(\"fill\", function(d) {return colScale(d.parent);} );\n  \n  \nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n  \n//d3.select(\"input\").on(\"change\", change);\nd3.select(\"#groupParents\").on(\"change\", groupParents);\nd3.select(\"#groupGrandparents\").on(\"change\", groupGrandparents);\n\n\tvar sortTimeoutP = setTimeout(function() {\n    d3.select(\"#groupParents\").property(\"checked\", true).each(groupParents);\n  }, 2000);\n  \n  var sortTimeoutGP = setTimeout(function() {\n    d3.select(\"#groupGrandparents\").property(\"checked\", true).each(groupGrandparents);\n  }, 2000);\n  \n/*\nfunction clicked(d) {\n  var x, y, k;\n\n  if (d && centered !== d) {\n    var centroid = path.centroid(d);\n    x = centroid[0];\n    y = centroid[1];\n    k = 4;\n    centered = d;\n  } else {\n    x = width / 2;\n    y = height / 2;\n    k = 1;\n    centered = null;\n  }\n\n  g.selectAll(\"path\")\n      .classed(\"active\", centered && function(d) { return d === centered; });\n\n  g.transition()\n      .duration(750)\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")scale(\" + k + \")translate(\" + -x + \",\" + -y + \")\")\n      .style(\"stroke-width\", 1.5 / k + \"px\");\n}\n*/\n  \nfunction change() {\n/*    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var y0 = y.domain(data.sort(this.checked\n        ? function(a, b) { return b.value - a.value; }\n        : function(a, b) { return d3.ascending(a.label, b.label); })\n        .map(function(d) { return d.label; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return y0(a.label) - y0(b.label); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.label)+margin.top; });\n\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      .selectAll(\"g\")\n        .delay(delay);\n */ }\n  \nfunction groupParents() {\n  var BAR_HEIGHT = 37;\n  /*y.domain(data.map(function(d) { return d.parent; }));\n  svg.selectAll(\".bar\")\n    .enter()\n    .append(\"rect\")\n  \t.attr(\"y\", function(d) { return margin.top+y(d.parent); })*/\n  /*var pdata = d3.nest()\n  .key(function(d) { return d.parent;})\n  .rollup(function(d) { \n   \treturn d3.mean(d, function(g) {return g.value; });})\n  .entries(data);\n  \n  pdata.forEach(function(d) {\n \td.parent = d.key;\n \td.value = d.values;\n\t});*/\n      \n      //code to sort\n      clearTimeout(sortTimeoutP);\n  \n\t\t//var y0= y.domain(data.map(function(d) { return d.parent; })).copy();\n \n  \tvar y0 = y.domain(data.map(this.checked\n        ? function(d) { return d.parent;}\n        : function(d) {\n      //TODO desagregar\n      \t\t\tVAR_HEIGHT= 17;\n\t\t\t\t\t\treturn d.label; }))\n        //.map(function(d) { return d.parent; })\n        .copy();\n\n    svg.selectAll(\".bar\")\n  \t.attr(\"y\", function(d,i) { return margin.top+y(d.parent); })\n    .attr(\"width\", function(d,i) { return x(parentvalues[i/2]); })\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.parent)+margin.top; })\n    \t\t.attr(\"height\", BAR_HEIGHT)\n    \t\t\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      .selectAll(\"g\")\n        .delay(delay);\n} \n/*  \nfunction groupGrandparents() {\n  \n   var BAR_HEIGHT = 167;\n  \n  /*y.domain(data.map(function(d) { return d.grandparent; }));\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n  .attr(\"y\", function(d) { return margin.top+y(d.grandparent); })\n}*//*   \n  \n  clearTimeout(sortTimeoutGP);\n  \n\t\tvar y0= y.domain(data.map(function(d) { return d.grandparent; }))   ;\n //x.domain([0, d3.max(parentvalues)]);\n\n    svg.selectAll(\".bar\")\n    //.append(\"rect\")\n  \t.attr(\"y\", function(d) { return margin.top+y0(d.grandparent); })\n    //.style(\"fill\", function(d) {return [colScale[0],colScale[5]];} )\n    .attr(\"height\", BAR_HEIGHT)\n    .attr(\"width\", function(d,i) { return x(grandparentvalues[i] );})\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    /*transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.grandparent)+margin.top; })\n    \t\t.attr(\"height\", BAR_HEIGHT)\n    \t\t.attr(\"width\", function(d,i) { return x(grandparentvalues[i] );})\n\t\n\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n}*/\n</script>"
      description: "Tarea 4 - Visualization horizontal v3"
      created_at: "2016-09-10T20:51:27Z"
      updated_at: "2016-09-10T21:23:51Z"
      api: 
        - "d3.scale.linear"
        - "d3.scale.ordinal"
        - "d3.svg.axis"
        - "d3.tip"
        - "d3.select"
        - "d3.tsv"
        - "d3.max"
        - "d3.ascending"
        - "d3.nest"
        - "d3.mean"
      readme: "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/f9af6617835cbb37e2c280703ce255ca'>Tarea 3 - Grades Visualization</a>\n\n<h2> What? </h2>\nTable with attributes \"code\" and \"grade\"\n\n<h2> Why? </h2>\n<h3> Tasks </h3>\nPresent and enjoy\n\nCompare and summarize all the course grades.\nIdentify a specific grade of a student.\n\n<h3> Targets </h3>\nGrades distribution\n\n<h2> How? </h2>\n\nAlign continous values and express them in a continous scale.\n\n<h3> Marks </h3>\nLines\n\n\n<h3> Channels </h3>\nLength for cuantitative grade\nHue for range grades\n\n<h2>Short review</h2>\n<p>De acuerdo a los datos, se tiene un atributo categórico y un cuantitativo. De acuerdo a los conceptos aprendidos, el mejor canal para representar éstos datos es la longitud en una escala alineada. Por ello se decidió realizar un diagrama de barras utilizando la longitud de la barra para representar la nota obtenida. Se decidió realizar horizontal para poder tener una mejor visualización sobre los códigos de los usuarios.</p>\n<p>Por otro lado tambien es posible detallar la nota específica de cada usuario (\"Detail on demand\") y veríficar de acuerdo al matiz(hue) si aprobó, reprobó o pasó raspando.</p>\n\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/3cd76524b53adcd478c1963fbf4f8264'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/092bb5b3f7478bbeeaf56f60ed9565cc'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/368d648d9b931cbbd310cc6f7260c8b1'>Tarea 4 - Visualization horizontal v3</a>\n\nforked from <a href='http://bl.ocks.org/f94f/'>f94f</a>'s block: <a href='http://bl.ocks.org/f94f/27d6b22dd88a68588fdcf1dc198d06de'>Tarea 4 - Visualization horizontal v3</a>"
      uid: "f94f_b95fc00044614dd0441317d94bdb968f"
    - 
      code: "<script>\nvar data = [\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Health Impacts\",\n   \"label\": \"Child Mortality\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Household Air Quality\",\n   \"value\": 95\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average Exposure to PM2.5\",\n   \"value\": 82.24\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average PM2.5 Exceedance\",\n   \"value\": 58.27\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Sanitation\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Drinking Water\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Water Resources\",\n   \"label\": \"Wastewater Treatment\",\n   \"value\": 95.18\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Agricultural Subsidies\",\n   \"value\": 38.62\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Pesticide Regulation\",\n   \"value\": 92\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Forests\",\n   \"label\": \"Change in Forest Cover \",\n   \"value\": 31.35\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Fish Stocks\",\n   \"value\": 8.33\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Coastal Shelf Fishing Pressure\",\n   \"value\": 18.46\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (National Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (Global Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Marine Protected Areas\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in Carbon Intensity\",\n   \"value\": 65.24\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Change of Trend in Carbon Intensity\",\n   \"value\": 27.82\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in CO2 Emissions per KwH\",\n   \"value\": 58.26\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Access to Electricity\",\n   \"value\": 100\n }\n]\n\nvar parentlabels= [\n \" EH - Health Impacts\",\n\"EH - Air Quality\",\n\"EH -Water and Sanitation\",\n\"EV - Water Resources\",\n\"EV - Agriculture\",\n\"EV - Forests\",\n\"EV - Fisheries\",\n\"EV- Biodiversity and Habitat\",\n\"EV - Climate and Energy\"];\n  \nvar parentvalues= [100,78.5,100,95.18,65.31,31.35,13.4,100,62.77];\n  \n var grandparentvalues = [92.83, 72.73];\n  \nvar margin = {top: 20, right: 20, bottom: 30, left: 155},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom; \n  \nvar x = d3.scale.linear()\n    .range([0,width]);\n\nvar y = d3.scale.ordinal()\n    .rangePoints([0,height-margin.bottom]);\n\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\t\t.ticks(10);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n\t\t.tickSize(0);\nvar BAR_HEIGHT = 17;\n  \nvar colScale = d3.scale.ordinal()\n    .range([    \"#ff8c00\",\"#f9bb00\",\"#ff6100\",\"#555f9f\",, \"#10599c\",\"#0099cc\",\"#216342\", \"#339966\",\"#009900\"]);\n  \n\n  /*\nvar tip = d3.tip()\n  \t.attr('class', 'd3-tip')\n  \t.offset([-10, 0])\n  \t.html(function(d) {\n      if(d.grade<3.0)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span>\";\n      else if(d.grade>3.0 && d.grade <3.5)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:yellow'>\" + d.grade + \"</span>\";\n      else\n        return \"<strong>Grade:</strong> <span style='color:lightgreen'>\" + d.grade + \"</span>\";\n  });\n  \n  */\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n//svg.call(tip);  \n  \n\n  \n//d3.tsv(\"grades.tsv\", type, function(error, data) {\n // if (error) throw error;\n\n  //y.domain(data.map(function(d) { return d.grandparent; }));\n  //y.domain(data.map(function(d) { return d.parent; }));\n  y.domain(data.map(function(d) { return d.label; }));\n  x.domain([0, d3.max(data, function(d) { return d.value; })]);\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(0,\" + margin.top +  \")\")\n      .call(yAxis);\n  \t\t\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dx\", 60.2+\"em\")\n      .style(\"text-anchor\", \"end\")\n  \t\t.text(\"EPI score\");\n        \n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n   \t\t.attr(\"x\", 0 )//function(d) { return x(d.grade); })\n      .attr(\"y\", function(d) { return margin.top+y(d.label); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.parent); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.grandparent); })\n  \t\t//.on('mouseover', tip.show)\n  \t\t//.on('mouseout', tip.hide)\n  \t\t//.on(\"click\", clicked) ??\n      .attr(\"height\", BAR_HEIGHT)//height/data.length )//y.rangeBand())\n  \t\t/*.attr(\"width\",0)\n    \t.transition()\n    \t.duration(2000)*/\n  \t\t.attr(\"width\", function(d) { return x(d.value); })\n  \t.style(\"fill\", function(d) {return colScale(d.parent);} );\n  \n  \nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n  \n//d3.select(\"input\").on(\"change\", change);\nd3.select(\"#groupParents\").on(\"change\", groupParents);\nd3.select(\"#groupGrandparents\").on(\"change\", groupGrandparents);\n\n\tvar sortTimeoutP = setTimeout(function() {\n    d3.select(\"#groupParents\").property(\"checked\", true).each(groupParents);\n  }, 2000);\n  \n  var sortTimeoutGP = setTimeout(function() {\n    d3.select(\"#groupGrandparents\").property(\"checked\", true).each(groupGrandparents);\n  }, 2000);\n  \n/*\nfunction clicked(d) {\n  var x, y, k;\n\n  if (d && centered !== d) {\n    var centroid = path.centroid(d);\n    x = centroid[0];\n    y = centroid[1];\n    k = 4;\n    centered = d;\n  } else {\n    x = width / 2;\n    y = height / 2;\n    k = 1;\n    centered = null;\n  }\n\n  g.selectAll(\"path\")\n      .classed(\"active\", centered && function(d) { return d === centered; });\n\n  g.transition()\n      .duration(750)\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")scale(\" + k + \")translate(\" + -x + \",\" + -y + \")\")\n      .style(\"stroke-width\", 1.5 / k + \"px\");\n}\n*/\n  \nfunction change() {\n/*    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var y0 = y.domain(data.sort(this.checked\n        ? function(a, b) { return b.value - a.value; }\n        : function(a, b) { return d3.ascending(a.label, b.label); })\n        .map(function(d) { return d.label; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return y0(a.label) - y0(b.label); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.label)+margin.top; });\n\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      .selectAll(\"g\")\n        .delay(delay);\n */ }\n  \nfunction groupParents() {\n  var BAR_HEIGHT = 37;\n  /*y.domain(data.map(function(d) { return d.parent; }));\n  svg.selectAll(\".bar\")\n    .enter()\n    .append(\"rect\")\n  \t.attr(\"y\", function(d) { return margin.top+y(d.parent); })*/\n  /*var pdata = d3.nest()\n  .key(function(d) { return d.parent;})\n  .rollup(function(d) { \n   \treturn d3.mean(d, function(g) {return g.value; });})\n  .entries(data);\n  \n  pdata.forEach(function(d) {\n \td.parent = d.key;\n \td.value = d.values;\n\t});*/\n      \n      //code to sort\n      clearTimeout(sortTimeoutP);\n  \n\t\t//var y0= y.domain(data.map(function(d) { return d.parent; })).copy();\n \n  \tvar y0 = y.domain(data.map(this.checked\n        ? function(d) { return d.parent;}\n        : function(d) {\n      //TODO desagregar\n      \t\t\tVAR_HEIGHT= 17;\n\t\t\t\t\t\treturn d.label; }))\n        //.map(function(d) { return d.parent; })\n        .copy();\n\n    svg.selectAll(\".bar\")\n  \t.attr(\"y\", function(d,i) { return margin.top+y(d.parent); })\n    .attr(\"width\", function(d,i) { return x(parentvalues[i/2]); })\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.parent)+margin.top; })\n    \t\t.attr(\"height\", BAR_HEIGHT)\n    \t\t\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      .selectAll(\"g\")\n        .delay(delay);\n} \n/*  \nfunction groupGrandparents() {\n  \n   var BAR_HEIGHT = 167;\n  \n  /*y.domain(data.map(function(d) { return d.grandparent; }));\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n  .attr(\"y\", function(d) { return margin.top+y(d.grandparent); })\n}*//*   \n  \n  clearTimeout(sortTimeoutGP);\n  \n\t\tvar y0= y.domain(data.map(function(d) { return d.grandparent; }))   ;\n //x.domain([0, d3.max(parentvalues)]);\n\n    svg.selectAll(\".bar\")\n    //.append(\"rect\")\n  \t.attr(\"y\", function(d) { return margin.top+y0(d.grandparent); })\n    //.style(\"fill\", function(d) {return [colScale[0],colScale[5]];} )\n    .attr(\"height\", BAR_HEIGHT)\n    .attr(\"width\", function(d,i) { return x(grandparentvalues[i] );})\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    /*transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.grandparent)+margin.top; })\n    \t\t.attr(\"height\", BAR_HEIGHT)\n    \t\t.attr(\"width\", function(d,i) { return x(grandparentvalues[i] );})\n\t\n\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n}*/\n  \n  \n</script>"
      description: "Tarea 4 - Visualization horizontal v3"
      created_at: "2016-09-10T20:36:59Z"
      updated_at: "2016-09-10T20:47:53Z"
      api: 
        - "d3.scale.linear"
        - "d3.scale.ordinal"
        - "d3.svg.axis"
        - "d3.tip"
        - "d3.select"
        - "d3.tsv"
        - "d3.max"
        - "d3.ascending"
        - "d3.nest"
        - "d3.mean"
      readme: "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/f9af6617835cbb37e2c280703ce255ca'>Tarea 3 - Grades Visualization</a>\n\n<h2> What? </h2>\nTable with attributes \"code\" and \"grade\"\n\n<h2> Why? </h2>\n<h3> Tasks </h3>\nPresent and enjoy\n\nCompare and summarize all the course grades.\nIdentify a specific grade of a student.\n\n<h3> Targets </h3>\nGrades distribution\n\n<h2> How? </h2>\n\nAlign continous values and express them in a continous scale.\n\n<h3> Marks </h3>\nLines\n\n\n<h3> Channels </h3>\nLength for cuantitative grade\nHue for range grades\n\n<h2>Short review</h2>\n<p>De acuerdo a los datos, se tiene un atributo categórico y un cuantitativo. De acuerdo a los conceptos aprendidos, el mejor canal para representar éstos datos es la longitud en una escala alineada. Por ello se decidió realizar un diagrama de barras utilizando la longitud de la barra para representar la nota obtenida. Se decidió realizar horizontal para poder tener una mejor visualización sobre los códigos de los usuarios.</p>\n<p>Por otro lado tambien es posible detallar la nota específica de cada usuario (\"Detail on demand\") y veríficar de acuerdo al matiz(hue) si aprobó, reprobó o pasó raspando.</p>\n\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/3cd76524b53adcd478c1963fbf4f8264'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/092bb5b3f7478bbeeaf56f60ed9565cc'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/368d648d9b931cbbd310cc6f7260c8b1'>Tarea 4 - Visualization horizontal v3</a>"
      uid: "f94f_27d6b22dd88a68588fdcf1dc198d06de"
    - 
      code: "<script>\n\t\nvar units = \"Widgets\";\n\n// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// format variables\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scaleOrdinal(d3.schemeCategory20);\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data\nd3.json(\"sankey-names.json\", function(error, graph) {\n\n  var nodeMap = {};\n  graph.nodes.forEach(function(x) { nodeMap[x.name] = x; });\n  graph.links = graph.links.map(function(x) {\n    return {\n      source: nodeMap[x.source],\n      target: nodeMap[x.target],\n      value: x.value\n    };\n  });\n\n  sankey\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .layout(32);\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n\n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n    \t\treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n      .call(d3.drag()\n        .subject(function(d) {\n          return d;\n        })\n        .on(\"start\", function() {\n          this.parentNode.appendChild(this);\n        })\n        .on(\"drag\", dragmove));\n\n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this)\n      .attr(\"transform\", \n            \"translate(\" \n               + d.x + \",\" \n               + (d.y = Math.max(\n                  0, Math.min(height - d.dy, d3.event.y))\n                 ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n\n</script>"
      description: "Sankey using named nodes in v4"
      created_at: "2016-09-05T09:35:13Z"
      updated_at: "2016-09-05T09:36:30Z"
      api: 
        - "d3.format"
        - "d3.scaleOrdinal"
        - "d3.select"
        - "d3.sankey"
        - "d3.json"
        - "d3.drag"
        - "d3.rgb"
        - "d3.interpolateNumber"
        - "d3.sum"
        - "d3.min"
        - "d3.nest"
      readme: "The above example is intended to demonstrate drawing a simple Sankey diagram using JSON with names for the nodes instead of relying on d3 to index them. It uses  [Jason Davies'](https://github.com/d3/d3-plugins/tree/master/sankey) version of the Sankey plugin.\n\nThis is one of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js."
      uid: "d3noob_d7800f34062b116f9ec0588f2e85e549"
    - 
      code: "<script>\n\t\nvar units = \"Widgets\";\n\n// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// format variables\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scaleOrdinal(d3.schemeCategory20);\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data\nd3.json(\"sankey.json\", function(error, graph) {\n\n  sankey\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .layout(32);\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n\n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n    \t\treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n      .call(d3.drag()\n        .subject(function(d) {\n          return d;\n        })\n        .on(\"start\", function() {\n          this.parentNode.appendChild(this);\n        })\n        .on(\"drag\", dragmove));\n\n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \n        \"translate(\" + (\n            d.x = Math.max(0, Math.min(width - d.dx, d3.event.x))\n        )\n        + \",\" + (\n            d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n        ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n\n</script>"
      description: "Sankey diagram with full motion nodes in v4"
      created_at: "2016-09-05T06:36:44Z"
      updated_at: "2016-09-05T09:16:26Z"
      api: 
        - "d3.format"
        - "d3.scaleOrdinal"
        - "d3.select"
        - "d3.sankey"
        - "d3.json"
        - "d3.drag"
        - "d3.rgb"
        - "d3.interpolateNumber"
        - "d3.sum"
        - "d3.min"
        - "d3.nest"
      readme: "The above example is intended to demonstrate drawing a simple Sankey diagram using v4 of d3.js. It uses  [Jason Davies'](https://github.com/d3/d3-plugins/tree/master/sankey) version of the Sankey plugin.\n\nThis particular version allows the dragging of nodes in the x and y direction. Have a play!\n\nThis is one of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js."
      uid: "d3noob_3337957c360d55c245f6057ab0866c05"
    - 
      code: "<script>\n\t\nvar units = \"Widgets\";\n\n// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// format variables\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scaleOrdinal(d3.schemeCategory20);\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data\nd3.json(\"sankey.json\", function(error, graph) {\n\n  sankey\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .layout(32);\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n\n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n    \t\treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n      .call(d3.drag()\n        .subject(function(d) {\n          return d;\n        })\n        .on(\"start\", function() {\n          this.parentNode.appendChild(this);\n        })\n        .on(\"drag\", dragmove));\n\n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this)\n      .attr(\"transform\", \n            \"translate(\" \n               + d.x + \",\" \n               + (d.y = Math.max(\n                  0, Math.min(height - d.dy, d3.event.y))\n                 ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n\n</script>"
      description: "Sankey Diagram with v4"
      created_at: "2016-09-05T06:17:24Z"
      updated_at: "2016-09-05T09:16:51Z"
      api: 
        - "d3.format"
        - "d3.scaleOrdinal"
        - "d3.select"
        - "d3.sankey"
        - "d3.json"
        - "d3.drag"
        - "d3.rgb"
        - "d3.interpolateNumber"
        - "d3.sum"
        - "d3.min"
        - "d3.nest"
      readme: "The above example is intended to demonstrate drawing a simple Sankey diagram using v4 of d3.js. It uses  [Jason Davies'](https://github.com/d3/d3-plugins/tree/master/sankey) version of the Sankey plugin.\n\nThis is one of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js."
      uid: "d3noob_013054e8d7807dff76247b81b0e29030"
    - 
      code: "<script>\n/* global d3, console */\n\nvar keys = [\"Oro\", \"Plata\", \"Bronce\"];\n\nvar width = window.innerWidth\n|| document.documentElement.clientWidth\n|| document.body.clientWidth;\n\n\nvar height = window.innerHeight\n|| document.documentElement.clientHeight\n|| document.body.clientHeight;\nheight = height - 150;\n\nvar svg = d3.select(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height),\n    margin = {top: 20, right: 60, bottom: 50, left: 20},\n    width = width- margin.left - margin.right,\n    height = height - margin.top - margin.bottom;\n\nvar parseDate = d3.timeParse(\"%Y\");\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal()\n      .domain(keys)\n      .range([\"#ffd700\", \"#C0C0C0\", \"#cd7f32\"]);\n\nvar stack = d3.stack()\n    .offset(d3.offsetNone);\n\nvar nest = d3.nest()  \n    .key(function(d) { return d.date; })    \n    .key(function(d) { return d.medal; })\n    .rollup(function (leaves) { return leaves.length; });\n\nvar area = d3.area()\n    .x(function(d) { return x(d.data.key); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); });\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  g.append(\"g\")\n    .attr(\"class\", \"layers\");  \n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\");\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .append(\"text\")\n      .text(\"Total acumulado de medallas\") \n      .style(\"font-size\", \"14pt\")\n      .attr(\"transform\", \"translate(\" + ( width + margin.right/3) + \", 0) rotate(90)\");\n\n\n\n\n\n\nd3.csv(\"olympic_medals_Colombia.csv\", type, function(error, data) {\n  if (error) throw error;\n\n\n  var nestedData = nest.entries(data);\n  \n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  var table = nestedData.reduce(function (p, c) {\n    //Initialize on zero\n    keys.forEach(function (k) { \n      c[k]=0;\n    });\n    c.values.forEach(function (d) {\n      c[d.key] = d.value;\n    });\n    //nest converts the date into string, so we need to convert it back\n    c.key = new Date(c.key);\n    return p.concat(c);\n\n  }, []);\n\n  var filledTable = [];\n  var prevDate = new Date(x.domain()[0]-4, 0, 0);\n  table.forEach(function (d) {\n    filledTable.push(d);\n    //Is there a hole?\n    if ((d.key.getFullYear() - prevDate.getFullYear()) > 4) {\n      //Fill the whole with many zero olympics as necessary\n      for (var y = prevDate.getFullYear() + 4; y < d.key.getFullYear(); y+=4) {\n        var zeroMedals = {};\n        for(var i = 0 ; i < keys.length ; ++i){\n          zeroMedals[keys[i]] = 0;        \n        }\n        zeroMedals.key=new Date(y, 0);\n        filledTable.push(zeroMedals);\n      }\n    } \n\n    prevDate = d.key;\n  });\n  \n  stack.keys(keys);\n  filledTable = filledTable.sort(function (a,b) { \n    return d3.ascending(a.key, b.key); \n  });\n\n  stack.keys(keys);  \n  z.domain(keys);\n  \n\n  //We need to have 0 medals when data is missing\n  var datesWithOlympics = d3.timeYear.range(\n            x.domain()[0],\n            new Date(x.domain()[1].getFullYear()+1, 0),\n            4);\n\n\n\n  updateToDateIndex(datesWithOlympics.length-1);\n\n  function updateToDateIndex(i) {\n    console.log(\"update To  i\"+  datesWithOlympics[i]);\n    var layers = stack(filledTable.filter(function (d) { \n      return d.key<= datesWithOlympics[i]; \n    }));\n\n    update(layers);\n\n    if (i === datesWithOlympics.length-1) {\n      i=-1;\n    }\n    \n    // setTimeout(function () {updateToDateIndex(i+1)}, 500);\n  }\n\n  function update(layers) {\n    function pathTween(d) {\n      var interpolate = d3.scaleQuantile()\n              .domain([0,1])\n              .range(d3.range(1, d.length + 1));\n      return function(t) {\n          return area(d.slice(0, interpolate(t)));\n      };\n    }\n\n    y.domain([0, 1+  d3.max(layers, \n    function (d) { \n      return d3.max(d, \n        function (e) {\n          return e[1];\n        }); \n    })]);\n\n    var layer = g.select(\".layers\").selectAll(\".layer\")\n      .data(layers)\n\n    var layerEnter = \n      layer.enter().append(\"g\")\n        .attr(\"class\", \"layer\");\n\n    layerEnter.append(\"path\")\n        .attr(\"class\", \"area\")\n        .style(\"fill\", function(d) { return z(d.key); })\n        .transition()\n        .duration(5000)\n        .attrTween(\"d\", pathTween);\n\n        \n\n    layerEnter.filter(function(d) { return d[d.length - 1][1] - d[d.length - 1][0] > 0.01; })\n      .append(\"text\")\n        .attr(\"x\", width - 6)\n        .attr(\"y\", function(d) { return y((d[d.length - 1][0] + d[d.length - 1][1]) / 2); })\n        .attr(\"dy\", \".35em\")\n        .style(\"font\", \"16px sans-serif\")\n        .style(\"text-anchor\", \"end\")\n        .text(function(d) { return d.key; });\n\n    // layer.select(\"g .area\")\n    //   .transition()\n    //     .duration(1000)\n    //     .attrTween(\"d\", pathTween)\n        // .attr(\"d\", area);\n\n    // layer.selectAll(\"g text\")\n    //     .attr(\"x\", width - 6)\n    //     .attr(\"y\", function(d) { return y((d[d.length - 1][0] + d[d.length - 1][1]) / 2); })\n    //     .attr(\"dy\", \".35em\")\n    //     .style(\"font\", \"13px sans-serif\")\n    //     .style(\"text-anchor\", \"end\")\n    //     .text(function(d) { return d.key; });\n\n    layer.exit().remove();\n\n    d3.select(\".axis--x\")\n      .call(d3.axisBottom(x)\n        .tickSizeInner(-height)\n        // .tickSizeOuter(10)\n        .tickPadding(15)\n        .tickValues(datesWithOlympics));\n\n    d3.select(\".axis--y\")\n      .call(d3.axisRight(y)\n        .ticks(10, \"\")\n        // .tickPadding(15)\n        .tickSize(width))\n\n\n  }\n\n\n\n\n\n\n\n});\n\n\n\n\nfunction type(d) {\n  d.date = parseDate(d.year);\n  d.total_gold = +d.total_gold;\n  d.total_silver = +d.total_silver;\n  d.total_bronze = +d.total_bronze;\n  d.investment = +d.investment;\n  d.medal = d.medal.trim();\n  return d;\n}\n\n</script>"
      description: "Colombia en los olímpicos"
      created_at: "2016-09-04T17:10:20Z"
      updated_at: "2016-09-04T17:10:20Z"
      api: 
        - "d3.select"
        - "d3.timeParse"
        - "d3.scaleTime"
        - "d3.scaleLinear"
        - "d3.scaleOrdinal"
        - "d3.stack"
        - "d3.nest"
        - "d3.area"
        - "d3.csv"
        - "d3.extent"
        - "d3.ascending"
        - "d3.timeYear.range"
        - "d3.scaleQuantile"
        - "d3.range"
        - "d3.max"
        - "d3.axisBottom"
        - "d3.axisRight"
      readme: "Total de medallas de Colombia en los Juegos Olíimpicos\n---\n\nInspirado en el artículo de lasillavacia \n\nhttp://lasillavacia.com/historia/la-plata-del-deporte-se-vuelve-oro-57592\n\npero tratando de mejorar el gráfico para que represente de mejor manera el total de medallas.\n\nDatos tomados de wikipedia.\n\nforked from <a href='http://bl.ocks.org/john-guerra/'>john-guerra</a>'s block: <a href='http://bl.ocks.org/john-guerra/653dff16b54df2ad2682c8dd0cfbe27a'>Colombia en los olímpicos</a>"
      uid: "willroj_d87455dc1bde4da407a064e61067618a"
    - 
      code: "<script>\n\t\nvar units = \"Widgets\";\n\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scale.category20();\n\n// append the svg canvas to the page\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data\nd3.json(\"sankey-formatted.json\", function(error, graph) {\n\n  sankey\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .layout(32);\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n\n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n    \t\treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n      .origin(function(d) { return d; })\n      .on(\"dragstart\", function() { \n\t\t  this.parentNode.appendChild(this); })\n      .on(\"drag\", dragmove));\n\n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \n        \"translate(\" + d.x + \",\" + (\n                d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n            ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n\n</script>"
      description: "Sankey diagram from formatted JSON"
      created_at: "2016-09-03T09:01:06Z"
      updated_at: "2016-09-03T09:53:28Z"
      api: 
        - "d3.format"
        - "d3.scale.category20"
        - "d3.select"
        - "d3.sankey"
        - "d3.json"
        - "d3.behavior.drag"
        - "d3.rgb"
        - "d3.interpolateNumber"
        - "d3.sum"
        - "d3.min"
        - "d3.nest"
      readme: "This is a simple sankey diagram used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt demonstrates the construction of a [sankey diagram](http://bost.ocks.org/mike/sankey/) using d3.js from external JSON data using the [sankey.js plugin](https://github.com/d3/d3-plugins/tree/master/sankey). It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub."
      uid: "steveharoz_f74e5549ccd2884a5f61f488876f0fa6"
    - 
      code: "<script>\n\t/**\n  \n  \n * Created by Adiamaan on 7/6/2016.\n */\n\nvar margin ={top:100,bottom:20,left:130,right:20};\n\nvar width = 900 - margin.left - margin.right;\nvar height = 500 - margin.top - margin.bottom;\n\nvar DATA_FILE_LOC =\"service_area.csv\";\n      \n      \n\n\n\nvar x = d3.scale.linear().range([margin.left,width]).domain([0,260])\n\nvar y = d3.scale.ordinal().rangeRoundBands([height,margin.bottom])\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .ticks(8)\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n\n\n\nvar svg = d3.select(\"body\").append('svg')\n            .attr(\"width\",width+margin.left+margin.right)\n            .attr(\"height\",height+margin.top+margin.bottom);\n\nvar CURR_YEAR = 2002;\n\nvar SPEED = 2000;\n\nsvg.append('text').attr(\"x\",width/2+margin.left)\n    .attr(\"y\",50)\n    .attr(\"dy\",\".75em\")\n    .attr(\"text-anchor\",\"middle\")\n    .text(CURR_YEAR)\n    .attr(\"id\",\"texttitle\");\n\nsvg.append(\"g\").attr(\"id\",\"bars\").attr(\"transform\",\"translate(\"+ margin.left+\",\"+150+\")\")\n\nd3.csv(DATA_FILE_LOC,function (error,data)\n{\n    if (error) throw error;\n\n    y.domain(data.map(function (d){ return d.Service_Area;}))\n\n    svg.append(\"g\")\n        .attr(\"class\",\"x axis\")\n        .call(xAxis)\n        .attr(\"transform\",\"translate(\"+0+\",\"+margin.top+\")\")\n\n    var year = 2002,\n        height = 10;\n\n    svg.append(\"g\")\n        .attr(\"class\",\"y axis\")\n        .call(yAxis)\n        .attr(\"transform\",\"translate(\"+margin.left+\",\"+margin.top+\")\")\n\nvar ydata = \"year\".concat(CURR_YEAR);\nconsole.log(ydata);\n   svg.append(\"g\")\n\t\t.selectAll(\".bar\")\n        .data(data)\n        .enter().append(\"rect\")\n         .attr(\"class\",\"bar\")\n\t\t .attr(\"x\",margin.left+4)\n         .attr(\"y\",function (d){ return margin.top+y(d.Service_Area)+2})\n        .attr(\"height\",y.rangeBand()-2)\n        .attr(\"width\",function (d){ return x(d[\"year\"+CURR_YEAR])-x(0)})\n\t\t.attr(\"fill\",function (d){ return d.color;})\n\t\t\n\n\tconsole.log(data)\n\n    // var real_data = d3.nest()\n    //     .key(function(d){return d.Service_Area})\n    //     .entries(data);\n    //\n    // for (var key in real_data)\n    // {\n    //     console.log(key,real_data[key]);\n    // }\n\n});\n\n\nfunction timer(){\n    CURR_YEAR += 1;\n    update();\n\n    if(CURR_YEAR == 2015) {\n        CURR_YEAR = 2001;\n        setTimeout(timer, SPEED * 10);\n    }\n    else if(CURR_YEAR == 2002)\n    {\n        setTimeout(timer, SPEED * 1.8);\n    }\n    else{\n        setTimeout(timer,SPEED);\n    }\n}\n\nsetTimeout(timer,SPEED)\n\nfunction update(){\n    if (CURR_YEAR == 2002){\n        SPEED = 1500;\n        svg.select(\"#texttitle\").transition().duration(SPEED)\n            .tween(\"text\",function (){\n                var i = d3.interpolate(this.textContent, CURR_YEAR);\n                return function(t) {\n                    this.textContent = Math.round(i(t));\n                };\n            });\n        var easing = \"bounce\";\n    } else {\n        SPEED = 200;\n        svg.select(\"#texttitle\").text(CURR_YEAR);\n        var easing = \"linear\";\n    }\n\n    svg.selectAll(\".bar\")\n        .transition()\n        .duration(SPEED)\n        .ease(easing)\n        .attr(\"width\", function (d){ return x(d[\"year\"+CURR_YEAR]) - x(0)})\n\n}</script>"
      description: "Phone Connection in Service Areas - India"
      created_at: "2016-08-24T03:24:41Z"
      updated_at: "2016-08-24T03:56:10Z"
      api: 
        - "d3.scale.linear"
        - "d3.scale.ordinal"
        - "d3.svg.axis"
        - "d3.select"
        - "d3.csv"
        - "d3.nest"
        - "d3.interpolate"
      readme: "Built with [blockbuilder.org](http://blockbuilder.org)"
      uid: "adiamaan92_fc203b4dec60c1dad51a7a60f20813da"
    - 
      code: "<script>\n/* global d3, console */\n\nvar keys = [\"Oro\", \"Plata\", \"Bronce\"];\n\nvar width = window.innerWidth\n|| document.documentElement.clientWidth\n|| document.body.clientWidth;\n\n\nvar height = window.innerHeight\n|| document.documentElement.clientHeight\n|| document.body.clientHeight;\nheight = height - 150;\n\nvar svg = d3.select(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height),\n    margin = {top: 20, right: 60, bottom: 50, left: 20},\n    width = width- margin.left - margin.right,\n    height = height - margin.top - margin.bottom;\n\nvar parseDate = d3.timeParse(\"%Y\");\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal()\n      .domain(keys)\n      .range([\"#ffd700\", \"#C0C0C0\", \"#cd7f32\"]);\n\nvar stack = d3.stack()\n    .offset(d3.offsetNone);\n\nvar nest = d3.nest()  \n    .key(function(d) { return d.date; })    \n    .key(function(d) { return d.medal; })\n    .rollup(function (leaves) { return leaves.length; });\n\nvar area = d3.area()\n    .x(function(d) { return x(d.data.key); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); });\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  g.append(\"g\")\n    .attr(\"class\", \"layers\");  \n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\");\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .append(\"text\")\n      .text(\"Total acumulado de medallas\") \n      .style(\"font-size\", \"14pt\")\n      .attr(\"transform\", \"translate(\" + ( width + margin.right/3) + \", 0) rotate(90)\");\n\n\n\n\n\n\nd3.csv(\"olympic_medals_Colombia.csv\", type, function(error, data) {\n  if (error) throw error;\n\n\n  var nestedData = nest.entries(data);\n  \n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  var table = nestedData.reduce(function (p, c) {\n    //Initialize on zero\n    keys.forEach(function (k) { \n      c[k]=0;\n    });\n    c.values.forEach(function (d) {\n      c[d.key] = d.value;\n    });\n    //nest converts the date into string, so we need to convert it back\n    c.key = new Date(c.key);\n    return p.concat(c);\n\n  }, []);\n\n  var filledTable = [];\n  var prevDate = new Date(x.domain()[0]-4, 0, 0);\n  table.forEach(function (d) {\n    filledTable.push(d);\n    //Is there a hole?\n    if ((d.key.getFullYear() - prevDate.getFullYear()) > 4) {\n      //Fill the whole with many zero olympics as necessary\n      for (var y = prevDate.getFullYear() + 4; y < d.key.getFullYear(); y+=4) {\n        var zeroMedals = {};\n        for(var i = 0 ; i < keys.length ; ++i){\n          zeroMedals[keys[i]] = 0;        \n        }\n        zeroMedals.key=new Date(y, 0);\n        filledTable.push(zeroMedals);\n      }\n    } \n\n    prevDate = d.key;\n  });\n  \n  stack.keys(keys);\n  filledTable = filledTable.sort(function (a,b) { \n    return d3.ascending(a.key, b.key); \n  });\n\n  stack.keys(keys);  \n  z.domain(keys);\n  \n\n  //We need to have 0 medals when data is missing\n  var datesWithOlympics = d3.timeYear.range(\n            x.domain()[0],\n            new Date(x.domain()[1].getFullYear()+1, 0),\n            4);\n\n\n\n  updateToDateIndex(datesWithOlympics.length-1);\n\n  function updateToDateIndex(i) {\n    console.log(\"update To  i\"+  datesWithOlympics[i]);\n    var layers = stack(filledTable.filter(function (d) { \n      return d.key<= datesWithOlympics[i]; \n    }));\n\n    update(layers);\n\n    if (i === datesWithOlympics.length-1) {\n      i=-1;\n    }\n    \n    // setTimeout(function () {updateToDateIndex(i+1)}, 500);\n  }\n\n  function update(layers) {\n    function pathTween(d) {\n      var interpolate = d3.scaleQuantile()\n              .domain([0,1])\n              .range(d3.range(1, d.length + 1));\n      return function(t) {\n          return area(d.slice(0, interpolate(t)));\n      };\n    }\n\n    y.domain([0, 1+  d3.max(layers, \n    function (d) { \n      return d3.max(d, \n        function (e) {\n          return e[1];\n        }); \n    })]);\n\n    var layer = g.select(\".layers\").selectAll(\".layer\")\n      .data(layers)\n\n    var layerEnter = \n      layer.enter().append(\"g\")\n        .attr(\"class\", \"layer\");\n\n    layerEnter.append(\"path\")\n        .attr(\"class\", \"area\")\n        .style(\"fill\", function(d) { return z(d.key); })\n        .transition()\n        .duration(5000)\n        .attrTween(\"d\", pathTween);\n\n        \n\n    layerEnter.filter(function(d) { return d[d.length - 1][1] - d[d.length - 1][0] > 0.01; })\n      .append(\"text\")\n        .attr(\"x\", width - 6)\n        .attr(\"y\", function(d) { return y((d[d.length - 1][0] + d[d.length - 1][1]) / 2); })\n        .attr(\"dy\", \".35em\")\n        .style(\"font\", \"16px sans-serif\")\n        .style(\"text-anchor\", \"end\")\n        .text(function(d) { return d.key; });\n\n    // layer.select(\"g .area\")\n    //   .transition()\n    //     .duration(1000)\n    //     .attrTween(\"d\", pathTween)\n        // .attr(\"d\", area);\n\n    // layer.selectAll(\"g text\")\n    //     .attr(\"x\", width - 6)\n    //     .attr(\"y\", function(d) { return y((d[d.length - 1][0] + d[d.length - 1][1]) / 2); })\n    //     .attr(\"dy\", \".35em\")\n    //     .style(\"font\", \"13px sans-serif\")\n    //     .style(\"text-anchor\", \"end\")\n    //     .text(function(d) { return d.key; });\n\n    layer.exit().remove();\n\n    d3.select(\".axis--x\")\n      .call(d3.axisBottom(x)\n        .tickSizeInner(-height)\n        // .tickSizeOuter(10)\n        .tickPadding(15)\n        .tickValues(datesWithOlympics));\n\n    d3.select(\".axis--y\")\n      .call(d3.axisRight(y)\n        .ticks(10, \"\")\n        // .tickPadding(15)\n        .tickSize(width))\n\n\n  }\n\n\n\n\n\n\n\n});\n\n\n\n\nfunction type(d) {\n  d.date = parseDate(d.year);\n  d.total_gold = +d.total_gold;\n  d.total_silver = +d.total_silver;\n  d.total_bronze = +d.total_bronze;\n  d.investment = +d.investment;\n  d.medal = d.medal.trim();\n  return d;\n}\n\n</script>"
      description: "Colombia en los olímpicos"
      created_at: "2016-08-22T21:37:16Z"
      updated_at: "2016-08-23T16:14:50Z"
      api: 
        - "d3.select"
        - "d3.timeParse"
        - "d3.scaleTime"
        - "d3.scaleLinear"
        - "d3.scaleOrdinal"
        - "d3.stack"
        - "d3.nest"
        - "d3.area"
        - "d3.csv"
        - "d3.extent"
        - "d3.ascending"
        - "d3.timeYear.range"
        - "d3.scaleQuantile"
        - "d3.range"
        - "d3.max"
        - "d3.axisBottom"
        - "d3.axisRight"
      readme: "Total de medallas de Colombia en los Juegos Olíimpicos\n---\n\nInspirado en el artículo de lasillavacia \n\nhttp://lasillavacia.com/historia/la-plata-del-deporte-se-vuelve-oro-57592\n\npero tratando de mejorar el gráfico para que represente de mejor manera el total de medallas.\n\nDatos tomados de wikipedia."
      uid: "john-guerra_653dff16b54df2ad2682c8dd0cfbe27a"
    - 
      code: "<script>\n    d3.csv(\"deaths.csv\")\n        .row(row)\n        .get(visualize)\n    ;\n    function row(d) {\n        var gender = { \"1\": \"male\", \"2\": \"female\" };\n        d.SEX = gender[d.SEX];\n\n        return d;\n    } // row()\n\n    function visualize(error, data) {\n        if(error) throw error;\n\n        var nested = d3.nest()\n                // First group by CAUSE\n                .key(function(d) { return d.CAUSE; })\n                .rollup(function(leaves) {\n                    var nested = d3.nest()\n                          .key(function(d) { return d.SEX; })\n                          .rollup(function(leafs) { return leafs.length; })\n                          .object(leaves)\n                    ;\n                    nested[\"all\"] = d3.sum(d3.values(nested))\n                    return nested;\n                  })\n                .map(data)\n                .entries()\n                .sort(function (a, b) {\n                    return d3.descending(a.value.all, b.value.all);\n                  })\n          , causes = d3.stack()\n                .keys([\"female\", \"male\"])\n                .value(function(d, key) { return d.value[key] || 0; })\n               (nested)\n        ;\n        var  margin = { top: 20, bottom: 200, left: 40, right: 20 }\n          , height = 500 - margin.top  - margin.bottom\n          , width  = 960 - margin.left - margin.right\n          , x = d3.scaleBand()\n                .domain(nested.map(function(d) { return d.key; }))\n                .rangeRound([0, width])\n          , xAxis = d3.axisBottom().scale(x)\n          , y = d3.scaleLinear()\n                .domain([0, d3.max(nested, function(d) { return d.value.all; })])\n                .range([height, 0])\n          , yAxis = d3.axisLeft().scale(y)\n        ;\n        var tip = d3.tip().attr('class', 'd3-tip').direction('s')\n          , svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .call(tip)\n              .append(\"g\")\n                .attr(\"transform\", \"translate(\"+margin.left+\",\"+margin.top+\")\")\n          , layers = svg\n              .append(\"g\")\n                .attr(\"class\", \"bars\")\n              .selectAll(\"g\")\n                .data(causes)\n        ;\n        layers\n          .enter().append(\"g\")\n            .attr(\"class\", function(d) { return d.key; })\n            .each(function(layer) {\n                var rect = d3.select(this).selectAll(\"rect\")\n                    .data(function(d) { return d; })\n                ;\n                rect\n                  .enter().append(\"rect\")\n                    .attr(\"class\", \"bar\")\n                    .attr(\"x\", function(d) { return x(d.data.key); })\n                    .attr(\"width\", x.bandwidth())\n                    .attr(\"y\", function(d) { return y(d[1]); })\n                    .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n                    .on(\"mouseover\", function(d) {\n                        tip\n                            .html(\"<h4>\" + d.data.key + \"</h4>\"\n                                + \"<ul>\"\n                                + \"<li>\"\n                                  + layer.key + \": \" + d.data.value[layer.key]\n                                  + \"</li>\"\n                                + \"<li>Total: \" + d.data.value.all + \"</li>\"\n                                + \"</ul>\"\n                              )\n                            .show()\n                        ;\n                      })\n                    .on(\"mouseout\", tip.hide)\n                ;\n              })\n        ;\n        var axes = svg\n          .append(\"g\")\n            .attr(\"class\", \"axes\")\n        ;\n        axes\n          .append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis)\n          .selectAll(\".tick text\")\n            .attr(\"y\", 0)\n            .attr(\"x\", -10)\n            .attr(\"dy\", \".35em\")\n            // Rotate the axis tick labels a little bit more gently\n            .attr(\"transform\", \"rotate(-60)\")\n            .style(\"text-anchor\", \"end\")\n        ;\n        axes\n          .append(\"g\")\n          .attr(\"class\", \"y axis\")\n          .call(yAxis)\n        ;\n      }\n  </script>"
      description: "Bar Chart IV: Switchable bar charts"
      created_at: "2016-08-21T07:35:42Z"
      updated_at: "2016-08-22T14:49:10Z"
      api: 
        - "d3.csv"
        - "d3.nest"
        - "d3.sum"
        - "d3.values"
        - "d3.descending"
        - "d3.stack"
        - "d3.scaleBand"
        - "d3.axisBottom"
        - "d3.scaleLinear"
        - "d3.max"
        - "d3.axisLeft"
        - "d3.tip"
        - "d3.select"
      readme: "## Visualizing causes of death in Zambia: IV\n### From the 2015 Living Conditions Survey\n\n#### Introduction\nWe left off with a [basic bar chart in d3v4](https://bl.ocks.org/seemantk/3f9d3a1df4a2b834a78b140af0137b23) showing the number of people who died in Zambia last year by given causes. Since our dataset is richer than that, we'll add gender to the visualization.  So, we'll show:\n 1. As before, the total number of people who died by each cause.\n 2. The total number of females who died by each cause.\n 3. The total number of males who died by each cause.\n\n The first thing to note in this chart is that the radio buttons above the chart enable the user to choose which subset of the data they want to see.\n The heights of the bars change, or _flash_, to a new height representing the user's choice.  So, if you choose \"Male\", the bars will change to show the number of male deaths for each cause.\n\n For this example, we only need to know this: at any given time, the user can choose \"Male\", \"Female\", or \"All\" and the chart must change to correspond.  We'll discover *how that happens* in the next example.\n\n#### Fundamentals\n\nLet's dive deeper into [`d3.nest()` and `d3.csv()`](http://bl.ocks.org/phoebebright/raw/3176159/). Please take the time to review the linked tutorial.\n\nPreviously, we partitioned the array by `CAUSE`, and simply had to get the length of the resulting sub-array belonging to each `CAUSE`.\n\nNow we need to partition twice before counting.  As before we partition the array by `CAUSE`.  Then for each CAUSE, we partition its resulting array by `SEX`.\n\nNow, we simply get the length of the resulting sub-array belonging to each `SEX` in each `CAUSE`.\n\nSomething to note.  The dataset has `SEX` encoded as either \"1\" or \"2\". In the questionnaire used by the survey takers, they provide the following interpretation: 1 = Male, 2 = Female.\n\n#### Beyond the Fundamentals\n\nWe need to change \"1\" to \"Male\" and \"2\" to \"Female\" in the SEX column for each record.\n   * The perfect time to do this is as we're reading in each row.\n   * Fortunately, [d3.csv() lets us do that](https://github.com/d3/d3-request#csv).\n     * We use a Javascript Object as a dictionary in `function row` to decode the gender field.     \n\nWe need to partition the data twice. So, we use [`nest.key()`](https://github.com/d3/d3-collection/blob/master/README.md#nest_key) twice:\n\n```\n     d3.nest()\n       .key(function(d) { return d.CAUSE; })\n       .key(function(d) { return d.SEX; })\n       .rollup(function(leaves) { return leaves.length; })\n       .entries(data)\n```\n\n This looks just like the previous examples, but with one extra `nest.key()` step.  We would wind up with an array of objects that look something like:\n\n```\n    {\n        key: \"FEVER/MALARIA\"\n      , values: [{key: \"male\", value: 113}, {key: \"female\", value: 95}]\n    }\n```\n\nThis is a great start. We show the all causes (keys) on the x-axis, so it makes sense to have that as the top-level key. Let's think through how we'll use the `values` part of the data object.\n\nIn the above example, `values` is an array of two objects, one object represents male deaths, and the other object represents female deaths.  Since we want the user to be able to choose which subset of the data they want to see\n\n\n```\n d3.nest()\n         .key(function(d) { return d.CAUSE; })\n         .key(function(d) { return d.SEX; })\n         .rollup(function(leaves) { return leaves.length; })\n         .entries(data)\n         .map(function(d) {\n             var obj = {\n                   cause: d.key\n                 , all: d3.sum(d.values, function(v) { return v.value; })\n               }\n             ;\n             d.values.forEach(function(v) {  obj[v.key] = v.value; });\n\n             return obj;\n           })\n```\n\nAnd this results in an array of objects that look like:\n\n```\n    {\n        cause: \"FEVER/MALARIA\"\n      , all: 208\n      , female: 95\n      , male: 113\n    }\n```\n\nThis is a nice, straightforward data format for us to use to power all three bar charts.\n\n#### Further Discussion\nNext time, we'll explore how to cause the HTML elements to trigger change in the chart, to show our new enriched dataset.\n"
      uid: "seemantk_9322bd4124af02d44d596cdfd247459c"
    - 
      code: "<script>\n    d3.csv(\"deaths.csv\", function(error, data) {\n        if(error) throw error;\n\n        var causes = d3.nest()\n                .key(function(d) { return d.CAUSE; })\n                .rollup(function(leaves) { return leaves.length; })\n                .map(data)\n                .entries()\n                .sort(function(a, b) {\n                    return d3.descending(a.value, b.value);\n                  })\n          , extent = [0, d3.max(causes, function(d) { return d.value; })]\n        ;\n        var  margin = { top: 20, bottom: 200, left: 40, right: 20 }\n          , height = 500 - margin.top - margin.bottom\n          , width = 700 - margin.left - margin.right\n          // New scale type\n          , x = d3.scaleBand()\n                .domain(causes.map(function(d) { return d.key; }))\n                .rangeRound([0, width])\n          // Flattened namespaces\n          , y = d3.scaleLinear()\n                .domain(extent)\n                .range([height, 0])\n          , xAxis = d3.axisBottom().scale(x)\n          , yAxis = d3.axisLeft().scale(y)\n          , tip = d3.tip().attr('class', 'd3-tip').direction('s')\n          , svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .call(tip)\n              .append(\"g\")\n                .attr(\"transform\", \"translate(\"+margin.left+\",\"+margin.top+\")\")\n          , rect = svg.selectAll(\"rect\")\n                .data(causes)\n        ;\n        rect\n          .enter().append(\"rect\")\n            .attr(\"x\", function(d) { return x(d.key); })\n            // New function, instead of scaleBand()\n            .attr(\"width\", x.bandwidth())\n            .attr(\"y\", function(d) { return y(d.value); })\n            .attr(\"height\", function(d) { return height - y(d.value); })\n            .on(\"mouseover\", function(d) {\n                tip\n                    .html(function() {\n                        return \"<h4>\" + d.key + \"</h4>\"\n                          + \"<ul>\"\n                          + \"<li>Total deaths: \" + d.value + \"</li>\"\n                          + \"</ul>\"\n                      })\n                    .show()\n                ;\n              })\n            .on(\"mouseout\", tip.hide)\n        ;\n        var axes = svg\n          .append(\"g\")\n            .attr(\"class\", \"axes\")\n        ;\n        axes\n          .append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis)\n        ;\n        axes.select(\".x.axis\").selectAll(\".tick text\")\n            .attr(\"y\", 0)\n            .attr(\"x\", -10)\n            .attr(\"dy\", \".35em\")\n            // Rotate the axis tick labels a little bit more gently\n            .attr(\"transform\", \"rotate(-60)\")\n            .style(\"text-anchor\", \"end\")\n        ;\n        axes\n          .append(\"g\")\n          .attr(\"class\", \"y axis\")\n          .call(yAxis)\n        ;\n      })\n    ;\n  </script>"
      description: "Bar Chart (d3v4): Causes of Death in Zambia"
      created_at: "2016-08-19T00:56:36Z"
      updated_at: "2016-08-22T14:48:20Z"
      api: 
        - "d3.csv"
        - "d3.nest"
        - "d3.descending"
        - "d3.max"
        - "d3.scaleBand"
        - "d3.scaleLinear"
        - "d3.axisBottom"
        - "d3.axisLeft"
        - "d3.tip"
        - "d3.select"
      readme: "## Visualizing causes of death in Zambia: III\n### From the 2015 Living Conditions Survey\n\n#### Introduction\nWe are ready to port [the bar chart from last time](https://bl.ocks.org/seemantk/a75c6cf01cd341b748d4bd2f9692435a) to use d3v4  This will give us access to the [latest innovations available to us](https://github.com/d3/d3/blob/master/CHANGES.md) in the d3 library.\n\n#### Fundamentals\n 1. We use the new [d3.scaleBand](https://github.com/d3/d3-scale#band-scales) is a special type of ordinal scale designed for bar charts like this.  So we use it for the `x` scale.\n 2. We use the new [d3.axisBottom](https://github.com/d3/d3/blob/master/CHANGES.md#axes-d3-axis) for the `x` axis.\n   * We can now remove the axis styling from the document's `<style>` section.\n 3. We use [Namespace flattening](https://github.com/d3/d3/blob/master/CHANGES.md#scales-d3-scale) for the linear scales\n 4. We use [v0.7.0 of d3-tip](https://github.com/Caged/d3-tip/commit/75d994c9c47a19db0189956bc9b3ce22c58592b0), which works with d3v4.\nLook for the comments in the code to guide you to the changes.\n\n#### Beyond the Fundamentals\nNotice that we've switched from `nest.entries()` to [`nest.map.entries()`](https://github.com/d3/d3-collection/blob/master/README.md#nest_map).\n\nLet's break it down:\n\n```\n    d3.nest()\n            .key(function(d) { return d.CAUSE; })\n            .rollup(function(leaves) { return leaves.length; })\n            .map(data)\n```\n\nInstead of an array of key/value pairs, this gives us a `d3.map()` object, where each key is the CAUSE and its value is the number of deaths. Something like:\n\n```\n{$ABDOMINAL PAINS: 28, $ACCIDENT: 45, $ASTHMA: 23, $BOILS: 3, ....}\n```\n\nwith extra properties\n\n#### Analysis\nNow that we are using the latest version of d3, we can take advantage of the years of accummulated knowledge and experience that went into the new version.  All the documentation and most of the new examples use d3v4 as their context, which means it will be more and more relevant to improving our chart.\n\n#### Improvements\nIf you're like me, you might remember that each row in the datset represents information, like this:\n`{{CAUSE:\"FEVER/MALARIA\", AGE:\"38\", OTHER:\"\", SEX:\"1\"}}`.\n\nLet's explore the dataset more deeply.\nNext, we'll [visualize deaths by cause by gender]().\n"
      uid: "seemantk_3f9d3a1df4a2b834a78b140af0137b23"
    - 
      code: "<script>\n    d3.csv(\"deaths.csv\", function(error, data) {\n        if(error) throw error;\n        /*\n        ** At this point, the CSV file exists as an\n        ** array of javascript Objects, and stored\n        ** in the 'data' variable.\n        **\n        */\n\n        var causes = d3.nest()\n                // Group by Cause\n                .key(function(d) { return d.CAUSE; })\n                .rollup(function(leaves) {\n                    // 'leaves' is an array of objects that have the same CAUSE\n                    // The length of the array is the number of people who died\n                    // from the same CAUSE.\n                    return leaves.length;\n                  })\n                .entries(data)\n                .sort(function(a, b) {\n                    // Sort the causes in descending order by total # of deaths\n                    return d3.descending(a.values, b.values);\n                  })\n          , extent = [0, d3.max(causes, function(d) { return d.values; })]\n        ;\n        var  margin = { top: 20, bottom: 200, left: 40, right: 20 }\n          , height = 500 - margin.top - margin.bottom\n          , width = 700 - margin.left - margin.right\n          , x = d3.scale.ordinal()\n                .domain(causes.map(function(d) { return d.key; }))\n                .rangeRoundBands([0, width])\n          , y = d3.scale.linear()\n                .domain(extent)\n                .range([height, 0])\n          , xAxis = d3.svg.axis()\n                .orient(\"bottom\")\n                .scale(x)\n          , svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n              .append(\"g\")\n                .attr(\"transform\", \"translate(\"+margin.left+\",\"+margin.top+\")\")\n          , rect = svg.selectAll(\"rect\")\n                .data(causes)\n        ;\n        rect\n          .enter().append(\"rect\")\n            .attr(\"x\", function(d) { return x(d.key); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"y\", function(d) { return y(d.values); })\n            .attr(\"height\", function(d) { return height - y(d.values); })\n            .style(\"stroke\", \"red\")\n            .style(\"fill\", \"steelblue\")\n        ;\n        svg\n          .append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis)\n        ;\n        svg.select(\".x.axis\").selectAll(\".tick text\")\n            .attr(\"y\", 0)\n            .attr(\"x\", -10)\n            .attr(\"dy\", \".35em\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .style(\"text-anchor\", \"end\")\n        ;\n      })\n    ;\n  </script>"
      description: "Bar Chart I: Causes of Death in Zambia"
      created_at: "2016-08-18T23:16:42Z"
      updated_at: "2016-08-25T18:16:45Z"
      api: 
        - "d3.csv"
        - "d3.nest"
        - "d3.descending"
        - "d3.max"
        - "d3.scale.ordinal"
        - "d3.scale.linear"
        - "d3.svg.axis"
        - "d3.select"
      readme: "## Visualizing causes of death in Zambia: I\n### From the 2015 Living Conditions Survey\n\n#### Introduction\nIn August, I presented a workshop called `d3.fundamentals()` at [BongoHive](http://bongohive.co.zm/) in Lusaka, Zambia. The Zambian Government's [Central Statistical Office](http://www.zamstats.gov.zm/) ran a survey in 2015, to determine the Living Conditions of people throughout the country. They graciously provided anonymized datasets for us to use during the workshop.\n\n[Chinyanta Mwenya](https://twitter.com/@chizzoz), a Zambian hacker, collaborated with me to prepare the datasets for the workshop.  Chinyanta cleaned the dataset and ran statistical analysis using both Excel and R. We took some time to find a smallish dataset that was easy to understand. We settled on the unfortunately morbid Causes of Death dataset.\n\nFor the workshop I assumed a minimal knowledge of HTML and CSS, and no knowledge of Javascript (let alone any knowledge of d3).  So, the workshop turned out to be, essentially From Zero to Bar Chart with d3.\n\nRather than a bunch of pre-done, canned examples, I opted to live-code my way through the agenda.  The journey went as follows:\n\n * Summary/overview of basic structure of an HTML5 document\n    * with a passing glance at the `<style>` section\n * Summary/overview of basic `<svg>` elements\n    * `<rect>`angles and `<circle>`s\n    * SVG coordinate system.\n    * Use blockbuilder to draw an SVG in an HTML document\n * Overview of Javascript\n    * Quick look at `<script>` tags in HTML documents\n    * Use Chrome's developer console to interact with Javascript\n      * `console.log()`\n      * Arrays\n        * Defined as a list of things\n        * Addressing by array index starts at 0, not 1\n        * `Array.length()`\n      * Objects\n        * Defined as a dictionary of Key/Value pairs\n        * Addressing\n          * `.` notation\n          * `[]` notation\n        * Objects can contain Arrays\n        * Arrays can be a list containing Objects\n * Introduce d3 via `d3.select()` to manipulate the `<SVG>`s we drew earlier.\n    * Read `attr`ibutes and `style`s of the SVG objects (width, height, fill, stroke)\n    * Change those `attr`ibutes\n    * Explore `attr`ibutes and `style`s of HTML objects (`<div>`s)\n * Join data to a selection\n    * Join an array of numbers, to a selection of `<div>`s\n * Draw a bar chart using a dummy array of numbers\n    * First, use `<div>`s, as they tend to align pretty automatically\n      * Use `background-color` and `border`\n    * Draw it again, using `SVG <rect>`s instead.\n      * Use `fill` and `stroke`\n * Open a data file using `d3.csv()`\n    * Revisit Arrays and Objects\n\n\n\n\n\nThis bl.ock is the result of that demo.  It is presented here with minimal cleanup (spaces/indentations and moving variable declarations near the top).\n\nThe goal with this first visualization was to introduce d3 concepts while live-coding. So we built a bar chart showing the number of people who died from each cause listed.\n\n#### Fundamentals\n 1. The `<style>` section contains styling for the axis:\n   * It cleans up the lines, making them fine and sharp.\n 2. We use [d3.csv()](https://github.com/d3/d3-3.x-api-reference/blob/master/CSV.md) to read in the data file:\n   * the data file has one record per row\n   * the data is read in as an array of objects (one object per record or row) that look something like:\n     * `{CAUSE:\"FEVER/MALARIA\", AGE:\"38\", OTHER:\"\", SEX:\"1\"}`\n 3. We use [d3.nest()](https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#d3_nest) to group the array of objects by `CAUSE`\n   * We use [nest.key()](https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#nest_key) to do the actual grouping.  It takes a callback function that tells it how to get an object's CAUSE field.\n   * We use [nest.entries()](https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#nest_entries) to get an array of objects that look something like:\n     * `{ key: \"FEVER/MALARIA\", values: [] }`\n       * `values` is an array of objects with the CAUSE specified by `key`\n   * We use [nest.rollup()](https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#nest_rollup) to calculate the length of the `values` array in each object.\n     * The length of the`values` array is the # of people that died of CAUSE, or `key`.\n 4. We use [scales](https://github.com/d3/d3-3.x-api-reference/blob/master/Scales.md) to map from data space to screen space.\n  * Causes along the x-axis using an [ordinal scale](https://github.com/d3/d3-3.x-api-reference/blob/master/Ordinal-Scales.md)\n  * The bar heights correspond to the number of deaths, so we use a [linear scale](https://github.com/d3/d3-3.x-api-reference/blob/master/Quantitative-Scales.md#linear-scales) there.\n 5. We draw an [SVG](https://developer.mozilla.org/en-US/docs/Web/SVG) [`<rect>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/rect) for each bar in the bar chart.\n  * Remember: [SVG coordinates start at the top left](https://www.dashingd3js.com/using-the-svg-coordinate-space).\n    * The origin is at the top left corner of the SVG,\n      * Positive x-axis points to the right.\n      * Positive y-axis points down.\n    * We use    [scale.range()](https://github.com/d3/d3-3.x-api-reference/blob/master/Quantitative-Scales.md#linear_range) to flip the y-axis (`scale.range([height,0])`).  This allows us to present the data in a more intuitive way (with origin at bottom left).\n  * We draw a `<rect>` for each bar, so we [need to specify](http://tutorials.jenkov.com/svg/rect-element.html):\n    * coordinate of top left corner of the bar:\n      * x-coordinate represents the cause of deaths\n      * y-coordinate represents the number of deaths\n    * width of the bar:\n      * the width of an [ordinal.rangeBand()](https://github.com/d3/d3-3.x-api-reference/blob/master/Ordinal-Scales.md#ordinal_rangeBand)\n    * height of the bar:\n      * The base of each rectangle will be at the bottom of the SVG (at `height` in SVG (`y`)coordinates).  So, the height is the difference between the y-coordinate of the top-left corner and y-coordinate of the base\n 6. We label the bar by using the axis labels of a [d3.svg.axis()](https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Axes.md#axis)\n  * The tick labels are the Causes.\n  * We use [transform\\#rotate()][rotate-reference-link] to rotate the labels so they don't overlap each other.\n    * The labels are rotated clockwise by 90 degrees (-90) to flow down-to-up\n\n  [rotate-reference-link]: https://developer.mozilla.org/en-US/docs/Web/CSS/transform#rotate()\n\n#### Analysis\nThis is a great start to visualizing this dataset.  We can easily tell the relative seriousness of each cause of death.  We can see that FEVER/MALARIA kills about 2 times more people as the next cause of death (OTHER, or miscellaneous, causes).\n\n#### Improvements\nIt's a basic chart that gives us a basic insight into the dataset.  By making some small changes, we can vastly improve our insight.\n\nNext, [let's make the chart easier to read](https://bl.ocks.org/seemantk/c020e2e48a02eadb0354e0fc6ccd6aec).\n"
      uid: "seemantk_a75c6cf01cd341b748d4bd2f9692435a"
    - 
      code: "<script>\n    function preproc(d) {\n        d.SEX = d.SEX === \"1\" ? \"Male\" : \"Female\";\n        d.AGE = +d.AGE;\n        return d;\n    } // preproc()\n\n    var tip = d3.tip().attr('class', 'd3-tip').direction('s');\n\n    d3.csv(\"deaths.csv\", preproc, function(error, data) {\n        if(error) throw error;\n\n        var  margin = { top: 20, bottom: 200, left: 40, right: 20 }\n          , height = 500 - margin.top - margin.bottom\n          , width = 960 - margin.left - margin.right\n        ;\n        var color = d3.scaleOrdinal()\n              .domain([\"male\", \"female\"])\n              .range([\"steelblue\", \"red\"])\n        ;\n        var causes = d3.nest()\n            .key(function(d) { return d.CAUSE; })\n            .rollup(function(leaves) {\n                var m = leaves.filter(function(l) { return l.SEX === \"Male\"; })\n                  , f = leaves.filter(function(l) { return l.SEX === \"Female\"; })\n                ;\n                return {\n                      male: m.length\n                    , female: f.length\n                    , all: leaves.length\n                  }\n                ;\n              })\n            .entries(data)\n            .map(function(d) {\n                return {\n                      cause: d.key\n                    , male: d.value.male\n                    , female: d.value.female\n                    , all: d.value.all\n                  }\n                ;\n              })\n            .sort(function(a, b) { return d3.descending(a.all, b.all); })\n        ;\n        var stack = d3.stack()\n            .keys([\"male\", \"female\"])\n        ;\n        var x = d3.scaleBand()\n              .domain(causes.map(function(d) { return d.cause; }))\n              .rangeRound([0, width])\n          , y = {\n                  all: d3.scaleLinear()\n                    .domain([0, d3.max(causes, function(d) { return d.all; })])\n                    .range([0,100])\n                , male: d3.scaleLinear()\n                    .domain([0, d3.max(causes, function(d) { return d.male; })])\n                    .range([0,100])\n                , female: d3.scaleLinear()\n                    .domain([0, d3.max(causes, function(d) { return d.female; })])\n                    .range([0,100])\n              }\n        ;\n        var svg = d3.select(\"body\")\n          .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .call(tip)\n          .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        ;\n        var gradient = d3.select(\"svg\")\n          .append(\"defs\")\n            .selectAll(\"linearGradient\")\n            .data(causes, function(d) { return d.cause; })\n        ;\n        gradient\n          .enter().append(\"linearGradient\")\n            .attr(\"id\", function(d, i) { return \"gradient_\" + i; })\n            .attr(\"x1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\"y1\", 1)\n            .attr(\"y2\", 0)\n            .each(function() {\n                d3.select(this).selectAll(\"stop\")\n                    .data(\n                          [\"male end\", \"male mid\", \"female mid\", \"female end\", \"empty\"]\n                        , function(d) { return d; }\n                      )\n                  .enter().append(\"stop\")\n                    .attr(\"class\", function(d) { return d; })\n                    .attr(\"offset\", \"0%\")\n                ;\n              })\n        ;\n        var g = svg\n          .append(\"g\")\n            .attr(\"class\", \"causes\")\n        ;\n        g\n          .selectAll(\"rect\")\n            .data(causes)\n          .enter().append(\"rect\")\n            .attr(\"class\", \"causes\")\n            .attr(\"x\", function(d) { return x(d.cause); })\n            .attr(\"width\", x.bandwidth())\n            .attr(\"y\", 0)\n            .attr(\"height\", height)\n            .style(\"fill\", function(d, i) { return \"url(#gradient_\" + i + \")\"; })\n            .style(\"stroke\", \"white\")\n            .on(\"mouseover\", function(d) {\n                tip\n                    .html(function() {\n                        return \"<h4>\" + d.cause + \"</h4>\"\n                          + \"<ul>\"\n                          + \"<li>Males: \" + d.male + \"</li>\"\n                          + \"<li>Females: \" + d.female + \"</li>\"\n                          + \"<li>Total: \" + d.all + \"</li>\"\n                          + \"</ul>\"\n                      })\n                    .show()\n                ;\n              })\n            .on(\"mouseout\", tip.hide)\n        ;\n        var xAxis = d3.axisBottom()\n            .scale(x)\n        ;\n        svg\n          .append(\"g\")\n          .attr(\"class\", \"x axis\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(xAxis)\n        ;\n        svg.select(\".x.axis\").selectAll(\".tick text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", -10)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(-60)\")\n          .style(\"text-anchor\", \"end\");\n        ;\n        d3.selectAll(\"input\").on(\"change\", function() {\n            this.value == \"all\" ? stackUp() : unStack(this.value);\n          })\n        ;\n        stackUp();\n\n        var t = d3.transition()\n              .duration(250)\n              .ease(d3.easeLinear)\n        ;\n        function unStack(dim) {\n            d3.select(\"svg\").select(\"defs\").selectAll(\"linearGradient\")\n                .each(function(d) {\n                    if(dim === \"female\") {\n                        d3.select(this).selectAll(\".mid\")\n                          .transition(t)\n                            .attr(\"offset\", \"0%\")\n                        ;\n                        d3.select(this).selectAll(\".female.end, .empty\")\n                          .transition(t)\n                            .attr(\"offset\", y.female(d.female) + \"%\")\n                        ;\n                    }\n                    else {\n                        d3.select(this).selectAll(\".mid, .female.end, .empty\")\n                          .transition(t)\n                            .attr(\"offset\", y.male(d.male) + \"%\")\n                        ;\n                    }\n                  })\n            ;\n        } // unStack()\n\n        function stackUp() {\n            d3.select(\"svg\").select(\"defs\").selectAll(\"linearGradient\")\n                .each(function(d) {\n                    d3.select(this).selectAll(\".mid\")\n                      .transition(t)\n                        .attr(\"offset\", y.all(d.male) + \"%\")\n                    ;\n                    d3.select(this).selectAll(\".female.end, .empty\")\n                      .transition(t)\n                        .attr(\"offset\", y.all(d.male + d.female) + \"%\")\n                    ;\n                  })\n        } // stackUp()\n      })\n    ;\n  </script>"
      description: "fresh block"
      created_at: "2016-08-17T20:42:02Z"
      updated_at: "2016-08-17T20:45:39Z"
      api: 
        - "d3.tip"
        - "d3.csv"
        - "d3.scaleOrdinal"
        - "d3.nest"
        - "d3.descending"
        - "d3.stack"
        - "d3.scaleBand"
        - "d3.scaleLinear"
        - "d3.max"
        - "d3.select"
        - "d3.axisBottom"
        - "d3.selectAll"
        - "d3.transition"
      readme: "Built with [blockbuilder.org](http://blockbuilder.org)"
      uid: "seemantk_1961965b6897653e750cdc12b8c8abdb"
    - 
      code: "<script>\n\nchart(\"data.csv\", \"orange\");\n\nvar datearray = [];\nvar colorrange = [];\n\n\nfunction chart(csvpath, color) {\n\nif (color == \"blue\") {\n  colorrange = [\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"];\n}\nelse if (color == \"pink\") {\n  colorrange = [\"#980043\", \"#DD1C77\", \"#DF65B0\", \"#C994C7\", \"#D4B9DA\", \"#F1EEF6\"];\n}\nelse if (color == \"orange\") {\n  colorrange = [\"#B30000\", \"#E34A33\", \"#FC8D59\", \"#FDBB84\", \"#FDD49E\", \"#FEF0D9\"];\n}\nstrokecolor = colorrange[0];\n\nvar format = d3.time.format(\"%Y-%m-%d\");\n\nvar margin = {top: 20, right: 40, bottom: 30, left: 30};\nvar width = document.body.clientWidth - margin.left - margin.right;\nvar height = 400 - margin.top - margin.bottom;\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"remove\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"20\")\n    .style(\"visibility\", \"hidden\")\n    .style(\"top\", \"330px\")\n    .style(\"left\", \"45px\");\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height-10, 0]);\n\nvar z = d3.scale.ordinal()\n    .range(colorrange);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .ticks(d3.time.weeks);\n\nvar yAxis = d3.svg.axis()\n    .scale(y);\n\nvar yAxisr = d3.svg.axis()\n    .scale(y);\n\nvar stack = d3.layout.stack()\n    .offset(\"silhouette\")\n    .values(function(d) { return d.values; })\n    .x(function(d) { return d.date; })\n    .y(function(d) { return d.value; });\n\nvar nest = d3.nest()\n    .key(function(d) { return d.key; });\n\nvar area = d3.svg.area()\n    .interpolate(\"cardinal\")\n    .x(function(d) { return x(d.date); })\n    .y0(function(d) { return y(d.y0); })\n    .y1(function(d) { return y(d.y0 + d.y); });\n\nvar svg = d3.select(\".chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar graph = d3.csv(csvpath, function(data) {\n  data.forEach(function(d) {\n    d.date = format.parse(d.date);\n    d.value = +d.value;\n  });\n\n  var layers = stack(nest.entries(data));\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.y0 + d.y; })]);\n\n  svg.selectAll(\".layer\")\n      .data(layers)\n    .enter().append(\"path\")\n      .attr(\"class\", \"layer\")\n      .attr(\"d\", function(d) { return area(d.values); })\n      .style(\"fill\", function(d, i) { return z(i); });\n\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + width + \", 0)\")\n      .call(yAxis.orient(\"right\"));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis.orient(\"left\"));\n\n  var axisExtentLine = svg.append(\"line\")\n      .attr({\"class\": \"extent\", \"stroke-width\": 5, \"stroke-opacity\": 0.8, stroke: \"red\", \"pointer-events\": \"none\"});\n\n  var cursorExtentLine = svg.append(\"line\")\n      .attr({\"class\": \"extent\", \"stroke-width\": 3, \"stroke-opacity\": 0.8, stroke: \"white\", \"pointer-events\": \"none\"});\n\n  svg.selectAll(\".layer\")\n    .attr(\"opacity\", 1)\n    .on(\"mouseover\", function(d, i) {\n      svg.selectAll(\".layer\").transition()\n      .duration(250)\n      .attr(\"opacity\", function(d, j) {\n        return j != i ? 0.6 : 1;\n    })})\n\n//    .on(\"mousemove\", function(d, i) {\n//      mouse = d3.mouse(this);\n//      mousex = mouse[0];\n//      var invertedx = x.invert(mousex);\n//      invertedx = invertedx.getMonth() + invertedx.getDate();\n//      var selected = (d.values);\n//      for (var k = 0; k < selected.length; k++) {\n//        datearray[k] = selected[k].date\n//        datearray[k] = datearray[k].getMonth() + datearray[k].getDate();\n//      }\n//\n//      mousedate = datearray.indexOf(invertedx);\n//      var currentValue = d.values[mousedate];\n//      pro = currentValue.value || 0;\n//      var posY = currentValue.y0;\n//      var posX = x(currentValue.date);\n//\n//      axisExtentLine.attr({x1: 0, y1: y(pro), x2: 0, y2: height -10 });\n//      cursorExtentLine.attr({x1: posX, y1: y(pro) - (height - y(posY) - 10), x2: posX, y2: height  - (height - y(posY)) });\n//\n//      d3.select(this)\n//      .classed(\"hover\", true)\n//      .attr(\"stroke\", strokecolor)\n//      .attr(\"stroke-width\", \"0.5px\"), \n//      tooltip.html( \"<p>\" + d.key + \"<br>\" + pro + \"</p>\" ).style(\"visibility\", \"visible\");\n//      \n//    })\n//    .on(\"mouseout\", function(d, i) {\n//     svg.selectAll(\".layer\")\n//      .transition()\n//      .duration(250)\n//      .attr(\"opacity\", \"1\");\n//      d3.select(this)\n//      .classed(\"hover\", false)\n//      .attr(\"stroke-width\", \"0px\"), tooltip.html( \"<p>\" + d.key + \"<br>\" + pro + \"</p>\" ).style(\"visibility\", \"hidden\");\n//  })\n    \n  var vertical = d3.select(\".chart\")\n        .append(\"div\")\n        .attr(\"class\", \"remove\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"19\")\n        .style(\"width\", \"1px\")\n        .style(\"height\", \"380px\")\n        .style(\"top\", \"10px\")\n        .style(\"bottom\", \"30px\")\n        .style(\"left\", \"0px\")\n        .style(\"background\", \"#fff\");\n\n  d3.select(\".chart\")\n      .on(\"mousemove\", function(){  \n         mousex = d3.mouse(this);\n         mousex = mousex[0] + 5;\n         vertical.style(\"left\", mousex + \"px\" )})\n      .on(\"mouseover\", function(){  \n         mousex = d3.mouse(this);\n         mousex = mousex[0] + 5;\n         vertical.style(\"left\", mousex + \"px\")});\n});\n}\n</script>"
      description: "Streamgraph of ATFM delay causes"
      created_at: "2016-08-15T13:09:51Z"
      updated_at: "2016-08-16T21:17:13Z"
      api: 
        - "d3.time.format"
        - "d3.select"
        - "d3.time.scale"
        - "d3.scale.linear"
        - "d3.scale.ordinal"
        - "d3.svg.axis"
        - "d3.layout.stack"
        - "d3.nest"
        - "d3.svg.area"
        - "d3.csv"
        - "d3.extent"
        - "d3.max"
        - "d3.mouse"
      readme: "Plot the streamgraph of ATFM delay causes and print highlighted value under the cursor.\n\nMar-2014 - Jul-2016\nDone:\n* extract the data from http://ansperformance.eu\n* plug the data\n* then the miracle happens\n\nTODO:\n* re-enable and re-work mouse hover\n* check data for NA on dates\n* x-axis ticks\n\nforked from/inspired by <a href='http://bl.ocks.org/biovisualize/'>biovisualize</a>'s block: <a href='http://bl.ocks.org/biovisualize/eb1d77fdb9a2b0670381'>Streamgraph extent under cursor</a>"
      uid: "espinielli_950dd177406e91f97ff755c56343c2d3"
    - 
      code: "<script>\n  document.getElementsByTagName('canvas')[0].width = window.innerWidth;\n  document.getElementsByTagName('canvas')[0].height =  window.innerHeight;\n</script>\n\n<script src=\"https://d3js.org/d3.v4.0.0-alpha.40.min.js\"></script>\n\n<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height,\n    searchRadius = 10;\n\nvar color = d3.scaleCategory20();\nvar selectedNodeID = '';\n\nfunction colorLinea(n){\n\tif (n == \"1\"){\n    //other color eventually\n\t}else{\n\t\tvar color = \"blue\";\n\t}\n\treturn color;\n\t\n}\nfunction getCategoryColor(n) {\n\tvar colorSeleccionado = \"#fff\";\n\tvar colorDesSeleccionado = \"#2f2f2f\";\n\n\t if(document.getElementById(\"artistas\").checked)\n\t \t{var colorArtista =  colorSeleccionado;} else{ var colorArtista =  colorDesSeleccionado;}\n\n\t  if(document.getElementById(\"dispositivos\").checked)\n\t \t{var colorDispositivos =  colorSeleccionado;} else{ var colorDispositivos =  colorDesSeleccionado;}\n\n\t  if(document.getElementById(\"libros\").checked)\n\t \t{var colorlibros =  colorSeleccionado;} else{ var colorlibros =  colorDesSeleccionado;}\n\n\t  if(document.getElementById(\"obras\").checked)\n\t \t{var colorobras =  colorSeleccionado;} else{ var colorobras =  colorDesSeleccionado;}\n\n\t  if(document.getElementById(\"sitios\").checked)\n\t \t{var colorsitios =  colorSeleccionado;} else{ var colorsitios =  colorDesSeleccionado;}\n\n\t  if(document.getElementById(\"terminos\").checked)\n\t \t{var colorterminos =  colorSeleccionado;} else{ var colorterminos =  colorDesSeleccionado;}\n\n  var colores_g = [ colorArtista, colorDispositivos,colorlibros,colorobras,colorsitios,colorterminos];\n  return colores_g[n % colores_g.length];\n}\n\nvar simulation = d3.forceSimulation()\n    .force(\"charge\", d3.forceManyBody().strength(-20))\n    .force(\"link\", d3.forceLink().iterations(1).id(function(d) { return d.id; }))\n    .force(\"x\", d3.forceX() )\n    .force(\"y\", d3.forceY() );\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"opacity\", 0);\n\n  d3.json(\"dataold.json\", function(error, graph) {\n  if (error) throw error;\n\n  var users = d3.nest()\n      .key(function(d) { return d.group; })\n      .entries(graph.nodes)\n      .sort(function(a, b) { return b.values.length - a.values.length; });\n\n  color.domain(users.map(function(d) { return d.group; }));\n\n  simulation\n      .nodes(graph.nodes)\n      .on(\"tick\", ticked);\n\n  simulation.force(\"link\")\n      .links(graph.links)\n  \n  d3.select(canvas)\n      .on(\"mousemove\", mousemoved)\n      .call(d3.drag()\n          .container(canvas)\n          .subject(dragsubject)\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\nd3.selectAll(\"input\")\n\t.on(\"change\", ticked);\n\n  function ticked() {\n    context.clearRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n\n    // draw links\n    context.beginPath();\n    var selecID = tooltip.attr('dataid');\n    graph.links.forEach(function(d) {\n    \t//context.strokeStyle = \"#ccc\";\n    \tif (d.source.id == selecID || d.target.id == selecID){\n    \t\tcontext.strokeStyle = \"blue\";\n    \t\td.value = 0;\n    \t} else{\n    \t\tcontext.strokeStyle = \"rgba(255,0,0,0.)\";\n    \t\td.value = 1;\n    \t}\n    \tcontext.moveTo(d.source.x, d.source.y);\n    \tcontext.lineTo(d.target.x, d.target.y);\n    });\n    context.stroke();\n\n    // draw nodes\n    users.forEach(function(user) {\n      context.beginPath();\n      user.values.forEach(drawNode);\n      context.fillStyle = getCategoryColor(user.key); //Color Nodos\n      context.fill();\n    });\n    context.restore();\n  }\n\n  function dragsubject() {\n    return simulation.find(d3.event.x - width / 2, d3.event.y - height / 2, searchRadius);\n  }\n\n  function mousemoved() {\n    var a = this.parentNode, m = d3.mouse(this), d = simulation.find(m[0] - width / 2, m[1] - height / 2, searchRadius);\n    if (!d) return a.removeAttribute(\"href\"), a.removeAttribute(\"title\"), tooltip.style('opacity',0), tooltip.attr('dataid','');\n    a.setAttribute(\"href\", \"http://proyectoidis.org/\" + d.slug);\n    a.setAttribute(\"target\",\"idis\");\n    var selectedNodeID = d.id;\n    loadTooltipThumb(d);\n  }\n});\n\nfunction dragstarted() {\n  if (!d3.event.active) simulation.alphaTarget(1).restart();\n  simulation.fix(d3.event.subject);\n}\n\nfunction dragged() {\n  simulation.fix(d3.event.subject, d3.event.x, d3.event.y);\n}\n\nfunction dragended() {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  simulation.unfix(d3.event.subject);\n}\n\nfunction drawNode(d) {\n  context.moveTo(d.x + 3, d.y);\n  context.arc(d.x, d.y, 2, 0, 2 * Math.PI); //ac se dibujan los circulos. Son arcos de PI x 2 (circulo)\n  // arc(x,y,radio, starting angle, end angle)\n}\n\nfunction loadTooltipThumb(d) {\n  tooltip.select('*').remove();\n\n  var thumbnailURL = d.imagen;\n  var texto = d.name;\n  var top = d3.event.pageY - 140;\n  tooltip\n    .style(\"opacity\", \"1\")\n    .attr('dataid',d.id)\t\n    .html(\"<div class='tooltipText'>\"+ d.name+\"</h1>\")\n    .append('img')\n    .attr('src', thumbnailURL);\n}\n</script>"
      description: "fresh block"
      created_at: "2016-08-11T03:59:55Z"
      updated_at: "2016-08-11T04:12:05Z"
      api: 
        - "d3.scaleCategory20"
        - "d3.forceSimulation"
        - "d3.forceManyBody"
        - "d3.forceLink"
        - "d3.forceX"
        - "d3.forceY"
        - "d3.select"
        - "d3.json"
        - "d3.nest"
        - "d3.drag"
        - "d3.selectAll"
        - "d3.mouse"
      readme: "Built with [blockbuilder.org](http://blockbuilder.org)"
      uid: "gonzam88_9d48b4346fadb6b719a9ce9efb98a899"
    - 
      code: "<script>\n  document.getElementsByTagName('canvas')[0].width = window.innerWidth;\n  document.getElementsByTagName('canvas')[0].height =  window.innerHeight;\n</script>\n\n<script src=\"https://d3js.org/d3.v4.0.0-alpha.40.min.js\"></script>\n\n<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height,\n    searchRadius = 10;\n\nvar color = d3.scaleCategory20();\nvar selectedNodeID = '';\n\nfunction colorLinea(n){\n\tif (n == \"1\"){\n\t\t//var color = \"red\";\n\t}else{\n\t\tvar color = \"blue\";\n\t\tconsole.log(\"match\");\n\t}\n\treturn color;\n\t\n}\nfunction getCategoryColor(n) {\n\tvar colorSeleccionado = \"#fff\";\n\tvar colorDesSeleccionado = \"#2f2f2f\";\n\n\t if(document.getElementById(\"artistas\").checked)\n\t \t{var colorArtista =  colorSeleccionado;} else{ var colorArtista =  colorDesSeleccionado;}\n\n\t  if(document.getElementById(\"dispositivos\").checked)\n\t \t{var colorDispositivos =  colorSeleccionado;} else{ var colorDispositivos =  colorDesSeleccionado;}\n\n\t  if(document.getElementById(\"libros\").checked)\n\t \t{var colorlibros =  colorSeleccionado;} else{ var colorlibros =  colorDesSeleccionado;}\n\n\t  if(document.getElementById(\"obras\").checked)\n\t \t{var colorobras =  colorSeleccionado;} else{ var colorobras =  colorDesSeleccionado;}\n\n\t  if(document.getElementById(\"sitios\").checked)\n\t \t{var colorsitios =  colorSeleccionado;} else{ var colorsitios =  colorDesSeleccionado;}\n\n\t  if(document.getElementById(\"terminos\").checked)\n\t \t{var colorterminos =  colorSeleccionado;} else{ var colorterminos =  colorDesSeleccionado;}\n\n  var colores_g = [ colorArtista, colorDispositivos,colorlibros,colorobras,colorsitios,colorterminos];\n  return colores_g[n % colores_g.length];\n}\n\nvar simulation = d3.forceSimulation()\n    .force(\"charge\", d3.forceManyBody().strength(-20))\n    .force(\"link\", d3.forceLink().iterations(1).id(function(d) { return d.id; }))\n    .force(\"x\", d3.forceX() )\n    .force(\"y\", d3.forceY() );\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"opacity\", 0);\n\n  d3.json(\"data3.json\", function(error, graph) {\n  if (error) throw error;\n\n  var users = d3.nest()\n      .key(function(d) { return d.group; })\n      .entries(graph.nodes)\n      .sort(function(a, b) { return b.values.length - a.values.length; });\n\n  color.domain(users.map(function(d) { return d.group; }));\n\n  simulation\n      .nodes(graph.nodes)\n      .on(\"tick\", ticked);\n\n  simulation.force(\"link\")\n      .links(graph.links)\n  \n  d3.select(canvas)\n      .on(\"mousemove\", mousemoved)\n      .call(d3.drag()\n          .container(canvas)\n          .subject(dragsubject)\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\nd3.selectAll(\"input\")\n\t.on(\"change\", ticked);\n\n  function ticked() {\n    context.clearRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n\n    // draw links\n    \n    context.beginPath();\n    var selecID = tooltip.attr('dataid');\n    graph.links.forEach(function(d) {\n    \t//context.strokeStyle = \"#ccc\";\n    \tif (d.source.id == selecID || d.target.id == selecID){\n    \t\tcontext.strokeStyle = \"blue\";\n    \t\td.value = 0;\n    \t} else{\n    \t\tcontext.strokeStyle = \"rgba(255,0,0,0.)\";\n    \t\td.value = 1;\n    \t}\n    \tcontext.moveTo(d.source.x, d.source.y);\n    \tcontext.lineTo(d.target.x, d.target.y);\n    \t//--------------------------- Heres my problem ----------------------//\n    });\n    context.stroke();\n\n    // draw nodes\n    users.forEach(function(user) {\n      context.beginPath();\n      user.values.forEach(drawNode);\n      context.fillStyle = getCategoryColor(user.key); //Color Nodos\n      context.fill();\n    });\n    context.restore();\n  }\n\n  function dragsubject() {\n    return simulation.find(d3.event.x - width / 2, d3.event.y - height / 2, searchRadius);\n  }\n\n  function mousemoved() {\n    var a = this.parentNode, m = d3.mouse(this), d = simulation.find(m[0] - width / 2, m[1] - height / 2, searchRadius);\n    if (!d) return a.removeAttribute(\"href\"), a.removeAttribute(\"title\"), tooltip.style('opacity',0), tooltip.attr('dataid','');\n     a.setAttribute(\"href\", \"http://proyectoidis.org/\" + d.slug);\n    a.setAttribute(\"target\",\"idis\");\n    var selectedNodeID = d.id;\n    loadTooltipThumb(d);\n  }\n});\n\nfunction dragstarted() {\n  if (!d3.event.active) simulation.alphaTarget(1).restart();\n  simulation.fix(d3.event.subject);\n}\n\nfunction dragged() {\n  simulation.fix(d3.event.subject, d3.event.x, d3.event.y);\n}\n\nfunction dragended() {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  simulation.unfix(d3.event.subject);\n}\n\nfunction drawLink(d) {\n  context.moveTo(d.source.x, d.source.y);\n  context.lineTo(d.target.x, d.target.y);\n    \n  \n\t//console.log(selecID);\n\tif(d.source.id  == 691){\n\t\tconsole.log(d.value);\n\t}\n\n\tif (d.source.id == selecID || d.target.id == selecID){\n\t  \td.value = 0;\n\t  \t\n\t  }else{\t\t\n\t  \td.value = 1;\n\t  }\n\t  context.strokeStyle = colorLinea(d.value);\n}\n\nfunction drawNode(d) {\n  context.moveTo(d.x + 3, d.y);\n  context.arc(d.x, d.y, 2, 0, 2 * Math.PI); //ac se dibujan los circulos. Son arcos de PI x 2 (circulo)\n  // arc(x,y,radio, starting angle, end angle)\n}\n\nfunction loadTooltipThumb(d) {\n  tooltip.select('*').remove();\n\n  var thumbnailURL = d.imagen;\n  var texto = d.name;\n  var top = d3.event.pageY - 140;\n  tooltip\n    .style(\"opacity\", \"1\")\n    .attr('dataid',d.id)\t\n    .html(\"<div class='tooltipText'>\"+ d.name+\"</h1>\")\n    .append('img')\n    .attr('src', thumbnailURL);\n}\n</script>"
      description: "need to hover links :)"
      created_at: "2016-08-09T04:36:48Z"
      updated_at: "2016-08-11T03:46:56Z"
      api: 
        - "d3.scaleCategory20"
        - "d3.forceSimulation"
        - "d3.forceManyBody"
        - "d3.forceLink"
        - "d3.forceX"
        - "d3.forceY"
        - "d3.select"
        - "d3.json"
        - "d3.nest"
        - "d3.drag"
        - "d3.selectAll"
        - "d3.mouse"
      readme: "Built with [blockbuilder.org](http://blockbuilder.org)"
      uid: "gonzam88_3ff2f33975ca8258f4aa9484be4255ce"
    - 
      code: "<script>\n  function type(d) {\n  d[\"Expression (5 min)\"] = +d[\"Expression (5 min)\"];\n  d[\"Expression (30 min)\"] = +d[\"Expression (30 min)\"];\n  d[\"Expression (60 min)\"] = +d[\"Expression (60 min)\"];\n  return d;\n}\nd3.csv(\"dataConsolidated.csv\", type, function(error, data) {\n  if (error) throw error;\n\n/*var dataByTimePoint = d3.nest()\n  .key(function(d) { return d.TimePoint; })\n  .entries(data);\n  //console.log(dataByTimepoint);*/\n  \ndataLayer = function(g) {\n  return data.map(function(d, i) {\n    //console.log(d, i,g);\n    return {x: d.GeneNumber, y: d[g], Function: d.Function};\n  });\n};\n\nvar n = 3, // number of layers\n    m = 88, // number of samples per layer\n    stack = d3.layout.stack();\n    layers = stack(['Expression (5 min)', 'Expression (30 min)', 'Expression (60 min)'].map(function(a) { return dataLayer(a);}));\n    yGroupMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y; }); }),\n    yStackMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); });\nvar margin = {top: 40, right: 10, bottom: 80, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .domain(d3.range(1,m+1))\n    .rangeRoundBands([0, width], .08);\n\nvar y = d3.scale.linear()\n    .domain([0, yStackMax])\n    .range([height, 0]);\n\n/*var color = d3.scale.linear()\n    .domain([0, n - 1])\n    .range([\"#b5c062\", \"#834ed4\"]);*/\n  \nvar color = d3.scale.ordinal()\n\t\t.range(['gold', 'gray', 'purple']);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickSize(0)\n    .tickPadding(6)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");var yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n  \nvar layer = svg.selectAll(\".layer\")\n    .data(layers)\n  .enter().append(\"g\")\n    .attr(\"class\", \"layer\")\n    .style(\"fill\", function(d, i) { return color(i); });\n  \n\nvar rect = layer.selectAll(\"rect\")\n    .data(function(d) { return d; })\n  .enter().append(\"rect\")\n    .attr(\"x\", function(d) { return x(d.x); })\n    .attr(\"y\", height)\n    .attr(\"width\", x.rangeBand())\n    .attr(\"height\", 0);\n  \n var tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    console.log(d);\n    return \"<strong>Function:</strong> <span style='color:yellow'>\" + d.Function + \"</span>\";\n  });  \n  rect\n    .on('mouseover', tip.show)\n    .on('mouseout', tip.hide);;\n\nsvg.call(tip);\n  \n  \nrect.transition()\n    .delay(function(d, i) { return i * 10; })\n    .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n    .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); });\n  \n  x_group = svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n  \n  x_group\n    .selectAll(\"text\")\n  \t.attr(\"transform\", function (d) {return \"rotate(-60,\" + 0 + \",\" + 14 +  \")\"});\n  \n    svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .append(\"text\")\n\t  .attr(\"font-size\", 16)\n  \t.attr(\"text-anchor\", \"end\")\n    .attr(\"x\", width)\n    .attr(\"y\", height + margin.bottom/2)\n    .attr(\"shape-rendering\", \"crispEdges\")\n    .text(\"Kampy Gene Number\");\n   \n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n    .append(\"text\")\n  \t.attr(\"font-size\", 16)\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"Expression (RPKM)\");\n  \n  var legend = svg.selectAll(\".legend\")\n    .data(d3.keys(data[0]).slice(5))\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; })\n      .style(\"font\", \"10px sans-serif\");\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .attr(\"fill\", function(d,i) { return color(i);});\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\nd3.selectAll(\"input\").on(\"change\", change);\n\nvar timeout = setTimeout(function() {\n  d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n}, 2000);\n\nfunction change() {\n  clearTimeout(timeout);\n  if (this.value === \"grouped\") transitionGrouped();\n  else transitionStacked();\n}\n\nfunction transitionGrouped() {\n  y.domain([0, yGroupMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"x\", function(d, i, j) { return x(d.x) + x.rangeBand() / n * j; })\n      .attr(\"width\", x.rangeBand() / n)\n    .transition()\n      .attr(\"y\", function(d) { return y(d.y); })\n      .attr(\"height\", function(d) { return height - y(d.y); });\n}\n\nfunction transitionStacked() {\n  y.domain([0, yStackMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n      .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); })\n    .transition()\n      .attr(\"x\", function(d) { return x(d.x); })\n      .attr(\"width\", x.rangeBand());\n}\n\n});\n\n</script>"
      description: "bar chart 5"
      created_at: "2016-08-09T02:04:46Z"
      updated_at: "2016-08-09T02:04:46Z"
      api: 
        - "d3.csv"
        - "d3.nest"
        - "d3.layout.stack"
        - "d3.max"
        - "d3.scale.ordinal"
        - "d3.range"
        - "d3.scale.linear"
        - "d3.svg.axis"
        - "d3.select"
        - "d3.tip"
        - "d3.keys"
        - "d3.selectAll"
      readme: "Switch between stacked and grouped layouts using sequenced transitions! Animations preserve object constancy and allow the user to follow the data across views. Animation design by [Heer and Robertson](http://vis.berkeley.edu/papers/animated_transitions/). Colors and data generation inspired by [Byron and Wattenberg](http://www.leebyron.com/else/streamgraph/).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3943967'>Stacked-to-Grouped Bars</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/06f6218180abdd924af0c1a3d1db2d55'>bar chart 5</a>\n\nforked from <a href='http://bl.ocks.org/lesevimx/'>lesevimx</a>'s block: <a href='http://bl.ocks.org/lesevimx/cd4baaa37975ef932cfac7461327d104'>bar chart 5</a>"
      uid: "lesevimx_f62076d9ed54b381f928f2cee4ccf33a"
    - 
      code: "<script>\n  function type(d) {\n  d[\"Expression (5 min)\"] = +d[\"Expression (5 min)\"];\n  d[\"Expression (30 min)\"] = +d[\"Expression (30 min)\"];\n  d[\"Expression (60 min)\"] = +d[\"Expression (60 min)\"];\n  return d;\n}\nd3.csv(\"dataConsolidated.csv\", type, function(error, data) {\n  if (error) throw error;\n\n/*var dataByTimePoint = d3.nest()\n  .key(function(d) { return d.TimePoint; })\n  .entries(data);\n  //console.log(dataByTimepoint);*/\n  \ndataLayer = function(g) {\n  return data.map(function(d, i) {\n    //console.log(d, i,g);\n    return {x: d.GeneNumber, y: d[g], Function: d.Function};\n  });\n};\n\nvar n = 3, // number of layers\n    m = 88, // number of samples per layer\n    stack = d3.layout.stack();\n    layers = stack(['Expression (5 min)', 'Expression (30 min)', 'Expression (60 min)'].map(function(a) { return dataLayer(a);}));\n    yGroupMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y; }); }),\n    yStackMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); });\nvar margin = {top: 40, right: 10, bottom: 80, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .domain(d3.range(1,m+1))\n    .rangeRoundBands([0, width], .08);\n\nvar y = d3.scale.linear()\n    .domain([0, yStackMax])\n    .range([height, 0]);\n\n/*var color = d3.scale.linear()\n    .domain([0, n - 1])\n    .range([\"#b5c062\", \"#834ed4\"]);*/\n  \nvar color = d3.scale.ordinal()\n\t\t.range(['gold', 'gray', 'purple']);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickSize(0)\n    .tickPadding(6)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");var yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n  \nvar layer = svg.selectAll(\".layer\")\n    .data(layers)\n  .enter().append(\"g\")\n    .attr(\"class\", \"layer\")\n    .style(\"fill\", function(d, i) { return color(i); });\n  \n\nvar rect = layer.selectAll(\"rect\")\n    .data(function(d) { return d; })\n  .enter().append(\"rect\")\n    .attr(\"x\", function(d) { return x(d.x); })\n    .attr(\"y\", height)\n    .attr(\"width\", x.rangeBand())\n    .attr(\"height\", 0);\n  \n var tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    console.log(d);\n    return \"<strong>Function:</strong> <span style='color:yellow'>\" + d.Function + \"</span>\";\n  });  \n  rect\n    .on('mouseover', tip.show)\n    .on('mouseout', tip.hide);;\n\nsvg.call(tip);\n  \n  \nrect.transition()\n    .delay(function(d, i) { return i * 10; })\n    .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n    .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); });\n  \n  x_group = svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n  \n  x_group\n    .selectAll(\"text\")\n  \t.attr(\"transform\", function (d) {return \"rotate(-60,\" + 0 + \",\" + 14 +  \")\"});\n  \n    svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .append(\"text\")\n\t  .attr(\"font-size\", 16)\n  \t.attr(\"text-anchor\", \"end\")\n    .attr(\"x\", width)\n    .attr(\"y\", height + margin.bottom/2)\n    .attr(\"shape-rendering\", \"crispEdges\")\n    .text(\"Kampy Gene Number\");\n   \n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n    .append(\"text\")\n  \t.attr(\"font-size\", 16)\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"Expression (RPKM)\");\n  \n  var legend = svg.selectAll(\".legend\")\n    .data(d3.keys(data[0]).slice(5))\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; })\n      .style(\"font\", \"10px sans-serif\");\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .attr(\"fill\", function(d,i) { return color(i);});\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\nd3.selectAll(\"input\").on(\"change\", change);\n\nvar timeout = setTimeout(function() {\n  d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n}, 2000);\n\nfunction change() {\n  clearTimeout(timeout);\n  if (this.value === \"grouped\") transitionGrouped();\n  else transitionStacked();\n}\n\nfunction transitionGrouped() {\n  y.domain([0, yGroupMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"x\", function(d, i, j) { return x(d.x) + x.rangeBand() / n * j; })\n      .attr(\"width\", x.rangeBand() / n)\n    .transition()\n      .attr(\"y\", function(d) { return y(d.y); })\n      .attr(\"height\", function(d) { return height - y(d.y); });\n}\n\nfunction transitionStacked() {\n  y.domain([0, yStackMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n      .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); })\n    .transition()\n      .attr(\"x\", function(d) { return x(d.x); })\n      .attr(\"width\", x.rangeBand());\n}\n\n});\n\n</script>"
      description: "bar chart 5"
      created_at: "2016-08-09T02:01:58Z"
      updated_at: "2016-08-09T02:04:39Z"
      api: 
        - "d3.csv"
        - "d3.nest"
        - "d3.layout.stack"
        - "d3.max"
        - "d3.scale.ordinal"
        - "d3.range"
        - "d3.scale.linear"
        - "d3.svg.axis"
        - "d3.select"
        - "d3.tip"
        - "d3.keys"
        - "d3.selectAll"
      readme: "Switch between stacked and grouped layouts using sequenced transitions! Animations preserve object constancy and allow the user to follow the data across views. Animation design by [Heer and Robertson](http://vis.berkeley.edu/papers/animated_transitions/). Colors and data generation inspired by [Byron and Wattenberg](http://www.leebyron.com/else/streamgraph/).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3943967'>Stacked-to-Grouped Bars</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/06f6218180abdd924af0c1a3d1db2d55'>bar chart 5</a>"
      uid: "lesevimx_cd4baaa37975ef932cfac7461327d104"
    - 
      code: "<script>\n\nvar margin = {top: 20, right: 40, bottom: 30, left: 20},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    barWidth = Math.floor(width / 19) - 1;\n\nvar x = d3.scale.linear()\n    .range([barWidth / 2, width - barWidth / 2]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"right\")\n    .tickSize(-width)\n    .tickFormat(function(d) { return Math.round(d / 1e6) + \"M\"; });\n\n// An SVG element with a bottom-right origin.\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// A sliding container to hold the bars by birthyear.\nvar birthyears = svg.append(\"g\")\n    .attr(\"class\", \"birthyears\");\n\n// A label for the current year.\nvar title = svg.append(\"text\")\n    .attr(\"class\", \"title\")\n    .attr(\"dy\", \".71em\")\n    .text(2000);\n\nd3.csv(\"population.csv\", function(error, data) {\n\n  // Convert strings to numbers.\n  data.forEach(function(d) {\n    d.people = +d.people;\n    d.year = +d.year;\n    d.age = +d.age;\n  });\n\n  // Compute the extent of the data set in age and years.\n  var age1 = d3.max(data, function(d) { return d.age; }),\n      year0 = d3.min(data, function(d) { return d.year; }),\n      year1 = d3.max(data, function(d) { return d.year; }),\n      year = year1;\n\n  // Update the scale domains.\n  x.domain([year1 - age1, year1]);\n  y.domain([0, d3.max(data, function(d) { return d.people; })]);\n\n  // Produce a map from year and birthyear to [male, female].\n  data = d3.nest()\n      .key(function(d) { return d.year; })\n      .key(function(d) { return d.year - d.age; })\n      .rollup(function(v) { return v.map(function(d) { return d.people; }); })\n      .map(data);\n\n  // Add an axis to show the population values.\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + width + \",0)\")\n      .call(yAxis)\n    .selectAll(\"g\")\n    .filter(function(value) { return !value; })\n      .classed(\"zero\", true);\n\n  // Add labeled rects for each birthyear (so that no enter or exit is required).\n  var birthyear = birthyears.selectAll(\".birthyear\")\n      .data(d3.range(year0 - age1, year1 + 1, 5))\n    .enter().append(\"g\")\n      .attr(\"class\", \"birthyear\")\n      .attr(\"transform\", function(birthyear) { return \"translate(\" + x(birthyear) + \",0)\"; });\n\n  birthyear.selectAll(\"rect\")\n      .data(function(birthyear) { return data[year][birthyear] || [0, 0]; })\n    .enter().append(\"rect\")\n      .attr(\"x\", -barWidth / 2)\n      .attr(\"width\", barWidth)\n      .attr(\"y\", y)\n      .attr(\"height\", function(value) { return height - y(value); });\n\n  // Add labels to show birthyear.\n  birthyear.append(\"text\")\n      .attr(\"y\", height - 4)\n      .text(function(birthyear) { return birthyear; });\n\n  // Add labels to show age (separate; not animated).\n  svg.selectAll(\".age\")\n      .data(d3.range(0, age1 + 1, 5))\n    .enter().append(\"text\")\n      .attr(\"class\", \"age\")\n      .attr(\"x\", function(age) { return x(year - age); })\n      .attr(\"y\", height + 4)\n      .attr(\"dy\", \".71em\")\n      .text(function(age) { return age; });\n\n  // Allow the arrow keys to change the displayed year.\n  window.focus();\n  d3.select(window).on(\"keydown\", function() {\n    switch (d3.event.keyCode) {\n      case 37: year = Math.max(year0, year - 10); break;\n      case 39: year = Math.min(year1, year + 10); break;\n    }\n    update();\n  });\n\n  function update() {\n    if (!(year in data)) return;\n    title.text(year);\n\n    birthyears.transition()\n        .duration(750)\n        .attr(\"transform\", \"translate(\" + (x(year1) - x(year)) + \",0)\");\n\n    birthyear.selectAll(\"rect\")\n        .data(function(birthyear) { return data[year][birthyear] || [0, 0]; })\n      .transition()\n        .duration(750)\n        .attr(\"y\", y)\n        .attr(\"height\", function(value) { return height - y(value); });\n  }\n});\n\n</script>"
      description: "fresh block"
      created_at: "2016-08-02T06:53:14Z"
      updated_at: "2016-08-02T14:03:28Z"
      api: 
        - "d3.scale.linear"
        - "d3.svg.axis"
        - "d3.select"
        - "d3.csv"
        - "d3.max"
        - "d3.min"
        - "d3.nest"
        - "d3.range"
      readme: "Built with [blockbuilder.org](http://blockbuilder.org)"
      uid: "Charisma9_60f68c24a5d6ad7934e15398770491ee"
    - 
      code: "<script>\n\nvar width = 512;\nvar height = 600;\nvar svg = d3.select('body').append('svg')\n  .attr({width: width, height: height});\n\n  \nd3.csv('201402_weather_data.csv', function(err, data) {\n  if (err) { throw err; }\n\t\n\tvar species = d3.nest()\n    .key(function(d) { return d.zip})\n    .entries(data); \n \n\tvar zipTemps = species.map(function(zip) {\n    //console.log(zip)\n  \tvar mean = d3.mean(zip.values, \t\t\t\t\t\n\t\t\tfunction(d) {  return +d.Max_Temperature_F});\n    \n    return {\n      zipTemps: mean,\n      species: zip.key,\n    };\n  });\n  \n  console.log(zipTemps);\n\n<body>\n    <div id=\"chart\"></div>\n    <div id=\"dataset-picker\">\n    </div>\n    <script type=\"text/javascript\">\n      var margin = { top: 50, right: 0, bottom: 100, left: 30 },\n          width = 960 - margin.left - margin.right,\n          height = 430 - margin.top - margin.bottom,\n          gridSize = Math.floor(width / 24),\n          legendElementWidth = gridSize*2,\n          buckets = 9,\n          colors = [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"], // alternatively colorbrewer.YlGnBu[9]\n          days = [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\n          times = [\"1a\", \"2a\", \"3a\", \"4a\", \"5a\", \"6a\", \"7a\", \"8a\", \"9a\", \"10a\", \"11a\", \"12a\", \"1p\", \"2p\", \"3p\", \"4p\", \"5p\", \"6p\", \"7p\", \"8p\", \"9p\", \"10p\", \"11p\", \"12p\"];\n          datasets = [\"data.tsv\", \"data2.tsv\"];\n\n      var svg = d3.select(\"#chart\").append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n          .append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      var dayLabels = svg.selectAll(\".dayLabel\")\n          .data(days)\n          .enter().append(\"text\")\n            .text(function (d) { return d; })\n            .attr(\"x\", 0)\n            .attr(\"y\", function (d, i) { return i * gridSize; })\n            .style(\"text-anchor\", \"end\")\n            .attr(\"transform\", \"translate(-6,\" + gridSize / 1.5 + \")\")\n            .attr(\"class\", function (d, i) { return ((i >= 0 && i <= 4) ? \"dayLabel mono axis axis-workweek\" : \"dayLabel mono axis\"); });\n\n      var timeLabels = svg.selectAll(\".timeLabel\")\n          .data(times)\n          .enter().append(\"text\")\n            .text(function(d) { return d; })\n            .attr(\"x\", function(d, i) { return i * gridSize; })\n            .attr(\"y\", 0)\n            .style(\"text-anchor\", \"middle\")\n            .attr(\"transform\", \"translate(\" + gridSize / 2 + \", -6)\")\n            .attr(\"class\", function(d, i) { return ((i >= 7 && i <= 16) ? \"timeLabel mono axis axis-worktime\" : \"timeLabel mono axis\"); });\n\n      var heatmapChart = function(tsvFile) {\n        d3.tsv(tsvFile,\n        function(d) {\n          return {\n            day: +d.day,\n            hour: +d.hour,\n            value: +d.value\n          };\n        },\n        function(error, data) {\n          var colorScale = d3.scale.quantile()\n              .domain([0, buckets - 1, d3.max(data, function (d) { return d.value; })])\n              .range(colors);\n\n          var cards = svg.selectAll(\".hour\")\n              .data(data, function(d) {return d.day+':'+d.hour;});\n\n          cards.append(\"title\");\n\n          cards.enter().append(\"rect\")\n              .attr(\"x\", function(d) { return (d.hour - 1) * gridSize; })\n              .attr(\"y\", function(d) { return (d.day - 1) * gridSize; })\n              .attr(\"rx\", 4)\n              .attr(\"ry\", 4)\n              .attr(\"class\", \"hour bordered\")\n              .attr(\"width\", gridSize)\n              .attr(\"height\", gridSize)\n              .style(\"fill\", colors[0]);\n\n          cards.transition().duration(1000)\n              .style(\"fill\", function(d) { return colorScale(d.value); });\n\n          cards.select(\"title\").text(function(d) { return d.value; });\n          \n          cards.exit().remove();\n\n          var legend = svg.selectAll(\".legend\")\n              .data([0].concat(colorScale.quantiles()), function(d) { return d; });\n\n          legend.enter().append(\"g\")\n              .attr(\"class\", \"legend\");\n\n          legend.append(\"rect\")\n            .attr(\"x\", function(d, i) { return legendElementWidth * i; })\n            .attr(\"y\", height)\n            .attr(\"width\", legendElementWidth)\n            .attr(\"height\", gridSize / 2)\n            .style(\"fill\", function(d, i) { return colors[i]; });\n\n          legend.append(\"text\")\n            .attr(\"class\", \"mono\")\n            .text(function(d) { return \" \" + Math.round(d); })\n            .attr(\"x\", function(d, i) { return legendElementWidth * i; })\n            .attr(\"y\", height + gridSize);\n\n          legend.exit().remove();\n\n        });  \n      };\n\n      heatmapChart(datasets[0]);\n      \n      var datasetpicker = d3.select(\"#dataset-picker\").selectAll(\".dataset-button\")\n        .data(datasets);\n\n      datasetpicker.enter()\n        .append(\"input\")\n        .attr(\"value\", function(d){ return \"Dataset \" + d })\n        .attr(\"type\", \"button\")\n        .attr(\"class\", \"dataset-button\")\n        .on(\"click\", function(d) {\n          heatmapChart(d);\n        });\n    </script>"
      description: "Heat map chart"
      created_at: "2016-08-01T14:48:37Z"
      updated_at: "2016-08-01T14:48:38Z"
      api: 
        - "d3.select"
        - "d3.csv"
        - "d3.nest"
        - "d3.mean"
        - "d3.tsv"
        - "d3.scale.quantile"
        - "d3.max"
      readme: "Built with [blockbuilder.org](http://blockbuilder.org)"
      uid: "Charisma9_12b983758cacb2536f8a406804b4bb01"
    - 
      code: "<script>\n    var violation_type = \"Overgrown Vegetation\";\n\n    \n    ///////////////////////////\nfunction plot(name){    \n  \n  d3.select(\"svg\").remove();\n  \n      var width = 960,\n        height = 750,\n        cellSize = 25; // cell size\n\n    var no_months_in_a_row = Math.floor(width / (cellSize * 7 + 50));\n    var shift_up = cellSize * 3;\n\n    var day = d3.timeFormat(\"%w\"), // day of the week\n        day_of_month = d3.timeFormat(\"%e\") // day of the month\n        day_of_year = d3.timeFormat(\"%j\")\n        week = d3.timeFormat(\"%U\"), // week number of the year\n        month = d3.timeFormat(\"%m\"), // month number\n        year = d3.timeFormat(\"%Y\"),\n        percent = d3.format(\".1%\"),\n        format = d3.timeFormat(\"%Y-%m-%d\");\n    \n    var parseDate = d3.timeParse(\"%Y-%m-%d\");\n\n    var color = d3.scaleQuantize()\n        .domain([0, 10])\n        .range(d3.range(11).map(function(d) { return \"q\" + d + \"-11\"; }));\n\n    var svg = d3.select(\"#chart\").selectAll(\"svg\")\n        .data(d3.range(2012, 2013)) //years included in the viz\n      .enter().append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"class\", \"RdYlGn\")\n      .append(\"g\")\n\n    var rect = svg.selectAll(\".day\")\n        .data(function(d) { \n          return d3.timeDays(new Date(d, 0, 1), new Date(d + 1, 0, 1));\n        })\n      .enter().append(\"rect\")\n        .attr(\"class\", \"day\")\n        .attr(\"width\", cellSize)\n        .attr(\"height\", cellSize)\n        .attr(\"x\", function(d) {\n          var month_padding = 1.2 * cellSize*7 * ((month(d)-1) % (no_months_in_a_row));\n          return day(d) * cellSize + month_padding; \n        })\n        .attr(\"y\", function(d) { \n          var week_diff = week(d) - week(new Date(year(d), month(d)-1, 1) );\n          var row_level = Math.ceil(month(d) / (no_months_in_a_row));\n          return (week_diff*cellSize) + row_level*cellSize*8 - cellSize/2 - shift_up;\n        })\n        .datum(format);\n\n    var month_titles = svg.selectAll(\".month-title\")  // Jan, Feb, Mar and the whatnot\n          .data(function(d) { \n            return d3.timeMonths(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n        .enter().append(\"text\")\n          .text(monthTitle)\n          .attr(\"x\", function(d, i) {\n            var month_padding = 1.2 * cellSize*7* ((month(d)-1) % (no_months_in_a_row));\n            return month_padding;\n          })\n          .attr(\"y\", function(d, i) {\n            var week_diff = week(d) - week(new Date(year(d), month(d)-1, 1) );\n            var row_level = Math.ceil(month(d) / (no_months_in_a_row));\n            return (week_diff*cellSize) + row_level*cellSize*8 - cellSize - shift_up;\n          })\n          .attr(\"class\", \"month-title\")\n          .attr(\"d\", monthTitle);\n\n    var year_titles = svg.selectAll(\".year-title\")  // Jan, Feb, Mar and the whatnot\n          .data(function(d) { \n            return d3.timeYears(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n        .enter().append(\"text\")\n          .text(yearTitle)\n          .attr(\"x\", function(d, i) { return width/2 - 100; })\n          .attr(\"y\", function(d, i) { return cellSize*5.5 - shift_up; })\n          .attr(\"class\", \"year-title\")\n          .attr(\"d\", yearTitle);\n\n\n    //  Tooltip Object\n    var tooltip = d3.select(\"body\")\n      .append(\"div\").attr(\"id\", \"tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"z-index\", \"10\")\n      .style(\"visibility\", \"hidden\")\n      .text(\"a simple tooltip\");\n    \n    function dayTitle (t0) {\n      return t0.toString().split(\" \")[2];\n    }\n    function monthTitle (t0) {\n      return t0.toLocaleString(\"en-us\", { month: \"long\" });\n    }\n    function yearTitle (t0) {\n      return t0.toString().split(\" \")[3];\n    }\n  d3.csv(\"Violations-2012.csv\", function(error, data) {\n  if (error) throw error;\n  \n      var vio_by_type = d3.nest().key(function(d) {return d.violation_type}).entries(data);\n      \n      var new_data = d3.nest()\n      \t.key(function(d) {return d.violation_type})\n        .key(function(d) {return (d.violation_date.split(\" \")[0])})\n        .rollup(function(v) { return v.length; })\n      \t.map(data); \n\n\t\tvar data_length =d3.nest()\n    \t.key(function(d) {return d.violation_type})\n    \t.rollup(function(v) { return v.length})\n    \t.map(data)\n      \n    \td3.select(\".container2\").html(\"Number of violations: \" + data_length.get(name))\n    \n      rect.filter(function(d) {\n    return (new_data.get(name).has(d)); \n  })\n      .attr(\"class\", function(d) {\n        return \"day \" + color(new_data.get(name).get(d)); \n      })\n    .select(\"title\")\n      .text(function(d) { return d + \": \" + percent(new_data.get(name).get(d)); });\n\n      //  Tooltip\n      rect.on(\"mouseover\", mouseover);\n      rect.on(\"mouseout\", mouseout);\n      function mouseover(d) {\n        tooltip.style(\"visibility\", \"visible\");\n        var factlet_num = (new_data.get(name).get(d) !== undefined) ? new_data.get(name).get(d) : 0;\n        var purchase_text = d + \": \" + factlet_num + \" violations\";\n\n        tooltip.transition()        \n                    .duration(200)      \n                    .style(\"opacity\", .9);      \n        tooltip.html(purchase_text)  \n                    .style(\"left\", (d3.event.pageX)+30 + \"px\")     \n                    .style(\"top\", (d3.event.pageY) + \"px\"); \n      }\n      function mouseout (d) {\n        tooltip.transition()        \n                .duration(500)      \n                .style(\"opacity\", 0); \n        var $tooltip = $(\"#tooltip\");\n        $tooltip.empty();\n      }\n    });\n\n\n\n}\n    \nd3.csv(\"Violations-2012.csv\", function(error, data) {\n  if (error) throw error;\n  \n  var vio_by_type = d3.nest().key(function(d) {return d.violation_type}).entries(data);\n  var names = vio_by_type.map(function(f){return f.key});  \n  \nvar selector = d3.select(\".container1\")\n\t\t.append(\"select\")\n\t\t.attr(\"id\", \"vioselector\")\n\t\t.selectAll(\"option\")\n\t\t.data(names)\n\t\t.enter().append(\"option\")\n\t\t.text(function(d) { return d; })\n\t\t.attr(\"value\", function (d) {\n\t\t\tconsole.log(d); return d;\n\t\t});\n  \n  \n\tvar name = \"Refuse Accumulation\";\td3.select(\"#vioselector\").property(\"selectedIndex\", name);\n  \n  d3.select(\"#vioselector\")\n\t.on(\"change\", function(d) {\n\t\tname = this.value;\n// \t\tupdate();\n    plot(name);\n\t})\n});  \n</script>"
      description: "Violations 2012 calendar view (d3 dropdown)"
      created_at: "2016-07-31T01:51:39Z"
      updated_at: "2016-07-31T01:58:13Z"
      api: 
        - "d3.scale.linear"
        - "d3.select"
        - "d3.timeFormat"
        - "d3.format"
        - "d3.timeParse"
        - "d3.scaleQuantize"
        - "d3.range"
        - "d3.timeDays"
        - "d3.timeMonths"
        - "d3.timeYears"
        - "d3.csv"
        - "d3.nest"
      readme: "A calendar visualization of the 2012 housing violations dataset. An alternate presentation of this <a href=\"http://bl.ocks.org/BBischof/f463291ee5d339b74f21c5ddbfbf798d\">beeswarm visualization.</a> This one takes advantage of the fact that our data is mostly focused on the year 2012. I used emoji's in the selections to draw more attention to different violations in a long list.\n\nSelect different sorts of violations from the drop down menu. Hold your mouse over a rectangle to reveal more details.\n\nOriginal exploded calendar is <a href=\"http://bl.ocks.org/KathyZ/c2d4694c953419e0509b\">here</a>. Emoji reference from <a href=\"http://apps.timwhitlock.info/emoji/tables/unicode\">here</a>.\n\nDrop down inspired from <a href=\"http://bl.ocks.org/micahstubbs/d393bcfde0228430c00b\">Micah Stubb's guide.</a>\n\nforked from <a href='http://bl.ocks.org/BBischof/'>BBischof</a>'s block: <a href='http://bl.ocks.org/BBischof/1947ff949f969d6ca9be285705d57e16'>Calendar Alternate Orientation v4 update</a>\n\nforked from <a href='http://bl.ocks.org/BBischof/'>BBischof</a>'s block: <a href='http://bl.ocks.org/BBischof/7607b90705281634c6da741c34d9ba7c'>Violations 2012 calendar view</a>"
      uid: "BBischof_7e5e79af16bae653d4501b219981ed68"
    - 
      code: "<script> \n  \nfunction plot(name) {\nd3.select(\"svg\").remove();\n \nmargin = {top: 40, right: 40, bottom: 40, left: 40},\nwidth = 960 - margin.left - margin.right,\nheight = 250 - margin.top - margin.bottom;  \n  \nvar svg = d3.select(\"body\").append(\"svg\")\n\t\t.attr(\"class\", \"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    \n\nvar formatValue = d3.format(\",d\");\n\nvar x = d3.scaleTime()\n    .rangeRound([0, width-50]);\n  \nvar color = d3.scaleOrdinal().domain([\"Animals Prohibited number\", \"Animals and Pests not specified\", \"Damaged or defective walls floors or ceilings\", \"Insects not specified\", \"Rodents not specified\", \"Unsanitary conditions not specified\", \"Abandoned Vehicle\", \"Animal Feces\", \"Animal Urine\", \"Barrier to Emergency Ingress or Egress\", \"Bed Bugs\", \"Building Dampness or Water Intrusion\", \"Cockroaches\", \"Cockroaches\", \"Dogs\", \"Flies\", \"Human Feces\", \"Human Urine\", \"Improper Refuse Storage\", \"Inadequate Heating\", \"Inadequate Lighting\", \"Inadequate Pest Exclusion\", \"Inadequate Ventilation\", \"Inadequate or Improper Kitchen Facilities\", \"Inoperable Windows\", \"Lead Hazard\", \"Mice\", \"Moderate risk food holding temperature\", \"Mold or Mildew\", \"Mosquitos\", \"No or inadequate hot or cold water\", \"Non-functioning Smoke Detector\", \"Nuisance Odors\", \"Overgrown Vegetation\", \"Pidgeons\", \"Poison Ivy or Poison Oak\", \"Rats\", \"Refuse Accumulation\", \"Refuse Not Properly Stored\", \"Sewage Hazard\", \"Standing Water\", \"Unsanitary Floors or Walls\", \"Unsanitary Public Areas\", \"Unsanitary Toilets or Bathrooms\"]).range([\"#0a72ff\", \"#1eff06\", \"#ff1902\", \"#2dfefe\", \"#827c01\", \"#fe07a6\", \"#a8879f\", \"#fcff04\", \"#c602fe\", \"#16be61\", \"#ff9569\", \"#05b3ff\", \"#ecffa7\", \"#3f8670\", \"#e992ff\", \"#ffb209\", \"#e72955\", \"#83bf02\", \"#bba67b\", \"#fe7eb1\", \"#7570c1\", \"#85bfd1\", \"#f97505\", \"#9f52e9\", \"#8ffec2\", \"#dad045\", \"#b85f60\", \"#fe4df2\", \"#75ff6c\", \"#78a55a\", \"#ae6a02\", \"#bebeff\", \"#ffb3b3\", \"#a4fe04\", \"#ffc876\", \"#c548a7\", \"#d6492b\", \"#547da7\", \"#358b06\", \"#95caa9\", \"#07b990\", \"#feb6e9\", \"#c9ff76\", \"#02b708\"])\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar parseDate = d3.timeParse(\"%Y-%m-%d\");\n\nd3.csv(\"Violations-2012.csv\", function(error, data) {\n  if (error) throw error;\n  \n  \n  data.map(function(d){\n//    console.log(parseDate(d.violation_date.split(\" \")[0]));\n//     console.log((d.violation_date).split(\" \")[0]);\n    return d.violation_date;\n  })\n  \n  var vio_by_type = d3.nest().key(function(d) {return d.violation_type}).entries(data);\n  var names = vio_by_type.map(function(f){return f.key});\n  \n\n console.log(names);\n  \n  data_length = vio_by_type[names.indexOf(name)][\"values\"].length\n  \n  max_min = d3.extent(vio_by_type[names.indexOf(name)][\"values\"], function(d) {return parseDate(d.violation_date.split(\" \")[0]);})\n  \n   d3.select(\".container2\").html(\"Number of violations: \" + data_length)\n   \nd3.select(\".container2\").append(\"p\").html(\" First recorded Violation: \" + max_min[0])\n\nd3.select(\".container2\").append(\"p\").html(\" Last recorded Violation: \" + max_min[1])\n\n\n  x.domain(d3.extent(data, function(d) {return parseDate(d.violation_date.split(\" \")[0]); }));\n\n\n  var simulation = d3.forceSimulation(vio_by_type[names.indexOf(name)][\"values\"])\n      .force(\"x\", d3.forceX(function(d) { return x(parseDate(d.violation_date.split(\" \")[0])); }).strength(1))\n      .force(\"y\", d3.forceY(height / 2))\n      .force(\"collide\", d3.forceCollide(4))\n      .stop();\n\n  for (var i = 0; i < 120; ++i) simulation.tick();\n\n  g.append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", \"translate(0,\" + (height - 60) + \")\")\n      .call(d3.axisBottom(x).ticks(13, \"%m-%Y\"));\n\n  var cell = g.append(\"g\")\n      .attr(\"class\", \"cells\")\n    .selectAll(\"g\").data(d3.voronoi()\n        .extent([[-margin.left, -margin.top], [width + margin.right, height + margin.top]])\n        .x(function(d) { return d.x; })\n        .y(function(d) { return d.y; })\n      .polygons(vio_by_type[names.indexOf(name)][\"values\"])).enter().append(\"g\");\n\n  cell.append(\"circle\")\n      .attr(\"r\", 3)\n      .attr(\"cx\", function(d) { return d.data.x; })\n      .attr(\"cy\", function(d) { return d.data.y; })\n  \t\t.style(\"fill\", function(d) { return color(d.data.violation_type); });\n\n  cell.append(\"path\")\n      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; });\n\n  cell.append(\"title\")\n      .text(function(d) { return \"Violation id: \" + d.data.violation_id + \"\\n\" + \"Violation: \" +(d.data.violation_category) + \"-\" +(d.data.violation_type) + \"\\n\" + \"Violation date: \" + d.data.violation_date.split(\" \")[0]; });\n  \n});\n\n}\n\nd3.csv(\"Violations-2012.csv\", function(error, data) {\n  if (error) throw error;\n  \n  var vio_by_type = d3.nest().key(function(d) {return d.violation_type}).entries(data);\n  var names = vio_by_type.map(function(f){return f.key});  \n  \nvar selector = d3.select(\".container1\")\n\t\t.append(\"select\")\n\t\t.attr(\"id\", \"vioselector\")\n\t\t.selectAll(\"option\")\n\t\t.data(names)\n\t\t.enter().append(\"option\")\n\t\t.text(function(d) { return d; })\n\t\t.attr(\"value\", function (d) {\n\t\t\tconsole.log(d); return d;\n\t\t});\n  \n  \n\tvar name = \"Refuse Accumulation\";\td3.select(\"#vioselector\").property(\"selectedIndex\", name);\n  \n  d3.select(\"#vioselector\")\n\t.on(\"change\", function(d) {\n\t\tname = this.value;\n// \t\tupdate();\n    plot(name);\n\t})\n});  \n  \n</script>"
      description: "Housing Violations Data - 2012 (d3 dropdown)"
      created_at: "2016-07-31T01:18:24Z"
      updated_at: "2016-07-31T01:59:03Z"
      api: 
        - "d3.select"
        - "d3.format"
        - "d3.scaleTime"
        - "d3.scaleOrdinal"
        - "d3.timeParse"
        - "d3.csv"
        - "d3.nest"
        - "d3.extent"
        - "d3.forceSimulation"
        - "d3.forceX"
        - "d3.forceY"
        - "d3.forceCollide"
        - "d3.axisBottom"
        - "d3.voronoi"
      readme: "A beeswarm plot to visualize housing violations from 2012. Each point is a violation of the specified type.\n\nSelect different sorts of violations from the drop down menu. Hold your mouse over a point to reveal more details.\n\nThe beeswarm plot is a convenient modification of the scatterplot for one dimensional datasets where some data points have the same `x-value`. \n\nAn alternative view can be seen <a href=\"http://bl.ocks.org/BBischof/7607b90705281634c6da741c34d9ba7c\">here</a>\n\n\nOriginal Example: <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block, <a href='http://bl.ocks.org/mbostock/6526445e2b44303eebf21da3b6627320'>Beeswarm</a>\n\nDrop down inspired from <a href=\"http://bl.ocks.org/micahstubbs/d393bcfde0228430c00b\">Micah Stubb's guide.</a>\n\nforked from <a href='http://bl.ocks.org/BBischof/'>BBischof</a>'s block: <a href='http://bl.ocks.org/BBischof/a9e166f26ea11e01d838273e34a043b6'>Housing Violations Data - 2012</a>\n\nforked from <a href='http://bl.ocks.org/BBischof/'>BBischof</a>'s block: <a href='http://bl.ocks.org/BBischof/f463291ee5d339b74f21c5ddbfbf798d'>Housing Violations Data - 2012</a>"
      uid: "BBischof_6ee0112a3fa8158353686ff6cbb2848b"
    - 
      code: "<script>\nvar charactername = \"hikonyan\";\nvar characterJp = \"\";\n\nvar show_flg = false;\n\nvar margin = {top: 1, right: 1, bottom: 6, left: 1},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatNumber = d3.format(\",.0f\"),\n    format = function(d) { return formatNumber(d); },\n    color = function(d){ return d.color; };//d3.scale.category20();\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"class\", \"yurudata\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar sankey = d3.sankey()\n    .nodeWidth(15)\n    .nodePadding(10)\n    .size([width, height]);\n\nvar path = sankey.link();\n\nvar c = {\n    getJson: function(success){\n        var jsonfile = {};\n        jsonfile.links = [];\n        jsonfile.nodes = [{\n            \"color\": \"#ccc444\",\n            \"name\": characterJp\n        }];\n        var color = d3.scale.category20b();\n        d3.json(charactername+\".json\", function(data, err){\n            // var data_arr = data[\"response\"][\"docs\"];\n            // var pref_names =  data_arr.map(function(d){\n            //     return d.prefName;\n            // });\n            var data_arr = data.facet_counts.facet_fields.prefName;\n            var arr = [];\n            var n = 0;\n\n            // pref_names = _.uniq(pref_names);\n            if(show_flg){\n                for (var i = 0; i < data_arr.length; i=i+2) {\n                    n++;\n                    if(data_arr[i+1]==0) continue;\n                    var linkjson = {\n                        \"source\": n,\n                        \"target\": 0,\n                        \"value\": data_arr[i+1]\n                    }\n                    // \"value\": Math.log(data_arr[i+1])/ Math.log(2) +1\n                    var nodejson = {\n                        \"color\": color(i),\n                        \"name\": data_arr[i]\n                    }\n                    jsonfile[\"links\"].push(linkjson);\n                    jsonfile[\"nodes\"].push(nodejson);\n                }\n            }else{\n                for (var i = 2; i < data_arr.length; i=i+2) {\n                    n++;\n                    if(data_arr[i+1]==0) continue;\n                    var linkjson = {\n                        \"source\": n,\n                        \"target\": 0,\n                        \"value\": data_arr[i+1]\n                    }\n                    // \"value\": Math.log(data_arr[i+1])/ Math.log(2) +1\n                    var nodejson = {\n                        \"color\": color(i),\n                        \"name\": data_arr[i]\n                    }\n                    jsonfile[\"links\"].push(linkjson);\n                    jsonfile[\"nodes\"].push(nodejson);\n                }\n            }\n            // data_arr.map(function(pref_name, index){\n            //     // var count = _.filter(data_arr, function(d){return d.prefName == pref_name}).length;\n            //     var linkjson = {\n            //         \"source\": index+1,\n            //         \"target\": 0,\n            //         \"value\": count\n            //     }\n            //     var nodejson = {\n            //         \"color\": color(index),\n            //         \"name\": pref_name\n            //     }\n            //     jsonfile[\"links\"].push(linkjson);\n            //     jsonfile[\"nodes\"].push(nodejson);\n            // });\n            // console.log(JSON.stringify(jsonfile));\n            c.json = jsonfile;\n            success();\n        });\n\n    },\n    init: function(){\n        c.getJson(function(){\n            var energy = c.json;\n              sankey\n                  .nodes(energy.nodes)\n                  .links(energy.links)\n                  .layout(32);\n\n              var link = svg.append(\"g\").selectAll(\".link\")\n                  .data(energy.links)\n                .enter().append(\"path\")\n                  .attr(\"class\", \"link\")\n                  .attr(\"d\", path)\n                  .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n                  .sort(function(a, b) { return b.dy - a.dy; });\n\n              link.append(\"title\")\n                  .text(function(d) { return d.source.name + \"  \" + d.target.name + \"\\n\" + format(d.value) + \" %\"; });\n\n              var node = svg.append(\"g\").selectAll(\".node\")\n                  .data(energy.nodes)\n                .enter().append(\"g\")\n                  .attr(\"class\", \"node\")\n                  .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n                .call(d3.behavior.drag()\n                  .origin(function(d) { return d; })\n                  .on(\"dragstart\", function() { this.parentNode.appendChild(this); })\n                  .on(\"drag\", dragmove));\n\n              node.append(\"rect\")\n                  .attr(\"height\", function(d) { return d.dy; })\n                  .attr(\"width\", sankey.nodeWidth())\n                  .style(\"fill\", function(d) { return d.color; })\n                  .style(\"stroke\", function(d) { return d3.rgb(d.color).darker(2); })\n                .append(\"title\")\n                  .text(function(d) { return d.name + \"\\n\" + format(d.value); });\n\n              node.append(\"text\")\n                  .attr(\"x\", -6)\n                  .attr(\"y\", function(d) { return d.dy / 2; })\n                  .attr(\"dy\", \".35em\")\n                  .attr(\"text-anchor\", \"end\")\n                  .attr(\"transform\", null)\n                  .text(function(d) { return d.name; })\n                .filter(function(d) { return d.x < width / 2; })\n                  .attr(\"x\", 6 + sankey.nodeWidth())\n                  .attr(\"text-anchor\", \"start\");\n\n              function dragmove(d) {\n                d3.select(this).attr(\"transform\", \"translate(\" + d.x + \",\" + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + \")\");\n                sankey.relayout();\n                link.attr(\"d\", path);\n              }\n        })\n    }\n}\n$(document).ready(function(){\n    c.init();\n    $(\"#remove1st\").on(\"change\", function(){\n        if(this.value == \"on\"){\n            show_flg = true;\n        }else{\n            show_flg = false;\n        }\n        d3.selectAll('.yurudata > g').remove();\n        c.init();\n    })\n    $(\"#yuruselect\").on(\"change\", function(){\n        charactername = this.value;\n        characterJp = this[this.selectedIndex].text;\n        $(\"#katsudo\").html(characterJp+\"\");\n        d3.selectAll('.yurudata > g').remove();\n        c.init();\n    })\n});\n\n</script>"
      description: "ゆるきゃらの行動分析"
      created_at: "2016-07-30T04:50:49Z"
      updated_at: "2016-07-30T07:25:34Z"
      api: 
        - "d3.format"
        - "d3.scale.category20"
        - "d3.select"
        - "d3.sankey"
        - "d3.scale.category20b"
        - "d3.json"
        - "d3.behavior.drag"
        - "d3.rgb"
        - "d3.selectAll"
        - "d3.interpolateNumber"
        - "d3.sum"
        - "d3.min"
        - "d3.nest"
      readme: "\n\nforked from <a href='http://bl.ocks.org/michalskop/'>michalskop</a>'s block: <a href='http://bl.ocks.org/michalskop/5508877'>Sankey presidential chart</a>"
      uid: "ymnder_b3b03d70e56084dba0544bddaad804b9"
    - 
      code: "<script>\n\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 70, left: 50 },\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%b %Y\").parse;\n  \nvar color = d3.scale.ordinal().range([\"#A3D385\", \"#9CBCE3\"]);\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y0 = d3.scale.linear().range([height, 0]);\nvar y1 = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n  .orient(\"bottom\").ticks(5);\n\nvar yAxis = d3.svg.axis().scale(y0)\n  .orient(\"left\").ticks(5);\n\n// Define the line\nvar priceline = d3.svg.line()\n  .x(function(d) { return x(d.date); })\n  .y(function(d) { return y0(d.price); });\n\n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n  .append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom);\n  \nvar lineChartLegendG = svg.append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\nvar lineChartG = svg.append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top * 2 + \")\");\n\n// Get the data\nd3.csv(\"data.csv\", function(error, data) {\n  \tdata.forEach(function(d) {\n      \td.date = parseDate(d.date);\n       \td.price = +d.price;\n    });\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.date; }));\n    y0.domain([0, d3.max(data, function(d) { return d.price; })]);\n  \n  \t// Nest the entries by symbol\n    var dataNest = d3.nest()\n    \t\t.key(function(d) { return d.symbol; })\n        .entries(data);\n  \n  \tlegendSpace = width / dataNest.length; // spacing for the legend\n\n    // Loop through each symbol / key\n    dataNest.forEach(function(d, i) {\n      \n      // Line Path\n      lineChartG.append(\"path\")\n        .attr(\"class\", \"line\")\n        .style(\"stroke\", function() { return d.color = color(d.key); })\n        .attr(\"id\", 'line' + d.key.replace(/\\s+/g, '')) // assign ID\n        .attr(\"d\", priceline(d.values));\n\n      // Line Circles\n      lineChartG.selectAll('.lineCircles')\n        .data(data)\n        .enter().append('circle')\n        .attr(\"class\", function(d) { return \"lineCircles circle\" + d.symbol.replace(/\\s+/g, ''); })\n        .style(\"fill\", function(d) { return color(d.symbol); })\n        .attr('cx', function(d) { return x(d.date); })\n        .attr('cy', function(d) { return y0(d.price); })\n        .attr('r', 6);\n      \n      // Legend Circles\n      lineChartLegendG.append(\"circle\")\n        .attr(\"cx\", (legendSpace / 6) + i * legendSpace)\n        .attr(\"cy\", -5)\n        .attr('r', 6)\n        .style(\"fill\", function() { return d.color = color(d.key); })\n        .on(\"click\", function() {\n            // Determine if current line is visible \n            var active = d.active ? false : true,\n                newOpacity = active ? 0 : 1;\n            // Hide or show the elements based on the ID\n            d3.select(\"#line\" + d.key.replace(/\\s+/g, ''))\n              .transition().duration(100)\n              .style(\"opacity\", newOpacity);\n            d3.selectAll(\".circle\" + d.key.replace(/\\s+/g, ''))\n              .transition().duration(100)\n              .style(\"opacity\", newOpacity);\n            // Update whether or not the elements are active\n            d.active = active;\n      \t});\n\n      // Legend Text\n      lineChartLegendG.append(\"text\")\n        .attr(\"x\", (legendSpace / 2) + i * legendSpace)\n        .attr(\"y\", 0)\n        .attr(\"class\", \"legend\")\n        .style(\"fill\", function() { return d.color = color(d.key); })\n        .on(\"click\", function() {\n            // Determine if current line is visible \n            var active = d.active ? false : true,\n                newOpacity = active ? 0 : 1;\n            // Hide or show the elements based on the ID\n            d3.select(\"#line\" + d.key.replace(/\\s+/g, ''))\n              .transition().duration(100)\n              .style(\"opacity\", newOpacity);\n            d3.selectAll(\".circle\" + d.key.replace(/\\s+/g, ''))\n              .transition().duration(100)\n              .style(\"opacity\", newOpacity);\n            // Update whether or not the elements are active\n            d.active = active;\n      \t})\n        .text(d.key);\n      });\n\n      // Add X Axis\n      lineChartG.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n      // Add Y Axis\n      lineChartG.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n});\n\n</script>"
      description: "Dual Axis Line Chart"
      created_at: "2016-07-27T15:34:22Z"
      updated_at: "2016-07-27T17:31:00Z"
      api: 
        - "d3.time.format"
        - "d3.scale.ordinal"
        - "d3.time.scale"
        - "d3.scale.linear"
        - "d3.svg.axis"
        - "d3.svg.line"
        - "d3.select"
        - "d3.csv"
        - "d3.extent"
        - "d3.max"
        - "d3.nest"
        - "d3.selectAll"
      readme: "Built with [blockbuilder.org](http://blockbuilder.org)"
      uid: "alandunning_b7024b78bbd45f23ab5657db14fc63ff"
    - 
      code: "<script>\n    var violation_type = \"Overgrown Vegetation\";\n\n    \n    ///////////////////////////\nfunction plot(name){    \n  \n  d3.select(\"svg\").remove();\n  \n      var width = 960,\n        height = 750,\n        cellSize = 25; // cell size\n\n    var no_months_in_a_row = Math.floor(width / (cellSize * 7 + 50));\n    var shift_up = cellSize * 3;\n\n    var day = d3.timeFormat(\"%w\"), // day of the week\n        day_of_month = d3.timeFormat(\"%e\") // day of the month\n        day_of_year = d3.timeFormat(\"%j\")\n        week = d3.timeFormat(\"%U\"), // week number of the year\n        month = d3.timeFormat(\"%m\"), // month number\n        year = d3.timeFormat(\"%Y\"),\n        percent = d3.format(\".1%\"),\n        format = d3.timeFormat(\"%Y-%m-%d\");\n    \n    var parseDate = d3.timeParse(\"%Y-%m-%d\");\n\n    var color = d3.scaleQuantize()\n        .domain([0, 10])\n        .range(d3.range(11).map(function(d) { return \"q\" + d + \"-11\"; }));\n\n    var svg = d3.select(\"#chart\").selectAll(\"svg\")\n        .data(d3.range(2012, 2013)) //years included in the viz\n      .enter().append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"class\", \"RdYlGn\")\n      .append(\"g\")\n\n    var rect = svg.selectAll(\".day\")\n        .data(function(d) { \n          return d3.timeDays(new Date(d, 0, 1), new Date(d + 1, 0, 1));\n        })\n      .enter().append(\"rect\")\n        .attr(\"class\", \"day\")\n        .attr(\"width\", cellSize)\n        .attr(\"height\", cellSize)\n        .attr(\"x\", function(d) {\n          var month_padding = 1.2 * cellSize*7 * ((month(d)-1) % (no_months_in_a_row));\n          return day(d) * cellSize + month_padding; \n        })\n        .attr(\"y\", function(d) { \n          var week_diff = week(d) - week(new Date(year(d), month(d)-1, 1) );\n          var row_level = Math.ceil(month(d) / (no_months_in_a_row));\n          return (week_diff*cellSize) + row_level*cellSize*8 - cellSize/2 - shift_up;\n        })\n        .datum(format);\n\n    var month_titles = svg.selectAll(\".month-title\")  // Jan, Feb, Mar and the whatnot\n          .data(function(d) { \n            return d3.timeMonths(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n        .enter().append(\"text\")\n          .text(monthTitle)\n          .attr(\"x\", function(d, i) {\n            var month_padding = 1.2 * cellSize*7* ((month(d)-1) % (no_months_in_a_row));\n            return month_padding;\n          })\n          .attr(\"y\", function(d, i) {\n            var week_diff = week(d) - week(new Date(year(d), month(d)-1, 1) );\n            var row_level = Math.ceil(month(d) / (no_months_in_a_row));\n            return (week_diff*cellSize) + row_level*cellSize*8 - cellSize - shift_up;\n          })\n          .attr(\"class\", \"month-title\")\n          .attr(\"d\", monthTitle);\n\n    var year_titles = svg.selectAll(\".year-title\")  // Jan, Feb, Mar and the whatnot\n          .data(function(d) { \n            return d3.timeYears(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n        .enter().append(\"text\")\n          .text(yearTitle)\n          .attr(\"x\", function(d, i) { return width/2 - 100; })\n          .attr(\"y\", function(d, i) { return cellSize*5.5 - shift_up; })\n          .attr(\"class\", \"year-title\")\n          .attr(\"d\", yearTitle);\n\n\n    //  Tooltip Object\n    var tooltip = d3.select(\"body\")\n      .append(\"div\").attr(\"id\", \"tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"z-index\", \"10\")\n      .style(\"visibility\", \"hidden\")\n      .text(\"a simple tooltip\");\n    \n    function dayTitle (t0) {\n      return t0.toString().split(\" \")[2];\n    }\n    function monthTitle (t0) {\n      return t0.toLocaleString(\"en-us\", { month: \"long\" });\n    }\n    function yearTitle (t0) {\n      return t0.toString().split(\" \")[3];\n    }\n  d3.csv(\"Violations-2012.csv\", function(error, data) {\n  if (error) throw error;\n  \n      var vio_by_type = d3.nest().key(function(d) {return d.violation_type}).entries(data);\n      \n      var new_data = d3.nest()\n      \t.key(function(d) {return d.violation_type})\n        .key(function(d) {return (d.violation_date.split(\" \")[0])})\n        .rollup(function(v) { return v.length; })\n      \t.map(data); \n\n\t\tvar data_length =d3.nest()\n    \t.key(function(d) {return d.violation_type})\n    \t.rollup(function(v) { return v.length})\n    \t.map(data)\n      \n    \td3.select(\".container2\").html(\"Number of violations: \" + data_length.get(name))\n    \n      rect.filter(function(d) {\n    return (new_data.get(name).has(d)); \n  })\n      .attr(\"class\", function(d) {\n        return \"day \" + color(new_data.get(name).get(d)); \n      })\n    .select(\"title\")\n      .text(function(d) { return d + \": \" + percent(new_data.get(name).get(d)); });\n\n      //  Tooltip\n      rect.on(\"mouseover\", mouseover);\n      rect.on(\"mouseout\", mouseout);\n      function mouseover(d) {\n        tooltip.style(\"visibility\", \"visible\");\n        var factlet_num = (new_data.get(name).get(d) !== undefined) ? new_data.get(name).get(d) : 0;\n        var purchase_text = d + \": \" + factlet_num + \" violations\";\n\n        tooltip.transition()        \n                    .duration(200)      \n                    .style(\"opacity\", .9);      \n        tooltip.html(purchase_text)  \n                    .style(\"left\", (d3.event.pageX)+30 + \"px\")     \n                    .style(\"top\", (d3.event.pageY) + \"px\"); \n      }\n      function mouseout (d) {\n        tooltip.transition()        \n                .duration(500)      \n                .style(\"opacity\", 0); \n        var $tooltip = $(\"#tooltip\");\n        $tooltip.empty();\n      }\n    });\n\n\n\n}\n    \n$(\"#source li a\").click(function(){\n \tviolation_type = $(this).text();\n  $(\"#source:first-child\").text(violation_type);\n  plot(violation_type.split(\":\")[0]);\n});   \n    \nplot(\"Overgrown Vegetation\");\n</script>"
      description: "Violations 2012 calendar view"
      created_at: "2016-07-24T19:17:13Z"
      updated_at: "2016-07-25T17:37:49Z"
      api: 
        - "d3.scale.linear"
        - "d3.select"
        - "d3.timeFormat"
        - "d3.format"
        - "d3.timeParse"
        - "d3.scaleQuantize"
        - "d3.range"
        - "d3.timeDays"
        - "d3.timeMonths"
        - "d3.timeYears"
        - "d3.csv"
        - "d3.nest"
      readme: "A calendar visualization of the 2012 housing violations dataset. An alternate presentation of this <a href=\"http://bl.ocks.org/BBischof/f463291ee5d339b74f21c5ddbfbf798d\">beeswarm visualization.</a> This one takes advantage of the fact that our data is mostly focused on the year 2012. I used emoji's in the selections to draw more attention to different violations in a long list.\n\nSelect different sorts of violations from the drop down menu. Hold your mouse over a rectangle to reveal more details.\n\nOriginal exploded calendar is <a href=\"http://bl.ocks.org/KathyZ/c2d4694c953419e0509b\">here</a>. Emoji reference from <a href=\"http://apps.timwhitlock.info/emoji/tables/unicode\">here</a>.\n\nforked from <a href='http://bl.ocks.org/BBischof/'>BBischof</a>'s block: <a href='http://bl.ocks.org/BBischof/1947ff949f969d6ca9be285705d57e16'>Calendar Alternate Orientation v4 update</a>"
      uid: "BBischof_7607b90705281634c6da741c34d9ba7c"
    - 
      code: "<script>\n    var width = 960,\n        height = 750,\n        cellSize = 25; // cell size\n\n    var no_months_in_a_row = Math.floor(width / (cellSize * 7 + 50));\n    var shift_up = cellSize * 3;\n\n    var day = d3.timeFormat(\"%w\"), // day of the week\n        day_of_month = d3.timeFormat(\"%e\") // day of the month\n        day_of_year = d3.timeFormat(\"%j\")\n        week = d3.timeFormat(\"%U\"), // week number of the year\n        month = d3.timeFormat(\"%m\"), // month number\n        year = d3.timeFormat(\"%Y\"),\n        percent = d3.format(\".1%\"),\n        format = d3.timeFormat(\"%Y-%m-%d\");\n\n    var color = d3.scaleQuantize()\n        .domain([0, 10])\n        .range(d3.range(11).map(function(d) { return \"q\" + d + \"-11\"; }));\n\n    var svg = d3.select(\"#chart\").selectAll(\"svg\")\n        .data(d3.range(2016, 2017)) //years included in the viz\n      .enter().append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"class\", \"RdYlGn\")\n      .append(\"g\")\n\n    var rect = svg.selectAll(\".day\")\n        .data(function(d) { \n          return d3.timeDays(new Date(d, 0, 1), new Date(d + 1, 0, 1));\n        })\n      .enter().append(\"rect\")\n        .attr(\"class\", \"day\")\n        .attr(\"width\", cellSize)\n        .attr(\"height\", cellSize)\n        .attr(\"x\", function(d) {\n          var month_padding = 1.2 * cellSize*7 * ((month(d)-1) % (no_months_in_a_row));\n          return day(d) * cellSize + month_padding; \n        })\n        .attr(\"y\", function(d) { \n          var week_diff = week(d) - week(new Date(year(d), month(d)-1, 1) );\n          var row_level = Math.ceil(month(d) / (no_months_in_a_row));\n          return (week_diff*cellSize) + row_level*cellSize*8 - cellSize/2 - shift_up;\n        })\n        .datum(format);\n\n    var month_titles = svg.selectAll(\".month-title\")  // Jan, Feb, Mar and the whatnot\n          .data(function(d) { \n            return d3.timeMonths(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n        .enter().append(\"text\")\n          .text(monthTitle)\n          .attr(\"x\", function(d, i) {\n            var month_padding = 1.2 * cellSize*7* ((month(d)-1) % (no_months_in_a_row));\n            return month_padding;\n          })\n          .attr(\"y\", function(d, i) {\n            var week_diff = week(d) - week(new Date(year(d), month(d)-1, 1) );\n            var row_level = Math.ceil(month(d) / (no_months_in_a_row));\n            return (week_diff*cellSize) + row_level*cellSize*8 - cellSize - shift_up;\n          })\n          .attr(\"class\", \"month-title\")\n          .attr(\"d\", monthTitle);\n\n    var year_titles = svg.selectAll(\".year-title\")  // Jan, Feb, Mar and the whatnot\n          .data(function(d) { \n            return d3.timeYears(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n        .enter().append(\"text\")\n          .text(yearTitle)\n          .attr(\"x\", function(d, i) { return width/2 - 100; })\n          .attr(\"y\", function(d, i) { return cellSize*5.5 - shift_up; })\n          .attr(\"class\", \"year-title\")\n          .attr(\"d\", yearTitle);\n\n\n    //  Tooltip Object\n    var tooltip = d3.select(\"body\")\n      .append(\"div\").attr(\"id\", \"tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"z-index\", \"10\")\n      .style(\"visibility\", \"hidden\")\n      .text(\"a simple tooltip\");\n\n    d3.csv(\"factletdata.csv\", function(error, csv) {\n      var data = d3.nest()\n        .key(function(d) { return d.Date; })\n        .rollup(function(d) { return (d[0].Facts); })\n        .map(csv);\n\n      \n      \n      rect.filter(function(d) {\n    return (data.has(d)); \n  })\n      .attr(\"class\", function(d) {\n        return \"day \" + color(data.get(d)); \n      })\n    .select(\"title\")\n      .text(function(d) { return d + \": \" + percent(data.get(d)); });\n\n      //  Tooltip\n      rect.on(\"mouseover\", mouseover);\n      rect.on(\"mouseout\", mouseout);\n      function mouseover(d) {\n        tooltip.style(\"visibility\", \"visible\");\n        var factlet_num = (data[('$' + d)] !== undefined) ? data[('$' + d)] : 0;\n        var purchase_text = d + \": \" + factlet_num + \" factlets\";\n\n        tooltip.transition()        \n                    .duration(200)      \n                    .style(\"opacity\", .9);      \n        tooltip.html(purchase_text)  \n                    .style(\"left\", (d3.event.pageX)+30 + \"px\")     \n                    .style(\"top\", (d3.event.pageY) + \"px\"); \n      }\n      function mouseout (d) {\n        tooltip.transition()        \n                .duration(500)      \n                .style(\"opacity\", 0); \n        var $tooltip = $(\"#tooltip\");\n        $tooltip.empty();\n      }\n\n    });\n\n    function dayTitle (t0) {\n      return t0.toString().split(\" \")[2];\n    }\n    function monthTitle (t0) {\n      return t0.toLocaleString(\"en-us\", { month: \"long\" });\n    }\n    function yearTitle (t0) {\n      return t0.toString().split(\" \")[3];\n    }\n  </script>"
      description: "Calendar Alternate Orientation v4 update"
      created_at: "2016-07-24T07:23:39Z"
      updated_at: "2016-07-24T19:11:55Z"
      api: 
        - "d3.scale.linear"
        - "d3.timeFormat"
        - "d3.format"
        - "d3.scaleQuantize"
        - "d3.range"
        - "d3.select"
        - "d3.timeDays"
        - "d3.timeMonths"
        - "d3.timeYears"
        - "d3.csv"
        - "d3.nest"
      readme: "Updating the exploded month calendar to v4, originally designed by <a href=\"http://bl.ocks.org/KathyZ/c2d4694c953419e0509b\">Kathy Zhou</a>. Thanks again to <a href=\"https://bl.ocks.org/micahstubbs/89c6bd879d64aa511372064c6cf85711\">Micah Stubbs</a> for bug fixes on the <a href=\"http://bl.ocks.org/BBischof/ce688f5edeff3339157e054eacc9725c\">other</a> one."
      uid: "BBischof_1947ff949f969d6ca9be285705d57e16"
    - 
      code: "<script>\n\nvar width = 960,\n    height = 136,\n    cellSize = 17; // cell size\n\nvar percent = d3.format(\".1%\"),\n    format = d3.timeFormat(\"%Y-%m-%d\");\n\nvar color = d3.scaleQuantize()\n    .domain([-.05, .05])\n    .range(d3.range(11).map(function(d) { return \"q\" + d + \"-11\"; }));\n\nvar svg = d3.select(\"body\").selectAll(\"svg\")\n    .data(d3.range(1990, 2011))\n  .enter().append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .attr(\"class\", \"RdYlGn\")\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + ((width - cellSize * 53) / 2) + \",\" + (height - cellSize * 7 - 1) + \")\");\n\nsvg.append(\"text\")\n    .attr(\"transform\", \"translate(-6,\" + cellSize * 3.5 + \")rotate(-90)\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) { return d; });\n\nvar rect = svg.selectAll(\".day\")\n    .data(function(d) { return d3.timeDays(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"rect\")\n    .attr(\"class\", \"day\")\n    .attr(\"width\", cellSize)\n    .attr(\"height\", cellSize)\n    .attr(\"x\", function(d) { return d3.timeWeek.count(d3.timeYear(d), d) * cellSize; })\n    .attr(\"y\", function(d) { return d.getDay() * cellSize; })\n    .datum(format);\n\nrect.append(\"title\")\n    .text(function(d) { return d; });\n\nsvg.selectAll(\".month\")\n    .data(function(d) { return d3.timeMonths(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"path\")\n    .attr(\"class\", \"month\")\n    .attr(\"d\", monthPath);\n\nd3.csv(\"dji.csv\", function(error, csv) {\n  if (error) throw error;\n\n  var data = d3.nest()\n    .key(function(d) { return d.Date; })\n    .rollup(function(d) { return (d[0].Close - d[0].Open) / d[0].Open; })\n    .map(csv);\n\n  console.log('data', data);\n\n  rect.filter(function(d) { return data.has(d); })\n      .attr(\"class\", function(d) { return \"day \" + color(data.get(d)); })\n    .select(\"title\")\n      .text(function(d) { return d + \": \" + percent(data.get(d)); });\n});\n\nfunction monthPath(t0) {\n  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),\n      d0 = t0.getDay(), w0 = d3.timeWeek.count(d3.timeYear(t0), t0)\n      d1 = t1.getDay(), w1 = d3.timeWeek.count(d3.timeYear(t1), t1);\n  return \"M\" + (w0 + 1) * cellSize + \",\" + d0 * cellSize\n      + \"H\" + w0 * cellSize + \"V\" + 7 * cellSize\n      + \"H\" + w1 * cellSize + \"V\" + (d1 + 1) * cellSize\n      + \"H\" + (w1 + 1) * cellSize + \"V\" + 0\n      + \"H\" + (w0 + 1) * cellSize + \"Z\";\n}\n\n</script>"
      description: "D3 v4 Calendar View"
      created_at: "2016-07-24T06:40:14Z"
      updated_at: "2016-07-24T23:20:31Z"
      api: 
        - "d3.format"
        - "d3.timeFormat"
        - "d3.scaleQuantize"
        - "d3.range"
        - "d3.select"
        - "d3.timeDays"
        - "d3.timeWeek.count"
        - "d3.timeYear"
        - "d3.timeMonths"
        - "d3.csv"
        - "d3.nest"
      readme: "a d3 version 4 calendar heatmap\n\na fork of the [Calendar View](http://bl.ocks.org/mbostock/4063318) bl.ock from [@mbostock](https://twitter.com/mbostock)\n\ncreated in response to  the [question](https://d3js.slack.com/archives/examples/p1469309536000060) from [@BEBischof](https://twitter.com/BEBischof) on the [d3js slack](https://d3js.slack.com)  \n\n> _did anyone fix the calendar view to v4 yet?_  \n\n(curious about this slack thing? you can get yourself an invite over at [https://d3-slackin.herokuapp.com/](https://d3-slackin.herokuapp.com/))  \n\n---\n\na special thanks to [@mbostock](https://twitter.com/mbostock), who showed us just where to use d3 v4's new [`map.has(key)`](https://github.com/d3/d3-collection/blob/master/README.md#map_has) and [`map.get(key)`](https://github.com/d3/d3-collection/blob/master/README.md#map_get) in [this twitter thread](https://twitter.com/micahstubbs/status/757116920118116353)\n\n---\n\nincidentally, this is the first d3 example I've created from [VR](https://en.wikipedia.org/wiki/Virtual_reality).  \n\nmy current stack for d3 development in VR is [Sublime Text 3](https://www.sublimetext.com/3) + [Terminator + zsh](http://jabran.me/articles/ubuntu-dev-workspace-with-terminator-oh-my-zsh-cobalt2/) + [Chrome](https://www.google.com/chrome/browser/desktop/index.html?brand=CHBD&gclid=Cj0KEQjwztG8BRCJgseTvZLctr8BEiQAA_kBD1ONoUI7GUvcyogNjGmn6pQg0GucMICV1sV63JJtQz4aAvna8P8HAQ). this is pretty similar to the Mac environment I normally work from. from there, it's:  \n\n[Ubuntu 16.04](http://releases.ubuntu.com/16.04/) <- [VirtualBox](https://www.virtualbox.org/wiki/Downloads) <- [Windows 10](https://www.microsoft.com/en-us/software-download/windows10/) <- [BigScreen](http://store.steampowered.com/app/457550/)  <- [HTC Vive](https://www.htcvive.com/us/) \n\n---\n\n#### Original `README.md`  \n\nThis example demonstrates loading of CSV data, which is then quantized into a diverging color scale. The values are visualized as colored cells per day. Days are arranged into columns by week, then grouped by month and years. Colors by [Cynthia Brewer](http://colorbrewer.org/). Layout inspired by [Rick Wicklin and Robert Allison](http://stat-computing.org/dataexpo/2009/posters/). Dow Jones historical data copyright [Yahoo! Finance](http://finance.yahoo.com/) or independent data provider; fair use for educational purposes.\n"
      uid: "micahstubbs_89c6bd879d64aa511372064c6cf85711"
    - 
      code: "<script>\n\nvar width = 960,\n    height = 136,\n    cellSize = 17; // cell size\n\nvar percent = d3.format(\".1%\"),\n    format = d3.timeFormat(\"%Y-%m-%d\");\n\nvar color = d3.scaleQuantize()\n    .domain([-.05, .05])\n    .range(d3.range(11).map(function(d) { return \"q\" + d + \"-11\"; }));\n\nvar svg = d3.select(\"body\").selectAll(\"svg\")\n    .data(d3.range(1990, 2011))\n  .enter().append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .attr(\"class\", \"RdYlGn\")\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + ((width - cellSize * 53) / 2) + \",\" + (height - cellSize * 7 - 1) + \")\");\n\nsvg.append(\"text\")\n    .attr(\"transform\", \"translate(-6,\" + cellSize * 3.5 + \")rotate(-90)\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) { return d; });\n\nvar rect = svg.selectAll(\".day\")\n    .data(function(d) { return d3.timeDays(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"rect\")\n    .attr(\"class\", \"day\")\n    .attr(\"width\", cellSize)\n    .attr(\"height\", cellSize)\n    .attr(\"x\", function(d) { return d3.timeWeek.count(d3.timeYear(d), d) * cellSize; })\n    .attr(\"y\", function(d) { return d.getDay() * cellSize; })\n    .datum(format);\n  \n\nrect.append(\"title\")\n    .text(function(d) { return d; });\n\nsvg.selectAll(\".month\")\n    .data(function(d) { return d3.timeMonths(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"path\")\n    .attr(\"class\", \"month\")\n    .attr(\"d\", monthPath);\n\nd3.csv(\"dji.csv\", function(error, csv) {\n  if (error) throw error;\n\n  var data = d3.nest()\n    .key(function(d) { return d.Date; })\n    .rollup(function(d) { return (d[0].Close - d[0].Open) / d[0].Open; })\n    .map(csv);\n  \n  \n  \nrect.filter(function(d) {\n    return (data.has(d)); \n  })\n      .attr(\"class\", function(d) {\n        return \"day \" + color(data.get(d)); \n      })\n    .select(\"title\")\n      .text(function(d) { return d + \": \" + percent(data.get(d)); });\n  \n});\n\nfunction monthPath(t0) {\n  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),\n      d0 = t0.getDay(), w0 = d3.timeWeek.count(d3.timeYear(t0), t0),\n      d1 = t1.getDay(), w1 = d3.timeWeek.count(d3.timeYear(t1), t1);\n  return \"M\" + (w0 + 1) * cellSize + \",\" + d0 * cellSize\n      + \"H\" + w0 * cellSize + \"V\" + 7 * cellSize\n      + \"H\" + w1 * cellSize + \"V\" + (d1 + 1) * cellSize\n      + \"H\" + (w1 + 1) * cellSize + \"V\" + 0\n      + \"H\" + (w0 + 1) * cellSize + \"Z\";\n}\n\n</script>"
      description: "Calendar View v4"
      created_at: "2016-07-23T22:32:36Z"
      updated_at: "2016-07-24T19:11:34Z"
      api: 
        - "d3.format"
        - "d3.timeFormat"
        - "d3.scaleQuantize"
        - "d3.range"
        - "d3.select"
        - "d3.timeDays"
        - "d3.timeWeek.count"
        - "d3.timeYear"
        - "d3.timeMonths"
        - "d3.csv"
        - "d3.nest"
      readme: "Updated the standard cal to v4. Micah Stubbs with a big assist on finding my bug(s) <a href=\"https://bl.ocks.org/micahstubbs/89c6bd879d64aa511372064c6cf85711\">his version here.</a>\n\n\n----\n\nThis example demonstrates loading of CSV data, which is then quantized into a diverging color scale. The values are visualized as colored cells per day. Days are arranged into columns by week, then grouped by month and years. Colors by [Cynthia Brewer](http://colorbrewer.org/). Layout inspired by [Rick Wicklin and Robert Allison](http://stat-computing.org/dataexpo/2009/posters/). Dow Jones historical data copyright [Yahoo! Finance](http://finance.yahoo.com/) or independent data provider; fair use for educational purposes.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063318'>Calendar View</a>"
      uid: "BBischof_ce688f5edeff3339157e054eacc9725c"
    - 
      code: "<script>\n    var width = 960,\n        height = 750,\n        cellSize = 25; // cell size\n\n    var no_months_in_a_row = Math.floor(width / (cellSize * 7 + 50));\n    var shift_up = cellSize * 3;\n\n    var day = d3.timeParse(\"%w\"), // day of the week\n        day_of_month = d3.timeParse(\"%e\") // day of the month\n        day_of_year = d3.timeParse(\"%j\")\n        week = d3.timeParse(\"%U\"), // week number of the year\n        month = d3.timeParse(\"%m\"), // month number\n        year = d3.timeParse(\"%Y\"),\n        percent = d3.format(\".1%\"),\n        format = d3.timeParse(\"%Y-%m-%d\");\n\n    var color = d3.scaleQuantize()\n        .domain([0, 10])\n        .range(d3.range(11).map(function(d) { return \"q\" + d + \"-11\"; }));\n\n    var svg = d3.select(\"#chart\").selectAll(\"svg\")\n        .data(d3.range(2016, 2017)) //years included in the viz\n      .enter().append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"class\", \"RdYlGn\")\n      .append(\"g\")\n\n    var rect = svg.selectAll(\".day\")\n        .data(function(d) { \n          return d3.timeDays(new Date(d, 0, 1), new Date(d + 1, 0, 1));\n        })\n      .enter().append(\"rect\")\n        .attr(\"class\", \"day\")\n        .attr(\"width\", cellSize)\n        .attr(\"height\", cellSize)\n        .attr(\"x\", function(d) {\n          var month_padding = 1.2 * cellSize*7 * ((month(d)-1) % (no_months_in_a_row));\n          return day(d) * cellSize + month_padding; \n        })\n        .attr(\"y\", function(d) { \n          var week_diff = week(d) - week(new Date(year(d), month(d)-1, 1) );\n          var row_level = Math.ceil(month(d) / (no_months_in_a_row));\n          return (week_diff*cellSize) + row_level*cellSize*8 - cellSize/2 - shift_up;\n        })\n        .datum(format);\n\n    var month_titles = svg.selectAll(\".month-title\")  // Jan, Feb, Mar and the whatnot\n          .data(function(d) { \n            return d3.timeMonths(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n        .enter().append(\"text\")\n          .text(monthTitle)\n          .attr(\"x\", function(d, i) {\n            var month_padding = 1.2 * cellSize*7* ((month(d)-1) % (no_months_in_a_row));\n            return month_padding;\n          })\n          .attr(\"y\", function(d, i) {\n            var week_diff = week(d) - week(new Date(year(d), month(d)-1, 1) );\n            var row_level = Math.ceil(month(d) / (no_months_in_a_row));\n            return (week_diff*cellSize) + row_level*cellSize*8 - cellSize - shift_up;\n          })\n          .attr(\"class\", \"month-title\")\n          .attr(\"d\", monthTitle);\n\n    var year_titles = svg.selectAll(\".year-title\")  // Jan, Feb, Mar and the whatnot\n          .data(function(d) { \n            return d3.timeYears(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n        .enter().append(\"text\")\n          .text(yearTitle)\n          .attr(\"x\", function(d, i) { return width/2 - 100; })\n          .attr(\"y\", function(d, i) { return cellSize*5.5 - shift_up; })\n          .attr(\"class\", \"year-title\")\n          .attr(\"d\", yearTitle);\n\n\t\tvar parseDate = d3.timeParse(\"%Y-%m-%d\");\n    \n    //  Tooltip Object\n    var tooltip = d3.select(\"body\")\n      .append(\"div\").attr(\"id\", \"tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"z-index\", \"10\")\n      .style(\"visibility\", \"hidden\")\n      .text(\"a simple tooltip\");\n    \n//     var expensesTotalByDay = d3.nest()\n//   .key(function(d) { return d.name; })\n//   .key(function(d) { return d.date; })\n//   .rollup(function(v) { return d3.sum(v, function(d) { return d.amount; }); })\n//   .map(expenses);\n// console.log(JSON.stringify(expensesTotalByDay));\n// => {\"jim\":{\"11/12/2015\":34,\"12/01/2015\":45},\n//  \"carl\":{\"11/12/2015\":120.11},\n//  \"stacy\":{\"01/04/2016\":46.1,\"01/05/2016\":44.8}}\n    \n    \n    d3.csv(\"Violations-2012.csv\", function(error, data) {\n  if (error) throw error;\n  \n  \n  data.map(function(d){\n//    console.log(parseDate(d.violation_date.split(\" \")[0]));\n//     console.log((d.violation_date).split(\" \")[0]);\n    return d.violation_date;\n  })\n      var vio_by_type = d3.nest().key(function(d) {return d.violation_type}).entries(data);\n      \n      var new_data = d3.nest()\n      \t.key(function(d) {return d.violation_type})\n      \t.key(function(d) {return parseDate(d.violation_date.split(\" \")[0])})\n        .rollup(function(v) { return v.length; })\n      \t.entries(data);\n      \n      console.log(new_data[0][\"values\"]);\n      \n//       console.log(vio_by_type);\n      \n//       console.log(vio_by_type[0][\"values\"]);\n      \n//       data_agg = vio_by_type[0][\"values\"].map(function(d){ return d});\n      \n    });\n\n    d3.csv(\"factletdata.csv\", function(error, csv) {\n      var data = d3.nest()\n        .key(function(d) { return d.Date; })\n        .rollup(function(d) { return (d[0].Facts); })\n        .map(csv);\n      \n\t\t\t//console.log(data)\n\n      rect.filter(function(d) { return d in data; })\n          .attr(\"class\", function(d) {console.log(color(data[d])); return \"day \" + color(data[d]); })\n        .select(\"title\")\n          .text(function(d) { return d + \": \" + data[d]; });\n\n      //  Tooltip\n      rect.on(\"mouseover\", mouseover);\n      rect.on(\"mouseout\", mouseout);\n      function mouseover(d) {\n        tooltip.style(\"visibility\", \"visible\");\n        var factlet_num = (data[d] !== undefined) ? data[d] : 0;\n        var purchase_text = d + \": \" + factlet_num + \" factlets\";\n\n        tooltip.transition()        \n                    .duration(200)      \n                    .style(\"opacity\", .9);      \n        tooltip.html(purchase_text)  \n                    .style(\"left\", (d3.event.pageX)+30 + \"px\")     \n                    .style(\"top\", (d3.event.pageY) + \"px\"); \n      }\n      function mouseout (d) {\n        tooltip.transition()        \n                .duration(500)      \n                .style(\"opacity\", 0); \n        var $tooltip = $(\"#tooltip\");\n        $tooltip.empty();\n      }\n\n    });\n\n    function dayTitle (t0) {\n      return t0.toString().split(\" \")[2];\n    }\n    function monthTitle (t0) {\n      return t0.toLocaleString(\"en-us\", { month: \"long\" });\n    }\n    function yearTitle (t0) {\n      return t0.toString().split(\" \")[3];\n    }\n  </script>"
      description: "Calendar View"
      created_at: "2016-07-23T19:11:55Z"
      updated_at: "2016-07-23T21:25:11Z"
      api: 
        - "d3.scale.linear"
        - "d3.timeParse"
        - "d3.format"
        - "d3.scaleQuantize"
        - "d3.range"
        - "d3.select"
        - "d3.timeDays"
        - "d3.timeMonths"
        - "d3.timeYears"
        - "d3.nest"
        - "d3.sum"
        - "d3.csv"
      readme: "This example demonstrates loading of CSV data, which is then quantized into a diverging color scale. The values are visualized as colored cells per day. Days are arranged into columns by week, then grouped by month and years. Colors by [Cynthia Brewer](http://colorbrewer.org/). Layout inspired by [Rick Wicklin and Robert Allison](http://stat-computing.org/dataexpo/2009/posters/). Dow Jones historical data copyright [Yahoo! Finance](http://finance.yahoo.com/) or independent data provider; fair use for educational purposes.\n\n\nforked from <a href='http://bl.ocks.org/tarekrached/'>tarekrached</a>'s block: <a href='http://bl.ocks.org/tarekrached/4177279'>Calendar View</a>"
      uid: "BBischof_f5d266a7ea553cf89d3e6134cd732984"
    - 
      code: "<script>\n\n// options = [\"Animals Prohibited number\", \"Animals and Pests not specified\", \"Damaged or defective walls floors or ceilings\", \"Insects not specified\", \"Rodents not specified\", \"Unsanitary conditions not specified\", \"Abandoned Vehicle\", \"Animal Feces\", \"Animal Urine\", \"Barrier to Emergency Ingress or Egress\", \"Bed Bugs\", \"Building Dampness or Water Intrusion\", \"Cockroaches\", \"Cockroaches\", \"Dogs\", \"Flies\", \"Human Feces\", \"Human Urine\", \"Improper Refuse Storage\", \"Inadequate Heating\", \"Inadequate Lighting\", \"Inadequate Pest Exclusion\", \"Inadequate Ventilation\", \"Inadequate or Improper Kitchen Facilities\", \"Inoperable Windows\", \"Lead Hazard\", \"Mice\", \"Moderate risk food holding temperature\", \"Mold or Mildew\", \"Mosquitos\", \"No or inadequate hot or cold water\", \"Non-functioning Smoke Detector\", \"Nuisance Odors\", \"Overgrown Vegetation\", \"Pidgeons\", \"Poison Ivy or Poison Oak\", \"Rats\", \"Refuse Accumulation\", \"Refuse Not Properly Stored\", \"Sewage Hazard\", \"Standing Water\", \"Unsanitary Floors or Walls\", \"Unsanitary Public Areas\", \"Unsanitary Toilets or Bathrooms\"]  \n  \nvar violation_type = \"Overgrown Vegetation\";  \n  \nfunction plot(name) {\nd3.select(\"svg\").remove();\n \nmargin = {top: 40, right: 40, bottom: 40, left: 40},\nwidth = 960 - margin.left - margin.right,\nheight = 250 - margin.top - margin.bottom;  \n  \nvar svg = d3.select(\"body\").append(\"svg\")\n\t\t.attr(\"class\", \"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    \n\nvar formatValue = d3.format(\",d\");\n\nvar x = d3.scaleTime()\n    .rangeRound([0, width-50]);\n  \nvar color = d3.scaleOrdinal().domain([\"Animals Prohibited number\", \"Animals and Pests not specified\", \"Damaged or defective walls floors or ceilings\", \"Insects not specified\", \"Rodents not specified\", \"Unsanitary conditions not specified\", \"Abandoned Vehicle\", \"Animal Feces\", \"Animal Urine\", \"Barrier to Emergency Ingress or Egress\", \"Bed Bugs\", \"Building Dampness or Water Intrusion\", \"Cockroaches\", \"Cockroaches\", \"Dogs\", \"Flies\", \"Human Feces\", \"Human Urine\", \"Improper Refuse Storage\", \"Inadequate Heating\", \"Inadequate Lighting\", \"Inadequate Pest Exclusion\", \"Inadequate Ventilation\", \"Inadequate or Improper Kitchen Facilities\", \"Inoperable Windows\", \"Lead Hazard\", \"Mice\", \"Moderate risk food holding temperature\", \"Mold or Mildew\", \"Mosquitos\", \"No or inadequate hot or cold water\", \"Non-functioning Smoke Detector\", \"Nuisance Odors\", \"Overgrown Vegetation\", \"Pidgeons\", \"Poison Ivy or Poison Oak\", \"Rats\", \"Refuse Accumulation\", \"Refuse Not Properly Stored\", \"Sewage Hazard\", \"Standing Water\", \"Unsanitary Floors or Walls\", \"Unsanitary Public Areas\", \"Unsanitary Toilets or Bathrooms\"]).range([\"#0a72ff\", \"#1eff06\", \"#ff1902\", \"#2dfefe\", \"#827c01\", \"#fe07a6\", \"#a8879f\", \"#fcff04\", \"#c602fe\", \"#16be61\", \"#ff9569\", \"#05b3ff\", \"#ecffa7\", \"#3f8670\", \"#e992ff\", \"#ffb209\", \"#e72955\", \"#83bf02\", \"#bba67b\", \"#fe7eb1\", \"#7570c1\", \"#85bfd1\", \"#f97505\", \"#9f52e9\", \"#8ffec2\", \"#dad045\", \"#b85f60\", \"#fe4df2\", \"#75ff6c\", \"#78a55a\", \"#ae6a02\", \"#bebeff\", \"#ffb3b3\", \"#a4fe04\", \"#ffc876\", \"#c548a7\", \"#d6492b\", \"#547da7\", \"#358b06\", \"#95caa9\", \"#07b990\", \"#feb6e9\", \"#c9ff76\", \"#02b708\"])\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar parseDate = d3.timeParse(\"%Y-%m-%d\");\n\nd3.csv(\"Violations-2012.csv\", function(error, data) {\n  if (error) throw error;\n  \n  \n  data.map(function(d){\n//    console.log(parseDate(d.violation_date.split(\" \")[0]));\n//     console.log((d.violation_date).split(\" \")[0]);\n    return d.violation_date;\n  })\n  \n  var vio_by_type = d3.nest().key(function(d) {return d.violation_type}).entries(data);\n  var names = vio_by_type.map(function(f){return f.key});\n\n//  console.log(names);\n  \n  data_length = vio_by_type[names.indexOf(name)][\"values\"].length\n  \n  max_min = d3.extent(vio_by_type[names.indexOf(name)][\"values\"], function(d) {return parseDate(d.violation_date.split(\" \")[0]);})\n  \n   d3.select(\".container2\").html(\"Number of violations: \" + data_length)\n   \nd3.select(\".container2\").append(\"p\").html(\" First recorded Violation: \" + max_min[0])\n\nd3.select(\".container2\").append(\"p\").html(\" Last recorded Violation: \" + max_min[1])\n\n\n  x.domain(d3.extent(data, function(d) {return parseDate(d.violation_date.split(\" \")[0]); }));\n\n\n  var simulation = d3.forceSimulation(vio_by_type[names.indexOf(name)][\"values\"])\n      .force(\"x\", d3.forceX(function(d) { return x(parseDate(d.violation_date.split(\" \")[0])); }).strength(1))\n      .force(\"y\", d3.forceY(height / 2))\n      .force(\"collide\", d3.forceCollide(4))\n      .stop();\n\n  for (var i = 0; i < 120; ++i) simulation.tick();\n\n  g.append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", \"translate(0,\" + (height - 60) + \")\")\n      .call(d3.axisBottom(x).ticks(13, \"%m-%Y\"));\n\n  var cell = g.append(\"g\")\n      .attr(\"class\", \"cells\")\n    .selectAll(\"g\").data(d3.voronoi()\n        .extent([[-margin.left, -margin.top], [width + margin.right, height + margin.top]])\n        .x(function(d) { return d.x; })\n        .y(function(d) { return d.y; })\n      .polygons(vio_by_type[names.indexOf(name)][\"values\"])).enter().append(\"g\");\n\n  cell.append(\"circle\")\n      .attr(\"r\", 3)\n      .attr(\"cx\", function(d) { return d.data.x; })\n      .attr(\"cy\", function(d) { return d.data.y; })\n  \t\t.style(\"fill\", function(d) { return color(d.data.violation_type); });\n\n  cell.append(\"path\")\n      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; });\n\n  cell.append(\"title\")\n      .text(function(d) { return \"Violation id: \" + d.data.violation_id + \"\\n\" + \"Violation: \" +(d.data.violation_category) + \"-\" +(d.data.violation_type) + \"\\n\" + \"Violation date: \" + d.data.violation_date.split(\" \")[0]; });\n  \n});\n\n}\n\n\n$(\"#source li a\").click(function(){\n  violation_type = $(this).text();\n  $(\"#source:first-child\").text(violation_type);\n  plot(violation_type);\n});  \n  \nplot(\"Overgrown Vegetation\");  \n  \n</script>"
      description: "Housing Violations Data - 2012"
      created_at: "2016-07-23T19:05:46Z"
      updated_at: "2016-07-24T20:09:38Z"
      api: 
        - "d3.select"
        - "d3.format"
        - "d3.scaleTime"
        - "d3.scaleOrdinal"
        - "d3.timeParse"
        - "d3.csv"
        - "d3.nest"
        - "d3.extent"
        - "d3.forceSimulation"
        - "d3.forceX"
        - "d3.forceY"
        - "d3.forceCollide"
        - "d3.axisBottom"
        - "d3.voronoi"
      readme: "A beeswarm plot to visualize housing violations from 2012. Each point is a violation of the specified type.\n\nSelect different sorts of violations from the drop down menu. Hold your mouse over a point to reveal more details.\n\nThe beeswarm plot is a convenient modification of the scatterplot for one dimensional datasets where some data points have the same `x-value`. \n\nAn alternative view can be seen <a href=\"http://bl.ocks.org/BBischof/7607b90705281634c6da741c34d9ba7c\">here</a>\n\n\nOriginal Example: <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block, <a href='http://bl.ocks.org/mbostock/6526445e2b44303eebf21da3b6627320'>Beeswarm</a>\n\nforked from <a href='http://bl.ocks.org/BBischof/'>BBischof</a>'s block: <a href='http://bl.ocks.org/BBischof/a9e166f26ea11e01d838273e34a043b6'>Housing Violations Data - 2012</a>"
      uid: "BBischof_f463291ee5d339b74f21c5ddbfbf798d"
    - 
      code: "<script>\n\nvar margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = 700 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width])\n    .domain([2002,2012])\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tickFormat(function(d) { return d});\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .tickSize(-width)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.year); })\n    .y(function(d) { return y(d.val); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.year = +d.year;\n    d.val = +d.val;\n  });\n\n  yearlyCostByNetwork = d3.nest()\n      .key(function(d) { return d.network})\n      .entries(data);\n\n  y.domain([0,d3.max(data.map(function(d) { return d.val; }))]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n  var linesContainer = svg.append(\"g\")\n\n  linesContainer.selectAll(\".network-line\")\n      .data(yearlyCostByNetwork)\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"network-line\")\n      .attr(\"d\", function(d) { return line(d.values); });\n\n  var labelElements = svg.append(\"g\")\n      .attr(\"class\", \"fiddly-bits\")\n\n  var label = labelElements.selectAll(\".g-label-element\")\n      .data(data.filter(function(d) { return d.year == 2012; }))\n    .enter().append(\"g\")\n      .attr(\"class\", \"g-label-element\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.year) + \",\" + y(d.val) + \")\"; } );\n\n  label.append(\"circle\")\n      .attr(\"r\", 4)\n\n    label.append(\"text\")\n      .attr(\"x\", 10)\n      .text(function(d) { return d.network})\n\n});\n\n\n</script>"
      description: "Line charts with dot annotation"
      created_at: "2016-07-21T20:07:10Z"
      updated_at: "2016-07-21T20:07:10Z"
      api: 
        - "d3.scale.linear"
        - "d3.svg.axis"
        - "d3.svg.line"
        - "d3.select"
        - "d3.tsv"
        - "d3.nest"
        - "d3.max"
      readme: "Line charts with circles and labels. A demonstration of the technique for a student."
      uid: "monkeycycle_a492b5e0da787d2e3bbe86af450b4bf7"
    - 
      code: "<script>\n  function type(d) {\n  d[\"Expression (5 min)\"] = +d[\"Expression (5 min)\"];\n  d[\"Expression (30 min)\"] = +d[\"Expression (30 min)\"];\n  d[\"Expression (60 min)\"] = +d[\"Expression (60 min)\"];\n  return d;\n}\nd3.csv(\"dataConsolidated.csv\", type, function(error, data) {\n  if (error) throw error;\n\n/*var dataByTimePoint = d3.nest()\n  .key(function(d) { return d.TimePoint; })\n  .entries(data);\n  //console.log(dataByTimepoint);*/\n  \ndataLayer = function(g) {\n  return data.map(function(d, i) {\n    //console.log(d, i,g);\n    return {x: d.GeneNumber, y: d[g], Function: d.Function};\n  });\n};\n\nvar n = 3, // number of layers\n    m = 88, // number of samples per layer\n    stack = d3.layout.stack();\n    layers = stack(['Expression (5 min)', 'Expression (30 min)', 'Expression (60 min)'].map(function(a) { return dataLayer(a);}));\n    yGroupMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y; }); }),\n    yStackMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); });\nvar margin = {top: 40, right: 10, bottom: 80, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .domain(d3.range(1,m+1))\n    .rangeRoundBands([0, width], .08);\n\nvar y = d3.scale.linear()\n    .domain([0, yStackMax])\n    .range([height, 0]);\n\n/*var color = d3.scale.linear()\n    .domain([0, n - 1])\n    .range([\"#b5c062\", \"#834ed4\"]);*/\n  \nvar color = d3.scale.ordinal()\n\t\t.range(['gold', 'gray', 'purple']);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickSize(0)\n    .tickPadding(6)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");var yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n  \nvar layer = svg.selectAll(\".layer\")\n    .data(layers)\n  .enter().append(\"g\")\n    .attr(\"class\", \"layer\")\n    .style(\"fill\", function(d, i) { return color(i); });\n  \nfunction openlink(input) {\n  console.log(input.Function);\n\twindow.open(\"https://www.google.com/#q=%22DNA+Primase%22\")\n}\n\nvar rect = layer.selectAll(\"rect\")\n    .data(function(d) { return d; })\n  .enter().append(\"rect\")\n    .attr(\"x\", function(d) { return x(d.x); })\n    .attr(\"y\", height)\n    .attr(\"width\", x.rangeBand())\n    .attr(\"height\", 0)\n    .on(\"click\", openlink);\n\n  \n var tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    console.log(d);\n    return \"<strong>Function:</strong> <span style='color:yellow'>\" + d.Function + \"</span>\";\n  });  \n  rect\n    .on('mouseover', tip.show)\n    .on('mouseout', tip.hide);;\n\nsvg.call(tip);\n  \n  \nrect.transition()\n    .delay(function(d, i) { return i * 10; })\n    .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n    .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); });\n  \n  x_group = svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n  \n  x_group\n    .selectAll(\"text\")\n  \t.attr(\"transform\", function (d) {return \"rotate(-60,\" + 0 + \",\" + 14 +  \")\"});\n  \n    svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .append(\"text\")\n\t  .attr(\"font-size\", 16)\n  \t.attr(\"text-anchor\", \"end\")\n    .attr(\"x\", width)\n    .attr(\"y\", height + margin.bottom/2)\n    .attr(\"shape-rendering\", \"crispEdges\")\n    .text(\"Kampy Gene Number\");\n   \n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n    .append(\"text\")\n  \t.attr(\"font-size\", 16)\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"Expression (RPKM)\");\n  \n  var legend = svg.selectAll(\".legend\")\n    .data(d3.keys(data[0]).slice(5))\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; })\n      .style(\"font\", \"10px sans-serif\");\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .attr(\"fill\", function(d,i) { return color(i);});\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\nd3.selectAll(\"input\").on(\"change\", change);\n\nvar timeout = setTimeout(function() {\n  d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n}, 2000);\n\nfunction change() {\n  clearTimeout(timeout);\n  if (this.value === \"grouped\") transitionGrouped();\n  else transitionStacked();\n}\n\nfunction transitionGrouped() {\n  y.domain([0, yGroupMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"x\", function(d, i, j) { return x(d.x) + x.rangeBand() / n * j; })\n      .attr(\"width\", x.rangeBand() / n)\n    .transition()\n      .attr(\"y\", function(d) { return y(d.y); })\n      .attr(\"height\", function(d) { return height - y(d.y); });\n}\n\nfunction transitionStacked() {\n  y.domain([0, yStackMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n      .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); })\n    .transition()\n      .attr(\"x\", function(d) { return x(d.x); })\n      .attr(\"width\", x.rangeBand());\n}\n\n});\n\n</script>"
      description: "bar chart 6"
      created_at: "2016-07-21T14:27:16Z"
      updated_at: "2016-07-21T14:30:51Z"
      api: 
        - "d3.csv"
        - "d3.nest"
        - "d3.layout.stack"
        - "d3.max"
        - "d3.scale.ordinal"
        - "d3.range"
        - "d3.scale.linear"
        - "d3.svg.axis"
        - "d3.select"
        - "d3.tip"
        - "d3.keys"
        - "d3.selectAll"
      readme: "Switch between stacked and grouped layouts using sequenced transitions! Animations preserve object constancy and allow the user to follow the data across views. Animation design by [Heer and Robertson](http://vis.berkeley.edu/papers/animated_transitions/). Colors and data generation inspired by [Byron and Wattenberg](http://www.leebyron.com/else/streamgraph/).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3943967'>Stacked-to-Grouped Bars</a>\n\nforked from <a href='http://bl.ocks.org/scresawn/'>scresawn</a>'s block: <a href='http://bl.ocks.org/scresawn/06f6218180abdd924af0c1a3d1db2d55'>Stacked-to-Grouped Bars</a>"
      uid: "scresawn_59a710a98e6a993cbcf30212a47bde24"
    - 
      code: "<script>\n\nvar width = 960,\n    height = 136,\n    cellSize = 17; // cell size\n\nvar percent = d3.format(\".1%\"),\n    format = d3.time.format(\"%Y-%m-%d\");\n\nvar color = d3.scale.quantize()\n    .domain([-.05, .05])\n    .range(d3.range(11).map(function(d) { return \"q\" + d + \"-11\"; }));\n\nvar svg = d3.select(\"body\").selectAll(\"svg\")\n    .data(d3.range(1990, 2011))\n  .enter().append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .attr(\"class\", \"RdYlGn\")\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + ((width - cellSize * 53) / 2) + \",\" + (height - cellSize * 7 - 1) + \")\");\n\nsvg.append(\"text\")\n    .attr(\"transform\", \"translate(-6,\" + cellSize * 3.5 + \")rotate(-90)\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) { return d; });\n\nvar rect = svg.selectAll(\".day\")\n    .data(function(d) { return d3.time.days(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"rect\")\n    .attr(\"class\", \"day\")\n    .attr(\"width\", cellSize)\n    .attr(\"height\", cellSize)\n    .attr(\"x\", function(d) { return d3.time.weekOfYear(d) * cellSize; })\n    .attr(\"y\", function(d) { return d.getDay() * cellSize; })\n    .datum(format);\n\nrect.append(\"title\")\n    .text(function(d) { return d; });\n\nsvg.selectAll(\".month\")\n    .data(function(d) { return d3.time.months(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"path\")\n    .attr(\"class\", \"month\")\n    .attr(\"d\", monthPath);\n\nd3.csv(\"https://cdn.rawgit.com/john-guerra/ebda5bb43bc9c2fca1981c2d3d8a5e16/raw/c0923c4d3d8a6b693bb5c384bce33fc0374486f2/dji.csv\", function(error, csv) {\n  if (error) throw error;\n\n  var data = d3.nest()\n    .key(function(d) { return d.Date; })\n    .rollup(function(d) { return (d[0].Close - d[0].Open) / d[0].Open; })\n    .map(csv);\n\n  rect.filter(function(d) { return d in data; })\n      .attr(\"class\", function(d) { return \"day \" + color(data[d]); })\n    .select(\"title\")\n      .text(function(d) { return d + \": \" + percent(data[d]); });\n});\n\nfunction monthPath(t0) {\n  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),\n      d0 = t0.getDay(), w0 = d3.time.weekOfYear(t0),\n      d1 = t1.getDay(), w1 = d3.time.weekOfYear(t1);\n  return \"M\" + (w0 + 1) * cellSize + \",\" + d0 * cellSize\n      + \"H\" + w0 * cellSize + \"V\" + 7 * cellSize\n      + \"H\" + w1 * cellSize + \"V\" + (d1 + 1) * cellSize\n      + \"H\" + (w1 + 1) * cellSize + \"V\" + 0\n      + \"H\" + (w0 + 1) * cellSize + \"Z\";\n}\n\n</script>"
      description: "Calendar View"
      created_at: "2016-07-21T02:56:24Z"
      updated_at: "2016-07-21T02:57:26Z"
      api: 
        - "d3.format"
        - "d3.time.format"
        - "d3.scale.quantize"
        - "d3.range"
        - "d3.select"
        - "d3.time.days"
        - "d3.time.weekOfYear"
        - "d3.time.months"
        - "d3.csv"
        - "d3.nest"
      readme: "This example demonstrates loading of CSV data, which is then quantized into a diverging color scale. The values are visualized as colored cells per day. Days are arranged into columns by week, then grouped by month and years. Colors by [Cynthia Brewer](http://colorbrewer.org/). Layout inspired by [Rick Wicklin and Robert Allison](http://stat-computing.org/dataexpo/2009/posters/). Dow Jones historical data copyright [Yahoo! Finance](http://finance.yahoo.com/) or independent data provider; fair use for educational purposes.\n"
      uid: "john-guerra_ebda5bb43bc9c2fca1981c2d3d8a5e16"
    - 
      code: "<script>\n  function type(d) {\n  d[\"Expression (5 min)\"] = +d[\"Expression (5 min)\"];\n  d[\"Expression (30 min)\"] = +d[\"Expression (30 min)\"];\n  d[\"Expression (60 min)\"] = +d[\"Expression (60 min)\"];\n  return d;\n}\nd3.csv(\"dataConsolidated.csv\", type, function(error, data) {\n  if (error) throw error;\n\n/*var dataByTimePoint = d3.nest()\n  .key(function(d) { return d.TimePoint; })\n  .entries(data);\n  //console.log(dataByTimepoint);*/\n  \ndataLayer = function(g) {\n  return data.map(function(d, i) {\n    //console.log(d, i,g);\n    return {x: d.GeneNumber, y: d[g], Function: d.Function};\n  });\n};\n\nvar n = 3, // number of layers\n    m = 88, // number of samples per layer\n    stack = d3.layout.stack();\n    layers = stack(['Expression (5 min)', 'Expression (30 min)', 'Expression (60 min)'].map(function(a) { return dataLayer(a);}));\n    yGroupMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y; }); }),\n    yStackMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); });\nvar margin = {top: 40, right: 10, bottom: 80, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .domain(d3.range(1,m+1))\n    .rangeRoundBands([0, width], .08);\n\nvar y = d3.scale.linear()\n    .domain([0, yStackMax])\n    .range([height, 0]);\n\n/*var color = d3.scale.linear()\n    .domain([0, n - 1])\n    .range([\"#b5c062\", \"#834ed4\"]);*/\n  \nvar color = d3.scale.ordinal()\n\t\t.range(['gold', 'gray', 'purple']);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickSize(0)\n    .tickPadding(6)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");var yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n  \nvar layer = svg.selectAll(\".layer\")\n    .data(layers)\n  .enter().append(\"g\")\n    .attr(\"class\", \"layer\")\n    .style(\"fill\", function(d, i) { return color(i); });\n  \n\nvar rect = layer.selectAll(\"rect\")\n    .data(function(d) { return d; })\n  .enter().append(\"rect\")\n    .attr(\"x\", function(d) { return x(d.x); })\n    .attr(\"y\", height)\n    .attr(\"width\", x.rangeBand())\n    .attr(\"height\", 0);\n  \n var tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    console.log(d);\n    return \"<strong>Function:</strong> <span style='color:yellow'>\" + d.Function + \"</span>\";\n  });  \n  rect\n    .on('mouseover', tip.show)\n    .on('mouseout', tip.hide);;\n\nsvg.call(tip);\n  \n  \nrect.transition()\n    .delay(function(d, i) { return i * 10; })\n    .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n    .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); });\n  \n  x_group = svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n  \n  x_group\n    .selectAll(\"text\")\n  \t.attr(\"transform\", function (d) {return \"rotate(-60,\" + 0 + \",\" + 14 +  \")\"});\n  \n    svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .append(\"text\")\n\t  .attr(\"font-size\", 16)\n  \t.attr(\"text-anchor\", \"end\")\n    .attr(\"x\", width)\n    .attr(\"y\", height + margin.bottom/2)\n    .attr(\"shape-rendering\", \"crispEdges\")\n    .text(\"Kampy Gene Number\");\n   \n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n    .append(\"text\")\n  \t.attr(\"font-size\", 16)\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"Expression (RPKM)\");\n  \n  var legend = svg.selectAll(\".legend\")\n    .data(d3.keys(data[0]).slice(5))\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; })\n      .style(\"font\", \"10px sans-serif\");\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .attr(\"fill\", function(d,i) { return color(i);});\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\nd3.selectAll(\"input\").on(\"change\", change);\n\nvar timeout = setTimeout(function() {\n  d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n}, 2000);\n\nfunction change() {\n  clearTimeout(timeout);\n  if (this.value === \"grouped\") transitionGrouped();\n  else transitionStacked();\n}\n\nfunction transitionGrouped() {\n  y.domain([0, yGroupMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"x\", function(d, i, j) { return x(d.x) + x.rangeBand() / n * j; })\n      .attr(\"width\", x.rangeBand() / n)\n    .transition()\n      .attr(\"y\", function(d) { return y(d.y); })\n      .attr(\"height\", function(d) { return height - y(d.y); });\n}\n\nfunction transitionStacked() {\n  y.domain([0, yStackMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n      .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); })\n    .transition()\n      .attr(\"x\", function(d) { return x(d.x); })\n      .attr(\"width\", x.rangeBand());\n}\n\n});\n\n</script>"
      description: "bar chart 5"
      created_at: "2016-07-20T17:35:21Z"
      updated_at: "2016-07-21T15:14:56Z"
      api: 
        - "d3.csv"
        - "d3.nest"
        - "d3.layout.stack"
        - "d3.max"
        - "d3.scale.ordinal"
        - "d3.range"
        - "d3.scale.linear"
        - "d3.svg.axis"
        - "d3.select"
        - "d3.tip"
        - "d3.keys"
        - "d3.selectAll"
      readme: "Switch between stacked and grouped layouts using sequenced transitions! Animations preserve object constancy and allow the user to follow the data across views. Animation design by [Heer and Robertson](http://vis.berkeley.edu/papers/animated_transitions/). Colors and data generation inspired by [Byron and Wattenberg](http://www.leebyron.com/else/streamgraph/).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3943967'>Stacked-to-Grouped Bars</a>"
      uid: "scresawn_06f6218180abdd924af0c1a3d1db2d55"
    - 
      code: "<script>\n\n// options = [\"Animals Prohibited number\", \"Animals and Pests not specified\", \"Damaged or defective walls floors or ceilings\", \"Insects not specified\", \"Rodents not specified\", \"Unsanitary conditions not specified\", \"Abandoned Vehicle\", \"Animal Feces\", \"Animal Urine\", \"Barrier to Emergency Ingress or Egress\", \"Bed Bugs\", \"Building Dampness or Water Intrusion\", \"Cockroaches\", \"Cockroaches\", \"Dogs\", \"Flies\", \"Human Feces\", \"Human Urine\", \"Improper Refuse Storage\", \"Inadequate Heating\", \"Inadequate Lighting\", \"Inadequate Pest Exclusion\", \"Inadequate Ventilation\", \"Inadequate or Improper Kitchen Facilities\", \"Inoperable Windows\", \"Lead Hazard\", \"Mice\", \"Moderate risk food holding temperature\", \"Mold or Mildew\", \"Mosquitos\", \"No or inadequate hot or cold water\", \"Non-functioning Smoke Detector\", \"Nuisance Odors\", \"Overgrown Vegetation\", \"Pidgeons\", \"Poison Ivy or Poison Oak\", \"Rats\", \"Refuse Accumulation\", \"Refuse Not Properly Stored\", \"Sewage Hazard\", \"Standing Water\", \"Unsanitary Floors or Walls\", \"Unsanitary Public Areas\", \"Unsanitary Toilets or Bathrooms\"]  \n  \nvar violation_type = \"Overgrown Vegetation\";  \n  \nfunction plot(name) {\nd3.select(\"svg\").remove();\n \nmargin = {top: 40, right: 40, bottom: 40, left: 40},\nwidth = 960 - margin.left - margin.right,\nheight = 250 - margin.top - margin.bottom;  \n  \nvar svg = d3.select(\"body\").append(\"svg\")\n\t\t.attr(\"class\", \"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    \n\nvar formatValue = d3.format(\",d\");\n\nvar x = d3.scaleTime()\n    .rangeRound([0, width-50]);\n  \nvar color = d3.scaleOrdinal().domain([\"Animals Prohibited number\", \"Animals and Pests not specified\", \"Damaged or defective walls floors or ceilings\", \"Insects not specified\", \"Rodents not specified\", \"Unsanitary conditions not specified\", \"Abandoned Vehicle\", \"Animal Feces\", \"Animal Urine\", \"Barrier to Emergency Ingress or Egress\", \"Bed Bugs\", \"Building Dampness or Water Intrusion\", \"Cockroaches\", \"Cockroaches\", \"Dogs\", \"Flies\", \"Human Feces\", \"Human Urine\", \"Improper Refuse Storage\", \"Inadequate Heating\", \"Inadequate Lighting\", \"Inadequate Pest Exclusion\", \"Inadequate Ventilation\", \"Inadequate or Improper Kitchen Facilities\", \"Inoperable Windows\", \"Lead Hazard\", \"Mice\", \"Moderate risk food holding temperature\", \"Mold or Mildew\", \"Mosquitos\", \"No or inadequate hot or cold water\", \"Non-functioning Smoke Detector\", \"Nuisance Odors\", \"Overgrown Vegetation\", \"Pidgeons\", \"Poison Ivy or Poison Oak\", \"Rats\", \"Refuse Accumulation\", \"Refuse Not Properly Stored\", \"Sewage Hazard\", \"Standing Water\", \"Unsanitary Floors or Walls\", \"Unsanitary Public Areas\", \"Unsanitary Toilets or Bathrooms\"]).range([\"#0a72ff\", \"#1eff06\", \"#ff1902\", \"#2dfefe\", \"#827c01\", \"#fe07a6\", \"#a8879f\", \"#fcff04\", \"#c602fe\", \"#16be61\", \"#ff9569\", \"#05b3ff\", \"#ecffa7\", \"#3f8670\", \"#e992ff\", \"#ffb209\", \"#e72955\", \"#83bf02\", \"#bba67b\", \"#fe7eb1\", \"#7570c1\", \"#85bfd1\", \"#f97505\", \"#9f52e9\", \"#8ffec2\", \"#dad045\", \"#b85f60\", \"#fe4df2\", \"#75ff6c\", \"#78a55a\", \"#ae6a02\", \"#bebeff\", \"#ffb3b3\", \"#a4fe04\", \"#ffc876\", \"#c548a7\", \"#d6492b\", \"#547da7\", \"#358b06\", \"#95caa9\", \"#07b990\", \"#feb6e9\", \"#c9ff76\", \"#02b708\"])\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar parseDate = d3.timeParse(\"%Y-%m-%d\");\n\nd3.csv(\"Violations-2012.csv\", function(error, data) {\n  if (error) throw error;\n  \n  \n  data.map(function(d){\n//    console.log(parseDate(d.violation_date.split(\" \")[0]));\n//     console.log((d.violation_date).split(\" \")[0]);\n    return d.violation_date;\n  })\n  \n  var vio_by_type = d3.nest().key(function(d) {return d.violation_type}).entries(data);\n  var names = vio_by_type.map(function(f){return f.key});\n\n//  console.log(names);\n  \n  data_length = vio_by_type[names.indexOf(name)][\"values\"].length\n  \n  max_min = d3.extent(vio_by_type[names.indexOf(name)][\"values\"], function(d) {return parseDate(d.violation_date.split(\" \")[0]);})\n  \n   d3.select(\".container2\").html(\"Number of violations: \" + data_length)\n   \nd3.select(\".container2\").append(\"p\").html(\" First recorded Violation: \" + max_min[0])\n\nd3.select(\".container2\").append(\"p\").html(\" Last recorded Violation: \" + max_min[1])\n\n\n  x.domain(d3.extent(data, function(d) {return parseDate(d.violation_date.split(\" \")[0]); }));\n\n\n  var simulation = d3.forceSimulation(vio_by_type[names.indexOf(name)][\"values\"])\n      .force(\"x\", d3.forceX(function(d) { return x(parseDate(d.violation_date.split(\" \")[0])); }).strength(1))\n      .force(\"y\", d3.forceY(height / 2))\n      .force(\"collide\", d3.forceCollide(4))\n      .stop();\n\n  for (var i = 0; i < 120; ++i) simulation.tick();\n\n  g.append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", \"translate(0,\" + (height - 60) + \")\")\n      .call(d3.axisBottom(x).ticks(13, \"%m-%Y\"));\n\n  var cell = g.append(\"g\")\n      .attr(\"class\", \"cells\")\n    .selectAll(\"g\").data(d3.voronoi()\n        .extent([[-margin.left, -margin.top], [width + margin.right, height + margin.top]])\n        .x(function(d) { return d.x; })\n        .y(function(d) { return d.y; })\n      .polygons(vio_by_type[names.indexOf(name)][\"values\"])).enter().append(\"g\");\n\n  cell.append(\"circle\")\n      .attr(\"r\", 3)\n      .attr(\"cx\", function(d) { return d.data.x; })\n      .attr(\"cy\", function(d) { return d.data.y; })\n  \t\t.style(\"fill\", function(d) { return color(d.data.violation_type); });\n\n  cell.append(\"path\")\n      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; });\n\n  cell.append(\"title\")\n      .text(function(d) { return \"Violation id: \" + d.data.violation_id + \"\\n\" + \"Violation: \" +(d.data.violation_category) + \"-\" +(d.data.violation_type) + \"\\n\" + \"Violation date: \" + d.data.violation_date.split(\" \")[0]; });\n  \n});\n\n}\n\n\n$(\"#source li a\").click(function(){\n  violation_type = $(this).text();\n  $(\"#source:first-child\").text(violation_type);\n  plot(violation_type);\n});  \n  \nplot(\"Overgrown Vegetation\");  \n  \n</script>"
      description: "Housing Violations Data - 2012"
      created_at: "2016-07-15T02:25:31Z"
      updated_at: "2016-07-16T05:08:41Z"
      api: 
        - "d3.select"
        - "d3.format"
        - "d3.scaleTime"
        - "d3.scaleOrdinal"
        - "d3.timeParse"
        - "d3.csv"
        - "d3.nest"
        - "d3.extent"
        - "d3.forceSimulation"
        - "d3.forceX"
        - "d3.forceY"
        - "d3.forceCollide"
        - "d3.axisBottom"
        - "d3.voronoi"
      readme: "A beeswarm plot to visualize housing violations from 2012. Each point is a violation of the specified type.\n\nSelect different sorts of violations from the drop down menu. Hold your mouse over a point to reveal more details.\n\nThe beeswarm plot is a convenient modification of the scatterplot for one dimensional datasets where some data points have the same `x-value`. \n\n\nOriginal Example: <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block, <a href='http://bl.ocks.org/mbostock/6526445e2b44303eebf21da3b6627320'>Beeswarm</a>"
      uid: "BBischof_a9e166f26ea11e01d838273e34a043b6"
    - 
      code: "<script>\n\nvar formatDate = d3.time.format(\"%a\"),\n    formatDay = function(d) { return formatDate(new Date(2007, 0, d)); };\n\nvar width = 960,\n    height = 500,\n    outerRadius = height / 2 - 10,\n    innerRadius = 120;\n\nvar angle = d3.time.scale()\n    .range([0, 2 * Math.PI]);\n\nvar radius = d3.scale.linear()\n    .range([innerRadius, outerRadius]);\n\nvar z = d3.scale.category20c();\n\nvar stack = d3.layout.stack()\n    .offset(\"zero\")\n    .values(function(d) { return d.values; })\n    .x(function(d) { return d.time; })\n    .y(function(d) { return d.value; });\n\nvar nest = d3.nest()\n    .key(function(d) { return d.key; });\n\nvar line = d3.svg.line.radial()\n    .interpolate(\"cardinal-closed\")\n    .angle(function(d) { return angle(d.time); })\n    .radius(function(d) { return radius(d.y0 + d.y); });\n\nvar area = d3.svg.area.radial()\n    .interpolate(\"cardinal-closed\")\n    .angle(function(d) { return angle(d.time); })\n    .innerRadius(function(d) { return radius(d.y0); })\n    .outerRadius(function(d) { return radius(d.y0 + d.y); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  var layers = stack(nest.entries(data));\n\n  // Extend the domain slightly to match the range of [0, 2].\n  angle.domain([0, d3.max(data, function(d) { return d.time + 1; })]);\n  radius.domain([0, d3.max(data, function(d) { return d.y0 + d.y; })]);\n  \n  svg.selectAll(\".layer\")\n      .data(layers)\n    .enter().append(\"path\")\n      .attr(\"class\", \"layer\")\n      .attr(\"d\", function(d) { colosole.log(area(d.values)); return area(d.values); })\n      .style(\"fill\", function(d, i) { return z(i); });\n\n  svg.selectAll(\".axis\")\n      .data(d3.range(angle.domain()[1]))\n    .enter().append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + angle(d) * 180 / Math.PI + \")\"; })\n    .call(d3.svg.axis()\n      .scale(radius.copy().range([-innerRadius, -outerRadius]))\n      .orient(\"left\"))\n    .append(\"text\")\n      .attr(\"y\", -innerRadius + 6)\n      .attr(\"dy\", \".71em\")\n      .attr(\"text-anchor\", \"middle\")\n      .text(function(d) { return formatDay(d); });\n});\n\nfunction type(d) {\n  d.time = +d.time;\n  d.value = +d.value;\n  return d;\n}\n\n</script>"
      description: "Stacked Radial Area"
      created_at: "2016-07-13T00:43:37Z"
      updated_at: "2016-07-14T20:36:11Z"
      api: 
        - "d3.time.format"
        - "d3.time.scale"
        - "d3.scale.linear"
        - "d3.scale.category20c"
        - "d3.layout.stack"
        - "d3.nest"
        - "d3.svg.line.radial"
        - "d3.svg.area.radial"
        - "d3.select"
        - "d3.csv"
        - "d3.max"
        - "d3.range"
        - "d3.svg.axis"
      readme: "This plot might be suitable for showing cyclical trends, though I'm not sure it’s a great idea as the radial display has a number of limitations:\n\n* The underlying data goes from Sunday to Saturday, but the chart shows continuity from Saturday through to the previous Sunday. Time does not flow backwards, so you might instead prefer to plot two values for Sunday; this would show a discontinuity on opposite sides of the Sunday axis.\n\n* Displaying the discontinuity requires an [open interpolator](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line_interpolate), rather than cardinal-closed as used here. However, this causes the tangents of the incoming and outgoing lines to no longer be orthogonal to the axis. To display the discontinuity properly, you’d need to write a custom interpolator to generate the correct tangents.\n\n* Due to the interpolation taking place in Cartesian (rather than polar) coordinates, the intermediate values of the lines do not have the correct radial values: if you tried to measure the intermediate values using the radius, they would be wrong. The only way to fix this is to interpolate in polar coordinates, which requires plotting the intermediate values as [Archimedian spirals](http://en.wikipedia.org/wiki/Archimedean_spiral). There is no native representation for spirals in SVG, so you must resample the spirals as piecewise Bézier curves. Needless to say, this is a fair amount of work, but it might be something D3 supports in the future.\n\nPolar charts are pretty. But when in doubt, it’s probably best to stick to Cartesian coordinates.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3048740'>Stacked Radial Area</a>"
      uid: "guoliu_d45d126ffcd3cb118e9a2a96385a3f67"
    - 
      code: "<script>\n  \nvar units = \"FTE\";\n \nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 900 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n \nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scale.category20();\n \n// append the svg canvas to the page\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n \n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(10)\n    .size([width, height]);\n \nvar path = sankey.link();\n \n// load the data\nd3.json(\"sankeyData3.json\", function(error, graph) {\n \n    var nodeMap = {};\n    graph.nodes.forEach(function(x) { nodeMap[x.name] = x; });\n    graph.links = graph.links.map(function(x) {\n      return {\n        source: nodeMap[x.source],\n        target: nodeMap[x.target],\n        value: x.value\n      };\n    });\n \n  sankey\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .layout(32);\n \n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n \n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n      \treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n \n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n      .origin(function(d) { return d; })\n      .on(\"dragstart\", function() { \n\t\t  this.parentNode.appendChild(this); })\n      .on(\"drag\", dragmove));\n \n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n \n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".15em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n \n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \n        \"translate(\" + (\n        \t   d.x = Math.max(0, Math.min(width - d.dx, d3.event.x))\n        \t) + \",\" + (\n                   d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n            ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n \n</script>"
      description: "d3SankeyPoC"
      created_at: "2016-07-11T11:38:32Z"
      updated_at: "2016-07-11T16:32:34Z"
      api: 
        - "d3.format"
        - "d3.scale.category20"
        - "d3.select"
        - "d3.sankey"
        - "d3.json"
        - "d3.behavior.drag"
        - "d3.rgb"
        - "d3.interpolateNumber"
        - "d3.sum"
        - "d3.min"
        - "d3.nest"
      readme: "Built with [blockbuilder.org](http://blockbuilder.org)"
      uid: "matt1306_20ff12316d51d27cdff5fa23b2f29f63"
  links: 
    - 
      source: "adiamaan92_fc203b4dec60c1dad51a7a60f20813da"
      value: 13
      target: "dhoboy_1178601925731459c224bd4d69a1791d"
      links: 
        - 
          target_end_line: 7
          source_start_line: 1
          source_end_line: 13
          source_confidence: 7
          target_start_line: 1
          target_confidence: 9
    - 
      source: "seemantk_9322bd4124af02d44d596cdfd247459c"
      value: 14
      target: "sadbumblebee_89d9cc90e17eca55e880405404690d91"
      links: 
        - 
          target_end_line: 6
          source_start_line: 38
          source_end_line: 6
          source_confidence: 14
          target_start_line: 40
          target_confidence: 7
        - 
          target_end_line: 45
          source_start_line: 51
          source_end_line: 45
          source_confidence: 14
          target_start_line: 54
          target_confidence: 7
        - 
          target_end_line: 133
          source_start_line: 98
          source_end_line: 133
          source_confidence: 14
          target_start_line: 104
          target_confidence: 7
        - 
          target_end_line: 6
          source_start_line: 38
          source_end_line: 6
          source_confidence: 14
          target_start_line: 40
          target_confidence: 7
        - 
          target_end_line: 45
          source_start_line: 51
          source_end_line: 45
          source_confidence: 14
          target_start_line: 54
          target_confidence: 7
        - 
          target_end_line: 133
          source_start_line: 98
          source_end_line: 133
          source_confidence: 14
          target_start_line: 104
          target_confidence: 7
        - 
          target_end_line: 6
          source_start_line: 38
          source_end_line: 6
          source_confidence: 14
          target_start_line: 40
          target_confidence: 7
        - 
          target_end_line: 45
          source_start_line: 51
          source_end_line: 45
          source_confidence: 14
          target_start_line: 54
          target_confidence: 7
        - 
          target_end_line: 133
          source_start_line: 98
          source_end_line: 133
          source_confidence: 14
          target_start_line: 104
          target_confidence: 7
    - 
      source: "espinielli_950dd177406e91f97ff755c56343c2d3"
      value: 18
      target: "kimalbrecht_0f38f05ab18357ef07e41b71a4f079c6"
      links: 
        - 
          target_end_line: 185
          source_start_line: 26
          source_end_line: 33
          source_confidence: 4
          target_start_line: 178
          target_confidence: 4
        - 
          target_end_line: 74
          source_start_line: 94
          source_end_line: 103
          source_confidence: 4
          target_start_line: 66
          target_confidence: 4
        - 
          target_end_line: 185
          source_start_line: 26
          source_end_line: 33
          source_confidence: 4
          target_start_line: 178
          target_confidence: 4
        - 
          target_end_line: 74
          source_start_line: 94
          source_end_line: 103
          source_confidence: 4
          target_start_line: 66
          target_confidence: 4
    - 
      source: "steveharoz_f74e5549ccd2884a5f61f488876f0fa6"
      value: 11
      target: "f94f_b95fc00044614dd0441317d94bdb968f"
      links: 
        - 
          target_end_line: 178
          source_start_line: 14
          source_end_line: 178
          source_confidence: 15
          target_start_line: 19
          target_confidence: 8
        - 
          target_end_line: 138
          source_start_line: 5
          source_end_line: 138
          source_confidence: 15
          target_start_line: 9
          target_confidence: 8
        - 
          target_end_line: 178
          source_start_line: 14
          source_end_line: 178
          source_confidence: 15
          target_start_line: 19
          target_confidence: 8
        - 
          target_end_line: 138
          source_start_line: 5
          source_end_line: 138
          source_confidence: 15
          target_start_line: 9
          target_confidence: 8
    - 
      source: "steveharoz_f74e5549ccd2884a5f61f488876f0fa6"
      value: 11
      target: "f94f_27d6b22dd88a68588fdcf1dc198d06de"
      links: 
        - 
          target_end_line: 178
          source_start_line: 14
          source_end_line: 178
          source_confidence: 15
          target_start_line: 19
          target_confidence: 8
        - 
          target_end_line: 138
          source_start_line: 5
          source_end_line: 138
          source_confidence: 15
          target_start_line: 9
          target_confidence: 8
        - 
          target_end_line: 178
          source_start_line: 14
          source_end_line: 178
          source_confidence: 15
          target_start_line: 19
          target_confidence: 8
        - 
          target_end_line: 138
          source_start_line: 5
          source_end_line: 138
          source_confidence: 15
          target_start_line: 9
          target_confidence: 8
    - 
      source: "steveharoz_f74e5549ccd2884a5f61f488876f0fa6"
      value: 98
      target: "d3noob_d7800f34062b116f9ec0588f2e85e549"
      links: 
        - 
          target_end_line: 118
          source_start_line: 59
          source_end_line: 118
          source_confidence: 95
          target_start_line: 100
          target_confidence: 85
        - 
          target_end_line: 70
          source_start_line: 33
          source_end_line: 70
          source_confidence: 95
          target_start_line: 58
          target_confidence: 85
        - 
          target_end_line: 32
          source_start_line: 13
          source_end_line: 32
          source_confidence: 95
          target_start_line: 30
          target_confidence: 85
        - 
          target_end_line: 8
          source_start_line: 5
          source_end_line: 8
          source_confidence: 95
          target_start_line: 7
          target_confidence: 85
        - 
          target_end_line: 13
          source_start_line: 9
          source_end_line: 13
          source_confidence: 95
          target_start_line: 11
          target_confidence: 85
        - 
          target_end_line: 118
          source_start_line: 59
          source_end_line: 118
          source_confidence: 95
          target_start_line: 100
          target_confidence: 85
        - 
          target_end_line: 70
          source_start_line: 33
          source_end_line: 70
          source_confidence: 95
          target_start_line: 58
          target_confidence: 85
        - 
          target_end_line: 32
          source_start_line: 13
          source_end_line: 32
          source_confidence: 95
          target_start_line: 30
          target_confidence: 85
        - 
          target_end_line: 8
          source_start_line: 5
          source_end_line: 8
          source_confidence: 95
          target_start_line: 7
          target_confidence: 85
        - 
          target_end_line: 13
          source_start_line: 9
          source_end_line: 13
          source_confidence: 95
          target_start_line: 11
          target_confidence: 85
        - 
          target_end_line: 118
          source_start_line: 59
          source_end_line: 118
          source_confidence: 95
          target_start_line: 100
          target_confidence: 85
        - 
          target_end_line: 70
          source_start_line: 33
          source_end_line: 70
          source_confidence: 95
          target_start_line: 58
          target_confidence: 85
        - 
          target_end_line: 32
          source_start_line: 13
          source_end_line: 32
          source_confidence: 95
          target_start_line: 30
          target_confidence: 85
        - 
          target_end_line: 8
          source_start_line: 5
          source_end_line: 8
          source_confidence: 95
          target_start_line: 7
          target_confidence: 85
        - 
          target_end_line: 13
          source_start_line: 9
          source_end_line: 13
          source_confidence: 95
          target_start_line: 11
          target_confidence: 85
        - 
          target_end_line: 118
          source_start_line: 59
          source_end_line: 118
          source_confidence: 95
          target_start_line: 100
          target_confidence: 85
        - 
          target_end_line: 70
          source_start_line: 33
          source_end_line: 70
          source_confidence: 95
          target_start_line: 58
          target_confidence: 85
        - 
          target_end_line: 32
          source_start_line: 13
          source_end_line: 32
          source_confidence: 95
          target_start_line: 30
          target_confidence: 85
        - 
          target_end_line: 8
          source_start_line: 5
          source_end_line: 8
          source_confidence: 95
          target_start_line: 7
          target_confidence: 85
        - 
          target_end_line: 13
          source_start_line: 9
          source_end_line: 13
          source_confidence: 95
          target_start_line: 11
          target_confidence: 85
        - 
          target_end_line: 118
          source_start_line: 59
          source_end_line: 118
          source_confidence: 95
          target_start_line: 100
          target_confidence: 85
        - 
          target_end_line: 70
          source_start_line: 33
          source_end_line: 70
          source_confidence: 95
          target_start_line: 58
          target_confidence: 85
        - 
          target_end_line: 32
          source_start_line: 13
          source_end_line: 32
          source_confidence: 95
          target_start_line: 30
          target_confidence: 85
        - 
          target_end_line: 8
          source_start_line: 5
          source_end_line: 8
          source_confidence: 95
          target_start_line: 7
          target_confidence: 85
        - 
          target_end_line: 13
          source_start_line: 9
          source_end_line: 13
          source_confidence: 95
          target_start_line: 11
          target_confidence: 85
    - 
      source: "steveharoz_f74e5549ccd2884a5f61f488876f0fa6"
      value: 101
      target: "d3noob_3337957c360d55c245f6057ab0866c05"
      links: 
        - 
          target_end_line: 61
          source_start_line: 13
          source_end_line: 61
          source_confidence: 95
          target_start_line: 59
          target_confidence: 90
        - 
          target_end_line: 98
          source_start_line: 60
          source_end_line: 98
          source_confidence: 95
          target_start_line: 92
          target_confidence: 90
        - 
          target_end_line: 108
          source_start_line: 92
          source_end_line: 108
          source_confidence: 95
          target_start_line: 100
          target_confidence: 90
        - 
          target_end_line: 8
          source_start_line: 5
          source_end_line: 8
          source_confidence: 95
          target_start_line: 7
          target_confidence: 90
        - 
          target_end_line: 13
          source_start_line: 9
          source_end_line: 13
          source_confidence: 95
          target_start_line: 11
          target_confidence: 90
        - 
          target_end_line: 61
          source_start_line: 13
          source_end_line: 61
          source_confidence: 95
          target_start_line: 59
          target_confidence: 90
        - 
          target_end_line: 98
          source_start_line: 60
          source_end_line: 98
          source_confidence: 95
          target_start_line: 92
          target_confidence: 90
        - 
          target_end_line: 108
          source_start_line: 92
          source_end_line: 108
          source_confidence: 95
          target_start_line: 100
          target_confidence: 90
        - 
          target_end_line: 8
          source_start_line: 5
          source_end_line: 8
          source_confidence: 95
          target_start_line: 7
          target_confidence: 90
        - 
          target_end_line: 13
          source_start_line: 9
          source_end_line: 13
          source_confidence: 95
          target_start_line: 11
          target_confidence: 90
        - 
          target_end_line: 61
          source_start_line: 13
          source_end_line: 61
          source_confidence: 95
          target_start_line: 59
          target_confidence: 90
        - 
          target_end_line: 98
          source_start_line: 60
          source_end_line: 98
          source_confidence: 95
          target_start_line: 92
          target_confidence: 90
        - 
          target_end_line: 108
          source_start_line: 92
          source_end_line: 108
          source_confidence: 95
          target_start_line: 100
          target_confidence: 90
        - 
          target_end_line: 8
          source_start_line: 5
          source_end_line: 8
          source_confidence: 95
          target_start_line: 7
          target_confidence: 90
        - 
          target_end_line: 13
          source_start_line: 9
          source_end_line: 13
          source_confidence: 95
          target_start_line: 11
          target_confidence: 90
        - 
          target_end_line: 61
          source_start_line: 13
          source_end_line: 61
          source_confidence: 95
          target_start_line: 59
          target_confidence: 90
        - 
          target_end_line: 98
          source_start_line: 60
          source_end_line: 98
          source_confidence: 95
          target_start_line: 92
          target_confidence: 90
        - 
          target_end_line: 108
          source_start_line: 92
          source_end_line: 108
          source_confidence: 95
          target_start_line: 100
          target_confidence: 90
        - 
          target_end_line: 8
          source_start_line: 5
          source_end_line: 8
          source_confidence: 95
          target_start_line: 7
          target_confidence: 90
        - 
          target_end_line: 13
          source_start_line: 9
          source_end_line: 13
          source_confidence: 95
          target_start_line: 11
          target_confidence: 90
        - 
          target_end_line: 61
          source_start_line: 13
          source_end_line: 61
          source_confidence: 95
          target_start_line: 59
          target_confidence: 90
        - 
          target_end_line: 98
          source_start_line: 60
          source_end_line: 98
          source_confidence: 95
          target_start_line: 92
          target_confidence: 90
        - 
          target_end_line: 108
          source_start_line: 92
          source_end_line: 108
          source_confidence: 95
          target_start_line: 100
          target_confidence: 90
        - 
          target_end_line: 8
          source_start_line: 5
          source_end_line: 8
          source_confidence: 95
          target_start_line: 7
          target_confidence: 90
        - 
          target_end_line: 13
          source_start_line: 9
          source_end_line: 13
          source_confidence: 95
          target_start_line: 11
          target_confidence: 90
    - 
      source: "steveharoz_f74e5549ccd2884a5f61f488876f0fa6"
      value: 100
      target: "d3noob_013054e8d7807dff76247b81b0e29030"
      links: 
        - 
          target_end_line: 61
          source_start_line: 13
          source_end_line: 61
          source_confidence: 95
          target_start_line: 59
          target_confidence: 93
        - 
          target_end_line: 108
          source_start_line: 60
          source_end_line: 108
          source_confidence: 95
          target_start_line: 100
          target_confidence: 93
        - 
          target_end_line: 8
          source_start_line: 5
          source_end_line: 8
          source_confidence: 95
          target_start_line: 7
          target_confidence: 93
        - 
          target_end_line: 13
          source_start_line: 9
          source_end_line: 13
          source_confidence: 95
          target_start_line: 11
          target_confidence: 93
        - 
          target_end_line: 61
          source_start_line: 13
          source_end_line: 61
          source_confidence: 95
          target_start_line: 59
          target_confidence: 93
        - 
          target_end_line: 108
          source_start_line: 60
          source_end_line: 108
          source_confidence: 95
          target_start_line: 100
          target_confidence: 93
        - 
          target_end_line: 8
          source_start_line: 5
          source_end_line: 8
          source_confidence: 95
          target_start_line: 7
          target_confidence: 93
        - 
          target_end_line: 13
          source_start_line: 9
          source_end_line: 13
          source_confidence: 95
          target_start_line: 11
          target_confidence: 93
        - 
          target_end_line: 61
          source_start_line: 13
          source_end_line: 61
          source_confidence: 95
          target_start_line: 59
          target_confidence: 93
        - 
          target_end_line: 108
          source_start_line: 60
          source_end_line: 108
          source_confidence: 95
          target_start_line: 100
          target_confidence: 93
        - 
          target_end_line: 8
          source_start_line: 5
          source_end_line: 8
          source_confidence: 95
          target_start_line: 7
          target_confidence: 93
        - 
          target_end_line: 13
          source_start_line: 9
          source_end_line: 13
          source_confidence: 95
          target_start_line: 11
          target_confidence: 93
        - 
          target_end_line: 61
          source_start_line: 13
          source_end_line: 61
          source_confidence: 95
          target_start_line: 59
          target_confidence: 93
        - 
          target_end_line: 108
          source_start_line: 60
          source_end_line: 108
          source_confidence: 95
          target_start_line: 100
          target_confidence: 93
        - 
          target_end_line: 8
          source_start_line: 5
          source_end_line: 8
          source_confidence: 95
          target_start_line: 7
          target_confidence: 93
        - 
          target_end_line: 13
          source_start_line: 9
          source_end_line: 13
          source_confidence: 95
          target_start_line: 11
          target_confidence: 93
    - 
      source: "john-guerra_653dff16b54df2ad2682c8dd0cfbe27a"
      value: 236
      target: "willroj_d87455dc1bde4da407a064e61067618a"
      links: 
        - 
          target_end_line: 236
          source_start_line: 1
          source_end_line: 236
          source_confidence: 99
          target_start_line: 1
          target_confidence: 99
    - 
      source: "lesevimx_f62076d9ed54b381f928f2cee4ccf33a"
      value: 11
      target: "steveharoz_f74e5549ccd2884a5f61f488876f0fa6"
      links: 
        - 
          target_end_line: 19
          source_start_line: 60
          source_end_line: 64
          source_confidence: 9
          target_start_line: 14
          target_confidence: 15
        - 
          target_end_line: 9
          source_start_line: 29
          source_end_line: 33
          source_confidence: 9
          target_start_line: 5
          target_confidence: 15
        - 
          target_end_line: 19
          source_start_line: 60
          source_end_line: 64
          source_confidence: 9
          target_start_line: 14
          target_confidence: 15
        - 
          target_end_line: 9
          source_start_line: 29
          source_end_line: 33
          source_confidence: 9
          target_start_line: 5
          target_confidence: 15
    - 
      source: "espinielli_950dd177406e91f97ff755c56343c2d3"
      value: 20
      target: "seemantk_1961965b6897653e750cdc12b8c8abdb"
      links: 
        - 
          target_end_line: 68
          source_start_line: 72
          source_end_line: 75
          source_confidence: 7
          target_start_line: 64
          target_confidence: 9
        - 
          target_end_line: 106
          source_start_line: 89
          source_end_line: 94
          source_confidence: 7
          target_start_line: 101
          target_confidence: 9
        - 
          target_end_line: 135
          source_start_line: 94
          source_end_line: 103
          source_confidence: 7
          target_start_line: 127
          target_confidence: 9
        - 
          target_end_line: 68
          source_start_line: 72
          source_end_line: 75
          source_confidence: 7
          target_start_line: 64
          target_confidence: 9
        - 
          target_end_line: 106
          source_start_line: 89
          source_end_line: 94
          source_confidence: 7
          target_start_line: 101
          target_confidence: 9
        - 
          target_end_line: 135
          source_start_line: 94
          source_end_line: 103
          source_confidence: 7
          target_start_line: 127
          target_confidence: 9
        - 
          target_end_line: 68
          source_start_line: 72
          source_end_line: 75
          source_confidence: 7
          target_start_line: 64
          target_confidence: 9
        - 
          target_end_line: 106
          source_start_line: 89
          source_end_line: 94
          source_confidence: 7
          target_start_line: 101
          target_confidence: 9
        - 
          target_end_line: 135
          source_start_line: 94
          source_end_line: 103
          source_confidence: 7
          target_start_line: 127
          target_confidence: 9
    - 
      source: "BBischof_6ee0112a3fa8158353686ff6cbb2848b"
      value: 11
      target: "espinielli_950dd177406e91f97ff755c56343c2d3"
      links: 
        - 
          target_end_line: 31
          source_start_line: 8
          source_end_line: 12
          source_confidence: 6
          target_start_line: 26
          target_confidence: 4
        - 
          target_end_line: 78
          source_start_line: 23
          source_end_line: 26
          source_confidence: 6
          target_start_line: 74
          target_confidence: 4
        - 
          target_end_line: 31
          source_start_line: 8
          source_end_line: 12
          source_confidence: 6
          target_start_line: 26
          target_confidence: 4
        - 
          target_end_line: 78
          source_start_line: 23
          source_end_line: 26
          source_confidence: 6
          target_start_line: 74
          target_confidence: 4
    - 
      source: "BBischof_7e5e79af16bae653d4501b219981ed68"
      value: 14
      target: "gonzam88_9d48b4346fadb6b719a9ce9efb98a899"
      links: 
        - 
          target_end_line: 65
          source_start_line: 87
          source_end_line: 92
          source_confidence: 4
          target_start_line: 58
          target_confidence: 5
        - 
          target_end_line: 72
          source_start_line: 104
          source_end_line: 107
          source_confidence: 4
          target_start_line: 67
          target_confidence: 5
        - 
          target_end_line: 65
          source_start_line: 87
          source_end_line: 92
          source_confidence: 4
          target_start_line: 58
          target_confidence: 5
        - 
          target_end_line: 72
          source_start_line: 104
          source_end_line: 107
          source_confidence: 4
          target_start_line: 67
          target_confidence: 5
    - 
      source: "BBischof_7e5e79af16bae653d4501b219981ed68"
      value: 14
      target: "gonzam88_3ff2f33975ca8258f4aa9484be4255ce"
      links: 
        - 
          target_end_line: 66
          source_start_line: 87
          source_end_line: 92
          source_confidence: 4
          target_start_line: 59
          target_confidence: 4
        - 
          target_end_line: 73
          source_start_line: 104
          source_end_line: 107
          source_confidence: 4
          target_start_line: 68
          target_confidence: 4
        - 
          target_end_line: 66
          source_start_line: 87
          source_end_line: 92
          source_confidence: 4
          target_start_line: 59
          target_confidence: 4
        - 
          target_end_line: 73
          source_start_line: 104
          source_end_line: 107
          source_confidence: 4
          target_start_line: 68
          target_confidence: 4
    - 
      source: "Charisma9_12b983758cacb2536f8a406804b4bb01"
      value: 13
      target: "lesevimx_f62076d9ed54b381f928f2cee4ccf33a"
      links: 
        - 
          target_end_line: 69
          source_start_line: 45
          source_end_line: 53
          source_confidence: 12
          target_start_line: 60
          target_confidence: 10
        - 
          target_end_line: 31
          source_start_line: 34
          source_end_line: 36
          source_confidence: 12
          target_start_line: 29
          target_confidence: 10
        - 
          target_end_line: 69
          source_start_line: 45
          source_end_line: 53
          source_confidence: 12
          target_start_line: 60
          target_confidence: 10
        - 
          target_end_line: 31
          source_start_line: 34
          source_end_line: 36
          source_confidence: 12
          target_start_line: 29
          target_confidence: 10
    - 
      source: "Charisma9_12b983758cacb2536f8a406804b4bb01"
      value: 13
      target: "lesevimx_cd4baaa37975ef932cfac7461327d104"
      links: 
        - 
          target_end_line: 69
          source_start_line: 45
          source_end_line: 53
          source_confidence: 12
          target_start_line: 60
          target_confidence: 10
        - 
          target_end_line: 31
          source_start_line: 34
          source_end_line: 36
          source_confidence: 12
          target_start_line: 29
          target_confidence: 10
        - 
          target_end_line: 69
          source_start_line: 45
          source_end_line: 53
          source_confidence: 12
          target_start_line: 60
          target_confidence: 10
        - 
          target_end_line: 31
          source_start_line: 34
          source_end_line: 36
          source_confidence: 12
          target_start_line: 29
          target_confidence: 10
    - 
      source: "monkeycycle_a492b5e0da787d2e3bbe86af450b4bf7"
      value: 19
      target: "Charisma9_60f68c24a5d6ad7934e15398770491ee"
      links: 
        - 
          target_end_line: 25
          source_start_line: 28
          source_end_line: 25
          source_confidence: 29
          target_start_line: 32
          target_confidence: 15
        - 
          target_end_line: 5
          source_start_line: 1
          source_end_line: 5
          source_confidence: 29
          target_start_line: 5
          target_confidence: 15
        - 
          target_end_line: 17
          source_start_line: 9
          source_end_line: 17
          source_confidence: 29
          target_start_line: 17
          target_confidence: 15
        - 
          target_end_line: 25
          source_start_line: 28
          source_end_line: 25
          source_confidence: 29
          target_start_line: 32
          target_confidence: 15
        - 
          target_end_line: 5
          source_start_line: 1
          source_end_line: 5
          source_confidence: 29
          target_start_line: 5
          target_confidence: 15
        - 
          target_end_line: 17
          source_start_line: 9
          source_end_line: 17
          source_confidence: 29
          target_start_line: 17
          target_confidence: 15
        - 
          target_end_line: 25
          source_start_line: 28
          source_end_line: 25
          source_confidence: 29
          target_start_line: 32
          target_confidence: 15
        - 
          target_end_line: 5
          source_start_line: 1
          source_end_line: 5
          source_confidence: 29
          target_start_line: 5
          target_confidence: 15
        - 
          target_end_line: 17
          source_start_line: 9
          source_end_line: 17
          source_confidence: 29
          target_start_line: 17
          target_confidence: 15
    - 
      source: "BBischof_6ee0112a3fa8158353686ff6cbb2848b"
      value: 16
      target: "Charisma9_12b983758cacb2536f8a406804b4bb01"
      links: 
        - 
          target_end_line: 36
          source_start_line: 6
          source_end_line: 8
          source_confidence: 10
          target_start_line: 34
          target_confidence: 10
        - 
          target_end_line: 16
          source_start_line: 95
          source_end_line: 99
          source_confidence: 10
          target_start_line: 9
          target_confidence: 10
        - 
          target_end_line: 51
          source_start_line: 23
          source_end_line: 26
          source_confidence: 10
          target_start_line: 47
          target_confidence: 10
        - 
          target_end_line: 36
          source_start_line: 6
          source_end_line: 8
          source_confidence: 10
          target_start_line: 34
          target_confidence: 10
        - 
          target_end_line: 16
          source_start_line: 95
          source_end_line: 99
          source_confidence: 10
          target_start_line: 9
          target_confidence: 10
        - 
          target_end_line: 51
          source_start_line: 23
          source_end_line: 26
          source_confidence: 10
          target_start_line: 47
          target_confidence: 10
        - 
          target_end_line: 36
          source_start_line: 6
          source_end_line: 8
          source_confidence: 10
          target_start_line: 34
          target_confidence: 10
        - 
          target_end_line: 16
          source_start_line: 95
          source_end_line: 99
          source_confidence: 10
          target_start_line: 9
          target_confidence: 10
        - 
          target_end_line: 51
          source_start_line: 23
          source_end_line: 26
          source_confidence: 10
          target_start_line: 47
          target_confidence: 10
    - 
      source: "micahstubbs_89c6bd879d64aa511372064c6cf85711"
      value: 17
      target: "BBischof_7e5e79af16bae653d4501b219981ed68"
      links: 
        - 
          target_end_line: 48
          source_start_line: 28
          source_end_line: 48
          source_confidence: 20
          target_start_line: 34
          target_confidence: 9
        - 
          target_end_line: 33
          source_start_line: 12
          source_end_line: 33
          source_confidence: 20
          target_start_line: 15
          target_confidence: 9
        - 
          target_end_line: 107
          source_start_line: 47
          source_end_line: 107
          source_confidence: 20
          target_start_line: 52
          target_confidence: 9
        - 
          target_end_line: 48
          source_start_line: 28
          source_end_line: 48
          source_confidence: 20
          target_start_line: 34
          target_confidence: 9
        - 
          target_end_line: 33
          source_start_line: 12
          source_end_line: 33
          source_confidence: 20
          target_start_line: 15
          target_confidence: 9
        - 
          target_end_line: 107
          source_start_line: 47
          source_end_line: 107
          source_confidence: 20
          target_start_line: 52
          target_confidence: 9
        - 
          target_end_line: 48
          source_start_line: 28
          source_end_line: 48
          source_confidence: 20
          target_start_line: 34
          target_confidence: 9
        - 
          target_end_line: 33
          source_start_line: 12
          source_end_line: 33
          source_confidence: 20
          target_start_line: 15
          target_confidence: 9
        - 
          target_end_line: 107
          source_start_line: 47
          source_end_line: 107
          source_confidence: 20
          target_start_line: 52
          target_confidence: 9
    - 
      source: "scresawn_59a710a98e6a993cbcf30212a47bde24"
      value: 11
      target: "BBischof_6ee0112a3fa8158353686ff6cbb2848b"
      links: 
        - 
          target_end_line: 10
          source_start_line: 29
          source_end_line: 10
          source_confidence: 6
          target_start_line: 33
          target_confidence: 7
        - 
          target_end_line: 26
          source_start_line: 62
          source_end_line: 26
          source_confidence: 6
          target_start_line: 67
          target_confidence: 7
        - 
          target_end_line: 10
          source_start_line: 29
          source_end_line: 10
          source_confidence: 6
          target_start_line: 33
          target_confidence: 7
        - 
          target_end_line: 26
          source_start_line: 62
          source_end_line: 26
          source_confidence: 6
          target_start_line: 67
          target_confidence: 7
    - 
      source: "monkeycycle_a492b5e0da787d2e3bbe86af450b4bf7"
      value: 11
      target: "ymnder_b3b03d70e56084dba0544bddaad804b9"
      links: 
        - 
          target_end_line: 18
          source_start_line: 26
          source_end_line: 31
          source_confidence: 19
          target_start_line: 13
          target_confidence: 7
        - 
          target_end_line: 11
          source_start_line: 3
          source_end_line: 7
          source_confidence: 19
          target_start_line: 7
          target_confidence: 7
        - 
          target_end_line: 18
          source_start_line: 26
          source_end_line: 31
          source_confidence: 19
          target_start_line: 13
          target_confidence: 7
        - 
          target_end_line: 11
          source_start_line: 3
          source_end_line: 7
          source_confidence: 19
          target_start_line: 7
          target_confidence: 7
    - 
      source: "scresawn_59a710a98e6a993cbcf30212a47bde24"
      value: 13
      target: "alandunning_b7024b78bbd45f23ab5657db14fc63ff"
      links: 
        - 
          target_end_line: 6
          source_start_line: 29
          source_end_line: 6
          source_confidence: 9
          target_start_line: 31
          target_confidence: 10
        - 
          target_end_line: 34
          source_start_line: 60
          source_end_line: 34
          source_confidence: 9
          target_start_line: 62
          target_confidence: 10
        - 
          target_end_line: 39
          source_start_line: 62
          source_end_line: 39
          source_confidence: 9
          target_start_line: 68
          target_confidence: 10
        - 
          target_end_line: 6
          source_start_line: 29
          source_end_line: 6
          source_confidence: 9
          target_start_line: 31
          target_confidence: 10
        - 
          target_end_line: 34
          source_start_line: 60
          source_end_line: 34
          source_confidence: 9
          target_start_line: 62
          target_confidence: 10
        - 
          target_end_line: 39
          source_start_line: 62
          source_end_line: 39
          source_confidence: 9
          target_start_line: 68
          target_confidence: 10
        - 
          target_end_line: 6
          source_start_line: 29
          source_end_line: 6
          source_confidence: 9
          target_start_line: 31
          target_confidence: 10
        - 
          target_end_line: 34
          source_start_line: 60
          source_end_line: 34
          source_confidence: 9
          target_start_line: 62
          target_confidence: 10
        - 
          target_end_line: 39
          source_start_line: 62
          source_end_line: 39
          source_confidence: 9
          target_start_line: 68
          target_confidence: 10
    - 
      source: "micahstubbs_89c6bd879d64aa511372064c6cf85711"
      value: 17
      target: "BBischof_7607b90705281634c6da741c34d9ba7c"
      links: 
        - 
          target_end_line: 48
          source_start_line: 28
          source_end_line: 48
          source_confidence: 20
          target_start_line: 34
          target_confidence: 10
        - 
          target_end_line: 33
          source_start_line: 12
          source_end_line: 33
          source_confidence: 20
          target_start_line: 15
          target_confidence: 10
        - 
          target_end_line: 107
          source_start_line: 47
          source_end_line: 107
          source_confidence: 20
          target_start_line: 52
          target_confidence: 10
        - 
          target_end_line: 48
          source_start_line: 28
          source_end_line: 48
          source_confidence: 20
          target_start_line: 34
          target_confidence: 10
        - 
          target_end_line: 33
          source_start_line: 12
          source_end_line: 33
          source_confidence: 20
          target_start_line: 15
          target_confidence: 10
        - 
          target_end_line: 107
          source_start_line: 47
          source_end_line: 107
          source_confidence: 20
          target_start_line: 52
          target_confidence: 10
        - 
          target_end_line: 48
          source_start_line: 28
          source_end_line: 48
          source_confidence: 20
          target_start_line: 34
          target_confidence: 10
        - 
          target_end_line: 33
          source_start_line: 12
          source_end_line: 33
          source_confidence: 20
          target_start_line: 15
          target_confidence: 10
        - 
          target_end_line: 107
          source_start_line: 47
          source_end_line: 107
          source_confidence: 20
          target_start_line: 52
          target_confidence: 10
    - 
      source: "micahstubbs_89c6bd879d64aa511372064c6cf85711"
      value: 25
      target: "BBischof_1947ff949f969d6ca9be285705d57e16"
      links: 
        - 
          target_end_line: 38
          source_start_line: 28
          source_end_line: 38
          source_confidence: 27
          target_start_line: 34
          target_confidence: 17
        - 
          target_end_line: 100
          source_start_line: 57
          source_end_line: 100
          source_confidence: 27
          target_start_line: 60
          target_confidence: 17
        - 
          target_end_line: 23
          source_start_line: 12
          source_end_line: 23
          source_confidence: 27
          target_start_line: 15
          target_confidence: 17
        - 
          target_end_line: 88
          source_start_line: 48
          source_end_line: 88
          source_confidence: 27
          target_start_line: 52
          target_confidence: 17
        - 
          target_end_line: 38
          source_start_line: 28
          source_end_line: 38
          source_confidence: 27
          target_start_line: 34
          target_confidence: 17
        - 
          target_end_line: 100
          source_start_line: 57
          source_end_line: 100
          source_confidence: 27
          target_start_line: 60
          target_confidence: 17
        - 
          target_end_line: 23
          source_start_line: 12
          source_end_line: 23
          source_confidence: 27
          target_start_line: 15
          target_confidence: 17
        - 
          target_end_line: 88
          source_start_line: 48
          source_end_line: 88
          source_confidence: 27
          target_start_line: 52
          target_confidence: 17
        - 
          target_end_line: 38
          source_start_line: 28
          source_end_line: 38
          source_confidence: 27
          target_start_line: 34
          target_confidence: 17
        - 
          target_end_line: 100
          source_start_line: 57
          source_end_line: 100
          source_confidence: 27
          target_start_line: 60
          target_confidence: 17
        - 
          target_end_line: 23
          source_start_line: 12
          source_end_line: 23
          source_confidence: 27
          target_start_line: 15
          target_confidence: 17
        - 
          target_end_line: 88
          source_start_line: 48
          source_end_line: 88
          source_confidence: 27
          target_start_line: 52
          target_confidence: 17
        - 
          target_end_line: 38
          source_start_line: 28
          source_end_line: 38
          source_confidence: 27
          target_start_line: 34
          target_confidence: 17
        - 
          target_end_line: 100
          source_start_line: 57
          source_end_line: 100
          source_confidence: 27
          target_start_line: 60
          target_confidence: 17
        - 
          target_end_line: 23
          source_start_line: 12
          source_end_line: 23
          source_confidence: 27
          target_start_line: 15
          target_confidence: 17
        - 
          target_end_line: 88
          source_start_line: 48
          source_end_line: 88
          source_confidence: 27
          target_start_line: 52
          target_confidence: 17
    - 
      source: "BBischof_ce688f5edeff3339157e054eacc9725c"
      value: 78
      target: "micahstubbs_89c6bd879d64aa511372064c6cf85711"
      links: 
        - 
          target_end_line: 55
          source_start_line: 1
          source_end_line: 58
          source_confidence: 98
          target_start_line: 1
          target_confidence: 97
        - 
          target_end_line: 71
          source_start_line: 58
          source_end_line: 77
          source_confidence: 98
          target_start_line: 57
          target_confidence: 97
        - 
          target_end_line: 55
          source_start_line: 1
          source_end_line: 58
          source_confidence: 98
          target_start_line: 1
          target_confidence: 97
        - 
          target_end_line: 71
          source_start_line: 58
          source_end_line: 77
          source_confidence: 98
          target_start_line: 57
          target_confidence: 97
    - 
      source: "john-guerra_ebda5bb43bc9c2fca1981c2d3d8a5e16"
      value: 67
      target: "BBischof_ce688f5edeff3339157e054eacc9725c"
      links: 
        - 
          target_end_line: 29
          source_start_line: 11
          source_end_line: 29
          source_confidence: 84
          target_start_line: 29
          target_confidence: 83
        - 
          target_end_line: 58
          source_start_line: 42
          source_end_line: 58
          source_confidence: 84
          target_start_line: 55
          target_confidence: 83
        - 
          target_end_line: 77
          source_start_line: 64
          source_end_line: 77
          source_confidence: 84
          target_start_line: 69
          target_confidence: 83
        - 
          target_end_line: 34
          source_start_line: 30
          source_end_line: 34
          source_confidence: 84
          target_start_line: 34
          target_confidence: 83
        - 
          target_end_line: 43
          source_start_line: 34
          source_end_line: 43
          source_confidence: 84
          target_start_line: 42
          target_confidence: 83
        - 
          target_end_line: 8
          source_start_line: 1
          source_end_line: 8
          source_confidence: 84
          target_start_line: 8
          target_confidence: 83
        - 
          target_end_line: 71
          source_start_line: 61
          source_end_line: 71
          source_confidence: 84
          target_start_line: 63
          target_confidence: 83
        - 
          target_end_line: 29
          source_start_line: 11
          source_end_line: 29
          source_confidence: 84
          target_start_line: 29
          target_confidence: 83
        - 
          target_end_line: 58
          source_start_line: 42
          source_end_line: 58
          source_confidence: 84
          target_start_line: 55
          target_confidence: 83
        - 
          target_end_line: 77
          source_start_line: 64
          source_end_line: 77
          source_confidence: 84
          target_start_line: 69
          target_confidence: 83
        - 
          target_end_line: 34
          source_start_line: 30
          source_end_line: 34
          source_confidence: 84
          target_start_line: 34
          target_confidence: 83
        - 
          target_end_line: 43
          source_start_line: 34
          source_end_line: 43
          source_confidence: 84
          target_start_line: 42
          target_confidence: 83
        - 
          target_end_line: 8
          source_start_line: 1
          source_end_line: 8
          source_confidence: 84
          target_start_line: 8
          target_confidence: 83
        - 
          target_end_line: 71
          source_start_line: 61
          source_end_line: 71
          source_confidence: 84
          target_start_line: 63
          target_confidence: 83
        - 
          target_end_line: 29
          source_start_line: 11
          source_end_line: 29
          source_confidence: 84
          target_start_line: 29
          target_confidence: 83
        - 
          target_end_line: 58
          source_start_line: 42
          source_end_line: 58
          source_confidence: 84
          target_start_line: 55
          target_confidence: 83
        - 
          target_end_line: 77
          source_start_line: 64
          source_end_line: 77
          source_confidence: 84
          target_start_line: 69
          target_confidence: 83
        - 
          target_end_line: 34
          source_start_line: 30
          source_end_line: 34
          source_confidence: 84
          target_start_line: 34
          target_confidence: 83
        - 
          target_end_line: 43
          source_start_line: 34
          source_end_line: 43
          source_confidence: 84
          target_start_line: 42
          target_confidence: 83
        - 
          target_end_line: 8
          source_start_line: 1
          source_end_line: 8
          source_confidence: 84
          target_start_line: 8
          target_confidence: 83
        - 
          target_end_line: 71
          source_start_line: 61
          source_end_line: 71
          source_confidence: 84
          target_start_line: 63
          target_confidence: 83
        - 
          target_end_line: 29
          source_start_line: 11
          source_end_line: 29
          source_confidence: 84
          target_start_line: 29
          target_confidence: 83
        - 
          target_end_line: 58
          source_start_line: 42
          source_end_line: 58
          source_confidence: 84
          target_start_line: 55
          target_confidence: 83
        - 
          target_end_line: 77
          source_start_line: 64
          source_end_line: 77
          source_confidence: 84
          target_start_line: 69
          target_confidence: 83
        - 
          target_end_line: 34
          source_start_line: 30
          source_end_line: 34
          source_confidence: 84
          target_start_line: 34
          target_confidence: 83
        - 
          target_end_line: 43
          source_start_line: 34
          source_end_line: 43
          source_confidence: 84
          target_start_line: 42
          target_confidence: 83
        - 
          target_end_line: 8
          source_start_line: 1
          source_end_line: 8
          source_confidence: 84
          target_start_line: 8
          target_confidence: 83
        - 
          target_end_line: 71
          source_start_line: 61
          source_end_line: 71
          source_confidence: 84
          target_start_line: 63
          target_confidence: 83
        - 
          target_end_line: 29
          source_start_line: 11
          source_end_line: 29
          source_confidence: 84
          target_start_line: 29
          target_confidence: 83
        - 
          target_end_line: 58
          source_start_line: 42
          source_end_line: 58
          source_confidence: 84
          target_start_line: 55
          target_confidence: 83
        - 
          target_end_line: 77
          source_start_line: 64
          source_end_line: 77
          source_confidence: 84
          target_start_line: 69
          target_confidence: 83
        - 
          target_end_line: 34
          source_start_line: 30
          source_end_line: 34
          source_confidence: 84
          target_start_line: 34
          target_confidence: 83
        - 
          target_end_line: 43
          source_start_line: 34
          source_end_line: 43
          source_confidence: 84
          target_start_line: 42
          target_confidence: 83
        - 
          target_end_line: 8
          source_start_line: 1
          source_end_line: 8
          source_confidence: 84
          target_start_line: 8
          target_confidence: 83
        - 
          target_end_line: 71
          source_start_line: 61
          source_end_line: 71
          source_confidence: 84
          target_start_line: 63
          target_confidence: 83
        - 
          target_end_line: 29
          source_start_line: 11
          source_end_line: 29
          source_confidence: 84
          target_start_line: 29
          target_confidence: 83
        - 
          target_end_line: 58
          source_start_line: 42
          source_end_line: 58
          source_confidence: 84
          target_start_line: 55
          target_confidence: 83
        - 
          target_end_line: 77
          source_start_line: 64
          source_end_line: 77
          source_confidence: 84
          target_start_line: 69
          target_confidence: 83
        - 
          target_end_line: 34
          source_start_line: 30
          source_end_line: 34
          source_confidence: 84
          target_start_line: 34
          target_confidence: 83
        - 
          target_end_line: 43
          source_start_line: 34
          source_end_line: 43
          source_confidence: 84
          target_start_line: 42
          target_confidence: 83
        - 
          target_end_line: 8
          source_start_line: 1
          source_end_line: 8
          source_confidence: 84
          target_start_line: 8
          target_confidence: 83
        - 
          target_end_line: 71
          source_start_line: 61
          source_end_line: 71
          source_confidence: 84
          target_start_line: 63
          target_confidence: 83
        - 
          target_end_line: 29
          source_start_line: 11
          source_end_line: 29
          source_confidence: 84
          target_start_line: 29
          target_confidence: 83
        - 
          target_end_line: 58
          source_start_line: 42
          source_end_line: 58
          source_confidence: 84
          target_start_line: 55
          target_confidence: 83
        - 
          target_end_line: 77
          source_start_line: 64
          source_end_line: 77
          source_confidence: 84
          target_start_line: 69
          target_confidence: 83
        - 
          target_end_line: 34
          source_start_line: 30
          source_end_line: 34
          source_confidence: 84
          target_start_line: 34
          target_confidence: 83
        - 
          target_end_line: 43
          source_start_line: 34
          source_end_line: 43
          source_confidence: 84
          target_start_line: 42
          target_confidence: 83
        - 
          target_end_line: 8
          source_start_line: 1
          source_end_line: 8
          source_confidence: 84
          target_start_line: 8
          target_confidence: 83
        - 
          target_end_line: 71
          source_start_line: 61
          source_end_line: 71
          source_confidence: 84
          target_start_line: 63
          target_confidence: 83
    - 
      source: "john-guerra_ebda5bb43bc9c2fca1981c2d3d8a5e16"
      value: 15
      target: "BBischof_f5d266a7ea553cf89d3e6134cd732984"
      links: 
        - 
          target_end_line: 38
          source_start_line: 29
          source_end_line: 38
          source_confidence: 18
          target_start_line: 34
          target_confidence: 8
        - 
          target_end_line: 23
          source_start_line: 12
          source_end_line: 23
          source_confidence: 18
          target_start_line: 15
          target_confidence: 8
        - 
          target_end_line: 127
          source_start_line: 48
          source_end_line: 127
          source_confidence: 18
          target_start_line: 52
          target_confidence: 8
        - 
          target_end_line: 38
          source_start_line: 29
          source_end_line: 38
          source_confidence: 18
          target_start_line: 34
          target_confidence: 8
        - 
          target_end_line: 23
          source_start_line: 12
          source_end_line: 23
          source_confidence: 18
          target_start_line: 15
          target_confidence: 8
        - 
          target_end_line: 127
          source_start_line: 48
          source_end_line: 127
          source_confidence: 18
          target_start_line: 52
          target_confidence: 8
        - 
          target_end_line: 38
          source_start_line: 29
          source_end_line: 38
          source_confidence: 18
          target_start_line: 34
          target_confidence: 8
        - 
          target_end_line: 23
          source_start_line: 12
          source_end_line: 23
          source_confidence: 18
          target_start_line: 15
          target_confidence: 8
        - 
          target_end_line: 127
          source_start_line: 48
          source_end_line: 127
          source_confidence: 18
          target_start_line: 52
          target_confidence: 8
    - 
      source: "scresawn_59a710a98e6a993cbcf30212a47bde24"
      value: 11
      target: "BBischof_f463291ee5d339b74f21c5ddbfbf798d"
      links: 
        - 
          target_end_line: 14
          source_start_line: 29
          source_end_line: 14
          source_confidence: 6
          target_start_line: 33
          target_confidence: 8
        - 
          target_end_line: 30
          source_start_line: 62
          source_end_line: 30
          source_confidence: 6
          target_start_line: 67
          target_confidence: 8
        - 
          target_end_line: 14
          source_start_line: 29
          source_end_line: 14
          source_confidence: 6
          target_start_line: 33
          target_confidence: 8
        - 
          target_end_line: 30
          source_start_line: 62
          source_end_line: 30
          source_confidence: 6
          target_start_line: 67
          target_confidence: 8
    - 
      source: "scresawn_59a710a98e6a993cbcf30212a47bde24"
      value: 11
      target: "monkeycycle_a492b5e0da787d2e3bbe86af450b4bf7"
      links: 
        - 
          target_end_line: 32
          source_start_line: 60
          source_end_line: 32
          source_confidence: 9
          target_start_line: 64
          target_confidence: 23
        - 
          target_end_line: 8
          source_start_line: 29
          source_end_line: 8
          source_confidence: 9
          target_start_line: 34
          target_confidence: 23
        - 
          target_end_line: 32
          source_start_line: 60
          source_end_line: 32
          source_confidence: 9
          target_start_line: 64
          target_confidence: 23
        - 
          target_end_line: 8
          source_start_line: 29
          source_end_line: 8
          source_confidence: 9
          target_start_line: 34
          target_confidence: 23
    - 
      source: "BBischof_a9e166f26ea11e01d838273e34a043b6"
      value: 11
      target: "scresawn_59a710a98e6a993cbcf30212a47bde24"
      links: 
        - 
          target_end_line: 33
          source_start_line: 10
          source_end_line: 14
          source_confidence: 8
          target_start_line: 29
          target_confidence: 6
        - 
          target_end_line: 67
          source_start_line: 27
          source_end_line: 30
          source_confidence: 8
          target_start_line: 62
          target_confidence: 6
        - 
          target_end_line: 33
          source_start_line: 10
          source_end_line: 14
          source_confidence: 8
          target_start_line: 29
          target_confidence: 6
        - 
          target_end_line: 67
          source_start_line: 27
          source_end_line: 30
          source_confidence: 8
          target_start_line: 62
          target_confidence: 6
    - 
      source: "BBischof_a9e166f26ea11e01d838273e34a043b6"
      value: 11
      target: "scresawn_06f6218180abdd924af0c1a3d1db2d55"
      links: 
        - 
          target_end_line: 33
          source_start_line: 10
          source_end_line: 14
          source_confidence: 8
          target_start_line: 29
          target_confidence: 6
        - 
          target_end_line: 67
          source_start_line: 27
          source_end_line: 30
          source_confidence: 8
          target_start_line: 62
          target_confidence: 6
        - 
          target_end_line: 33
          source_start_line: 10
          source_end_line: 14
          source_confidence: 8
          target_start_line: 29
          target_confidence: 6
        - 
          target_end_line: 67
          source_start_line: 27
          source_end_line: 30
          source_confidence: 8
          target_start_line: 62
          target_confidence: 6

